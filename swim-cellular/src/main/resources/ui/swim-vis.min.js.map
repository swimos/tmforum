{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","../../../chart/main/tick/TickView.ts","../../../gauge/main/DialView.ts","../../../gauge/main/GaugeView.ts","../../../pie/main/SliceView.ts","../../../pie/main/PieView.ts","../../../chart/main/tick/TopTickView.ts","../../../chart/main/tick/RightTickView.ts","../../../chart/main/tick/BottomTickView.ts","../../../chart/main/tick/LeftTickView.ts","../../../chart/main/tick/TickGenerator.ts","../../../chart/main/axis/AxisView.ts","../../../chart/main/axis/AxisViewController.ts","../../../chart/main/axis/TopAxisView.ts","../../../chart/main/axis/RightAxisView.ts","../../../chart/main/axis/BottomAxisView.ts","../../../chart/main/axis/LeftAxisView.ts","../../../chart/main/data/DatumView.ts","../../../chart/main/plot/PlotView.ts","../../../chart/main/plot/PlotViewController.ts","../../../chart/main/plot/BubblePlotView.ts","../../../chart/main/graph/GraphView.ts","../../../chart/main/graph/GraphViewController.ts","../../../chart/main/graph/LineGraphView.ts","../../../chart/main/graph/AreaGraphView.ts","../../../chart/main/ChartView.ts","../../../chart/main/ChartViewController.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","TickState","DialView","_this","_super","call","_arrangement","_viewController","label","getChildView","View","TextRunView","fromAny","setChildView","legend","arrangement","onRender","viewContext","renderer","CanvasRenderer","isHidden","isCulled","context","save","renderDial","viewFrame","restore","frame","width","height","size","Math","min","value","total","delta","center","innerRadius","px","outerRadius","deltaRadius","startAngle","rad","sweepAngle","cornerRadius","dial","Arc","Angle","zero","meter","times","beginPath","fillStyle","dialColor","toString","draw","fill","clip","meterColor","RenderedView","is","rx","cos","ry","sin","textAlign","padAngle","PI","labelPadding","pxValue","dx","dy","TypesetView","setAutoState","textBaseline","textOrigin","PointR2","x","y","tickAlign","tickAngle","tickRadius","tickLength","tickWidth","tickColor","cx","cy","r1x","r1y","r2x","r2y","strokeStyle","lineWidth","moveTo","lineTo","stroke","tickPadding","FillView","hitTest","hit","pixelRatio","hitTestDial","isPointInPath","view","font","textColor","hidden","setHidden","culled","setCulled","TypeError","MemberAnimator","Number","inherit","Length","Color","Font","GraphicsView","GaugeView","title","addDial","appendChildView","modifyUpdate","updateFlags","additionalFlags","NeedsAnimate","NeedsLayout","onLayout","layoutGauge","childViews","_childViews","childCount","isAuto","xMin","xMax","yMin","yMax","r0","r1","rs","dr","limit","dialSpacing","dialCount","childView","isFinite","max","state","gauge","dials","n","origin","pct","transparent","black","SliceView","renderSlice","phaseAngle","padRadius","arc","sliceColor","labelRadius","labelAngle","hitTestSlice","slice","PieView","addSlice","layoutPie","baseAngle","pie","slices","deg","TickView","_value","_coord","_coord0","NaN","_state","_preserve","opacity","interpolate","interpolateOpacity","setCoord","coord","tickLabel","preserve","fadeIn","transition","setState","fadeOut","layoutTickLabel","willRender","globalAlpha","renderTick","didRender","top","Top","right","Right","bottom","Bottom","left","Left","from","orientation","tick","tickMarkColor","tickMarkWidth","tickMarkLength","tickLabelPadding","gridLineColor","gridLineWidth","u","_view","isNaN","tickSpacing","_parentView","_tickSpacing","v","abs","_interpolator","_tweenState","remove","TopTickView","round","y2","y0","y1","RightTickView","x0","x2","x1","BottomTickView","LeftTickView","ERROR_10","sqrt","ERROR_5","ERROR_2","HOUR","DAY","TIME_TICK_INTERVALS","BTree","set","TimeInterval","second","minute","hour","day","week","month","year","MILLISECOND_FORMAT","DateTimeFormat","pattern","SECOND_FORMAT","MINUTE_FORMAT","HOUR_FORMAT","WEEKDAY_FORMAT","MONTHDAY_FORMAT","MONTH_FORMAT","YEAR_FORMAT","TickGenerator","format","tickValue","fromScale","scale","TimeScale","domain","TimeTickGenerator","NumberTickGenerator","step","step0","step1","pow","floor","log","LN10","error","count","generate","ticks","interval","ceil","reverse","power","power10","base","d0","d1","zone","DateTime","t0","time","dt","t1","range","t","duration","nextKey","k","previousKey","previousValue","nextValue","millisecond","AxisView","_ticks","_tickGenerator","_tickTransition","Transition","getTick","get","insertTick","insertChildView","removeTick","delete","tween","equals","tickGenerator","tickTransition","renderDomain","generateTicks","layoutTicks","_a","oldTicks","clone","tickValues","oldTick","newTick","createTickView","forEach","tickView","viewController","createTickLabel","formatTickLabel","layoutTick","onInsertChildView","targetView","onRemoveChildView","axis","domainColor","domainWidth","domainSerif","ContinuousScale","LinearScale","NumberInterpolator","current","split","StyleValue","parse","AxisViewController","GraphicsViewController","TopAxisView","dx0","dx1","RightAxisView","dy0","dy1","BottomAxisView","LeftAxisView","DatumView","_xCoord","_yCoord","_y2Coord","hitRadius","_hitRadius","category","_category","labelPlacement","_labelPlacement","datum","color","isGradientStop","layoutLabel","placement","padding","hitTestDatum","radius","PlotView","_xAxis","_yAxis","_xDomain","_xRange","Infinity","_yDomain","_yRange","xAxis","yAxis","xDomain","xRange","yDomain","yRange","layoutData","xScale","yScale","datum0","xDomainMin","xDomainMax","xRangeMin","xRangeMax","yDomainMin","yDomainMax","yRangeMin","yRangeMax","datum1","ax1","ay1","Objects","compare","rebound","requireUpdate","clipPlot","renderPlot","rect","plot","Bubble","Line","Area","type","PlotViewController","BubblePlotView","getDatum","insertDatum","insertData","data","_i","removeDatum","strokeWidth","xCoord","yCoord","alpha","GraphView","_data","_hitMode","_gradientStops","gradientStops","datum2","ax2","ay2","dy2","ady2","hitMode","hitTestData","hitTestGraph","unscale","GraphViewController","LineGraphView","_hitWidth","hitWidth","gradient","p0","firstValue","p1","lastValue","createLinearGradient","offset","addColorStop","isPointInStroke","graph","AreaGraphView","cursor","values","next","hasNext","hasPrevious","previous","y2Coord","closePath","ChartView","onScaleStart","bind","onScaleChange","onScaleCancel","onScaleEnd","_fitTopDomain","_fitRightDomain","_fitBottomDomain","_fitLeftDomain","_trackTopDomain","_trackRightDomain","_trackBottomDomain","_trackLeftDomain","_topDomainBounds","_rightDomainBounds","_bottomDomainBounds","_leftDomainBounds","_topDomainPadding","_rightDomainPadding","_bottomDomainPadding","_leftDomainPadding","_multitouch","_topGesture","_rightGesture","_bottomGesture","_leftGesture","_rescaleTransition","surface","topAxis","rightAxis","bottomAxis","leftAxis","addPlot","multitouch","Multitouch","topGesture","ScaleGesture","horizontal","ruler","isMounted","attach","reboundTop","rightGesture","vertical","reboundRight","bottomGesture","reboundBottom","leftGesture","reboundLeft","rescaleTransition","fitTopDomain","fitRightDomain","fitBottomDomain","fitLeftDomain","topDomainBounds","rightDomainBounds","bottomDomainBounds","leftDomainBounds","topDomainPadding","rightDomainPadding","bottomDomainPadding","leftDomainPadding","topDomain","rightDomain","bottomDomain","leftDomain","topDomainPadded","_b","padMin","padMax","rightDomainPadded","bottomDomainPadded","leftDomainPadded","topRange","rightRange","bottomRange","leftRange","onMount","on","onUnmount","off","detach","layoutChildViews","didLayout","autoscale","layoutChildView","childKey","layoutSurface","layoutTopAxis","layoutRightAxis","layoutBottomAxis","layoutLeftAxis","layoutPlot","topGutter","rightGutter","bottomGutter","leftGutter","setViewFrame","BoxR2","originX","originY","onInsertPlot","onRemovePlot","autoscaleTop","autoscaleRight","autoscaleBottom","autoscaleLeft","boundMin","boundMax","domainBounds","retrackTop","domainMin","domainMax","order","retrackRight","retrackBottom","retrackLeft","event","gesture","chart","plots","ChartViewController"],"mappings":"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","file":"/Users/c9r/Swim/Code/swim-platform/swim-toolkit-js/swim-vis-js/@swim/vis/dist/main/swim-vis.min.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2, BoxR2} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {Transition} from \"@swim/transition\";\nimport {TweenState} from \"@swim/animate\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  ViewFlags,\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  RenderedView,\n  GraphicsView,\n  GraphicsViewController,\n} from \"@swim/view\";\nimport {AnyTextRunView, TextRunView} from \"@swim/typeset\";\nimport {TopTickView} from \"./TopTickView\";\nimport {RightTickView} from \"./RightTickView\";\nimport {BottomTickView} from \"./BottomTickView\";\nimport {LeftTickView} from \"./LeftTickView\";\nimport {AxisView} from \"../axis/AxisView\";\n\n/** @hidden */\nexport const enum TickState {\n  Excluded,\n  Entering,\n  Included,\n  Leaving,\n}\n\nexport type TickOrientation = \"top\" | \"right\" | \"bottom\" | \"left\";\n\nexport type AnyTickView<D> = TickView<D> | TickViewInit<D>;\n\nexport interface TickViewInit<D> extends RenderedViewInit {\n  value: D;\n  orientation?: TickOrientation;\n\n  tickMarkColor?: AnyColor;\n  tickMarkWidth?: number;\n  tickMarkLength?: number;\n\n  tickLabelPadding?: number;\n\n  gridLineColor?: AnyColor;\n  gridLineWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n\n  tickLabel?: View | string | null;\n}\n\nexport abstract class TickView<D> extends GraphicsView {\n  /** @hidden */\n  readonly _value: D;\n  /** @hidden */\n  _coord: number;\n  /** @hidden */\n  _coord0: number;\n  /** @hidden */\n  _state: TickState;\n  /** @hidden */\n  _preserve: boolean;\n\n  constructor(value: D) {\n    super();\n    this._value = value;\n    this._coord = 0;\n    this._coord0 = NaN;\n    this._state = TickState.Excluded;\n    this._preserve = true;\n    this.opacity.interpolate = TickView.interpolateOpacity;\n  }\n\n  get viewController(): GraphicsViewController<TickView<D>> | null {\n    return this._viewController;\n  }\n\n  get value(): D {\n    return this._value;\n  }\n\n  get coord(): number {\n    return this._coord;\n  }\n\n  setCoord(coord: number): void {\n    this._coord = coord;\n  }\n\n  abstract get orientation(): TickOrientation;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  origin: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Number, {value: 1})\n  opacity: MemberAnimator<this, number>;\n\n  @MemberAnimator(Color, {inherit: true})\n  tickMarkColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {inherit: true})\n  tickMarkWidth: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {inherit: true})\n  tickMarkLength: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {inherit: true})\n  tickLabelPadding: MemberAnimator<this, number>;\n\n  @MemberAnimator(Color, {inherit: true})\n  gridLineColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {inherit: true})\n  gridLineWidth: MemberAnimator<this, number>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  tickLabel(): View | null;\n  tickLabel(tickLabel: View | AnyTextRunView | null): this;\n  tickLabel(tickLabel?: View | AnyTextRunView | null): View | null | this {\n    if (tickLabel === void 0) {\n      return this.getChildView(\"tickLabel\");\n    } else {\n      if (tickLabel !== null && !(tickLabel instanceof View)) {\n        tickLabel = TextRunView.fromAny(tickLabel);\n      }\n      this.setChildView(\"tickLabel\", tickLabel);\n      return this;\n    }\n  }\n\n  preserve(): boolean;\n  preserve(preserve: boolean): this;\n  preserve(preserve?: boolean): this | boolean {\n    if (preserve === void 0) {\n      return this._preserve;\n    } else {\n      this._preserve = preserve;\n      return this;\n    }\n  }\n\n  fadeIn(transition?: Transition<any>): void {\n    if (this._state === TickState.Excluded || this._state === TickState.Leaving) {\n      this.opacity.setState(1, transition);\n      this._state = TickState.Entering;\n    }\n  }\n\n  fadeOut(transition?: Transition<any>): void {\n    if (this._state === TickState.Entering || this._state === TickState.Included) {\n      this.opacity.setState(0, transition);\n      this._state = TickState.Leaving;\n    }\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsAnimate) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  protected onLayout(viewContext: RenderedViewContext): void {\n    super.onLayout(viewContext);\n    const tickLabel = this.tickLabel();\n    if (RenderedView.is(tickLabel)) {\n      this.layoutTickLabel(tickLabel, this.viewFrame);\n    }\n  }\n\n  protected willRender(viewContext: RenderedViewContext): void {\n    super.willRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.save();\n    }\n  }\n\n  protected onRender(viewContext: RenderedViewContext): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.globalAlpha = this.opacity.value!;\n      this.renderTick(context, this.viewFrame);\n    }\n  }\n\n  protected didRender(viewContext: RenderedViewContext): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.restore();\n    }\n    super.didRender(viewContext);\n  }\n\n  protected abstract layoutTickLabel(tickLabel: RenderedView, frame: BoxR2): void;\n\n  protected abstract renderTick(context: CanvasContext, frame: BoxR2): void;\n\n  static top<D>(value: D): TopTickView<D> {\n    return new TickView.Top(value);\n  }\n\n  static right<D>(value: D): RightTickView<D> {\n    return new TickView.Right(value);\n  }\n\n  static bottom<D>(value: D): BottomTickView<D> {\n    return new TickView.Bottom(value);\n  }\n\n  static left<D>(value: D): LeftTickView<D> {\n    return new TickView.Left(value);\n  }\n\n  static from<D>(orientation: TickOrientation, value: D): TickView<D> {\n    if (orientation === \"top\") {\n      return TickView.top(value);\n    } else if (orientation === \"right\") {\n      return TickView.right(value);\n    } else if (orientation === \"bottom\") {\n      return TickView.bottom(value);\n    } else if (orientation === \"left\") {\n      return TickView.left(value);\n    } else {\n      throw new TypeError(orientation);\n    }\n  }\n\n  static fromAny<D>(tick: AnyTickView<D>, orientation?: TickOrientation): TickView<D> {\n    if (tick instanceof TickView) {\n      return tick;\n    } else if (typeof tick === \"object\" && tick !== null) {\n      if (tick.orientation !== void 0) {\n        orientation = tick.orientation;\n      }\n      if (orientation === void 0) {\n        throw new TypeError();\n      }\n      const view = TickView.from(orientation, tick.value);\n\n      if (tick.tickMarkColor !== void 0) {\n        view.tickMarkColor(tick.tickMarkColor);\n      }\n      if (tick.tickMarkWidth !== void 0) {\n        view.tickMarkWidth(tick.tickMarkWidth);\n      }\n      if (tick.tickMarkLength !== void 0) {\n        view.tickMarkLength(tick.tickMarkLength);\n      }\n\n      if (tick.tickLabelPadding !== void 0) {\n        view.tickLabelPadding(tick.tickLabelPadding);\n      }\n\n      if (tick.gridLineColor !== void 0) {\n        view.gridLineColor(tick.gridLineColor);\n      }\n      if (tick.gridLineWidth !== void 0) {\n        view.gridLineWidth(tick.gridLineWidth);\n      }\n\n      if (tick.font !== void 0) {\n        view.font(tick.font);\n      }\n      if (tick.textColor !== void 0) {\n        view.textColor(tick.textColor);\n      }\n\n      if (tick.tickLabel !== void 0) {\n        view.tickLabel(tick.tickLabel);\n      }\n\n      if (tick.hidden !== void 0) {\n        view.setHidden(tick.hidden);\n      }\n      if (tick.culled !== void 0) {\n        view.setCulled(tick.culled);\n      }\n\n      return view;\n    }\n    throw new TypeError(\"\" + tick);\n  }\n\n  private static interpolateOpacity<D>(this: MemberAnimator<TickView<D>, number>, u: number): number {\n    // Interpolate over max of time and distance translated\n    const view = this._view;\n    const coord = view._coord;\n    if (isNaN(view._coord0)) {\n      view._coord0 = coord;\n    }\n    const axisView = view._parentView as AxisView<D>;\n    const tickSpacing = axisView._tickSpacing / 2;\n    const v = Math.min(Math.abs(coord - view._coord0) / tickSpacing, 1);\n    const opacity = this._interpolator!.interpolate(Math.max(u, v));\n    if (u === 1 || v === 1) {\n      this._tweenState = TweenState.Converged;\n    }\n    if (opacity === 0 && view._state === TickState.Leaving) {\n      view._state = TickState.Excluded;\n      view._coord0 = NaN;\n      view.remove();\n    } else if (opacity === 1 && view._state === TickState.Entering) {\n      view._state = TickState.Included;\n      view._coord0 = NaN;\n    }\n    return opacity;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Top: typeof TopTickView; // defined by TopTickView\n  /** @hidden */\n  static Right: typeof RightTickView; // defined by RightTickView\n  /** @hidden */\n  static Bottom: typeof BottomTickView; // defined by BottomTickView\n  /** @hidden */\n  static Left: typeof LeftTickView; // defined by LeftTickView\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BoxR2, AnyPointR2, PointR2} from \"@swim/math\";\nimport {AnyAngle, Angle} from \"@swim/angle\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  RenderedView,\n  FillView,\n  TypesetView,\n  GraphicsView,\n  GraphicsViewController,\n} from \"@swim/view\";\nimport {Arc} from \"@swim/shape\";\nimport {AnyTextRunView, TextRunView} from \"@swim/typeset\";\n\nexport type DialViewArrangement = \"auto\" | \"manual\";\n\nexport type AnyDialView = DialView | DialViewInit;\n\nexport interface DialViewInit extends RenderedViewInit {\n  value?: number;\n  total?: number;\n  center?: AnyPointR2;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  startAngle?: AnyAngle;\n  sweepAngle?: AnyAngle;\n  cornerRadius?: AnyLength;\n  dialColor?: AnyColor;\n  meterColor?: AnyColor;\n  labelPadding?: AnyLength;\n  tickAlign?: number;\n  tickRadius?: AnyLength;\n  tickLength?: AnyLength;\n  tickWidth?: AnyLength;\n  tickPadding?: AnyLength;\n  tickColor?: AnyColor;\n  font?: AnyFont;\n  textColor?: AnyColor;\n  arrangement?: DialViewArrangement;\n  label?: View | string | null;\n  legend?: View | string | null;\n}\n\nexport class DialView extends GraphicsView {\n  /** @hidden */\n  _arrangement: DialViewArrangement;\n\n  constructor() {\n    super();\n    this._arrangement = \"auto\";\n  }\n\n  get viewController(): GraphicsViewController<DialView> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(Number, {value: 0})\n  value: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {value: 1})\n  total: MemberAnimator<this, number>;\n\n  @MemberAnimator(PointR2, {inherit: true})\n  center: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Length, {inherit: true})\n  innerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  outerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Angle, {inherit: true})\n  startAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Angle, {inherit: true})\n  sweepAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Length, {inherit: true})\n  cornerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {inherit: true})\n  dialColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Color, {inherit: true})\n  meterColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length, {inherit: true})\n  labelPadding: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Number, {inherit: true})\n  tickAlign: MemberAnimator<this, number>;\n\n  @MemberAnimator(Length, {inherit: true})\n  tickRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  tickLength: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  tickWidth: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  tickPadding: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {inherit: true})\n  tickColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  label(): View | null;\n  label(label: View | AnyTextRunView | null): this;\n  label(label?: View | AnyTextRunView | null): View | null | this {\n    if (label === void 0) {\n      return this.getChildView(\"label\");\n    } else {\n      if (label !== null && !(label instanceof View)) {\n        label = TextRunView.fromAny(label);\n      }\n      this.setChildView(\"label\", label);\n      return this;\n    }\n  }\n\n  legend(): View | null;\n  legend(legend: View | AnyTextRunView | null): this;\n  legend(legend?: View | AnyTextRunView | null): View | null | this {\n    if (legend === void 0) {\n      return this.getChildView(\"legend\");\n    } else {\n      if (legend !== null && !(legend instanceof View)) {\n        legend = TextRunView.fromAny(legend);\n      }\n      this.setChildView(\"legend\", legend);\n      return this;\n    }\n  }\n\n  arrangement(): DialViewArrangement;\n  arrangement(arrangement: DialViewArrangement): this;\n  arrangement(arrangement?: DialViewArrangement): DialViewArrangement | this {\n    if (arrangement === void 0) {\n      return this._arrangement;\n    } else {\n      this._arrangement = arrangement;\n      return this;\n    }\n  }\n\n  protected onRender(viewContext: RenderedViewContext): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.save();\n      this.renderDial(context, this.viewFrame);\n      context.restore();\n    }\n  }\n\n  protected renderDial(context: CanvasContext, frame: BoxR2): void {\n    const width = frame.width;\n    const height = frame.height;\n    const size = Math.min(width, height);\n    const value = this.value.value!;\n    const total = this.total.value!;\n    const delta = total !== 0 ? value / total : 0;\n\n    const center = this.center.value!;\n    const innerRadius = this.innerRadius.value!.px(size);\n    const outerRadius = this.outerRadius.value!.px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.startAngle.value!.rad();\n    const sweepAngle = this.sweepAngle.value!.rad();\n    const cornerRadius = this.cornerRadius.value!.px(deltaRadius);\n    const dial = new Arc(center, innerRadius, outerRadius, startAngle,\n                         sweepAngle, Angle.zero(), null, cornerRadius);\n    const meter = dial.sweepAngle(sweepAngle.times(delta));\n\n    context.save();\n\n    context.beginPath();\n    context.fillStyle = this.dialColor.value!.toString();\n    dial.draw(context, frame);\n    context.fill();\n    context.clip();\n\n    context.beginPath();\n    context.fillStyle = this.meterColor.value!.toString();\n    meter.draw(context, frame);\n    context.fill();\n\n    context.restore();\n\n    const label = this.label();\n    if (RenderedView.is(label) && !label.isHidden()) {\n      const r = (innerRadius.value + outerRadius.value) / 2;\n      const rx = r * Math.cos(startAngle.value + 1e-12);\n      const ry = r * Math.sin(startAngle.value + 1e-12);\n\n      let textAlign: CanvasTextAlign;\n      if (rx >= 0) {\n        if (ry >= 0) { // top-right\n          textAlign = \"start\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        if (ry < 0) { // bottom-left\n          textAlign = \"end\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n      const padAngle = startAngle.value - Math.PI / 2;\n      const labelPadding = this.labelPadding.value!.pxValue(deltaRadius);\n      const dx = labelPadding * Math.cos(padAngle);\n      const dy = labelPadding * Math.sin(padAngle);\n\n      if (TypesetView.is(label)) {\n        label.textAlign.setAutoState(textAlign);\n        label.textBaseline.setAutoState(\"middle\");\n        label.textOrigin.setAutoState(new PointR2(center.x + rx + dx, center.y + ry + dy));\n      }\n    }\n\n    const legend = this.legend();\n    if (RenderedView.is(legend) && !legend.isHidden()) {\n      const tickAlign = this.tickAlign.value!;\n      const tickAngle = startAngle.value + sweepAngle.value * delta * tickAlign;\n      const tickRadius = this.tickRadius.value!.pxValue(size);\n      const tickLength = this.tickLength.value!.pxValue(width);\n      const tickWidth = this.tickWidth.value!.pxValue(size);\n      const tickColor = this.tickColor.value!;\n\n      const cx = center.x;\n      const cy = center.y;\n      const r1x = outerRadius.value * Math.cos(tickAngle + 1e-12);\n      const r1y = outerRadius.value * Math.sin(tickAngle + 1e-12);\n      const r2x = tickRadius * Math.cos(tickAngle + 1e-12);\n      const r2y = tickRadius * Math.sin(tickAngle + 1e-12);\n      let dx = 0;\n\n      context.beginPath();\n      context.strokeStyle = tickColor.toString();\n      context.lineWidth = tickWidth;\n      context.moveTo(cx + r1x, cy + r1y);\n      context.lineTo(cx + r2x, cy + r2y);\n      if (tickLength !== 0) {\n        if (r2x >= 0) {\n          context.lineTo(cx + tickLength, cy + r2y);\n          dx = tickLength - r2x;\n        } else if (r2x < 0) {\n          context.lineTo(cx - tickLength, cy + r2y);\n          dx = tickLength + r2x;\n        }\n      }\n      context.stroke();\n\n      let textAlign: CanvasTextAlign;\n      if (r2x >= 0) {\n        if (r2y >= 0) { // top-right\n          textAlign = \"end\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        dx = -dx;\n        if (r2y < 0) { // bottom-left\n          textAlign = \"start\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n\n      if (TypesetView.is(legend)) {\n        const tickPadding = this.tickPadding.value!.pxValue(size);\n        if (FillView.is(legend)) {\n          legend.fill.setAutoState(tickColor);\n        }\n        legend.textAlign.setAutoState(textAlign);\n        legend.textBaseline.setAutoState(\"alphabetic\");\n        legend.textOrigin.setAutoState(new PointR2(cx + r2x + dx, cy + r2y - tickPadding));\n      }\n    }\n  }\n\n  hitTest(x: number, y: number, viewContext: RenderedViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        context.save();\n        x *= renderer.pixelRatio;\n        y *= renderer.pixelRatio;\n        hit = this.hitTestDial(x, y, context, this.viewFrame);\n        context.restore();\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestDial(x: number, y: number, context: CanvasContext, frame: BoxR2): RenderedView | null {\n    const size = Math.min(frame.width, frame.height);\n\n    const center = this.center.value!;\n    const innerRadius = this.innerRadius.value!.px(size);\n    const outerRadius = this.outerRadius.value!.px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.startAngle.value!;\n    const sweepAngle = this.sweepAngle.value!;\n    const cornerRadius = this.cornerRadius.value!.px(deltaRadius);\n    const dial = new Arc(center, innerRadius, outerRadius, startAngle,\n                         sweepAngle, Angle.zero(), null, cornerRadius);\n\n    context.beginPath();\n    dial.draw(context, frame);\n    if (context.isPointInPath(x, y)) {\n      return this;\n    }\n    return null;\n  }\n\n  static fromAny(dial: AnyDialView): DialView {\n    if (dial instanceof DialView) {\n      return dial;\n    } else if (typeof dial === \"object\" && dial !== null) {\n      const view = new DialView();\n      if (dial.value !== void 0) {\n        view.value(dial.value);\n      }\n      if (dial.total !== void 0) {\n        view.total(dial.total);\n      }\n      if (dial.center !== void 0) {\n        view.center(dial.center);\n      }\n      if (dial.innerRadius !== void 0) {\n        view.innerRadius(dial.innerRadius);\n      }\n      if (dial.outerRadius !== void 0) {\n        view.outerRadius(dial.outerRadius);\n      }\n      if (dial.startAngle !== void 0) {\n        view.startAngle(dial.startAngle);\n      }\n      if (dial.sweepAngle !== void 0) {\n        view.sweepAngle(dial.sweepAngle);\n      }\n      if (dial.cornerRadius !== void 0) {\n        view.cornerRadius(dial.cornerRadius);\n      }\n      if (dial.dialColor !== void 0) {\n        view.dialColor(dial.dialColor);\n      }\n      if (dial.meterColor !== void 0) {\n        view.meterColor(dial.meterColor);\n      }\n      if (dial.labelPadding !== void 0) {\n        view.labelPadding(dial.labelPadding);\n      }\n      if (dial.tickAlign !== void 0) {\n        view.tickAlign(dial.tickAlign);\n      }\n      if (dial.tickRadius !== void 0) {\n        view.tickRadius(dial.tickRadius);\n      }\n      if (dial.tickLength !== void 0) {\n        view.tickLength(dial.tickLength);\n      }\n      if (dial.tickWidth !== void 0) {\n        view.tickWidth(dial.tickWidth);\n      }\n      if (dial.tickPadding !== void 0) {\n        view.tickPadding(dial.tickPadding);\n      }\n      if (dial.tickColor !== void 0) {\n        view.tickColor(dial.tickColor);\n      }\n      if (dial.font !== void 0) {\n        view.font(dial.font);\n      }\n      if (dial.textColor !== void 0) {\n        view.textColor(dial.textColor);\n      }\n      if (dial.arrangement !== void 0) {\n        view.arrangement(dial.arrangement);\n      }\n      if (dial.label !== void 0) {\n        view.label(dial.label);\n      }\n      if (dial.legend !== void 0) {\n        view.legend(dial.legend);\n      }\n      if (dial.hidden !== void 0) {\n        view.setHidden(dial.hidden);\n      }\n      if (dial.culled !== void 0) {\n        view.setCulled(dial.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + dial);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2, BoxR2} from \"@swim/math\";\nimport {AnyAngle, Angle} from \"@swim/angle\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {\n  ViewFlags,\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  TypesetView,\n  GraphicsView,\n  GraphicsViewController,\n} from \"@swim/view\";\nimport {AnyTextRunView, TextRunView} from \"@swim/typeset\";\nimport {AnyDialView, DialView} from \"./DialView\";\n\nexport type AnyGaugeView = GaugeView | GaugeViewInit;\n\nexport interface GaugeViewInit extends RenderedViewInit {\n  limit?: number;\n  center?: AnyPointR2;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  startAngle?: AnyAngle;\n  sweepAngle?: AnyAngle;\n  cornerRadius?: AnyLength;\n  dialSpacing?: AnyLength;\n  dialColor?: AnyColor;\n  meterColor?: AnyColor;\n  labelPadding?: AnyLength;\n  tickAlign?: number;\n  tickRadius?: AnyLength;\n  tickLength?: AnyLength;\n  tickWidth?: AnyLength;\n  tickPadding?: AnyLength;\n  tickColor?: AnyColor;\n  font?: AnyFont;\n  textColor?: AnyColor;\n  title?: View | string;\n  dials?: AnyDialView[];\n}\n\nexport class GaugeView extends GraphicsView {\n  get viewController(): GraphicsViewController<GaugeView> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(Number, {value: 0})\n  limit: MemberAnimator<this, number>;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  center: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Length, {value: Length.pct(30)})\n  innerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.pct(40)})\n  outerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Angle, {value: Angle.rad(-Math.PI / 2)})\n  startAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Angle, {value: Angle.rad(2 * Math.PI)})\n  sweepAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Length, {value: Length.pct(50)})\n  cornerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.px(1)})\n  dialSpacing: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {value: Color.transparent()})\n  dialColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Color, {value: Color.black()})\n  meterColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length, {value: Length.pct(25)})\n  labelPadding: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Number, {value: 0.5})\n  tickAlign: MemberAnimator<this, number>;\n\n  @MemberAnimator(Length, {value: Length.pct(45)})\n  tickRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.pct(50)})\n  tickLength: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.px(1)})\n  tickWidth: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.px(1)})\n  tickPadding: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {value: Color.black()})\n  tickColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  title(): View | null;\n  title(title: View | AnyTextRunView | null): this;\n  title(title?: View | AnyTextRunView | null): View | null | this {\n    if (title === void 0) {\n      return this.getChildView(\"title\");\n    } else {\n      if (title !== null && !(title instanceof View)) {\n        title = TextRunView.fromAny(title);\n      }\n      this.setChildView(\"title\", title);\n      return this;\n    }\n  }\n\n  addDial(dial: AnyDialView): void {\n    dial = DialView.fromAny(dial);\n    this.appendChildView(dial);\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsAnimate) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  protected onLayout(viewContext: RenderedViewContext): void {\n    super.onLayout(viewContext);\n    this.layoutGauge(this.viewFrame);\n  }\n\n  protected layoutGauge(frame: BoxR2): void {\n    const childViews = this._childViews;\n    const childCount = childViews.length;\n\n    if (this.center.isAuto()) {\n      const cx = (frame.xMin + frame.xMax) / 2;\n      const cy = (frame.yMin + frame.yMax) / 2;\n      this.center.setAutoState(new PointR2(cx, cy))\n    }\n\n    const limit = this.limit.value;\n    const innerRadius = this.innerRadius.value;\n    const outerRadius = this.outerRadius.value;\n    const startAngle = this.startAngle.value;\n    const sweepAngle = this.sweepAngle.value;\n    const dialSpacing = this.dialSpacing.value;\n\n    let r0: number | undefined;\n    let r1: number | undefined;\n    let rs: number | undefined;\n    let dr: number | undefined;\n    if (innerRadius !== void 0 && outerRadius !== void 0) {\n      let dialCount = 0;\n      for (let i = 0; i < childCount; i += 1) {\n        const childView = childViews[i];\n        if (childView instanceof DialView && childView._arrangement === \"auto\") {\n          dialCount += 1;\n        }\n      }\n      const size = Math.min(frame.width, frame.height);\n      r0 = innerRadius.pxValue(size);\n      r1 = outerRadius.pxValue(size);\n      rs = dialSpacing !== void 0 ? dialSpacing.pxValue(size) : 0;\n      dr = dialCount > 1 ? (r1 - r0 - rs * (dialCount - 1)) / dialCount : r1 - r0;\n    }\n\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof DialView && childView._arrangement === \"auto\") {\n        if (limit !== void 0 && isFinite(limit)) {\n          const total = childView.total.value;\n          if (total !== void 0) {\n            childView.total.setAutoState(Math.max(total, limit));\n          }\n        }\n        if (innerRadius !== void 0 && outerRadius !== void 0) {\n          childView.innerRadius.setAutoState(Length.px(r0!));\n          childView.outerRadius.setAutoState(Length.px(r0! + dr!));\n          r0 = r0! + dr! + rs!;\n        }\n        if (startAngle !== void 0) {\n          childView.startAngle.setAutoState(startAngle);\n        }\n        if (sweepAngle !== void 0) {\n          childView.sweepAngle.setAutoState(sweepAngle);\n        }\n      }\n    }\n\n    const title = this.title();\n    if (TypesetView.is(title)) {\n      title.textAlign.setAutoState(\"center\");\n      title.textBaseline.setAutoState(\"middle\");\n      title.textOrigin.setAutoState(this.center.state);\n    }\n  }\n\n  static fromAny(gauge: AnyGaugeView): GaugeView {\n    if (gauge instanceof GaugeView) {\n      return gauge;\n    } else if (typeof gauge === \"object\" && gauge !== null) {\n      const view = new GaugeView();\n      if (gauge.limit !== void 0) {\n        view.limit(gauge.limit);\n      }\n      if (gauge.innerRadius !== void 0) {\n        view.innerRadius(gauge.innerRadius);\n      }\n      if (gauge.outerRadius !== void 0) {\n        view.outerRadius(gauge.outerRadius);\n      }\n      if (gauge.startAngle !== void 0) {\n        view.startAngle(gauge.startAngle);\n      }\n      if (gauge.sweepAngle !== void 0) {\n        view.sweepAngle(gauge.sweepAngle);\n      }\n      if (gauge.cornerRadius !== void 0) {\n        view.cornerRadius(gauge.cornerRadius);\n      }\n      if (gauge.dialSpacing !== void 0) {\n        view.dialSpacing(gauge.dialSpacing);\n      }\n      if (gauge.dialColor !== void 0) {\n        view.dialColor(gauge.dialColor);\n      }\n      if (gauge.meterColor !== void 0) {\n        view.meterColor(gauge.meterColor);\n      }\n      if (gauge.labelPadding !== void 0) {\n        view.labelPadding(gauge.labelPadding);\n      }\n      if (gauge.tickAlign !== void 0) {\n        view.tickAlign(gauge.tickAlign);\n      }\n      if (gauge.tickRadius !== void 0) {\n        view.tickRadius(gauge.tickRadius);\n      }\n      if (gauge.tickLength !== void 0) {\n        view.tickLength(gauge.tickLength);\n      }\n      if (gauge.tickWidth !== void 0) {\n        view.tickWidth(gauge.tickWidth);\n      }\n      if (gauge.tickPadding !== void 0) {\n        view.tickPadding(gauge.tickPadding);\n      }\n      if (gauge.tickColor !== void 0) {\n        view.tickColor(gauge.tickColor);\n      }\n      if (gauge.font !== void 0) {\n        view.font(gauge.font);\n      }\n      if (gauge.textColor !== void 0) {\n        view.textColor(gauge.textColor);\n      }\n      if (gauge.title !== void 0) {\n        view.title(gauge.title);\n      }\n      const dials = gauge.dials;\n      if (dials !== void 0) {\n        for (let i = 0, n = dials.length; i < n; i += 1) {\n          view.addDial(dials[i]);\n        }\n      }\n      if (gauge.hidden !== void 0) {\n        view.setHidden(gauge.hidden);\n      }\n      if (gauge.culled !== void 0) {\n        view.setCulled(gauge.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + gauge);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2, BoxR2} from \"@swim/math\";\nimport {AnyAngle, Angle} from \"@swim/angle\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  RenderedView,\n  FillView,\n  TypesetView,\n  GraphicsView,\n  GraphicsViewController,\n} from \"@swim/view\";\nimport {Arc} from \"@swim/shape\";\nimport {AnyTextRunView, TextRunView} from \"@swim/typeset\";\n\nexport type AnySliceView = SliceView | SliceViewInit;\n\nexport interface SliceViewInit extends RenderedViewInit {\n  value?: number;\n  total?: number;\n  center?: AnyPointR2;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  phaseAngle?: AnyAngle;\n  padAngle?: AnyAngle;\n  padRadius?: AnyLength | null;\n  cornerRadius?: AnyLength;\n  labelRadius?: AnyLength;\n  sliceColor?: AnyColor;\n  tickAlign?: number;\n  tickRadius?: AnyLength;\n  tickLength?: AnyLength;\n  tickWidth?: AnyLength;\n  tickPadding?: AnyLength;\n  tickColor?: AnyColor;\n  font?: AnyFont;\n  textColor?: AnyColor;\n  label?: View | string | null;\n  legend?: View | string | null;\n}\n\nexport class SliceView extends GraphicsView {\n  get viewController(): GraphicsViewController<SliceView> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(Number, {value: 0})\n  value: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {value: 1})\n  total: MemberAnimator<this, number>;\n\n  @MemberAnimator(PointR2, {inherit: true})\n  center: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Length, {inherit: true})\n  innerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  outerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Angle, {value: Angle.zero()})\n  phaseAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Angle, {inherit: true})\n  padAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Length, {inherit: true})\n  padRadius: MemberAnimator<this, Length | null, AnyLength | null>;\n\n  @MemberAnimator(Length, {inherit: true})\n  cornerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  labelRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {inherit: true})\n  sliceColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {inherit: true})\n  tickAlign: MemberAnimator<this, number>;\n\n  @MemberAnimator(Length, {inherit: true})\n  tickRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  tickLength: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  tickWidth: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {inherit: true})\n  tickPadding: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {inherit: true})\n  tickColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  label(): View | null;\n  label(label: View | AnyTextRunView | null): this;\n  label(label?: View | AnyTextRunView | null): View | null | this {\n    if (label === void 0) {\n      return this.getChildView(\"label\");\n    } else {\n      if (label !== null && !(label instanceof View)) {\n        label = TextRunView.fromAny(label);\n      }\n      this.setChildView(\"label\", label);\n      return this;\n    }\n  }\n\n  legend(): View | null;\n  legend(legend: View | AnyTextRunView | null): this;\n  legend(legend?: View | AnyTextRunView | null): View | null | this {\n    if (legend === void 0) {\n      return this.getChildView(\"legend\");\n    } else {\n      if (legend !== null && !(legend instanceof View)) {\n        legend = TextRunView.fromAny(legend);\n      }\n      this.setChildView(\"legend\", legend);\n      return this;\n    }\n  }\n\n  protected onRender(viewContext: RenderedViewContext): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.save();\n      this.renderSlice(context, this.viewFrame);\n      context.restore();\n    }\n  }\n\n  protected renderSlice(context: CanvasContext, frame: BoxR2): void {\n    const width = frame.width;\n    const height = frame.height;\n    const size = Math.min(width, height);\n    const value = this.value.value!;\n    const total = this.total.value!;\n    const delta = total !== 0 ? value / total : 0;\n\n    const center = this.center.value!;\n    const innerRadius = this.innerRadius.value!.px(size);\n    const outerRadius = this.outerRadius.value!.px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.phaseAngle.value!.rad();\n    const sweepAngle = Angle.rad(2 * Math.PI * delta);\n    const padAngle = this.padAngle.value!;\n    const padRadius = this.padRadius.value! as Length | null;\n    const cornerRadius = this.cornerRadius.value!.px(deltaRadius);\n    const arc = new Arc(center, innerRadius, outerRadius, startAngle,\n                        sweepAngle, padAngle, padRadius, cornerRadius);\n\n    context.beginPath();\n    context.fillStyle = this.sliceColor.value!.toString();\n    arc.draw(context, frame);\n    context.fill();\n\n    const label = this.label();\n    if (RenderedView.is(label) && !label.isHidden()) {\n      const labelRadius = this.labelRadius.value!.pxValue(deltaRadius);\n      const labelAngle = startAngle.value + sweepAngle.value / 2;\n      const r = innerRadius.value + labelRadius;\n      const rx = r * Math.cos(labelAngle);\n      const ry = r * Math.sin(labelAngle);\n\n      if (TypesetView.is(label)) {\n        label.textAlign.setAutoState(\"center\");\n        label.textBaseline.setAutoState(\"middle\");\n        label.textOrigin.setAutoState(new PointR2(center.x + rx, center.y + ry));\n      }\n    }\n\n    const legend = this.legend();\n    if (RenderedView.is(legend) && !legend.isHidden()) {\n      const tickAlign = this.tickAlign.value!;\n      const tickAngle = startAngle.value + sweepAngle.value * tickAlign;\n      const tickRadius = this.tickRadius.value!.pxValue(size);\n      const tickLength = this.tickLength.value!.pxValue(width);\n      const tickWidth = this.tickWidth.value!.pxValue(size);\n      const tickColor = this.tickColor.value!;\n\n      const cx = center.x;\n      const cy = center.y;\n      const r1x = outerRadius.value * Math.cos(tickAngle + 1e-12);\n      const r1y = outerRadius.value * Math.sin(tickAngle + 1e-12);\n      const r2x = tickRadius * Math.cos(tickAngle + 1e-12);\n      const r2y = tickRadius * Math.sin(tickAngle + 1e-12);\n      let dx = 0;\n\n      context.beginPath();\n      context.strokeStyle = tickColor.toString();\n      context.lineWidth = tickWidth;\n      context.moveTo(cx + r1x, cy + r1y);\n      context.lineTo(cx + r2x, cy + r2y);\n      if (tickLength !== 0) {\n        if (r2x >= 0) {\n          context.lineTo(cx + tickLength, cy + r2y);\n          dx = tickLength - r2x;\n        } else if (r2x < 0) {\n          context.lineTo(cx - tickLength, cy + r2y);\n          dx = tickLength + r2x;\n        }\n      }\n      context.stroke();\n\n      let textAlign: CanvasTextAlign;\n      if (r2x >= 0) {\n        if (r2y >= 0) { // top-right\n          textAlign = \"end\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        dx = -dx;\n        if (r2y < 0) { // bottom-left\n          textAlign = \"start\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n\n      if (TypesetView.is(legend)) {\n        const tickPadding = this.tickPadding.value!.pxValue(size);\n        if (FillView.is(legend)) {\n          legend.fill.setAutoState(tickColor);\n        }\n        legend.textAlign.setAutoState(textAlign);\n        legend.textBaseline.setAutoState(\"alphabetic\");\n        legend.textOrigin.setAutoState(new PointR2(cx + r2x + dx, cy + r2y - tickPadding));\n      }\n    }\n  }\n\n  hitTest(x: number, y: number, viewContext: RenderedViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        context.save();\n        x *= renderer.pixelRatio;\n        y *= renderer.pixelRatio;\n        hit = this.hitTestSlice(x, y, context, this.viewFrame);\n        context.restore();\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestSlice(x: number, y: number, context: CanvasContext, frame: BoxR2): RenderedView | null {\n    const size = Math.min(frame.width, frame.height);\n    const value = this.value.value!;\n    const total = this.total.value!;\n    const delta = total !== 0 ? value / total : 0;\n\n    const center = this.center.value!;\n    const innerRadius = this.innerRadius.value!.px(size);\n    const outerRadius = this.outerRadius.value!.px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.phaseAngle.value!.rad();\n    const sweepAngle = Angle.rad(2 * Math.PI * delta);\n    const padAngle = this.padAngle.value!;\n    const padRadius = this.padRadius.value! as Length | null;\n    const cornerRadius = this.cornerRadius.value!.px(deltaRadius);\n    const arc = new Arc(center, innerRadius, outerRadius, startAngle,\n                        sweepAngle, padAngle, padRadius, cornerRadius);\n\n    context.beginPath();\n    arc.draw(context, frame);\n    if (context.isPointInPath(x, y)) {\n      return this;\n    }\n    return null;\n  }\n\n  static fromAny(slice: AnySliceView): SliceView {\n    if (slice instanceof SliceView) {\n      return slice;\n    } else if (typeof slice === \"object\" && slice !== null) {\n      const view = new SliceView();\n      if (slice.value !== void 0) {\n        view.value(slice.value);\n      }\n      if (slice.total !== void 0) {\n        view.total(slice.total);\n      }\n      if (slice.center !== void 0) {\n        view.center(slice.center);\n      }\n      if (slice.innerRadius !== void 0) {\n        view.innerRadius(slice.innerRadius);\n      }\n      if (slice.outerRadius !== void 0) {\n        view.outerRadius(slice.outerRadius);\n      }\n      if (slice.phaseAngle !== void 0) {\n        view.phaseAngle(slice.phaseAngle);\n      }\n      if (slice.padAngle !== void 0) {\n        view.padAngle(slice.padAngle);\n      }\n      if (slice.padRadius !== void 0) {\n        view.padRadius(slice.padRadius);\n      }\n      if (slice.cornerRadius !== void 0) {\n        view.cornerRadius(slice.cornerRadius);\n      }\n      if (slice.labelRadius !== void 0) {\n        view.labelRadius(slice.labelRadius);\n      }\n      if (slice.sliceColor !== void 0) {\n        view.sliceColor(slice.sliceColor);\n      }\n      if (slice.tickAlign !== void 0) {\n        view.tickAlign(slice.tickAlign);\n      }\n      if (slice.tickRadius !== void 0) {\n        view.tickRadius(slice.tickRadius);\n      }\n      if (slice.tickLength !== void 0) {\n        view.tickLength(slice.tickLength);\n      }\n      if (slice.tickWidth !== void 0) {\n        view.tickWidth(slice.tickWidth);\n      }\n      if (slice.tickPadding !== void 0) {\n        view.tickPadding(slice.tickPadding);\n      }\n      if (slice.tickColor !== void 0) {\n        view.tickColor(slice.tickColor);\n      }\n      if (slice.font !== void 0) {\n        view.font(slice.font);\n      }\n      if (slice.textColor !== void 0) {\n        view.textColor(slice.textColor);\n      }\n      if (slice.label !== void 0) {\n        view.label(slice.label);\n      }\n      if (slice.legend !== void 0) {\n        view.legend(slice.legend);\n      }\n      if (slice.hidden !== void 0) {\n        view.setHidden(slice.hidden);\n      }\n      if (slice.culled !== void 0) {\n        view.setCulled(slice.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + slice);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2, BoxR2} from \"@swim/math\";\nimport {AnyAngle, Angle} from \"@swim/angle\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {\n  ViewFlags,\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  TypesetView,\n  GraphicsView,\n  GraphicsViewController,\n} from \"@swim/view\";\nimport {AnyTextRunView, TextRunView} from \"@swim/typeset\";\nimport {AnySliceView, SliceView} from \"./SliceView\";\n\nexport type AnyPieView = PieView | PieViewInit;\n\nexport interface PieViewInit extends RenderedViewInit {\n  limit?: number;\n  center?: AnyPointR2;\n  baseAngle?: AnyAngle;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  padAngle?: AnyAngle;\n  padRadius?: AnyLength | null;\n  cornerRadius?: AnyLength;\n  labelRadius?: AnyLength;\n  sliceColor?: AnyColor;\n  tickAlign?: number;\n  tickRadius?: AnyLength;\n  tickLength?: AnyLength;\n  tickWidth?: AnyLength;\n  tickPadding?: AnyLength;\n  tickColor?: AnyColor;\n  font?: AnyFont;\n  textColor?: AnyColor;\n  title?: View | string;\n  slices?: AnySliceView[];\n}\n\nexport class PieView extends GraphicsView {\n  get viewController(): GraphicsViewController<PieView> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(Number, {value: 0})\n  limit: MemberAnimator<this, number>;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  center: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Angle, {value: Angle.rad(-Math.PI / 2)})\n  baseAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Length, {value: Length.pct(3)})\n  innerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.pct(25)})\n  outerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Angle, {value: Angle.deg(2)})\n  padAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Length, {value: null})\n  padRadius: MemberAnimator<this, Length | null, AnyLength | null>;\n\n  @MemberAnimator(Length, {value: Length.zero()})\n  cornerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.pct(50)})\n  labelRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {value: Color.black()})\n  sliceColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {value: 0.5})\n  tickAlign: MemberAnimator<this, number>;\n\n  @MemberAnimator(Length, {value: Length.pct(30)})\n  tickRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.pct(50)})\n  tickLength: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.px(1)})\n  tickWidth: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.px(1)})\n  tickPadding: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {value: Color.black()})\n  tickColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  title(): View | null;\n  title(title: View | AnyTextRunView | null): this;\n  title(title?: View | AnyTextRunView | null): View | null | this {\n    if (title === void 0) {\n      return this.getChildView(\"title\");\n    } else {\n      if (title !== null && !(title instanceof View)) {\n        title = TextRunView.fromAny(title);\n      }\n      this.setChildView(\"title\", title);\n      return this;\n    }\n  }\n\n  addSlice(slice: AnySliceView): void {\n    slice = SliceView.fromAny(slice);\n    this.appendChildView(slice);\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsAnimate) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  protected onLayout(viewContext: RenderedViewContext): void {\n    super.onLayout(viewContext);\n    this.layoutPie(this.viewFrame);\n  }\n\n  protected layoutPie(frame: BoxR2): void {\n    const childViews = this._childViews;\n    const childCount = childViews.length;\n\n    if (this.center.isAuto()) {\n      const cx = (frame.xMin + frame.xMax) / 2;\n      const cy = (frame.yMin + frame.yMax) / 2;\n      this.center.setAutoState(new PointR2(cx, cy))\n    }\n\n    let total = 0;\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof SliceView) {\n        const value = childView.value.value!;\n        if (isFinite(value)) {\n          total += value;\n        }\n      }\n    }\n    total = Math.max(total, this.limit.value!);\n\n    let baseAngle = this.baseAngle.value!.rad();\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof SliceView) {\n        childView.total.setAutoState(total);\n        childView.phaseAngle.setAutoState(baseAngle);\n        const value = childView.value.value!;\n        if (isFinite(value)) {\n          const delta = total !== 0 ? value / total : 0;\n          baseAngle = Angle.rad(baseAngle.value + 2 * Math.PI * delta);\n        }\n      }\n    }\n\n    const title = this.title();\n    if (TypesetView.is(title)) {\n      title.textAlign.setAutoState(\"center\");\n      title.textBaseline.setAutoState(\"middle\");\n      title.textOrigin.setAutoState(this.center.state);\n    }\n  }\n\n  static fromAny(pie: AnyPieView): PieView {\n    if (pie instanceof PieView) {\n      return pie;\n    } else if (typeof pie === \"object\" && pie !== null) {\n      const view = new PieView();\n      if (pie.limit !== void 0) {\n        view.limit(pie.limit);\n      }\n      if (pie.center !== void 0) {\n        view.center(pie.center);\n      }\n      if (pie.baseAngle !== void 0) {\n        view.baseAngle(pie.baseAngle);\n      }\n      if (pie.innerRadius !== void 0) {\n        view.innerRadius(pie.innerRadius);\n      }\n      if (pie.outerRadius !== void 0) {\n        view.outerRadius(pie.outerRadius);\n      }\n      if (pie.padAngle !== void 0) {\n        view.padAngle(pie.padAngle);\n      }\n      if (pie.padRadius !== void 0) {\n        view.padRadius(pie.padRadius);\n      }\n      if (pie.cornerRadius !== void 0) {\n        view.cornerRadius(pie.cornerRadius);\n      }\n      if (pie.labelRadius !== void 0) {\n        view.labelRadius(pie.labelRadius);\n      }\n      if (pie.sliceColor !== void 0) {\n        view.sliceColor(pie.sliceColor);\n      }\n      if (pie.tickAlign !== void 0) {\n        view.tickAlign(pie.tickAlign);\n      }\n      if (pie.tickRadius !== void 0) {\n        view.tickRadius(pie.tickRadius);\n      }\n      if (pie.tickLength !== void 0) {\n        view.tickLength(pie.tickLength);\n      }\n      if (pie.tickWidth !== void 0) {\n        view.tickWidth(pie.tickWidth);\n      }\n      if (pie.tickPadding !== void 0) {\n        view.tickPadding(pie.tickPadding);\n      }\n      if (pie.tickColor !== void 0) {\n        view.tickColor(pie.tickColor);\n      }\n      if (pie.font !== void 0) {\n        view.font(pie.font);\n      }\n      if (pie.textColor !== void 0) {\n        view.textColor(pie.textColor);\n      }\n      if (pie.title !== void 0) {\n        view.title(pie.title);\n      }\n      const slices = pie.slices;\n      if (slices !== void 0) {\n        for (let i = 0, n = slices.length; i < n; i += 1) {\n          view.addSlice(slices[i]);\n        }\n      }\n      if (pie.hidden !== void 0) {\n        view.setHidden(pie.hidden);\n      }\n      if (pie.culled !== void 0) {\n        view.setCulled(pie.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + pie);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {CanvasContext} from \"@swim/render\";\nimport {RenderedView, TypesetView} from \"@swim/view\";\nimport {TickOrientation, TickView} from \"./TickView\";\n\nexport class TopTickView<D> extends TickView<D> {\n  constructor(value: D) {\n    super(value);\n  }\n\n  get orientation(): TickOrientation {\n    return \"top\";\n  }\n\n  protected layoutTickLabel(tickLabel: RenderedView, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x = Math.round(origin.x);\n    const y0 = Math.round(origin.y);\n    const y1 = y0 - this.tickMarkLength.value!;\n    const y2 = y1 - this.tickLabelPadding.value!;\n\n    if (TypesetView.is(tickLabel)) {\n      tickLabel.textAlign.setAutoState(\"center\");\n      tickLabel.textBaseline.setAutoState(\"bottom\");\n      tickLabel.textOrigin.setAutoState(new PointR2(x, y2));\n    }\n  }\n\n  protected renderTick(context: CanvasContext, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x = Math.round(origin.x);\n    const y0 = Math.round(origin.y);\n    const y1 = y0 - this.tickMarkLength.value!;\n\n    context.beginPath();\n    context.strokeStyle = this.tickMarkColor.value!.toString();\n    context.lineWidth = this.tickMarkWidth.value!;\n    context.moveTo(x, y0);\n    context.lineTo(x, y1);\n    context.stroke();\n\n    const gridLineWidth = this.gridLineWidth.value!;\n    if (gridLineWidth !== 0 && frame.xMin < x && x < frame.xMax) {\n      context.beginPath();\n      context.strokeStyle = this.gridLineColor.value!.toString();\n      context.lineWidth = gridLineWidth;\n      context.moveTo(x, y0);\n      context.lineTo(x, frame.yMax);\n      context.stroke();\n    }\n  }\n}\nTickView.Top = TopTickView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {CanvasContext} from \"@swim/render\";\nimport {RenderedView, TypesetView} from \"@swim/view\";\nimport {TickOrientation, TickView} from \"./TickView\";\n\nexport class RightTickView<D> extends TickView<D> {\n  constructor(value: D) {\n    super(value);\n  }\n\n  get orientation(): TickOrientation {\n    return \"right\";\n  }\n\n  protected layoutTickLabel(tickLabel: RenderedView, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x0 = Math.round(origin.x);\n    const y = Math.round(origin.y);\n    const x1 = x0 + this.tickMarkLength.value!;\n    const x2 = x1 + this.tickLabelPadding.value!;\n\n    if (TypesetView.is(tickLabel)) {\n      tickLabel.textAlign.setAutoState(\"left\");\n      tickLabel.textBaseline.setAutoState(\"middle\");\n      tickLabel.textOrigin.setAutoState(new PointR2(x2, y));\n    }\n  }\n\n  protected renderTick(context: CanvasContext, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x0 = Math.round(origin.x);\n    const y = Math.round(origin.y);\n    const x1 = x0 + this.tickMarkLength.value!;\n\n    context.beginPath();\n    context.strokeStyle = this.tickMarkColor.value!.toString();\n    context.lineWidth = this.tickMarkWidth.value!;\n    context.moveTo(x0, y);\n    context.lineTo(x1, y);\n    context.stroke();\n\n    const gridLineWidth = this.gridLineWidth.value!;\n    if (gridLineWidth !== 0 && frame.yMin < y && y < frame.yMax) {\n      context.beginPath();\n      context.strokeStyle = this.gridLineColor.value!.toString();\n      context.lineWidth = gridLineWidth;\n      context.moveTo(x0, y);\n      context.lineTo(frame.xMin, y);\n      context.stroke();\n    }\n  }\n}\nTickView.Right = RightTickView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {CanvasContext} from \"@swim/render\";\nimport {RenderedView, TypesetView} from \"@swim/view\";\nimport {TickOrientation, TickView} from \"./TickView\";\n\nexport class BottomTickView<D> extends TickView<D> {\n  constructor(value: D) {\n    super(value);\n  }\n\n  get orientation(): TickOrientation {\n    return \"bottom\";\n  }\n\n  protected layoutTickLabel(tickLabel: RenderedView, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x = Math.round(origin.x);\n    const y0 = Math.round(origin.y);\n    const y1 = y0 + this.tickMarkLength.value!;\n    const y2 = y1 + this.tickLabelPadding.value!;\n\n    if (TypesetView.is(tickLabel)) {\n      tickLabel.textAlign.setAutoState(\"center\");\n      tickLabel.textBaseline.setAutoState(\"top\");\n      tickLabel.textOrigin.setAutoState(new PointR2(x, y2));\n    }\n  }\n\n  protected renderTick(context: CanvasContext, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x = Math.round(origin.x);\n    const y0 = Math.round(origin.y);\n    const y1 = y0 + this.tickMarkLength.value!;\n\n    context.beginPath();\n    context.strokeStyle = this.tickMarkColor.value!.toString();\n    context.lineWidth = this.tickMarkWidth.value!;\n    context.moveTo(x, y0);\n    context.lineTo(x, y1);\n    context.stroke();\n\n    const gridLineWidth = this.gridLineWidth.value!;\n    if (gridLineWidth !== 0 && frame.xMin < x && x < frame.xMax) {\n      context.beginPath();\n      context.strokeStyle = this.gridLineColor.value!.toString();\n      context.lineWidth = gridLineWidth;\n      context.moveTo(x, y0);\n      context.lineTo(x, frame.yMin);\n      context.stroke();\n    }\n  }\n}\nTickView.Bottom = BottomTickView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {CanvasContext} from \"@swim/render\";\nimport {RenderedView, TypesetView} from \"@swim/view\";\nimport {TickOrientation, TickView} from \"./TickView\";\n\nexport class LeftTickView<D> extends TickView<D> {\n  constructor(value: D) {\n    super(value);\n  }\n\n  get orientation(): TickOrientation {\n    return \"left\";\n  }\n\n  protected layoutTickLabel(tickLabel: RenderedView, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x0 = Math.round(origin.x);\n    const y = Math.round(origin.y);\n    const x1 = x0 - this.tickMarkLength.value!;\n    const x2 = x1 - this.tickLabelPadding.value!;\n\n    if (TypesetView.is(tickLabel)) {\n      tickLabel.textAlign.setAutoState(\"right\");\n      tickLabel.textBaseline.setAutoState(\"middle\");\n      tickLabel.textOrigin.setAutoState(new PointR2(x2, y));\n    }\n  }\n\n  protected renderTick(context: CanvasContext, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x0 = Math.round(origin.x);\n    const y = Math.round(origin.y);\n    const x1 = x0 - this.tickMarkLength.value!;\n\n    context.beginPath();\n    context.strokeStyle = this.tickMarkColor.value!.toString();\n    context.lineWidth = this.tickMarkWidth.value!;\n    context.moveTo(x0, y);\n    context.lineTo(x1, y);\n    context.stroke();\n\n    const gridLineWidth = this.gridLineWidth.value!;\n    if (gridLineWidth !== 0 && frame.yMin < y && y < frame.yMax) {\n      context.beginPath();\n      context.strokeStyle = this.gridLineColor.value!.toString();\n      context.lineWidth = gridLineWidth;\n      context.moveTo(x0, y);\n      context.lineTo(frame.xMax, y);\n      context.stroke();\n    }\n  }\n}\nTickView.Left = LeftTickView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {TimeZone, AnyDateTime, DateTime, DateTimeFormat, TimeInterval} from \"@swim/time\";\nimport {ContinuousScale, TimeScale} from \"@swim/scale\";\n\nconst ERROR_10 = Math.sqrt(50);\nconst ERROR_5 = Math.sqrt(10);\nconst ERROR_2 = Math.sqrt(2);\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\nconst YEAR = 365 * DAY;\n\nconst TIME_TICK_INTERVALS = new BTree<number, TimeInterval>()\n  .set(SECOND, TimeInterval.second())\n  .set(5 * SECOND, TimeInterval.second(5))\n  .set(15 * SECOND, TimeInterval.second(15))\n  .set(30 * SECOND, TimeInterval.second(30))\n  .set(MINUTE, TimeInterval.minute(1))\n  .set(5 * MINUTE, TimeInterval.minute(5))\n  .set(15 * MINUTE, TimeInterval.minute(15))\n  .set(30 * MINUTE, TimeInterval.minute(30))\n  .set(HOUR, TimeInterval.hour())\n  .set(3 * HOUR, TimeInterval.hour(3))\n  .set(6 * HOUR, TimeInterval.hour(6))\n  .set(12 * HOUR, TimeInterval.hour(12))\n  .set(DAY, TimeInterval.day())\n  .set(2 * DAY, TimeInterval.day(2))\n  .set(WEEK, TimeInterval.week())\n  .set(MONTH, TimeInterval.month())\n  .set(3 * MONTH, TimeInterval.month(3))\n  .set(YEAR, TimeInterval.year());\n\nconst MILLISECOND_FORMAT = DateTimeFormat.pattern(\".%L\");\nconst SECOND_FORMAT = DateTimeFormat.pattern(\":%S\");\nconst MINUTE_FORMAT = DateTimeFormat.pattern(\"%I:%M\");\nconst HOUR_FORMAT = DateTimeFormat.pattern(\"%I %p\");\nconst WEEKDAY_FORMAT = DateTimeFormat.pattern(\"%a %d\");\nconst MONTHDAY_FORMAT = DateTimeFormat.pattern(\"%b %d\");\nconst MONTH_FORMAT = DateTimeFormat.pattern(\"%B\");\nconst YEAR_FORMAT = DateTimeFormat.pattern(\"%Y\");\n\nexport abstract class TickGenerator<D> {\n  abstract count(): number;\n  abstract count(n: number): this;\n\n  abstract domain(): D[];\n  abstract domain(xs: ReadonlyArray<D>): this;\n  abstract domain(x0: D, x1: D): this;\n\n  abstract generate(): D[];\n\n  format(tickValue: D): string {\n    return \"\" + tickValue;\n  }\n\n  static fromScale<D>(scale: ContinuousScale<D, number>, n?: number): TickGenerator<D> {\n    if (n === void 0) {\n      n = 10;\n    }\n    if (scale instanceof TimeScale) {\n      const domain = scale.domain() as unknown as DateTime[];\n      return new TimeTickGenerator(domain[0], domain[1], n) as unknown as TickGenerator<D>;\n    } else {\n      const domain = scale.domain() as unknown as number[];\n      return new NumberTickGenerator(domain[0], domain[1], n) as unknown as TickGenerator<D>;\n    }\n  }\n\n  /** @hidden */\n  static step(dx: number, n: number): number {\n    const step0 = Math.abs(dx) / n;\n    let step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10));\n    const error = step0 / step1;\n    if (error >= ERROR_10) {\n      step1 *= 10;\n    } else if (error >= ERROR_5) {\n      step1 *= 5;\n    } else if (error >= ERROR_2) {\n      step1 *= 2;\n    }\n    return dx < 0 ? -step1 : step1;\n  }\n}\n\nexport class NumberTickGenerator extends TickGenerator<number> {\n  /** @hidden */\n  protected x0: number;\n  /** @hidden */\n  protected dx: number;\n  /** @hidden */\n  protected n: number;\n\n  constructor(x0: number, x1: number, n: number) {\n    super();\n    this.x0 = x0;\n    this.dx = x1 - this.x0;\n    this.n = Math.max(0, n);\n  }\n\n  count(): number;\n  count(n: number): this;\n  count(n?: number): number | this {\n    if (n === void 0) {\n      return this.n;\n    } else {\n      this.n = Math.max(0, n);\n      return this;\n    }\n  }\n\n  domain(): number[];\n  domain(xs: ReadonlyArray<number>): this;\n  domain(x0: number, x1: number): this;\n  domain(x0?: ReadonlyArray<number> | number, x1?: number): number[] | this {\n    if (x0 === void 0) {\n      return [this.x0, this.x0 + this.dx];\n    } else if (x1 === void 0) {\n      this.x0 = (x0 as ReadonlyArray<number>)[0];\n      this.dx = (x0 as ReadonlyArray<number>)[1] - this.x0;\n      return this;\n    } else {\n      this.x0 = x0 as number;\n      this.dx = x1 - this.x0;\n      return this;\n    }\n  }\n\n  generate(): number[] {\n    let x0: number;\n    let x1: number;\n    if (this.dx < 0) {\n      x1 = this.x0;\n      x0 = x1 + this.dx;\n    } else {\n      x0 = this.x0;\n      x1 = x0 + this.dx;\n    }\n\n    const step = NumberTickGenerator.interval(x1 - x0, this.n);\n    if (step === 0 || !isFinite(step)) {\n      return [];\n    }\n\n    let ticks;\n    if (step > 0) {\n      x0 = Math.ceil(x0 / step);\n      x1 = Math.floor(x1 / step);\n      const n = Math.ceil(x1 - x0 + 1);\n      ticks = new Array(n);\n      for (let i = 0; i < n; i += 1) {\n        ticks[i] = (x0 + i) * step;\n      }\n    } else {\n      x0 = Math.floor(x0 * step);\n      x1 = Math.ceil(x1 * step);\n      const n = Math.ceil(x0 - x1 + 1);\n      ticks = new Array(n);\n      for (let i = 0; i < n; i += 1) {\n        ticks[i] = (x0 - i) / step;\n      }\n    }\n\n    if (this.dx < 0) {\n      ticks.reverse();\n    }\n\n    return ticks;\n  }\n\n  /** @hidden */\n  static interval(dx: number, n: number = 10): number {\n    const step = dx / n;\n    const power = Math.floor(Math.log(step) / Math.LN10);\n    const power10 = Math.pow(10, power);\n    const error = step / power10;\n    const base = error >= ERROR_10 ? 10 : error >= ERROR_5 ? 5 : error >= ERROR_2 ? 2 : 1;\n    return power >= 0 ? power10 * base : -Math.pow(10, -power) / base;\n  }\n}\n\nexport class TimeTickGenerator extends TickGenerator<DateTime> {\n  /** @hidden */\n  protected t0: number;\n  /** @hidden */\n  protected dt: number;\n  /** @hidden */\n  protected zone: TimeZone;\n  /** @hidden */\n  protected n: number;\n\n  constructor(d0: AnyDateTime, d1: AnyDateTime, n: number, zone?: TimeZone) {\n    super();\n    d0 = DateTime.fromAny(d0);\n    d1 = DateTime.fromAny(d1);\n    this.t0 = d0.time();\n    this.dt = d1.time() - this.t0;\n    this.zone = zone || d0.zone();\n    this.n = Math.max(0, n);\n  }\n\n  count(): number;\n  count(n: number): this;\n  count(n?: number): number | this {\n    if (n === void 0) {\n      return this.n;\n    } else {\n      this.n = Math.max(0, n);\n      return this;\n    }\n  }\n\n  domain(): DateTime[];\n  domain(ts: ReadonlyArray<AnyDateTime>): this;\n  domain(d0: AnyDateTime, d1: AnyDateTime): this;\n  domain(d0?: ReadonlyArray<AnyDateTime> | AnyDateTime, d1?: AnyDateTime): DateTime[] | this {\n    if (d0 === void 0) {\n      return [new DateTime(this.t0, this.zone), new DateTime(this.t0 + this.dt, this.zone)];\n    } else {\n      if (d1 === void 0) {\n        d1 = (d0 as ReadonlyArray<AnyDateTime>)[1];\n        d0 = (d0 as ReadonlyArray<AnyDateTime>)[0];\n      } else {\n        d0 = d0 as AnyDateTime;\n      }\n      d0 = DateTime.fromAny(d0);\n      d1 = DateTime.fromAny(d1);\n      this.t0 = d0.time();\n      this.dt = d1.time() - this.t0;\n      return this;\n    }\n  }\n\n  generate(interval?: TimeInterval | number): DateTime[] {\n    let t0: number;\n    let t1: number;\n    if (this.dt < 0) {\n      t1 = this.t0;\n      t0 = t1 + this.dt;\n    } else {\n      t0 = this.t0;\n      t1 = t0 + this.dt;\n    }\n\n    if (interval === void 0) {\n      interval = this.n;\n    }\n    interval = TimeTickGenerator.interval(t1 - t0, interval);\n    const ticks = interval.range(new DateTime(t0, this.zone), new DateTime(t1 + 1, this.zone));\n\n    if (this.dt < 0) {\n      ticks.reverse();\n    }\n\n    return ticks;\n  }\n\n  format(tickValue: DateTime): string {\n    if (TimeInterval.second().floor(tickValue) < tickValue) {\n      return MILLISECOND_FORMAT.format(tickValue);\n    } else if (TimeInterval.minute().floor(tickValue) < tickValue) {\n      return SECOND_FORMAT.format(tickValue);\n    } else if (TimeInterval.hour().floor(tickValue) < tickValue) {\n      return MINUTE_FORMAT.format(tickValue);\n    } else if (TimeInterval.day().floor(tickValue) < tickValue) {\n      return HOUR_FORMAT.format(tickValue);\n    } else if (TimeInterval.month().floor(tickValue) < tickValue) {\n      if (TimeInterval.week().floor(tickValue) < tickValue) {\n        return WEEKDAY_FORMAT.format(tickValue);\n      } else {\n        return MONTHDAY_FORMAT.format(tickValue);\n      }\n    } else if (TimeInterval.year().floor(tickValue) < tickValue) {\n      return MONTH_FORMAT.format(tickValue);\n    } else {\n      return YEAR_FORMAT.format(tickValue);\n    }\n  }\n\n  /** @hidden */\n  static interval(dt: number, interval: TimeInterval | number = 10): TimeInterval {\n    if (typeof interval === \"number\") {\n      const t = Math.abs(dt) / interval;\n      const duration = TIME_TICK_INTERVALS.nextKey(t);\n      if (duration === void 0) {\n        const k = TickGenerator.step(dt / YEAR, interval);\n        interval = TimeInterval.year(k);\n      } else if (duration > SECOND) {\n        if (t / TIME_TICK_INTERVALS.previousKey(t)! < duration / t) {\n          interval = TIME_TICK_INTERVALS.previousValue(t)!;\n        } else {\n          interval = TIME_TICK_INTERVALS.nextValue(t)!;\n        }\n      } else {\n        const k = Math.max(1, TickGenerator.step(dt, interval));\n        interval = TimeInterval.millisecond(k);\n      }\n    }\n    return interval;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {AnyPointR2, PointR2, BoxR2} from \"@swim/math\";\nimport {DateTime} from \"@swim/time\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {NumberInterpolator} from \"@swim/interpolate\";\nimport {ContinuousScale, LinearScale, TimeScale} from \"@swim/scale\";\nimport {Tween, AnyTransition, Transition} from \"@swim/transition\";\nimport {StyleValue} from \"@swim/style\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  ViewFlags,\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  GraphicsView,\n} from \"@swim/view\";\nimport {AnyTickView, TickView} from \"../tick/TickView\";\nimport {TickGenerator} from \"../tick/TickGenerator\";\nimport {AxisViewController} from \"./AxisViewController\";\nimport {TopAxisView} from \"./TopAxisView\";\nimport {RightAxisView} from \"./RightAxisView\";\nimport {BottomAxisView} from \"./BottomAxisView\";\nimport {LeftAxisView} from \"./LeftAxisView\";\n\nexport type AxisOrientation = \"top\" | \"right\" | \"bottom\" | \"left\";\n\nexport type AnyAxisView<D> = AxisView<D> | AxisViewInit<D>;\n\nexport interface AxisViewInit<D> extends RenderedViewInit {\n  orientation: AxisOrientation;\n  scale: ContinuousScale<D, number> | string;\n\n  ticks?: AnyTickView<D>[];\n  tickGenerator?: TickGenerator<D>;\n  tickSpacing?: number;\n  tickTransition?: AnyTransition<any>;\n\n  domainColor?: AnyColor;\n  domainWidth?: number;\n  domainSerif?: number;\n\n  tickMarkColor?: AnyColor;\n  tickMarkWidth?: number;\n  tickMarkLength?: number;\n\n  tickLabelPadding?: number;\n\n  gridLineColor?: AnyColor;\n  gridLineWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\nexport abstract class AxisView<D> extends GraphicsView {\n  /** @hidden */\n  readonly _ticks: BTree<D, TickView<D>>;\n  /** @hidden */\n  _tickGenerator: TickGenerator<D> | null;\n  /** @hidden */\n  _tickSpacing: number;\n  /** @hidden */\n  _tickTransition: Transition<any> | null;\n\n  constructor(scale: ContinuousScale<D, number>) {\n    super();\n    this._ticks = new BTree();\n    this._tickGenerator = TickGenerator.fromScale(scale);\n    this._tickSpacing = 80;\n    this._tickTransition = Transition.duration(200);\n    this.scale.setAutoState(scale);\n  }\n\n  get viewController(): AxisViewController<D> | null {\n    return this._viewController;\n  }\n\n  abstract get orientation(): AxisOrientation;\n\n  @MemberAnimator(Object)\n  scale: MemberAnimator<this, ContinuousScale<D, number>>;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  origin: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Color, {inherit: true})\n  domainColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {inherit: true})\n  domainWidth: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {inherit: true})\n  domainSerif: MemberAnimator<this, number>;\n\n  @MemberAnimator(Color, {inherit: true})\n  tickMarkColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {inherit: true})\n  tickMarkWidth: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {inherit: true})\n  tickMarkLength: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {inherit: true})\n  tickLabelPadding: MemberAnimator<this, number>;\n\n  @MemberAnimator(Color, {inherit: true})\n  gridLineColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {inherit: true})\n  gridLineWidth: MemberAnimator<this, number>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  getTick(value: D): TickView<D> | undefined {\n    return this._ticks.get(value);\n  }\n\n  insertTick(tick: AnyTickView<D>): void {\n    tick = TickView.fromAny(tick, this.orientation);\n    this.insertChildView(tick, this._ticks.nextValue(tick.value) || null);\n  }\n\n  removeTick(value: D): void {\n    const tick = this._ticks.get(value);\n    if (tick !== void 0) {\n      tick.remove();\n      this._ticks.delete(value);\n    }\n  }\n\n  domain(): ReadonlyArray<D>;\n  domain(x0: D[] | D | string, x1?: D, tween?: Tween<ContinuousScale<D, number>>): this;\n  domain(x0?: D[] | string | D, x1?: D, tween?: Tween<ContinuousScale<D, number>>): ReadonlyArray<D> | this {\n    let scale = this.scale.value!;\n    if (x0 === void 0) {\n      return scale.domain();\n    } else {\n      scale = scale.domain(x0 as any, x1);\n      if (this.scale.isAuto() && !scale.equals(this.scale.state)) {\n        this.scale.setAutoState(scale, tween);\n      }\n      return this;\n    }\n  }\n\n  range(): ReadonlyArray<number>;\n  range(y0: number[] | number, y1?: number, tween?: Tween<ContinuousScale<D, number>>): this;\n  range(y0?: number[] | number, y1?: number, tween?: Tween<ContinuousScale<D, number>>): ReadonlyArray<number> | this {\n    let scale = this.scale.value!;\n    if (y0 === void 0) {\n      return scale.range();\n    } else {\n      scale = scale.range(y0 as any, y1);\n      if (this.scale.isAuto() && !scale.equals(this.scale.state)) {\n        this.scale.setAutoState(scale, tween);\n      }\n      return this;\n    }\n  }\n\n  tickGenerator(): TickGenerator<D> | null;\n  tickGenerator(tickGenerator: TickGenerator<D> | null): this;\n  tickGenerator(tickGenerator?: TickGenerator<D> | null): TickGenerator<D> | null | this {\n    if (tickGenerator === void 0) {\n      return this._tickGenerator;\n    } else {\n      this._tickGenerator = tickGenerator;\n      return this;\n    }\n  }\n\n  tickSpacing(): number;\n  tickSpacing(tickSpacing: number): this;\n  tickSpacing(tickSpacing?: number): number | this {\n    if (tickSpacing === void 0) {\n      return this._tickSpacing;\n    } else {\n      this._tickSpacing = tickSpacing;\n      return this;\n    }\n  }\n\n  tickTransition(): Transition<any> | null;\n  tickTransition(tickTransition: AnyTransition<any> | null): this;\n  tickTransition(tickTransition?: AnyTransition<any> | null): Transition<any> | null | this {\n    if (tickTransition === void 0) {\n      return this._tickTransition;\n    } else {\n      if (tickTransition !== null) {\n        tickTransition = Transition.fromAny(tickTransition);\n      }\n      this._tickTransition = tickTransition;\n      return this;\n    }\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsAnimate) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  protected willRender(viewContext: RenderedViewContext): void {\n    super.willRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.save();\n    }\n  }\n\n  protected didRender(viewContext: RenderedViewContext): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      this.renderDomain(context, this.viewFrame);\n      context.restore();\n    }\n    super.didRender(viewContext);\n  }\n\n  protected onLayout(viewContext: RenderedViewContext): void {\n    super.onLayout(viewContext);\n    if (this._tickGenerator !== null) {\n      this.generateTicks(this._tickGenerator);\n      this.layoutTicks(this.viewFrame);\n    }\n  }\n\n  protected generateTicks(tickGenerator: TickGenerator<D>): void {\n    const scale = this.scale.value!;\n    if (this._tickSpacing !== 0) {\n      const [y0, y1] = scale.range();\n      const dy = Math.abs(y1 - y0);\n      const n = Math.max(1, Math.floor(dy / this._tickSpacing));\n      tickGenerator.count(n);\n    }\n    tickGenerator.domain(scale.domain());\n\n    const oldTicks = this._ticks.clone();\n    const tickValues = tickGenerator.generate();\n    for (let i = 0, n = tickValues.length; i < n; i += 1) {\n      const tickValue = tickValues[i];\n      const oldTick = oldTicks.get(tickValue);\n      if (oldTick !== void 0) {\n        oldTicks.delete(tickValue);\n        oldTick.fadeIn(this._tickTransition || void 0);\n      } else {\n        const newTick = this.createTickView(tickValue);\n        if (newTick !== null) {\n          this.insertTick(newTick);\n          newTick.opacity._value = 0;\n          newTick.opacity._state = 0;\n          newTick.fadeIn(this._tickTransition || void 0);\n        }\n      }\n    }\n    oldTicks.forEach(function (value: D, oldTick: TickView<D>): void {\n      if (!oldTick._preserve) {\n        oldTick.fadeOut(this._tickTransition || void 0);\n      }\n    }, this);\n  }\n\n  protected createTickView(tickValue: D): TickView<D> | null {\n    let tickView: TickView<D> | null | undefined;\n    const viewController = this._viewController;\n    if (viewController !== null) {\n      tickView = viewController.createTickView(tickValue);\n    }\n    if (tickView === void 0) {\n      tickView = TickView.from(this.orientation, tickValue);\n    }\n    if (tickView !== null) {\n      const tickLabel = this.createTickLabel(tickValue, tickView);\n      if (tickLabel !== null) {\n        tickView.tickLabel(tickLabel);\n        tickView._preserve = false;\n      }\n    }\n    return tickView;\n  }\n\n  protected createTickLabel(tickValue: D, tickView: TickView<D>): View | string | null {\n    let tickLabel: View | string | null | undefined;\n    const viewController = this._viewController;\n    if (viewController !== null) {\n      tickLabel = viewController.createTickLabel(tickValue, tickView);\n    }\n    if (tickLabel === void 0) {\n      if (this._tickGenerator !== null) {\n        tickLabel = this._tickGenerator.format(tickValue);\n      } else {\n        tickLabel = \"\" + tickValue;\n      }\n    }\n    if (typeof tickLabel === \"string\") {\n      tickLabel = this.formatTickLabel(tickLabel, tickView);\n    }\n    return tickLabel;\n  }\n\n  protected formatTickLabel(tickLabel: string, tickView: TickView<D>): string | null {\n    const viewController = this._viewController;\n    if (viewController !== null) {\n      return viewController.formatTickLabel(tickLabel, tickView);\n    } else {\n      return tickLabel;\n    }\n  }\n\n  protected abstract renderDomain(context: CanvasContext, frame: BoxR2): void;\n\n  protected layoutTicks(frame: BoxR2): void {\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof TickView) {\n        this.layoutTick(childView, frame);\n      }\n    }\n  }\n\n  protected abstract layoutTick(tick: TickView<D>, frame: BoxR2): void;\n\n  protected onInsertChildView(childView: View, targetView: View | null): void {\n    super.onInsertChildView(childView, targetView);\n    if (childView instanceof TickView) {\n      this._ticks.set(childView.value, childView);\n    }\n  }\n\n  protected onRemoveChildView(childView: View): void {\n    if (childView instanceof TickView) {\n      this._ticks.delete(childView.value);\n    }\n  }\n\n  static top<D>(scale: ContinuousScale<D, number> | string): TopAxisView<D> {\n    scale = AxisView.scale(scale);\n    return new AxisView.Top(scale);\n  }\n\n  static right<D>(scale: ContinuousScale<D, number> | string): RightAxisView<D> {\n    scale = AxisView.scale(scale);\n    return new AxisView.Right(scale);\n  }\n\n  static bottom<D>(scale: ContinuousScale<D, number> | string): BottomAxisView<D> {\n    scale = AxisView.scale(scale);\n    return new AxisView.Bottom(scale);\n  }\n\n  static left<D>(scale: ContinuousScale<D, number> | string): LeftAxisView<D> {\n    scale = AxisView.scale(scale);\n    return new AxisView.Left(scale);\n  }\n\n  static from<D>(orientation: AxisOrientation, scale: ContinuousScale<D, number> | string): AxisView<D> {\n    if (orientation === \"top\") {\n      return AxisView.top(scale);\n    } else if (orientation === \"right\") {\n      return AxisView.right(scale);\n    } else if (orientation === \"bottom\") {\n      return AxisView.bottom(scale);\n    } else if (orientation === \"left\") {\n      return AxisView.left(scale);\n    } else {\n      throw new TypeError(orientation);\n    }\n  }\n\n  static fromAny<D>(axis: AnyAxisView<D>): AxisView<D> {\n    if (axis instanceof AxisView) {\n      return axis;\n    } else if (typeof axis === \"object\" && axis !== null) {\n      const view = AxisView.from(axis.orientation, axis.scale);\n\n      const ticks = axis.ticks;\n      const tickGenerator = axis.tickGenerator !== void 0\n                          ? axis.tickGenerator\n                          : (ticks !== void 0 ? null : void 0);\n      if (tickGenerator !== void 0) {\n        view.tickGenerator(tickGenerator);\n      }\n      if (ticks !== void 0) {\n        for (let i = 0, n = ticks.length; i < n; i += 1) {\n          view.insertTick(ticks[i]);\n        }\n      }\n      if (axis.tickSpacing !== void 0) {\n        view.tickSpacing(axis.tickSpacing);\n      }\n      if (axis.tickTransition !== void 0) {\n        view.tickTransition(axis.tickTransition);\n      }\n\n      if (axis.domainColor !== void 0) {\n        view.domainColor(axis.domainColor);\n      }\n      if (axis.domainWidth !== void 0) {\n        view.domainWidth(axis.domainWidth);\n      }\n      if (axis.domainSerif !== void 0) {\n        view.domainSerif(axis.domainSerif);\n      }\n\n      if (axis.tickMarkColor !== void 0) {\n        view.tickMarkColor(axis.tickMarkColor);\n      }\n      if (axis.tickMarkWidth !== void 0) {\n        view.tickMarkWidth(axis.tickMarkWidth);\n      }\n      if (axis.tickMarkLength !== void 0) {\n        view.tickMarkLength(axis.tickMarkLength);\n      }\n\n      if (axis.tickLabelPadding !== void 0) {\n        view.tickLabelPadding(axis.tickLabelPadding);\n      }\n\n      if (axis.gridLineColor !== void 0) {\n        view.gridLineColor(axis.gridLineColor);\n      }\n      if (axis.gridLineWidth !== void 0) {\n        view.gridLineWidth(axis.gridLineWidth);\n      }\n\n      if (axis.font !== void 0) {\n        view.font(axis.font);\n      }\n      if (axis.textColor !== void 0) {\n        view.textColor(axis.textColor);\n      }\n\n      if (axis.hidden !== void 0) {\n        view.setHidden(axis.hidden);\n      }\n      if (axis.culled !== void 0) {\n        view.setCulled(axis.culled);\n      }\n\n      return view;\n    }\n    throw new TypeError(\"\" + axis);\n  }\n\n  /** @hidden */\n  static scale<D>(value: ContinuousScale<D, number> | string): ContinuousScale<D, number> {\n    if (value instanceof ContinuousScale) {\n      return value;\n    } else if (typeof value === \"string\") {\n      if (value === \"linear\") {\n        return new LinearScale(0, 1, new NumberInterpolator(0, 0)) as unknown as ContinuousScale<D, number>;\n      } else if (value === \"time\") {\n        const d1 = DateTime.current();\n        const d0 = d1.day(d1.day() - 1);\n        return new TimeScale(d0, d1, new NumberInterpolator(0, 0)) as unknown as ContinuousScale<D, number>;\n      } else {\n        const domain = value.split(\"...\");\n        const x0 = StyleValue.parse(domain[0]);\n        const x1 = StyleValue.parse(domain[1]);\n        if (typeof x0 === \"number\" && typeof x1 === \"number\") {\n          return new LinearScale(x0, x1, new NumberInterpolator(0, 0)) as unknown as ContinuousScale<D, number>;\n        } else if (x0 instanceof DateTime && x1 instanceof DateTime) {\n          return new TimeScale(x0, x1, new NumberInterpolator(0, 0)) as unknown as ContinuousScale<D, number>;\n        }\n      }\n    }\n    throw new TypeError(value);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Top: typeof TopAxisView; // defined by TopAxisView\n  /** @hidden */\n  static Right: typeof RightAxisView; // defined by RightAxisView\n  /** @hidden */\n  static Bottom: typeof BottomAxisView; // defined by BottomAxisView\n  /** @hidden */\n  static Left: typeof LeftAxisView; // defined by LeftAxisView\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {View, GraphicsViewController} from \"@swim/view\";\nimport {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\nimport {AxisViewObserver} from \"./AxisViewObserver\";\n\nexport class AxisViewController<D = any, V extends AxisView<D> = AxisView<D>> extends GraphicsViewController<V> implements AxisViewObserver<D, V> {\n  get orientation(): AxisOrientation {\n    const view = this._view;\n    return view !== null ? view.orientation : void 0 as any;\n  }\n\n  createTickView(tickValue: D): TickView<D> | null | undefined {\n    return void 0;\n  }\n\n  createTickLabel(tickValue: D, tickView: TickView<D>): View | string | null | undefined {\n    return void 0;\n  }\n\n  formatTickLabel(tickLabel: string, tickView: TickView<D>): string | null {\n    return tickLabel;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {ContinuousScale} from \"@swim/scale\";\nimport {CanvasContext} from \"@swim/render\";\nimport {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\n\nexport class TopAxisView<D> extends AxisView<D> {\n  constructor(scale: ContinuousScale<D, number>) {\n    super(scale);\n  }\n\n  get orientation(): AxisOrientation {\n    return \"top\";\n  }\n\n  protected renderDomain(context: CanvasContext, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x0 = origin.x;\n    const y0 = origin.y;\n    const [dx0, dx1] = this.scale.value!.range();\n    const dy = this.domainSerif.value!;\n\n    context.beginPath();\n    context.strokeStyle = this.domainColor.value!.toString();\n    context.lineWidth = this.domainWidth.value!;\n    if (dy !== 0) {\n      context.moveTo(x0 + dx0, y0 - dy);\n      context.lineTo(x0 + dx0, y0);\n      context.lineTo(x0 + dx1, y0);\n      context.lineTo(x0 + dx1, y0 - dy);\n    } else {\n      context.moveTo(x0 + dx0, y0);\n      context.lineTo(x0 + dx1, y0);\n    }\n    context.stroke();\n  }\n\n  protected layoutTick(tick: TickView<D>, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const dx = this.scale.value!.scale(tick.value);\n    tick.origin.setAutoState(new PointR2(origin.x + dx, origin.y));\n    tick.setCoord(dx);\n  }\n}\nAxisView.Top = TopAxisView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {ContinuousScale} from \"@swim/scale\";\nimport {CanvasContext} from \"@swim/render\";\nimport {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\n\nexport class RightAxisView<D> extends AxisView<D> {\n  constructor(scale: ContinuousScale<D, number>) {\n    super(scale);\n  }\n\n  get orientation(): AxisOrientation {\n    return \"right\";\n  }\n\n  protected renderDomain(context: CanvasContext, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x0 = origin.x;\n    const y0 = origin.y;\n    const [dy0, dy1] = this.scale.value!.range();\n    const dx = this.domainSerif.value!;\n\n    context.beginPath();\n    context.strokeStyle = this.domainColor.value!.toString();\n    context.lineWidth = this.domainWidth.value!;\n    if (dx !== 0) {\n      context.moveTo(x0 + dx, y0 + dy0);\n      context.lineTo(x0,      y0 + dy0);\n      context.lineTo(x0,      y0 + dy1);\n      context.lineTo(x0 + dx, y0 + dy1);\n    } else {\n      context.moveTo(x0, y0 + dy0);\n      context.lineTo(x0, y0 + dy1);\n    }\n    context.stroke();\n  }\n\n  protected layoutTick(tick: TickView<D>, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const dy = this.scale.value!.scale(tick.value);\n    tick.origin.setAutoState(new PointR2(origin.x, origin.y + dy));\n    tick.setCoord(dy);\n  }\n}\nAxisView.Right = RightAxisView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {ContinuousScale} from \"@swim/scale\";\nimport {CanvasContext} from \"@swim/render\";\nimport {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\n\nexport class BottomAxisView<D> extends AxisView<D> {\n  constructor(scale: ContinuousScale<D, number>) {\n    super(scale);\n  }\n\n  get orientation(): AxisOrientation {\n    return \"bottom\";\n  }\n\n  protected renderDomain(context: CanvasContext, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x0 = origin.x;\n    const y0 = origin.y;\n    const [dx0, dx1] = this.scale.value!.range();\n    const dy = this.domainSerif.value!;\n\n    context.beginPath();\n    context.strokeStyle = this.domainColor.value!.toString();\n    context.lineWidth = this.domainWidth.value!;\n    if (dy !== 0) {\n      context.moveTo(x0 + dx0, y0 + dy);\n      context.lineTo(x0 + dx0, y0);\n      context.lineTo(x0 + dx1, y0);\n      context.lineTo(x0 + dx1, y0 + dy);\n    } else {\n      context.moveTo(x0 + dx0, y0);\n      context.lineTo(x0 + dx1, y0);\n    }\n    context.stroke();\n  }\n\n  protected layoutTick(tick: TickView<D>, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const dx = this.scale.value!.scale(tick.value);\n    tick.origin.setAutoState(new PointR2(origin.x + dx, origin.y));\n    tick.setCoord(dx);\n  }\n}\nAxisView.Bottom = BottomAxisView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {ContinuousScale} from \"@swim/scale\";\nimport {CanvasContext} from \"@swim/render\";\nimport {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\n\nexport class LeftAxisView<D> extends AxisView<D> {\n  constructor(scale: ContinuousScale<D, number>) {\n    super(scale);\n  }\n\n  get orientation(): AxisOrientation {\n    return \"left\";\n  }\n\n  protected renderDomain(context: CanvasContext, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const x0 = origin.x;\n    const y0 = origin.y;\n    const [dy0, dy1] = this.scale.value!.range();\n    const dx = this.domainSerif.value!;\n\n    context.beginPath();\n    context.strokeStyle = this.domainColor.value!.toString();\n    context.lineWidth = this.domainWidth.value!;\n    if (dx !== 0) {\n      context.moveTo(x0 - dx, y0 + dy0);\n      context.lineTo(x0,      y0 + dy0);\n      context.lineTo(x0,      y0 + dy1);\n      context.lineTo(x0 - dx, y0 + dy1);\n    } else {\n      context.moveTo(x0, y0 + dy0);\n      context.lineTo(x0, y0 + dy1);\n    }\n    context.stroke();\n  }\n\n  protected layoutTick(tick: TickView<D>, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    const dy = this.scale.value!.scale(tick.value);\n    tick.origin.setAutoState(new PointR2(origin.x, origin.y + dy));\n    tick.setCoord(dy);\n  }\n}\nAxisView.Left = LeftAxisView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {Tween} from \"@swim/transition\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  ViewFlags,\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  RenderedView,\n  TypesetView,\n  GraphicsView,\n  GraphicsViewController,\n} from \"@swim/view\";\nimport {AnyTextRunView, TextRunView} from \"@swim/typeset\";\nimport {DatumCategory, DatumLabelPlacement} from \"./Datum\";\n\nexport type AnyDatumView<X, Y> = DatumView<X, Y> | DatumViewInit<X, Y>;\n\nexport interface DatumViewInit<X, Y> extends RenderedViewInit {\n  x: X;\n  y: Y;\n  y2?: Y;\n  r?: AnyLength;\n\n  hitRadius?: number;\n\n  category?: DatumCategory | null;\n\n  color?: AnyColor;\n  opacity?: number;\n\n  labelPadding?: AnyLength;\n  labelPlacement?: DatumLabelPlacement;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n\n  label?: View | string | null;\n}\n\nexport class DatumView<X, Y> extends GraphicsView {\n  /** @hidden */\n  _xCoord: number;\n  /** @hidden */\n  _yCoord: number;\n  /** @hidden */\n  _y2Coord?: number;\n  /** @hidden */\n  _hitRadius?: number;\n  /** @hidden */\n  _category?: DatumCategory;\n  /** @hidden */\n  _labelPlacement?: DatumLabelPlacement;\n\n  constructor(x: X, y: Y) {\n    super();\n    this._xCoord = NaN;\n    this._yCoord = NaN;\n    this.x.setAutoState(x);\n    this.y.setAutoState(y);\n  }\n\n  get viewController(): GraphicsViewController<DatumView<X, Y>> | null {\n    return this._viewController;\n  }\n\n  get xCoord(): number {\n    return this._xCoord;\n  }\n\n  get yCoord(): number {\n    return this._yCoord;\n  }\n\n  get y2Coord(): number | null {\n    return this._y2Coord !== void 0 ? this._y2Coord : null;\n  }\n\n  @MemberAnimator(Object)\n  x: MemberAnimator<this, X>;\n\n  @MemberAnimator(Object)\n  y: MemberAnimator<this, Y>;\n\n  @MemberAnimator(Object)\n  y2: MemberAnimator<this, Y | null>;\n\n  @MemberAnimator(Length)\n  r: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color)\n  color: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number)\n  opacity: MemberAnimator<this, number>;\n\n  @MemberAnimator(Length)\n  labelPadding: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  hitRadius(): number;\n  hitRadius(hitRadius: number): this;\n  hitRadius(hitRadius?: number): number | this {\n    if (hitRadius === void 0) {\n      return this._hitRadius !== void 0 ? this._hitRadius : 5;\n    } else {\n      this._hitRadius = hitRadius;\n      return this;\n    }\n  }\n\n  category(): DatumCategory | null;\n  category(category: DatumCategory | null): this;\n  category(category?: DatumCategory | null): DatumCategory | null | this {\n    if (category === void 0) {\n      return this._category !== void 0 ? this._category : null;\n    } else {\n      if (category !== null) {\n        this._category = category;\n      } else if (this._category !== void 0) {\n        this._category = void 0;\n      }\n      return this;\n    }\n  }\n\n  label(): View | null;\n  label(label: View | AnyTextRunView | null): this;\n  label(label?: View | AnyTextRunView | null): View | null | this {\n    if (label === void 0) {\n      return this.getChildView(\"label\");\n    } else {\n      if (label !== null && !(label instanceof View)) {\n        label = TextRunView.fromAny(label);\n      }\n      this.setChildView(\"label\", label);\n      return this;\n    }\n  }\n\n  labelPlacement(): DatumLabelPlacement;\n  labelPlacement(labelPlacement: DatumLabelPlacement): this;\n  labelPlacement(labelPlacement?: DatumLabelPlacement): DatumLabelPlacement | this {\n    if (labelPlacement === void 0) {\n      return this._labelPlacement !== void 0 ? this._labelPlacement : \"auto\";\n    } else {\n      this._labelPlacement = labelPlacement;\n      return this;\n    }\n  }\n\n  setState(datum: DatumViewInit<X, Y>, tween?: Tween<any>): void {\n    if (datum.y2 !== void 0) {\n      this.y2(datum.y2, tween);\n    }\n    if (datum.r !== void 0) {\n      this.r(datum.r, tween);\n    }\n\n    if (datum.hitRadius !== void 0) {\n      this.hitRadius(datum.hitRadius);\n    }\n\n    if (datum.category !== void 0) {\n      this.category(datum.category);\n    }\n\n    if (datum.color !== void 0) {\n      this.color(datum.color, tween);\n    }\n    if (datum.opacity !== void 0) {\n      this.opacity(datum.opacity, tween);\n    }\n\n    if (datum.labelPadding !== void 0) {\n      this.labelPadding(datum.labelPadding, tween);\n    }\n    if (datum.labelPlacement !== void 0) {\n      this.labelPlacement(datum.labelPlacement);\n    }\n\n    if (datum.font !== void 0) {\n      this.font(datum.font, tween);\n    }\n    if (datum.textColor !== void 0) {\n      this.textColor(datum.textColor, tween);\n    }\n\n    if (datum.label !== void 0) {\n      this.label(datum.label);\n    }\n\n    if (datum.hidden !== void 0) {\n      this.setHidden(datum.hidden);\n    }\n    if (datum.culled !== void 0) {\n      this.setCulled(datum.culled);\n    }\n  }\n\n  isGradientStop(): boolean {\n    return !!this.color.value || typeof this.opacity.value === \"number\";\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsAnimate) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  protected onLayout(viewContext: RenderedViewContext): void {\n    super.onLayout(viewContext);\n    const label = this.label();\n    if (RenderedView.is(label)) {\n      this.layoutLabel(label, this.viewFrame);\n    }\n  }\n\n  protected layoutLabel(label: RenderedView, frame: BoxR2): void {\n    let placement = this._labelPlacement;\n    if (placement !== \"above\" && placement !== \"below\" && placement !== \"middle\") {\n      const category = this._category;\n      if (category === \"increasing\" || category === \"maxima\") {\n        placement = \"above\";\n      } else if (category === \"decreasing\" || category === \"minima\") {\n        placement = \"below\";\n      } else {\n        placement = \"above\";\n      }\n    }\n\n    const labelPadding = this.labelPadding.value;\n    const padding = labelPadding !== void 0 ? labelPadding.pxValue(Math.min(frame.width, frame.height)) : 0;\n    const x = this._xCoord;\n    const y0 = this._yCoord;\n    let y1 = y0;\n    if (placement === \"above\") {\n      y1 -= padding;\n    } else if (placement === \"below\") {\n      y1 += padding;\n    }\n\n    if (TypesetView.is(label)) {\n      label.textAlign.setAutoState(\"center\");\n      if (placement === \"above\") {\n        label.textBaseline.setAutoState(\"bottom\");\n      } else if (placement === \"below\") {\n        label.textBaseline.setAutoState(\"top\");\n      } else if (placement === \"middle\") {\n        label.textBaseline.setAutoState(\"middle\");\n      }\n      label.textOrigin.setAutoState(new PointR2(x, y1));\n    }\n  }\n\n  hitTest(x: number, y: number, viewContext: RenderedViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        hit = this.hitTestDatum(x, y, context, this.viewFrame);\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestDatum(x: number, y: number, context: CanvasContext, frame: BoxR2): RenderedView | null {\n    let hitRadius = this.hitRadius();\n    const radius = this.r.value;\n    if (radius !== void 0) {\n      const size = Math.min(frame.width, frame.height);\n      hitRadius = Math.max(hitRadius, radius.pxValue(size));\n    }\n\n    const dx = this._xCoord - x;\n    const dy = this._yCoord - y;\n    if (dx * dx + dy * dy < hitRadius * hitRadius) {\n      return this;\n    }\n    return null;\n  }\n\n  static fromAny<X, Y>(datum: AnyDatumView<X, Y>): DatumView<X, Y> {\n    if (datum instanceof DatumView) {\n      return datum;\n    } else if (typeof datum === \"object\" && datum !== null) {\n      const view = new DatumView(datum.x, datum.y);\n      view.setState(datum);\n      return view;\n    }\n    throw new TypeError(\"\" + datum);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\nimport {AnyPointR2, PointR2, BoxR2} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {ContinuousScale} from \"@swim/scale\";\nimport {CanvasRenderer, CanvasContext} from \"@swim/render\";\nimport {\n  ViewFlags,\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  GraphicsView,\n} from \"@swim/view\";\nimport {AxisView} from \"../axis/AxisView\";\nimport {AnyDatumView, DatumView} from \"../data/DatumView\";\nimport {PlotViewController} from \"./PlotViewController\";\nimport {BubblePlotView} from \"./BubblePlotView\";\nimport {LineGraphView} from \"../graph/LineGraphView\";\nimport {AreaGraphView} from \"../graph/AreaGraphView\";\n\nexport type PlotType = \"bubble\" | \"line\" | \"area\";\n\nexport type AnyPlotView<X, Y> = PlotView<X, Y> | PlotViewInit<X, Y> | PlotType;\n\nexport interface PlotViewInit<X, Y> extends RenderedViewInit {\n  type: PlotType;\n\n  xAxis?: AxisView<X>;\n  yAxis?: AxisView<Y>;\n\n  data?: AnyDatumView<X, Y>[];\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\nexport abstract class PlotView<X, Y> extends GraphicsView {\n  /** @hidden */\n  _xAxis: AxisView<X> | null;\n  /** @hidden */\n  _yAxis: AxisView<Y> | null;\n\n  /** @hidden */\n  readonly _xDomain: [X | null, X | null];\n  /** @hidden */\n  readonly _xRange: [number, number];\n  /** @hidden */\n  readonly _yDomain: [Y | null, Y | null];\n  /** @hidden */\n  readonly _yRange: [number, number];\n\n  constructor() {\n    super();\n    this._xAxis = null;\n    this._yAxis = null;\n\n    this._xDomain = [null, null];\n    this._xRange = [Infinity, -Infinity];\n    this._yDomain = [null, null];\n    this._yRange = [Infinity, -Infinity];\n  }\n\n  get viewController(): PlotViewController<X, Y> | null {\n    return this._viewController;\n  }\n\n  abstract get type(): PlotType;\n\n  xAxis(): AxisView<X> | null;\n  xAxis(xAxis: AxisView<X> | null): this;\n  xAxis(xAxis?: AxisView<X> | null): AxisView<X> | null | this {\n    if (xAxis === void 0) {\n      return this._xAxis;\n    } else {\n      this._xAxis = xAxis;\n      return this;\n    }\n  }\n\n  yAxis(): AxisView<Y> | null;\n  yAxis(yAxis: AxisView<Y> | null): this;\n  yAxis(yAxis?: AxisView<Y> | null): AxisView<Y> | null | this {\n    if (yAxis === void 0) {\n      return this._yAxis;\n    } else {\n      this._yAxis = yAxis;\n      return this;\n    }\n  }\n\n  xDomain(): Readonly<[X | null, X | null]> {\n    return this._xDomain;\n  }\n\n  xRange(): Readonly<[number, number]> {\n    return this._xRange;\n  }\n\n  yDomain(): Readonly<[Y | null, Y | null]> {\n    return this._yDomain;\n  }\n\n  yRange(): Readonly<[number, number]> {\n    return this._yRange;\n  }\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  origin: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsAnimate) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  protected onLayout(viewContext: RenderedViewContext): void {\n    super.onLayout(viewContext);\n    if (this._xAxis !== null && this._yAxis !== null) {\n      this.layoutData(this._xAxis.scale.value!, this._yAxis.scale.value!, this.viewFrame);\n    }\n  }\n\n  protected layoutData(xScale: ContinuousScale<X, number>, yScale: ContinuousScale<Y, number>, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    let datum0: DatumView<X, Y> | undefined;\n    let xDomainMin: X | undefined;\n    let xDomainMax: X | undefined;\n    let xRangeMin: number | undefined;\n    let xRangeMax: number | undefined;\n    let yDomainMin: Y | undefined;\n    let yDomainMax: Y | undefined;\n    let yRangeMin: number | undefined;\n    let yRangeMax: number | undefined;\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const datum1 = childViews[i];\n      if (datum1 instanceof DatumView) {\n        const x1 = datum1.x.value!;\n        const y1 = datum1.y.value!;\n        const ax1 = xScale.scale(x1);\n        const ay1 = yScale.scale(y1);\n        datum1._xCoord = origin.x + ax1;\n        datum1._yCoord = origin.y + ay1;\n\n        if (datum0 !== void 0) {\n          // compute extrema\n          if (Objects.compare(x1, xDomainMin!) < 0) {\n            xDomainMin = x1;\n          } else if (Objects.compare(x1, xDomainMax!) > 0) {\n            xDomainMax = x1;\n          }\n          if (ax1 < xRangeMin!) {\n            xRangeMin = ax1;\n          } else if (ax1 > xRangeMax!) {\n            xRangeMax = ax1;\n          }\n          if (Objects.compare(y1, yDomainMin!) < 0) {\n            yDomainMin = y1;\n          } else if (Objects.compare(y1, yDomainMax!) > 0) {\n            yDomainMax = y1;\n          }\n          if (ay1 < yRangeMin!) {\n            yRangeMin = ay1;\n          } else if (ay1 > yRangeMax!) {\n            yRangeMax = ay1;\n          }\n        } else {\n          xDomainMin = x1;\n          xDomainMax = x1;\n          xRangeMin = ax1;\n          xRangeMax = ax1;\n          yDomainMin = y1;\n          yDomainMax = y1;\n          yRangeMin = ay1;\n          yRangeMax = ay1;\n        }\n\n        datum0 = datum1;\n      }\n    }\n\n    if (datum0 !== void 0) {\n      // update extrema\n      let rebound = false;\n      if (this._xDomain[0] !== xDomainMin) {\n        this._xDomain[0] = xDomainMin!;\n        rebound = true;\n      }\n      if (this._xDomain[1] !== xDomainMax) {\n        this._xDomain[1] = xDomainMax!;\n        rebound = true;\n      }\n      if (this._xRange[0] !== xRangeMin) {\n        this._xRange[0] = xRangeMin!;\n        rebound = true;\n      }\n      if (this._xRange[1] !== xRangeMax) {\n        this._xRange[1] = xRangeMax!;\n        rebound = true;\n      }\n      if (this._yDomain[0] !== yDomainMin) {\n        this._yDomain[0] = yDomainMin!;\n        rebound = true;\n      }\n      if (this._yDomain[1] !== yDomainMax) {\n        this._yDomain[1] = yDomainMax!;\n        rebound = true;\n      }\n      if (this._yRange[0] !== yRangeMin) {\n        this._yRange[0] = yRangeMin!;\n        rebound = true;\n      }\n      if (this._yRange[1] !== yRangeMax) {\n        this._yRange[1] = yRangeMax!;\n        rebound = true;\n      }\n      if (rebound) {\n        this.requireUpdate(View.NeedsLayout);\n      }\n    }\n  }\n\n  protected willRender(viewContext: RenderedViewContext): void {\n    super.willRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.save();\n      this.clipPlot(context, this.viewFrame);\n    }\n  }\n\n  protected onRender(viewContext: RenderedViewContext): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      this.renderPlot(context, this.viewFrame);\n    }\n  }\n\n  protected didRender(viewContext: RenderedViewContext): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.restore();\n    }\n    super.didRender(viewContext);\n  }\n\n  protected clipPlot(context: CanvasContext, frame: BoxR2): void {\n    context.beginPath();\n    context.rect(frame.x, frame.y, frame.width, frame.height);\n    context.clip();\n  }\n\n  protected abstract renderPlot(context: CanvasContext, frame: BoxR2): void;\n\n  static fromAny<X, Y>(plot: AnyPlotView<X, Y>): PlotView<X, Y> {\n    if (plot instanceof PlotView) {\n      return plot;\n    } else if (typeof plot === \"string\") {\n      if (plot === \"bubble\") {\n        return new PlotView.Bubble();\n      } else if (plot === \"line\") {\n        return new PlotView.Line();\n      } else if (plot === \"area\") {\n        return new PlotView.Area();\n      }\n    } else if (typeof plot === \"object\" && plot !== null) {\n      const type = plot.type;\n      if (type === \"bubble\") {\n        return PlotView.Bubble.fromAny(plot);\n      } else if (type === \"line\") {\n        return PlotView.Line.fromAny(plot);\n      } else if (type === \"area\") {\n        return PlotView.Area.fromAny(plot);\n      }\n    }\n    throw new TypeError(\"\" + plot);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Bubble: typeof BubblePlotView; // defined by BubblePlotView\n  /** @hidden */\n  static Line: typeof LineGraphView; // defined by LineGraphView\n  /** @hidden */\n  static Area: typeof AreaGraphView; // defined by AreaGraphView\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GraphicsViewController} from \"@swim/view\";\nimport {AxisView} from \"../axis/AxisView\";\nimport {PlotType, PlotView} from \"./PlotView\";\nimport {PlotViewObserver} from \"./PlotViewObserver\";\n\nexport class PlotViewController<X = any, Y = any, V extends PlotView<X, Y> = PlotView<X, Y>> extends GraphicsViewController<V> implements PlotViewObserver<X, Y, V> {\n  get type(): PlotType {\n    const view = this._view;\n    return view !== null ? view.type : void 0 as any;\n  }\n\n  xAxis(): AxisView<X> | null {\n    const view = this._view;\n    return view !== null ? view.xAxis() : null;\n  }\n\n  yAxis(): AxisView<Y> | null {\n    const view = this._view;\n    return view !== null ? view.yAxis() : null;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BoxR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont} from \"@swim/font\";\nimport {CanvasContext} from \"@swim/render\";\nimport {\n  MemberAnimator,\n  RenderedViewInit,\n  FillViewInit,\n  FillView,\n  StrokeViewInit,\n  StrokeView,\n} from \"@swim/view\";\nimport {AxisView} from \"../axis/AxisView\";\nimport {AnyDatumView, DatumView} from \"../data/DatumView\";\nimport {PlotType, AnyPlotView, PlotView} from \"./PlotView\";\nimport {PlotViewController} from \"./PlotViewController\";\n\nexport type AnyBubblePlotView<X, Y> = BubblePlotView<X, Y> | BubblePlotViewInit<X, Y>;\n\nexport interface BubblePlotViewInit<X, Y> extends RenderedViewInit, FillViewInit, StrokeViewInit {\n  xAxis?: AxisView<X>;\n  yAxis?: AxisView<Y>;\n\n  data?: AnyDatumView<X, Y>[];\n\n  radius?: AnyLength;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\nexport class BubblePlotView<X, Y> extends PlotView<X, Y> implements FillView, StrokeView {\n  constructor() {\n    super();\n    this.radius.setState(Length.px(5));\n    this.fill.setState(Color.black());\n  }\n\n  get viewController(): PlotViewController<X, Y, BubblePlotView<X, Y>> | null {\n    return this._viewController;\n  }\n\n  get type(): PlotType {\n    return \"bubble\";\n  }\n\n  @MemberAnimator(Length)\n  radius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color)\n  fill: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Color)\n  stroke: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length)\n  strokeWidth: MemberAnimator<this, Length, AnyLength>;\n\n  getDatum(key: string): DatumView<X, Y> | undefined {\n    const datum = this.getChildView(key);\n    return datum instanceof DatumView ? datum : void 0;\n  }\n\n  insertDatum(datum: AnyDatumView<X, Y>, key?: string): DatumView<X, Y> {\n    datum = DatumView.fromAny(datum);\n    this.appendChildView(datum, key);\n    return datum;\n  }\n\n  insertData(...data: AnyDatumView<X, Y>[]): void {\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      this.insertDatum(arguments[i]);\n    }\n  }\n\n  removeDatum(key: string): DatumView<X, Y> | null {\n    const datum = this.getChildView(key);\n    if (datum instanceof DatumView) {\n      datum.remove();\n      return datum;\n    } else {\n      return null;\n    }\n  }\n\n  protected renderPlot(context: CanvasContext, frame: BoxR2): void {\n    const size = Math.min(frame.width, frame.height);\n    const radius = this.radius.value!;\n    const fill = this.fill.value;\n    const stroke = this.stroke.value;\n    const strokeWidth = this.strokeWidth.value;\n\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const p = childViews[i];\n      if (p instanceof DatumView) {\n        context.beginPath();\n        const r = p.r.value || radius;\n        context.arc(p.xCoord, p.yCoord, r.pxValue(size), 0, 2 * Math.PI);\n        let fillStyle = p.color.value || fill;\n        if (fillStyle !== void 0) {\n          const opacity = p.opacity.value;\n          if (typeof opacity === \"number\") {\n            fillStyle = fillStyle.alpha(opacity);\n          }\n          context.fillStyle = fillStyle.toString();\n          context.fill();\n        }\n        if (stroke !== void 0) {\n          if (strokeWidth !== void 0) {\n            context.lineWidth = strokeWidth.pxValue(size);\n          }\n          context.strokeStyle = stroke.toString();\n          context.stroke();\n        }\n      }\n    }\n  }\n\n  static fromAny<X, Y>(plot: AnyBubblePlotView<X, Y>): BubblePlotView<X, Y>;\n  static fromAny<X, Y>(plot: AnyPlotView<X, Y>): PlotView<X, Y>;\n  static fromAny<X, Y>(plot: AnyPlotView<X, Y> | BubblePlotViewInit<X, Y>): PlotView<X, Y> {\n    if (plot instanceof BubblePlotView) {\n      return plot;\n    } else if (plot instanceof PlotView) {\n      // error\n    } else if (typeof plot === \"object\" && plot !== null) {\n      plot = plot as BubblePlotViewInit<X, Y>;\n      const view = new BubblePlotView<X, Y>();\n\n      if (plot.xAxis !== void 0) {\n        view.xAxis(plot.xAxis);\n      }\n      if (plot.yAxis !== void 0) {\n        view.yAxis(plot.yAxis);\n      }\n\n      const data = plot.data;\n      if (data !== void 0) {\n        for (let i = 0, n = data.length; i < n; i += 1) {\n          view.insertDatum(data[i]);\n        }\n      }\n\n      if (plot.radius !== void 0) {\n        view.radius(plot.radius);\n      }\n      if (plot.fill !== void 0) {\n        view.fill(plot.fill);\n      }\n      if (plot.stroke !== void 0) {\n        view.stroke(plot.stroke);\n      }\n      if (plot.strokeWidth !== void 0) {\n        view.strokeWidth(plot.strokeWidth);\n      }\n\n      if (plot.font !== void 0) {\n        view.font(plot.font);\n      }\n      if (plot.textColor !== void 0) {\n        view.textColor(plot.textColor);\n      }\n\n      if (plot.hidden !== void 0) {\n        view.setHidden(plot.hidden);\n      }\n      if (plot.culled !== void 0) {\n        view.setCulled(plot.culled);\n      }\n\n      return view;\n    }\n    throw new TypeError(\"\" + plot);\n  }\n}\nPlotView.Bubble = BubblePlotView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {BoxR2} from \"@swim/math\";\nimport {ContinuousScale} from \"@swim/scale\";\nimport {CanvasRenderer} from \"@swim/render\";\nimport {View, RenderedViewContext, RenderedView} from \"@swim/view\";\nimport {DatumCategory} from \"../data/Datum\";\nimport {AnyDatumView, DatumView} from \"../data/DatumView\";\nimport {AnyPlotView, PlotViewInit, PlotView} from \"../plot/PlotView\";\nimport {GraphViewController} from \"./GraphViewController\";\n\nexport type GraphType = \"line\" | \"area\";\n\nexport type GraphHitMode = \"domain\" | \"graph\" | \"data\" | \"none\";\n\nexport type AnyGraphView<X, Y> = GraphView<X, Y> | GraphViewInit<X, Y> | GraphType;\n\nexport interface GraphViewInit<X, Y> extends PlotViewInit<X, Y> {\n  hitMode?: GraphHitMode;\n}\n\nexport abstract class GraphView<X, Y> extends PlotView<X, Y> {\n  /** @hidden */\n  readonly _data: BTree<X, DatumView<X, Y>>;\n  /** @hidden */\n  _hitMode: GraphHitMode;\n  /** @hidden */\n  _gradientStops: number;\n\n  constructor() {\n    super();\n    this._data = new BTree();\n    this._hitMode = \"domain\";\n    this._gradientStops = 0;\n  }\n\n  get viewController(): GraphViewController<X, Y> | null {\n    return this._viewController;\n  }\n\n  abstract get type(): GraphType;\n\n  getDatum(x: X): DatumView<X, Y> | undefined {\n    return this._data.get(x);\n  }\n\n  insertDatum(datum: AnyDatumView<X, Y>): DatumView<X, Y> {\n    datum = DatumView.fromAny(datum);\n    this.insertChildView(datum, this._data.nextValue(datum.x.state!) || null);\n    return datum;\n  }\n\n  insertData(...data: AnyDatumView<X, Y>[]): void {\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      this.insertDatum(arguments[i]);\n    }\n  }\n\n  removeDatum(x: X): DatumView<X, Y> | null {\n    const datum = this._data.get(x);\n    if (datum !== void 0) {\n      datum.remove();\n      this._data.delete(x);\n      return datum;\n    } else {\n      return null;\n    }\n  }\n\n  protected layoutData(xScale: ContinuousScale<X, number>, yScale: ContinuousScale<Y, number>, frame: BoxR2): void {\n    const origin = this.origin.value!;\n    let datum0: DatumView<X, Y> | undefined;\n    let datum1: DatumView<X, Y> | undefined;\n    let y0: Y | undefined;\n    let y1: Y | undefined;\n    let xDomainMin: X | undefined;\n    let xDomainMax: X | undefined;\n    let xRangeMin: number | undefined;\n    let xRangeMax: number | undefined;\n    let yDomainMin: Y | undefined;\n    let yDomainMax: Y | undefined;\n    let yRangeMin: number | undefined;\n    let yRangeMax: number | undefined;\n    let gradientStops = 0;\n    this._data.forEach(function (x2: X, datum2: DatumView<X, Y>): void {\n      const y2 = datum2.y.value!;\n      const ax2 = xScale.scale(x2);\n      const ay2 = yScale.scale(y2);\n      datum2._xCoord = origin.x + ax2;\n      datum2._yCoord = origin.y + ay2;\n\n      const dy2 = datum2.y2.value;\n      const ady2 = dy2 !== null && dy2 !== void 0 ? yScale.scale(dy2) : null;\n      if (ady2 !== null) {\n        datum2._y2Coord = origin.y + ady2;\n      } else if (datum2._y2Coord !== void 0) {\n        datum2._y2Coord = void 0;\n      }\n\n      if (datum2.isGradientStop()) {\n        gradientStops += 1;\n      }\n\n      if (datum1 !== void 0) {\n        let category: DatumCategory;\n        if (datum0 !== void 0) {\n          // categorize mid point\n          if (Objects.compare(y0!, y1!) < 0 && Objects.compare(y1!, y2) > 0) {\n            category = \"maxima\";\n          } else if (Objects.compare(y0!, y1!) > 0 && Objects.compare(y1!, y2) < 0) {\n            category = \"minima\";\n          } else if (Objects.compare(y0!, y1!) < 0 && Objects.compare(y1!, y2) < 0) {\n            category = \"increasing\";\n          } else if (Objects.compare(y0!, y1!) > 0 && Objects.compare(y1!, y2) > 0) {\n            category = \"decreasing\";\n          } else {\n            category = \"flat\";\n          }\n        } else {\n          // categorize start point\n          if (Objects.compare(y1!, y2) < 0) {\n            category = \"increasing\";\n          } else if (Objects.compare(y1!, y2) > 0) {\n            category = \"decreasing\";\n          } else {\n            category = \"flat\";\n          }\n        }\n        datum1.category(category);\n\n        // compute extrema\n        if (Objects.compare(y2, yDomainMin!) < 0) {\n          yDomainMin = y2;\n        } else if (Objects.compare(y2, yDomainMax!) > 0) {\n          yDomainMax = y2;\n        }\n        if (dy2 !== null && dy2 !== void 0) {\n          if (Objects.compare(dy2, yDomainMin!) < 0) {\n            yDomainMin = dy2;\n          } else if (Objects.compare(dy2, yDomainMax!) > 0) {\n            yDomainMax = dy2;\n          }\n        }\n        if (ay2 < yRangeMin!) {\n          yRangeMin = ay2;\n        } else if (ay2 > yRangeMax!) {\n          yRangeMax = ay2;\n        }\n      } else {\n        xDomainMin = x2;\n        xRangeMin = ax2;\n        yDomainMin = y2;\n        yDomainMax = y2;\n        yRangeMin = ay2;\n        yRangeMax = ay2;\n      }\n\n      datum0 = datum1;\n      datum1 = datum2;\n      y0 = y1;\n      y1 = y2;\n      xDomainMax = x2;\n      xRangeMax = ax2;\n    }, this);\n\n    if (datum1 !== void 0) {\n      let category: DatumCategory;\n      if (datum0 !== void 0) {\n        // categorize end point\n        if (Objects.compare(y0!, y1!) < 0) {\n          category = \"increasing\";\n        } else if (Objects.compare(y0!, y1!) > 0) {\n          category = \"decreasing\";\n        } else {\n          category = \"flat\";\n        }\n      } else {\n        // categorize only point\n        category = \"flat\";\n      }\n      datum1.category(category);\n\n      // update extrema\n      let rebound = false;\n      if (this._xDomain[0] !== xDomainMin) {\n        this._xDomain[0] = xDomainMin!;\n        rebound = true;\n      }\n      if (this._xDomain[1] !== xDomainMax) {\n        this._xDomain[1] = xDomainMax!;\n        rebound = true;\n      }\n      if (this._xRange[0] !== xRangeMin) {\n        this._xRange[0] = xRangeMin!;\n        rebound = true;\n      }\n      if (this._xRange[1] !== xRangeMax) {\n        this._xRange[1] = xRangeMax!;\n        rebound = true;\n      }\n      if (this._yDomain[0] !== yDomainMin) {\n        this._yDomain[0] = yDomainMin!;\n        rebound = true;\n      }\n      if (this._yDomain[1] !== yDomainMax) {\n        this._yDomain[1] = yDomainMax!;\n        rebound = true;\n      }\n      if (this._yRange[0] !== yRangeMin) {\n        this._yRange[0] = yRangeMin!;\n        rebound = true;\n      }\n      if (this._yRange[1] !== yRangeMax) {\n        this._yRange[1] = yRangeMax!;\n        rebound = true;\n      }\n      if (rebound) {\n        this.requireUpdate(View.NeedsLayout);\n      }\n    }\n    this._gradientStops = gradientStops;\n  }\n\n  hitMode(): GraphHitMode;\n  hitMode(hitMode: GraphHitMode): this;\n  hitMode(hitMode?: GraphHitMode): GraphHitMode | this {\n    if (hitMode === void 0) {\n      return this._hitMode;\n    } else {\n      this._hitMode = hitMode;\n      return this;\n    }\n  }\n\n  hitTest(x: number, y: number, viewContext: RenderedViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null && this._hitMode !== \"none\") {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        context.save();\n        x *= renderer.pixelRatio;\n        y *= renderer.pixelRatio;\n        if (this._hitMode === \"domain\") {\n          hit = this.hitTestData(x, y, renderer);\n        } else {\n          hit = this.hitTestGraph(x, y, renderer);\n        }\n        context.restore();\n      }\n    }\n    return hit;\n  }\n\n  protected abstract hitTestGraph(x: number, y: number, renderer: CanvasRenderer): RenderedView | null;\n\n  protected hitTestData(x: number, y: number, renderer: CanvasRenderer): RenderedView | null {\n    if (this._xAxis !== null) {\n      const xScale = this._xAxis.scale.state!;\n      const d = xScale.unscale(x / renderer.pixelRatio - this.origin.value!.x);\n      const x0 = this._data.previousValue(d);\n      const x1 = this._data.nextValue(d);\n      const dx0 = x0 !== void 0 ? +d - +x0.x.state! : NaN;\n      const dx1 = x1 !== void 0 ? +x1.x.state! - +d : NaN;\n      if (dx0 <= dx1) {\n        return x0!;\n      } else if (dx0 > dx1) {\n        return x1!;\n      } else if (x0 !== void 0) {\n        return x0!;\n      } else if (x1 !== void 0) {\n        return x1!;\n      }\n    }\n    return null;\n  }\n\n  protected onInsertChildView(childView: View, targetView: View): void {\n    super.onInsertChildView(childView, targetView);\n    if (childView instanceof DatumView) {\n      this._data.set(childView.x.state!, childView);\n    }\n  }\n\n  protected onRemoveChildView(childView: View): void {\n    if (childView instanceof DatumView) {\n      this._data.delete(childView.x.state!);\n    }\n    super.onRemoveChildView(childView);\n  }\n\n  static fromAny<X, Y>(graph: AnyGraphView<X, Y>): GraphView<X, Y>;\n  static fromAny<X, Y>(plot: AnyPlotView<X, Y>): PlotView<X, Y>;\n  static fromAny<X, Y>(plot: AnyPlotView<X, Y>): PlotView<X, Y> {\n    return PlotView.fromAny(plot);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PlotViewController} from \"../plot/PlotViewController\";\nimport {GraphType, GraphView} from \"./GraphView\";\nimport {GraphViewObserver} from \"./GraphViewObserver\";\n\nexport class GraphViewController<X = any, Y = any, V extends GraphView<X, Y> = GraphView<X, Y>> extends PlotViewController<X, Y, V> implements GraphViewObserver<X, Y, V> {\n  get type(): GraphType {\n    const view = this._view;\n    return view !== null ? view.type : void 0 as any;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BoxR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont} from \"@swim/font\";\nimport {CanvasRenderer, CanvasContext} from \"@swim/render\";\nimport {MemberAnimator, RenderedViewInit, RenderedView, StrokeViewInit, StrokeView} from \"@swim/view\";\nimport {AxisView} from \"../axis/AxisView\";\nimport {AnyDatumView, DatumView} from \"../data/DatumView\";\nimport {AnyPlotView, PlotView} from \"../plot/PlotView\";\nimport {GraphType, AnyGraphView, GraphView} from \"./GraphView\";\nimport {GraphViewController} from \"./GraphViewController\";\n\nexport type AnyLineGraphView<X, Y> = LineGraphView<X, Y> | LineGraphViewInit<X, Y>;\n\nexport interface LineGraphViewInit<X, Y> extends RenderedViewInit, StrokeViewInit {\n  xAxis?: AxisView<X>;\n  yAxis?: AxisView<Y>;\n\n  data?: AnyDatumView<X, Y>[];\n\n  hitWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\nexport class LineGraphView<X, Y> extends GraphView<X, Y> implements StrokeView {\n  /** @hidden */\n  _hitWidth: number;\n\n  constructor() {\n    super();\n    this.stroke.setState(Color.black());\n    this.strokeWidth.setState(Length.px(1));\n    this._hitWidth = 5;\n  }\n\n  get viewController(): GraphViewController<X, Y, LineGraphView<X, Y>> | null {\n    return this._viewController;\n  }\n\n  get type(): GraphType {\n    return \"line\";\n  }\n\n  @MemberAnimator(Color)\n  stroke: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length)\n  strokeWidth: MemberAnimator<this, Length, AnyLength>;\n\n  hitWidth(): number;\n  hitWidth(hitWidth: number): this;\n  hitWidth(hitWidth?: number): number | this {\n    if (hitWidth === void 0) {\n      return this._hitWidth;\n    } else {\n      this._hitWidth = hitWidth;\n      return this;\n    }\n  }\n\n  protected renderPlot(context: CanvasContext, frame: BoxR2): void {\n    const data = this._data;\n    const n = data.size;\n\n    const stroke = this.stroke.value!;\n    const strokeWidth = this.strokeWidth.value!.pxValue(Math.min(frame.width, frame.height));\n    const gradientStops = this._gradientStops;\n    let gradient: CanvasGradient | undefined;\n\n    let x0: number;\n    let x1: number;\n    let dx: number;\n    if (n > 0) {\n      const p0 = data.firstValue()!;\n      const p1 = data.lastValue()!;\n      x0 = p0.xCoord;\n      x1 = p1.xCoord;\n      dx = x1 - x0;\n      if (gradientStops !== 0) {\n        gradient = context.createLinearGradient(x0, 0, x1, 0);\n      }\n    } else {\n      x0 = NaN;\n      x1 = NaN;\n      dx = NaN;\n    }\n\n    context.beginPath();\n    let i = 0;\n    data.forEach(function (x: X, p: DatumView<X, Y>): void {\n      const xCoord = p.xCoord;\n      const yCoord = p.yCoord;\n      if (i === 0) {\n        context.moveTo(xCoord, yCoord);\n      } else {\n        context.lineTo(xCoord, yCoord);\n      }\n      if (gradient !== void 0 && p.isGradientStop()) {\n        let color = p.color.value || stroke;\n        const opacity = p.opacity.value;\n        if (typeof opacity === \"number\") {\n          color = color.alpha(opacity);\n        }\n        const offset = (xCoord - x0) / (dx || 1);\n        gradient!.addColorStop(offset, color.toString());\n      }\n      i += 1;\n    }, this);\n\n    context.strokeStyle = gradient !== void 0 ? gradient : stroke.toString();\n    context.lineWidth = strokeWidth;\n    context.stroke();\n  }\n\n  protected hitTestGraph(x: number, y: number, renderer: CanvasRenderer): RenderedView | null {\n    const context = renderer.context;\n    let hitWidth = this._hitWidth;\n    const strokeWidth = this.strokeWidth.value;\n    if (strokeWidth !== void 0) {\n      const frame = this.viewFrame;\n      const size = Math.min(frame.width, frame.height);\n      hitWidth = Math.max(hitWidth, strokeWidth.pxValue(size));\n    }\n\n    context.beginPath();\n    let i = 0;\n    this._data.forEach(function (x: X, p: DatumView<X, Y>): void {\n      const xCoord = p.xCoord;\n      const yCoord = p.yCoord;\n      if (i === 0) {\n        context.moveTo(xCoord, yCoord);\n      } else {\n        context.lineTo(xCoord, yCoord);\n      }\n      i += 1;\n    }, this);\n\n    context.lineWidth = hitWidth;\n    if (context.isPointInStroke(x, y)) {\n      if (this._hitMode === \"graph\") {\n        return this;\n      } else if (this._hitMode === \"data\") {\n        return this.hitTestData(x, y, renderer);\n      }\n    }\n    return null;\n  }\n\n  static fromAny<X, Y>(graph: AnyLineGraphView<X, Y>): LineGraphView<X, Y>;\n  static fromAny<X, Y>(graph: AnyGraphView<X, Y>): GraphView<X, Y>;\n  static fromAny<X, Y>(graph: AnyPlotView<X, Y>): PlotView<X, Y>;\n  static fromAny<X, Y>(graph: AnyPlotView<X, Y> | LineGraphViewInit<X, Y>): PlotView<X, Y> {\n    if (graph instanceof LineGraphView) {\n      return graph;\n    } else if (graph instanceof GraphView) {\n      // error\n    } else if (typeof graph === \"object\" && graph !== null) {\n      graph = graph as LineGraphViewInit<X, Y>;\n      const view = new LineGraphView<X, Y>();\n\n      if (graph.xAxis !== void 0) {\n        view.xAxis(graph.xAxis);\n      }\n      if (graph.yAxis !== void 0) {\n        view.yAxis(graph.yAxis);\n      }\n\n      const data = graph.data;\n      if (data !== void 0) {\n        for (let i = 0, n = data.length; i < n; i += 1) {\n          view.insertDatum(data[i]);\n        }\n      }\n\n      if (graph.stroke !== void 0) {\n        view.stroke(graph.stroke);\n      }\n      if (graph.strokeWidth !== void 0) {\n        view.strokeWidth(graph.strokeWidth);\n      }\n\n      if (graph.hitWidth !== void 0) {\n        view.hitWidth(graph.hitWidth);\n      }\n\n      if (graph.font !== void 0) {\n        view.font(graph.font);\n      }\n      if (graph.textColor !== void 0) {\n        view.textColor(graph.textColor);\n      }\n\n      if (graph.hidden !== void 0) {\n        view.setHidden(graph.hidden);\n      }\n      if (graph.culled !== void 0) {\n        view.setCulled(graph.culled);\n      }\n\n      return view;\n    }\n    throw new TypeError(\"\" + graph);\n  }\n}\nPlotView.Line = LineGraphView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BoxR2} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont} from \"@swim/font\";\nimport {CanvasRenderer, CanvasContext} from \"@swim/render\";\nimport {MemberAnimator, RenderedViewInit, RenderedView, FillViewInit, FillView} from \"@swim/view\";\nimport {AxisView} from \"../axis/AxisView\";\nimport {AnyDatumView} from \"../data/DatumView\";\nimport {AnyPlotView, PlotView} from \"../plot/PlotView\";\nimport {GraphType, AnyGraphView, GraphView} from \"./GraphView\";\nimport {GraphViewController} from \"./GraphViewController\";\n\nexport type AnyAreaGraphView<X, Y> = AreaGraphView<X, Y> | AreaGraphViewInit<X, Y>;\n\nexport interface AreaGraphViewInit<X, Y> extends RenderedViewInit, FillViewInit {\n  xAxis?: AxisView<X>;\n  yAxis?: AxisView<Y>;\n\n  data?: AnyDatumView<X, Y>[];\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\nexport class AreaGraphView<X, Y> extends GraphView<X, Y> implements FillView {\n  constructor() {\n    super();\n    this.fill.setState(Color.black());\n  }\n\n  get viewController(): GraphViewController<X, Y, AreaGraphView<X, Y>> | null {\n    return this._viewController;\n  }\n\n  get type(): GraphType {\n    return \"area\";\n  }\n\n  @MemberAnimator(Color)\n  fill: MemberAnimator<this, Color, AnyColor>;\n\n  protected renderPlot(context: CanvasContext, frame: BoxR2): void {\n    const data = this._data;\n    const n = data.size;\n\n    const fill = this.fill.value!;\n    const gradientStops = this._gradientStops;\n    let gradient: CanvasGradient | undefined;\n\n    context.beginPath();\n\n    let x0: number;\n    let x1: number;\n    let dx: number;\n    if (n > 0) {\n      const p0 = data.firstValue()!;\n      const p1 = data.lastValue()!;\n      x0 = p0.xCoord;\n      x1 = p1.xCoord;\n      dx = x1 - x0;\n      context.moveTo(p0.xCoord, p0.yCoord);\n      if (gradientStops !== 0) {\n        gradient = context.createLinearGradient(x0, 0, x1, 0);\n        if (p0.isGradientStop()) {\n          let color = p0.color.value || fill;\n          const opacity = p0.opacity.value;\n          if (typeof opacity === \"number\") {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(0, color.toString());\n        }\n      }\n    } else {\n      x0 = NaN;\n      x1 = NaN;\n      dx = NaN;\n    }\n\n    const cursor = data.values();\n    cursor.next();\n    while (cursor.hasNext()) {\n      const p = cursor.next().value!;\n      context.lineTo(p.xCoord, p.yCoord);\n      if (gradient !== void 0 && p.isGradientStop()) {\n        let color = p.color.value || fill;\n        const opacity = p.opacity.value;\n        if (typeof opacity === \"number\") {\n          color = color.alpha(opacity);\n        }\n        const offset = (p.xCoord - x0) / (dx || 1);\n        gradient.addColorStop(offset, color.toString());\n      }\n    }\n    while (cursor.hasPrevious()) {\n      const p = cursor.previous().value!;\n      context.lineTo(p.xCoord, p.y2Coord!);\n    }\n    if (n > 0) {\n      context.closePath();\n    }\n\n    context.fillStyle = gradient !== void 0 ? gradient : fill.toString();\n    context.fill();\n  }\n\n  protected hitTestGraph(x: number, y: number, renderer: CanvasRenderer): RenderedView | null {\n    const context = renderer.context;\n    const data = this._data;\n    const n = data.size;\n\n    context.beginPath();\n    const cursor = data.values();\n    if (cursor.hasNext()) {\n      const p = cursor.next().value!;\n      context.moveTo(p.xCoord, p.yCoord);\n    }\n    while (cursor.hasNext()) {\n      const p = cursor.next().value!;\n      context.lineTo(p.xCoord, p.yCoord);\n    }\n    while (cursor.hasPrevious()) {\n      const p = cursor.previous().value!;\n      context.lineTo(p.xCoord, p.y2Coord!);\n    }\n    if (n > 0) {\n      context.closePath();\n    }\n\n    if (context.isPointInPath(x, y)) {\n      if (this._hitMode === \"graph\") {\n        return this;\n      } else if (this._hitMode === \"data\") {\n        return this.hitTestData(x, y, renderer);\n      }\n    }\n    return null;\n  }\n\n  static fromAny<X, Y>(graph: AnyAreaGraphView<X, Y>): AreaGraphView<X, Y>;\n  static fromAny<X, Y>(graph: AnyGraphView<X, Y>): GraphView<X, Y>;\n  static fromAny<X, Y>(graph: AnyPlotView<X, Y>): PlotView<X, Y>;\n  static fromAny<X, Y>(graph: AnyPlotView<X, Y> | AreaGraphViewInit<X, Y>): PlotView<X, Y> {\n    if (graph instanceof AreaGraphView) {\n      return graph;\n    } else if (graph instanceof GraphView) {\n      // error\n    } else if (typeof graph === \"object\" && graph !== null) {\n      graph = graph as AreaGraphViewInit<X, Y>;\n      const view = new AreaGraphView<X, Y>();\n\n      if (graph.xAxis !== void 0) {\n        view.xAxis(graph.xAxis);\n      }\n      if (graph.yAxis !== void 0) {\n        view.yAxis(graph.yAxis);\n      }\n\n      const data = graph.data;\n      if (data !== void 0) {\n        for (let i = 0, n = data.length; i < n; i += 1) {\n          view.insertDatum(data[i]);\n        }\n      }\n\n      if (graph.fill !== void 0) {\n        view.fill(graph.fill);\n      }\n\n      if (graph.font !== void 0) {\n        view.font(graph.font);\n      }\n      if (graph.textColor !== void 0) {\n        view.textColor(graph.textColor);\n      }\n\n      if (graph.hidden !== void 0) {\n        view.setHidden(graph.hidden);\n      }\n      if (graph.culled !== void 0) {\n        view.setCulled(graph.culled);\n      }\n\n      return view;\n    }\n    throw new TypeError(\"\" + graph);\n  }\n}\nPlotView.Area = AreaGraphView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {Tween, AnyTransition, Transition} from \"@swim/transition\";\nimport {\n  ViewFlags,\n  View,\n  MemberAnimator,\n  RenderedViewContext,\n  RenderedViewInit,\n  RenderedView,\n  GraphicsView,\n} from \"@swim/view\";\nimport {Multitouch, ScaleGestureEvent, ScaleGesture} from \"@swim/gesture\";\nimport {AnyAxisView, AxisView} from \"./axis/AxisView\";\nimport {AnyPlotView, PlotView} from \"./plot/PlotView\";\nimport {ChartViewController} from \"./ChartViewController\";\n\nexport type ChartDomainBounds<D> = [D | boolean, D | boolean];\n\nexport type ChartDomainPadding<D> = [D | null, D | null];\n\nexport type AnyChartView<X = any, Y = any> = ChartView<X, Y> | ChartViewInit<X, Y>;\n\nexport interface ChartViewInit<X = any, Y = any> extends RenderedViewInit {\n  topAxis?: AnyAxisView<X>;\n  rightAxis?: AnyAxisView<Y>;\n  bottomAxis?: AnyAxisView<X>;\n  leftAxis?: AnyAxisView<Y>;\n\n  plots?: AnyPlotView<X, Y>[];\n\n  fitTopDomain?: boolean;\n  fitRightDomain?: boolean;\n  fitBottomDomain?: boolean;\n  fitLeftDomain?: boolean;\n\n  topDomainBounds?: ChartDomainBounds<X>;\n  rightDomainBounds?: ChartDomainBounds<Y>;\n  bottomDomainBounds?: ChartDomainBounds<X>;\n  leftDomainBounds?: ChartDomainBounds<Y>;\n\n  topDomainPadding?: ChartDomainPadding<X>;\n  rightDomainPadding?: ChartDomainPadding<Y>;\n  bottomDomainPadding?: ChartDomainPadding<X>;\n  leftDomainPadding?: ChartDomainPadding<Y>;\n\n  rescaleTransition?: AnyTransition<any>;\n\n  multitouch?: Multitouch | boolean;\n  topGesture?: ScaleGesture<X> | boolean;\n  rightGesture?: ScaleGesture<Y> | boolean;\n  bottomGesture?: ScaleGesture<X> | boolean;\n  leftGesture?: ScaleGesture<Y> | boolean;\n\n  topGutter?: AnyLength;\n  rightGutter?: AnyLength;\n  bottomGutter?: AnyLength;\n  leftGutter?: AnyLength;\n\n  domainColor?: AnyColor;\n  domainWidth?: number;\n  domainSerif?: number;\n\n  tickMarkColor?: AnyColor;\n  tickMarkWidth?: number;\n  tickMarkLength?: number;\n\n  tickLabelPadding?: number;\n\n  gridLineColor?: AnyColor;\n  gridLineWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\nexport class ChartView<X = any, Y = any> extends GraphicsView {\n  /** @hidden */\n  _fitTopDomain: boolean;\n  /** @hidden */\n  _fitRightDomain: boolean;\n  /** @hidden */\n  _fitBottomDomain: boolean;\n  /** @hidden */\n  _fitLeftDomain: boolean;\n\n  /** @hidden */\n  _trackTopDomain: boolean;\n  /** @hidden */\n  _trackRightDomain: boolean;\n  /** @hidden */\n  _trackBottomDomain: boolean;\n  /** @hidden */\n  _trackLeftDomain: boolean;\n\n  /** @hidden */\n  readonly _topDomainBounds: ChartDomainBounds<X>;\n  /** @hidden */\n  readonly _rightDomainBounds: ChartDomainBounds<Y>;\n  /** @hidden */\n  readonly _bottomDomainBounds: ChartDomainBounds<X>;\n  /** @hidden */\n  readonly _leftDomainBounds: ChartDomainBounds<Y>;\n\n  /** @hidden */\n  readonly _topDomainPadding: ChartDomainPadding<X>;\n  /** @hidden */\n  readonly _rightDomainPadding: ChartDomainPadding<Y>;\n  /** @hidden */\n  readonly _bottomDomainPadding: ChartDomainPadding<X>;\n  /** @hidden */\n  readonly _leftDomainPadding: ChartDomainPadding<Y>;\n\n  /** @hidden */\n  _multitouch: Multitouch | null;\n  /** @hidden */\n  _topGesture: ScaleGesture<X> | null;\n  /** @hidden */\n  _rightGesture: ScaleGesture<Y> | null;\n  /** @hidden */\n  _bottomGesture: ScaleGesture<X> | null;\n  /** @hidden */\n  _leftGesture: ScaleGesture<Y> | null;\n\n  /** @hidden */\n  _rescaleTransition: Transition<any> | null;\n\n  constructor() {\n    super();\n    this.onScaleStart = this.onScaleStart.bind(this);\n    this.onScaleChange = this.onScaleChange.bind(this);\n    this.onScaleCancel = this.onScaleCancel.bind(this);\n    this.onScaleEnd = this.onScaleEnd.bind(this);\n\n    this._fitTopDomain = true;\n    this._fitRightDomain = true;\n    this._fitBottomDomain = true;\n    this._fitLeftDomain = true;\n\n    this._trackTopDomain = true;\n    this._trackRightDomain = true;\n    this._trackBottomDomain = true;\n    this._trackLeftDomain = true;\n\n    this._topDomainBounds = [true, true];\n    this._rightDomainBounds = [true, true];\n    this._bottomDomainBounds = [true, true];\n    this._leftDomainBounds = [true, true];\n\n    this._topDomainPadding = [null, null];\n    this._rightDomainPadding = [null, null];\n    this._bottomDomainPadding = [null, null];\n    this._leftDomainPadding = [null, null];\n\n    this._multitouch = null;\n    this._topGesture = null;\n    this._rightGesture = null;\n    this._bottomGesture = null;\n    this._leftGesture = null;\n\n    this._rescaleTransition = null;\n\n    this.setChildView(\"surface\", new GraphicsView());\n  }\n\n  get viewController(): ChartViewController<X, Y> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(Length, {value: Length.px(20)})\n  topGutter: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.px(40)})\n  rightGutter: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.px(20)})\n  bottomGutter: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.px(40)})\n  leftGutter: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {value: Color.black()})\n  domainColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {value: 1})\n  domainWidth: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {value: 6})\n  domainSerif: MemberAnimator<this, number>;\n\n  @MemberAnimator(Color, {value: Color.black()})\n  tickMarkColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {value: 1})\n  tickMarkWidth: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {value: 6})\n  tickMarkLength: MemberAnimator<this, number>;\n\n  @MemberAnimator(Number, {value: 2})\n  tickLabelPadding: MemberAnimator<this, number>;\n\n  @MemberAnimator(Color, {value: Color.transparent()})\n  gridLineColor: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number, {value: 0})\n  gridLineWidth: MemberAnimator<this, number>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  surface(): RenderedView | null;\n  surface(surface: RenderedView | null): this;\n  surface(surface?: RenderedView | null): RenderedView | null | this {\n    if (surface === void 0) {\n      const childView = this.getChildView(\"surface\");\n      return RenderedView.is(childView) ? childView : null;\n    } else {\n      this.setChildView(\"surface\", surface);\n      return this;\n    }\n  }\n\n  topAxis(): AxisView<X> | null;\n  topAxis(topAxis: AnyAxisView<X> | string | null): this;\n  topAxis(topAxis?: AnyAxisView<X> | string | null): AxisView<X> | null | this {\n    if (topAxis === void 0) {\n      const childView = this.getChildView(\"topAxis\");\n      return childView instanceof AxisView ? childView : null;\n    } else {\n      if (typeof topAxis === \"string\") {\n        topAxis = AxisView.top(topAxis);\n      } else if (topAxis !== null) {\n        topAxis = AxisView.fromAny(topAxis);\n      }\n      this.setChildView(\"topAxis\", topAxis);\n      return this;\n    }\n  }\n\n  rightAxis(): AxisView<Y> | null;\n  rightAxis(rightAxis: AnyAxisView<Y> | string | null): this;\n  rightAxis(rightAxis?: AnyAxisView<Y> | string | null): AxisView<Y> | null | this {\n    if (rightAxis === void 0) {\n      const childView = this.getChildView(\"rightAxis\");\n      return childView instanceof AxisView ? childView : null;\n    } else {\n      if (typeof rightAxis === \"string\") {\n        rightAxis = AxisView.right(rightAxis);\n      } else if (rightAxis !== null) {\n        rightAxis = AxisView.fromAny(rightAxis);\n      }\n      this.setChildView(\"rightAxis\", rightAxis);\n      return this;\n    }\n  }\n\n  bottomAxis(): AxisView<X> | null;\n  bottomAxis(bottomAxis: AnyAxisView<X> | string | null): this;\n  bottomAxis(bottomAxis?: AnyAxisView<X> | string | null): AxisView<X> | null | this {\n    if (bottomAxis === void 0) {\n      const childView = this.getChildView(\"bottomAxis\");\n      return childView instanceof AxisView ? childView : null;\n    } else {\n      if (typeof bottomAxis === \"string\") {\n        bottomAxis = AxisView.bottom(bottomAxis);\n      } else if (bottomAxis !== null) {\n        bottomAxis = AxisView.fromAny(bottomAxis);\n      }\n      this.setChildView(\"bottomAxis\", bottomAxis);\n      return this;\n    }\n  }\n\n  leftAxis(): AxisView<Y> | null;\n  leftAxis(leftAxis: AnyAxisView<Y> | string | null): this;\n  leftAxis(leftAxis?: AnyAxisView<Y> | string | null): AxisView<Y> | null | this {\n    if (leftAxis === void 0) {\n      const childView = this.getChildView(\"leftAxis\");\n      return childView instanceof AxisView ? childView : null;\n    } else {\n      if (typeof leftAxis === \"string\") {\n        leftAxis = AxisView.left(leftAxis);\n      } else if (leftAxis !== null) {\n        leftAxis = AxisView.fromAny(leftAxis);\n      }\n      this.setChildView(\"leftAxis\", leftAxis);\n      return this;\n    }\n  }\n\n  addPlot(plot: AnyPlotView<X, Y>): void {\n    plot = PlotView.fromAny(plot);\n    this.appendChildView(plot);\n  }\n\n  multitouch(): Multitouch | null;\n  multitouch(multitouch: Multitouch | boolean | null): this;\n  multitouch(multitouch?: Multitouch | boolean | null): Multitouch | null | this {\n    if (multitouch === void 0) {\n      return this._multitouch;\n    } else {\n      if (multitouch === true) {\n        multitouch = Multitouch.create();\n      } else if (multitouch === false) {\n        multitouch = null;\n      }\n      if (this._multitouch !== null) {\n        this._multitouch.surface(null);\n      }\n      this._multitouch = multitouch;\n      if (this._multitouch !== null) {\n        this._multitouch.surface(this.surface());\n      }\n      return this;\n    }\n  }\n\n  topGesture(): ScaleGesture<X> | null;\n  topGesture(topGesture: ScaleGesture<X> | boolean | null): this;\n  topGesture(topGesture?: ScaleGesture<X> | boolean | null): ScaleGesture<X> | null | this {\n    if (topGesture === void 0) {\n      return this._topGesture;\n    } else {\n      if (topGesture === true) {\n        topGesture = ScaleGesture.horizontal();\n      } else if (topGesture === false) {\n        topGesture = null;\n      }\n      if (this._topGesture !== null) {\n        this._topGesture.multitouch(null).ruler(null).scale(null);\n      }\n      this._topGesture = topGesture;\n      if (this._topGesture !== null) {\n        if (this._multitouch === null) {\n          this.multitouch(true);\n        }\n        this._topGesture.multitouch(this._multitouch)\n                        .ruler(this.surface())\n                        .scale(this.topAxis()!.scale.value!);\n        if (this._multitouch !== null && this.isMounted()) {\n          this._topGesture.attach(this._multitouch);\n        }\n        this.reboundTop();\n      }\n      return this;\n    }\n  }\n\n  rightGesture(): ScaleGesture<Y> | null;\n  rightGesture(rightGesture: ScaleGesture<Y> | boolean | null): this;\n  rightGesture(rightGesture?: ScaleGesture<Y> | boolean | null): ScaleGesture<Y> | null | this {\n    if (rightGesture === void 0) {\n      return this._rightGesture;\n    } else {\n      if (rightGesture === true) {\n        rightGesture = ScaleGesture.vertical();\n      } else if (rightGesture === false) {\n        rightGesture = null;\n      }\n      if (this._rightGesture !== null) {\n        this._rightGesture.multitouch(null).ruler(null).scale(null);\n      }\n      this._rightGesture = rightGesture;\n      if (this._rightGesture !== null) {\n        if (this._multitouch === null) {\n          this.multitouch(true);\n        }\n        this._rightGesture.multitouch(this._multitouch)\n                          .ruler(this.surface())\n                          .scale(this.rightAxis()!.scale.value!);\n        if (this._multitouch !== null && this.isMounted()) {\n          this._rightGesture.attach(this._multitouch);\n        }\n        this.reboundRight();\n      }\n      return this;\n    }\n  }\n\n  bottomGesture(): ScaleGesture<X> | null;\n  bottomGesture(bottomGesture: ScaleGesture<X> | boolean | null): this;\n  bottomGesture(bottomGesture?: ScaleGesture<X> | boolean | null): ScaleGesture<X> | null | this {\n    if (bottomGesture === void 0) {\n      return this._bottomGesture;\n    } else {\n      if (bottomGesture === true) {\n        bottomGesture = ScaleGesture.horizontal();\n      } else if (bottomGesture === false) {\n        bottomGesture = null;\n      }\n      if (this._bottomGesture !== null) {\n        this._bottomGesture.multitouch(null).ruler(null).scale(null);\n      }\n      this._bottomGesture = bottomGesture;\n      if (this._bottomGesture !== null) {\n        if (this._multitouch === null) {\n          this.multitouch(true);\n        }\n        this._bottomGesture.multitouch(this._multitouch)\n                           .ruler(this.surface())\n                           .scale(this.bottomAxis()!.scale.value!);\n        if (this._multitouch !== null && this.isMounted()) {\n          this._bottomGesture.attach(this._multitouch);\n        }\n        this.reboundBottom();\n      }\n      return this;\n    }\n  }\n\n  leftGesture(): ScaleGesture<Y> | null;\n  leftGesture(leftGesture: ScaleGesture<Y> | boolean | null): this;\n  leftGesture(leftGesture?: ScaleGesture<Y> | boolean | null): ScaleGesture<Y> | null | this {\n    if (leftGesture === void 0) {\n      return this._leftGesture;\n    } else {\n      if (leftGesture === true) {\n        leftGesture = ScaleGesture.vertical();\n      } else if (leftGesture === false) {\n        leftGesture = null;\n      }\n      if (this._leftGesture !== null) {\n        this._leftGesture.multitouch(null).ruler(null).scale(null);\n      }\n      this._leftGesture = leftGesture;\n      if (this._leftGesture !== null) {\n        if (this._multitouch === null) {\n          this.multitouch(true);\n        }\n        this._leftGesture.multitouch(this._multitouch)\n                         .ruler(this.surface())\n                         .scale(this.leftAxis()!.scale.value!);\n        if (this._multitouch !== null && this.isMounted()) {\n          this._leftGesture.attach(this._multitouch);\n        }\n        this.reboundLeft();\n      }\n      return this;\n    }\n  }\n\n  rescaleTransition(): Transition<any> | null;\n  rescaleTransition(rescaleTransition: AnyTransition<any> | null): this;\n  rescaleTransition(rescaleTransition?: AnyTransition<any> | null): Transition<any> | null | this {\n    if (rescaleTransition === void 0) {\n      return this._rescaleTransition;\n    } else {\n      if (rescaleTransition !== null) {\n        rescaleTransition = Transition.fromAny(rescaleTransition);\n      }\n      this._rescaleTransition = rescaleTransition;\n      return this;\n    }\n  }\n\n  fitTopDomain(): boolean;\n  fitTopDomain(fitTopDomain: boolean): this;\n  fitTopDomain(fitTopDomain?: boolean): boolean | this {\n    if (fitTopDomain === void 0) {\n      return this._fitTopDomain;\n    } else {\n      if (!this._fitTopDomain && fitTopDomain) {\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this._fitTopDomain = fitTopDomain;\n      return this;\n    }\n  }\n\n  fitRightDomain(): boolean;\n  fitRightDomain(fitRightDomain: boolean): this;\n  fitRightDomain(fitRightDomain?: boolean): boolean | this {\n    if (fitRightDomain === void 0) {\n      return this._fitRightDomain;\n    } else {\n      if (!this._fitRightDomain && fitRightDomain) {\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this._fitRightDomain = fitRightDomain;\n      return this;\n    }\n  }\n\n  fitBottomDomain(): boolean;\n  fitBottomDomain(fitBottomDomain: boolean): this;\n  fitBottomDomain(fitBottomDomain?: boolean): boolean | this {\n    if (fitBottomDomain === void 0) {\n      return this._fitBottomDomain;\n    } else {\n      if (!this._fitBottomDomain && fitBottomDomain) {\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this._fitBottomDomain = fitBottomDomain;\n      return this;\n    }\n  }\n\n  fitLeftDomain(): boolean;\n  fitLeftDomain(fitLeftDomain: boolean): this;\n  fitLeftDomain(fitLeftDomain?: boolean): boolean | this {\n    if (fitLeftDomain === void 0) {\n      return this._fitLeftDomain;\n    } else {\n      if (!this._fitLeftDomain && fitLeftDomain) {\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this._fitLeftDomain = fitLeftDomain;\n      return this;\n    }\n  }\n\n  topDomainBounds(): ChartDomainBounds<X>;\n  topDomainBounds(topDomainBounds: Readonly<ChartDomainBounds<X>>): this;\n  topDomainBounds(topDomainBounds?: Readonly<ChartDomainBounds<X>>): ChartDomainBounds<X> | this {\n    if (topDomainBounds === void 0) {\n      return this._topDomainBounds;\n    } else {\n      this._topDomainBounds[0] = topDomainBounds[0];\n      this._topDomainBounds[1] = topDomainBounds[1];\n      this.reboundTop();\n      return this;\n    }\n  }\n\n  rightDomainBounds(): ChartDomainBounds<Y>;\n  rightDomainBounds(rightDomainBounds: Readonly<ChartDomainBounds<Y>>): this;\n  rightDomainBounds(rightDomainBounds?: Readonly<ChartDomainBounds<Y>>): ChartDomainBounds<Y> | this {\n    if (rightDomainBounds === void 0) {\n      return this._rightDomainBounds;\n    } else {\n      this._rightDomainBounds[0] = rightDomainBounds[0];\n      this._rightDomainBounds[1] = rightDomainBounds[1];\n      this.reboundRight();\n      return this;\n    }\n  }\n\n  bottomDomainBounds(): ChartDomainBounds<X>;\n  bottomDomainBounds(bottomDomainBounds: Readonly<ChartDomainBounds<X>>): this;\n  bottomDomainBounds(bottomDomainBounds?: Readonly<ChartDomainBounds<X>>): ChartDomainBounds<X> | this {\n    if (bottomDomainBounds === void 0) {\n      return this._bottomDomainBounds;\n    } else {\n      this._bottomDomainBounds[0] = bottomDomainBounds[0];\n      this._bottomDomainBounds[1] = bottomDomainBounds[1];\n      this.reboundBottom();\n      return this;\n    }\n  }\n\n  leftDomainBounds(): ChartDomainBounds<Y>;\n  leftDomainBounds(leftDomainBounds: Readonly<ChartDomainBounds<Y>>): this;\n  leftDomainBounds(leftDomainBounds?: Readonly<ChartDomainBounds<Y>>): ChartDomainBounds<Y> | this {\n    if (leftDomainBounds === void 0) {\n      return this._leftDomainBounds;\n    } else {\n      this._leftDomainBounds[0] = leftDomainBounds[0];\n      this._leftDomainBounds[1] = leftDomainBounds[1];\n      this.reboundLeft();\n      return this;\n    }\n  }\n\n  topDomainPadding(): ChartDomainPadding<X>;\n  topDomainPadding(topDomainPadding: Readonly<ChartDomainPadding<X>>): this;\n  topDomainPadding(topDomainPadding?: Readonly<ChartDomainPadding<X>>): ChartDomainPadding<X> | this {\n    if (topDomainPadding === void 0) {\n      return this._topDomainPadding;\n    } else {\n      this._topDomainPadding[0] = topDomainPadding[0];\n      this._topDomainPadding[1] = topDomainPadding[1];\n      this.requireUpdate(View.NeedsLayout);\n      return this;\n    }\n  }\n\n  rightDomainPadding(): ChartDomainPadding<Y>;\n  rightDomainPadding(rightDomainPadding: Readonly<ChartDomainPadding<Y>>): this;\n  rightDomainPadding(rightDomainPadding?: Readonly<ChartDomainPadding<Y>>): ChartDomainPadding<Y> | this {\n    if (rightDomainPadding === void 0) {\n      return this._rightDomainPadding;\n    } else {\n      this._rightDomainPadding[0] = rightDomainPadding[0];\n      this._rightDomainPadding[1] = rightDomainPadding[1];\n      this.requireUpdate(View.NeedsLayout);\n      return this;\n    }\n  }\n\n  bottomDomainPadding(): ChartDomainPadding<X>;\n  bottomDomainPadding(bottomDomainPadding: Readonly<ChartDomainPadding<X>>): this;\n  bottomDomainPadding(bottomDomainPadding?: Readonly<ChartDomainPadding<X>>): ChartDomainPadding<X> | this {\n    if (bottomDomainPadding === void 0) {\n      return this._bottomDomainPadding;\n    } else {\n      this._bottomDomainPadding[0] = bottomDomainPadding[0];\n      this._bottomDomainPadding[1] = bottomDomainPadding[1];\n      this.requireUpdate(View.NeedsLayout);\n      return this;\n    }\n  }\n\n  leftDomainPadding(): ChartDomainPadding<Y>;\n  leftDomainPadding(leftDomainPadding: Readonly<ChartDomainPadding<Y>>): this;\n  leftDomainPadding(leftDomainPadding?: Readonly<ChartDomainPadding<Y>>): ChartDomainPadding<Y> | this {\n    if (leftDomainPadding === void 0) {\n      return this._leftDomainPadding;\n    } else {\n      this._leftDomainPadding[0] = leftDomainPadding[0];\n      this._leftDomainPadding[1] = leftDomainPadding[1];\n      this.requireUpdate(View.NeedsLayout);\n      return this;\n    }\n  }\n\n  topDomain(): Readonly<[X | null, X | null]> {\n    const topDomain: [X | null, X | null] = [null, null];\n    const topAxis = this.topAxis();\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof PlotView && childView.xAxis() === topAxis) {\n        const xDomain = childView.xDomain();\n        if (topDomain[0] === null || xDomain[0] !== null && Objects.compare(topDomain[0], xDomain[0]) > 0) {\n          topDomain[0] = xDomain[0];\n        }\n        if (topDomain[1] === null || xDomain[1] !== null && Objects.compare(topDomain[1], xDomain[1]) < 0) {\n          topDomain[1] = xDomain[1];\n        }\n      }\n    }\n    return topDomain;\n  }\n\n  rightDomain(): Readonly<[Y | null, Y | null]> {\n    const rightDomain: [Y | null, Y | null] = [null, null];\n    const rightAxis = this.rightAxis();\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof PlotView && childView.yAxis() === rightAxis) {\n        const yDomain = childView.yDomain();\n        if (rightDomain[0] === null || yDomain[0] !== null && Objects.compare(rightDomain[0], yDomain[0]) > 0) {\n          rightDomain[0] = yDomain[0];\n        }\n        if (rightDomain[1] === null || yDomain[1] !== null && Objects.compare(rightDomain[1], yDomain[1]) < 0) {\n          rightDomain[1] = yDomain[1];\n        }\n      }\n    }\n    return rightDomain;\n  }\n\n  bottomDomain(): Readonly<[X | null, X | null]> {\n    const bottomDomain: [X | null, X | null] = [null, null];\n    const bottomAxis = this.bottomAxis();\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof PlotView && childView.xAxis() === bottomAxis) {\n        const xDomain = childView.xDomain();\n        if (bottomDomain[0] === null || xDomain[0] !== null && Objects.compare(bottomDomain[0], xDomain[0]) > 0) {\n          bottomDomain[0] = xDomain[0];\n        }\n        if (bottomDomain[1] === null || xDomain[1] !== null && Objects.compare(bottomDomain[1], xDomain[1]) < 0) {\n          bottomDomain[1] = xDomain[1];\n        }\n      }\n    }\n    return bottomDomain;\n  }\n\n  leftDomain(): Readonly<[Y | null, Y | null]> {\n    const leftDomain: [Y | null, Y | null] = [null, null];\n    const leftAxis = this.leftAxis();\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof PlotView && childView.yAxis() === leftAxis) {\n        const yDomain = childView.yDomain();\n        if (leftDomain[0] === null || yDomain[0] !== null && Objects.compare(leftDomain[0], yDomain[0]) > 0) {\n          leftDomain[0] = yDomain[0];\n        }\n        if (leftDomain[1] === null || yDomain[1] !== null && Objects.compare(leftDomain[1], yDomain[1]) < 0) {\n          leftDomain[1] = yDomain[1];\n        }\n      }\n    }\n    return leftDomain;\n  }\n\n  topDomainPadded(): Readonly<[X | null, X | null]> {\n    let [xMin, xMax] = this.topDomain();\n    const [padMin, padMax] = this._topDomainPadding;\n    if (xMin !== null && padMin !== null) {\n      xMin = (+xMin - +padMin) as unknown as X;\n    }\n    if (xMax !== null && padMax !== null) {\n      xMax = (+xMax + +padMax) as unknown as X;\n    }\n    return [xMin, xMax];\n  }\n\n  rightDomainPadded(): Readonly<[Y | null, Y | null]> {\n    let [yMin, yMax] = this.rightDomain();\n    const [padMin, padMax] = this._topDomainPadding;\n    if (yMin !== null && padMin !== null) {\n      yMin = (+yMin - +padMin) as unknown as Y;\n    }\n    if (yMax !== null && padMax !== null) {\n      yMax = (+yMax + +padMax) as unknown as Y;\n    }\n    return [yMin, yMax];\n  }\n\n  bottomDomainPadded(): Readonly<[X | null, X | null]> {\n    let [xMin, xMax] = this.bottomDomain();\n    const [padMin, padMax] = this._bottomDomainPadding;\n    if (xMin !== null && padMin !== null) {\n      xMin = (+xMin - +padMin) as unknown as X;\n    }\n    if (xMax !== null && padMax !== null) {\n      xMax = (+xMax + +padMax) as unknown as X;\n    }\n    return [xMin, xMax];\n  }\n\n  leftDomainPadded(): Readonly<[Y | null, Y | null]> {\n    let [yMin, yMax] = this.leftDomain();\n    const [padMin, padMax] = this._leftDomainPadding;\n    if (yMin !== null && padMin !== null) {\n      yMin = (+yMin - +padMin) as unknown as Y;\n    }\n    if (yMax !== null && padMax !== null) {\n      yMax = (+yMax + +padMax) as unknown as Y;\n    }\n    return [yMin, yMax];\n  }\n\n  topRange(): Readonly<[number, number]> {\n    const topRange: [number, number] = [Infinity, -Infinity];\n    const topAxis = this.topAxis();\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof PlotView && childView.xAxis() === topAxis) {\n        const xRange = childView.xRange();\n        topRange[0] = Math.min(topRange[0], xRange[0]);\n        topRange[1] = Math.max(topRange[1], xRange[1]);\n      }\n    }\n    return topRange;\n  }\n\n  rightRange(): Readonly<[number, number]> {\n    const rightRange: [number, number] = [Infinity, -Infinity];\n    const rightAxis = this.rightAxis();\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof PlotView && childView.yAxis() === rightAxis) {\n        const yRange = childView.yRange();\n        rightRange[0] = Math.min(rightRange[0], yRange[0]);\n        rightRange[1] = Math.max(rightRange[1], yRange[1]);\n      }\n    }\n    return rightRange;\n  }\n\n  bottomRange(): Readonly<[number, number]> {\n    const bottomRange: [number, number] = [Infinity, -Infinity];\n    const bottomAxis = this.bottomAxis();\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof PlotView && childView.xAxis() === bottomAxis) {\n        const xRange = childView.xRange();\n        bottomRange[0] = Math.min(bottomRange[0], xRange[0]);\n        bottomRange[1] = Math.max(bottomRange[1], xRange[1]);\n      }\n    }\n    return bottomRange;\n  }\n\n  leftRange(): Readonly<[number, number]> {\n    const leftRange: [number, number] = [Infinity, -Infinity];\n    const leftAxis = this.leftAxis();\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof PlotView && childView.yAxis() === leftAxis) {\n        const yRange = childView.yRange();\n        leftRange[0] = Math.min(leftRange[0], yRange[0]);\n        leftRange[1] = Math.max(leftRange[1], yRange[1]);\n      }\n    }\n    return leftRange;\n  }\n\n  protected onMount(): void {\n    super.onMount();\n    if (this._multitouch !== null) {\n      this._multitouch.attach(this);\n      if (this._topGesture !== null) {\n        this._topGesture.attach(this._multitouch);\n      }\n      if (this._rightGesture !== null) {\n        this._rightGesture.attach(this._multitouch);\n      }\n      if (this._bottomGesture !== null) {\n        this._bottomGesture.attach(this._multitouch);\n      }\n      if (this._leftGesture !== null) {\n        this._leftGesture.attach(this._multitouch);\n      }\n    }\n    this.on(\"scalestart\", this.onScaleStart);\n    this.on(\"scalechange\", this.onScaleChange);\n    this.on(\"scalecancel\", this.onScaleCancel);\n    this.on(\"scaleend\", this.onScaleEnd);\n  }\n\n  protected onUnmount(): void {\n    this.off(\"scalestart\", this.onScaleStart);\n    this.off(\"scalechange\", this.onScaleChange);\n    this.off(\"scalecancel\", this.onScaleCancel);\n    this.off(\"scaleend\", this.onScaleEnd);\n    if (this._multitouch !== null) {\n      if (this._topGesture !== null) {\n        this._topGesture.detach(this._multitouch);\n      }\n      if (this._rightGesture !== null) {\n        this._rightGesture.detach(this._multitouch);\n      }\n      if (this._bottomGesture !== null) {\n        this._bottomGesture.detach(this._multitouch);\n      }\n      if (this._leftGesture !== null) {\n        this._leftGesture.detach(this._multitouch);\n      }\n      this._multitouch.detach(this);\n    }\n    super.onUnmount();\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsAnimate) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  protected onLayout(viewContext: RenderedViewContext): void {\n    super.onLayout(viewContext);\n    if (this._topGesture !== null) {\n      this._topGesture.scale(this.topAxis()!.scale.value!);\n    }\n    if (this._rightGesture !== null) {\n      this._rightGesture.scale(this.rightAxis()!.scale.value!);\n    }\n    if (this._bottomGesture !== null) {\n      this._bottomGesture.scale(this.bottomAxis()!.scale.value!);\n    }\n    if (this._leftGesture !== null) {\n      this._leftGesture.scale(this.leftAxis()!.scale.value!);\n    }\n    this.layoutChildViews(this.viewFrame);\n  }\n\n  protected didLayout(viewContext: RenderedViewContext): void {\n    super.didLayout(viewContext);\n    this.autoscale();\n    this.rebound();\n  }\n\n  protected layoutChildViews(frame: BoxR2): void {\n    const childViews = this._childViews;\n    for (let i = 0; i < childViews.length; i += 1) {\n      const childView = childViews[i];\n      this.layoutChildView(childView, frame);\n    }\n  }\n\n  protected layoutChildView(childView: View, frame: BoxR2): void {\n    const childKey = childView.key;\n    if (childKey === \"surface\" && RenderedView.is(childView)) {\n      this.layoutSurface(childView, frame);\n    } else if (childView instanceof AxisView) {\n      if (childKey === \"topAxis\") {\n        this.layoutTopAxis(childView, frame);\n      } else if (childKey === \"rightAxis\") {\n        this.layoutRightAxis(childView, frame);\n      } else if (childKey === \"bottomAxis\") {\n        this.layoutBottomAxis(childView, frame);\n      } else if (childKey === \"leftAxis\") {\n        this.layoutLeftAxis(childView, frame);\n      }\n    } else if (childView instanceof PlotView) {\n      this.layoutPlot(childView, frame);\n    }\n  }\n\n  protected layoutSurface(surface: RenderedView, frame: BoxR2): void {\n    const topGutter = this.topGutter.value!.pxValue(frame.height);\n    const rightGutter = this.rightGutter.value!.pxValue(frame.width);\n    const bottomGutter = this.bottomGutter.value!.pxValue(frame.height);\n    const leftGutter = this.leftGutter.value!.pxValue(frame.width);\n    const xMin = frame.xMin + leftGutter;\n    const yMin = frame.yMin + topGutter;\n    const xMax = frame.xMax - rightGutter;\n    const yMax = frame.yMax - bottomGutter;\n    surface.setViewFrame(new BoxR2(xMin, yMin, xMax, yMax));\n  }\n\n  protected layoutTopAxis(axis: AxisView<X>, frame: BoxR2): void {\n    const topGutter = this.topGutter.value!.pxValue(frame.height);\n    const rightGutter = this.rightGutter.value!.pxValue(frame.width);\n    const bottomGutter = this.bottomGutter.value!.pxValue(frame.height);\n    const leftGutter = this.leftGutter.value!.pxValue(frame.width);\n    const originX = frame.xMin + leftGutter;\n    const originY = frame.yMin + topGutter;\n    const xMin = originX;\n    const yMin = frame.yMin;\n    const xMax = frame.xMax - rightGutter;\n    const yMax = frame.yMax - bottomGutter;\n    axis.range(0, xMax - xMin);\n    axis.setViewFrame(new BoxR2(xMin, yMin, xMax, yMax));\n    axis.origin.setAutoState(new PointR2(originX, originY));\n  }\n\n  protected layoutRightAxis(axis: AxisView<Y>, frame: BoxR2): void {\n    const topGutter = this.topGutter.value!.pxValue(frame.height);\n    const rightGutter = this.rightGutter.value!.pxValue(frame.width);\n    const bottomGutter = this.bottomGutter.value!.pxValue(frame.height);\n    const leftGutter = this.leftGutter.value!.pxValue(frame.width);\n    const originX = Math.max(frame.xMin + leftGutter, frame.xMax - rightGutter);\n    const originY = frame.yMin + topGutter;\n    const xMin = frame.xMin + leftGutter;\n    const yMin = originY;\n    const xMax = frame.xMax;\n    const yMax = frame.yMax - bottomGutter;\n    axis.range(yMax - yMin, 0);\n    axis.setViewFrame(new BoxR2(xMin, yMin, xMax, yMax));\n    axis.origin.setAutoState(new PointR2(originX, originY));\n  }\n\n  protected layoutBottomAxis(axis: AxisView<X>, frame: BoxR2): void {\n    const topGutter = this.topGutter.value!.pxValue(frame.height);\n    const rightGutter = this.rightGutter.value!.pxValue(frame.width);\n    const bottomGutter = this.bottomGutter.value!.pxValue(frame.height);\n    const leftGutter = this.leftGutter.value!.pxValue(frame.width);\n    const originX = frame.xMin + leftGutter;\n    const originY = Math.max(frame.yMin + topGutter, frame.yMax - bottomGutter);\n    const xMin = originX;\n    const yMin = frame.yMin + topGutter;\n    const xMax = frame.xMax - rightGutter;\n    const yMax = frame.yMax;\n    axis.range(0, xMax - xMin);\n    axis.setViewFrame(new BoxR2(xMin, yMin, xMax, yMax));\n    axis.origin.setAutoState(new PointR2(originX, originY));\n  }\n\n  protected layoutLeftAxis(axis: AxisView<Y>, frame: BoxR2): void {\n    const topGutter = this.topGutter.value!.pxValue(frame.height);\n    const rightGutter = this.rightGutter.value!.pxValue(frame.width);\n    const bottomGutter = this.bottomGutter.value!.pxValue(frame.height);\n    const leftGutter = this.leftGutter.value!.pxValue(frame.width);\n    const originX = frame.xMin + leftGutter;\n    const originY = frame.yMin + topGutter;\n    const xMin = frame.xMin;\n    const yMin = originY;\n    const xMax = frame.xMax - rightGutter;\n    const yMax = frame.yMax - bottomGutter;\n    axis.range(yMax - yMin, 0);\n    axis.setViewFrame(new BoxR2(xMin, yMin, xMax, yMax));\n    axis.origin.setAutoState(new PointR2(originX, originY));\n  }\n\n  protected layoutPlot(plot: PlotView<X, Y>, frame: BoxR2): void {\n    const topGutter = this.topGutter.value!.pxValue(frame.height);\n    const rightGutter = this.rightGutter.value!.pxValue(frame.width);\n    const bottomGutter = this.bottomGutter.value!.pxValue(frame.height);\n    const leftGutter = this.leftGutter.value!.pxValue(frame.width);\n    const xMin = frame.xMin + leftGutter;\n    const yMin = frame.yMin + topGutter;\n    const xMax = frame.xMax - rightGutter;\n    const yMax = frame.yMax - bottomGutter;\n    plot.setViewFrame(new BoxR2(xMin, yMin, xMax, yMax));\n    plot.origin.setAutoState(new PointR2(xMin, yMin));\n  }\n\n  protected onInsertChildView(childView: View, targetView: View | null): void {\n    super.onInsertChildView(childView, targetView);\n    if (childView instanceof PlotView) {\n      this.onInsertPlot(childView);\n    }\n  }\n\n  protected onRemoveChildView(childView: View): void {\n    if (childView instanceof PlotView) {\n      this.onRemovePlot(childView);\n    }\n    super.onRemoveChildView(childView);\n  }\n\n  protected onInsertPlot(plot: PlotView<X, Y>): void {\n    if (plot.xAxis() === null || plot.yAxis() === null) {\n      const childViews = this._childViews;\n      for (let i = 0, n = childViews.length; i < n; i += 1) {\n        const childView = childViews[i];\n        if (childView instanceof AxisView) {\n          const childKey = childView.key;\n          if (childKey === \"topAxis\" && plot.xAxis() === null) {\n            plot.xAxis(childView);\n          } else if (childKey === \"rightAxis\" && plot.yAxis() === null) {\n            plot.yAxis(childView);\n          } else if (childKey === \"bottomAxis\" && plot.xAxis() === null) {\n            plot.xAxis(childView);\n          } else if (childKey === \"leftAxis\" && plot.yAxis() === null) {\n            plot.yAxis(childView);\n          }\n        }\n      }\n    }\n  }\n\n  protected onRemovePlot(plot: PlotView<X, Y>): void {\n    // hook\n  }\n\n  autoscale(tween?: Tween<any>): void {\n    if (tween === void 0) {\n      tween = this._rescaleTransition || void 0;\n    }\n    this.autoscaleTop(tween);\n    this.autoscaleRight(tween);\n    this.autoscaleBottom(tween);\n    this.autoscaleLeft(tween);\n  }\n\n  autoscaleTop(tween?: Tween<any>): void {\n    if (this._fitTopDomain && this._trackTopDomain) {\n      const topAxis = this.topAxis();\n      if (topAxis !== null) {\n        if (tween === void 0) {\n          tween = this._rescaleTransition || void 0;\n        }\n        const [xMin, xMax] = this.topDomainPadded();\n        if (xMin !== null && xMax !== null) {\n          topAxis.domain(xMin, xMax, tween);\n        }\n      }\n    }\n  }\n\n  autoscaleRight(tween?: Tween<any>): void {\n    if (this._fitRightDomain && this._trackRightDomain) {\n      const rightAxis = this.rightAxis();\n      if (rightAxis !== null) {\n        if (tween === void 0) {\n          tween = this._rescaleTransition || void 0;\n        }\n        const [yMin, yMax] = this.rightDomainPadded();\n        if (yMin !== null && yMax !== null) {\n          rightAxis.domain(yMin, yMax, tween);\n        }\n      }\n    }\n  }\n\n  autoscaleBottom(tween?: Tween<any>): void {\n    if (this._fitBottomDomain && this._trackBottomDomain) {\n      const bottomAxis = this.bottomAxis();\n      if (bottomAxis !== null) {\n        if (tween === void 0) {\n          tween = this._rescaleTransition || void 0;\n        }\n        const [xMin, xMax] = this.bottomDomainPadded();\n        if (xMin !== null && xMax !== null) {\n          bottomAxis.domain(xMin, xMax, tween);\n        }\n      }\n    }\n  }\n\n  autoscaleLeft(tween?: Tween<any>): void {\n    if (this._fitLeftDomain && this._trackLeftDomain) {\n      const leftAxis = this.leftAxis();\n      if (leftAxis !== null) {\n        if (tween === void 0) {\n          tween = this._rescaleTransition || void 0;\n        }\n        const [yMin, yMax] = this.leftDomainPadded();\n        if (yMin !== null && yMax !== null) {\n          leftAxis.domain(yMin, yMax, tween);\n        }\n      }\n    }\n  }\n\n  rebound(): void {\n    this.reboundTop();\n    this.reboundRight();\n    this.reboundBottom();\n    this.reboundLeft();\n  }\n\n  reboundTop(): void {\n    const topGesture = this._topGesture;\n    if (topGesture !== null) {\n      let [xMin, xMax] = this.topDomainPadded();\n      if (xMin !== null && xMax !== null) {\n        const [boundMin, boundMax] = this._topDomainBounds;\n        if (typeof boundMin !== \"boolean\") {\n          xMin = (+xMin - +boundMin) as unknown as X;\n        }\n        if (typeof boundMax !== \"boolean\") {\n          xMax = (+xMax + +boundMax) as unknown as X;\n        }\n        topGesture.domainBounds(typeof boundMin !== \"boolean\" || boundMin ? xMin : null,\n                                typeof boundMax !== \"boolean\" || boundMax ? xMax : null);\n      }\n    }\n  }\n\n  reboundRight(): void {\n    const rightGesture = this._rightGesture;\n    if (rightGesture !== null) {\n      let [yMin, yMax] = this.rightDomainPadded();\n      if (yMin !== null && yMax !== null) {\n        const [boundMin, boundMax] = this._rightDomainBounds;\n        if (typeof boundMin !== \"boolean\") {\n          yMin = (+yMin - +boundMin) as unknown as Y;\n        }\n        if (typeof boundMax !== \"boolean\") {\n          yMax = (+yMax + +boundMax) as unknown as Y;\n        }\n        rightGesture.domainBounds(typeof boundMin !== \"boolean\" || boundMin ? yMin : null,\n                                  typeof boundMax !== \"boolean\" || boundMax ? yMax : null);\n      }\n    }\n  }\n\n  reboundBottom(): void {\n    const bottomGesture = this._bottomGesture;\n    if (bottomGesture !== null) {\n      let [xMin, xMax] = this.bottomDomainPadded();\n      if (xMin !== null && xMax !== null) {\n        const [boundMin, boundMax] = this._bottomDomainBounds;\n        if (typeof boundMin !== \"boolean\") {\n          xMin = (+xMin - +boundMin) as unknown as X;\n        }\n        if (typeof boundMax !== \"boolean\") {\n          xMax = (+xMax + +boundMax) as unknown as X;\n        }\n        bottomGesture.domainBounds(typeof boundMin !== \"boolean\" || boundMin ? xMin : null,\n                                   typeof boundMax !== \"boolean\" || boundMax ? xMax : null);\n      }\n    }\n  }\n\n  reboundLeft(): void {\n    const leftGesture = this._leftGesture;\n    if (leftGesture !== null) {\n      let [yMin, yMax] = this.leftDomainPadded();\n      if (yMin !== null && yMax !== null) {\n        const [boundMin, boundMax] = this._leftDomainBounds;\n        if (typeof boundMin !== \"boolean\") {\n          yMin = (+yMin - +boundMin) as unknown as Y;\n        }\n        if (typeof boundMax !== \"boolean\") {\n          yMax = (+yMax + +boundMax) as unknown as Y;\n        }\n        leftGesture.domainBounds(typeof boundMin !== \"boolean\" || boundMin ? yMin : null,\n                                 typeof boundMax !== \"boolean\" || boundMax ? yMax : null);\n      }\n    }\n  }\n\n  protected retrackTop(): void {\n    const topGesture = this._topGesture;\n    if (topGesture !== null) {\n      const [xMin, xMax] = topGesture.scale()!.domain();\n      const boundMin = topGesture.domainMin();\n      const boundMax = topGesture.domainMax();\n      if (xMin !== null && xMax !== null && boundMin !== null && boundMax !== null) {\n        const order = Objects.compare(xMin, xMax);\n        if (order < 0 && Objects.compare(xMin, boundMin) <= 0 && Objects.compare(xMax, boundMax) >= 0\n            || order > 0 && Objects.compare(xMax, boundMin) <= 0 && Objects.compare(xMin, boundMax) >= 0) {\n          this._trackTopDomain = true;\n        }\n      }\n    }\n  }\n\n  protected retrackRight(): void {\n    const rightGesture = this._rightGesture;\n    if (rightGesture !== null) {\n      const [yMin, yMax] = rightGesture.scale()!.domain();\n      const boundMin = rightGesture.domainMin();\n      const boundMax = rightGesture.domainMax();\n      if (yMin !== null && yMax !== null && boundMin !== null && boundMax !== null) {\n        const order = Objects.compare(yMin, yMax);\n        if (order < 0 && Objects.compare(yMin, boundMin) <= 0 && Objects.compare(yMax, boundMax) >= 0\n            || order > 0 && Objects.compare(yMax, boundMin) <= 0 && Objects.compare(yMin, boundMax) >= 0) {\n          this._trackRightDomain = true;\n        }\n      }\n    }\n  }\n\n  protected retrackBottom(): void {\n    const bottomGesture = this._bottomGesture;\n    if (bottomGesture !== null) {\n      const [xMin, xMax] = bottomGesture.scale()!.domain();\n      const boundMin = bottomGesture.domainMin();\n      const boundMax = bottomGesture.domainMax();\n      if (xMin !== null && xMax !== null && boundMin !== null && boundMax !== null) {\n        const order = Objects.compare(xMin, xMax);\n        if (order < 0 && Objects.compare(xMin, boundMin) <= 0 && Objects.compare(xMax, boundMax) >= 0\n            || order > 0 && Objects.compare(xMax, boundMin) <= 0 && Objects.compare(xMin, boundMax) >= 0) {\n          this._trackBottomDomain = true;\n        }\n      }\n    }\n  }\n\n  protected retrackLeft(): void {\n    const leftGesture = this._leftGesture;\n    if (leftGesture !== null) {\n      const [yMin, yMax] = leftGesture.scale()!.domain();\n      const boundMin = leftGesture.domainMin();\n      const boundMax = leftGesture.domainMax();\n      if (yMin !== null && yMax !== null && boundMin !== null && boundMax !== null) {\n        const order = Objects.compare(yMin, yMax);\n        if (order < 0 && Objects.compare(yMin, boundMin) <= 0 && Objects.compare(yMax, boundMax) >= 0\n            || order > 0 && Objects.compare(yMax, boundMin) <= 0 && Objects.compare(yMin, boundMax) >= 0) {\n          this._trackLeftDomain = true;\n        }\n      }\n    }\n  }\n\n  protected onScaleStart(event: ScaleGestureEvent<unknown>): void {\n    if (event.gesture === this._topGesture) {\n      const topAxis = this.topAxis();\n      if (topAxis !== null) {\n        topAxis.domain(event.scale.domain() as X[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this._trackTopDomain = false;\n    } else if (event.gesture === this._rightGesture) {\n      const rightAxis = this.rightAxis();\n      if (rightAxis !== null) {\n        rightAxis.domain(event.scale.domain() as Y[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this._trackRightDomain = false;\n    } else if (event.gesture === this._bottomGesture) {\n      const bottomAxis = this.bottomAxis();\n      if (bottomAxis !== null) {\n        bottomAxis.domain(event.scale.domain() as X[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this._trackBottomDomain = false;\n    } else if (event.gesture === this._leftGesture) {\n      const leftAxis = this.leftAxis();\n      if (leftAxis !== null) {\n        leftAxis.domain(event.scale.domain() as Y[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this._trackLeftDomain = false;\n    }\n  }\n\n  protected onScaleChange(event: ScaleGestureEvent<unknown>): void {\n    if (event.gesture === this._topGesture) {\n      const topAxis = this.topAxis();\n      if (topAxis !== null) {\n        topAxis.domain(event.scale.domain() as X[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n    } else if (event.gesture === this._rightGesture) {\n      const rightAxis = this.rightAxis();\n      if (rightAxis !== null) {\n        rightAxis.domain(event.scale.domain() as Y[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n    } else if (event.gesture === this._bottomGesture) {\n      const bottomAxis = this.bottomAxis();\n      if (bottomAxis !== null) {\n        bottomAxis.domain(event.scale.domain() as X[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n    } else if (event.gesture === this._leftGesture) {\n      const leftAxis = this.leftAxis();\n      if (leftAxis !== null) {\n        leftAxis.domain(event.scale.domain() as Y[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n    }\n  }\n\n  protected onScaleCancel(event: ScaleGestureEvent<unknown>): void {\n    this.onScaleEnd(event);\n  }\n\n  protected onScaleEnd(event: ScaleGestureEvent<unknown>): void {\n    if (event.gesture === this._topGesture) {\n      const topAxis = this.topAxis();\n      if (topAxis !== null) {\n        topAxis.domain(event.scale.domain() as X[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this.retrackTop();\n    } else if (event.gesture === this._rightGesture) {\n      const rightAxis = this.rightAxis();\n      if (rightAxis !== null) {\n        rightAxis.domain(event.scale.domain() as Y[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this.retrackRight();\n    } else if (event.gesture === this._bottomGesture) {\n      const bottomAxis = this.bottomAxis();\n      if (bottomAxis !== null) {\n        bottomAxis.domain(event.scale.domain() as X[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this.retrackBottom();\n    } else if (event.gesture === this._leftGesture) {\n      const leftAxis = this.leftAxis();\n      if (leftAxis !== null) {\n        leftAxis.domain(event.scale.domain() as Y[]);\n        this.requireUpdate(View.NeedsLayout);\n      }\n      this.retrackLeft();\n    }\n  }\n\n  static fromAny<X = any, Y = any>(chart: AnyChartView<X, Y>): ChartView<X, Y> {\n    if (chart instanceof ChartView) {\n      return chart;\n    } else if (typeof chart === \"object\" && chart !== null) {\n      const view = new ChartView();\n\n      if (chart.bottomAxis !== void 0) {\n        view.bottomAxis(chart.bottomAxis);\n      }\n      if (chart.leftAxis !== void 0) {\n        view.leftAxis(chart.leftAxis);\n      }\n      if (chart.topAxis !== void 0) {\n        view.topAxis(chart.topAxis);\n      }\n      if (chart.rightAxis !== void 0) {\n        view.rightAxis(chart.rightAxis);\n      }\n\n      const plots = chart.plots;\n      if (plots !== void 0) {\n        for (let i = 0, n = plots.length; i < n; i += 1) {\n          view.addPlot(plots[i]);\n        }\n      }\n\n      if (chart.fitTopDomain !== void 0) {\n        view.fitTopDomain(chart.fitTopDomain);\n      }\n      if (chart.fitRightDomain !== void 0) {\n        view.fitRightDomain(chart.fitRightDomain);\n      }\n      if (chart.fitBottomDomain !== void 0) {\n        view.fitBottomDomain(chart.fitBottomDomain);\n      }\n      if (chart.fitLeftDomain !== void 0) {\n        view.fitLeftDomain(chart.fitLeftDomain);\n      }\n\n      if (chart.topDomainBounds !== void 0) {\n        view.topDomainBounds(chart.topDomainBounds);\n      }\n      if (chart.rightDomainBounds !== void 0) {\n        view.rightDomainBounds(chart.rightDomainBounds);\n      }\n      if (chart.bottomDomainBounds !== void 0) {\n        view.bottomDomainBounds(chart.bottomDomainBounds);\n      }\n      if (chart.leftDomainBounds !== void 0) {\n        view.leftDomainBounds(chart.leftDomainBounds);\n      }\n\n      if (chart.topDomainPadding !== void 0) {\n        view.topDomainPadding(chart.topDomainPadding);\n      }\n      if (chart.rightDomainPadding !== void 0) {\n        view.rightDomainPadding(chart.rightDomainPadding);\n      }\n      if (chart.bottomDomainPadding !== void 0) {\n        view.bottomDomainPadding(chart.bottomDomainPadding);\n      }\n      if (chart.leftDomainPadding !== void 0) {\n        view.leftDomainPadding(chart.leftDomainPadding);\n      }\n\n      if (chart.multitouch !== void 0) {\n        view.multitouch(chart.multitouch);\n      }\n      if (chart.topGesture !== void 0) {\n        view.topGesture(chart.topGesture);\n      }\n      if (chart.rightGesture !== void 0) {\n        view.rightGesture(chart.rightGesture);\n      }\n      if (chart.bottomGesture !== void 0) {\n        view.bottomGesture(chart.bottomGesture);\n      }\n      if (chart.leftGesture !== void 0) {\n        view.leftGesture(chart.leftGesture);\n      }\n\n      if (chart.rescaleTransition !== void 0) {\n        view.rescaleTransition(chart.rescaleTransition);\n      }\n\n      if (chart.topGutter !== void 0) {\n        view.topGutter(chart.topGutter);\n      }\n      if (chart.rightGutter !== void 0) {\n        view.rightGutter(chart.rightGutter);\n      }\n      if (chart.bottomGutter !== void 0) {\n        view.bottomGutter(chart.bottomGutter);\n      }\n      if (chart.leftGutter !== void 0) {\n        view.leftGutter(chart.leftGutter);\n      }\n\n      if (chart.domainColor !== void 0) {\n        view.domainColor(chart.domainColor);\n      }\n      if (chart.domainWidth !== void 0) {\n        view.domainWidth(chart.domainWidth);\n      }\n      if (chart.domainSerif !== void 0) {\n        view.domainSerif(chart.domainSerif);\n      }\n\n      if (chart.tickMarkColor !== void 0) {\n        view.tickMarkColor(chart.tickMarkColor);\n      }\n      if (chart.tickMarkWidth !== void 0) {\n        view.tickMarkWidth(chart.tickMarkWidth);\n      }\n      if (chart.tickMarkLength !== void 0) {\n        view.tickMarkLength(chart.tickMarkLength);\n      }\n\n      if (chart.tickLabelPadding !== void 0) {\n        view.tickLabelPadding(chart.tickLabelPadding);\n      }\n\n      if (chart.gridLineColor !== void 0) {\n        view.gridLineColor(chart.gridLineColor);\n      }\n      if (chart.gridLineWidth !== void 0) {\n        view.gridLineWidth(chart.gridLineWidth);\n      }\n\n      if (chart.font !== void 0) {\n        view.font(chart.font);\n      }\n      if (chart.textColor !== void 0) {\n        view.textColor(chart.textColor);\n      }\n\n      if (chart.hidden !== void 0) {\n        view.setHidden(chart.hidden);\n      }\n      if (chart.culled !== void 0) {\n        view.setCulled(chart.culled);\n      }\n\n      return view;\n    }\n    throw new TypeError(\"\" + chart);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GraphicsViewController} from \"@swim/view\";\nimport {AxisView} from \"./axis/AxisView\";\nimport {ChartView} from \"./ChartView\";\nimport {ChartViewObserver} from \"./ChartViewObserver\";\n\nexport class ChartViewController<X = any, Y = any, V extends ChartView<X, Y> = ChartView<X, Y>> extends GraphicsViewController<V> implements ChartViewObserver<X, Y, V> {\n  topAxis(): AxisView<X> | null {\n    const view = this._view;\n    return view !== null ? view.topAxis() : null;\n  }\n\n  rightAxis(): AxisView<Y> | null {\n    const view = this._view;\n    return view !== null ? view.rightAxis() : null;\n  }\n\n  bottomAxis(): AxisView<X> | null {\n    const view = this._view;\n    return view !== null ? view.bottomAxis() : null;\n  }\n\n  leftAxis(): AxisView<Y> | null {\n    const view = this._view;\n    return view !== null ? view.leftAxis() : null;\n  }\n}\n"]}