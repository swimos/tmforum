{"version":3,"sources":["../../../util/main/ByteOrder.ts","../../../util/main/String.ts","../../../util/main/Random.ts","../../../util/main/Murmur3.ts","../../../util/main/Objects.ts","../../../util/main/Cursor.ts","../../../../../node_modules/tslib/tslib.es6.js","../../../util/main/CursorEmpty.ts","../../../util/main/CursorUnary.ts","../../../util/main/CursorArray.ts","../../../util/main/AssertException.ts","../../../util/main/Assert.ts","../../../util/main/Severity.ts","../../../util/main/HashGenCacheMap.ts","../../../util/main/HashGenCacheSet.ts","../../../codec/main/Tag.ts","../../../codec/main/Mark.ts","../../../codec/main/Span.ts","../../../codec/main/InputException.ts","../../../codec/main/OutputSettings.ts","../../../codec/main/OutputException.ts","../../../codec/main/Output.ts","../../../codec/main/Input.ts","../../../codec/main/StringInput.ts","../../../codec/main/StringOutput.ts","../../../codec/main/WriterException.ts","../../../codec/main/Writer.ts","../../../codec/main/StringWriter.ts","../../../codec/main/Unicode.ts","../../../codec/main/Format.ts","../../../codec/main/InputSettings.ts","../../../codec/main/InputBuffer.ts","../../../codec/main/OutputBuffer.ts","../../../codec/main/OutputStyle.ts","../../../codec/main/Base10.ts","../../../codec/main/Diagnostic.ts","../../../codec/main/ParserException.ts","../../../codec/main/Parser.ts","../../../codec/main/UtfErrorMode.ts","../../../codec/main/Uint8ArrayOutput.ts","../../../codec/main/ByteOutputUint8Array.ts","../../../codec/main/ByteOutput.ts","../../../codec/main/Binary.ts","../../../codec/main/Base16.ts","../../../codec/main/Utf8DecodedOutput.ts","../../../codec/main/Utf8EncodedOutput.ts","../../../codec/main/Utf8.ts","../../../codec/main/Base10NumberParser.ts","../../../codec/main/Base10IntegerWriter.ts","../../../codec/main/Base16Parser.ts","../../../codec/main/Base16Writer.ts","../../../codec/main/Base16IntegerWriter.ts","../../../codec/main/Base64.ts","../../../codec/main/Base64Parser.ts","../../../codec/main/Base64Writer.ts","../../../collections/main/KeysCursor.ts","../../../collections/main/ValuesCursor.ts","../../../collections/main/NodeCursor.ts","../../../collections/main/BTreeContext.ts","../../../collections/main/BTree.ts","../../../collections/main/BTreePage.ts","../../../collections/main/BTreeLeaf.ts","../../../collections/main/BTreeNode.ts","../../../collections/main/BTreeNodeCursor.ts","../../../collections/main/STreeContext.ts","../../../collections/main/STree.ts","../../../collections/main/STreePage.ts","../../../collections/main/STreeLeaf.ts","../../../collections/main/STreeNode.ts","../../../collections/main/STreeNodeCursor.ts","../../../interpolate/main/Interpolator.ts","../../../interpolate/main/NumberInterpolator.ts","../../../interpolate/main/StepInterpolator.ts","../../../interpolate/main/ArrayInterpolator.ts","../../../interpolate/main/InterpolatorInterpolator.ts","../../../interpolate/main/InterpolatorMap.ts","../../../structure/main/Item.ts","../../../structure/main/Field.ts","../../../structure/main/InterpreterException.ts","../../../structure/main/InterpreterSettings.ts","../../../structure/main/Interpreter.ts","../../../structure/main/Attr.ts","../../../structure/main/Slot.ts","../../../structure/main/ValueBuilder.ts","../../../structure/main/Value.ts","../../../structure/main/RecordCursor.ts","../../../structure/main/Record.ts","../../../structure/main/RecordMap.ts","../../../structure/main/RecordMapView.ts","../../../structure/main/DataOutput.ts","../../../structure/main/Data.ts","../../../structure/main/TextOutput.ts","../../../structure/main/Text.ts","../../../structure/main/Num.ts","../../../structure/main/Bool.ts","../../../structure/main/Expression.ts","../../../structure/main/Operator.ts","../../../structure/main/Selector.ts","../../../structure/main/Func.ts","../../../structure/main/Extant.ts","../../../structure/main/Absent.ts","../../../structure/main/FormException.ts","../../../structure/main/Form.ts","../../../structure/main/operator/BinaryOperator.ts","../../../structure/main/operator/UnaryOperator.ts","../../../structure/main/operator/ConditionalOperator.ts","../../../structure/main/operator/OrOperator.ts","../../../structure/main/operator/AndOperator.ts","../../../structure/main/operator/BitwiseOrOperator.ts","../../../structure/main/operator/BitwiseXorOperator.ts","../../../structure/main/operator/BitwiseAndOperator.ts","../../../structure/main/operator/LtOperator.ts","../../../structure/main/operator/LeOperator.ts","../../../structure/main/operator/EqOperator.ts","../../../structure/main/operator/NeOperator.ts","../../../structure/main/operator/GeOperator.ts","../../../structure/main/operator/GtOperator.ts","../../../structure/main/operator/PlusOperator.ts","../../../structure/main/operator/MinusOperator.ts","../../../structure/main/operator/TimesOperator.ts","../../../structure/main/operator/DivideOperator.ts","../../../structure/main/operator/ModuloOperator.ts","../../../structure/main/operator/NotOperator.ts","../../../structure/main/operator/BitwiseNotOperator.ts","../../../structure/main/operator/NegativeOperator.ts","../../../structure/main/operator/PositiveOperator.ts","../../../structure/main/operator/InvokeOperator.ts","../../../structure/main/selector/IdentitySelector.ts","../../../structure/main/selector/GetSelector.ts","../../../structure/main/selector/GetAttrSelector.ts","../../../structure/main/selector/GetItemSelector.ts","../../../structure/main/selector/KeysSelector.ts","../../../structure/main/selector/ValuesSelector.ts","../../../structure/main/selector/ChildrenSelector.ts","../../../structure/main/selector/DescendantsSelector.ts","../../../structure/main/selector/FilterSelector.ts","../../../structure/main/selector/LiteralSelector.ts","../../../structure/main/func/LambdaFunc.ts","../../../structure/main/func/BridgeFunc.ts","../../../structure/main/func/MathModule.ts","../../../structure/main/form/TagForm.ts","../../../structure/main/form/UnitForm.ts","../../../structure/main/form/StringForm.ts","../../../structure/main/form/NumberForm.ts","../../../structure/main/form/BooleanForm.ts","../../../structure/main/form/AnyForm.ts","../../../structure/main/form/ItemForm.ts","../../../structure/main/form/ValueForm.ts","../../../structure/main/collections/ValueCursor.ts","../../../structure/main/collections/ValueEntryCursor.ts","../../../structure/main/interpolator/ItemInterpolator.ts","../../../structure/main/interpolator/AttrInterpolator.ts","../../../structure/main/interpolator/SlotInterpolator.ts","../../../structure/main/interpolator/ValueInterpolator.ts","../../../structure/main/interpolator/RecordInterpolator.ts","../../../structure/main/interpolator/NumInterpolator.ts","../../../structure/main/interpolator/ConditionalOperatorInterpolator.ts","../../../structure/main/interpolator/BinaryOperatorInterpolator.ts","../../../structure/main/interpolator/UnaryOperatorInterpolator.ts","../../../structure/main/interpolator/InvokeOperatorInterpolator.ts","../../../streamlet/main/KeyEffect.ts","../../../streamlet/main/Inlet.ts","../../../streamlet/main/Outlet.ts","../../../streamlet/main/MapInlet.ts","../../../streamlet/main/MapOutlet.ts","../../../streamlet/main/StreamletException.ts","../../../streamlet/main/StreamletScope.ts","../../../streamlet/main/AbstractInlet.ts","../../../streamlet/main/AbstractOutlet.ts","../../../streamlet/main/AbstractInoutlet.ts","../../../streamlet/main/KeyOutlet.ts","../../../streamlet/main/AbstractMapInlet.ts","../../../streamlet/main/AbstractMapOutlet.ts","../../../streamlet/main/AbstractMapInoutlet.ts","../../../streamlet/main/AbstractMapInletOutlet.ts","../../../streamlet/main/AbstractMapInletMapOutlet.ts","../../../streamlet/main/OutletInlet.ts","../../../streamlet/main/OutletMapInlet.ts","../../../streamlet/main/ValueInput.ts","../../../streamlet/main/ValueOutput.ts","../../../streamlet/main/MapInput.ts","../../../streamlet/main/MapOutput.ts","../../../streamlet/main/combinator/MemoizeValueCombinator.ts","../../../streamlet/main/combinator/MemoizeMapCombinator.ts","../../../streamlet/main/combinator/FilterFieldsOperator.ts","../../../streamlet/main/combinator/FilterFieldsCombinator.ts","../../../streamlet/main/combinator/MapValueOperator.ts","../../../streamlet/main/combinator/MapValueCombinator.ts","../../../streamlet/main/combinator/MapFieldValuesOperator.ts","../../../streamlet/main/combinator/MapFieldValuesCombinator.ts","../../../streamlet/main/combinator/ReduceFieldsOperator.ts","../../../streamlet/main/combinator/ReduceFieldsCombinator.ts","../../../streamlet/main/combinator/WatchValueOperator.ts","../../../streamlet/main/combinator/WatchValueCombinator.ts","../../../streamlet/main/combinator/WatchFieldsOperator.ts","../../../streamlet/main/combinator/WatchFieldsCombinator.ts","../../../streamlet/main/StreamletInlet.ts","../../../streamlet/main/StreamletOutlet.ts","../../../streamlet/main/StreamletInoutlet.ts","../../../streamlet/main/AbstractStreamlet.ts","../../../dataflow/main/RecordOutlet.ts","../../../dataflow/main/AbstractRecordOutlet.ts","../../../dataflow/main/RecordStreamlet.ts","../../../dataflow/main/AbstractRecordStreamlet.ts","../../../dataflow/main/RecordFieldUpdater.ts","../../../dataflow/main/Reifier.ts","../../../dataflow/main/RecordModel.ts","../../../dataflow/main/RecordScope.ts","../../../dataflow/main/selector/GetOutlet.ts","../../../dataflow/main/operator/BinaryOutlet.ts","../../../dataflow/main/operator/UnaryOutlet.ts","../../../dataflow/main/operator/ConditionalOutlet.ts","../../../dataflow/main/operator/OrOutlet.ts","../../../dataflow/main/operator/AndOutlet.ts","../../../dataflow/main/operator/BitwiseOrOutlet.ts","../../../dataflow/main/operator/BitwiseXorOutlet.ts","../../../dataflow/main/operator/BitwiseAndOutlet.ts","../../../dataflow/main/operator/LtOutlet.ts","../../../dataflow/main/operator/LeOutlet.ts","../../../dataflow/main/operator/EqOutlet.ts","../../../dataflow/main/operator/NeOutlet.ts","../../../dataflow/main/operator/GeOutlet.ts","../../../dataflow/main/operator/GtOutlet.ts","../../../dataflow/main/operator/PlusOutlet.ts","../../../dataflow/main/operator/MinusOutlet.ts","../../../dataflow/main/operator/TimesOutlet.ts","../../../dataflow/main/operator/DivideOutlet.ts","../../../dataflow/main/operator/ModuloOutlet.ts","../../../dataflow/main/operator/NotOutlet.ts","../../../dataflow/main/operator/BitwiseNotOutlet.ts","../../../dataflow/main/operator/NegativeOutlet.ts","../../../dataflow/main/operator/PositiveOutlet.ts","../../../dataflow/main/operator/InvokeOutlet.ts","../../../dataflow/main/Dataflow.ts","../../../recon/main/BlockParser.ts","../../../recon/main/AttrParser.ts","../../../recon/main/BlockItemParser.ts","../../../recon/main/InlineItemParser.ts","../../../recon/main/RecordParser.ts","../../../recon/main/MarkupParser.ts","../../../recon/main/DataParser.ts","../../../recon/main/IdentParser.ts","../../../recon/main/StringParser.ts","../../../recon/main/NumberParser.ts","../../../recon/main/LambdaFuncParser.ts","../../../recon/main/ConditionalOperatorParser.ts","../../../recon/main/OrOperatorParser.ts","../../../recon/main/AndOperatorParser.ts","../../../recon/main/BitwiseOrOperatorParser.ts","../../../recon/main/BitwiseXorOperatorParser.ts","../../../recon/main/BitwiseAndOperatorParser.ts","../../../recon/main/ComparisonOperatorParser.ts","../../../recon/main/AttrExpressionParser.ts","../../../recon/main/AdditiveOperatorParser.ts","../../../recon/main/MultiplicativeOperatorParser.ts","../../../recon/main/PrefixOperatorParser.ts","../../../recon/main/InvokeOperatorParser.ts","../../../recon/main/PrimaryParser.ts","../../../recon/main/LiteralParser.ts","../../../recon/main/SelectorParser.ts","../../../recon/main/ReconParser.ts","../../../recon/main/ReconStructureParser.ts","../../../recon/main/AttrWriter.ts","../../../recon/main/SlotWriter.ts","../../../recon/main/BlockWriter.ts","../../../recon/main/PrimaryWriter.ts","../../../recon/main/MarkupTextWriter.ts","../../../recon/main/DataWriter.ts","../../../recon/main/IdentWriter.ts","../../../recon/main/StringWriter.ts","../../../recon/main/LambdaFuncWriter.ts","../../../recon/main/ConditionalOperatorWriter.ts","../../../recon/main/InfixOperatorWriter.ts","../../../recon/main/PrefixOperatorWriter.ts","../../../recon/main/InvokeOperatorWriter.ts","../../../recon/main/LiteralSelectorWriter.ts","../../../recon/main/GetSelectorWriter.ts","../../../recon/main/GetAttrSelectorWriter.ts","../../../recon/main/GetItemSelectorWriter.ts","../../../recon/main/KeysSelectorWriter.ts","../../../recon/main/ValuesSelectorWriter.ts","../../../recon/main/ChildrenSelectorWriter.ts","../../../recon/main/DescendantsSelectorWriter.ts","../../../recon/main/FilterSelectorWriter.ts","../../../recon/main/ReconWriter.ts","../../../recon/main/ReconStructureWriter.ts","../../../recon/main/Recon.ts","../../../math/main/Shape.ts","../../../math/main/R2Shape.ts","../../../math/main/VectorR2.ts","../../../math/main/PointR2.ts","../../../math/main/SegmentR2.ts","../../../math/main/CircleR2.ts","../../../math/main/BoxR2.ts","../../../math/main/R2ShapeInterpolator.ts","../../../math/main/PointR2Interpolator.ts","../../../math/main/SegmentR2Interpolator.ts","../../../math/main/BoxR2Interpolator.ts","../../../math/main/CircleR2Interpolator.ts","../../../time/main/TimeZone.ts","../../../time/main/TimeZoneForm.ts","../../../time/main/DateTimeLocale.ts","../../../time/main/DateTime.ts","../../../time/main/DateTimeParser.ts","../../../time/main/DateTimeInterpolator.ts","../../../time/main/DateTimeForm.ts","../../../time/main/DateTimeSpecifiers.ts","../../../time/main/DateTimeFormat.ts","../../../time/main/format/YearFormat.ts","../../../time/main/format/MonthOfYearFormat.ts","../../../time/main/format/MonthFormat.ts","../../../time/main/format/ShortMonthFormat.ts","../../../time/main/format/DayOfMonthFormat.ts","../../../time/main/format/WeekdayFormat.ts","../../../time/main/format/ShortWeekdayFormat.ts","../../../time/main/format/Hour24Format.ts","../../../time/main/format/Hour12Format.ts","../../../time/main/format/PeriodFormat.ts","../../../time/main/format/MinuteFormat.ts","../../../time/main/format/SecondFormat.ts","../../../time/main/format/MillisecondFormat.ts","../../../time/main/format/PatternFormat.ts","../../../time/main/format/YearParser.ts","../../../time/main/format/MonthOfYearParser.ts","../../../time/main/format/MonthParser.ts","../../../time/main/format/ShortMonthParser.ts","../../../time/main/format/DayOfMonthParser.ts","../../../time/main/format/WeekdayParser.ts","../../../time/main/format/ShortWeekdayParser.ts","../../../time/main/format/Hour24Parser.ts","../../../time/main/format/Hour12Parser.ts","../../../time/main/format/PeriodParser.ts","../../../time/main/format/MinuteParser.ts","../../../time/main/format/SecondParser.ts","../../../time/main/format/MillisecondParser.ts","../../../time/main/format/PatternParser.ts","../../../time/main/TimeInterval.ts","../../../time/main/interval/FilterInterval.ts","../../../time/main/interval/YearInterval.ts","../../../time/main/interval/YearsInterval.ts","../../../time/main/interval/MonthInterval.ts","../../../time/main/interval/WeekInterval.ts","../../../time/main/interval/DayInterval.ts","../../../time/main/interval/HourInterval.ts","../../../time/main/interval/MinuteInterval.ts","../../../time/main/interval/SecondInterval.ts","../../../time/main/interval/MillisecondInterval.ts","../../../time/main/interval/MillisecondsInterval.ts","../../../uri/main/UriException.ts","../../../uri/main/Uri.ts","../../../uri/main/UriScheme.ts","../../../uri/main/UriAuthority.ts","../../../uri/main/UriUser.ts","../../../uri/main/UriHost.ts","../../../uri/main/UriHostName.ts","../../../uri/main/UriHostIPv4.ts","../../../uri/main/UriHostIPv6.ts","../../../uri/main/UriHostUndefined.ts","../../../uri/main/UriPort.ts","../../../uri/main/UriPath.ts","../../../uri/main/UriPathSegment.ts","../../../uri/main/UriPathSlash.ts","../../../uri/main/UriPathEmpty.ts","../../../uri/main/UriPathBuilder.ts","../../../uri/main/UriQuery.ts","../../../uri/main/UriQueryParam.ts","../../../uri/main/UriQueryUndefined.ts","../../../uri/main/UriQueryBuilder.ts","../../../uri/main/UriFragment.ts","../../../uri/main/UriParser.ts","../../../uri/main/UriAbsoluteParser.ts","../../../uri/main/UriSchemeParser.ts","../../../uri/main/UriAuthorityParser.ts","../../../uri/main/UriUserParser.ts","../../../uri/main/UriHostParser.ts","../../../uri/main/UriHostAddressParser.ts","../../../uri/main/UriHostLiteralParser.ts","../../../uri/main/UriPortParser.ts","../../../uri/main/UriPathParser.ts","../../../uri/main/UriQueryParser.ts","../../../uri/main/UriFragmentParser.ts","../../../uri/main/UriForm.ts","../../../uri/main/UriCache.ts","../../../util/main/Any.ts","../../../streamlet/main/In.ts","../../../streamlet/main/Inout.ts","../../../streamlet/main/Out.ts","../../../streamlet/main/Streamlet.ts"],"names":["ByteOrder","String","prototype","codePointAt","Object","defineProperty","value","index","size","this","length","Number","c1","charCodeAt","c2","configurable","writable","offsetByCodePoints","count","NativeOrder","bom","ArrayBuffer","Uint16Array","b","Uint8Array","Error","nativeOrder","crypto","window","msCrypto","fillBytesCrypto","typedArray","getRandomValues","fillBytesMath","Int8Array","i","Math","round","random","Int16Array","Int32Array","Uint32Array","TypeError","Random","fillBytes","hashArrayBuffer","hashFloat64Array","Float64Array","hashInt32Array","rotl","distance","Murmur3","seed","constructor","name","toString","hash","mash","mix","undefined","mixUint8ArrayBE","code","array","offset","limit","word","mixUInt8ArrayLE","mixStringBE","string","k","n","utf8Length","c","mixStringLE","Objects","compare","x","y","Date","getTime","isNaN","compareTo","order","Array","isArray","compareArray","compareObject","p","q","min","xKeys","keys","yKeys","xKey","yKey","equal","equals","equalArray","equalObject","key","hashCode","hashArray","hashObject","h","Cursor","set","newValue","delete","empty","_empty","Empty","unary","Unary","extendStatics","d","setPrototypeOf","__proto__","hasOwnProperty","__extends","__","create","__spreadArrays","s","il","arguments","r","a","j","jl","CursorEmpty","_super","isEmpty","head","step","skip","hasNext","nextIndex","next","done","hasPrevious","previousIndex","previous","CursorUnary","_this","call","_value","_index","max","CursorArray","_array","_limit","AssertException","message","assert","condition","ok","notOk","lhs","rhs","notEqual","identity","notIdentity","compareLessThan","compareNotLessThan","compareLessThanOrEqual","compareNotLessThanOrEqual","compareEqual","compareNotEqual","compareGreaterThanOrEqual","compareNotGreaterThanOrEqual","compareGreaterThan","compareNotGreaterThan","Severity","level","label","_level","_label","isTrace","TRACE_LEVEL","isDebug","DEBUG_LEVEL","isInfo","INFO_LEVEL","isNote","NOTE_LEVEL","isWarning","WARNING_LEVEL","isError","ERROR_LEVEL","isAlert","ALERT_LEVEL","isFatal","FATAL_LEVEL","that","localeCompare","_hashSeed","trace","debug","info","note","warning","error","alert","fatal","_trace","_debug","_info","_note","_warning","_error","_alert","_fatal","HashGenCacheMap","_buckets","_gen4Hits","_gen3Hits","_gen2Hits","_gen1Hits","_misses","get","abs","bucket","gen4Key","_gen4Key","gen4Val","_gen4Val","_gen4Weight","gen3Key","_gen3Key","gen3Val","_gen3Val","_gen3Weight","HashGenCacheMapBucket","_gen2Key","_gen2Val","_gen2Weight","_gen1Key","_gen1Val","_gen1Weight","gen2Key","gen2Val","gen1Key","gen1Val","put","remove","clear","hits","hitRatio","gen4Weight","gen3Weight","gen2Weight","gen1Weight","HashGenCacheSet","HashGenCacheSetBucket","Mark","line","column","_offset","_line","_column","start","end","union","Tag","Span","from","_start","_end","shift","mark","at","display","output","Format","displayNumber","write","debugNumber","debugString","zero","_zero","tmp","InputException","OutputSettings","lineSeparator","isPretty","isStyled","_lineSeparator","_isPretty","_isStyled","copy","canEqual","standard","_standard","pretty","_pretty","styled","_styled","prettyStyled","_prettyStyled","fromAny","settings","OutputException","Output","writeln","object","flush","push","tokens","_i","trap","clone","full","_full","OutputFull","_done","OutputDone","OutputError","_settings","isCont","isFull","isDone","isPart","tokenOrString","bind","Input","id","InputSettings","InputEmpty","InputDone","InputError","_id","_mark","seek","StringInput","_string","_isPart","StringOutput","token","fromCharCode","u","concat","WriterException","Writer","feed","input","fork","asDone","asError","andThen","WriterAndThen","WriterDone","WriterError","_output","pull","tail","_head","_tail","StringWriter","_input","Unicode","stringInput","stringOutput","stringWriter","writeString","isAlpha","isSpace","isNewline","isWhitespace","notOutput","isFinite","floor","digits","debugChar","character","encodeHex","exports","module","require","os","EOL","prefix","precision","exponential","toExponential","exponentIndex","indexOf","exponent","slice","NaN","power","scaled","pow","trimTrailingZeros","toFixed","Prefixes","i1","i0","duration","millis","separator","DAY","weeks","days","hours","minutes","seconds","isStripped","_isStrict","stripped","_stripped","InputBuffer","_emptyBuffer","InputBufferEmpty","_doneBuffer","InputBufferDone","InputBufferError","capacity","remaining","has","OutputBuffer","_fullBuffer","OutputBufferFull","OutputBufferDone","OutputBufferError","OutputStyle","reset","bold","faint","black","red","green","yellow","blue","magenta","cyan","gray","blackBold","redBold","greenBold","yellowBold","blueBold","magentaBold","cyanBold","grayBold","Base10","isDigit","decodeDigit","encodeDigit","countDigits","integerParser","NumberParser","parseInteger","parse","decimalParser","parseDecimal","numberParser","parseNumber","integerWriter","IntegerWriter","writeInteger","Diagnostic","tag","severity","cause","_tag","_severity","_message","_cause","lineDigits","displayDiagnostic","source","unexpected","expected","contextLines","displayMessage","displayAnchor","displayContext","formatSeverity","displayLineLeadArrow","displayLineLead","displayCause","causeOrder","displayLineLeadEllipsis","displayLines","displayNote","startLine","endLine","consumeLineText","displayLine","displayLineComment","displaySingleLine","displayStartLine","displayEndLine","displayMidLine","displayLineLeadNumber","i_1","displayLineText","i_2","comment","displayLineLeadComment","padding","ParserException","diagnostic","Parser","ParserDone","ParserError","UtfErrorMode","isReplacement","replacementChar","UtfFatalErrorMode","fatalNonZero","_fatalNonZero","replacement","_replacement","UtfReplacementErrorMode","replacementNonZero","_replacementNonZero","isNonZero","_isNonZero","_replacementChar","Uint8ArrayOutput","buffer","ByteOutputUint8Array","toUint8Array","cloneArray","_size","ByteOutput","oldArray","newArray","expand","Binary","outputBuffer","uint8ArrayOutput","initialCapacity","Base16","alphabet","_alphabet","uint8ArrayWriter","writeUint8Array","width","writeIntegerLiteral","writeLiteral","lowercase","_lowercase","uppercase","_uppercase","writeQuantum","parser","parseUint8Array","Utf8DecodedOutput","errorMode","c3","have","_errorMode","_c1","_c2","_c3","_have","c4","invalid","Utf8EncodedOutput","_c4","Utf8","sizeOf","decodedOutput","encodedOutput","decodedString","Base10NumberParser","sign","mode","_sign","_mode","_step","Base10DecimalParser","Base10IntegerWriter","Base16Parser","_p","Base16Writer","base16","_base16","Base16IntegerWriter","_width","Base64","z","w","isPadded","Base64Standard","_standardUnpadded","url","_url","Base64Url","_urlUnpadded","_isPadded","Base64Parser","base64","_base64","_q","_r","Base64Writer","KeysCursor","cursor","_cursor","_a","ValuesCursor","NodeCursor","pages","pageIndex","pageCursor","_pages","_pageIndex","_pageCursor","page","pageSize","reversePageCursor","BTreeContext","pageShouldSplit","arity","pageSplitSize","pageShouldMerge","BTree","root","Page","getEntry","firstKey","entry","firstEntry","firstValue","lastKey","lastEntry","lastValue","nextKey","nextEntry","nextValue","previousKey","previousEntry","previousValue","oldRoot","newRoot","updated","balanced","removed","drop","lower","take","upper","cleared","reduced","accumulator","combiner","fold","forEach","callback","thisArg","values","entries","reverseKeys","reverseValues","reverseEntries","tree","BTreePage","Leaf","BTreeLeaf","slots","_slots","_fold","minKey","maxKey","lookup","updatedSlot","insertedSlot","oldSlots","newSlots","newLeaf","removedSlot","split","newPages","newLeftPage","splitLeft","newRightPage","splitRight","newKnots","newNode","slot","result","lo","hi","mid","knots","Node","BTreeNode","_knots","xx","oldPage","newPage","updatedPageSplit","updatedPage","oldKnots","newSize","oldPages","updatedPageMerge","midPages","midKnots","replacedPage","removedPage","newArity","BTreeNodeCursor","subCursor","STreeContext","identify","STree","RangeError","insert","inserted","newValues","pop","oldValue","unshift","move","fromIndex","toIndex","splice","deleteCount","deleted","STreePage","STreeLeaf","updatedItem","oldItems","oldSlot","insertedItem","STreeNode","subIndex","STreeNodeCursor","Interpolator","map","f","Map","between","interpolator","factories","_factories","factoryCount","factory","tryBetween","tryBetweenAny","Step","registerFactory","unregisterFactory","NumberInterpolator","y0","y1","dy","interpolate","deinterpolate","range","StepInterpolator","ArrayInterpolator","a0","a1","interpolatorCount","interpolators","InterpolatorInterpolator","i00","i11","InterpolatorMap","transform","Item","record","Record","updatedAttr","setAttr","setSlot","appended","items","apply","prepended","item","lt","Bool","absent","le","eq","ne","ge","gt","invoke","args","filter","predicate","selector","Selector","literal","evaluate","interpreter","substitute","cast","form","orElse","coerce","unit","precedence","iterator","extant","Extant","Absent","Value","globalScope","_globalScope","MathModule","scope","commit","Field","isDefined","isDistinct","toValue","target","flattened","unflattened","of","header","headers","body","getAttr","getSlot","getField","getItem","conditional","thenTerm","elseTerm","or","and","lambda","template","stringValue","numberValue","booleanValue","Text","Attr","Slot","field","$key","$value","IMMUTABLE","InterpreterException","InterpreterSettings","maxScopeDepth","_maxScopeDepth","Interpreter","scopeStack","scopeDepth","_scopeStack","_scopeDepth","peekScope","getScope","pushScope","newScopeStack","oldScopeStack","popScope","swapScope","newScope","oldScope","willOperate","operator","didOperate","willSelect","didSelect","willTransform","didTransform","objects","scopes","flags","_key","_flags","isConstant","setValue","updatedValue","bitwiseOr","Expression","BitwiseOrOperator","bitwiseXor","BitwiseXorOperator","bitwiseAnd","BitwiseAndOperator","plus","PlusOperator","minus","MinusOperator","times","TimesOperator","divide","DivideOperator","modulo","ModuloOperator","not","bitwiseNot","negative","positive","inverse","toAny","isAliased","isMutable","alias","branch","typeOrder","keyEquals","ValueBuilder","_record","pushField","pushValue","LtOperator","LeOperator","EqOperator","NeOperator","GeOperator","GtOperator","LambdaFunc","builder","Num","Data","wrap","fromArray","fromObject","RecordCursor","_lower","_upper","_direction","newItem","setItem","fieldCount","isObject","valueCount","member","modified","lastIndexOf","subRecord","attr","changed","oldItem","recordString","itemString","toArray","toObject","xs","ys","_hashCode","code_1","RecordMap","ALIASED","table","itemCount","_table","_itemCount","_fieldCount","RecordMapView","hashTable","setAliased","pushAliased","setMutable","updateMutable","pushMutable","field_1","setAttrAliased","setAttrMutable","updateAttrMutable","field_2","setSlotAliased","setSlotMutable","updateSlotMutable","field_3","setItemAliased","setItemMutable","newItems","m","spliceAliased","spliceMutable","deleteAliased","deleteMutable","_b","clearAliased","clearMutable","l","DataOutput","data","_data","addByte","getByte","setByte","setByteAliased","setByteMutable","addByteAliased","addByteMutable","addData","addUint8Array","addUint8ArrayAliased","addUint8ArrayMutable","asUint8Array","byteOffset","writeBase16","toBase16","writeBase64","toBase64","xn","yn","fromBase16","fromBase64","TextOutput","valueOf","text","cache","_cache","isInfinite","isUint32","UINT32","isUint64","UINT64","ceil","sqrt","positiveZero","_positiveZero","negativeZero","_negativeZero","positiveOne","_positiveOne","negativeOne","_negativeOne","nan","_nan","uint32","uint64","Infinity","num","TYPE_MASK","True","False","ConditionalOperator","OrOperator","AndOperator","NotOperator","BitwiseNotOperator","NegativeOperator","PositiveOperator","Operator","selected","forSelected","GetSelector","GetAttrSelector","GetItemSelector","children","descendants","FilterSelector","InvokeOperator","debugThen","_identity","_keys","KeysSelector","_values","ValuesSelector","_children","ChildrenSelector","_descendants","DescendantsSelector","LiteralSelector","Func","_extant","cond","_absent","FormException","Form","TagForm","UnitForm","forString","_stringForm","StringForm","forNumber","_numberForm","NumberForm","forBoolean","_booleanForm","BooleanForm","forAny","_anyForm","AnyForm","forItem","_itemForm","ItemForm","forValue","_valueForm","ValueForm","BinaryOperator","operand1","operand2","_operand1","_operand2","UnaryOperator","operand","_operand","ifTerm","_ifTerm","_thenTerm","_elseTerm","argument1","argument2","func","_func","_args","state","_state","setState","IdentitySelector","then","mapSelected","_then","accessor","oldField","child","oldKey","newKey","oldChild","newChild","_predicate","filterSelected","_item","bindings","_bindings","_template","params","binding","arg","BridgeFunc","_max","MaxFunc","_min","MinFunc","_abs","AbsFunc","_ceil","CeilFunc","_floor","FloorFunc","_round","RoundFunc","_sqrt","SqrtFunc","_pow","PowFunc","rate","_rate","RateFunc","_random","RandomFunc","_scope","period","v0","t0","now","dv","dt","t1","_form","mold","_unit","ValueCursor","ValueEntryCursor","keyForm","valueForm","_keyForm","pair","ItemInterpolator","AttrInterpolator","keyInterpolator","valueInterpolator","SlotInterpolator","f0","f1","ValueInterpolator","v1","v","RecordInterpolator","r0","r1","NumInterpolator","ConditionalOperatorInterpolator","e0","e1","ifTermInterpolator","thenTermInterpolator","elseTermInterpolator","BinaryOperatorInterpolator","operand1Interpolator","operand2Interpolator","UnaryOperatorInterpolator","operandInterpolator","InvokeOperatorInterpolator","funcInterpolator","argsInterpolator","KeyEffect","Inlet","is","inlet","bindInput","unbindInput","Outlet","outlet","outputIterator","bindOutput","unbindOutput","MemoizeValueCombinator","MapValueCombinator","WatchValueCombinator","MapInlet","decohereOutputKey","recohereOutputKey","MapOutlet","keyIterator","MemoizeMapCombinator","FilterFieldsCombinator","MapFieldValuesCombinator","ReduceFieldsCombinator","WatchFieldsCombinator","StreamletException","StreamletScope","streamletScope","streamletContext","AbstractInlet","_version","disconnectInputs","disconnectOutputs","decohereOutput","willDecohereOutput","onDecohereOutput","didDecohereOutput","recohereOutput","version","willRecohereOutput","recohereInput","onRecohereOutput","didRecohereOutput","AbstractOutlet","_outputs","oldOutputs","newOutputs","unbindOutputs","outputs","decohereInput","willDecohereInput","onDecohereInput","didDecohereInput","willRecohereInput","onRecohereInput","didRecohereInput","memoize","combinator","watch","AbstractInoutlet","decohere","willDecohere","onDecohere","didDecohere","recohere","willRecohere","onRecohere","didRecohere","KeyOutlet","AbstractMapInlet","_effects","effect","oldEffects","willDecohereOutputKey","onDecohereOutputKey","didDecohereOutputKey","willRecohereOutputKey","recohereInputKey","onRecohereOutputKey","didRecohereOutputKey","AbstractMapOutlet","_outlets","outlets","keyOutlet","decohereInputKey","willDecohereInputKey","onDecohereInputKey","didDecohereInputKey","willRecohereInputKey","onRecohereInputKey","didRecohereInputKey","reduce","AbstractMapInoutlet","decohereKey","willDecohereKey","onDecohereKey","didDecohereKey","recohereKey","willRecohereKey","onRecohereKey","didRecohereKey","AbstractMapInletOutlet","AbstractMapInletMapOutlet","_outputEffects","_inputEffects","oldOutputEffects","oldInputEffects","oldEffect","newEffect","OutletInlet","_outlet","OutletMapInlet","ValueInput","newState","oldState","ValueOutput","MapInput","MapOutput","FilterFieldsOperator","key_1","MapValueOperator","MapFieldValuesOperator","ReduceFieldsOperator","accumulate","combine","_accumulator","_combiner","WatchValueOperator","WatchFieldsOperator","StreamletInlet","streamlet","_streamlet","willDecohereInlet","didDecohereInlet","willRecohereInlet","didRecohereInlet","StreamletOutlet","getOutput","willDecohereOutlet","didDecohereOutlet","willRecohereOutlet","didRecohereOutlet","StreamletInoutlet","type","InoutletDescriptor","AbstractStreamlet","streamletClass","setStreamletScope","context","setStreamletContext","reflectInletKey","reflectOutletKey","inoutlet","onDecohereOutlets","onRecohereInlets","onRecohereOutlets","getInput","name_1","_inlets","inletDescriptor","InletDescriptor","reflectInletField","reflectInoutletField","name_2","outletDescriptor","OutletDescriptor","reflectOutletField","decohereOutlets","name_3","recohereInlets","name_4","recohereOutlets","name_5","reflectEachInlet","name_6","reflectEachOutlet","name_7","reflectInletCount","_","reflectOutletCount","reflectInletIndex","name_8","reflectOutletIndex","name_9","reflectValueInletField","reflectMapInletField","reflectValueOutletField","reflectMapOutletField","inoutletDescriptor","reflectValueInoutletField","reflectMapInoutletField","init","_inoutlets","decorateInlet","options","decorateOutlet","decorateInoutlet","RecordOutlet","Streamlet","Model","Scope","Dataflow","AbstractRecordOutlet","hasOwn","RecordStreamlet","compile","compileInlet","AbstractRecordStreamlet","castInput","coerceInput","RecordFieldUpdater","Reifier","system","RecordModel","_fieldUpdaters","bindValue","expr","fieldUpdater","valueInput","fieldUpdaters","materialize","materializeItem","materializeField","materializeValue","compileItem","compileField","compileValue","reify","reifier","reifyItem","model","RecordScope","GetOutlet","_keyInlet","_mapInlet","keyInlet","mapInlet","keyInput","mapInput","BinaryOutlet","_operand1Inlet","_operand2Inlet","operand1Inlet","operand2Inlet","operand1Input","operand2Input","UnaryOutlet","_operandInlet","operandInlet","operandInput","argument","ConditionalOutlet","_ifInlet","_thenInlet","_elseInlet","ifInlet","thenInlet","elseInlet","ifInput","thenInput","elseInput","OrOutlet","AndOutlet","BitwiseOrOutlet","BitwiseXorOutlet","BitwiseAndOutlet","LtOutlet","LeOutlet","EqOutlet","NeOutlet","GeOutlet","GtOutlet","PlusOutlet","MinusOutlet","TimesOutlet","DivideOutlet","ModuloOutlet","NotOutlet","BitwiseNotOutlet","NegativeOutlet","PositiveOutlet","InvokeOutlet","_funcInlet","_argsInlet","funcInlet","argsInlet","funcInput","argsInput","compileSelector","compileOperator","compileIdentitySelector","compileGetSelector","compileGetAttrSelector","compileGetItemSelector","compileKeysSelector","compileValuesSelector","compileChildrenSelector","compileDescendantsSelector","compileFilterSelector","getOutlet","compileConditionalOperator","compileBinaryOperator","compileUnaryOperator","compileInvokeOperator","ifOutlet","thenOutlet","elseOutlet","compileOrOperator","compileAndOperator","compileBitwiseOrOperator","compileBitwiseXorOperator","compileBitwiseAndOperator","compileLtOperator","compileLeOperator","compileEqOperator","compileNeOperator","compileGeOperator","compileGtOperator","compilePlusOperator","compileMinusOperator","compileTimesOperator","compileDivideOperator","compileModuloOperator","compileBinaryOutlet","operand1Outlet","operand2Outlet","compileNotOperator","compileBitwiseNotOperator","compileNegativeOperator","compilePositiveOperator","compileUnaryOutlet","operandOutlet","invokeOutlet","funcOutlet","argsOutlet","BlockParser","recon","keyParser","valueParser","_recon","_builder","_keyParser","_valueParser","block","Recon","isIdentStartChar","valueBuilder","parseBlockExpression","AttrParser","parseString","parseIdent","parseBlock","BlockItemParser","fieldParser","_fieldParser","parseAttr","recordBuilder","parseRecord","parseMarkup","parseData","parseSelector","InlineItemParser","RecordParser","MarkupParser","textOutput","_textOutput","parseInlineItem","DataParser","base64Parser","_base64Parser","dataOutput","IdentParser","isIdentChar","ident","StringParser","quote","_quote","_code","DecimalParser","HexadecimalParser","LambdaFuncParser","bindingsParser","templateParser","_bindingsParser","_templateParser","parseConditionalOperator","ConditionalOperatorParser","ifParser","thenParser","elseParser","_ifParser","_thenParser","_elseParser","parseOrOperator","OrOperatorParser","lhsParser","rhsParser","_lhsParser","_rhsParser","parseAndOperator","AndOperatorParser","parseBitwiseOrOperator","BitwiseOrOperatorParser","parseBitwiseXorOperator","BitwiseXorOperatorParser","parseBitwiseAndOperator","BitwiseAndOperatorParser","parseComparisonOperator","ComparisonOperatorParser","_operator","parseAttrExpression","AttrExpressionParser","parseAdditiveOperator","AdditiveOperatorParser","parseMultiplicativeOperator","MultiplicativeOperatorParser","parsePrefixOperator","PrefixOperatorParser","_operandParser","parseInvokeOperator","InvokeOperatorParser","exprParser","argsParser","_exprParser","_argsParser","parsePrimary","PrimaryParser","parseLiteral","LiteralParser","SelectorParser","_selector","ReconParser","parseBlockItem","parseLambdaFunc","blockParser","parseBlockString","parseNumberString","ReconStructureParser","bool","AttrWriter","part","_part","sizeOfValue","isExtant","sizeOfBlockValue","writeValue","writeBlockValue","SlotWriter","BlockWriter","inBlock","inMarkup","inBraces","inBrackets","first","markupSafe","_items","_inBlock","_inMarkup","_inBraces","_inBrackets","_first","_markupSafe","_next","isExpression","isAttr","sizeOfItem","isText","sizeOfMarkupText","sizeOfBlockItem","isRecord","isMarkupSafe","sizeOfBlock","isField","isBool","isValue","isIdent","isNum","sizeOfSlot","writeItem","writeMarkupText","writeBlockItem","writeBlock","writeSlot","PrimaryWriter","inParens","_inParens","MarkupTextWriter","escape","_text","_escape","DataWriter","IdentWriter","_ident","StringWriter$1","LambdaFuncWriter","sizeOfPrimary","writePrimary","ConditionalOperatorWriter","_precedence","InfixOperatorWriter","_lhs","_rhs","PrefixOperatorWriter","InvokeOperatorWriter","LiteralSelectorWriter","sizeOfThen","writeThen","GetSelectorWriter","GetAttrSelectorWriter","GetItemSelectorWriter","KeysSelectorWriter","ValuesSelectorWriter","ChildrenSelectorWriter","DescendantsSelectorWriter","FilterSelectorWriter","ReconWriter","sizeOfAttr","writeAttr","isBlockSafe","sizeOfRecord","writeRecord","sizeOfData","writeData","sizeOfText","writeText","sizeOfNum","writeNum","sizeOfUint32","writeUint32","sizeOfUint64","writeUint64","sizeOfBool","writeBool","sizeOfLambdaFunc","writeLambdaFunc","sizeOfConditionalOperator","writeConditionalOperator","sizeOfInfixOperator","writeInfixOperator","sizeOfPrefixOperator","writePrefixOperator","sizeOfInvokeOperator","writeInvokeOperator","sizeOfIdentitySelector","writeIdentitySelector","sizeOfThenIdentitySelector","writeThenIdentitySelector","sizeOfLiteralSelector","writeLiteralSelector","sizeOfThenLiteralSelector","writeThenLiteralSelector","sizeOfGetSelector","writeGetSelector","sizeOfThenGetSelector","writeThenGetSelector","sizeOfGetAttrSelector","writeGetAttrSelector","sizeOfThenGetAttrSelector","writeThenGetAttrSelector","sizeOfGetItemSelector","writeGetItemSelector","sizeOfThenGetItemSelector","writeThenGetItemSelector","sizeOfKeysSelector","writeKeysSelector","sizeOfThenKeysSelector","writeThenKeysSelector","sizeOfValuesSelector","writeValuesSelector","sizeOfThenValuesSelector","writeThenValuesSelector","sizeOfChildrenSelector","writeChildrenSelector","sizeOfThenChildrenSelector","writeThenChildrenSelector","sizeOfDescendantsSelector","writeDescendantsSelector","sizeOfThenDescendantsSelector","writeThenDescendantsSelector","sizeOfFilterSelector","writeFilterSelector","sizeOfThenFilterSelector","writeThenFilterSelector","sizeOfExtant","writeExtant","sizeOfAbsent","writeAbsent","ReconStructureWriter","isSlot","sizeOfSelector","sizeOfOperator","sizeOfFunc","writeSelector","writeOperator","writeFunc","structureParser","_structureParser","structureWriter","_structureWriter","toBlockString","toData","toBlockData","toRecon","toReconBlock","parseRecon","Shape","R2","isAny","shape","contains","intersects","R2Shape","Box","xMin","yMin","xMax","yMax","boundingBox","Point","isInit","fromInit","isTuple","fromTuple","Segment","Circle","VectorR2","_x","_y","opposite","scalar","PointR2","vector","transformX","transformY","origin","_origin","SegmentR2","x0","x1","_x0","_y0","_x1","_y1","containsPoint","containsSegment","intersectsPoint","intersectsSegment","ax","ay","bx","by","cx","cy","px","py","rx","ry","qx","qy","sx","sy","pqx","pqy","pqr","rs","rr","sr","t","CircleR2","_cx","_cy","dx","BoxR2","containsBox","containsCircle","dx0","dy0","dx1","dy1","r2","dxMin","_xMin","dyMin","_yMin","dxMax","_xMax","dyMax","_yMax","intersectsBox","intersectsCircle","unitX","unitY","dcx0","dcy0","dcx1","dcy1","uc","u0","u1","_hitY","_hitX","d0","d1","scale","R2ShapeInterpolator","PointR2Interpolator","p0","p1","dp","SegmentR2Interpolator","s0","s1","BoxR2Interpolator","CircleR2Interpolator","dcx","dcy","dr","TimeZone","_name","isUTC","isLocal","getTimezoneOffset","utc","_utc","local","_local","forOffset","forName","zone","fromValue","TimeZoneForm","DateTimeLocale","periods","weekdays","shortWeekdays","months","shortMonths","Periods","Weekdays","ShortWeekdays","Months","ShortMonths","DateTime","time","_time","_zone","year","month","day","hour","minute","second","millisecond","date","toUTCLocalDate","getUTCFullYear","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","fromUTCLocalDate","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","weekday","getUTCDay","toDate","format","iso8601","writeDate","current","UTC","positional","DateTimeParser","dateParser","DateTimeInterpolator","DateTimeForm","e","DateTimeSpecifiers","locale","specifiers","Y","DateTimeFormat","monthOfYear","B","shortMonth","dayOfMonth","A","shortWeekday","H","hour24","I","hour12","M","S","L","parseDate","parseDateTime","_year","Year","_monthOfYear","MonthOfYear","Month","_month","ShortMonth","_shortMonth","_dayOfMonth","DayOfMonth","Weekday","_weekday","ShortWeekday","_shortWeekday","_hour24","Hour24","_hour12","Hour12","Period","_period","_minute","Minute","_second","Second","_millisecond","Millisecond","pattern","Pattern","_iso8601","parseDateNumber","desc","minDigits","maxDigits","cont","parseDateString","writeDateNumber2","c0","writeDateNumber3","writeDateNumber4","YearFormat","YearParser","MonthOfYearFormat","MonthOfYearParser","MonthFormat","MonthParser","ShortMonthFormat","ShortMonthParser","DayOfMonthFormat","DayOfMonthParser","WeekdayFormat","WeekdayParser","ShortWeekdayFormat","ShortWeekdayParser","Hour24Format","Hour24Parser","Hour12Format","Hour12Parser","PeriodFormat","PeriodParser","MinuteFormat","MinuteParser","SecondFormat","SecondParser","MillisecondFormat","MillisecondParser","PatternFormat","charAt","PatternParser","TimeInterval","ds","Filter","every","week","_week","Week","_day","Day","_hour","Hour","years","milliseconds","UnitTimeInterval","FilterInterval","YearInterval","Years","YearsInterval","stride","MonthInterval","WeekInterval","DayInterval","HourInterval","dtz","MinuteInterval","SecondInterval","MillisecondInterval","Milliseconds","MillisecondsInterval","UriException","Uri","scheme","authority","path","query","fragment","_scheme","_authority","_path","_query","_fragment","Scheme","schemePart","schemeName","Authority","authorityPart","user","userPart","username","password","host","hostPart","hostAddress","hostName","address","hostIPv4","hostIPv6","port","portPart","portNumber","components","Path","pathPart","pathName","parentPath","parent","basePath","base","appendedPath","appendedSlash","appendedSegment","segment","prependedPath","prependedSlash","prependedSegment","Query","queryPart","updatedQuery","removedQuery","appendedQuery","prependedQuery","Fragment","fragmentPart","fragmentIdentifier","identifier","endpoint","resolve","relative","removeDotSegments","isAbsolute","merge","unresolve","absolute","unmerge","uri","number","standardParser","_standardParser","parseAbsoluteString","isUnreservedChar","isSubDelimChar","isSchemeChar","isUserInfoChar","isUserChar","isHostChar","isPathChar","isQueryChar","isParamChar","isFragmentChar","toLowerCase","writeScheme","writeUserInfo","userInfo","writeEncoded","writeUser","writeHost","writeHostLiteral","writePathSegment","writeQuery","writeParam","param","writeFragment","writePctEncoded","UriScheme","_undefined","parseSchemeString","UriAuthority","_user","_host","_port","User","_username","Host","ipv4","ipv6","Port","parseAuthorityString","UriUser","_password","parseUserString","UriHost","HostUndefined","HostName","HostIPv4","HostIPv6","parseHostString","UriHostName","_address","UriHostIPv4","UriHostIPv6","UriHostUndefined","UriPort","_number","parsePortString","UriPath","PathBuilder","addPath","addSegment","isRelative","foot","isSubpathOf","addSlash","slash","rest","prev","PathEmpty","_slash","PathSlash","cacheSegment","PathSegment","parsePathString","segmentCache","_segmentCache","pathForm","_pathForm","PathForm","UriPathSegment","setTail","dealias","UriPathSlash","UriPathEmpty","UriPathBuilder","_last","_aliased","component","aliased","last","xi","UriQuery","QueryBuilder","addParam","addQuery","add","QueryUndefined","cacheKey","QueryParam","parseQueryString","keyCache","_keyCache","UriQueryParam","UriQueryUndefined","UriQueryBuilder","value_1","UriFragment","_identifier","parseFragmentString","UriParser","pathEmpty","pathBuilder","queryBuilder","absoluteParser","AbsoluteParser","parseAbsolute","schemeParser","SchemeParser","parseScheme","authorityParser","AuthorityParser","parseAuthority","userParser","UserParser","parseUser","hostParser","HostParser","parseHost","hostAddressParser","HostAddressParser","parseHostAddress","hostLiteralParser","HostLiteralParser","parseHostLiteral","portParser","PortParser","parsePort","pathParser","PathParser","parsePath","queryParser","QueryParser","parseQuery","fragmentParser","FragmentParser","parseFragment","UriAbsoluteParser","look","UriSchemeParser","UriAuthorityParser","UriUserParser","usernameOutput","passwordOutput","UriHostParser","UriHostAddressParser","UriHostLiteralParser","UriPortParser","UriPathParser","UriQueryParser","keyOutput","valueOutput","UriFragmentParser","UriForm","UriCache","_base","_resolveCache","_unresolveCache"],"mappings":"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","file":"/Users/c9r/Swim/Code/swim-platform/swim-system-js/swim-core-js/@swim/core/dist/main/swim-core.min.js","sourcesContent":["// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Endianness of multi-byte datums.\n */\nexport const enum ByteOrder {\n  /**\n   * Most significant byte first.\n   */\n  BigEndian = \"BE\",\n  /**\n   * Least significant byte first.\n   */\n  LittleEndian = \"LE\",\n}\n\nfunction nativeOrder(): ByteOrder {\n  const bom = new ArrayBuffer(2);\n  new Uint16Array(bom)[0] = 0xfeff;\n  const b = new Uint8Array(bom);\n  if (b[0] === 0xfe && b[1] === 0xff) {\n    return ByteOrder.BigEndian;\n  } else if (b[0] === 0xff && b[1] === 0xfe) {\n    return ByteOrder.LittleEndian;\n  } else {\n    throw new Error();\n  }\n}\n\n/**\n * `ByteOrder` of the host machine.\n */\nexport const NativeOrder: ByteOrder = nativeOrder();\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nfunction codePointAt(this: String, index: number): number | undefined {\n  const size = this.length;\n  index = index ? Number(index) : 0; // Coerce to number.\n  if (index !== index) { // Convert NaN to zero.\n    index = 0;\n  }\n  if (index >= 0 && index < size) {\n    const c1 = this.charCodeAt(index);\n    if (c1 <= 0xd7ff || c1 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n      return c1;\n    } else if (c1 <= 0xdbff && index + 1 < size) {\n      const c2 = this.charCodeAt(index + 1);\n      if (c2 >= 0xdc00 && c2 <= 0xdfff) { // U+10000..U+10FFFF\n        return ((c1 & 0x03ff) << 10 + c2 & 0x03ff) + 0x10000;\n      }\n    }\n  }\n  return void 0;\n}\n\nfunction offsetByCodePoints(this: String, index: number, count: number): number {\n  if (count > 0) {\n    const size = this.length;\n    while (count > 0 && index < size) {\n      const c1 = this.charCodeAt(index);\n      if (c1 <= 0xd7ff || c1 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n        index += 1;\n      } else if (c1 <= 0xdbff && index + 1 < size) {\n        const c2 = this.charCodeAt(index + 1);\n        if (c2 >= 0xdc00 && c2 <= 0xdfff) { // U+10000..U+10FFFF\n          index += 2;\n        } else {\n          index += 1;\n        }\n      } else {\n        index += 1;\n      }\n      count -= 1;\n    }\n  } else if (count < 0) {\n    while (count < 0 && index > 0) {\n      const c2 = this.charCodeAt(index - 1);\n      if (c2 <= 0xd7ff || c2 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n        index -= 1;\n      } else if (c2 >= 0xdc00 && c2 <= 0xdfff && index - 1 > 0) {\n        const c1 = this.charCodeAt(index - 2);\n        if (c1 >= 0xd800 && c1 <= 0xdfff) { // U+10000..U+10FFFF\n          index -= 2;\n        } else {\n          index -= 1;\n        }\n      } else {\n        index -= 1;\n      }\n      count -= 1;\n    }\n  }\n  return index;\n}\n\nif (String.prototype.codePointAt === void 0) {\n  Object.defineProperty(String.prototype, \"codePointAt\", {\n    value: codePointAt,\n    configurable: true,\n    writable: true,\n  });\n}\n\nif (String.prototype.offsetByCodePoints === void 0) {\n  Object.defineProperty(String.prototype, \"offsetByCodePoints\", {\n    value: offsetByCodePoints,\n    configurable: true,\n    writable: true,\n  });\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @hidden */\nconst crypto = (typeof window !== \"undefined\" ? (window.crypto || (window as any).msCrypto) : void 0) as RandomSource | undefined;\n\n/** @hidden */\nfunction fillBytesCrypto(typedArray: Int8Array | Uint8Array\n                                   | Int16Array | Uint16Array\n                                   | Int32Array | Uint32Array): void {\n  crypto!.getRandomValues(typedArray);\n}\n\n/** @hidden */\nfunction fillBytesMath(typedArray: Int8Array | Uint8Array\n                                 | Int16Array | Uint16Array\n                                 | Int32Array | Uint32Array): void {\n  if (typedArray instanceof Int8Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = 128 - Math.round(Math.random() * 256);\n    }\n  } else if (typedArray instanceof Uint8Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = Math.round(Math.random() * 256);\n    }\n  } else if (typedArray instanceof Int16Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = 32768 - Math.round(Math.random() * 65536);\n    }\n  } else if (typedArray instanceof Uint16Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = Math.round(Math.random() * 65536);\n    }\n  } else if (typedArray instanceof Int32Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = 2147483648 - Math.round(Math.random() * 4294967296);\n    }\n  } else if (typedArray instanceof Uint32Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = Math.round(Math.random() * 4294967296);\n    }\n  } else {\n    throw new TypeError(\"\" + typedArray);\n  }\n}\n\n/** @hidden */\nexport class Random {\n  private constructor() {\n  }\n\n  static fillBytes = crypto !== void 0 ? fillBytesCrypto : fillBytesMath;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ByteOrder, NativeOrder} from \"./ByteOrder\";\n\nconst hashArrayBuffer = new ArrayBuffer(8);\nconst hashFloat64Array = new Float64Array(hashArrayBuffer);\nconst hashInt32Array = new Int32Array(hashArrayBuffer);\n\n/**\n * Left-rotates the bits in a 32-bit `value` by `distance` bits.\n */\nfunction rotl(value: number, distance: number): number {\n  return (value << distance) | (value >>> (32 - distance));\n}\n\n/**\n * 32-bit [MurmurHash](https://en.wikipedia.org/wiki/MurmurHash) algorithm,\n * version 3.\n */\nexport class Murmur3 {\n  private constructor() {\n  }\n\n  /**\n   * Returns the hash code of the name of a prototype object `value`, or for a\n   * primitive value.\n   */\n  static seed(value: object | string | number | boolean | null | undefined) {\n    if (typeof value === \"object\" && value !== null) {\n      if (value.constructor && typeof (value.constructor as any).name === \"string\") {\n        value = (value.constructor as any).name as string;\n      } else {\n        value = value.toString();\n      }\n    }\n    return Murmur3.hash(value as any);\n  }\n\n  /**\n   * Returns the hash code of a primitive `value`.\n   */\n  static hash(value: Uint8Array | string | number | boolean | null | undefined): number {\n    if (value instanceof Uint8Array || typeof value === \"string\") {\n      return Murmur3.mash(Murmur3.mix(0, value));\n    } else if (typeof value === \"number\") {\n      if (~~value === value) {\n        return ~~value;\n      }\n      hashFloat64Array[0] = value;\n      return hashInt32Array[0] ^ hashInt32Array[1];\n    } else if (typeof value === \"boolean\") {\n      return value ? 3 : 2;\n    } else if (value === null) {\n      return 1;\n    } else if (value === undefined) {\n      return 0;\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  /** @hidden */\n  static mixUint8ArrayBE(code: number, array: Uint8Array): number {\n    let offset = 0;\n    const limit = array.length;\n    while (offset + 3 < limit) {\n      const word = (array[offset    ] & 0xff) << 24 | (array[offset + 1] & 0xff) << 16\n                 | (array[offset + 2] & 0xff) <<  8 |  array[offset + 3] & 0xff;\n      code = Murmur3.mix(code, word);\n      offset += 4;\n    }\n    if (offset < limit) {\n      let word = (array[offset] & 0xff) << 24;\n      if (offset + 1 < limit) {\n        word |= (array[offset + 1] & 0xff) << 16;\n        if (offset + 2 < limit) {\n          word |= (array[offset + 2] & 0xff) << 8;\n          //assert offset + 3 === limit;\n        }\n      }\n      word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      word = rotl(word, 15);\n      word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= word;\n    }\n    return code ^ limit;\n  }\n  /** @hidden */\n  static mixUInt8ArrayLE(code: number, array: Uint8Array): number {\n    let offset = 0;\n    const limit = array.length;\n    while (offset + 3 < limit) {\n      const word =  array[offset    ] & 0xff        | (array[offset + 1] & 0xff) <<  8\n                 | (array[offset + 2] & 0xff) << 16 | (array[offset + 3] & 0xff) << 24;\n      code = Murmur3.mix(code, word);\n      offset += 4;\n    }\n    if (offset < limit) {\n      let word = array[offset] & 0xff;\n      if (offset + 1 < limit) {\n        word |= (array[offset + 1] & 0xff) << 8;\n        if (offset + 2 < limit) {\n          word |= (array[offset + 2] & 0xff) << 16;\n          //assert offset + 3 === limit;\n        }\n      }\n      word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      word = rotl(word, 15);\n      word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= word;\n    }\n    return code ^ limit;\n  }\n\n  /** @hidden */\n  static mixStringBE(code: number, string: string): number {\n    let word = 0;\n    let k = 32;\n    let i = 0;\n    const n = string.length;\n    let utf8Length = 0;\n    while (i < n) {\n      let c = string.codePointAt(i);\n      if (c === void 0) {\n        c = string.charCodeAt(i);\n      }\n      if (c >= 0 && c <= 0x7f) { // U+0000..U+007F\n        k -= 8;\n        word |= c << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 1;\n      } else if (c >= 0x80 && c <= 0x7ff) { // U+0080..U+07FF\n        k -= 8;\n        word |= (0xc0 | (c >>> 6)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | (c & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 2;\n      } else if (c >= 0x0800 && c <= 0xffff || // U+0800..U+D7FF\n                 c >= 0xe000 && c <= 0xffff) { // U+E000..U+FFFF\n        k -= 8;\n        word |= (0xe0 | (c  >>> 12)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | (c & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 3;\n      } else if (c >= 0x10000 && c <= 0x10ffff) { // U+10000..U+10FFFF\n        k -= 8;\n        word |= (0xf0 | (c  >>> 18)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | ((c >>> 12) & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | (c & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 4;\n      } else { // surrogate or invalid code point\n        k -= 8;\n        word |= 0xef << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= 0xbf << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= 0xbd << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 3;\n      }\n      i = string.offsetByCodePoints(i, 1);\n    }\n    if (k !== 32) {\n      word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      word = rotl(word, 15);\n      word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= word;\n    }\n    return code ^ utf8Length;\n  }\n  /** @hidden */\n  static mixStringLE(code: number, string: string): number {\n    let word = 0;\n    let k = 0;\n    let i = 0;\n    const n = string.length;\n    let utf8Length = 0;\n    while (i < n) {\n      let c = string.codePointAt(i);\n      if (c === void 0) {\n        c = string.charCodeAt(i);\n      }\n      if (c >= 0 && c <= 0x7f) { // U+0000..U+007F\n        word |= c << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 1;\n      } else if (c >= 0x80 && c <= 0x7ff) { // U+0080..U+07FF\n        word |= (0xc0 | (c >>> 6)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | (c & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 2;\n      } else if (c >= 0x0800 && c <= 0xffff || // U+0800..U+D7FF\n                 c >= 0xe000 && c <= 0xffff) { // U+E000..U+FFFF\n        word |= (0xe0 | (c  >>> 12)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | (c & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 3;\n      } else if (c >= 0x10000 && c <= 0x10ffff) { // U+10000..U+10FFFF\n        word |= (0xf0 | (c  >>> 18)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | ((c >>> 12) & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | (c & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 4;\n      } else { // surrogate or invalid code point\n        word |= 0xef << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= 0xbf << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= 0xbd << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 3;\n      }\n      i = string.offsetByCodePoints(i, 1);\n    }\n    if (k !== 32) {\n      word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      word = rotl(word, 15);\n      word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= word;\n    }\n    return code ^ utf8Length;\n  }\n\n  /**\n   * Mixes a new hash `value` into the accumulated hash `code`.  If {@code\n   * value} is an array; mixes each consecutive 4-byte word in the into the\n   * accumulated hash `code`.  If {@code value} is a string, mixes each\n   * consecutive 4-byte word in its UTF-8 encoding into the accumulated hash\n   * {@code code}.\n   */\n  static mix(code: number, value: number | string | Uint8Array): number {\n    if (typeof value === \"number\") {\n      value = ((value & 0xffff) * 0xcc9e2d51) + (((value >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      value = rotl(value, 15);\n      value = ((value & 0xffff) * 0x1b873593) + (((value >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= value;\n      code = rotl(code, 13);\n      code = ((code & 0xffff) * 5) + (((code >>> 16) * 5 & 0xffff) << 16) & 0xffffffff;\n      code = ((code & 0xffff) + 0x6b64) + (((code >>> 16) + 0xe654 & 0xffff) << 16);\n      return code;\n    } else if (typeof value === \"string\") {\n      if (NativeOrder === ByteOrder.BigEndian) {\n        return Murmur3.mixStringBE(code, value);\n      } else if (NativeOrder === ByteOrder.LittleEndian) {\n        return Murmur3.mixStringLE(code, value);\n      }\n    } else if (value instanceof Uint8Array) {\n      if (NativeOrder === ByteOrder.BigEndian) {\n        return Murmur3.mixUint8ArrayBE(code, value);\n      } else if (NativeOrder === ByteOrder.LittleEndian) {\n        return Murmur3.mixUInt8ArrayLE(code, value);\n      }\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /**\n   * Finalizes a hash `code`.\n   */\n  static mash(code: number): number {\n    code ^= code >>> 16;\n    code = ((code & 0xffff) * 0x85ebca6b) + (((code >>> 16) * 0x85ebca6b & 0xffff) << 16) & 0xffffffff;\n    code ^= code >>> 13;\n    code = ((code & 0xffff) * 0xc2b2ae35) + (((code >>> 16) * 0xc2b2ae35 & 0xffff) << 16) & 0xffffffff;\n    code ^= code >>> 16;\n    return code >>> 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable} from \"./Comparable\";\nimport {Equals} from \"./Equals\";\nimport {HashCode} from \"./HashCode\";\nimport {Murmur3} from \"./Murmur3\";\n\n/**\n * Utilities for comparing, equating, and hashing structural values.\n * A structural value is typed by object structure, rather than by name.\n */\nexport class Objects {\n  private constructor() {\n  }\n\n  /**\n   * Returns the relative order of two structural values.  Returns `-1` if `x`\n   * orders before `y`; returns `1` if `x` orders after `y`; returns `0` if `x`\n   * and `y` are equivalent; and returns `NaN` if `x` is not comparable to `y`.\n   */\n  static compare(x: unknown, y: unknown): 0 | 1 | -1 {\n    if (x instanceof Date) {\n      x = x.getTime();\n    }\n    if (y instanceof Date) {\n      y = y.getTime();\n    }\n\n    if (x === void 0) {\n      if (y === void 0) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else if (x === null) {\n      if (y === void 0) {\n        return -1;\n      } else if (y === null) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else if (typeof x === \"number\") {\n      if (y === void 0 || y === null) {\n        return -1;\n      } else if (typeof y === \"number\") {\n        return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n      } else {\n        return 1;\n      }\n    } else if (typeof x === \"string\") {\n      if (y === void 0 || y === null || typeof y === \"number\") {\n        return -1;\n      } else if (typeof y === \"string\") {\n        return x < y ? -1 : x > y ? 1 : 0;\n      } else {\n        return 1;\n      }\n    } else if (typeof x === \"object\" && typeof (x as any).compareTo === \"function\") {\n      const order = (x as Comparable<any>).compareTo(y);\n      return order < 0 ? -1 : order > 0 ? 1 : 0;\n    } else if (Array.isArray(x)) {\n      if (y === void 0 || y === null || typeof y === \"number\" || typeof y === \"string\") {\n        return -1;\n      } else if (Array.isArray(y)) {\n        return Objects.compareArray(x, y);\n      } else {\n        return 1;\n      }\n    } else {\n      if (y === void 0 || y === null || typeof y === \"number\" || typeof y === \"string\" || Array.isArray(y)) {\n        return -1;\n      } else {\n        return Objects.compareObject(x as any, y as any);\n      }\n    }\n  }\n\n  /**\n   * Returns the relative order of two arrays of structural values.  Returns\n   * `-1` if `x` orders before `y`; returns `1` if `x` orders after `y`;\n   * returns `0` if `x` and `y` are equivalent; and returns `NaN` if `x` is not\n   * comparable to `y`.\n   */\n  static compareArray(x: ReadonlyArray<any>, y: ReadonlyArray<any>): 0 | 1 | -1 {\n    const p = x.length as number;\n    const q = y.length as number;\n    let order = 0 as 0 | 1 | -1;\n    for (let i = 0, n = Math.min(p, q); i < n && order === 0; i += 1) {\n      order = Objects.compare(x[i], y[i]);\n    }\n    return order !== 0 ? order : p > q ? 1 : p < q ? -1 : 0;\n  }\n\n  /**\n   * Returns the relative order of two structural objects.  Returns `-1` if `x`\n   * orders before `y`; returns `1` if `x` orders after `y`; returns `0` if `x`\n   * and `y` are equivalent; and returns `NaN` if `x` is not comparable to `y`.\n   */\n  static compareObject(x: Object, y: Object): 0 | 1 | -1 {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    const p = xKeys.length;\n    const q = yKeys.length;\n    const n = Math.min(p, q);\n    let order = 0 as 0 | 1 | -1;\n    for (let i = 0; i < n && order === 0; i += 1) {\n      const xKey = xKeys[i];\n      const yKey = yKeys[i];\n      order = Objects.compare(xKey, yKey);\n      if (order === 0) {\n        order = Objects.compare((x as any)[xKey], (y as any)[yKey]);\n      }\n    }\n    return order !== 0 ? order : p > q ? 1 : p < q ? -1 : 0;\n  }\n\n  /**\n   * Compares two structural values for equality.  Returns `true` if `x` and\n   * `y` are structurally equal, otherwise returns `false`.\n   */\n  static equal(x: unknown, y: unknown): boolean {\n    if (x instanceof Date) {\n      x = x.getTime();\n    }\n    if (y instanceof Date) {\n      y = y.getTime();\n    }\n\n    if (x === y) {\n      return true;\n    } else if (typeof x === \"number\") {\n      if (typeof y === \"number\") {\n        return isNaN(x) && isNaN(y);\n      }\n    } else if (typeof x === \"object\" && x !== null && typeof (x as any).equals === \"function\") {\n      return (x as Equals).equals(y);\n    } else if (Array.isArray(x)) {\n      if (Array.isArray(y)) {\n        return Objects.equalArray(x, y);\n      }\n    } else if (typeof x === \"object\" && x !== null) {\n      if (typeof y === \"object\" && y !== null) {\n        return Objects.equalObject(x, y);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Compares two arrays of structural values for equality.  Returns `true` if\n   * `x` and `y` are structurally equal, otherwise returns `false`.\n   */\n  static equalArray(x: ReadonlyArray<any>, y: ReadonlyArray<any>): boolean {\n    const n = x.length;\n    if (n !== y.length) {\n      return false;\n    }\n    for (let i = 0; i < n; i += 1) {\n      if (!Objects.equal(x[i], y[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Compares two structural objects for equality.  Returns `true` if `x` and\n   * `y` are structurally equal, otherwise returns `false`.\n   */\n  static equalObject(x: Object, y: Object): boolean {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    const n = xKeys.length;\n    if (n !== yKeys.length) {\n      return false;\n    }\n    for (let i = 0; i < n; i += 1) {\n      const key = xKeys[i];\n      if (key !== yKeys[i] || !Objects.equal((x as any)[key], (y as any)[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns a hash code for a structural value.\n   */\n  static hash(x: unknown): number {\n    if (x === void 0 || x === null || typeof x === \"boolean\"\n        || typeof x === \"number\" || typeof x === \"string\") {\n      return Murmur3.hash(x as any);\n    } else if (typeof x === \"object\" && typeof (x as any).hashCode === \"function\") {\n      return (x as HashCode).hashCode();\n    } else if (Array.isArray(x)) {\n      return Objects.hashArray(x);\n    } else if (typeof x === \"object\") {\n      return Objects.hashObject(x as any);\n    } else {\n      throw new TypeError(\"\" + x);\n    }\n  }\n\n  /**\n   * Returns a hash code for an array of structural values.\n   */\n  static hashArray(x: ReadonlyArray<any>): number {\n    let h = 0;\n    const n = x.length;\n    for (let i = 0; i < n; i += 1) {\n      h = Murmur3.mix(h, Objects.hash(x[i]));\n    }\n    return Murmur3.mash(h);\n  }\n\n  /**\n   * Returns a hash code for a structural object.\n   */\n  static hashObject(x: Object): number {\n    let h = 0;\n    const keys = Object.keys(x);\n    const n = keys.length;\n    for (let i = 0; i < n; i += 1) {\n      const key = keys[i];\n      h = Murmur3.mix(Murmur3.mix(h, Murmur3.hash(key)), (x as any)[key]);\n    }\n    return Murmur3.mash(h);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator} from \"./Iterator\";\nimport {CursorEmpty} from \"./CursorEmpty\";\nimport {CursorUnary} from \"./CursorUnary\";\nimport {CursorArray} from \"./CursorArray\";\n\nexport abstract class Cursor<T> implements Iterator<T> {\n  abstract isEmpty(): boolean;\n\n  abstract head(): T;\n\n  abstract step(): void;\n\n  abstract skip(count: number): void;\n\n  abstract hasNext(): boolean;\n\n  abstract nextIndex(): number;\n\n  abstract next(): {value?: T, done: boolean};\n\n  abstract hasPrevious(): boolean;\n\n  abstract previousIndex(): number;\n\n  abstract previous(): {value?: T, done: boolean};\n\n  set(newValue: T): void {\n    throw new Error(\"immutable\");\n  }\n\n  delete(): void {\n    throw new Error(\"immutable\");\n  }\n\n  private static _empty?: Cursor<any>;\n  static empty<T>(): Cursor<T> {\n    if (Cursor._empty === void 0) {\n      Cursor._empty = new Cursor.Empty();\n    }\n    return Cursor._empty;\n  }\n\n  static unary<T>(value: T): Cursor<T> {\n    return new Cursor.Unary<T>(value);\n  }\n\n  static array<T>(array: ReadonlyArray<T>, index: number = 0, limit: number = array.length): Cursor<T> {\n    return new Cursor.Array<T>(array, index, limit);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Empty: typeof CursorEmpty; // defined by CursorEmpty\n  /** @hidden */\n  static Unary: typeof CursorUnary; // defined by CursorUnary\n  /** @hidden */\n  static Array: typeof CursorArray; // defined by CursorArray\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorEmpty extends Cursor<any> {\n  isEmpty(): boolean {\n    return true;\n  }\n\n  head(): any {\n    throw new Error(\"empty\");\n  }\n\n  step(): void {\n    throw new Error(\"empty\");\n  }\n\n  skip(count: number): void {\n    // nop\n  }\n\n  hasNext(): boolean {\n    return false;\n  }\n\n  nextIndex(): number {\n    return 0;\n  }\n\n  next(): {value?: any, done: boolean} {\n    return {done: true};\n  }\n\n  hasPrevious(): boolean {\n    return false;\n  }\n\n  previousIndex(): number {\n    return -1;\n  }\n\n  previous(): {value?: any, done: boolean} {\n    return {done: true};\n  }\n}\nCursor.Empty = CursorEmpty;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorUnary<T> extends Cursor<T> {\n  private readonly _value: T;\n  private _index: number;\n\n  constructor(value: T) {\n    super();\n    this._value = value;\n    this._index = 0;\n  }\n\n  isEmpty(): boolean {\n    return this._index !== 0;\n  }\n\n  head(): T {\n    if (this._index === 0) {\n      return this._value;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  step(): void {\n    if (this._index === 0) {\n      this._index = 1;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  skip(count: number): void {\n    this._index = Math.min(Math.max(0, this._index + count), 1);\n  }\n\n  hasNext(): boolean {\n    return this._index === 0;\n  }\n\n  nextIndex(): number {\n    return this._index;\n  }\n\n  next(): {value?: T, done: boolean} {\n    if (this._index === 0) {\n      this._index = 1;\n      return {value: this._value, done: true};\n    } else {\n      return {done: true};\n    }\n  }\n\n  hasPrevious(): boolean {\n    return this._index === 1;\n  }\n\n  previousIndex(): number {\n    return this._index - 1;\n  }\n\n  previous(): {value?: T, done: boolean} {\n    if (this._index === 1) {\n      this._index = 0;\n      return {value: this._value, done: true};\n    } else {\n      return {done: true};\n    }\n  }\n}\nCursor.Unary = CursorUnary;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorArray<T> extends Cursor<T> {\n  private readonly _array: ReadonlyArray<T>;\n  private _index: number;\n  private _limit: number;\n\n  constructor(array: ReadonlyArray<T>, index: number, limit: number) {\n    super();\n    this._array = array;\n    this._index = index;\n    this._limit = limit;\n  }\n\n  isEmpty(): boolean {\n    return this._index >= this._limit;\n  }\n\n  head(): T {\n    if (this._index < this._limit) {\n      return this._array[this._index];\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  step(): void {\n    if (this._index < this._limit) {\n      this._index = 1;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  skip(count: number): void {\n    this._index = Math.min(this._index + count, this._limit);\n  }\n\n  hasNext(): boolean {\n    return this._index < this._limit;\n  }\n\n  nextIndex(): number {\n    return this._index;\n  }\n\n  next(): {value?: T, done: boolean} {\n    const index = this._index;\n    if (index < this._limit) {\n      this._index = index + 1;\n      return {value: this._array[index], done: this._index === this._limit};\n    } else {\n      this._index = this._limit;\n      return {done: true};\n    }\n  }\n\n  hasPrevious(): boolean {\n    return this._index > 0;\n  }\n\n  previousIndex(): number {\n    return this._index - 1;\n  }\n\n  previous(): {value?: T, done: boolean} {\n    const index = this._index - 1;\n    if (index >= 0) {\n      this._index = index;\n      return {value: this._array[index], done: index === 0};\n    } else {\n      this._index = 0;\n      return {done: true};\n    }\n  }\n}\nCursor.Array = CursorArray;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Exception thrown when an [[Assert]] fails.\n */\nexport class AssertException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = AssertException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"./Objects\";\nimport {AssertException} from \"./AssertException\";\n\n/**\n * Type that implements common assertion functions.\n */\nexport interface Assert {\n  /**\n   * Asserts that `condition` is truthy.\n   *\n   * @throws [[AssertException]] with `message` if `condition` is falsy.\n   */\n  ok(condition: unknown, message?: string): void;\n\n  /**\n   * Asserts that `condition` is falsy.\n   *\n   * @throws [[AssertException]] with `message` if `condition` is truthy.\n   */\n  notOk(condition: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is [[Objects.equal structurally equal]] to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is not structurally equal to `rhs`.\n   */\n  equal(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is not [[Objects.equal structurally equal]] to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is structurally equal to `rhs`.\n   */\n  notEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is identical (`===`) to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is not identical (`!==`) to `rhs`.\n   */\n  identity(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is not identical (`!==`) to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is identical (`===`) to `rhs`.\n   */\n  notIdentity(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders before]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before `rhs`.\n   */\n  compareLessThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order before]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before `rhs`.\n   */\n  compareNotLessThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders before or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before or the same as `rhs`.\n   */\n  compareLessThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order before or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before or the same as `rhs`.\n   */\n  compareNotLessThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before or the same as `rhs`.\n   */\n  compareEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before or the same as `rhs`.\n   */\n  compareNotEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders after or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order after or the same as `rhs`.\n   */\n  compareGreaterThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order after or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order after or the same as `rhs`.\n   */\n  compareNotGreaterThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders after]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order after `rhs`.\n   */\n  compareGreaterThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order after]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order after `rhs`.\n   */\n  compareNotGreaterThan(lhs: unknown, rhs: unknown, message?: string): void;\n}\n\n/**\n * General `Assert` implementation.  When called as a function, asserts that\n * `condition` is truthy.\n *\n * @throws [[AssertException]] with `message` if `condition` is falsy.\n */\nexport const assert = function (condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new AssertException(message);\n  }\n} as Assert & ((condition: unknown, message?: string) => void);\n\nassert.ok = function (condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notOk = function (condition: unknown, message?: string): void {\n  if (condition) {\n    throw new AssertException(message);\n  }\n};\n\nassert.equal = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!Objects.equal(lhs, rhs)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.equal(lhs, rhs)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.identity = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (lhs !== rhs) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notIdentity = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (lhs === rhs) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareLessThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) < 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotLessThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) < 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareLessThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) <= 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotLessThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) <= 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) === 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) === 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareGreaterThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) >= 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotGreaterThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) >= 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareGreaterThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) > 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotGreaterThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) > 0) {\n    throw new AssertException(message);\n  }\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable} from \"./Comparable\";\nimport {HashCode} from \"./HashCode\";\nimport {Murmur3} from \"./Murmur3\";\n\n/**\n * Level of importance.  Used for log levels and diagnostic classifications.\n */\nexport class Severity implements Comparable<Severity>, HashCode {\n  /** @hidden */\n  readonly _level: number;\n  /** @hidden */\n  readonly _label: string;\n\n  private constructor(level: number, label: string) {\n    this._level = level;\n    this._label = label;\n  }\n\n  /**\n   * Returns the integer level of importance of this `Severity`, with higher\n   * levels signifying greater importance.\n   *\n   * @return an integer between `0` and `7`, inclusive.  One of `TRACE_LEVEL`,\n   *         `DEBUG_LEVEL`, `INFO_LEVEL`, `NOTE_LEVEL`, `WARNING_LEVEL`,\n   *         `ERROR_LEVEL`, `ALERT_LEVEL`, `FATAL_LEVEL`.\n   */\n  level(): number {\n    return this._level;\n  }\n\n  /**\n   * Returns a descriptive label for this `Severity`.\n   */\n  label(): string;\n\n  /**\n   * Returns a new `Severity` with the same level as this `Severity`, but with\n   * a new descriptive `label`.\n   */\n  label(label: string): Severity;\n\n  label(label?: string): string | Severity {\n    if (label === void 0) {\n      return this._label;\n    } else {\n      return Severity.create(this._level, label);\n    }\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `TRACE_LEVEL` of importance.\n   */\n  isTrace(): boolean {\n    return this._level === Severity.TRACE_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `DEBUG_LEVEL` of importance.\n   */\n  isDebug(): boolean {\n    return this._level === Severity.DEBUG_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `INFO_LEVEL` of importance.\n   */\n  isInfo(): boolean {\n    return this._level === Severity.INFO_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `NOTE_LEVEL` of importance.\n   */\n  isNote(): boolean {\n    return this._level === Severity.NOTE_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `WARNING_LEVEL` of importance.\n   */\n  isWarning(): boolean {\n    return this._level === Severity.WARNING_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `ERROR_LEVEL` of importance.\n   */\n  isError(): boolean {\n    return this._level === Severity.ERROR_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `ALERT_LEVEL` of importance.\n   */\n  isAlert(): boolean {\n    return this._level === Severity.ALERT_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `FATAL_LEVEL` of importance.\n   */\n  isFatal(): boolean {\n    return this._level === Severity.FATAL_LEVEL;\n  }\n\n  compareTo(that: Severity): number {\n    if (this === that) {\n      return 0;\n    } else if (this._level < that._level) {\n      return -1;\n    } else if (this._level > that._level) {\n      return 1;\n    } else {\n      return this._label.localeCompare(that._label);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Severity) {\n      return this._level === that._level && this._label === that._label;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Severity._hashSeed === void 0) {\n      Severity._hashSeed = Murmur3.seed(Severity);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Severity._hashSeed,\n        this._level), Murmur3.hash(this._label)));\n  }\n\n  toString(): string {\n    return this._label;\n  }\n\n  static readonly TRACE_LEVEL: number = 0;\n  static readonly DEBUG_LEVEL: number = 1;\n  static readonly INFO_LEVEL: number = 2;\n  static readonly NOTE_LEVEL: number = 3;\n  static readonly WARNING_LEVEL: number = 4;\n  static readonly ERROR_LEVEL: number = 5;\n  static readonly ALERT_LEVEL: number = 6;\n  static readonly FATAL_LEVEL: number = 7;\n\n  private static _hashSeed?: number;\n  private static _trace?: Severity;\n  private static _debug?: Severity;\n  private static _info?: Severity;\n  private static _note?: Severity;\n  private static _warning?: Severity;\n  private static _error?: Severity;\n  private static _alert?: Severity;\n  private static _fatal?: Severity;\n\n  /**\n   * Returns a `Severity` with the given importance `level`, and optional\n   * descriptive `label`.\n   *\n   * @throws `Error` if `level` is not a valid level of importance.\n   */\n  static create(level: number, label?: string): Severity {\n    switch (level) {\n      case Severity.TRACE_LEVEL: return Severity.trace(label);\n      case Severity.DEBUG_LEVEL: return Severity.debug(label);\n      case Severity.INFO_LEVEL: return Severity.info(label);\n      case Severity.NOTE_LEVEL: return Severity.note(label);\n      case Severity.WARNING_LEVEL: return Severity.warning(label);\n      case Severity.ERROR_LEVEL: return Severity.error(label);\n      case Severity.ALERT_LEVEL: return Severity.alert(label);\n      case Severity.FATAL_LEVEL: return Severity.fatal(label);\n      default: throw new Error(\"\" + level);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `TRACE_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static trace(label: string = \"trace\"): Severity {\n    if (label === \"trace\") {\n      if (Severity._trace === void 0) {\n        Severity._trace = new Severity(Severity.TRACE_LEVEL, label);\n      }\n      return Severity._trace;\n    } else {\n      return new Severity(Severity.TRACE_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `DEBUG_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static debug(label: string = \"debug\"): Severity {\n    if (label === \"debug\") {\n      if (Severity._debug === void 0) {\n        Severity._debug = new Severity(Severity.DEBUG_LEVEL, label);\n      }\n      return Severity._debug;\n    } else {\n      return new Severity(Severity.DEBUG_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `INFO_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static info(label: string = \"info\"): Severity {\n    if (label === \"info\") {\n      if (Severity._info === void 0) {\n        Severity._info = new Severity(Severity.INFO_LEVEL, label);\n      }\n      return Severity._info;\n    } else {\n      return new Severity(Severity.INFO_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `NOTE_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static note(label: string = \"note\"): Severity {\n    if (label === \"note\") {\n      if (Severity._note === void 0) {\n        Severity._note = new Severity(Severity.NOTE_LEVEL, label);\n      }\n      return Severity._note;\n    } else {\n      return new Severity(Severity.NOTE_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `WARNING_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static warning(label: string = \"warning\"): Severity {\n    if (label === \"warning\") {\n      if (Severity._warning === void 0) {\n        Severity._warning = new Severity(Severity.WARNING_LEVEL, label);\n      }\n      return Severity._warning;\n    } else {\n      return new Severity(Severity.WARNING_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `ERROR_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static error(label: string = \"error\"): Severity {\n    if (label === \"error\") {\n      if (Severity._error === void 0) {\n        Severity._error = new Severity(Severity.ERROR_LEVEL, label);\n      }\n      return Severity._error;\n    } else {\n      return new Severity(Severity.ERROR_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `ALERT_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static alert(label: string = \"alert\"): Severity {\n    if (label === \"alert\") {\n      if (Severity._alert === void 0) {\n        Severity._alert = new Severity(Severity.ALERT_LEVEL, label);\n      }\n      return Severity._alert;\n    } else {\n      return new Severity(Severity.ALERT_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `FATAL_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static fatal(label: string = \"fatal\"): Severity {\n    if (label === \"fatal\") {\n      if (Severity._fatal === void 0) {\n        Severity._fatal = new Severity(Severity.FATAL_LEVEL, label);\n      }\n      return Severity._fatal;\n    } else {\n      return new Severity(Severity.FATAL_LEVEL, label);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"./Objects\";\n\n/**\n * A hashed generational cache map discards the least recently used value\n * with the worst hit rate per hash bucket.  HashGenCacheMap is a concurrent\n * and lock-free LRFU cache, with O(1) access time.\n *\n * Maintaining four \"generations\" of cached values per hash bucket, the cache\n * discards from the younger generations based on least recent usage, and\n * promotes younger generations to older generations based on most frequent\n * usage.  Cache misses count as negative usage of the older generations,\n * biasing the cache against least recently used values with poor hit rates.\n */\nexport class HashGenCacheMap<K, V> {\n  /** @hidden */\n  readonly _buckets: Array<HashGenCacheMapBucket<K, V> | undefined>;\n  /** @hidden */\n  _gen4Hits: number;\n  /** @hidden */\n  _gen3Hits: number;\n  /** @hidden */\n  _gen2Hits: number;\n  /** @hidden */\n  _gen1Hits: number;\n  /** @hidden */\n  _misses: number;\n\n  constructor(size: number) {\n    this._buckets = new Array(size);\n    this._gen4Hits = 0;\n    this._gen3Hits = 0;\n    this._gen2Hits = 0;\n    this._gen1Hits = 0;\n    this._misses = 0;\n  }\n\n  get(key: K): V | undefined {\n    if (this._buckets.length === 0) {\n      return void 0;\n    }\n    const index = Math.abs(Objects.hash(key)) % this._buckets.length;\n    const bucket = this._buckets[index];\n    if (bucket === void 0) {\n      return void 0;\n    }\n\n    const gen4Key = bucket._gen4Key;\n    if (gen4Key !== void 0 && Objects.equal(key, gen4Key)) {\n      const gen4Val = bucket._gen4Val;\n      if (gen4Val !== void 0) {\n        this._gen4Hits += 1;\n        bucket._gen4Weight++;\n        return gen4Val;\n      } else {\n        bucket._gen4Key = void 0;\n      }\n    }\n\n    const gen3Key = bucket._gen3Key;\n    if (gen3Key !== void 0 && Objects.equal(key, gen3Key)) {\n      const gen3Val = bucket._gen3Val;\n      if (gen3Val !== void 0) {\n        this._gen3Hits += 1;\n        if (bucket._gen3Weight++ > bucket._gen4Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight);\n        }\n        return gen3Val;\n      } else {\n        bucket._gen3Key = void 0;\n      }\n    }\n\n    const gen2Key = bucket._gen2Key;\n    if (gen2Key !== void 0 && Objects.equal(key, gen2Key)) {\n      const gen2Val = bucket._gen2Val;\n      if (gen2Val !== void 0) {\n        this._gen2Hits += 1;\n        if (bucket._gen2Weight++ > bucket._gen3Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight);\n        }\n        return gen2Val;\n      } else {\n        bucket._gen2Key = void 0;\n      }\n    }\n\n    const gen1Key = bucket._gen1Key;\n    if (gen1Key !== void 0 && Objects.equal(key, gen1Key)) {\n      const gen1Val = bucket._gen1Val;\n      if (gen1Val !== void 0) {\n        this._gen1Hits += 1;\n        if (bucket._gen1Weight++ > bucket._gen2Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight);\n        }\n        return gen1Val;\n      } else {\n        bucket._gen1Key = void 0;\n      }\n    }\n\n    this._misses += 1;\n    return void 0;\n  }\n\n  put(key: K, value: V): V {\n    if (this._buckets.length === 0) {\n      return value;\n    }\n    const index = Math.abs(Objects.hash(key)) % this._buckets.length;\n    const bucket = this._buckets[index] || new HashGenCacheMapBucket();\n\n    let gen4Key = bucket._gen4Key;\n    if (gen4Key !== void 0 && Objects.equal(key, gen4Key)) {\n      const gen4Val = bucket._gen4Val;\n      if (gen4Val !== void 0) {\n        this._gen4Hits += 1;\n        bucket._gen4Weight++;\n        return gen4Val;\n      } else {\n        bucket._gen4Key = void 0;\n        gen4Key = void 0;\n      }\n    }\n\n    let gen3Key = bucket._gen3Key;\n    if (gen3Key !== void 0 && Objects.equal(key, gen3Key)) {\n      const gen3Val = bucket._gen3Val;\n      if (gen3Val !== void 0) {\n        this._gen3Hits += 1;\n        if (bucket._gen3Weight++ > bucket._gen4Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight);\n        }\n        return gen3Val;\n      } else {\n        bucket._gen3Key = void 0;\n        gen3Key = void 0;\n      }\n    }\n\n    let gen2Key = bucket._gen2Key;\n    if (gen2Key !== void 0 && Objects.equal(key, gen2Key)) {\n      const gen2Val = bucket._gen2Val;\n      if (gen2Val !== void 0) {\n        this._gen2Hits += 1;\n        if (bucket._gen2Weight++ > bucket._gen3Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight);\n        }\n        return gen2Val;\n      } else {\n        bucket._gen2Key = void 0;\n        gen2Key = void 0;\n      }\n    }\n\n    let gen1Key = bucket._gen1Key;\n    if (gen1Key !== void 0 && Objects.equal(key, gen1Key)) {\n      const gen1Val = bucket._gen1Val;\n      if (gen1Val !== void 0) {\n        this._gen1Hits += 1;\n        if (bucket._gen1Weight++ > bucket._gen2Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight);\n        }\n        return gen1Val;\n      } else {\n        bucket._gen1Key = void 0;\n        gen1Key = void 0;\n      }\n    }\n\n    this._misses += 1;\n    if (gen4Key === void 0) {\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          key, value, 1);\n    } else if (gen3Key === void 0) {\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          key, value, 1);\n    } else if (gen2Key === void 0) {\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          key, value, 1);\n    } else if (gen1Key === void 0) {\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          key, value, 1);\n    } else {\n      // Penalize older gens for thrash. Promote gen1 to prevent nacent gens\n      // from flip-flopping. If sacrificed gen2 was worth keeping, it likely\n      // would have already been promoted.\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight - 1,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight - 1,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          key, value, 1);\n    }\n\n    return value;\n  }\n\n  remove(key: K): V | undefined {\n    if (this._buckets.length === 0) {\n      return void 0;\n    }\n    const index = Math.abs(Objects.hash(key)) % this._buckets.length;\n    const bucket = this._buckets[index];\n    if (bucket === void 0) {\n      return void 0;\n    }\n\n    const gen4Key = bucket._gen4Key;\n    if (gen4Key !== void 0 && Objects.equal(key, gen4Key)) {\n      const gen4Val = bucket._gen4Val;\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          void 0, void 0, 0);\n      return gen4Val;\n    }\n\n    const gen3Key = bucket._gen3Key;\n    if (gen3Key !== void 0 && Objects.equal(key, gen3Key)) {\n      const gen3Val = bucket._gen3Val;\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          void 0, void 0, 0);\n      return gen3Val;\n    }\n\n    const gen2Key = bucket._gen2Key;\n    if (gen2Key !== void 0 && Objects.equal(key, gen2Key)) {\n      const gen2Val = bucket._gen2Val;\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          void 0, void 0, 0);\n      return gen2Val;\n    }\n\n    const gen1Key = bucket._gen1Key;\n    if (gen1Key !== void 0 && Objects.equal(key, gen1Key)) {\n      const gen1Val = bucket._gen1Val;\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          void 0, void 0, 0);\n      return gen1Val;\n    }\n\n    return void 0;\n  }\n\n  clear(): void {\n    for (let i = 0; i < this._buckets.length; i += 1) {\n      this._buckets[i] = void 0;\n    }\n  }\n\n  /** @hidden */\n  hits(): number {\n    return this._gen4Hits + this._gen3Hits + this._gen2Hits + this._gen1Hits;\n  }\n\n  hitRatio(): number {\n    const hits = this.hits();\n    return hits / (hits + this._misses);\n  }\n}\n\n/** @hidden */\nexport class HashGenCacheMapBucket<K, V> {\n  /** @hidden */\n  _gen4Key: K | undefined;\n  /** @hidden */\n  _gen4Val: V | undefined;\n  /** @hidden */\n  _gen4Weight: number;\n  /** @hidden */\n  _gen3Key: K | undefined;\n  /** @hidden */\n  _gen3Val: V | undefined;\n  /** @hidden */\n  _gen3Weight: number;\n  /** @hidden */\n  _gen2Key: K | undefined;\n  /** @hidden */\n  _gen2Val: V | undefined;\n  /** @hidden */\n  _gen2Weight: number;\n  /** @hidden */\n  _gen1Key: K | undefined;\n  /** @hidden */\n  _gen1Val: V | undefined;\n  /** @hidden */\n  _gen1Weight: number;\n\n  constructor(gen4Key?: K, gen4Val?: V, gen4Weight: number = 0,\n              gen3Key?: K, gen3Val?: V, gen3Weight: number = 0,\n              gen2Key?: K, gen2Val?: V, gen2Weight: number = 0,\n              gen1Key?: K, gen1Val?: V, gen1Weight: number = 0) {\n    this._gen4Key = gen4Key;\n    this._gen4Val = gen4Val;\n    this._gen4Weight = gen4Weight;\n    this._gen3Key = gen3Key;\n    this._gen3Val = gen3Val;\n    this._gen3Weight = gen3Weight;\n    this._gen2Key = gen2Key;\n    this._gen2Val = gen2Val;\n    this._gen2Weight = gen2Weight;\n    this._gen1Key = gen1Key;\n    this._gen1Val = gen1Val;\n    this._gen1Weight = gen1Weight;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"./Objects\";\n\n/**\n * A hashed generational cache set discards the least recently used value\n * with the worst hit rate per hash bucket.  HashGenCacheSet is a concurrent\n * and lock-free LRFU cache, with O(1) access time.\n *\n * Maintaining four \"generations\" of cached values per hash bucket, the cache\n * discards from the younger generations based on least recent usage, and\n * promotes younger generations to older generations based on most frequent\n * usage.  Cache misses count as negative usage of the older generations,\n * biasing the cache against least recently used values with poor hit rates.\n *\n * The cache soft references the older generations, and weak references the\n * younger generations; the garbage collector can reclaim the entire cache,\n * but will preferentially wipe the younger cache generations before the older\n * cache generations.\n */\nexport class HashGenCacheSet<T> {\n  readonly _buckets: Array<HashGenCacheSetBucket<T> | undefined>;\n  _gen4Hits: number;\n  _gen3Hits: number;\n  _gen2Hits: number;\n  _gen1Hits: number;\n  _misses: number;\n\n  constructor(size: number) {\n    this._buckets = new Array(size);\n    this._gen4Hits = 0;\n    this._gen3Hits = 0;\n    this._gen2Hits = 0;\n    this._gen1Hits = 0;\n    this._misses = 0;\n  }\n\n  put(value: T): T {\n    if (this._buckets.length === 0) {\n      return value;\n    }\n    const index = Math.abs(Objects.hash(value)) % this._buckets.length;\n    const bucket = this._buckets[index] || new HashGenCacheSetBucket<T>();\n\n    const gen4Val = bucket._gen4Val;\n    if (gen4Val !== void 0 && Objects.equal(value, gen4Val)) {\n      this._gen4Hits += 1;\n      bucket._gen4Weight++;\n      return gen4Val;\n    }\n\n    const gen3Val = bucket._gen3Val;\n    if (gen3Val !== void 0 && Objects.equal(value, gen3Val)) {\n      this._gen3Hits += 1;\n      if (bucket._gen3Weight++ > bucket._gen4Weight) {\n        this._buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket._gen3Val, bucket._gen3Weight,\n            bucket._gen4Val, bucket._gen4Weight,\n            bucket._gen2Val, bucket._gen2Weight,\n            bucket._gen1Val, bucket._gen1Weight);\n      }\n      return gen3Val;\n    }\n\n    const gen2Val = bucket._gen2Val;\n    if (gen2Val !== void 0 && Objects.equal(value, gen2Val)) {\n      this._gen2Hits += 1;\n      if (bucket._gen2Weight++ > bucket._gen3Weight) {\n        this._buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket._gen4Val, bucket._gen4Weight,\n            bucket._gen2Val, bucket._gen2Weight,\n            bucket._gen3Val, bucket._gen3Weight,\n            bucket._gen1Val, bucket._gen1Weight);\n      }\n      return gen2Val;\n    }\n\n    const gen1Val = bucket._gen1Val;\n    if (gen1Val !== void 0 && Objects.equal(value, gen1Val)) {\n      this._gen1Hits += 1;\n      if (bucket._gen1Weight++ > bucket._gen2Weight) {\n        this._buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket._gen4Val, bucket._gen4Weight,\n            bucket._gen3Val, bucket._gen3Weight,\n            bucket._gen1Val, bucket._gen1Weight,\n            bucket._gen2Val, bucket._gen2Weight);\n      }\n      return gen1Val;\n    }\n\n    this._misses += 1;\n    if (gen4Val === void 0) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          value, 1);\n    } else if (gen3Val === void 0) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          value, 1);\n    } else if (gen2Val === void 0) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          value, 1);\n    } else if (gen1Val === void 0) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          value, 1);\n    } else {\n      // Penalize older gens for thrash. Promote gen1 to prevent nacent gens\n      // from flip-flopping. If sacrificed gen2 was worth keeping, it likely\n      // would have already been promoted.\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight - 1,\n          bucket._gen3Val, bucket._gen3Weight - 1,\n          bucket._gen1Val, bucket._gen1Weight,\n          value, 1);\n    }\n\n    return value;\n  }\n\n  remove(value: T): boolean {\n    if (this._buckets.length === 0) {\n      return false;\n    }\n    const index = Math.abs(Objects.hash(value)) % this._buckets.length;\n    const bucket = this._buckets[index];\n    if (bucket === void 0) {\n      return false;\n    }\n\n    const gen4Val = bucket._gen4Val;\n    if (gen4Val !== void 0 && Objects.equal(value, gen4Val)) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen3Val = bucket._gen3Val;\n    if (gen3Val !== void 0 && Objects.equal(value, gen3Val)) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen2Val = bucket._gen2Val;\n    if (gen2Val !== void 0 && Objects.equal(value, gen2Val)) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen1Val = bucket._gen1Val;\n    if (gen1Val !== void 0 && Objects.equal(value, gen1Val)) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          void 0, 0);\n      return true;\n    }\n\n    return false;\n  }\n\n  clear(): void {\n    for (let i = 0; i < this._buckets.length; i += 1) {\n      this._buckets[i] = void 0;\n    }\n  }\n\n  /** @hidden */\n  hits(): number {\n    return this._gen4Hits + this._gen3Hits + this._gen2Hits + this._gen1Hits;\n  }\n\n  hitRatio(): number {\n    const hits = this.hits();\n    return hits / (hits + this._misses);\n  }\n}\n\n/** @hidden */\nexport class HashGenCacheSetBucket<T> {\n  /** @hidden */\n  _gen4Val: T | undefined;\n  /** @hidden */\n  _gen4Weight: number;\n  /** @hidden */\n  _gen3Val: T | undefined;\n  /** @hidden */\n  _gen3Weight: number;\n  /** @hidden */\n  _gen2Val: T | undefined;\n  /** @hidden */\n  _gen2Weight: number;\n  /** @hidden */\n  _gen1Val: T | undefined;\n  /** @hidden */\n  _gen1Weight: number;\n\n  constructor(gen4Val?: T, gen4Weight: number = 0,\n              gen3Val?: T, gen3Weight: number = 0,\n              gen2Val?: T, gen2Weight: number = 0,\n              gen1Val?: T, gen1Weight: number = 0) {\n    this._gen4Val = gen4Val;\n    this._gen4Weight = gen4Weight;\n    this._gen3Val = gen3Val;\n    this._gen3Weight = gen3Weight;\n    this._gen2Val = gen2Val;\n    this._gen2Weight = gen2Weight;\n    this._gen1Val = gen1Val;\n    this._gen1Weight = gen1Weight;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode} from \"@swim/util\";\nimport {Mark} from \"./Mark\";\nimport {Span} from \"./Span\";\nimport {Output} from \"./Output\";\nimport {Display} from \"./Display\";\nimport {Debug} from \"./Debug\";\nimport {Format} from \"./Format\";\n\n/**\n * Description of a source location.  Tags are used to annotate input sources,\n * particularly for [[Diagnostic diagnostic]] purposes.  A [[Mark]] tag\n * annotates a source position.  A [[Span]] tag annotate a source range.\n *\n * @see [[Diagnostic]]\n */\nexport abstract class Tag implements Display, Debug, HashCode {\n  /**\n   * Returns the first source position covered by this `Tag`.\n   */\n  abstract start(): Mark;\n\n  /**\n   * Returns the last source position covered by this `Tag`.\n   */\n  abstract end(): Mark;\n\n  /**\n   * Returns a `Tag` that includes all source locations covered by\n   * both this tag, and `that` tag.\n   */\n  abstract union(that: Tag): Tag;\n\n  /**\n   * Returns the position of this `Tag` relative to the given `mark`.\n   */\n  abstract shift(mark: Mark): Tag;\n\n  abstract display(output: Output): void;\n\n  abstract debug(output: Output): void;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  // Forward type declarations\n  /** @hidden */\n  static Mark: typeof Mark; // defined by Mark\n  /** @hidden */\n  static Span: typeof Span; // defined by Span\n  /** @hidden */\n  static Format: typeof Format; // defined by Format\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"@swim/util\";\nimport {Tag} from \"./Tag\";\nimport {Output} from \"./Output\";\n\n/**\n * Description of a source position, identified by byte offset, line, and\n * column number, with an optional note.\n */\nexport class Mark extends Tag {\n  /** @hidden */\n  readonly _offset: number;\n  /** @hidden */\n  readonly _line: number;\n  /** @hidden */\n  readonly _column: number;\n  /** @hidden */\n  readonly _note: string | null;\n\n  /** @hidden */\n  constructor(offset: number, line: number, column: number, note: string | null) {\n    super();\n    this._offset = offset;\n    this._line = line;\n    this._column = column;\n    this._note = note;\n  }\n\n  /**\n   * Returns the zero-based byte offset of this position.\n   */\n  offset(): number {\n    return this._offset;\n  }\n\n  /**\n   * Returns the one-based line number of this position.\n   */\n  line(): number {\n    return this._line;\n  }\n\n  /**\n   * Returns the one-based column number of this position.\n   */\n  column(): number {\n    return this._column;\n  }\n\n  /**\n   * Returns the note attached to the marked position, or `null` if this\n   * position has no attached note.\n   */\n  note(): string | null {\n    return this._note;\n  }\n\n  /**\n   * Returns `this` position, if its byte offset is less than or equal to\n   * `that` position; otherwise returns `that` position.\n   */\n  min(that: Mark): Mark {\n    if (this._offset <= that._offset) {\n      return this;\n    } else {\n      return that;\n    }\n  }\n\n  /**\n   * Returns `this` position, if its byte offset is greater than or equal to\n   * `that` position; otherwise returns `that` position.\n   */\n  max(that: Mark): Mark {\n    if (this._offset >= that._offset) {\n      return this;\n    } else {\n      return that;\n    }\n  }\n\n  start(): Mark {\n    return this;\n  }\n\n  end(): Mark {\n    return this;\n  }\n\n  union(that: Tag): Tag {\n    if (that instanceof Mark) {\n      if (this._offset === that._offset && this._line === that._line\n          && this._column === that._column) {\n        return this;\n      } else {\n        return Tag.Span.from(this, that);\n      }\n    } else if (that instanceof Tag.Span) {\n      const start = this.min(that._start);\n      const end = this.max(that._end);\n      if (start === that._start && end === that._end) {\n        return that;\n      } else {\n        return Tag.Span.from(start, end);\n      }\n    }\n    throw new Error(that.toString());\n  }\n\n  shift(mark: Mark): Mark {\n    const offset = this._offset + (this._offset - mark._offset);\n    const line = this._line + (this._line - mark._line);\n    let column = this._column;\n    if (line === 1) {\n      column += (this._column - mark._column);\n    }\n    if (offset === this._offset && line === this._line && column === this._column) {\n      return this;\n    } else {\n      return Mark.at(offset, line, column, this._note);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Mark) {\n      return this._offset === that._offset && this._line === that._line\n          && this._column === that._column && this._note === that._note;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Mark._hashSeed === void 0) {\n      Mark._hashSeed = Murmur3.seed(Mark);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Mark._hashSeed,\n        this._offset), this._line), this._column), Murmur3.hash(this._note)));\n  }\n\n  display(output: Output): void {\n    Tag.Format.displayNumber(this._line, output);\n    output = output.write(58/*':'*/);\n    Tag.Format.displayNumber(this._column, output);\n    if (this._note !== null) {\n      output = output.write(58/*':'*/).write(32/*' '*/).write(this._note);\n    }\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Mark\").write(\".\").write(\"at\").write(\"(\");\n    Tag.Format.debugNumber(this._offset, output);\n    output = output.write(\", \");\n    Tag.Format.debugNumber(this._line, output);\n    output = output.write(\", \");\n    Tag.Format.debugNumber(this._column, output);\n    if (this._note !== null) {\n      output = output.write(\", \");\n      Tag.Format.debugString(this._note, output);\n    }\n    output = output.write(\")\");\n  }\n\n  toString(): string {\n    return Tag.Format.display(this);\n  }\n\n  private static _hashSeed?: number;\n  private static _zero?: Mark;\n\n  /**\n   * Returns a `Mark` at byte offset `0`, line `1`, and column `1`, with no\n   * attached note.\n   */\n  static zero(): Mark {\n    if (Mark._zero === void 0) {\n      Mark._zero = new Mark(0, 1, 1, null);\n    }\n    return Mark._zero;\n  }\n\n  /**\n   * Returns a new `Mark` at the given zero-based byte `offset`, one-based\n   * `line` number, and one-based `column` number, with an optionally attached\n   * `note`.\n   */\n  static at(offset: number, line: number, column: number, note: string | null = null): Mark {\n    return new Mark(offset, line, column, note);\n  }\n}\nTag.Mark = Mark;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"@swim/util\";\nimport {Tag} from \"./Tag\";\nimport {Mark} from \"./Mark\";\nimport {Output} from \"./Output\";\n\n/**\n * Description of a source range, identified by a closed interval between start\n * and end [[Mark marks]].\n */\nexport class Span extends Tag {\n  /** @hidden */\n  readonly _start: Mark;\n  /** @hidden */\n  readonly _end: Mark;\n\n  /** @hidden */\n  constructor(start: Mark, end: Mark) {\n    super();\n    this._start = start;\n    this._end = end;\n  }\n\n  start(): Mark {\n    return this._start;\n  }\n\n  end(): Mark {\n    return this._end;\n  }\n\n  union(that: Tag): Tag {\n    if (that instanceof Tag.Mark) {\n      const start = this._start.min(that);\n      const end = this._end.max(that);\n      if (start === this._start && end === this._end) {\n        return this;\n      } else {\n        return Span.from(start, end);\n      }\n    } else if (that instanceof Span) {\n      const start = this._start.min(that._start);\n      const end = this._end.max(that._end);\n      if (start === this._start && end === this._end) {\n        return this;\n      } else {\n        return Span.from(start, end);\n      }\n    }\n    throw new Error(that.toString());\n  }\n\n  shift(mark: Mark): Span {\n    const start = this._start.shift(mark);\n    const end = this._end.shift(mark);\n    if (start === this._start && end === this._end) {\n      return this;\n    } else {\n      return Span.from(start, end);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Span) {\n      return this._start.equals(that._start) && this._end.equals(that._end);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Span._hashSeed === void 0) {\n      Span._hashSeed = Murmur3.seed(Span);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Span._hashSeed,\n        this._start.hashCode()), this._end.hashCode()));\n  }\n\n  display(output: Output): void {\n    if (this._start._note !== null) {\n      output = output.write(this._start._note).write(58/*':'*/).write(32/*' '*/);\n    }\n    Tag.Format.displayNumber(this._start._line, output);\n    output = output.write(58/*':'*/);\n    Tag.Format.displayNumber(this._start._column, output);\n    output = output.write(45/*'-'*/);\n    Tag.Format.displayNumber(this._end._line, output);\n    output = output.write(58/*':'*/);\n    Tag.Format.displayNumber(this._end._column, output);\n    if (this._end._note !== null) {\n      output = output.write(58/*':'*/).write(32/*' '*/).write(this._end._note);\n    }\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Span\").write(\".\").write(\"from\").write(\"(\");\n    this._start.debug(output);\n    output = output.write(\", \");\n    this._end.debug(output);\n    output = output.write(\")\");\n  }\n\n  toString(): string {\n    return Tag.Format.display(this);\n  }\n\n  private static _hashSeed?: number;\n\n  /**\n   * Returns a new `Span` representing the closed interval between the given\n   * `start` and `end` marks.\n   */\n  static from(start: Mark, end: Mark): Span {\n    if (start._offset > end._offset) {\n      const tmp = start;\n      start = end;\n      end = tmp;\n    }\n    return new Span(start, end);\n  }\n}\nTag.Span = Span;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when reading invalid [[Input]].\n */\nexport class InputException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = InputException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output} from \"./Output\";\nimport {Format} from \"./Format\";\nimport {Debug} from \"./Debug\";\n\n/**\n * Either an [[OutputSettings]] instance, or an [[OutputSettingsInit]] object\n * initializer.\n */\nexport type AnyOutputSettings = OutputSettings | OutputSettingsInit;\n\n/**\n * [[OutputSettings]] object initializer.\n */\nexport interface OutputSettingsInit {\n  lineSeparator?: string | null;\n  isPretty?: boolean;\n  isStyled?: boolean;\n}\n\n/**\n * [[Output]] production parameters.  `OutputSettings` provide contextual\n * configuration parameters to output producers, such as [[Writer Writers]].\n * Uses include enabling pretty printing and styling generated output.\n * Subclasses can provide additional parameters understood by specialized\n * output producers.\n */\nexport class OutputSettings implements Debug, HashCode {\n  /** @hidden */\n  readonly _lineSeparator: string;\n  /** @hidden */\n  readonly _isPretty: boolean;\n  /** @hidden */\n  readonly _isStyled: boolean;\n\n  protected constructor(lineSeparator: string, isPretty: boolean, isStyled: boolean) {\n    this._lineSeparator = lineSeparator;\n    this._isPretty = isPretty;\n    this._isStyled = isStyled;\n  }\n\n  /**\n   * Returns the code point sequence used to separate lines of text.\n   * Defaults to the operating system's line separator.\n   */\n  lineSeparator(): string;\n\n  /**\n   * Returns a copy of these settings with the given `lineSeparator`.\n   */\n  lineSeparator(lineSeparator: string | null): OutputSettings;\n\n  lineSeparator(lineSeparator?: string | null): string | OutputSettings {\n    if (lineSeparator === void 0) {\n      return this._lineSeparator;\n    } else {\n      return this.copy(lineSeparator, this._isPretty, this._isStyled);\n    }\n  }\n\n  /**\n   * Returns `true` if output producers should pretty print their output,\n   * when possible.\n   */\n  isPretty(): boolean;\n\n  /**\n   * Returns a copy of these settings with the given `isPretty` flag.\n   */\n  isPretty(isPretty: boolean): OutputSettings;\n\n  isPretty(isPretty?: boolean): boolean | OutputSettings {\n    if (isPretty === void 0) {\n      return this._isPretty;\n    } else {\n      return this.copy(this._lineSeparator, isPretty, this._isStyled);\n    }\n  }\n\n  /**\n   * Returns `true` if output producers should style their output,\n   * when possible.\n   */\n  isStyled(): boolean;\n\n  /**\n   * Returns a copy of these settings with the given `isStyled` flag.\n   */\n  isStyled(isStyled: boolean): OutputSettings;\n\n  isStyled(isStyled?: boolean): boolean | OutputSettings {\n    if (isStyled === void 0) {\n      return this._isStyled;\n    } else {\n      return this.copy(this._lineSeparator, this._isPretty, isStyled);\n    }\n  }\n\n  protected copy(lineSeparator: string | null, isPretty: boolean, isStyled: boolean): OutputSettings {\n    return OutputSettings.create(lineSeparator, isPretty, isStyled);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof OutputSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof OutputSettings) {\n      return that.canEqual(this) && this._lineSeparator === that._lineSeparator\n          && this._isPretty === that._isPretty && this._isStyled === that._isStyled;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (OutputSettings._hashSeed === void 0) {\n      OutputSettings._hashSeed = Murmur3.seed(OutputSettings);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(OutputSettings._hashSeed,\n        Murmur3.hash(this._lineSeparator)), Murmur3.hash(this._isPretty)),\n        Murmur3.hash(this._isStyled)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"OutputSettings\").write(46/*'.'*/);\n    if (!this._isPretty && !this._isStyled) {\n      output = output.write(\"standard\");\n    } else if (this._isPretty && !this._isStyled) {\n      output = output.write(\"pretty\");\n    } else if (!this._isPretty && this._isStyled) {\n      output = output.write(\"styled\");\n    } else {\n      output = output.write(\"prettyStyled\");\n    }\n    output = output.write(40/*'('*/).write(41/*')'*/);\n    if (Format.lineSeparator() !== this._lineSeparator) {\n      output = output.write(46/*'.'*/).write(\"lineSeparator\").write(40/*'('*/)\n          .display(this._lineSeparator).write(41/*')'*/);\n    }\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n  private static _standard?: OutputSettings;\n  private static _pretty?: OutputSettings;\n  private static _styled?: OutputSettings;\n  private static _prettyStyled?: OutputSettings;\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing disabled, and styling disabled.\n   */\n  static standard(): OutputSettings {\n    if (OutputSettings._standard === void 0) {\n      OutputSettings._standard = new OutputSettings(Format.lineSeparator(), false, false);\n    }\n    return OutputSettings._standard;\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing enabled, and styling disabled.\n   */\n  static pretty(): OutputSettings {\n    if (OutputSettings._pretty === void 0) {\n      OutputSettings._pretty = new OutputSettings(Format.lineSeparator(), true, false);\n    }\n    return OutputSettings._pretty;\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing disabled, and styling enabled.\n   */\n  static styled(): OutputSettings {\n    if (OutputSettings._styled === void 0) {\n      OutputSettings._styled = new OutputSettings(Format.lineSeparator(), false, true);\n    }\n    return OutputSettings._styled;\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing enabled, and styling enabled.\n   */\n  static prettyStyled(): OutputSettings {\n    if (OutputSettings._prettyStyled === void 0) {\n      OutputSettings._prettyStyled = new OutputSettings(Format.lineSeparator(), true, true);\n    }\n    return OutputSettings._prettyStyled;\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the given `lineSeparator`, pretty\n   * rinting enabled if `isPretty` is `true`, and styling enabled if `isStyled`\n   * is `true`.\n   */\n  static create(lineSeparator?: string | null, isPretty?: boolean, isStyled?: boolean): OutputSettings {\n    if (typeof lineSeparator !== \"string\") {\n      lineSeparator = Format.lineSeparator();\n    }\n    if (typeof isPretty !== \"boolean\") {\n      isPretty = false;\n    }\n    if (typeof isStyled !== \"boolean\") {\n      isStyled = false;\n    }\n    if (Format.lineSeparator() === lineSeparator) {\n      if (!isPretty && !isStyled) {\n        return OutputSettings.standard();\n      } else if (isPretty && !isStyled) {\n        return OutputSettings.pretty();\n      } else if (!isPretty && isStyled) {\n        return OutputSettings.styled();\n      } else {\n        return OutputSettings.prettyStyled();\n      }\n    }\n    return new OutputSettings(lineSeparator, isPretty, isStyled);\n  }\n\n  /**\n   * Converts the loosely typed `settings` to an instance of `OutputSettings`.\n   */\n  static fromAny(settings: AnyOutputSettings | undefined): OutputSettings {\n    if (settings instanceof OutputSettings) {\n      return settings;\n    } else if (typeof settings === \"object\" && settings !== null) {\n      return OutputSettings.create(settings.lineSeparator, settings.isPretty, settings.isStyled);\n    }\n    return OutputSettings.standard();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when writing invalid [[Output]].\n */\nexport class OutputException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = OutputException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Format} from \"./Format\";\nimport {OutputException} from \"./OutputException\";\n\n/**\n * Non-blocking token stream writer.  `Output` enables incremental,\n * interruptible writing of network protocols and data formats.\n *\n * ### Output tokens\n * Output tokens are modeled as primitive numbers, commonly representing\n * Unicode code points, or raw octets; each `Output` implementation specifies\n * the semantic type of its tokens.\n *\n * ### Output states\n * An `Output` writer is always in one of three states: _cont_​inue, _full_,\n * or _done_.  The _cont_ state indicates that the stream is ready to write a\n * single token; the _full_ state indicates that the stream is unable to write\n * additional tokens at this time, but that the stream may logically resume at\n * some point in the future; and the _done_ state indicates that the stream has\n * terminated, and that [[bind]] will return the output result.  [[isCont]]\n * returns `true` when in the _cont_ state; [[isFull]] returns `true` when in\n * the _full_ state; and [[isDone]] returns `true` when in the _done_ state.\n *\n * ### Output results\n * An `Output` writer yields a value of type `T`, obtained via the [[bind]]\n * method, representing some implementation defined result of writing the\n * output.  For example, an `Output<string>` implementation may–but is not\n * required to–yield a `string` containing all code points written to the\n * output.\n *\n * ### Non-blocking behavior\n * `Output` writers never block.  An `Output` writer that would otherwise block\n * writing additional output instead enters the _full_ state, signaling the\n * output generator to back off producing the output, but to remain prepared to\n * produce additional output in the future.  An `Output` writer enters the\n * _done_ state when it encounters the final end of its output, signaling to\n * the output generator to stop producing.\n *\n * ### Output settings\n * An output generator may alter the tokens it produces based on its `Output`\n * writer's [[settings]].  Uses include pretty printing and styling generated\n * output.  [[OutputSettings]] subclasses can provide additional parameters\n * understood by specialized output producers.\n *\n * ### Cloning\n * An `Output` writer may be [[clone cloned]] to branch the token stream in an\n * implementation specified manner.  Not all `Output` implementations support\n * cloning.\n *\n * @see [[OutputSettings]]\n * @see [[Writer]]\n */\nexport abstract class Output<T = unknown> implements Builder<number, T> {\n  /**\n   * Returns `true` when the next [[write write(number)]] will succeed.\n   * i.e. this `Output` is in the _cont_ state.\n   */\n  abstract isCont(): boolean;\n\n  /**\n   * Returns `true` when an immediate `write` will fail, but writes may succeed\n   * at some point in the future.  i.e. this `Output` is in the _full_ state.\n   */\n  abstract isFull(): boolean;\n\n  /**\n   * Returns `true` when no `write` will ever again suucced.\n   * i.e. this `Output` is in the _done_ state.\n   */\n  abstract isDone(): boolean;\n\n  /**\n   * Returns `true` when an immediate `write` will fail due to an\n   * error with the token stream. i.e. this `Output` is in the `error` state.\n   * When `true`, `trap()` will return the output error.\n   */\n  abstract isError(): boolean;\n\n  /**\n   * Returns `true` if this is a partial `Output` that will enter\n   * the `full` state when it is unable to write additional tokens.\n   */\n  abstract isPart(): boolean;\n\n  /**\n   * Returns a partial `Output` equivalent to this `Output`, if\n   * `isPart` is `true`; returns a final `Output` equivalent\n   * to this `Output` if `isPart` is `false`. The caller's reference\n   * to `this` `Output` should be replaced by the returned `Output`.\n   */\n  abstract isPart(isPart: boolean): Output<T>;\n\n  /**\n   * Writes a single `token` to the stream, if this `Output` is in the\n   * _cont_ state.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` is not in the _cont_ state.\n   */\n  abstract write(token: number): Output<T>;\n\n  /**\n   * Writes the code points of the given `string`.  Assumes this is a Unicode\n   * `Output` writer with sufficient capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full `string` has been written.\n   */\n  abstract write(string: string): Output<T>;\n\n  /**\n   * Writes the code points of the given `string`, followed by the code points\n   * of the `settings`' [[OutputSettings.lineSeparator line separator].\n   * Assumes this is a Unicode `Output` writer with sufficient capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full `string` and line separator has been written.\n   */\n  writeln(string?: string): Output<T> {\n    if (typeof string === \"string\") {\n      this.write(string);\n    }\n    return this.write(this.settings().lineSeparator());\n  }\n\n  /**\n   * Writes the code points of the human-readable [[Display]] string of the\n   * given `object`.  Assumes this is a Unicode `Output` writer with sufficient\n   * capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full display string has been written.\n   */\n  display(object: unknown): Output<T> {\n    Format.display(object, this);\n    return this;\n  }\n\n  /**\n   * Writes the code points of the developer-readable [[Debug]] string of the\n   * given `object`.  Assumes this is a Unicode `Output` writer with sufficient\n   * capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full debug string has been written.\n   */\n  debug(object: unknown): Output<T> {\n    Format.debug(object, this);\n    return this;\n  }\n\n  /**\n   * Writes any internally buffered state to the underlying output stream.\n   */\n  flush(): Output<T> {\n    return this;\n  }\n\n  push(...tokens: number[]): void {\n    const n = tokens.length;\n    for (let i = 0; i < n; i += 1) {\n      this.write(tokens[i]);\n    }\n  }\n\n  /**\n   * Returns the `OutputSettings` used to configure the behavior of output\n   * producers that write to this `Output`.\n   */\n  abstract settings(): OutputSettings;\n\n  /**\n   * Updates the `settings` associated with this `Output`.\n   *\n   * @return `this`\n   */\n  abstract settings(settings: AnyOutputSettings): Output<T>;\n\n  /**\n   * Returns the implementation-defined result of writing the output.\n   */\n  abstract bind(): T;\n\n  /**\n   * Returns the output error. Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws OutputException if this `Output` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new OutputException();\n  }\n\n  /**\n   * Returns an implementation-defined branch of the token stream.\n   *\n   * @throws `Error` if this `Output` writer cannot be cloned.\n   */\n  clone(): Output<T> {\n    throw new Error();\n  }\n\n  private static _full?: Output<any>;\n\n  private static _done?: Output<any>;\n\n  /**\n   * Return an `Output` in the _full_ state, that binds the given `value`,\n   * with the given `settings`.\n   */\n  static full<T>(value: T | null = null, settings: OutputSettings = OutputSettings.standard()): Output<T> {\n    if (value === null && settings === OutputSettings.standard()) {\n      if (Output._full === void 0) {\n        Output._full = new OutputFull(value, OutputSettings.standard());\n      }\n      return Output._full;\n    }\n    return new OutputFull<T>(value!, settings);\n\n  }\n\n  /**\n   * Returns an `Output` in the _done_ state, that binds the given `value`,\n   * with the given `settings`.\n   */\n  static done<T>(value: T | null = null, settings: OutputSettings = OutputSettings.standard()): Output<T> {\n    if (value === null && settings === OutputSettings.standard()) {\n      if (Output._done === void 0) {\n        Output._done = new OutputDone(value, OutputSettings.standard());\n      }\n      return Output._done;\n    }\n    return new OutputDone<T>(value!, settings);\n  }\n\n  /**\n   * Return an `Output` in the _error_ state, that binds the given `value`,\n   * with the given `settings`.\n   */\n  static error<T>(error: Error, settings: OutputSettings = OutputSettings.standard()): Output<T> {\n    return new OutputError<T>(error, settings);\n  }\n}\n\n/** @hidden */\nclass OutputFull<T> extends Output<T> {\n  /** @hidden */\n  readonly _value: T;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(value: T, settings: OutputSettings) {\n    super();\n    this._value = value;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return true;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return true;\n    } else if (isPart) {\n      return Output.done(this._value, this._settings);\n    } else {\n      return this;\n    }\n  }\n\n  write(token: number): Output<T>;\n  write(string: string): Output<T>;\n  write(tokenOrString: number | string): Output<T> {\n    return Output.error(new OutputException(\"full\"), this._settings);\n  }\n\n  writeln(string?: string): Output<T> {\n    return Output.error(new OutputException(\"full\"), this._settings);\n  }\n\n  bind(): T {\n    return this._value;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): Output<T>;\n  settings(settings?: OutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Output.full(this._value, settings);\n    }\n  }\n\n  clone(): Output<T> {\n    return this;\n  }\n}\n\n/** @hidden */\nclass OutputDone<T> extends Output<T> {\n  /** @hidden */\n  readonly _value: T;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(value: T, settings: OutputSettings) {\n    super();\n    this._value = value;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return false;\n    } else if (isPart) {\n      return this;\n    } else {\n      return Output.full(this._value, this._settings);\n    }\n  }\n\n  write(token: number): Output<T>;\n  write(string: string): Output<T>;\n  write(tokenOrString: number | string): Output<T> {\n    return Output.error(new OutputException(\"done\"), this._settings);\n  }\n\n  writeln(string?: string): Output<T> {\n    return Output.error(new OutputException(\"done\"), this._settings);\n  }\n\n  bind(): T {\n    return this._value;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): Output<T>;\n  settings(settings?: OutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Output.done(this._value, settings);\n    }\n  }\n\n  clone(): Output<T> {\n    return this;\n  }\n}\n\n/** @hidden */\nclass OutputError<T> extends Output<T> {\n  /** @hidden */\n  readonly _error: Error;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(error: Error, settings: OutputSettings) {\n    super();\n    this._error = error;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(token: number): Output<T>;\n  write(string: string): Output<T>;\n  write(tokenOrString: number | string): Output<T> {\n    return this;\n  }\n\n  writeln(string?: string): Output<T> {\n    return this;\n  }\n\n  bind(): T {\n    throw new OutputException();\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): Output<T>;\n  settings(settings?: OutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Output.error(this._error, settings);\n    }\n  }\n\n  clone(): Output<T> {\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mark} from \"./Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\n\n/**\n * Non-blocking token stream reader, with single token lookahead.\n * `Input` enables incremental, interruptible parsing of network protocols and\n * data formats.\n *\n * ### Input tokens\n * Input tokens are modeled as primitive numbers, commonly representing Unicode\n * code points, or raw octets; each `Input` implementation specifies the\n * semantic type of its tokens.  The [[head]]  method peeks at the lookahead\n * token, without consuming it, and the [[step]] method advances the input to\n * the next token.\n *\n * ### Input states\n * An `Input` reader is always in one of three states: _cont_​inue, _empty_, or\n * _done_.  The _cont_ state indicates that a lookahead token is immediately\n * available; the _empty_ state indicates that no additional tokens are\n * available at this time, but that the stream may logically resume at some\n * point in the future; and the _done_ state indicates that the stream has\n * terminated.  [[isCont]] returns `true` when in the _cont_ state; [[isEmpty]]\n * returns `true` when in the _empty_ state; and [[isDone]] returns `true` when\n * in the _done_ state.\n *\n * ### Non-blocking behavior\n * `Input` readers never block.  An `Input` reader that would otherwise block\n * awaiting additional input instead enters the _empty_ state, signaling the\n * input consumer to back off processing the input, but to remain prepared to\n * process additional input in the future.  An `Input` reader enters the _done_\n * state when it encounters the final end of its input, signaling the input\n * consumer to stop processing.  [[Input.empty]] returns an `Input` reader in\n * the _empty_ state.  [[Input.done]] returns an `Input` reader in the _done_\n * state.\n *\n * ### Position tracking\n * The logical position of the lookahead token is made available via the\n * [[mark]] method, with optimized callouts for the byte [[offset]], one-based\n * [[line]] number, and one-based [[column]] in the current line.  The [[id]]\n * method returns a diagnostic identifier for the token stream.\n *\n * ### Cloning\n * An `Input` reader may be [[clone cloned]] to provide an indepently mutable\n * position into a shared token stream.  Not all `Input` implementations\n * support cloning.\n *\n * @see [[InputSettings]]\n * @see [[Parser]]\n */\nexport abstract class Input {\n  /**\n   * Returns `true` when a [[head lookahead]] token is immediately available.\n   * i.e. this `Input` is in the _cont_ state.\n   */\n  abstract isCont(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available, but\n   * additional input may be available at some point in the future.  i.e. this\n   * `Input` is in the _empty_ state.\n   */\n  abstract isEmpty(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available, and\n   * no additional input will ever become available.  i.e. this `Input` is in\n   * the _done_ state.\n   */\n  abstract isDone(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available due to\n   * an error with the token stream. i.e. this `Input` is in the `error` state.\n   * When `true`, `trap()` will return the input error\n   */\n  abstract isError(): boolean;\n\n  /**\n   * Returns `true` if this is a partial `Input` will that enter\n   * the `empty` state after it consumes the last available input token.\n   */\n  abstract isPart(): boolean;\n\n   /**\n    * Returns a partial `Input` equivalent to this `Input`, if\n    * `isPart` is `true`; returns a final `Input` equivalent\n    * to this `Input` if `isPart` is `false`. The caller's reference\n    * to `this` `Input` should be replaced by the returned `Input`\n    */\n  abstract isPart(isPart: boolean): Input;\n\n  /**\n   * Returns the current lookahead token, if this `Input` is in the\n   * _cont_ state.\n   *\n   * @throws [[InputException]] if this `Input` is not in the _cont_ state.\n   */\n  abstract head(): number;\n\n  /**\n   * Advances to the next token, if this `Input` is in the _cont_ state.\n   *\n   * @throws `Error` if this `Input` is not in the _cont_ state.\n   */\n  abstract step(): Input;\n\n  /**\n   * Sets the position of this `Input` to the given `mark`.  Rewinds to the\n   * start of this `Input`, if `mark` is `undefined`.\n   *\n   * @throws [[InputException]] if this `Input` does not support seeking,\n   *         or is unable to reposition to the `mark`.\n   */\n  abstract seek(mark?: Mark): Input;\n\n  /**\n   * Returns the input error. Only guaranteed to return an error when in the\n   * _ error_ state\n   *\n   * @throws InputException if the `Input` is not the _error_state\n   */\n  trap(): Error {\n    throw new InputException();\n  }\n\n  /**\n   * Returns an object that identifies the token stream, or `null` if the\n   * stream is unidentified.\n   */\n  abstract id(): unknown | null;\n\n  /**\n   * Returns an `Input` equivalent to this `Input`, but logically identified by\n   * the given–possibly `null`–`id`.  The caller's reference to `this` `Input}`\n   * should be replaced by the returned `Input}`.\n   */\n  abstract id(id: unknown | null): Input;\n\n  /**\n   * Returns the position of the current lookahead token, relative to the start\n   * of the stream.\n   */\n  abstract mark(): Mark;\n\n  /**\n   * Returns an `Input` equivalent to this `Input`, but logically positioned at\n   * the given `mark`.  The physical position in the input stream is not\n   * modified.  The caller's reference to `this` `Input` should be replaced by\n   * the returned `Input`.\n   */\n  abstract mark(mark: Mark): Input;\n\n  /**\n   * Returns the byte offset of the current lookahead token, relative to the\n   * start of the stream.\n   */\n  offset(): number {\n    return this.mark()._offset;\n  }\n\n  /**\n   * Returns the one-based line number of the current lookahead token, relative\n   * to the start of the stream.\n   */\n  line(): number {\n    return this.mark()._line;\n  }\n\n  /**\n   * Returns the one-based column number of the current lookahead token,\n   * relative to the current line in the stream.\n   */\n  column(): number {\n    return this.mark()._column;\n  }\n\n  /**\n   * Returns the `InputSettings` used to configure the behavior of input\n   * consumers that read from this `Input`.\n   */\n  abstract settings(): InputSettings;\n\n  /**\n   * Returns a clone of this `Input` with the given `settings`.\n   *\n   * @throws `Error` if this `Input` reader cannot be cloned.\n   */\n  abstract settings(settings: AnyInputSettings): Input;\n\n  /**\n   * Returns an independently positioned view into the token stream,\n   * initialized with identical state to this `Input`.\n   *\n   * @throws `Error` if this `Input` reader cannot be cloned.\n   */\n  abstract clone(): Input;\n\n  private static _empty?: Input;\n\n  private static _done?: Input;\n\n  /**\n   * Returns an `Input` reader in the _empty_ state, with the given `settings`,\n   * at the `mark` position of a token stream logically identified by `id`.\n   */\n  static empty(id: unknown | null = null, mark: Mark = Mark.zero(),\n               settings: InputSettings = InputSettings.standard()): Input {\n    if (id === null && mark === Mark.zero() && settings === InputSettings.standard()) {\n      if (Input._empty === void 0) {\n        Input._empty = new InputEmpty(null, Mark.zero(), InputSettings.standard());\n      }\n      return Input._empty;\n    }\n    return new InputEmpty(id, mark, settings);\n  }\n\n  /**\n   * Returns an `Input` reader in the _done_ state, with the given `settings`,\n   * at the `mark` position of a token stream logically identified by `id`.\n   */\n  static done(id: unknown | null = null, mark: Mark = Mark.zero(),\n              settings: InputSettings = InputSettings.standard()): Input {\n    if (id === null && mark === Mark.zero() && settings === InputSettings.standard()) {\n      if (Input._done === void 0) {\n        Input._done = new InputDone(null, Mark.zero(), InputSettings.standard());\n      }\n      return Input._done;\n    }\n    return new InputDone(id, mark, settings);\n  }\n\n  /**\n   * Returns an `Input` in the _error_ state, with the given `settings`,\n   * at the `mark` position of a token stream logically identified by `id`.\n   */\n  static error(error: Error, id: unknown | null = null, mark: Mark = Mark.zero(),\n               settings: InputSettings = InputSettings.standard()): Input {\n    return new InputError(error, id, mark, settings);\n  }\n}\n\n/** @hidden */\nclass InputEmpty extends Input {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n\n  constructor(id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Input;\n  isPart(isPart?: boolean): boolean | Input {\n    if (isPart === void 0) {\n      return true;\n    } else if (isPart) {\n      return this;\n    } else {\n      return Input.done(this._id, this._mark, this._settings);\n    }\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(): Input {\n    const error = new InputException(\"empty step\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  seek(mark?: Mark): Input {\n    const error = new InputException(\"empty seek\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): Input;\n  id(id?: unknown | null): unknown | null | Input {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return Input.empty(id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): Input;\n  mark(mark?: Mark): Mark | Input {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return Input.empty(this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): Input;\n  settings(settings?: InputSettings): InputSettings | Input {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Input.empty(this._id, this._mark, settings);\n    }\n  }\n\n  clone(): Input {\n    return this;\n  }\n}\n\n/** @hidden */\nclass InputDone extends Input {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n\n  constructor(id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Input;\n  isPart(isPart?: boolean): boolean | Input {\n    if (isPart === void 0) {\n      return false;\n    } else if (isPart) {\n      return Input.empty(this._id, this._mark, this._settings);\n    } else {\n      return this;\n    }\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(): Input {\n    const error = new InputException(\"done step\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  seek(mark?: Mark): Input {\n    const error = new InputException(\"empty seek\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): Input;\n  id(id?: unknown | null): unknown | null | Input {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return Input.done(id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): Input;\n  mark(mark?: Mark): Mark | Input {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return Input.done(this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): Input;\n  settings(settings?: InputSettings): InputSettings | Input {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Input.done(this._id, this._mark, settings);\n    }\n  }\n\n  clone(): Input {\n    return this;\n  }\n}\n\n/** @hidden */\nclass InputError extends Input {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n  /** @hidden */\n  readonly _error: Error;\n\n  constructor(error: Error, id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._error = error;\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Input;\n  isPart(isPart?: boolean): boolean | Input {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(): Input {\n    const error = new InputException(\"error step\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  seek(mark?: Mark): Input {\n    const error = new InputException(\"error seek\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): Input;\n  id(id?: unknown | null): unknown | null | Input {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return Input.error(this._error, id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): Input;\n  mark(mark?: Mark): Mark | Input {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return Input.error(this._error, this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): Input;\n  settings(settings?: InputSettings): InputSettings | Input {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Input.error(this._error, this._id, this._mark, settings);\n    }\n  }\n\n  clone(): Input {\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mark} from \"./Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {Input} from \"./Input\";\n\n/** @hidden */\nexport class StringInput extends Input {\n  /** @hidden */\n  readonly _string: string;\n  /** @hidden */\n  _id: unknown | null;\n  /** @hidden */\n  _offset: number;\n  /** @hidden */\n  _line: number;\n  /** @hidden */\n  _column: number;\n  /** @hidden */\n  _settings: InputSettings;\n  /** @hidden */\n  _index: number;\n  /** @hidden */\n  _isPart: boolean;\n\n  constructor(string: string, id: unknown | null = null, offset: number = 0,\n              line: number = 1, column: number = 1, settings: InputSettings = InputSettings.standard(),\n              index: number = 0, isPart: boolean = false) {\n    super();\n    this._string = string;\n    this._id = id;\n    this._offset = offset;\n    this._line = line;\n    this._column = column;\n    this._settings = settings;\n    this._index = index;\n    this._isPart = isPart;\n  }\n\n  isCont(): boolean {\n    return this._index < this._string.length;\n  }\n\n  isEmpty(): boolean {\n    return this._isPart && this._index >= this._string.length;\n  }\n\n  isDone(): boolean {\n    return !this._isPart && this._index >= this._string.length;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Input;\n  isPart(isPart?: boolean): boolean | Input {\n    if (isPart === void 0) {\n      return this._isPart;\n    } else {\n      this._isPart = isPart;\n      return this;\n    }\n  }\n\n  head(): number {\n    if (this._index < this._string.length) {\n      const c = this._string.codePointAt(this._index);\n      if (c !== void 0) {\n        return c;\n      } else {\n        return this._string.charCodeAt(this._index);\n      }\n    }\n    throw new InputException();\n  }\n\n  step(): Input {\n    const index = this._index;\n    if (index < this._string.length) {\n      const c = this._string.codePointAt(index);\n      this._index = this._string.offsetByCodePoints(index, 1);\n      this._offset += this._index - index;\n      if (c === 10/*'\\n'*/) {\n        this._line += 1;\n        this._column = 1;\n      } else {\n        this._column += 1;\n      }\n      return this;\n    } else {\n      const error = new InputException(\"invalid step\");\n      return Input.error(error, this._id, this.mark(), this._settings);\n    }\n  }\n\n  seek(mark?: Mark): Input {\n    if (mark !== void 0) {\n      const index = this._index + (mark._offset - this._offset);\n      if (0 <= index && index <= this._string.length) {\n        this._offset = mark._offset;\n        this._line = mark._line;\n        this._column = mark._column;\n        this._index = index;\n        return this;\n      } else {\n        const error = new InputException(\"invalid seek to \" + mark);\n        return Input.error(error, this._id, this.mark(), this._settings);\n      }\n    } else {\n      this._offset = 0;\n      this._line = 1;\n      this._column = 1;\n      this._index = 0;\n      return this;\n    }\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): Input;\n  id(id?: unknown | null): unknown | null | Input {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      this._id = id;\n      return this;\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): Input;\n  mark(mark?: Mark): Mark | Input {\n    if (mark === void 0) {\n      return Mark.at(this._offset, this._line, this._column);\n    } else {\n      this._offset = mark._offset;\n      this._line = mark._line;\n      this._column = mark._column;\n      return this;\n    }\n  }\n\n  offset(): number {\n    return this._offset;\n  }\n\n  line(): number {\n    return this._line;\n  }\n\n  column(): number {\n    return this._column;\n  }\n\n  settings(): InputSettings;\n  settings(settings: AnyInputSettings): Input;\n  settings(settings?: AnyInputSettings): InputSettings | Input {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = InputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  clone(): Input {\n    return new StringInput(this._string, this._id, this._offset, this._line,\n                           this._column, this._settings, this._index, this._isPart);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\n\n/** @hidden */\nexport class StringOutput extends Output<string> {\n  /** @hidden */\n  _string: string;\n  /** @hidden */\n  _settings: OutputSettings;\n\n  constructor(string: string, settings: OutputSettings) {\n    super();\n    this._string = string;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return true;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<string>;\n  isPart(isPart?: boolean): boolean | Output<string> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(token: number | string): Output<string> {\n    if (typeof token === \"number\") {\n      if ((token >= 0x0000 && token <= 0xd7ff)\n          || (token >= 0xe000 && token <= 0xffff)) { // U+0000..U+D7FF | U+E000..U+FFFF\n        token = String.fromCharCode(token);\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        const u = token - 0x10000;\n        token = String.fromCharCode(0xd800 | (u >>> 10), 0xdc00 | (u & 0x3ff));\n      } else { // invalid code point\n        token = \"\\ufffd\";\n      }\n    }\n    this._string += token;\n    return this;\n  }\n\n  writeln(string?: string): Output<string> {\n    if (string === void 0) {\n      this._string = this._string.concat(this._settings._lineSeparator);\n      return this;\n    } else {\n      this._string = this._string.concat(string).concat(this._settings._lineSeparator);\n      return this;\n    }\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<string>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<string> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  bind(): string {\n    return this._string;\n  }\n\n  clone(): Output<string> {\n    return new StringOutput(this._string, this._settings);\n  }\n\n  toString(): string {\n    return this._string;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when a [[Writer]] attempts to write invalid syntax.\n */\nexport class WriterException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = WriterException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\n\n/**\n * Continuation of how to write subsequent [[Output]] tokens to a stream.\n * `Writer` enables efficient, interruptible writing of network protocols and\n * data formats, without intermediate buffering.\n *\n * ### Output tokens\n * A `Writer` writes tokens to an `Output` writer.  Output tokens are modeled\n * as primitive numbers, commonly representing Unicode code points, or raw\n * octets.  Each `Writer` implementation specifies the semantic type of output\n * tokens it produces.\n *\n * ### Writer states\n * A `Writer` is always in one of three states: _cont_​inue, _done_, or _error_.\n * The _cont_ state indicates that [[pull]] is ready to produce `Output`; the\n * _done_ state indicates that writing terminated successfully, and that\n * [[bind]] will return the written result; the _error_ state indicates that\n * writing terminated in failure, and that [[trap]] will return the write error.\n * `Writer` subclasses default to the _cont_ state.\n *\n * ### Feeding input\n * The [[feed]] method returns a `Writer` that represents the continuation\n * of how to write the given input object to subsequent `Output` writers.\n * `feed` can be used to specify an initial object to write, or to change\n * the object to be written.\n *\n * ### Pulling output\n * The [[pull]] method incrementally writes as much `Output` as it can, before\n * returning another `Writer` that represents the continuation of how to write\n * additional `Output`.  The `Output` passed to `pull` is only guaranteed to be\n * valid for the duration of the method call; references to the provided\n * `Output` instance must not be stored.\n *\n * ### Writer results\n * A `Writer` produces a written result of type `O`, obtained via the [[bind]]\n * method.  `bind` is only guaranteed to return a result when in the _done_\n * state; though `bind` may optionally make available partial results in other\n * states.  A failed `Writer` provides a write error via the [[trap]] method.\n * `trap` is only guaranteed to return an error when in the _error_ state.\n *\n * ### Continuations\n * A `Writer` instance represents a continuation of how to write remaining\n * `Output`.  Rather than writing a complete output in one go, a `Writer` takes\n * an `Output` chunk and returns another `Writer` instance that knows how to\n * write subsequent `Output` chunks.  This enables non-blocking, incremental\n * writing that can be interrupted whenever an `Output` writer runs out of\n * space.  A `Writer` terminates by returning a continuation in either the\n * _done_ state, or the _error_ state.  [[Writer.done]] returns a `Writer` in\n * the _done_ state.  [[Writer.error]] returns a `Writer` in the _error_ state.\n *\n * ### Forking\n * The [[fork]] method passes an out-of-band condition to a `Writer`, yielding\n * a `Writer` continuation whose behavior may be altered by the given condition.\n * For example, a console `Writer` might support a `fork` condition that changes\n * the color and style of printed text.  The types of conditions accepted by\n * `fork`, and their intended semantics, are implementation defined.\n */\nexport abstract class Writer<I = unknown, O = unknown> {\n  /**\n   * Returns `true` when [[pull]] is able to produce `Output`.  i.e. this\n   * `Writer` is in the _cont_ state.\n   */\n  isCont(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` when writing has terminated successfully, and [[bind]] will\n   * return the written result.  i.e. this `Writer` is in the _done_ state.\n   */\n  isDone(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns `true` when writing has terminated in failure, and [[trap]] will\n   * return the write error.  i.e. this `Writer` is in the _error_ state.\n   */\n  isError(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns a `Writer` that represents the continuation of how to write the\n   * given `input` object.\n   *\n   * @throws `Error` if this `Writer` does not know how to write the given\n   *         `input` object.\n   */\n  feed(input: I): Writer<I, O> {\n    throw new Error();\n  }\n\n  /**\n   * Incrementally writes as much `output` as possible, and returns another\n   * `Writer` that represents the continuation of how to write additional\n   * `Output`.  If `output` enters the _done_ state, `pull` _must_ return a\n   * terminated `Writer`, i.e. a `Writer` in the _done_ state, or in the\n   * _error_ state.  The given `output` is only guaranteed to be valid for the\n   * duration of the method call; references to `output` must not be stored.\n   */\n  abstract pull(output: Output): Writer<I, O>;\n\n  /**\n   * Returns a `Writer` continuation whose behavior may be altered by the given\n   * out-of-band `condition`.\n   */\n  fork(condition: unknown): Writer<I, O> {\n    return this;\n  }\n\n  /**\n   * Returns the written result.  Only guaranteed to return a result when in\n   * the _done_ state.\n   *\n   * @throws `Error` if this `Writer` is not in the _done_ state.\n   */\n  bind(): O {\n    throw new Error();\n  }\n\n  /**\n   * Returns the write error.  Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws `Error` if this `Writer` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new Error();\n  }\n\n  /**\n   * Casts a done `Writer` to a different input type.  A `Writer` in the _done_\n   * state can have any input type.\n   *\n   * @throws `Error` if this `Writer` is not in the _done_ state.\n   */\n  asDone<I2>(): Writer<I2, O> {\n    throw new Error();\n  }\n\n  /**\n   * Casts an errored `Writer` to different input and output types.  A `Writer`\n   * in the _error_ state can have any input type, and any output type.\n   *\n   * @throws `Error` if this `Writer` is not in the _error_ state.\n   */\n  asError<I2, O2>(): Writer<I2, O2> {\n    throw new Error();\n  }\n\n  /**\n   * Returns a `Writer` that continues writing `that` `Writer`, after it\n   * finishes writing `this` `Writer`.\n   */\n  andThen<O2>(that: Writer<I, O2>): Writer<I, O2> {\n    return new WriterAndThen<I, O2>(this, that);\n  }\n\n  private static _done?: Writer<any, any>;\n\n  /**\n   * Returns a `Writer` in the _done_ state that `bind`s an `undefined`\n   * writtern result.\n   */\n  static done<I, O>(): Writer<I, O>;\n\n  /**\n   * Returns a `Writer` in the _done_ state that `bind`s the given\n   * written `output`.\n   */\n  static done<I, O>(output: O): Writer<I, O>;\n\n  static done<I, O>(output?: O): Writer<I, O> {\n    if (output === void 0) {\n      if (Writer._done === void 0) {\n        Writer._done = new WriterDone<any, any>(void 0);\n      }\n      return Writer._done;\n    } else {\n      return new WriterDone<I, O>(output);\n    }\n  }\n\n  /**\n   * Returns a `Writer` in the _error_ state that `trap`s the given\n   * write `error`.\n   */\n  static error<I, O>(error: Error): Writer<I, O> {\n    return new WriterError<I, O>(error);\n  }\n}\n\n/** @hidden */\nclass WriterDone<I, O> extends Writer<I, O> {\n  /** @hidden */\n  readonly _output: O;\n\n  constructor(output: O) {\n    super();\n    this._output = output;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  pull(output: Output): Writer<I, O> {\n    return this;\n  }\n\n  bind(): O {\n    return this._output;\n  }\n\n  asDone<I2>(): Writer<I2, O> {\n    return this as any;\n  }\n\n  andThen<O2>(that: Writer<I, O2>): Writer<I, O2> {\n    return that;\n  }\n}\n\n/** @hidden */\nclass WriterError<I, O> extends Writer<I, O> {\n  /** @hidden */\n  readonly _error: Error;\n\n  constructor(error: Error) {\n    super();\n    this._error = error;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  pull(output: Output): Writer<I, O> {\n    return this;\n  }\n\n  bind(): O {\n    throw this._error;\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  asError<I2, O2>(): Writer<I2, O2> {\n    return this as any;\n  }\n\n  andThen<O2>(that: Writer<I, O2>): Writer<I, O2> {\n    return this as any;\n  }\n}\n\n/** @hidden */\nclass WriterAndThen<I, O> extends Writer<I, O> {\n  /** @hidden */\n  readonly _head: Writer<I, any>;\n  /** @hidden */\n  readonly _tail: Writer<I, O>;\n\n  constructor(head: Writer<I, any>, tail: Writer<I, O>) {\n    super();\n    this._head = head;\n    this._tail = tail;\n  }\n\n  pull(output: Output): Writer<I, O> {\n    let head = this._head;\n    if (head.isCont()) {\n      head = head.pull(output);\n    }\n    if (head.isError()) {\n      return head.asError();\n    } else if (head.isDone()) {\n      return this._tail.pull(output);\n    } else {\n      return new WriterAndThen<I, O>(head, this._tail);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\n\n/** @hidden */\nexport class StringWriter<I> extends Writer<I, unknown> {\n  private readonly _value: unknown;\n  private readonly _input: string;\n  private readonly _index: number;\n\n  constructor(value: unknown, input: string, index: number = 0) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._index = index;\n  }\n\n  feed(input: unknown): Writer<I, unknown> {\n    return new StringWriter(input, \"\" + input);\n  }\n\n  pull(output: Output): Writer<I, unknown> {\n    return StringWriter.write(output, this._value, this._input, this._index);\n  }\n\n  static write<I>(output: Output, value: unknown, input: string, index: number = 0): Writer<I, unknown> {\n    const length = input.length;\n    while (index < length && output.isCont()) {\n      let c = input.codePointAt(index);\n      if (c === void 0) {\n        c = input.charCodeAt(index);\n      }\n      output = output.write(c);\n      index = input.offsetByCodePoints(index, 1);\n    }\n    if (index === length) {\n      return Writer.done(value);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new StringWriter(value, input, index);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {Writer} from \"./Writer\";\nimport {StringInput} from \"./StringInput\";\nimport {StringOutput} from \"./StringOutput\";\nimport {StringWriter} from \"./StringWriter\";\n\n/**\n * Unicode code point [[Input]]/[[Output]]/[[Writer]] factory.\n *\n * The `Unicode.stringInput(...)` function returns an `Input` that reads the\n * Unicode code points of a `string`.\n *\n * The `Unicode.stringOutput(...)}` function returns an `Output` that writes\n * Unicode code points to an internal buffer, and [[Output.bind binds]] a\n * `string` containing all written code points.\n */\nexport class Unicode {\n  private constructor() {\n    // nop\n  }\n\n  static stringInput(string: string): Input {\n    return new StringInput(string);\n  }\n\n  /**\n   * Returns a new `Output` that appends Unicode code points to the given\n   * `string`, using the given output `settings`.  The returned `Output`\n   * accepts an unbounded number of code points, remaining permanently in the\n   * _cont_ state, and [[Output.bind binds]] a `string` containing the given\n   * `string`, and all appended code points.\n   */\n  static stringOutput(string?: string, settings?: AnyOutputSettings): Output<string>;\n  /**\n   * Returns a new `Output` that buffers Unicode code points, using the given\n   * output `settings`.  The returned `Output` accepts an unbounded number of\n   * code points, remaining permanently in the _cont_ state, and [[Output.bind\n   * binds]] a `string` containing all written code points.\n   */\n  static stringOutput(settings?: AnyOutputSettings): Output<string>;\n  static stringOutput(string?: string | AnyOutputSettings, settings?: AnyOutputSettings): Output<string> {\n    if (settings === void 0 && typeof string !== \"string\") {\n      settings = string;\n      string = \"\";\n    } else if (typeof string !== \"string\") {\n      string = \"\";\n    }\n    settings = OutputSettings.fromAny(settings);\n    return new StringOutput(string, settings);\n  }\n\n  static stringWriter<I>(): Writer<I, unknown>;\n  static stringWriter<I, O>(input: O): Writer<I, O>;\n  static stringWriter<I, O>(input?: O): Writer<I, unknown> {\n    if (input === void 0) {\n      return new StringWriter(void 0, \"\");\n    } else {\n      return new StringWriter(input, \"\" + input);\n    }\n  }\n\n  static writeString<I>(input: unknown, output: Output): Writer<I, unknown> {\n    return StringWriter.write(output, void 0, \"\" + input);\n  }\n\n  /** @hidden */\n  static isAlpha(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/;\n  }\n\n  /** @hidden */\n  static isSpace(c: number): boolean {\n    return c === 0x20 || c === 0x9;\n  }\n\n  /** @hidden */\n  static isNewline(c: number): boolean {\n    return c === 0xa || c === 0xd;\n  }\n\n  /** @hidden */\n  static isWhitespace(c: number): boolean {\n    return Unicode.isSpace(c) || Unicode.isNewline(c);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Tag} from \"./Tag\";\nimport {AnyOutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {Display} from \"./Display\";\nimport {Debug} from \"./Debug\";\nimport {Unicode} from \"./Unicode\";\n\n/**\n * Text format utility functions.\n */\nexport class Format {\n  private constructor() {\n  }\n\n  /**\n   * Writes the code points of the human-readable [[Display]] string for the\n   * given `object` to `output`.  Assumes `output` is a Unicode `Output` writer\n   * with sufficient capacity.  Delegates to [[Display.display]], if `object`\n   * implements `Display`; otherwise writes the result of `Object.toString`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full display string has been written.\n   */\n  static display(object: unknown, output: Output): void;\n\n  /**\n   * Returns the human-readable [[Display]] string for the givem `object`,\n   * output using the given `settings`.  Delegates to [[Display.displa]],\n   * if `object` implements `Display`; otherwise returns the result of\n   * `Object.toString`.\n   */\n  static display(object: unknown, settings?: AnyOutputSettings): string;\n\n  static display(object: unknown, output?: Output | AnyOutputSettings): void | string {\n    const notOutput = !(output instanceof Output);\n    if (object === void 0) {\n      if (output === void 0) {\n        return \"undefined\";\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"undefined\");\n      }\n    } else if (object === null) {\n      if (output === void 0) {\n        return \"null\";\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"null\");\n      }\n    } else if (typeof object === \"number\") {\n      if (output === void 0) {\n        return \"\" + object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        Format.displayNumber(object, output);\n      }\n    } else if (typeof object === \"string\") {\n      if (output === void 0) {\n        return object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(object);\n      }\n    } else if (typeof (object as any).display === \"function\") {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      (object as Display).display(output);\n    } else {\n      if (output === void 0) {\n        return \"\" + object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"\" + object);\n      }\n    }\n    if (notOutput) {\n      return output.toString();\n    }\n  }\n\n  /**\n   * Writes the code points of the developer-readable [[Debug]] string for the\n   * given `object` to `output`.  Assumes `output` is a Unicode `Output` writer\n   * with sufficient capacity.  Delegates to [[Debug.debug]], if `object`\n   * implements `Debug`; writes a JavaScript string literal, if `object` is a\n   * `string`, and writes a JavaScript number literal, if `object` is a\n   * `number`; otherwise writes the result of `Object.toString`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full debug string has been written.\n   */\n  static debug(object: unknown, output: Output): void;\n\n  /**\n   * Returns the developer-readable [[Debug]] string for the givem `object`,\n   * output using the given `settings`.  Delegates to [[Debug.debug]], if\n   * `object` implements `Debug`; returns a JavaScript string literal, if\n   * `object` is a `string`, and returns a JavaScript number literal, if\n   * `object` is a `number`; otherwise returns the result of `Object.toString`.\n   */\n  static debug(object: unknown, settings?: AnyOutputSettings): string;\n\n  static debug(object: unknown, output?: Output | AnyOutputSettings): void | string {\n    const notOutput = !(output instanceof Output);\n    if (object === void 0) {\n      if (output === void 0) {\n        return \"undefined\";\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"undefined\");\n      }\n    } else if (object === null) {\n      if (output === void 0) {\n        return \"null\";\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"null\");\n      }\n    } else if (typeof object === \"number\") {\n      if (output === void 0) {\n        return \"\" + object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        Format.debugNumber(object, output);\n      }\n    } else if (typeof object === \"string\") {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      Format.debugString(object, output);\n    } else if (typeof (object as any).debug === \"function\") {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      (object as Debug).debug(output);\n    } else {\n      if (output === void 0) {\n        return \"\" + object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"\" + object);\n      }\n    }\n    if (notOutput) {\n      return output.toString();\n    }\n  }\n\n  /**\n   * Writes the code points of the numeric string for the given `value`\n   * to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full numeric string has been written.\n   */\n  static displayNumber(value: number, output: Output): void {\n    if (isFinite(value) && Math.floor(value) === value && Math.abs(value) < 2147483648) {\n      if (value < 0) {\n        output = output.write(45/*'-'*/);\n      }\n      if (value > -10 && value < 10) {\n        output = output.write(48/*'0'*/ + Math.abs(value));\n      } else {\n        const digits = new Array<number>(19);\n        let x = value;\n        let i = 18;\n        while (x !== 0) {\n          digits[i] = Math.abs((x % 10) | 0);\n          x = (x / 10) | 0;\n          i -= 1;\n        }\n        i += 1;\n        while (i < 19) {\n          output = output.write(48/*'0'*/ + digits[i]);\n          i += 1;\n        }\n      }\n    } else {\n      output = output.write(\"\" + value);\n    }\n  }\n\n  /**\n   * Writes the code points of the JavaScript numeric literal for the given\n   * `value` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full numeric literal has been written.\n   */\n  static debugNumber(value: number, output: Output): void {\n    Format.displayNumber(value, output);\n  }\n\n  /**\n   * Writes the code points of the JavaScript character literal for the given\n   * `character` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full character literal has been written.\n   */\n  static debugChar(character: number, output: Output): void {\n    output = output.write(39/*'\\''*/);\n    switch (character) {\n        case 8/*'\\b'*/: output.write(92/*'\\\\'*/).write(98/*'b'*/); break;\n        case 9/*'\\t'*/: output.write(92/*'\\\\'*/).write(116/*'t'*/); break;\n        case 10/*'\\n'*/: output.write(92/*'\\\\'*/).write(110/*'n'*/); break;\n        case 12/*'\\f'*/: output.write(92/*'\\\\'*/).write(102/*'f'*/); break;\n        case 13/*'\\r'*/: output.write(92/*'\\\\'*/).write(114/*'r'*/); break;\n        case 34/*'\\\"'*/: output.write(92/*'\\\\'*/).write(34/*'\\\"'*/); break;\n        case 39/*'\\\"'*/: output.write(92/*'\\\\'*/).write(39/*'\\''*/); break;\n        case 92/*'\\\\'*/: output.write(92/*'\\\\'*/).write(92/*'\\\\'*/); break;\n      default:\n        if (character >= 0x0000 && character <= 0x001f\n            || character >= 0x007f && character <= 0x009f) {\n          output = output.write(92/*'\\\\'*/).write(117/*'u'*/)\n            .write(Format.encodeHex(character >>> 12 & 0xf))\n            .write(Format.encodeHex(character >>>  8 & 0xf))\n            .write(Format.encodeHex(character >>>  4 & 0xf))\n            .write(Format.encodeHex(character        & 0xf));\n        } else {\n          output = output.write(character);\n        }\n    }\n    output = output.write(39/*'\\''*/);\n  }\n\n  /**\n   * Writes the code points of the JavaScript string literal for the given\n   * `string` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full string literal has been written.\n   */\n  static debugString(string: string, output: Output): void {\n    output = output.write(34/*'\\\"'*/);\n    let input = Unicode.stringInput(string);\n    while (input.isCont()) {\n      const c = input.head();\n      switch (c) {\n        case 8/*'\\b'*/: output.write(92/*'\\\\'*/).write(98/*'b'*/); break;\n        case 9/*'\\t'*/: output.write(92/*'\\\\'*/).write(116/*'t'*/); break;\n        case 10/*'\\n'*/: output.write(92/*'\\\\'*/).write(110/*'n'*/); break;\n        case 12/*'\\f'*/: output.write(92/*'\\\\'*/).write(102/*'f'*/); break;\n        case 13/*'\\r'*/: output.write(92/*'\\\\'*/).write(114/*'r'*/); break;\n        case 34/*'\\\"'*/: output.write(92/*'\\\\'*/).write(34/*'\\\"'*/); break;\n        case 92/*'\\\\'*/: output.write(92/*'\\\\'*/).write(92/*'\\\\'*/); break;\n        default:\n          if (c >= 0x0000 && c <= 0x001f || c >= 0x007f && c <= 0x009f) {\n            output = output.write(92/*'\\\\'*/).write(117/*'u'*/)\n              .write(Format.encodeHex(c >>> 12 & 0xf))\n              .write(Format.encodeHex(c >>>  8 & 0xf))\n              .write(Format.encodeHex(c >>>  4 & 0xf))\n              .write(Format.encodeHex(c        & 0xf));\n          } else {\n            output = output.write(c);\n          }\n      }\n      input = input.step();\n    }\n    output = output.write(34/*'\\\"'*/);\n  }\n\n  private static encodeHex(x: number): number {\n    if (x < 10) {\n      return 48/*'0'*/ + x;\n    } else {\n      return 65/*'A'*/ + (x - 10);\n    }\n  }\n\n  private static _lineSeparator?: string;\n\n  /**\n   * Returns the operting system specific string used to separate lines of text.\n   */\n  static lineSeparator(): string {\n    if (Format._lineSeparator === void 0) {\n      if (typeof exports === \"object\" && typeof module !== \"undefined\" && typeof require === \"function\") {\n        const os = require(\"os\");\n        if (typeof os === \"object\" && os !== null) {\n          Format._lineSeparator = os.EOL;\n        }\n      }\n      if (Format._lineSeparator === void 0) {\n        Format._lineSeparator = \"\\n\";\n      }\n    }\n    return Format._lineSeparator;\n  }\n\n  /** @hidden */\n  static readonly Prefixes: ReadonlyArray<string> = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\",\" Z\", \"Y\"];\n\n  /**\n   * Returns a string representation of `value` scaled by its SI magnitude,\n   * keeping at most `precision` digits past the decimal place, appended with\n   * the appropriate SI prefix.\n   */\n  static prefix(value: number, precision: number = 1): string {\n    if (isFinite(value)) {\n      const exponential = Math.abs(value).toExponential();\n      const exponentIndex = exponential.indexOf(\"e\");\n      const exponent = exponentIndex >= 0 ? +exponential.slice(exponentIndex + 1) : NaN;\n      const power = Math.min(Math.max(-8, Math.floor(exponent / 3)), 8) * 3;\n      const scaled = Math.pow(10, -power) * value;\n      let s = Format.trimTrailingZeros(Math.abs(scaled).toFixed(precision));\n      if (scaled < 0 && +s !== 0) {\n        s = \"-\" + s;\n      }\n      s += Format.Prefixes[8 + power / 3];\n      return s;\n    } else {\n      return \"\" + value;\n    }\n  }\n\n  /** @hidden */\n  static trimTrailingZeros(s: string): string {\n    let i0 = -1;\n    let i1: number | undefined;\n    for (let i = 1, n = s.length; i < n; i += 1) {\n      const c = s.charCodeAt(i);\n      if (c === 46/*'.'*/) {\n        i0 = i; // candidate start of trailing zeros\n        i1 = i; // candidate end of trailing zeros\n      } else if (c === 48/*'0'*/) {\n        if (i0 === 0) { // if after decimal\n          i0 = i; // new candidate start of trailing zeros\n        }\n        i1 = i; // new candidate end of trailing zeros\n      } else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n        if (i0 > 0) { // if non-zero digit after decimal\n          i0 = 0; // no candidate start of trailing zeros\n        }\n      } else if (i0 > 0) { // if non-numeric character after decimal\n        break; // accept current range of trailing zeros\n      }\n    }\n    if (i0 > 0) {\n      s = s.slice(0, i0) + s.slice(i1! + 1); // cut out trailing zeros\n    }\n    return s;\n  }\n\n  /**\n   * Returns a string representation of the duration represented by the given\n   * number of milliseconds.\n   */\n  static duration(millis: number, separator: string = \" \"): string {\n    if (isFinite(millis)) {\n      const SECOND = 1000;\n      const MINUTE = 60 * SECOND;\n      const HOUR = 60 * MINUTE;\n      const DAY = 24 * HOUR;\n      const WEEK = 7 * DAY;\n      let weeks: number | undefined;\n      if (millis > WEEK) {\n        weeks = Math.floor(millis / WEEK);\n        millis %= WEEK;\n      }\n      let days: number | undefined;\n      if (millis > DAY) {\n        days = Math.floor(millis / DAY);\n        millis %= DAY;\n      }\n      let hours: number | undefined;\n      if (millis > HOUR) {\n        hours = Math.floor(millis / HOUR);\n        millis %= HOUR;\n      }\n      let minutes: number | undefined;\n      if (millis > MINUTE) {\n        minutes = Math.floor(millis / MINUTE);\n        millis %= MINUTE;\n      }\n      let seconds: number | undefined;\n      if (millis > SECOND) {\n        seconds = Math.floor(millis / SECOND);\n        millis %= SECOND;\n      }\n      let s = \"\";\n      if (weeks !== void 0) {\n        s += weeks + \"w\";\n      }\n      if (days !== void 0) {\n        s += (s.length !== 0 ? separator : \"\") + days + \"d\";\n      }\n      if (hours !== void 0) {\n        s += (s.length !== 0 ? separator : \"\") + hours + \"h\";\n      }\n      if (minutes !== void 0) {\n        s += (s.length !== 0 ? separator : \"\") + minutes + \"m\";\n      }\n      if (seconds !== void 0 || millis === 0) {\n        s += (s.length !== 0 ? separator : \"\") + (seconds !== void 0 ? seconds : 0) + \"s\";\n      }\n      if (millis !== 0 && s.length === 0) {\n        s += millis + \"ms\";\n      }\n      return s;\n    } else {\n      return \"\" + millis;\n    }\n  }\n}\nTag.Format = Format;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output} from \"./Output\";\nimport {Format} from \"./Format\";\nimport {Debug} from \"./Debug\";\n\n/**\n * Either an [[InputSettings]] instance, or an [[InputSettingsInit]] object\n * initializer.\n */\nexport type AnyInputSettings = InputSettings | InputSettingsInit;\n\nexport interface InputSettingsInit {\n  isStripped?: boolean;\n}\n\n/**\n * [[Input]] consumption parameters.  `InputSettings` provide contextual\n * configuration parameters to input consumers, such as [[Parser Parsers]].\n */\nexport class InputSettings implements Debug, HashCode {\n  /** @hidden */\n  readonly _isStrict: boolean;\n\n  protected constructor(isStripped: boolean) {\n    this._isStrict = isStripped;\n  }\n\n  /**\n   * Returns `true` if input consumers should not include diagnostic metadata\n   * in generated output.\n   */\n  isStripped(): boolean;\n\n  /**\n   * Returns a copy of these settings with the given `isStripped` flag.\n   */\n  isStripped(isStripped: boolean): InputSettings;\n\n  isStripped(isStripped?: boolean): boolean | InputSettings {\n    if (isStripped === void 0) {\n      return this._isStrict;\n    } else {\n      return this.copy(isStripped);\n    }\n  }\n\n  protected copy(isStripped: boolean): InputSettings {\n    return InputSettings.create(isStripped);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof InputSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InputSettings) {\n      return that.canEqual(this) && this._isStrict === that._isStrict;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (InputSettings._hashSeed === void 0) {\n      InputSettings._hashSeed = Murmur3.seed(InputSettings);\n    }\n    return Murmur3.mash(Murmur3.mix(InputSettings._hashSeed,\n        Murmur3.hash(this._isStrict)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"InputSettings\").write(46/*'.'*/);\n    if (!this._isStrict) {\n      output = output.write(\"standard\");\n    } else {\n      output = output.write(\"stripped\");\n    }\n    output = output.write(40/*'('*/).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n  private static _standard?: InputSettings;\n  private static _stripped?: InputSettings;\n\n  /**\n   * Returns `InputSettings` configured to include diagnostic metadata in\n   * generated output.\n   */\n  static standard(): InputSettings {\n    if (InputSettings._standard === void 0) {\n      InputSettings._standard = new InputSettings(false);\n    }\n    return InputSettings._standard;\n  }\n\n  /**\n   * Returns `InputSettings` configured to not include diagnostic metadata in\n   * generated output.\n   */\n  static stripped(): InputSettings {\n    if (InputSettings._stripped === void 0) {\n      InputSettings._stripped = new InputSettings(false);\n    }\n    return InputSettings._stripped;\n  }\n\n  /**\n   * Returns `InputSettings` configured to not include diagnostic metadata in\n   * generated output, if `isStripped` is `true`.\n   */\n  static create(isStripped?: boolean): InputSettings {\n    if (isStripped) {\n      return InputSettings.stripped();\n    }\n    return InputSettings.standard();\n  }\n\n  /**\n   * Converts the loosely typed `settings` to an instance of `InputSettings`.\n   */\n  static fromAny(settings: AnyInputSettings | undefined): InputSettings {\n    if (settings instanceof InputSettings) {\n      return settings;\n    } else if (typeof settings === \"object\" && settings !== null) {\n       return InputSettings.create(settings.isStripped);\n    } else {\n      return InputSettings.standard();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mark} from \"./Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {Input} from \"./Input\";\n\n/**\n * Non-blocking token stream buffer.\n */\nexport abstract class InputBuffer extends Input {\n  abstract isPart(): boolean;\n  abstract isPart(isPart: boolean): InputBuffer;\n\n  abstract index(): number;\n  abstract index(index: number): InputBuffer;\n\n  abstract limit(): number;\n  abstract limit(limit: number): InputBuffer;\n\n  abstract capacity(): number;\n\n  abstract remaining(): number;\n\n  abstract has(index: number): boolean;\n\n  abstract get(index: number): number;\n\n  abstract set(index: number, token: number): void;\n\n  abstract step(offset?: number): InputBuffer;\n\n  abstract seek(mark: Mark): InputBuffer;\n\n  abstract id(): unknown | null;\n  abstract id(id: unknown | null): InputBuffer;\n\n  abstract mark(): Mark;\n  abstract mark(mark: Mark): Input;\n\n  abstract settings(): InputSettings;\n  abstract settings(settings: AnyInputSettings): Input;\n\n  abstract clone(): InputBuffer;\n\n  private static _emptyBuffer?: InputBuffer;\n\n  private static _doneBuffer?: InputBuffer;\n\n  /**\n   * Returns an `InputBuffer}` in the _empty_ state.\n   */\n  static empty(id: unknown | null = null, mark: Mark = Mark.zero(),\n               settings: InputSettings = InputSettings.standard()): InputBuffer {\n    if (id === null && mark === Mark.zero() && settings === InputSettings.standard()) {\n      if (InputBuffer._emptyBuffer === void 0) {\n        InputBuffer._emptyBuffer = new InputBufferEmpty(null, Mark.zero(), InputSettings.standard());\n      }\n      return InputBuffer._emptyBuffer;\n    }\n    return new InputBufferEmpty(id, mark, settings);\n  }\n\n  /**\n   * Returns an `InputBuffer` in the _done_ state.\n   */\n  static done(id: unknown | null = null, mark: Mark = Mark.zero(),\n              settings: InputSettings = InputSettings.standard()): InputBuffer {\n    if (id === null && mark === Mark.zero() && settings === InputSettings.standard()) {\n      if (InputBuffer._doneBuffer === void 0) {\n        InputBuffer._doneBuffer = new InputBufferDone(null, Mark.zero(), InputSettings.standard());\n      }\n      return InputBuffer._doneBuffer;\n    }\n    return new InputBufferDone(id, mark, settings);\n  }\n\n  /**\n   * Returns an `InputBuffer` in the _error_ state, with the given input `error`.\n   */\n  static error(error: Error, id: unknown | null = null, mark: Mark = Mark.zero(),\n               settings: InputSettings = InputSettings.standard()): InputBuffer {\n    return new InputBufferError(error, id, mark, settings);\n  }\n}\n\n/** @hidden */\nclass InputBufferEmpty extends InputBuffer {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n\n  constructor(id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): InputBuffer;\n  isPart(isPart?: boolean): boolean | InputBuffer {\n    if (isPart === void 0) {\n      return true;\n    } else if (isPart) {\n      return this;\n    } else {\n      return InputBuffer.done(this._id, this._mark, this._settings);\n    }\n  }\n\n  index(): number;\n  index(index: number): InputBuffer;\n  index(index?: number): number | InputBuffer {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): InputBuffer;\n  limit(limit?: number): number | InputBuffer {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new InputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(offset?: number): InputBuffer {\n    const error = new InputException(\"empty step\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"empty seek\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): InputBuffer;\n  id(id?: unknown | null): unknown | null | InputBuffer {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return InputBuffer.empty(id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): InputBuffer;\n  mark(mark?: Mark): Mark | InputBuffer {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return InputBuffer.empty(this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): InputBuffer;\n  settings(settings?: InputSettings): InputSettings | InputBuffer {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return InputBuffer.empty(this._id, this._mark, settings);\n    }\n  }\n\n  clone(): InputBuffer {\n    return this;\n  }\n}\n\n/** @hidden */\nclass InputBufferDone extends InputBuffer {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n\n  constructor(id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): InputBuffer;\n  isPart(isPart?: boolean): boolean | InputBuffer {\n    if (isPart === void 0) {\n      return false;\n    } else if (isPart) {\n      return InputBuffer.empty(this._id, this._mark, this._settings);\n    } else {\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): InputBuffer;\n  index(index?: number): number | InputBuffer {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): InputBuffer;\n  limit(limit?: number): number | InputBuffer {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new InputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(offset?: number): InputBuffer {\n    const error = new InputException(\"done step\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"done seek\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): InputBuffer;\n  id(id?: unknown | null): unknown | null | InputBuffer {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return InputBuffer.done(id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): InputBuffer;\n  mark(mark?: Mark): Mark | InputBuffer {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return InputBuffer.done(this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): InputBuffer;\n  settings(settings?: InputSettings): InputSettings | InputBuffer {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return InputBuffer.done(this._id, this._mark, settings);\n    }\n  }\n\n  clone(): InputBuffer {\n    return this;\n  }\n}\n\n/** @hidden */\nclass InputBufferError extends InputBuffer {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n  /** @hidden */\n  readonly _error: Error;\n\n  constructor(error: Error, id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._error = error;\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): InputBuffer;\n  isPart(isPart?: boolean): boolean | InputBuffer {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): InputBuffer;\n  index(index?: number): number | InputBuffer {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): InputBuffer;\n  limit(limit?: number): number | InputBuffer {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new InputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(offset?: number): InputBuffer {\n    const error = new InputException(\"error step\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"error seek\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): InputBuffer;\n  id(id?: unknown | null): unknown | null | InputBuffer {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return InputBuffer.error(this._error, id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): InputBuffer;\n  mark(mark?: Mark): Mark | InputBuffer {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return InputBuffer.error(this._error, this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): InputBuffer;\n  settings(settings?: InputSettings): InputSettings | InputBuffer {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return InputBuffer.error(this._error, this._id, this._mark, settings);\n    }\n  }\n\n  clone(): InputBuffer {\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Format} from \"./Format\";\nimport {OutputException} from \"./OutputException\";\nimport {Output} from \"./Output\";\n\n/**\n * Non-blocking token stream buffer.\n */\nexport abstract class OutputBuffer<T = unknown> extends Output<T> {\n  abstract isPart(): boolean;\n  abstract isPart(isPart: boolean): OutputBuffer<T>;\n\n  abstract index(): number;\n  abstract index(index: number): OutputBuffer<T>;\n\n  abstract limit(): number;\n  abstract limit(limit: number): OutputBuffer<T>;\n\n  abstract capacity(): number;\n\n  abstract remaining(): number;\n\n  abstract has(index: number): boolean;\n\n  abstract get(index: number): number;\n\n  abstract set(index: number, token: number): void;\n\n  abstract write(token: number): OutputBuffer<T>;\n  abstract write(string: string): OutputBuffer<T>;\n\n  writeln(string?: string): OutputBuffer<T> {\n    if (typeof string === \"string\") {\n      this.write(string);\n    }\n    return this.write(this.settings().lineSeparator());\n  }\n\n  display(object: unknown): OutputBuffer<T> {\n    Format.display(object, this);\n    return this;\n  }\n\n  debug(object: unknown): OutputBuffer<T> {\n    Format.debug(object, this);\n    return this;\n  }\n\n  abstract step(offset?: number): OutputBuffer<T>;\n\n  flush(): OutputBuffer<T> {\n    return this;\n  }\n\n  abstract settings(): OutputSettings;\n  abstract settings(settings: AnyOutputSettings): Output<T>;\n\n  clone(): OutputBuffer<T> {\n    throw new Error();\n  }\n\n  private static _fullBuffer?: OutputBuffer<any>;\n\n  private static _doneBuffer?: OutputBuffer<any>;\n\n  /**\n   * Returns an `OutputBuffer` in the _full_ state, that binds a `null` result.\n   */\n  static full<T>(value: T | null = null, settings: OutputSettings = OutputSettings.standard()): OutputBuffer<T> {\n    if (value === null && settings === OutputSettings.standard()) {\n      if (OutputBuffer._fullBuffer === void 0) {\n        OutputBuffer._fullBuffer = new OutputBufferFull(value, OutputSettings.standard());\n      }\n      return OutputBuffer._fullBuffer;\n    }\n    return new OutputBufferFull<T>(value!, settings);\n\n  }\n\n  /**\n   * Returns an `OutputBuffer` in the _done_ state, that binds a `null` result.\n   */\n  static done<T>(value: T | null = null, settings: OutputSettings = OutputSettings.standard()): OutputBuffer<T> {\n    if (value === null && settings === OutputSettings.standard()) {\n      if (OutputBuffer._doneBuffer === void 0) {\n        OutputBuffer._doneBuffer = new OutputBufferDone(value, OutputSettings.standard());\n      }\n      return OutputBuffer._doneBuffer;\n    }\n    return new OutputBufferDone<T>(value!, settings);\n  }\n\n  /**\n   * Returns an `OutputBuffer` in the _error_ state, with the given output `error`.\n   */\n  static error<T>(error: Error, settings: OutputSettings = OutputSettings.standard()): OutputBuffer<T> {\n    return new OutputBufferError<T>(error, settings);\n  }\n}\n\n/** @hidden */\nclass OutputBufferFull<T> extends OutputBuffer<T> {\n  /** @hidden */\n  readonly _value: T;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(value: T, settings: OutputSettings) {\n    super();\n    this._value = value;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return true;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): OutputBuffer<T>;\n  isPart(isPart?: boolean): boolean | OutputBuffer<T> {\n    if (isPart === void 0) {\n      return true;\n    } else if (isPart) {\n      return OutputBuffer.done(this._value, this._settings);\n    } else {\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): OutputBuffer<T>;\n  index(index?: number): number | OutputBuffer<T> {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): OutputBuffer<T>;\n  limit(limit?: number): number | OutputBuffer<T> {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new OutputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  write(token: number): OutputBuffer<T>;\n  write(string: string): OutputBuffer<T>;\n  write(tokenOrString: number | string): OutputBuffer<T> {\n    return OutputBuffer.error(new OutputException(\"full\"), this._settings);\n  }\n\n  writeln(string?: string): OutputBuffer<T> {\n    return OutputBuffer.error(new OutputException(\"full\"), this._settings);\n  }\n\n  step(offset: number = 1): OutputBuffer<T> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid step\"), this._settings);\n    }\n  }\n\n  bind(): T {\n    return this._value;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): OutputBuffer<T>;\n  settings(settings?: OutputSettings): OutputSettings | OutputBuffer<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return OutputBuffer.full(this._value, settings);\n    }\n  }\n\n  clone(): OutputBuffer<T> {\n    return this;\n  }\n}\n\n/** @hidden */\nclass OutputBufferDone<T> extends OutputBuffer<T> {\n  /** @hidden */\n  readonly _value: T;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(value: T, settings: OutputSettings) {\n    super();\n    this._value = value;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): OutputBuffer<T>;\n  isPart(isPart?: boolean): boolean | OutputBuffer<T> {\n    if (isPart === void 0) {\n      return false;\n    } else if (isPart) {\n      return this;\n    } else {\n      return OutputBuffer.full(this._value, this._settings);\n    }\n  }\n\n  index(): number;\n  index(index: number): OutputBuffer<T>;\n  index(index?: number): number | OutputBuffer<T> {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): OutputBuffer<T>;\n  limit(limit?: number): number | OutputBuffer<T> {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new OutputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  write(token: number): OutputBuffer<T>;\n  write(string: string): OutputBuffer<T>;\n  write(tokenOrString: number | string): OutputBuffer<T> {\n    return OutputBuffer.error(new OutputException(\"done\"), this._settings);\n  }\n\n  writeln(string?: string): OutputBuffer<T> {\n    return OutputBuffer.error(new OutputException(\"done\"), this._settings);\n  }\n\n  step(offset: number = 1): OutputBuffer<T> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid step\"), this._settings);\n    }\n  }\n\n  bind(): T {\n    return this._value;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): OutputBuffer<T>;\n  settings(settings?: OutputSettings): OutputSettings | OutputBuffer<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return OutputBuffer.done(this._value, settings);\n    }\n  }\n\n  clone(): OutputBuffer<T> {\n    return this;\n  }\n}\n\n/** @hidden */\nclass OutputBufferError<T> extends OutputBuffer<T> {\n  /** @hidden */\n  readonly _error: Error;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(error: Error, settings: OutputSettings) {\n    super();\n    this._error = error;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): OutputBuffer<T>;\n  isPart(isPart?: boolean): boolean | OutputBuffer<T> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): OutputBuffer<T>;\n  index(index?: number): number | OutputBuffer<T> {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): OutputBuffer<T>;\n  limit(limit?: number): number | OutputBuffer<T> {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new OutputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  write(token: number): OutputBuffer<T>;\n  write(string: string): OutputBuffer<T>;\n  write(tokenOrString: number | string): OutputBuffer<T> {\n    return this;\n  }\n\n  writeln(string?: string): OutputBuffer<T> {\n    return this;\n  }\n\n  step(offset: number = 1): OutputBuffer<T> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid step\"), this._settings);\n    }\n  }\n\n  bind(): T {\n    throw new OutputException();\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): OutputBuffer<T>;\n  settings(settings?: OutputSettings): OutputSettings | OutputBuffer<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return OutputBuffer.error(this._error, settings);\n    }\n  }\n\n  clone(): OutputBuffer<T> {\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\n\n/**\n * Stylized text output utility functions.\n */\nexport class OutputStyle {\n  private constructor() {\n  }\n\n  /**\n   * Writes the ASCII reset escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static reset(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold (increased intensity) escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static bold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII faint (decreased intensity) escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static faint(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(50/*'2'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII black foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static black(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(48/*'0'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII red foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static red(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(49/*'1'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII green foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static green(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(50/*'2'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII yellow foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static yellow(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(51/*'3'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII blue foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static blue(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(52/*'4'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII magenta foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static magenta(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(53/*'5'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII cyan foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static cyan(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(54/*'6'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII gray foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static gray(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(55/*'7'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold black foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static blackBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(48/*'0'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold red foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static redBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(49/*'1'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold green foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static greenBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(50/*'2'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold yellow foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static yellowBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(51/*'3'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold blue foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static blueBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(52/*'4'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold magenta foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static magentaBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(53/*'5'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold cyan foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static cyanBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(54/*'6'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold gray foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static grayBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(55/*'7'*/).write(109/*'m'*/);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Writer} from \"./Writer\";\nimport {Format} from \"./Format\";\nimport {Unicode} from \"./Unicode\";\nimport {Base10NumberParser} from \"./Base10NumberParser\";\nimport {Base10IntegerWriter} from \"./Base10IntegerWriter\";\n\n/**\n * Base-10 (decimal) encoding [[Parser]]/[[Writer]] factory.\n */\nexport class Base10 {\n  private constructor() {\n    // nop\n  }\n\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-10 digit.\n   */\n  static isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/;\n  }\n\n  /**\n   * Returns the decimal quantity between `0` (inclusive) and `10` (exclusive)\n   * represented by the base-10 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-10 digit.\n   */\n  static decodeDigit(c: number): number {\n    if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n      return c - 48/*'0'*/;\n    } else {\n      const message = Unicode.stringOutput();\n      message.write(\"Invalid base-10 digit: \");\n      Format.debugChar(c, message);\n      throw new Error(message.bind());\n    }\n  }\n\n  /**\n   * Returns the Unicode code point of the base-10 digit that encodes the given\n   * decimal quantity between `0` (inclusive) and `10` (exclusive).\n   */\n  static encodeDigit(b: number): number {\n    if (b >= 0 && b <= 9) {\n      return 48/*'0'*/ + b;\n    } else {\n      throw new Error(\"\" + b);\n    }\n  }\n\n  /**\n   * Returns the number of whole decimal digits in the given absolute `value`.\n   */\n  static countDigits(value: number): number {\n    let size = 0;\n    do {\n      size += 1;\n      value = (value / 10) | 0;\n    } while (value !== 0);\n    return size;\n  }\n\n  static integerParser(): Parser<number> {\n    return new Base10.NumberParser(void 0, void 0, 0);\n  }\n\n  static parseInteger(input: Input): Parser<number> {\n    return Base10.NumberParser.parse(input, void 0, void 0, 0);\n  }\n\n  static decimalParser(): Parser<number> {\n    return new Base10.NumberParser(void 0, void 0, 1);\n  }\n\n  static parseDecimal(input: Input): Parser<number> {\n    return Base10.NumberParser.parse(input, void 0, void 0, 1);\n  }\n\n  static numberParser(): Parser<number> {\n    return new Base10.NumberParser();\n  }\n\n  static parseNumber(input: Input): Parser<number> {\n    return Base10.NumberParser.parse(input);\n  }\n\n  /**\n   * Returns a `Writer` that, when fed an input `number` value, returns a\n   * continuation that writes the base-10 (decimal) encoding of the input value.\n   */\n  static integerWriter(): Writer<number, unknown>;\n  /**\n   * Returns a `Writer` continuation that writes the base-10 (decimal) encoding\n   * of the `input` value.\n   */\n  static integerWriter(input: number): Writer<unknown, number>;\n  static integerWriter(input?: number): Writer<unknown, unknown> {\n    if (input === void 0) {\n      return new Base10.IntegerWriter(void 0, 0);\n    } else {\n      return new Base10.IntegerWriter(void 0, input);\n    }\n  }\n\n  /**\n   * Writes the base-10 (decimal) encoding of the `input` value to the `output`,\n   * returning a `Writer` continuation that knows how to write any remaining\n   * output that couldn't be immediately generated.\n   */\n  static writeInteger(input: number, output: Output): Writer<unknown, unknown> {\n    return Base10.IntegerWriter.write(output, void 0, input);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static NumberParser: typeof Base10NumberParser; // defined by Base10NumberParser\n  /** @hidden */\n  static IntegerWriter: typeof Base10IntegerWriter; // defined by Base10IntegerWriter\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects, Severity} from \"@swim/util\";\nimport {Tag} from \"./Tag\";\nimport {Mark} from \"./Mark\";\nimport {Input} from \"./Input\";\nimport {OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {OutputStyle} from \"./OutputStyle\";\nimport {Format} from \"./Format\";\nimport {Display} from \"./Display\";\nimport {Unicode} from \"./Unicode\";\nimport {Base10} from \"./Base10\";\n\n/**\n * Informational message attached to an input location.\n */\nexport class Diagnostic implements Display {\n  /** @hidden */\n  readonly _input: Input;\n  /** @hidden */\n  readonly _tag: Tag;\n  /** @hidden */\n  readonly _severity: Severity;\n  /** @hidden */\n  readonly _message: string | null;\n  /** @hidden */\n  readonly _note: string | null;\n  /** @hidden */\n  readonly _cause: Diagnostic | null;\n\n  constructor(input: Input, tag: Tag, severity: Severity, message: string | null,\n              note: string | null, cause: Diagnostic | null) {\n    this._input = input;\n    this._tag = tag;\n    this._severity = severity;\n    this._message = message;\n    this._note = note;\n    this._cause = cause;\n  }\n\n  /**\n   * Returns the `Input` source to which this diagnostic is attached.\n   */\n  input(): Input {\n    return this._input.clone();\n  }\n\n  /**\n   * Returns the annotated location `Tag` in the `input` to which this\n   * diagnostic is attached.\n   */\n  tag(): Tag {\n    return this._tag;\n  }\n\n  /**\n   * Returns the level of importance of this diagnostic.\n   */\n  severity(): Severity {\n    return this._severity;\n  }\n\n  /**\n   * Returns the help message that describes this diagnostic.\n   */\n  message(): string | null {\n    return this._message;\n  }\n\n  /**\n   * Returns an informative comment on the source context to which this\n   * diagnostic is attached.\n   */\n  note(): string | null {\n    return this._note;\n  }\n\n  /**\n   * Returns the `Diagnostic` cause of this diagnostic, forming a linked chain\n   * of diagnostics, or `null` if this diagnostic has no cause.\n   */\n  cause(): Diagnostic | null {\n    return this._cause;\n  }\n\n  private lineDigits(): number {\n    let digits = Base10.countDigits(this._tag.end().line());\n    if (this._cause !== null) {\n      digits = Math.max(digits, this._cause.lineDigits());\n    }\n    return digits;\n  }\n\n  display(output: Output): void {\n    const input = this._input.clone();\n    const start = this._tag.start();\n    const end = this._tag.end();\n    const severity = this._severity;\n    const message = this._message;\n    const note = this._note;\n    const cause = this._cause;\n    const contextLines = 2;\n    const lineDigits = this.lineDigits();\n    Diagnostic.displayDiagnostic(input, start, end, severity, message, note,\n                                 cause, contextLines, lineDigits, output);\n  }\n\n  toString(settings?: OutputSettings): string {\n    return Format.display(this, settings);\n  }\n\n  static from(input: Input, tag: Tag, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static from(input: Input, tag: Tag, severity: Severity, message: string | null,\n              diagnostic?: Diagnostic | null): Diagnostic;\n  static from(input: Input, tag: Tag, severity: Severity, message: string | null,\n              note: string | null, cause?: Diagnostic | null): Diagnostic;\n  static from(input: Input, tag: Tag, severity: Severity, message?: Diagnostic | string | null,\n              note?: Diagnostic | string | null, cause?: Diagnostic | null): Diagnostic {\n    if (message instanceof Diagnostic) {\n      cause = message;\n      note = null;\n      message = null;\n    } else if (note instanceof Diagnostic) {\n      cause = note;\n      note = null;\n    }\n    input = input.clone();\n    if (message === void 0) {\n      message = null;\n    }\n    if (note === void 0) {\n      note = null;\n    }\n    if (cause === void 0) {\n      cause = null;\n    }\n    return new Diagnostic(input, tag, severity, message, note, cause);\n  }\n\n  static message(message: string, input: Input, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity?: Diagnostic | Severity | string | null,\n                 note?: Diagnostic | string | null, cause?: Diagnostic | null): Diagnostic {\n    if (severity === null || severity instanceof Diagnostic) {\n      cause = severity;\n      severity = void 0;\n    } else if (typeof severity === \"string\") {\n      note = severity;\n      severity = void 0;\n    }\n    if (note === null || note instanceof Diagnostic) {\n      cause = note;\n      note = void 0;\n    }\n    if (note === void 0) {\n      note = null;\n    }\n    if (severity === void 0) {\n      severity = Severity.error();\n    }\n\n    const mark = input.mark();\n    const source = input.clone();\n    source.seek();\n    return Diagnostic.from(source, mark, severity, message, note, cause);\n  }\n\n  static unexpected(input: Input, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity?: Diagnostic | Severity | string | null,\n                    note?: Diagnostic | string | null, cause?: Diagnostic | null): Diagnostic {\n    if (severity === null || severity instanceof Diagnostic) {\n      cause = severity;\n      severity = void 0;\n    } else if (typeof severity === \"string\") {\n      note = severity;\n      severity = void 0;\n    }\n    if (note === null || note instanceof Diagnostic) {\n      cause = note;\n      note = void 0;\n    }\n    if (note === void 0) {\n      note = null;\n    }\n    if (severity === void 0) {\n      severity = Severity.error();\n    }\n\n    let message;\n    if (input.isCont()) {\n      const output = Unicode.stringOutput().write(\"unexpected\").write(32/*' '*/);\n      Format.debugChar(input.head(), output);\n      message = output.bind();\n    } else {\n      message = \"unexpected end of input\";\n    }\n    const mark = input.mark();\n    const source = input.clone();\n    source.seek();\n    return Diagnostic.from(source, mark, severity, message, note, cause);\n  }\n\n  static expected(expected: string | number, input: Input, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity?: Diagnostic | Severity | string | null,\n                  note?: Diagnostic | string | null, cause?: Diagnostic | null): Diagnostic {\n    if (severity === null || severity instanceof Diagnostic) {\n      cause = severity;\n      severity = void 0;\n    } else if (typeof severity === \"string\") {\n      note = severity;\n      severity = void 0;\n    }\n    if (note === null || note instanceof Diagnostic) {\n      cause = note;\n      note = void 0;\n    }\n    if (note === void 0) {\n      note = null;\n    }\n    if (severity === void 0) {\n      severity = Severity.error();\n    }\n\n    let output = Unicode.stringOutput().write(\"expected\").write(32/*' '*/);\n    if (typeof expected === \"number\") {\n      Format.debugChar(expected, output);\n    } else {\n      output = output.write(expected);\n    }\n    output = output.write(44/*','*/).write(32/*' '*/).write(\"but found\").write(32/*' '*/);\n    if (input.isCont()) {\n      Format.debugChar(input.head(), output);\n    } else {\n      output = output.write(\"end of input\");\n    }\n    const message = output.bind();\n    const mark = input.mark();\n    const source = input.clone();\n    source.seek();\n    return Diagnostic.from(source, mark, severity, message, note, cause);\n  }\n\n  private static displayDiagnostic(input: Input, start: Mark, end: Mark,\n                                   severity: Severity, message: string | null,\n                                   note: string | null, cause: Diagnostic | null,\n                                   contextLines: number, lineDigits: number,\n                                   output: Output): void {\n    do {\n      if (message !== null) {\n        Diagnostic.displayMessage(severity, message, output);\n        output = output.writeln();\n      }\n      Diagnostic.displayAnchor(input, start, lineDigits, output);\n      output = output.writeln();\n      const next = Diagnostic.displayContext(input, start, end, severity, note,\n                                             cause, contextLines, lineDigits, output);\n      if (next !== null) {\n        output = output.writeln();\n        input = next._input.clone();\n        start = next._tag.start();\n        end = next._tag.end();\n        severity = next._severity;\n        message = next._message;\n        note = next._note;\n        cause = next._cause;\n      } else {\n        break;\n      }\n    } while (true);\n  }\n\n  /** @hidden */\n  static displayMessage(severity: Severity, message: string | null, output: Output): void {\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(severity.label());\n    OutputStyle.reset(output);\n    OutputStyle.bold(output);\n    output = output.write(58/*':'*/);\n    if (message !== null) {\n      output = output.write(32/*' '*/).write(message);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayAnchor(input: Input, start: Mark, lineDigits: number,\n                               output: Output): void {\n    Diagnostic.displayLineLeadArrow(lineDigits, output);\n    output = output.write(32/*' '*/);\n    const id = input.id();\n    if (id !== null) {\n      Format.display(id, output);\n    }\n    output = output.write(58/*':'*/);\n    Format.displayNumber(start._line, output);\n    output = output.write(58/*':'*/);\n    Format.displayNumber(start._column, output);\n    output = output.writeln();\n\n    Diagnostic.displayLineLead(lineDigits, output);\n  }\n\n  private static displayCause(cause: Diagnostic, contextLines: number,\n                              lineDigits: number, output: Output): Diagnostic | null {\n    const input = cause._input.clone();\n    const start = cause._tag.start();\n    const end = cause._tag.end();\n    const severity = cause._severity;\n    const note = cause._note;\n    const next = cause._cause;\n    return Diagnostic.displayContext(input, start, end, severity, note, next,\n                                     contextLines, lineDigits, output);\n  }\n\n  private static displayContext(input: Input, start: Mark, end: Mark,\n                                severity: Severity, note: string | null,\n                                cause: Diagnostic | null, contextLines: number,\n                                lineDigits: number, output: Output): Diagnostic | null {\n    let next = cause;\n    const sameCause = cause !== null && cause._message === null\n                   && Objects.equal(input.id(), cause._input.id());\n    const causeOrder = sameCause ? (start._offset <= cause!._tag.start()._offset ? -1 : 1) : 0;\n    if (causeOrder === 1) {\n      next = Diagnostic.displayCause(cause!, contextLines, lineDigits, output);\n      output = output.writeln();\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.writeln();\n    }\n    Diagnostic.displayLines(input, start, end, severity, contextLines, lineDigits, output);\n    if (note !== null) {\n      Diagnostic.displayNote(note, lineDigits, output);\n    }\n    if (causeOrder === -1) {\n      output = output.writeln();\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.writeln();\n      next = Diagnostic.displayCause(cause!, contextLines, lineDigits, output);\n    }\n    return next;\n  }\n\n  private static displayLines(input: Input, start: Mark, end: Mark,\n                              severity: Severity, contextLines: number,\n                              lineDigits: number, output: Output): void {\n    const startLine = start.line();\n    const endLine = end.line();\n    let line = input.line();\n\n    while (line < startLine) {\n      Diagnostic.consumeLineText(input, line);\n      line += 1;\n    }\n\n    if (endLine - startLine > 2 * contextLines + 2) {\n      while (line <= startLine + contextLines) {\n        Diagnostic.displayLine(input, start, end, severity, line, lineDigits, output);\n        line += 1;\n      }\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.write(32/*' '*/);\n      Diagnostic.formatSeverity(severity, output);\n      output = output.write(124/*'|'*/);\n      OutputStyle.reset(output);\n      output = output.writeln();\n      while (line < endLine - contextLines) {\n        Diagnostic.consumeLineText(input, line);\n        line += 1;\n      }\n    }\n\n    while (line <= endLine) {\n      Diagnostic.displayLine(input, start, end, severity, line, lineDigits, output);\n      line += 1;\n    }\n  }\n\n  private static displayNote(note: string | null, lineDigits: number, output: Output): void {\n    output = output.writeln();\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.writeln();\n    Diagnostic.displayLineComment('note', note, lineDigits, output);\n  }\n\n  private static displayLine(input: Input, start: Mark, end: Mark,\n                             severity: Severity, line: number,\n                             lineDigits: number, output: Output): void {\n    if (start._line === line && end._line === line) {\n      Diagnostic.displaySingleLine(input, start, end, severity, line, lineDigits, output);\n    } else if (start._line === line) {\n      Diagnostic.displayStartLine(input, start, severity, line, lineDigits, output);\n    } else if (end._line === line) {\n      Diagnostic.displayEndLine(input, end, severity, line, lineDigits, output);\n    } else {\n      Diagnostic.displayMidLine(input, severity, line, lineDigits, output);\n    }\n  }\n\n  private static displaySingleLine(input: Input, start: Mark, end: Mark,\n                                   severity: Severity, line: number,\n                                   lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    for (let i = 1; i < input.column(); i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/);\n    let i = 1;\n    while (i < start._column) {\n      output = output.write(32/*' '*/);\n      i += 1;\n    }\n    Diagnostic.formatSeverity(severity, output);\n    while (i <= end._column) {\n      output = output.write(94/*'^'*/);\n      i += 1;\n    }\n    if (end._note !== null) {\n      output = output.write(32/*' '*/).write(end._note);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayStartLine(input: Input, start: Mark,\n                                  severity: Severity, line: number,\n                                  lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/).write(32/*' '*/).write(32/*' '*/);\n    for (let i = 1; i < input.column(); i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/).write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(95/*'_'*/);\n    let i = 1;\n    while (i < start._column) {\n      output = output.write(95/*'_'*/);\n      i += 1;\n    }\n    output = output.write(94/*'^'*/);\n    if (start._note !== null) {\n      output = output.write(32/*' '*/).write(start._note);\n    }\n    OutputStyle.reset(output);\n    output = output.writeln();\n  }\n\n  private static displayEndLine(input: Input, end: Mark,\n                                severity: Severity, line: number,\n                                lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/);\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/).write(95/*'_'*/);\n    let i = 1;\n    while (i < end._column) {\n      output = output.write(95/*'_'*/);\n      i += 1;\n    }\n    output = output.write(94/*'^'*/);\n    if (end._note !== null) {\n      output = output.write(32/*' '*/).write(end._note);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayMidLine(input: Input, severity: Severity, line: number,\n                                lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/);\n    Diagnostic.displayLineText(input, line, output);\n  }\n\n  private static displayLineComment(label: string, comment: string | null,\n                                    lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadComment(lineDigits, output);\n    output = output.write(32/*' '*/);\n    OutputStyle.bold(output);\n    output = output.write(label).write(58/*':'*/);\n    OutputStyle.reset(output);\n    if (comment !== null) {\n      output = output.write(32/*' '*/).write(comment);\n    }\n  }\n\n  private static displayLineLead(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    const padding = 1 + lineDigits;\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadComment(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    const padding = 1 + lineDigits;\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    output = output.write(61/*'='*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadArrow(lineDigits: number, output: Output): void {\n    for (let i = 0; i < lineDigits; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    OutputStyle.blueBold(output);\n    output = output.write(45/*'-'*/).write(45/*'-'*/).write(62/*'>'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadEllipsis(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    for (let i = 0; i < lineDigits; i += 1) {\n      output = output.write(46/*'.'*/);\n    }\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/).write(32/*' '*/);\n  }\n\n  private static displayLineLeadNumber(line: number, lineDigits: number, output: Output): void {\n    const padding = lineDigits - Base10.countDigits(line);\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    OutputStyle.blueBold(output);\n    Format.displayNumber(line, output);\n    output = output.write(32/*' '*/).write(124/*'|'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineText(input: Input, line: number, output: Output): void {\n    while (input.isCont() && input.line() === line) {\n      output = output.write(input.head());\n      input = input.step();\n    }\n    if (input.line() === line) {\n      output = output.writeln();\n    }\n  }\n\n  private static consumeLineText(input: Input, line: number): void {\n    while (input.isCont() && input.line() === line) {\n      input = input.step();\n    }\n  }\n\n  private static formatSeverity(severity: Severity, output: Output): void {\n    switch (severity.level()) {\n      case Severity.FATAL_LEVEL:\n      case Severity.ALERT_LEVEL:\n      case Severity.ERROR_LEVEL:\n        OutputStyle.redBold(output);\n        break;\n      case Severity.WARNING_LEVEL:\n        OutputStyle.yellowBold(output);\n        break;\n      case Severity.NOTE_LEVEL:\n        OutputStyle.greenBold(output);\n        break;\n      case Severity.INFO_LEVEL:\n        OutputStyle.cyanBold(output);\n        break;\n      case Severity.DEBUG_LEVEL:\n      case Severity.TRACE_LEVEL:\n      default:\n        OutputStyle.magentaBold(output);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when a [[Parser]] parses invalid syntax.\n */\nimport {Diagnostic} from \"./Diagnostic\";\n\nexport class ParserException extends Error {\n  readonly diagnostic?: Diagnostic;\n\n  constructor(message?: Diagnostic | string) {\n    super(message instanceof Diagnostic ? message.message() || void 0 : message);\n    if (message instanceof Diagnostic) {\n      this.diagnostic = message;\n    }\n    (this as any).__proto__ = ParserException.prototype;\n  }\n\n  toString(): string {\n    if (this.diagnostic) {\n      return this.diagnostic.toString();\n    } else {\n      return super.toString();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {ParserException} from \"./ParserException\";\nimport {Diagnostic} from \"./Diagnostic\";\n\n/**\n * Continuation of how to parse subsequent [[Input]] tokens from a stream.\n * `Parser` enables efficient, interruptible parsing of network protocols and\n * data formats, without intermediate buffering.\n *\n * ### Input tokens\n * A `Parser` reads tokens from an `Input` reader.  Input tokens are modeled as\n * primitive numbers, commonly representing Unicode code points, or raw octets.\n * Each `Parser` implementation specifies the semantic type of input tokens it\n * consumes.\n *\n * ### Parser states\n * A `Parser` is always in one of three states: _cont_​inue, _done_, or _error_.\n * The _cont_ state indicates that [[feed]] is ready to consume `Input`; the\n * _done_ state indicates that parsing terminated successfully, and that\n * [[bind]] will return the parsed result; the _error_ state indicates that\n * parsing terminated in failure, and that [[trap]] will return the parse error.\n * `Parser` subclasses default to the _cont_ state.\n *\n * ### Feeding input\n * The [[feed]] method incrementally parses as much `Input` as it can, before\n * returning another `Parser` that represents the continuation of how to parse\n * additional `Input`.  The `Input` passed to `feed` is only guaranteed to be\n * valid for the duration of the method call; references to the provided `Input`\n * instance must not be stored.\n *\n * ### Parser results\n * A `Parser` produces a parsed result of type `O`, obtained via the [[bind]]\n * method.  `bind` is only guaranteed to return a result when in the _done_\n * state; though `bind` may optionally make available partial results in other\n * states.  A failed `Parser` provides a parse error via the [[trap]] method.\n * `trap` is only guaranteed to return an error when in the _error_ state.\n *\n * ### Continuations\n * A `Parser` instance represents a continuation of how to parse remaining\n * `Input`.  Rather than parsing a complete input in one go, a `Parser` takes\n * an `Input` chunk and returns another `Parser` instance that knows how to\n * parse subsequent `Input` chunks.  This enables non-blocking, incremental\n * parsing that can be interrupted whenever an `Input` reader runs out of\n * immediately available data.  A `Parser` terminates by returning a\n * continuation in either the _done_ state, or the _error_ state.\n * [[Parser.done]] returns a `Parser` in the _done_ state.  [[Parser.error]]\n * returns a `Parser` in the _error_ state.\n *\n * ### Iteratees\n * `Parser` is an [Iteratee](https://en.wikipedia.org/wiki/Iteratee).  Though\n * unlike strictly functional iteratees, a `Parser` statefully iterates over\n * its `Input`, rather than allocating an object for each incremental input\n * continutaion.  This internal mutability minimizes garbage collector memory\n * pressure, without violating the functional Iteratee abstraction, provided\n * that `feed` logically takes exclusive ownership of its `Input` when invoked,\n * and logically returns ownership of the `Input` in a state that's consistent\n * with the returned `Parser` continuation.\n *\n * ### Immutability\n * A `Parser` should be immutable.  Specifically, an invocation of `feed`\n * should not alter the behavior of future calls to `feed` on the same `Parser`\n * instance.  A `Parser` should only mutate its internal state if it's essential\n * to do so, such as for critical path performance reasons.\n *\n * ### Backtracking\n * `feed` can internally [[Input.clone clone]] its `Input`, if it might need to\n * backtrack.  Keep in mind that, because `Input` is only valid for the duration\n * of a call to `feed`, input must be internally buffered if it needs to be\n * preserved between `feed` invocations.\n *\n * ### Forking\n * The [[fork]] method passes an out-of-band condition to a `Parser`, yielding\n * a `Parser` continuation whose behavior may be altered by the given condition.\n * For example, an HTML `Parser` might `fork` an inner text parser to directly\n * parse an embedded micro format out of an HTML element, based on some\n * out-of-band schema information.  The types of conditions accepted by `fork`,\n * and their intended semantics, are implementation defined.\n */\nexport abstract class Parser<O> {\n  /**\n   * Returns `true` when [[feed]] is able to consume `Input`.  i.e. this\n   * `Parser` is in the _cont_ state.\n   */\n  isCont(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` when parsing has terminated successfully, and [[bind]] will\n   * return the parsed result.  i.e. this `Parser` is in the _done_ state.\n   */\n  isDone(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns `true` when parsing has terminated in failure, and [[trap]] will\n   * return the parse error.  i.e. this `Parser` is in the _error_ state.\n   */\n  isError(): boolean {\n    return false;\n  }\n\n  /**\n   * Incrementally parses as much `Input` as possible, and returns another\n   * `Parser` that represents the continuation of how to parse additional\n   * `Input`.  The given `input` is only guaranteed to be valid for the\n   * duration of the method call; references to `input` must not be stored.\n   */\n\n  /**\n   * Incrementally parses as much `input` as possible, and returns another\n   * `Parser` that represents the continuation of how to parse additional\n   * `Input`.  If `input` enters the _done_ state, `feed` _must_ return a\n   * terminated `Parser`, i.e. a `Parser` in the _done_ state, or in the\n   * _error_ state.  The given `input` is only guaranteed to be valid for the\n   * duration of the method call; references to `input` must not be stored.\n   */\n  abstract feed(input: Input): Parser<O>;\n\n  /**\n   * Returns a `Parser` continuation whose behavior may be altered by the\n   * given out-of-band `condition`.\n   */\n  fork(condition: unknown): Parser<O> {\n    return this;\n  }\n\n  /**\n   * Returns the parsed result.  Only guaranteed to return a result when in the\n   * _done_ state.\n   *\n   * @throws `Error` if this `Parser is not in the _done_ state.\n   */\n  bind(): O {\n    throw new Error();\n  }\n\n  /**\n   * Returns the parse error.  Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws `Error` if this `Parser` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new Error();\n  }\n\n  /**\n   * Casts an errored `Parser` to a different output type.  A `Parser` in the\n   * _error_ state can have any output type.\n   *\n   * @throws `Error` if this `Parser` is not in the _error_ state.\n   */\n  asError<O2>(): Parser<O2> {\n    throw new Error();\n  }\n\n  private static _done?: Parser<any>;\n\n  /**\n   * Returns a `Parser` in the _done_ state that `bind`s an `undefined` parsed result.\n   */\n  static done<O>(): Parser<O>;\n\n  /**\n   * Returns a `Parser` in the _done_ state that `bind`s the given parsed `output`.\n   */\n  static done<O>(output: O): Parser<O>;\n\n  static done<O>(output?: O): Parser<O> {\n    if (output === void 0) {\n      if (Parser._done === void 0) {\n        Parser._done = new ParserDone<any>(void 0);\n      }\n      return Parser._done;\n    } else {\n      return new ParserDone<O>(output);\n    }\n  }\n\n  /**\n   * Returns a `Parser` in the _error_ state that `trap`s the given parse `error`.\n   */\n  static error<O>(error: Error | Diagnostic): Parser<O> {\n    if (error instanceof Error) {\n      return new ParserError<O>(error);\n    } else {\n      return new ParserError<O>(new ParserException(error));\n    }\n  }\n}\n\n/** @hidden */\nclass ParserDone<O> extends Parser<O> {\n  /** @hidden */\n  readonly _output: O;\n\n  constructor(output: O) {\n    super();\n    this._output = output;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  feed(input: Input): Parser<O> {\n    return this;\n  }\n\n  bind(): O {\n    return this._output;\n  }\n}\n\n/** @hidden */\nclass ParserError<O> extends Parser<O> {\n  /** @hidden */\n  readonly _error: Error;\n\n  constructor(error: Error) {\n    super();\n    this._error = error;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  feed(input: Input): Parser<O> {\n    return this;\n  }\n\n  bind(): O {\n    throw this._error;\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  asError<O2>(): Parser<O2> {\n    return this as any;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output} from \"./Output\";\nimport {Format} from \"./Format\";\nimport {Debug} from \"./Debug\";\n\n/**\n * Unicode transformation format error handling mode.\n */\nexport abstract class UtfErrorMode implements HashCode, Debug {\n  /**\n   * Returns {@code true} if a Unicode decoding should abort with an error when\n   * an invalid code unit sequence is encountered.\n   */\n  isFatal(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns {@code true} if a Unicode decoding should substitute invalid code\n   * unit sequences with a replacement character.\n   */\n  isReplacement(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the Unicode code point of the replacement character to substitute\n   * for invalid code unit sequences.  Defaults to {@code U+FFFD}.\n   */\n  replacementChar(): number {\n    return 0xfffd;\n  }\n\n  /**\n   * Returns {@code true} if Unicode decoding should abort with an error when\n   * a {@code NUL} byte is encountered.\n   */\n  abstract isNonZero(): boolean;\n\n  /**\n   * Returns a {@code UtfErrorMode} that, if {@code isNonZero} is {@code true},\n   * aborts when Unicode decoding encounters a {@code NUL} byte.\n   */\n  abstract isNonZero(isNonZero: boolean): UtfErrorMode;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _fatal?: UtfErrorMode;\n  private static _fatalNonZero?: UtfErrorMode;\n  private static _replacement?: UtfErrorMode;\n  private static _replacementNonZero?: UtfErrorMode;\n\n  /**\n   * Returns a {@code UtfErrorMode} that aborts Unicode decoding with an error\n   * when invalid code unit sequences are encountered.\n   */\n  static fatal(): UtfErrorMode {\n    if (UtfErrorMode._fatal === void 0) {\n      UtfErrorMode._fatal = new UtfFatalErrorMode(false);\n    }\n    return UtfErrorMode._fatal;\n  }\n\n  /**\n   * Returns a {@code UtfErrorMode} that aborts Unicode decoding with an error\n   * when invalid code unit sequences, and {@code NUL} bytes, are encountered.\n   */\n  static fatalNonZero(): UtfErrorMode {\n    if (UtfErrorMode._fatalNonZero === void 0) {\n      UtfErrorMode._fatalNonZero = new UtfFatalErrorMode(true);\n    }\n    return UtfErrorMode._fatalNonZero;\n  }\n\n  /**\n   * Returns a {@code UtfErrorMode} that substitutes invalid code unit\n   * sequences with the replacement character ({@code U+FFFD}).\n   */\n  static replacement(): UtfErrorMode;\n\n  /**\n   * Returns a {@code UtfErrorMode} that substitutes invalid code unit\n   * sequences with the given {@code replacementChar}.\n   */\n  static replacement(replacementChar: number): UtfErrorMode;\n\n  static replacement(replacementChar?: number): UtfErrorMode {\n    if (replacementChar === void 0 || replacementChar === 0xfffd) {\n      if (UtfErrorMode._replacement === void 0) {\n        UtfErrorMode._replacement = new UtfReplacementErrorMode(0xfffd, false);\n      }\n      return UtfErrorMode._replacement;\n    } else {\n      return new UtfReplacementErrorMode(replacementChar, false);\n    }\n  }\n\n  /**\n   * Returns a {@code UtfErrorMode} that substitutes invalid code unit\n   * sequences with the replacement character ({@code U+FFFD}), and aborts\n   * decoding with an error when {@code NUL} bytes are encountered.\n   */\n  static replacementNonZero(): UtfErrorMode;\n\n  /**\n   * Returns a {@code UtfErrorMode} that substitutes invalid code unit\n   * sequences with the given {@code replacementChar}, and aborts decoding\n   * with an error when {@code NUL} bytes are encountered.\n   */\n  static replacementNonZero(replacementChar: number): UtfErrorMode;\n\n  static replacementNonZero(replacementChar?: number): UtfErrorMode {\n    if (replacementChar === void 0 || replacementChar === 0xfffd) {\n      if (UtfErrorMode._replacementNonZero === void 0) {\n        UtfErrorMode._replacementNonZero = new UtfReplacementErrorMode(0xfffd, true);\n      }\n      return UtfErrorMode._replacementNonZero;\n    } else {\n      return new UtfReplacementErrorMode(replacementChar, true);\n    }\n  }\n}\n\n/** @hidden */\nclass UtfFatalErrorMode extends UtfErrorMode {\n  /** @hidden */\n  private readonly _isNonZero: boolean;\n\n  constructor(isNonZero: boolean) {\n    super();\n    this._isNonZero = isNonZero;\n  }\n\n  isFatal(): boolean {\n    return true;\n  }\n\n  isNonZero(): boolean;\n  isNonZero(isNonZero: boolean): UtfErrorMode;\n  isNonZero(isNonZero?: boolean): boolean | UtfErrorMode {\n    if (isNonZero === void 0) {\n      return this._isNonZero;\n    } else if (isNonZero) {\n      return UtfErrorMode.fatalNonZero();\n    } else {\n      return UtfErrorMode.fatal();\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UtfFatalErrorMode) {\n      return this._isNonZero === that._isNonZero;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (UtfFatalErrorMode._hashSeed === void 0) {\n      UtfFatalErrorMode._hashSeed = Murmur3.seed(UtfFatalErrorMode);\n    }\n    return Murmur3.mash(Murmur3.mix(UtfFatalErrorMode._hashSeed,\n        Murmur3.hash(this._isNonZero)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UtfErrorMode\").write(46/*'.'*/)\n        .write(this._isNonZero ? \"fatalNonZero\" : \"fatal\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  private static _hashSeed?: number;\n}\n\n/** @hidden */\nclass UtfReplacementErrorMode extends UtfErrorMode {\n  private readonly _replacementChar: number;\n  private readonly _isNonZero: boolean;\n\n  /** @hidden */\n  constructor(replacementChar: number, isNonZero: boolean) {\n    super();\n    this._replacementChar = replacementChar;\n    this._isNonZero = isNonZero;\n  }\n\n  isReplacement(): boolean {\n    return true;\n  }\n\n  replacementChar(): number {\n    return this._replacementChar;\n  }\n\n  isNonZero(): boolean;\n  isNonZero(isNonZero: boolean): UtfErrorMode;\n  isNonZero(isNonZero?: boolean): boolean | UtfErrorMode {\n    if (isNonZero === void 0) {\n      return this._isNonZero;\n    } else if (this._replacementChar === 0xfffd) {\n      if (isNonZero) {\n        return UtfErrorMode.replacementNonZero();\n      } else {\n        return UtfErrorMode.replacement();\n      }\n    } else {\n      return new UtfReplacementErrorMode(this._replacementChar, isNonZero);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UtfReplacementErrorMode) {\n      return this._replacementChar === that._replacementChar\n          && this._isNonZero === that._isNonZero;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (UtfReplacementErrorMode._hashSeed === void 0) {\n      UtfReplacementErrorMode._hashSeed = Murmur3.seed(UtfReplacementErrorMode);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(UtfReplacementErrorMode._hashSeed,\n        this._replacementChar), Murmur3.hash(this._isNonZero)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UtfErrorMode\").write(46/*'.'*/)\n        .write(this._isNonZero ? \"replacementNonZero\" : \"replacement\")\n        .write(40/*'('*/);\n    if (this._replacementChar !== 0xfffd) {\n      Format.debugChar(this._replacementChar, output);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  private static _hashSeed?: number;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {OutputBuffer} from \"./OutputBuffer\";\n\n/** @hidden */\nexport class Uint8ArrayOutput extends OutputBuffer<Uint8Array> {\n  /** @hidden */\n  _array: Uint8Array;\n  /** @hidden */\n  _index: number;\n  /** @hidden */\n  _limit: number;\n  /** @hidden */\n  _settings: OutputSettings;\n  /** @hidden */\n  _isPart: boolean;\n\n  constructor(array: Uint8Array, index: number, limit: number,\n              settings: OutputSettings = OutputSettings.standard(), isPart: boolean = false) {\n    super();\n    this._array = array;\n    this._index = index;\n    this._limit = limit;\n    this._settings = settings;\n    this._isPart = isPart;\n  }\n\n  isCont(): boolean {\n    return this._index < this._limit;\n  }\n\n  isFull(): boolean {\n    return this._isPart && this._index >= this._limit;\n  }\n\n  isDone(): boolean {\n    return !this._isPart && this._index >= this._limit;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): OutputBuffer<Uint8Array>;\n  isPart(isPart?: boolean): boolean | OutputBuffer<Uint8Array> {\n    if (isPart === void 0) {\n      return this._isPart;\n    } else {\n      this._isPart = isPart;\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): OutputBuffer<Uint8Array>;\n  index(index?: number): number | OutputBuffer<Uint8Array> {\n    if (index === void 0) {\n      return this._index;\n    } else if (0 <= index && index <= this._limit) {\n      this._index = index;\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): OutputBuffer<Uint8Array>;\n  limit(limit?: number): number | OutputBuffer<Uint8Array> {\n    if (limit === void 0) {\n      return this._limit;\n    } else if (0 <= limit && limit <= this._array.length) {\n      this._limit = limit;\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid limit\"), this._settings);\n    }\n  }\n\n  capacity(): number {\n    return this._array.length;\n  }\n\n  remaining(): number {\n    return this._limit - this._index;\n  }\n\n  has(index: number): boolean {\n    return 0 <= index && index < this._limit;\n  }\n\n  get(index: number): number {\n    if (0 <= index && index < this._limit) {\n      return this._array[index];\n    } else {\n      throw new OutputException();\n    }\n  }\n\n  set(index: number, token: number): void {\n    if (0 <= index && index < this._limit) {\n      this._array[index] = token;\n    } else {\n      throw new OutputException();\n    }\n  }\n\n  write(token: number | string): OutputBuffer<Uint8Array> {\n    if (typeof token === \"number\") {\n      const index = this._index;\n      if (index < this._limit) {\n        this._array[index] = token;\n        this._index = index + 1;\n        return this;\n      } else {\n        return OutputBuffer.error(new OutputException(\"full\"), this._settings);\n      }\n    } else {\n      return OutputBuffer.error(new OutputException(\"binary output\"), this._settings);\n    }\n  }\n\n  writeln(string?: string): OutputBuffer<Uint8Array> {\n    return OutputBuffer.error(new OutputException(\"binary output\"), this._settings);\n  }\n\n  step(offset: number): OutputBuffer<Uint8Array> {\n    const index = this._index + offset;\n    if (0 <= index && index <= this._limit) {\n      this._index = index;\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid step\"), this._settings);\n    }\n  }\n\n  bind(): Uint8Array {\n    return new Uint8Array(this._array.buffer, 0, this._index);\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): OutputBuffer<Uint8Array>;\n  settings(settings?: AnyOutputSettings): OutputSettings | OutputBuffer<Uint8Array> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  clone(): OutputBuffer<Uint8Array> {\n    return new Uint8ArrayOutput(this._array, this._index, this._limit, this._settings, this._isPart);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {ByteOutput} from \"./ByteOutput\";\n\n/** @hidden */\nexport class ByteOutputUint8Array extends ByteOutput<Uint8Array> {\n  constructor(array: Uint8Array | null, size: number, settings: OutputSettings) {\n    super(array, size, settings);\n  }\n\n  bind(): Uint8Array {\n    return this.toUint8Array();\n  }\n\n  clone(): Output<Uint8Array> {\n    return new ByteOutputUint8Array(this.cloneArray(), this._size, this._settings);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\n\n/** @hidden */\nexport abstract class ByteOutput<T> extends Output<T> {\n  /** @hidden */\n  _array: Uint8Array | null;\n  /** @hidden */\n  _size: number;\n  /** @hidden */\n  _settings: OutputSettings;\n\n  constructor(array: Uint8Array | null, size: number, settings: OutputSettings) {\n    super();\n    this._array = array;\n    this._size = size;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return true;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(b: number | string): Output<T> {\n    if (typeof b === \"number\") {\n      const n = this._size;\n      const oldArray = this._array;\n      let newArray;\n      if (oldArray === null || n + 1 > oldArray.length) {\n        newArray = new Uint8Array(ByteOutput.expand(n + 1));\n        if (oldArray !== null) {\n          newArray.set(oldArray, 0);\n        }\n        this._array = newArray;\n      } else {\n        newArray = oldArray;\n      }\n      newArray[n] = b;\n      this._size = n + 1;\n      return this;\n    } else {\n      throw new TypeError(\"\" + b);\n    }\n  }\n\n  writeln(string?: string): Output<T> {\n    throw new TypeError(\"\" + string);\n  }\n\n  toUint8Array(): Uint8Array {\n    const n = this._size;\n    const oldArray = this._array;\n    if (oldArray !== null && n === oldArray.length) {\n      return oldArray;\n    } else {\n      const newArray = new Uint8Array(n);\n      if (oldArray !== null) {\n        newArray.set(oldArray.slice(0, n), 0);\n      }\n      this._array = newArray;\n      return newArray;\n    }\n  }\n\n  cloneArray(): Uint8Array | null {\n    const oldArray = this._array;\n    if (oldArray !== null) {\n      return oldArray.slice(0, this._size);\n    } else {\n      return null;\n    }\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<T>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {OutputBuffer} from \"./OutputBuffer\";\nimport {Uint8ArrayOutput} from \"./Uint8ArrayOutput\";\nimport {ByteOutputUint8Array} from \"./ByteOutputUint8Array\";\n\n/**\n * Byte [[Input]]/[[Output]] factory.\n *\n * The `Binary.uint8ArrayOutput(...)}` function returns an `Output` that writes\n * bytes to a growable array, and [[Output.bind binds]] a `Uint8Array`\n * containing all written bytes.\n */\nexport class Binary {\n  private constructor() {\n    // nop\n  }\n\n  static outputBuffer(array: Uint8Array, offset: number = 0, length: number = array.length): OutputBuffer<Uint8Array> {\n    return new Uint8ArrayOutput(array, offset, offset + length);\n  }\n\n  /**\n   * Returns a new `Output` that appends bytes to a growable array,\n   * pre-allocated with space for `initialCapacity` bytes, if `initialCapacity`\n   * is defined, using the given `settings`, if `settings` is defined.  The\n   * returned `Output` accepts an unbounded number of bytes, remaining\n   * permanently in the _cont_ state, and can [[Output.bind bind]] a\n   * `Uint8Array` with the current output state at any time.\n   */\n  static uint8ArrayOutput(initialCapacity?: number, settings?: AnyOutputSettings): Output<Uint8Array>;\n  /**\n   * Returns a new `Output` that appends bytes to a growable array, using the\n   * given `settings`.  The returned `Output` accepts an unbounded number of\n   * bytes, remaining permanently in the _cont_ state, and can [[Output.bind\n   * bind]] a `Uint8Array` array with the current output state at any time.\n   */\n  static uint8ArrayOutput(settings: AnyOutputSettings): Output<Uint8Array>;\n  static uint8ArrayOutput(initialCapacity?: number | AnyOutputSettings,\n                          settings?: AnyOutputSettings): Output<Uint8Array> {\n    if (settings === void 0 && typeof initialCapacity !== \"number\") {\n      settings = initialCapacity;\n      initialCapacity = void 0;\n    } else if (typeof initialCapacity !== \"number\") {\n      initialCapacity = void 0;\n    }\n    let array: Uint8Array | null;\n    if (typeof initialCapacity === \"number\") {\n      array = new Uint8Array(initialCapacity);\n    } else {\n      array = null;\n    }\n    settings = OutputSettings.fromAny(settings);\n    return new ByteOutputUint8Array(array, 0, settings);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Writer} from \"./Writer\";\nimport {Format} from \"./Format\";\nimport {Unicode} from \"./Unicode\";\nimport {Binary} from \"./Binary\";\nimport {Base16Parser} from \"./Base16Parser\";\nimport {Base16Writer} from \"./Base16Writer\";\nimport {Base16IntegerWriter} from \"./Base16IntegerWriter\";\n\n/**\n * Base-16 (hexadecimal) encoding [[Parser]]/[[Writer]] factory.\n */\nexport class Base16 {\n  /** @hidden */\n  readonly _alphabet: string;\n\n  constructor(alphabet: string) {\n    this._alphabet = alphabet;\n  }\n\n  /**\n   * Returns a 16 character string, where the character at index `i` is the\n   * encoding of the base-16 digit `i`.\n   */\n  alphabet(): string {\n    return this._alphabet;\n  }\n\n  /**\n   * Returns the Unicode code point of the base-16 digit that encodes the given\n   * 4-bit quantity.\n   */\n  encodeDigit(b: number): number {\n    return this._alphabet.charCodeAt(b);\n  }\n\n  /**\n   * Returns a `Writer` that, when fed an input `Uint8Array`, returns a\n   * continuation that writes the base-16 (hexadecimal) encoding of the input\n   * byte array.\n   */\n  uint8ArrayWriter(): Writer<Uint8Array, unknown>;\n  /**\n   * Returns a `Writer` continuation that writes the base-16 (hexadecimal)\n   * encoding of the `input` `Uint8Array`.\n   */\n  uint8ArrayWriter(input: Uint8Array): Writer<unknown, Uint8Array>;\n  uint8ArrayWriter(input?: Uint8Array): Writer<unknown, unknown> {\n    if (input === void 0) {\n      return new Base16.Writer(void 0, void 0, this);\n    } else {\n      return new Base16.Writer(input, input, this);\n    }\n  }\n\n  /**\n   * Writes the base-16 (hexadecimal) encoding of the `input` `Uint8Array` to\n   * the `output`, returning a `Writer` continuation that knows how to write any\n   * remaining output that couldn't be immediately generated.\n   */\n  writeUint8Array(input: Uint8Array, output: Output): Writer<unknown, unknown> {\n    return Base16.Writer.write(output, void 0, input, this);\n  }\n\n  writeInteger(input: number, output: Output, width: number = 0): Writer<unknown, unknown> {\n    return Base16.IntegerWriter.write(output, void 0, input, width, this);\n  }\n\n  writeIntegerLiteral(input: number, output: Output, width: number = 0): Writer<unknown, unknown> {\n    return Base16.IntegerWriter.writeLiteral(output, void 0, input, width, this);\n  }\n\n  private static _lowercase?: Base16;\n  private static _uppercase?: Base16;\n\n  /**\n   * Returns the `Base16` encoding with lowercase alphanumeric digits.\n   */\n  public static lowercase(): Base16 {\n    if (Base16._lowercase === void 0) {\n      Base16._lowercase = new Base16(\"0123456789abcdef\");\n    }\n    return Base16._lowercase;\n  }\n\n  /**\n   * Returns the `Base16` encoding with uppercase alphanumeric digits.\n   */\n  public static uppercase(): Base16 {\n    if (Base16._uppercase === void 0) {\n      Base16._uppercase = new Base16(\"0123456789ABCDEF\");\n    }\n    return Base16._uppercase;\n  }\n\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-16 digit.\n   */\n  static isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 70/*'F'*/\n        || c >= 97/*'a'*/ && c <= 102/*'f'*/;\n  }\n\n  /**\n   * Returns the 4-bit quantity represented by the base-16 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-16 digit.\n   */\n  static decodeDigit(c: number): number {\n    if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n      return c - 48/*'0'*/;\n    } else if (c >= 65/*'A'*/ && c <= 70/*'F'*/) {\n      return 10 + (c - 65/*'A'*/);\n    } else if (c >= 97/*'a'*/ && c <= 102/*'f'*/) {\n      return 10 + (c - 97/*'a'*/);\n    } else {\n      const message = Unicode.stringOutput();\n      message.write(\"Invalid base-16 digit: \");\n      Format.debugChar(c, message);\n      throw new Error(message.bind());\n    }\n  }\n\n  /**\n   * Decodes the base-16 digits `c1` and `c2`, and writes the 8-bit  quantity\n   * they represent to the given `output`.\n   */\n  static writeQuantum(c1: number, c2: number, output: Output): void {\n    const x = Base16.decodeDigit(c1);\n    const y = Base16.decodeDigit(c2);\n    output = output.write(x << 4 | y);\n  }\n\n  /**\n   * Returns a `Parser` that decodes base-16 (hexadecimal) encoded input, and\n   * writes the decoded bytes to `output`.\n   */\n  static parser<O>(output: Output<O>): Parser<O> {\n    return new Base16.Parser<O>(output);\n  }\n\n  /**\n   * Parses the base-16 (hexadecimal) encoded `input`, and writes the decoded\n   * bytes to `output`, returning a `Parser` continuation that knows how to\n   * parse any additional input.\n   */\n  static parse<O>(input: Input, output: Output<O>): Parser<O> {\n    return Base16.Parser.parse(input, output);\n  }\n\n  /**\n   * Parses the base-16 (hexadecimal) encoded `input`, and writes the decoded\n   * bytes to a growable array, returning a `Parser` continuation that knows\n   * how to parse any additional input.  The returned `Parser` [[Parser.bind\n   * binds]] a `Uint8Array` array containing all parsed base-16 data.\n   */\n  static parseUint8Array(input: Input): Parser<Uint8Array> {\n    return Base16.Parser.parse(input, Binary.uint8ArrayOutput());\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Parser: typeof Base16Parser; // defined by Base16Parser\n  /** @hidden */\n  static Writer: typeof Base16Writer; // defined by Base16Writer\n  /** @hidden */\n  static IntegerWriter: typeof Base16IntegerWriter; // defined by Base16IntegerWriter\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {UtfErrorMode} from \"./UtfErrorMode\";\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {Unicode} from \"./Unicode\";\nimport {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Utf8DecodedOutput<T> extends Output<T> {\n  /** @hidden */\n  _output: Output<T>;\n  /** @hidden */\n  readonly _errorMode: UtfErrorMode;\n  /** @hidden */\n  _c1: number;\n  /** @hidden */\n  _c2: number;\n  /** @hidden */\n  _c3: number;\n  /** @hidden */\n  _have: number;\n\n  constructor(output: Output<T>, errorMode: UtfErrorMode,\n              c1: number = -1, c2: number = -1, c3: number = -1, have: number = 0) {\n    super();\n    this._output = output;\n    this._errorMode = errorMode;\n    this._c1 = c1;\n    this._c2 = c2;\n    this._c3 = c3;\n    this._have = have;\n  }\n\n  isCont(): boolean {\n    return this._output.isCont();\n  }\n\n  isFull(): boolean {\n    return this._output.isFull();\n  }\n\n  isDone(): boolean {\n    return this._output.isDone();\n  }\n\n  isError(): boolean {\n    return this._output.isError();\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return this._output.isPart();\n    } else {\n      this._output = this._output.isPart(isPart);\n      return this;\n    }\n  }\n\n  write(token: number | string): Output<T> {\n    if (typeof token === \"number\") {\n      let c1 = this._c1;\n      let c2 = this._c2;\n      let c3 = this._c3;\n      let c4 = -1;\n      let have = this._have;\n\n      if (token >= 0) {\n        switch (have) {\n          case 0:\n            c1 = token & 0xff;\n            have = 1;\n            break;\n          case 1:\n            c2 = token & 0xff;\n            have = 2;\n            break;\n          case 2:\n            c3 = token & 0xff;\n            have = 3;\n            break;\n          case 3:\n            c4 = token & 0xff;\n            have = 4;\n            break;\n          default:\n            throw new Error(\"unreachable\");\n        }\n      }\n\n      if (c1 === 0 && this._errorMode.isNonZero()) { // invalid NUL byte\n        return Output.error(new OutputException(\"unexpected NUL byte\"));\n      } else if (c1 >= 0 && c1 <= 0x7f) { // U+0000..U+007F\n        this._output = this._output.write(c1);\n        this._have = 0;\n      } else if (c1 >= 0xc2 && c1 <= 0xf4) {\n        if (c1 >= 0xc2 && c1 <= 0xdf && c2 >= 0x80 && c2 <= 0xbf) { // U+0080..U+07FF\n          this._output = this._output.write((c1 & 0x1f) << 6 | c2 & 0x3f);\n          this._c1 = -1;\n          this._have = 0;\n        } else if (c1 === 0xe0 && c2 >= 0xa0 && c2 <= 0xbf // U+0800..U+0FFF\n                || c1 >= 0xe1 && c1 <= 0xec && c2 >= 0x80 && c2 <= 0xbf // U+1000..U+CFFF\n                || c1 === 0xed && c2 >= 0x80 && c2 <= 0x9f // U+D000..U+D7FF\n                || c1 >= 0xee && c1 <= 0xef && c2 >= 0x80 && c2 <= 0xbf) { // U+E000..U+FFFF\n          if (c3 >= 0x80 && c3 <= 0xbf) {\n            this._output = this._output.write((c1 & 0x0f) << 12 | (c2 & 0x3f) << 6 | c3 & 0x3f);\n            this._c1 = -1;\n            this._c2 = -1;\n            this._have = 0;\n          } else if (c3 >= 0) { // invalid c3\n            if (this._errorMode.isFatal()) {\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            }\n            this._output = this._output.write(this._errorMode.replacementChar());\n            this._c1 = c3;\n            this._c2 = -1;\n            this._have = 1;\n          } else if (token < 0 || this._output.isDone()) { // incomplete c3\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          } else { // awaiting c3\n            this._c2 = c2;\n            this._have = 2;\n          }\n        } else if (c1 === 0xf0 && c2 >= 0x90 && c2 <= 0xbf // U+10000..U+3FFFF\n                || c1 >= 0xf1 && c1 <= 0xf3 && c2 >= 0x80 && c2 <= 0xbf // U+40000..U+FFFFF\n                || c1 === 0xf4 && c2 >= 0x80 && c2 <= 0x8f) { // U+100000..U+10FFFF\n          if (c3 >= 0x80 && c3 <= 0xbf) {\n            if (c4 >= 0x80 && c4 <= 0xbf) {\n              this._have = 4;\n              this._output = this._output.write((c1 & 0x07) << 18 | (c2 & 0x3f) << 12 | (c3 & 0x3f) << 6 | c4 & 0x3f);\n              this._c1 = -1;\n              this._c2 = -1;\n              this._c3 = -1;\n              this._have = 0;\n            } else if (c4 >= 0) { // invalid c4\n              if (this._errorMode.isFatal()) {\n                return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3, c4)));\n              }\n              this._output = this._output.write(this._errorMode.replacementChar());\n              this._c1 = c4;\n              this._c2 = -1;\n              this._c3 = -1;\n              this._have = 1;\n            } else if (token < 0 || this._output.isDone()) { // incomplete c4\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            } else { // awaiting c4\n              this._c3 = c3;\n              this._have = 3;\n            }\n          } else if (c3 >= 0) { // invalid c3\n            if (this._errorMode.isFatal()) {\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            }\n            this._output = this._output.write(this._errorMode.replacementChar());\n            this._c1 = c3;\n            this._c2 = -1;\n            this._have = 1;\n          } else if (token < 0 || this._output.isDone()) { // incomplete c3\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          } else { // awaiting c3\n            this._c2 = c2;\n            this._have = 2;\n          }\n        } else if (c2 >= 0) { // invalid c2\n          if (this._errorMode.isFatal()) {\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          }\n          this._output = this._output.write(this._errorMode.replacementChar());\n          this._c1 = c2;\n          this._have = 1;\n        } else if (token < 0 || this._output.isDone()) { // incomplete c2\n          return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1)));\n        } else { // awaiting c2\n          this._c1 = c1;\n          this._have = 1;\n        }\n      } else if (c1 >= 0) { // invalid c1\n        if (this._errorMode.isFatal()) {\n          return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1)));\n        }\n        this._output = this._output.write(this._errorMode.replacementChar());\n        this._have = 0;\n      }\n      if (this._output.isError()) {\n        return this._output;\n      }\n      return this;\n    } else if (typeof token === \"string\") {\n      this._output.write(token);\n      return this;\n    } else {\n      throw new TypeError(\"\" + token);\n    }\n  }\n\n  static invalid(c1: number, c2?: number, c3?: number, c4?: number): string {\n    let output = Unicode.stringOutput();\n    output = output.write(\"invalid UTF-8 code unit sequence: \");\n    Base16.uppercase().writeIntegerLiteral(c1, output, 2);\n    if (c2 !== void 0) {\n      output = output.write(' ');\n      Base16.uppercase().writeIntegerLiteral(c2, output, 2);\n      if (c3 !== void 0) {\n        output = output.write(' ');\n        Base16.uppercase().writeIntegerLiteral(c3, output, 2);\n        if (c4 !== void 0) {\n          output = output.write(' ');\n          Base16.uppercase().writeIntegerLiteral(c4, output, 2);\n        }\n      }\n    }\n    return output.bind();\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<T>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._output.settings();\n    } else {\n      this._output.settings(settings);\n      return this;\n    }\n  }\n\n  bind(): T {\n    if (this._have === 0) {\n      return this._output.bind();\n    } else {\n      return this.write(-1).bind();\n    }\n  }\n\n  trap(): Error {\n    return this._output.trap();\n  }\n\n  clone(): Output<T> {\n    return new Utf8DecodedOutput<T>(this._output.clone(), this._errorMode,\n                                    this._c1, this._c2, this._c3, this._have);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {UtfErrorMode} from \"./UtfErrorMode\";\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\n\n/** @hidden */\nexport class Utf8EncodedOutput<T> extends Output<T> {\n  /** @hidden */\n  _output: Output<T>;\n  /** @hidden */\n  readonly _errorMode: UtfErrorMode;\n  /** @hidden */\n  _c2: number;\n  /** @hidden */\n  _c3: number;\n  /** @hidden */\n  _c4: number;\n  /** @hidden */\n  _index: number;\n\n  constructor(output: Output<T>, errorMode: UtfErrorMode, c2: number = 0,\n              c3: number = 0, c4: number = 0, index: number = 4) {\n    super();\n    this._output = output;\n    this._errorMode = errorMode;\n    this._c2 = c2;\n    this._c3 = c3;\n    this._c4 = c4;\n    this._index = index;\n  }\n\n  isCont(): boolean {\n    return this._output.isCont();\n  }\n\n  isFull(): boolean {\n    return this._output.isFull();\n  }\n\n  isDone(): boolean {\n    return this._output.isDone();\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return this._output.isPart();\n    } else {\n      this._output = this._output.isPart(isPart);\n      return this;\n    }\n  }\n\n  write(token: number | string): Output<T> {\n    if (typeof token === \"number\") {\n      let c1 = 0;\n      let c2 = this._c2;\n      let c3 = this._c3;\n      let c4 = this._c4;\n      let index = this._index;\n      while (index < 4) {\n        if (this._output.isCont()) {\n          switch (index) {\n            case 1: this._output = this._output.write(c2); this._c2 = 0; break;\n            case 2: this._output = this._output.write(c3); this._c3 = 0; break;\n            case 3: this._output = this._output.write(c4); this._c4 = 0; break;\n            default: throw new Error(\"unreachable\");\n          }\n          index += 1;\n        } else {\n          return Output.error(new OutputException(\"unable to flush buffered code units\"));\n        }\n      }\n      if (token >= 0 && token <= 0x7f) { // U+0000..U+007F\n        c4 = token;\n        index = 3;\n      } else if (token >= 0x80 && token <= 0x7ff) { // U+0080..U+07FF\n        c3 = 0xc0 | (token >>> 6);\n        c4 = 0x80 | (token & 0x3f);\n        index = 2;\n      } else if (token >= 0x0800 && token <= 0xffff || // U+0800..U+D7FF\n                 token >= 0xe000 && token <= 0xffff) { // U+E000..U+FFFF\n        c2 = 0xe0 | (token  >>> 12);\n        c3 = 0x80 | ((token >>>  6) & 0x3f);\n        c4 = 0x80 | (token & 0x3f);\n        index = 1;\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        c1 = 0xf0 | (token  >>> 18);\n        c2 = 0x80 | ((token >>> 12) & 0x3f);\n        c3 = 0x80 | ((token >>>  6) & 0x3f);\n        c4 = 0x80 | (token & 0x3f);\n        index = 0;\n      } else { // surrogate or invalid code point\n        if (this._errorMode.isFatal()) {\n          return Output.error(new OutputException(\"invalid code point: \" + token));\n        } else {\n          return this.write(this._errorMode.replacementChar());\n        }\n      }\n      do {\n        switch (index) {\n          case 0: this._output = this._output.write(c1); break;\n          case 1: this._output = this._output.write(c2); this._c2 = 0; break;\n          case 2: this._output = this._output.write(c3); this._c3 = 0; break;\n          case 3: this._output = this._output.write(c4); this._c4 = 0; break;\n          default: throw new Error(\"unreachable\");\n        }\n        index += 1;\n      } while (index < 4 && this._output.isCont());\n      if (index < 4) {\n        if (index < 3) {\n          if (index < 2) {\n            this._c2 = c2;\n          }\n          this._c3 = c3;\n        }\n        this._c4 = c4;\n      }\n      this._index = index;\n      return this;\n    } else if (typeof token === \"string\") {\n      this._output.write(token);\n      return this;\n    } else {\n      throw new TypeError(\"\" + token);\n    }\n  }\n\n  flush(): Output<T> {\n    let index = this._index;\n    while (index < 4) {\n      if (this._output.isCont()) {\n        switch (index) {\n          case 1: this._output = this._output.write(this._c2); this._c2 = 0; break;\n          case 2: this._output = this._output.write(this._c3); this._c3 = 0; break;\n          case 3: this._output = this._output.write(this._c4); this._c4 = 0; break;\n          default: throw new Error(\"unreachable\");\n        }\n        index += 1;\n      } else {\n        return Output.error(new OutputException(\"unable to flush buffered code units\"));\n      }\n    }\n    this._index = index;\n    return this;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<T>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._output.settings();\n    } else {\n      this._output.settings(settings);\n      return this;\n    }\n  }\n\n  bind(): T {\n    return this._output.bind();\n  }\n\n  clone(): Output<T> {\n    return new Utf8EncodedOutput<T>(this._output.clone(), this._errorMode,\n                                    this._c2, this._c3, this._c4, this._index);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {UtfErrorMode} from \"./UtfErrorMode\";\nimport {Output} from \"./Output\";\nimport {Unicode} from \"./Unicode\";\nimport {Utf8DecodedOutput} from \"./Utf8DecodedOutput\";\nimport {Utf8EncodedOutput} from \"./Utf8EncodedOutput\";\n\n/**\n * UTF-8 [[Input]]/[[Output]] factory.\n */\nexport class Utf8 {\n  private constructor() {\n    // nop\n  }\n\n  /**\n   * Returns the number of bytes in the UTF-8 encoding of the Unicode code\n   * point `c`, handling invalid code unit sequences according to the\n   * `errorMode` policy.  Returns the size of the\n   * [[UtfErrorMode.replacementChar]] for surrogates and invalid code points,\n   * if [[UtfErrorMode.isReplacement]] is `true`; otherwise returns `0` for\n   * surrogates and invalid code points.  Uses the two byte modified UTF-8\n   * encoding of the NUL character (`U+0000`), if [[UtfErrorMode.isNonZero]]\n   * is `true`.\n   */\n  static sizeOf(c: number | undefined, errorMode?: UtfErrorMode): number;\n  /**\n   * Returns the number of bytes in the UTF-8 encoding of the Unicode code\n   * point `c`; returns the size of the Unicode replacement character (`U+FFFD`)\n   * for surrogates and invalid code points.\n   */\n  static sizeOf(c: number | undefined): number;\n  /**\n   * Returns the number of bytes in the UTF-8 encoding the given `string`,\n   * handling invalid code unit sequences according to the `errorMode` policy.\n   */\n  static sizeOf(string: string, errorMode?: UtfErrorMode): number;\n  /**\n   * Returns the number of bytes in the UTF-8 encoding the given `string`,\n   * assuming the Unicode replacement character (`U+FFFD`) replaces unpaired\n   * surrogates and invalid code points.\n   */\n  static sizeOf(string: string): number;\n  static sizeOf(u: string | number | undefined, errorMode?: UtfErrorMode): number {\n    if (typeof u === \"number\" || u === void 0) {\n      if (typeof u === \"number\") {\n        if (u === 0x0000 && errorMode !== void 0 && errorMode.isNonZero()) { // Modified UTF-8\n          return 2; // U+0000 encoded as 0xC0, 0x80\n        } else if (u >= 0x0000 && u <= 0x007F) { // U+0000..U+007F\n          return 1;\n        } else if (u >= 0x0080 && u <= 0x07FF) { // U+0080..U+07FF\n          return 2;\n        } else if (u >= 0x0800 && u <= 0xFFFF || // U+0800..U+D7FF\n                   u >= 0xE000 && u <= 0xFFFF) { // U+E000..U+FFFF\n          return 3;\n        } else if (u >= 0x10000 && u <= 0x10FFFF) { // U+10000..U+10FFFF\n          return 4;\n        }\n      }\n      // surrogate or invalid code point\n      if (errorMode === void 0) {\n        return 3;\n      } else if (errorMode.isReplacement()) {\n        return Utf8.sizeOf(errorMode.replacementChar());\n      } else {\n        return 0;\n      }\n    } else if (typeof u === \"string\") {\n      let size = 0;\n      for (let i = 0, n = u.length; i < n; i = u.offsetByCodePoints(i, 1)) {\n        size += Utf8.sizeOf(u.charCodeAt(i), errorMode);\n      }\n      return size;\n    } else {\n      throw new TypeError(\"\" + u);\n    }\n  }\n\n  /**\n   * Returns a new `Output` that accepts UTF-8 code unit sequences, and writes\n   * writes decoded Unicode code points to the composed `output`, handling\n   * invalid code unit sequences according to the `errorMode` policy.\n   */\n  static decodedOutput<T>(output: Output<T>, errorMode: UtfErrorMode = UtfErrorMode.fatal()): Output<T> {\n    return new Utf8DecodedOutput<T>(output, errorMode);\n  }\n\n  /**\n   * Returns a new `Output` that accepts Unicode code points, and writes\n   * encoded UTF-8 code unit sequences to the composed `output`, handling\n   * invalid code unit sequences according to the `errorMode` policy.\n   */\n  static encodedOutput<T>(output: Output<T>, errorMode: UtfErrorMode = UtfErrorMode.fatal()): Output<T> {\n    return new Utf8EncodedOutput<T>(output, errorMode);\n  }\n\n  /**\n   * Returns a new `Output` that accepts UTF-8 code unit sequences, and writes\n   * decoded Unicode code points to a growable `string`, handling invalid code\n   * unit sequences according to the [[UtfErrorMode.fatal]] policy.  The\n   * returned `Output` accepts an unbounded number of UTF-8 code units,\n   * remaining permanently in the _cont_ state, and [[Output.bind binds]] a\n   * `string` containing all decoded code points.\n   */\n  static decodedString(): Output<string> {\n    return Utf8.decodedOutput(Unicode.stringOutput());\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Diagnostic} from \"./Diagnostic\";\nimport {Unicode} from \"./Unicode\";\nimport {Base10} from \"./Base10\";\n\n/** @hidden */\nexport class Base10NumberParser extends Parser<number> {\n  private readonly _sign: number | undefined;\n  private readonly _value: number | undefined;\n  private readonly _mode: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(sign?: number, value?: number, mode?: number, step?: number) {\n    super();\n    this._sign = sign;\n    this._value = value;\n    this._mode = mode;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<number> {\n    return Base10NumberParser.parse(input, this._sign, this._value, this._mode, this._step);\n  }\n\n  static parse(input: Input, sign: number = 1, value: number = 0,\n               mode: number = 2, step: number = 1): Parser<number> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 45/*'-'*/) {\n          input = input.step();\n          sign = -1;\n        }\n        step = 2;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"number\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 48/*'0'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          value = sign * (c - 48/*'0'*/);\n          step = 3;\n        } else if (mode > 0 && c === 46/*'.'*/) {\n          let output = Unicode.stringOutput();\n          if (sign < 0) {\n            output = output.write(45/*'-'*/);\n          }\n          return Base10DecimalParser.parse(input, output, mode);\n        } else {\n          return Parser.error(Diagnostic.expected(\"number\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"number\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          const newValue = 10 * value + sign * (c - 48/*'0'*/);\n          if (-9007199254740991 <= newValue && newValue <= 9007199254740992) {\n            value = newValue;\n            input = input.step();\n          } else {\n            return Parser.error(Diagnostic.message(\"integer overflow\", input));\n          }\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        step = 4;\n      } else if (input.isDone()) {\n        return Parser.done(value);\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        c = input.head();\n        if (mode > 0 && c === 46/*'.'*/ || mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          let output = Unicode.stringOutput();\n          if (sign < 0 && value === 0) {\n            output = output.write(45/*'-'*/).write(48/*'0'*/);\n          } else {\n            output = output.write(\"\" + value);\n          }\n          return Base10DecimalParser.parse(input, output, mode);\n        } else {\n          return Parser.done(value);\n        }\n      } else if (input.isDone()) {\n        return Parser.done(value);\n      }\n    }\n    return new Base10NumberParser(sign, value, mode, step);\n  }\n}\nBase10.NumberParser = Base10NumberParser;\n\n/** @hidden */\nclass Base10DecimalParser extends Parser<number> {\n  private readonly _output: Output<string>;\n  private readonly _mode: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(output: Output<string>, mode?: number, step?: number) {\n    super();\n    this._output = output;\n    this._mode = mode;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<number> {\n    return Base10DecimalParser.parse(input, this._output, this._mode, this._step);\n  }\n\n  static parse(input: Input, output: Output<string>, mode: number = 2,\n               step: number = 1): Parser<number> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 46/*'.'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 2;\n        } else if (mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          input = input.step();\n          output = output.write(c);\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        if (mode > 1) {\n          step = 4;\n        } else {\n          return Parser.done(+output.bind());\n        }\n      } else if (input.isDone()) {\n        return Parser.done(+output.bind());\n      }\n    }\n    if (step === 4) {\n      c = input.head();\n      if (c === 69/*'E'*/ || c === 101/*'e'*/) {\n        input = input.step();\n        output = output.write(c);\n        step = 5;\n      } else {\n        return Parser.done(+output.bind());\n      }\n    }\n    if (step === 5) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n          input = input.step();\n          output = output.write(c);\n        }\n        step = 6;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 7;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 7) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(+output.bind());\n      }\n    }\n    return new Base10DecimalParser(output, mode, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\nimport {Base10} from \"./Base10\";\n\n/** @hidden */\nexport class Base10IntegerWriter extends Writer<any, any> {\n  /** @hidden */\n  readonly _value: any;\n  /** @hidden */\n  readonly _input: number;\n  /** @hidden */\n  readonly _index: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(value: any, input: number, index: number = 0, step: number = 1) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._index = index;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer<any, any> {\n    return Base10IntegerWriter.write(output, this._value, this._input, this._index, this._step);\n  }\n\n  static write(output: Output, value: any, input: number, index: number = 0,\n               step: number = 1): Writer<any, any> {\n    if (step === 0) {\n      return Writer.done();\n    }\n    if (step === 1) {\n      if (input < 0) {\n        if (output.isCont()) {\n          output = output.write(45/*'-'*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (input > -10 && input < 10) {\n        if (output.isCont()) {\n          output = output.write(Base10.encodeDigit(Math.abs(input | 0)));\n          return Writer.done(value);\n        }\n      } else {\n        const digits = new Array<number>(19);\n        let x = input;\n        let i = 18;\n        while (x !== 0) {\n          digits[i] = Math.abs((x % 10) | 0);\n          x = (x / 10) | 0;\n          i -= 1;\n        }\n        i += 1 + index;\n        while (i < 19 && output.isCont()) {\n          output = output.write(Base10.encodeDigit(digits[i]));\n          index += 1;\n          i += 1;\n        }\n        if (i === 19) {\n          return Writer.done(value);\n        }\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base10IntegerWriter(value, input, index, step);\n  }\n}\nBase10.IntegerWriter = Base10IntegerWriter;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Diagnostic} from \"./Diagnostic\";\nimport {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Base16Parser<O> extends Parser<O> {\n  /** @hidden */\n  readonly _output: Output<O>;\n  /** @hidden */\n  readonly _p: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(output: Output<O>, p: number = 0, step: number = 1) {\n    super();\n    this._output = output;\n    this._p = p;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<O> {\n    return Base16Parser.parse(input, this._output.clone(), this._p, this._step);\n  }\n\n  static parse<O>(input: Input, output: Output<O>, p: number = 0, step: number = 1): Parser<O> {\n    let c = 0;\n    while (!input.isEmpty()) {\n      if (step === 1) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          p = c;\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(output.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          Base16.writeQuantum(p, c, output);\n          p = 0;\n          step = 1;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"base16 digit\", input));\n        }\n      }\n    }\n    return new Base16Parser<O>(output, p, step);\n  }\n}\nBase16.Parser = Base16Parser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\nimport {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Base16Writer extends Writer<unknown, unknown> {\n  /** @hidden */\n  readonly _value: unknown;\n  /** @hidden */\n  readonly _input: Uint8Array | undefined;\n  /** @hidden */\n  readonly _base16: Base16;\n  /** @hidden */\n  readonly _index: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(value: unknown, input: Uint8Array | undefined, base16: Base16,\n              index: number = 0, step: number = 1) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._base16 = base16;\n    this._index = index;\n    this._step = step;\n  }\n\n  feed(value: unknown): Writer<unknown, unknown> {\n    if (value instanceof Uint8Array) {\n      return new Base16Writer(undefined, value, this._base16);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  pull(output: Output): Writer<unknown, unknown> {\n    return Base16Writer.write(output, this._value, this._input!, this._base16,\n                              this._index, this._step);\n  }\n\n  static write(output: Output, value: unknown, input: Uint8Array, base16: Base16,\n               index: number = 0, step: number = 1): Writer<unknown, unknown> {\n    while (index < input.length) {\n      const x = input[index];\n      if (step === 1 && output.isCont()) {\n        output = output.write(base16.encodeDigit(x >>> 4));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base16.encodeDigit(x & 0x0f));\n        index += 1;\n        step = 1;\n      }\n    }\n    if (index === input.length) {\n      return Writer.done(value);\n    } else if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base16Writer(value, input, base16, index, step);\n  }\n}\nBase16.Writer = Base16Writer;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\nimport {Base16} from \"./Base16\";\n\nexport class Base16IntegerWriter extends Writer<unknown, unknown> {\n  private readonly _value: unknown;\n  private readonly _input: number;\n  private readonly _width: number;\n  private readonly _base16: Base16;\n  private readonly _index: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(value: unknown, input: number, width: number,\n              base16: Base16, index?: number, step?: number) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._width = width;\n    this._base16 = base16;\n    this._index = index;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer<unknown, unknown> {\n    return Base16IntegerWriter.write(output, this._value, this._input, this._width,\n                                     this._base16, this._index, this._step);\n  }\n\n  static write(output: Output, value: unknown, input: number, width: number,\n               base16: Base16, index: number = 0, step: number = 3): Writer<unknown, unknown> {\n    if (step <= 0) {\n      return Writer.done();\n    }\n    if (step === 1 && output.isCont()) {\n      output = output.write(48/*'0'*/);\n      step = 2;\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(120/*'x'*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (input >= 0 && input < 16 && width <= 1) {\n        if (output.isCont()) {\n          output = output.write(base16.encodeDigit(input));\n          return Writer.done(value);\n        }\n      } else {\n        let i = 15;\n        const digits = new Array<number>(16);\n        let x = input;\n        while (x !== 0 || i >= 16 - width) {\n          digits[i] = x & 0xf;\n          x >>>= 4;\n          i -= 1;\n        }\n        i += 1 + index;\n        while (i < 16 && output.isCont()) {\n          output = output.write(base16.encodeDigit(digits[i]));\n          index += 1;\n          i += 1;\n        }\n        if (i === 16) {\n          return Writer.done(value);\n        }\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base16IntegerWriter(value, input, width, base16, index, step);\n  }\n\n  static writeLiteral(output: Output, value: unknown, input: number, width: number,\n                      base16: Base16): Writer<unknown, unknown> {\n    return Base16IntegerWriter.write(output, value, input, width, base16, 0, 1);\n  }\n}\nBase16.IntegerWriter = Base16IntegerWriter;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Writer} from \"./Writer\";\nimport {Format} from \"./Format\";\nimport {Unicode} from \"./Unicode\";\nimport {Binary} from \"./Binary\";\nimport {Base64Parser} from \"./Base64Parser\";\nimport {Base64Writer} from \"./Base64Writer\";\n\n/**\n * Base-64 (7-bit ASCII) encoding [[Parser]]/[[Writer]] factory.\n */\nexport abstract class Base64 {\n  /** @hidden */\n  constructor() {\n    // stub\n  }\n\n  /**\n   * Returns a 64 character string, where the character at index `i` is the\n   * encoding of the base-64 digit `i`.\n   */\n  abstract alphabet(): string;\n\n  /**\n   * Returns `true` if this base-64 encoding requires padding.\n   */\n  abstract isPadded(): boolean;\n\n  /**\n   * Returns this `Base64` encoding with required padding, if `isPadded` is\n   * `true`.\n   */\n  abstract isPadded(isPadded: boolean): Base64;\n\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-64 digit.\n   */\n  abstract isDigit(c: number): boolean;\n\n  /**\n   * Returns the 7-bit quantity represented by the base-64 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-64 digit.\n   */\n  public decodeDigit(c: number): number {\n    if (c >= 65/*'A'*/ && c <= 90/*'Z'*/) {\n      return c - 65/*'A'*/;\n    } else if (c >= 97/*'a'*/ && c <= 122/*'z'*/) {\n      return c + (26 - 97/*'a'*/);\n    } else if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n      return c + (52 - 48/*'0'*/);\n    } else if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n      return 62;\n    } else if (c === 47/*'/'*/ || c === 95/*'_'*/) {\n      return 63;\n    } else {\n      const message = Unicode.stringOutput();\n      message.write(\"Invalid base-64 digit: \");\n      Format.debugChar(c, message);\n      throw new Error(message.bind());\n    }\n  }\n\n  /**\n   * Returns the Unicode code point of the base-64 digit that encodes the given\n   * 7-bit quantity.\n   */\n  encodeDigit(b: number): number {\n    return this.alphabet().charCodeAt(b);\n  }\n\n  /**\n   * Decodes the base-64 digits `c1`, `c2`, `c3`, and `c4`, and writes the 8 to\n   * 24 bit quantity they represent to the given `output`.\n   */\n  writeQuantum(c1: number, c2: number, c3: number, c4: number, output: Output): void {\n    const x = this.decodeDigit(c1);\n    const y = this.decodeDigit(c2);\n    if (c3 !== 61/*'='*/) {\n      const z = this.decodeDigit(c3);\n      if (c4 !== 61/*'='*/) {\n        const w = this.decodeDigit(c4);\n        output = output.write((x << 2) | (y >>> 4));\n        output = output.write((y << 4) | (z >>> 2));\n        output = output.write((z << 6) | w);\n      } else {\n        output = output.write((x << 2) | (y >>> 4));\n        output = output.write((y << 4) | (z >>> 2));\n      }\n    } else {\n      if (c4 !== 61/*'='*/) {\n        throw new Error(\"Improperly padded base-64\");\n      }\n      output = output.write((x << 2) | (y >>> 4));\n    }\n  }\n\n  /**\n   * Returns a `Parser` that decodes base-64 (7-bit ASCII) encoded input, and\n   * writes the decoded bytes to `output`.\n   */\n  parser<O>(output: Output<O>): Parser<O> {\n    return new Base64.Parser<O>(output, this);\n  }\n\n  /**\n   * Parses the base-64 (7-bit ASCII) encoded `input`, and writes the decoded\n   * bytes to `output`, returning a `Parser` continuation that knows how to\n   * parse any additional input.\n   */\n  parse<O>(input: Input, output: Output<O>): Parser<O> {\n    return Base64.Parser.parse(input, output, this);\n  }\n\n  /**\n   * Parses the base-64 (7-bit ASCII) encoded `input`, and writes the decoded\n   * bytes to a growable array, returning a `Parser` continuation that knows\n   * how to parse any additional input.  The returned `Parser` [[Parser.bind\n   * binds]] a `Uint8Array` array containing all parsed base-64 data.\n   */\n  parseUint8Array(input: Input): Parser<Uint8Array> {\n    return Base64.Parser.parse(input, Binary.uint8ArrayOutput(), this);\n  }\n\n  /**\n   * Returns a `Writer` that, when fed an input `Uint8Array`, returns a\n   * continuation that writes the base-64 (7-bit ASCII) encoding of the input\n   * `Uint8Array`.\n   */\n  uint8ArrayWriter(): Writer<Uint8Array, unknown>;\n  /**\n   * Returns a {@code Writer} continuation that writes the base-64 (7-bit ASCII)\n   * encoding of the {@code input} byte array.\n   */\n  uint8ArrayWriter(input: Uint8Array): Writer<unknown, Uint8Array>;\n  uint8ArrayWriter(input?: Uint8Array): Writer<unknown, unknown> {\n    if (input === void 0) {\n      return new Base64.Writer(void 0, void 0, this);\n    } else {\n      return new Base64.Writer(input, input, this);\n    }\n  }\n\n  /**\n   * Writes the base-64 (7-bit ASCII) encoding of the `input` `Uint8Array` to\n   * the `output`, returning a `Writer` continuation that knows how to write any\n   * remaining output that couldn't be immediately generated.\n   */\n  writeUint8Array(input: Uint8Array, output: Output): Writer<unknown, unknown> {\n    return Base64.Writer.write(output, void 0, input, this);\n  }\n\n  private static _standard?: Base64;\n  private static _standardUnpadded?: Base64;\n  private static _url?: Base64;\n  private static _urlUnpadded?: Base64;\n\n  /**\n   * Returns the `Base64` encoding with the standard alphabet, and required\n   * padding, if `isPadding` is `true`.\n   */\n  static standard(isPadded: boolean = true): Base64 {\n    if (isPadded) {\n      if (Base64._standard === void 0) {\n        Base64._standard = new Base64Standard(true);\n      }\n      return Base64._standard;\n    } else {\n      if (Base64._standardUnpadded === void 0) {\n        Base64._standardUnpadded = new Base64Standard(true);\n      }\n      return Base64._standardUnpadded;\n    }\n  }\n\n  /**\n   * Returns the `Base64` encoding with the url and filename safe alphabet,\n   * and required padding, if `isPadded` is `true`.\n   */\n  static url(isPadded: boolean = true): Base64 {\n    if (isPadded) {\n      if (Base64._url === void 0) {\n        Base64._url = new Base64Url(true);\n      }\n      return Base64._url;\n    } else {\n      if (Base64._urlUnpadded === void 0) {\n        Base64._urlUnpadded = new Base64Url(false);\n      }\n      return Base64._urlUnpadded;\n    }\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Parser: typeof Base64Parser; // defined by Base64Parser\n  /** @hidden */\n  static Writer: typeof Base64Writer; // defined by Base64Writer\n}\n\n/** @hidden */\nclass Base64Standard extends Base64 {\n  /** @hidden */\n  readonly _isPadded: boolean;\n\n  constructor(isPadded: boolean) {\n    super();\n    this._isPadded = isPadded;\n  }\n\n  alphabet(): string {\n    return \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  }\n\n  isPadded(): boolean;\n  isPadded(isPadded: boolean): Base64;\n  isPadded(isPadded?: boolean): boolean | Base64 {\n    if (isPadded === void 0) {\n      return this._isPadded;\n    } else {\n      if (isPadded === this._isPadded) {\n        return this;\n      } else {\n        return Base64.standard(isPadded);\n      }\n    }\n  }\n\n  isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c === 43/*'+'*/ || c === 47/*'/'*/;\n  }\n}\n\n/** @hidden */\nclass Base64Url extends Base64 {\n  /** @hidden */\n  readonly _isPadded: boolean;\n\n  constructor(isPadded: boolean) {\n    super();\n    this._isPadded = isPadded;\n  }\n\n  alphabet(): string {\n    return \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n  }\n\n  isPadded(): boolean;\n  isPadded(isPadded: boolean): Base64;\n  isPadded(isPadded?: boolean): boolean | Base64 {\n    if (isPadded === void 0) {\n      return this._isPadded;\n    } else {\n      if (isPadded === this._isPadded) {\n        return this;\n      } else {\n        return Base64.url(isPadded);\n      }\n    }\n  }\n\n  isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c === 45/*'-'*/ || c === 95/*'_'*/;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Diagnostic} from \"./Diagnostic\";\nimport {Base64} from \"./Base64\";\n\n/** @hidden */\nexport class Base64Parser<O> extends Parser<O> {\n  /** @hidden */\n  readonly _output: Output<O>;\n  /** @hidden */\n  readonly _base64: Base64;\n  /** @hidden */\n  readonly _p: number;\n  /** @hidden */\n  readonly _q: number;\n  /** @hidden */\n  readonly _r: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(output: Output<O>, base64: Base64, p: number = 0, q: number = 0,\n              r: number = 0, step: number = 1) {\n    super();\n    this._output = output;\n    this._base64 = base64;\n    this._p = p;\n    this._q = q;\n    this._r = r;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<O> {\n    return Base64Parser.parse(input, this._output.clone(), this._base64,\n                              this._p, this._q, this._r, this._step);\n  }\n\n  static parse<O>(input: Input, output: Output<O>, base64: Base64, p: number = 0,\n                  q: number = 0, r: number = 0, step: number = 1): Parser<O> {\n    let c = 0;\n    while (!input.isEmpty()) {\n      if (step === 1) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c))) {\n          input = input.step();\n          p = c;\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(output.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c))) {\n          input = input.step();\n          q = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"base64 digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c) || c === 61/*'='*/)) {\n          input = input.step();\n          r = c;\n          if (c !== 61/*'='*/) {\n            step = 4;\n          } else {\n            step = 5;\n          }\n        } else if (!input.isEmpty()) {\n          if (!base64.isPadded()) {\n            base64.writeQuantum(p, q, 61/*'='*/, 61/*'='*/, output);\n            return Parser.done(output.bind());\n          } else {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n        }\n      }\n      if (step === 4) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c) || c === 61/*'='*/)) {\n          input = input.step();\n          base64.writeQuantum(p, q, r, c, output);\n          r = 0;\n          q = 0;\n          p = 0;\n          if (c !== 61/*'='*/) {\n            step = 1;\n          } else {\n            return Parser.done(output.bind());\n          }\n        } else if (!input.isEmpty()) {\n          if (!base64.isPadded()) {\n            base64.writeQuantum(p, q, r, 61/*'='*/, output);\n            return Parser.done(output.bind());\n          } else {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n        }\n      } else if (step === 5) {\n        if (input.isCont() && (c = input.head(), c === 61/*'='*/)) {\n          input = input.step();\n          base64.writeQuantum(p, q, r, c, output);\n          r = 0;\n          q = 0;\n          p = 0;\n          return Parser.done(output.bind());\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(61/*'='*/, input));\n        }\n      }\n    }\n    return new Base64Parser<O>(output, base64, p, q, r, step);\n  }\n}\nBase64.Parser = Base64Parser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\nimport {Base64} from \"./Base64\";\n\n/** @hidden */\nexport class Base64Writer extends Writer<unknown, unknown> {\n  /** @hidden */\n  readonly _value: unknown;\n  /** @hidden */\n  readonly _input: Uint8Array | undefined;\n  /** @hidden */\n  readonly _base64: Base64;\n  /** @hidden */\n  readonly _index: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(value: unknown, input: Uint8Array | undefined, base64: Base64,\n              index: number = 0, step: number = 1) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._base64 = base64;\n    this._index = index;\n    this._step = step;\n  }\n\n  feed(value: unknown): Writer<unknown, unknown> {\n    if (value instanceof Uint8Array) {\n      return new Base64Writer(undefined, value, this._base64);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  pull(output: Output): Writer<unknown, unknown> {\n    return Base64Writer.write(output, this._value, this._input!, this._base64,\n                              this._index, this._step);\n  }\n\n  static write(output: Output, value: unknown, input: Uint8Array, base64: Base64,\n               index: number = 0, step: number = 1): Writer<unknown, unknown> {\n    while (index + 2 < input.length && output.isCont()) {\n      const x = input[index];\n      const y = input[index + 1];\n      const z = input[index + 2];\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((x << 4) | (y >>> 4)) & 0x3f));\n        step = 3;\n      }\n      if (step === 3 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((y << 2) | (z >>> 6)) & 0x3f));\n        step = 4;\n      }\n      if (step === 4 && output.isCont()) {\n        output = output.write(base64.encodeDigit(z & 0x3f));\n        index += 3;\n        step = 1;\n      }\n    }\n    if (index + 1 < input.length && output.isCont()) {\n      const x = input[index];\n      const y = input[index + 1];\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((x << 4) | (y >>> 4)) & 0x3f));\n        step = 3;\n      }\n      if (step === 3 && output.isCont()) {\n        output = output.write(base64.encodeDigit((y << 2) & 0x3f));\n        step = 4;\n      }\n      if (step === 4) {\n        if (!base64.isPadded()) {\n          index += 2;\n        } else if (output.isCont()) {\n          output = output.write(61/*'='*/);\n          index += 2;\n        }\n      }\n    } else if (index < input.length && output.isCont()) {\n      const x = input[index];\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit((x << 4) & 0x3f));\n        step = 3;\n      }\n      if (step === 3) {\n        if (!base64.isPadded()) {\n          index += 1;\n        } else if (output.isCont()) {\n          output = output.write(61/*'='*/);\n          step = 4;\n        }\n      }\n      if (step === 4 && output.isCont()) {\n        output = output.write(61/*'='*/);\n        index += 1;\n      }\n    }\n    if (index === input.length) {\n      return Writer.done(value);\n    } else if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base64Writer(value, input, base64, index, step);\n  }\n}\nBase64.Writer = Base64Writer;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport class KeysCursor<K, V> extends Cursor<K> {\n  private readonly _cursor: Cursor<[K, V]>;\n\n  constructor(cursor: Cursor<[K, V]>) {\n    super();\n    this._cursor = cursor;\n  }\n\n  isEmpty(): boolean {\n    return this._cursor.isEmpty();\n  }\n\n  head(): K {\n    return this._cursor.head()[0];\n  }\n\n  step(): void {\n    this._cursor.step();\n  }\n\n  skip(count: number): void {\n    this._cursor.skip(count);\n  }\n\n  hasNext(): boolean {\n    return this._cursor.hasNext();\n  }\n\n  nextIndex(): number {\n    return this._cursor.nextIndex();\n  }\n\n  next(): {value?: K, done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && value[0], done};\n  }\n\n  hasPrevious(): boolean {\n    return this._cursor.hasPrevious();\n  }\n\n  previousIndex(): number {\n    return this._cursor.previousIndex();\n  }\n\n  previous(): {value?: K, done: boolean} {\n    const {value, done} = this._cursor.previous();\n    return {value: value && value[0], done};\n  }\n\n  delete(): void {\n    this._cursor.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport class ValuesCursor<K, V> extends Cursor<V> {\n  private readonly _cursor: Cursor<[K, V]>;\n\n  constructor(cursor: Cursor<[K, V]>) {\n    super();\n    this._cursor = cursor;\n  }\n\n  isEmpty(): boolean {\n    return this._cursor.isEmpty();\n  }\n\n  head(): V {\n    return this._cursor.head()[1];\n  }\n\n  step(): void {\n    this._cursor.step();\n  }\n\n  skip(count: number): void {\n    this._cursor.skip(count);\n  }\n\n  hasNext(): boolean {\n    return this._cursor.hasNext();\n  }\n\n  nextIndex(): number {\n    return this._cursor.nextIndex();\n  }\n\n  next(): {value?: V, done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && value[1], done};\n  }\n\n  hasPrevious(): boolean {\n    return this._cursor.hasPrevious();\n  }\n\n  previousIndex(): number {\n    return this._cursor.previousIndex();\n  }\n\n  previous(): {value?: V, done: boolean} {\n    const {value, done} = this._cursor.previous();\n    return {value: value && value[1], done};\n  }\n\n  delete(): void {\n    this._cursor.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport abstract class NodeCursor<T, P> extends Cursor<T> {\n  /** @hidden */\n  readonly _pages: P[];\n  /** @hidden */\n  _index: number;\n  /** @hidden */\n  _pageIndex: number;\n  /** @hidden */\n  _pageCursor: Cursor<T> | undefined;\n\n  constructor(pages: P[], index: number = 0, pageIndex: number = 0, pageCursor?: Cursor<T>) {\n    super();\n    this._pages = pages;\n    this._index = index;\n    this._pageIndex = pageIndex;\n    this._pageCursor = pageCursor;\n  }\n\n  protected abstract pageSize(page: P): number;\n\n  protected abstract pageCursor(page: P): Cursor<T>;\n\n  protected abstract reversePageCursor(page: P): Cursor<T>;\n\n  isEmpty(): boolean {\n    do {\n      if (this._pageCursor !== void 0) {\n        if (!this._pageCursor.isEmpty()) {\n          return false;\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex < this._pages.length) {\n        this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n        this._pageIndex += 1;\n      } else {\n        this._pageIndex = this._pages.length;\n        return true;\n      }\n    } while (true);\n  }\n\n  head(): T {\n    do {\n      if (this._pageCursor !== void 0) {\n        if (!this._pageCursor.isEmpty()) {\n          return this._pageCursor.head();\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else {\n        if (this._pageIndex < this._pages.length) {\n          this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n          this._pageIndex += 1;\n        } else {\n          this._pageIndex = this._pages.length;\n          throw new Error(\"empty\");\n        }\n      }\n    } while (true);\n  }\n\n  step(): void {\n    do {\n      if (this._pageCursor !== void 0) {\n        if (!this._pageCursor.isEmpty()) {\n          this._index += 1;\n          return;\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else {\n        if (this._pageIndex < this._pages.length) {\n          this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n          this._pageIndex += 1;\n        } else {\n          this._pageIndex = this._pages.length;\n          throw new Error(\"empty\");\n        }\n      }\n    } while (true);\n  }\n\n  skip(count: number): void {\n    while (count > 0) {\n      if (this._pageCursor !== void 0) {\n        if (this._pageCursor.hasNext()) {\n          this._index += 1;\n          count -= 1;\n          this._pageCursor.next();\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex < this._pages.length) {\n        const page = this._pages[this._pageIndex];\n        const pageSize = this.pageSize(page);\n        this._pageIndex += 1;\n        if (pageSize < count) {\n          this._pageCursor = this.pageCursor(page);\n          if (count > 0) {\n            this._index += count;\n            this._pageCursor!.skip(count);\n            count = 0;\n          }\n          break;\n        } else {\n          this._index += pageSize;\n          count -= pageSize;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  hasNext(): boolean {\n    do {\n      if (this._pageCursor !== void 0) {\n        if (this._pageCursor.hasNext()) {\n          return true;\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex < this._pages.length) {\n        this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n        this._pageIndex += 1;\n      } else {\n        this._pageIndex = this._pages.length;\n        return false;\n      }\n    } while (true);\n  }\n\n  nextIndex(): number {\n    return this._index;\n  }\n\n  next(): {value?: T, done: boolean} {\n    do {\n      if (this._pageCursor !== void 0) {\n        if (this._pageCursor.hasNext()) {\n          this._index += 1;\n          return this._pageCursor.next();\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else {\n        if (this._pageIndex < this._pages.length) {\n          this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n          this._pageIndex += 1;\n        } else {\n          this._pageIndex = this._pages.length;\n          return {done: true};\n        }\n      }\n    } while (true);\n  }\n\n  hasPrevious(): boolean {\n    do {\n      if (this._pageCursor !== void 0) {\n        if (this._pageCursor.hasPrevious()) {\n          return true;\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex > 0) {\n        this._pageCursor = this.reversePageCursor(this._pages[this._pageIndex - 1]);\n        this._pageIndex -= 1;\n      } else {\n        this._pageIndex = 0;\n        return false;\n      }\n    } while (true);\n  }\n\n  previousIndex(): number {\n    return this._index - 1;\n  }\n\n  previous(): {value?: T, done: boolean} {\n    do {\n      if (this._pageCursor !== void 0) {\n        if (this._pageCursor.hasPrevious()) {\n          this._index -= 1;\n          return this._pageCursor.previous();\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex > 0) {\n        this._pageCursor = this.reversePageCursor(this._pages[this._pageIndex - 1]);\n        this._pageIndex -= 1;\n      } else {\n        this._pageIndex = 0;\n        return {done: true};\n      }\n    } while (true);\n  }\n\n  set(newValue: T): void {\n    this._pageCursor!.set(newValue);\n  }\n\n  delete(): void {\n    this._pageCursor!.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\nimport {BTreePage} from \"./BTreePage\";\n\n/** @hidden */\nexport abstract class BTreeContext<K, V> {\n  pageSplitSize: number;\n\n  compare(x: K, y: K): number {\n    return Objects.compare(x, y);\n  }\n\n  pageShouldSplit(page: BTreePage<K, V, unknown>): boolean {\n    return page.arity > this.pageSplitSize;\n  }\n\n  pageShouldMerge(page: BTreePage<K, V, unknown>): boolean {\n    return page.arity < this.pageSplitSize >>> 1;\n  }\n}\nBTreeContext.prototype.pageSplitSize = 32;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor, ReducedMap} from \"@swim/util\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTreePage} from \"./BTreePage\";\nimport {BTreeLeaf} from \"./BTreeLeaf\";\nimport {BTreeNode} from \"./BTreeNode\";\nimport {BTreeNodeCursor} from \"./BTreeNodeCursor\";\n\nexport class BTree<K = unknown, V = unknown, U = unknown> extends BTreeContext<K, V> implements ReducedMap<K, V, U> {\n  root: BTreePage<K, V, U>;\n\n  constructor(root: BTreePage<K, V, U> = BTree.Page.empty()) {\n    super();\n    this.root = root;\n  }\n\n  get size(): number {\n    return this.root.size;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  has(key: K): boolean {\n    return this.root.has(key, this);\n  }\n\n  get(key: K): V | undefined {\n    return this.root.get(key, this);\n  }\n\n  getEntry(index: number): [K, V] | undefined {\n    return this.root.getEntry(index);\n  }\n\n  firstKey(): K | undefined {\n    const entry = this.root.firstEntry();\n    if (entry !== void 0) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  firstValue(): V | undefined {\n    const entry = this.root.firstEntry();\n    if (entry !== void 0) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  firstEntry(): [K, V] | undefined {\n    return this.root.firstEntry();\n  }\n\n  lastKey(): K | undefined {\n    const entry = this.root.lastEntry();\n    if (entry !== void 0) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  lastValue(): V | undefined {\n    const entry = this.root.lastEntry();\n    if (entry !== void 0) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  lastEntry(): [K, V] | undefined {\n    return this.root.lastEntry();\n  }\n\n  nextKey(key: K): K | undefined {\n    const entry = this.root.nextEntry(key, this);\n    if (entry !== void 0) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  nextValue(key: K): V | undefined {\n    const entry = this.root.nextEntry(key, this);\n    if (entry !== void 0) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  nextEntry(key: K): [K, V] | undefined {\n    return this.root.nextEntry(key, this);\n  }\n\n  previousKey(key: K): K | undefined {\n    const entry = this.root.previousEntry(key, this);\n    if (entry !== void 0) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  previousValue(key: K): V | undefined {\n    const entry = this.root.previousEntry(key, this);\n    if (entry !== void 0) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  previousEntry(key: K): [K, V] | undefined {\n    return this.root.previousEntry(key, this);\n  }\n\n  set(key: K, newValue: V): this {\n    const oldRoot = this.root;\n    let newRoot = this.root.updated(key, newValue, this);\n    if (oldRoot !== newRoot) {\n      if (newRoot.size > oldRoot.size) {\n        newRoot = newRoot.balanced(this);\n      }\n      this.root = newRoot;\n    }\n    return this;\n  }\n\n  delete(key: K): boolean {\n    const oldRoot = this.root;\n    const newRoot = this.root.removed(key, this);\n    if (oldRoot !== newRoot) {\n      this.root = newRoot;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  drop(lower: number): this {\n    if (lower > 0 && this.root.size > 0) {\n      if (lower < this.root.size) {\n        this.root = this.root.drop(lower, this);\n      } else {\n        this.root = BTree.Page.empty();\n      }\n    }\n    return this;\n  }\n\n  take(upper: number): this {\n    if (upper < this.root.size && this.root.size > 0) {\n      if (upper > 0) {\n        this.root = this.root.take(upper, this);\n      } else {\n        this.root = BTree.Page.empty();\n      }\n    }\n    return this;\n  }\n\n  clear(): void {\n    this.root = BTree.Page.empty();\n  }\n\n  updated(key: K, newValue: V): BTree<K, V> {\n    const oldRoot = this.root;\n    let newRoot = oldRoot.updated(key, newValue, this);\n    if (oldRoot !== newRoot) {\n      if (newRoot.size > oldRoot.size) {\n        newRoot = newRoot.balanced(this);\n      }\n      return this.copy(newRoot);\n    } else {\n      return this;\n    }\n  }\n\n  removed(key: K): BTree<K, V> {\n    const oldRoot = this.root;\n    const newRoot = oldRoot.removed(key, this);\n    if (oldRoot !== newRoot) {\n      return this.copy(newRoot);\n    } else {\n      return this;\n    }\n  }\n\n  cleared(): BTree<K, V> {\n    if (!this.root.isEmpty()) {\n      return this.copy(BTree.Page.empty());\n    } else {\n      return this;\n    }\n  }\n\n  reduced(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): U {\n    const oldRoot = this.root;\n    const newRoot = oldRoot.reduced(identity, accumulator, combiner);\n    if (oldRoot !== newRoot) {\n      this.root = newRoot;\n    }\n    return newRoot.fold()!;\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     key: K,\n                                     value: V,\n                                     tree: BTree<K, V>) => T | void,\n                          thisArg?: S): T | undefined {\n    return this.root.forEach(callback, thisArg, this);\n  }\n\n  keys(): Cursor<K> {\n    return this.root.keys();\n  }\n\n  values(): Cursor<V> {\n    return this.root.values();\n  }\n\n  entries(): Cursor<[K, V]> {\n    return this.root.entries();\n  }\n\n  reverseKeys(): Cursor<K> {\n    return this.root.reverseKeys();\n  }\n\n  reverseValues(): Cursor<V> {\n    return this.root.reverseValues();\n  }\n\n  reverseEntries(): Cursor<[K, V]> {\n    return this.root.reverseEntries();\n  }\n\n  clone(): BTree<K, V> {\n    return this.copy(this.root);\n  }\n\n  protected copy(root: BTreePage<K, V, U>): BTree<K, V, U> {\n    const tree = new BTree(root);\n    if (tree.compare !== this.compare) {\n      tree.compare = this.compare;\n    }\n    if (tree.pageSplitSize !== this.pageSplitSize) {\n      tree.pageSplitSize = this.pageSplitSize;\n    }\n    return tree;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Page: typeof BTreePage; // defined by BTreePage\n  /** @hidden */\n  static Leaf: typeof BTreeLeaf; // defined by BTreeLeaf\n  /** @hidden */\n  static Node: typeof BTreeNode; // defined by BTreeNode\n  /** @hidden */\n  static NodeCursor: typeof BTreeNodeCursor; // defined by BTreeNodeCursor\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {KeysCursor} from \"./KeysCursor\";\nimport {ValuesCursor} from \"./ValuesCursor\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTree} from \"./BTree\";\nimport {BTreeLeaf} from \"./BTreeLeaf\";\n\n/** @hidden */\nexport abstract class BTreePage<K, V, U> {\n  abstract get arity(): number;\n\n  abstract get size(): number;\n\n  abstract isEmpty(): boolean;\n\n  abstract fold(): U | undefined;\n\n  abstract minKey(): K;\n\n  abstract maxKey(): K;\n\n  abstract has(key: K, tree: BTreeContext<K, V>): boolean;\n\n  abstract get(key: K, tree: BTreeContext<K, V>): V | undefined;\n\n  abstract getEntry(index: number): [K, V] | undefined;\n\n  abstract firstEntry(): [K, V] | undefined;\n\n  abstract lastEntry(): [K, V] | undefined;\n\n  abstract nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined;\n\n  abstract previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined;\n\n  abstract updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract removed(key: K, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract drop(lower: number, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract take(upper: number, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract balanced(tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract split(index: number): BTreePage<K, V, U>;\n\n  abstract splitLeft(index: number): BTreePage<K, V, U>;\n\n  abstract splitRight(index: number): BTreePage<K, V, U>;\n\n  abstract reduced(identity: U, accumulator: (result: U, element: V) => U,\n                   combiner: (result: U, result2: U) => U): BTreePage<K, V, U>;\n\n  abstract forEach<T, S>(callback: (this: S,\n                                    key: K,\n                                    value: V,\n                                    tree: BTree<K, V>) => T | void,\n                         thisArg: S,\n                         tree: BTree<K, V>): T | undefined;\n\n  keys(): Cursor<K> {\n    return new KeysCursor(this.entries());\n  }\n\n  values(): Cursor<V> {\n    return new ValuesCursor(this.entries());\n  }\n\n  abstract entries(): Cursor<[K, V]>;\n\n  reverseKeys(): Cursor<K> {\n    return new KeysCursor(this.reverseEntries());\n  }\n\n  reverseValues(): Cursor<V> {\n    return new ValuesCursor(this.reverseEntries());\n  }\n\n  abstract reverseEntries(): Cursor<[K, V]>;\n\n  private static _empty?: BTreeLeaf<unknown, unknown, unknown>;\n\n  static empty<K, V, U>(): BTreeLeaf<K, V, U> {\n    if (BTreePage._empty === void 0) {\n      BTreePage._empty = new BTree.Leaf([], void 0);\n    }\n    return BTreePage._empty as BTreeLeaf<K, V, U>;\n  }\n}\nBTree.Page = BTreePage;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTree} from \"./BTree\";\nimport {BTreePage} from \"./BTreePage\";\nimport {BTreeNode} from \"./BTreeNode\";\n\n/** @hidden */\nexport class BTreeLeaf<K, V, U> extends BTreePage<K, V, U> {\n  readonly _slots: [K, V][];\n  readonly _fold: U | undefined;\n\n  constructor(slots: [K, V][], fold: U | undefined) {\n    super();\n    this._slots = slots;\n    this._fold = fold;\n  }\n\n  get arity(): number {\n    return this._slots.length;\n  }\n\n  get size(): number {\n    return this._slots.length;\n  }\n\n  isEmpty(): boolean {\n    return this._slots.length === 0;\n  }\n\n  fold(): U | undefined {\n    return this._fold;\n  }\n\n  minKey(): K {\n    return this._slots[0][0];\n  }\n\n  maxKey(): K {\n    return this._slots[this._slots.length - 1][0];\n  }\n\n  has(key: K, tree: BTreeContext<K, V>): boolean {\n    return this.lookup(key, tree) >= 0;\n  }\n\n  get(key: K, tree: BTreeContext<K, V>): V | undefined {\n    const x = this.lookup(key, tree);\n    if (x >= 0) {\n      return this._slots[x][1];\n    } else {\n      return void 0;\n    }\n  }\n\n  getEntry(index: number): [K, V] | undefined {\n    return this._slots[index];\n  }\n\n  firstEntry(): [K, V] | undefined {\n    const slots = this._slots;\n    if (slots.length !== 0) {\n      return slots[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  lastEntry(): [K, V] | undefined {\n    const slots = this._slots;\n    if (slots.length !== 0) {\n      return slots[slots.length - 1];\n    } else {\n      return void 0;\n    }\n  }\n\n  nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    return this._slots[x];\n  }\n\n  previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x -= 1;\n    } else {\n      x = -(x + 2);\n    }\n    return this._slots[x];\n  }\n\n  updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      return this.updatedSlot(x, key, newValue);\n    } else {\n      x = -(x + 1);\n      return this.insertedSlot(x, key, newValue);\n    }\n  }\n\n  private updatedSlot(x: number, key: K, newValue: V): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    if (newValue !== oldSlots[x][1]) {\n      const newSlots = oldSlots.slice(0);\n      newSlots[x] = [key, newValue];\n      return this.newLeaf(newSlots, void 0);\n    } else {\n      return this;\n    }\n  }\n\n  private insertedSlot(x: number, key: K, newValue: V): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    const n = oldSlots.length + 1;\n    const newSlots = new Array<[K, V]>(n);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    newSlots[x] = [key, newValue];\n    for (let i = x; i < n - 1; i += 1) {\n      newSlots[i + 1] = oldSlots[i];\n    }\n    return this.newLeaf(newSlots, void 0);\n  }\n\n  removed(key: K, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    const x = this.lookup(key, tree);\n    if (x >= 0) {\n      if (this._slots.length > 1) {\n        return this.removedSlot(x);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  private removedSlot(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    const newSlots = new Array<[K, V]>(oldSlots.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    for (let i = x; i < newSlots.length; i += 1) {\n      newSlots[i] = oldSlots[i + 1];\n    }\n    return this.newLeaf(newSlots, void 0);\n  }\n\n  drop(lower: number, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    if (lower > 0) {\n      const oldSlots = this._slots;\n      if (lower < oldSlots.length) {\n        const size = oldSlots.length - lower;\n        const newSlots = new Array<[K, V]>(size);\n        for (let i = 0; i < size; i += 1) {\n          newSlots[i] = oldSlots[i + lower];\n        }\n        return this.newLeaf(newSlots, void 0);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  take(upper: number, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    if (upper < oldSlots.length) {\n      if (upper > 0) {\n        const newSlots = new Array<[K, V]>(upper);\n        for (let i = 0; i < upper; i += 1) {\n          newSlots[i] = oldSlots[i];\n        }\n        return this.newLeaf(newSlots, void 0);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  balanced(tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    const n = this._slots.length;\n    if (n > 1 && tree.pageShouldSplit(this)) {\n      const x = n >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  split(x: number): BTreeNode<K, V, U> {\n    const newPages = new Array<BTreePage<K, V, U>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<K>(1);\n    newKnots[0] = newRightPage.minKey();\n\n    return this.newNode(newPages, newKnots, void 0, this._slots.length);\n  }\n\n  splitLeft(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    const newSlots = new Array<[K, V]>(x);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    return this.newLeaf(newSlots, void 0);\n  }\n\n  splitRight(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    const y = oldSlots.length - x;\n    const newSlots = new Array<[K, V]>(y);\n    for (let i = 0; i < y; i += 1) {\n      newSlots[i] = oldSlots[i + x];\n    }\n    return this.newLeaf(newSlots, void 0);\n  }\n\n  reduced(identity: U, accumulator: (result: U, element: V) => U,\n          combiner: (result: U, result2: U) => U): BTreeLeaf<K, V, U> {\n    if (this._fold === void 0) {\n      const slots = this._slots;\n      let fold = identity;\n      for (let i = 0, n = slots.length; i < n; i += 1) {\n        fold = accumulator(fold, slots[i][1]);\n      }\n      return this.newLeaf(slots, fold);\n    } else {\n      return this;\n    }\n  }\n\n  forEach<T, S>(callback: (this: S,\n                           key: K,\n                           value: V,\n                           tree: BTree<K, V>) => T | void,\n                thisArg: S,\n                tree: BTree<K, V>): T | undefined {\n    const slots = this._slots;\n    for (let i = 0, n = slots.length; i < n; i += 1) {\n      const slot = slots[i];\n      const result = callback.call(thisArg, slot[0], slot[1], tree);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  entries(): Cursor<[K, V]> {\n    return Cursor.array(this._slots);\n  }\n\n  reverseEntries(): Cursor<[K, V]> {\n    return Cursor.array(this._slots, this._slots.length);\n  }\n\n  private lookup(key: K, tree: BTreeContext<K, V>): number {\n    let lo = 0;\n    let hi = this._slots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      const order = tree.compare(key, this._slots[mid][0]);\n      if (order > 0) {\n        lo = mid + 1;\n      } else if (order < 0) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n\n  protected newLeaf(slots: [K, V][], fold: U | undefined): BTreeLeaf<K, V, U> {\n    return new BTreeLeaf(slots, fold);\n  }\n\n  protected newNode(pages: BTreePage<K, V, U>[], knots: K[], fold: U | undefined, size: number): BTreeNode<K, V, U> {\n    return new BTree.Node(pages, knots, fold, size);\n  }\n}\nBTree.Leaf = BTreeLeaf;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTree} from \"./BTree\";\nimport {BTreePage} from \"./BTreePage\";\n\n/** @hidden */\nexport class BTreeNode<K, V, U> extends BTreePage<K, V, U> {\n  readonly _pages: BTreePage<K, V, U>[];\n  readonly _knots: K[];\n  readonly _fold: U | undefined;\n  readonly _size: number;\n\n  constructor(pages: BTreePage<K, V, U>[], knots: K[], fold: U | undefined, size: number) {\n    super();\n    this._pages = pages;\n    this._knots = knots;\n    this._fold = fold;\n    this._size = size;\n  }\n\n  get arity(): number {\n    return this._pages.length;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  fold(): U | undefined {\n    return this._fold;\n  }\n\n  minKey(): K {\n    return this._pages[0].minKey();\n  }\n\n  maxKey(): K {\n    return this._pages[this._pages.length - 1].maxKey();\n  }\n\n  has(key: K, tree: BTreeContext<K, V>): boolean {\n    let xx = this.lookup(key, tree);\n    if (xx > 0) {\n      xx += 1;\n    } else if (xx < 0) {\n      xx = -(xx + 1);\n    } else {\n      return true;\n    }\n    return this._pages[xx].has(key, tree);\n  }\n\n  get(key: K, tree: BTreeContext<K, V>): V | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    return this._pages[x].get(key, tree);\n  }\n\n  getEntry(x: number): [K, V] | undefined {\n    const pages = this._pages;\n    for (let i = 0, n = pages.length; i < n; i += 1) {\n      const page = pages[i];\n      if (x < page.size) {\n        return page.getEntry(x);\n      } else {\n        x -= page.size;\n      }\n    }\n    return void 0;\n  }\n\n  firstEntry(): [K, V] | undefined {\n    const pages = this._pages;\n    if (pages.length !== 0) {\n      return pages[0].firstEntry();\n    } else {\n      return void 0;\n    }\n  }\n\n  lastEntry(): [K, V] | undefined {\n    const pages = this._pages;\n    if (pages.length !== 0) {\n      return pages[pages.length - 1].lastEntry();\n    } else {\n      return void 0;\n    }\n  }\n\n  nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const pages = this._pages;\n    let entry = pages[x].nextEntry(key, tree);\n    if (entry === void 0 && x + 1 < pages.length) {\n      entry = pages[x + 1].nextEntry(key, tree);\n    }\n    return entry;\n  }\n\n  previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const pages = this._pages;\n    let entry = pages[x].previousEntry(key, tree);\n    if (entry === void 0 && x > 0) {\n      entry = pages[x - 1].previousEntry(key, tree);\n    }\n    return entry;\n  }\n\n  updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreeNode<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const oldPage = this._pages[x];\n    const newPage = oldPage.updated(key, newValue, tree);\n    if (oldPage !== newPage) {\n      if (oldPage.size !== newPage.size && tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  private updatedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newPages = oldPages.slice(0);\n    newPages[x] = newPage;\n\n    const oldKnots = this._knots;\n    let newKnots: K[];\n    if (oldKnots.length > 0) {\n      newKnots = oldKnots.slice(0);\n      if (x > 0) {\n        newKnots[x - 1] = newPage.minKey();\n      }\n    } else {\n      newKnots = [];\n    }\n\n    const newSize = this._size - oldPage.size + newPage.size;\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  private updatedPageSplit(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length + 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n\n    const newLeftPage = newPage.splitLeft(newPage.arity >>> 1);\n    const newRightPage = newPage.splitRight(newPage.arity >>> 1);\n    newPages[x] = newLeftPage;\n    newPages[x + 1] = newRightPage;\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + 1] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<K>(oldPages.length);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i];\n      }\n      newKnots[x - 1] = newLeftPage.minKey();\n      newKnots[x] = newRightPage.minKey();\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i + 1] = oldKnots[i];\n      }\n    } else {\n      newKnots[0] = newRightPage.minKey();\n      for (let i = 0; i < oldKnots.length; i += 1) {\n        newKnots[i + 1] = oldKnots[i];\n      }\n    }\n\n    const newSize = this._size - oldPage.size + newPage.size;\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  private updatedPageMerge(x: number, newPage: BTreeNode<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const midPages = newPage._pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length + midPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n    for (let i = 0; i < midPages.length; i += 1) {\n      newPages[i + x] = midPages[i];\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + midPages.length - 1] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const midKnots = newPage._knots;\n    const newKnots = new Array<K>(newPages.length - 1);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i];\n      }\n      newKnots[x - 1] = midPages[0].minKey();\n      for (let i = 0; i < midKnots.length; i += 1) {\n        newKnots[i + x] = midKnots[i];\n      }\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i + midKnots.length] = oldKnots[i];\n      }\n    } else {\n      for (let i = 0; i < midKnots.length; i += 1) {\n        newKnots[i] = midKnots[i];\n      }\n      newKnots[midKnots.length] = oldPages[1].minKey();\n      for (let i = 1; i < oldKnots.length; i += 1) {\n        newKnots[i + midKnots.length] = oldKnots[i];\n      }\n    }\n\n    const newSize = this._size - oldPage.size + newPage.size;\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  removed(key: K, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const oldPage = this._pages[x];\n    const newPage = oldPage.removed(key, tree);\n    if (oldPage !== newPage) {\n      return this.replacedPage(x, newPage, oldPage, tree);\n    } else {\n      return this;\n    }\n  }\n\n  private replacedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>,\n                       tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (!newPage.isEmpty()) {\n      if (newPage instanceof BTreeNode && tree.pageShouldMerge(newPage)) {\n        return this.updatedPageMerge(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else if (this._pages.length > 2) {\n      return this.removedPage(x, newPage, oldPage);\n    } else if (this._pages.length > 1) {\n      if (x === 0) {\n        return this._pages[1];\n      } else {\n        return this._pages[0];\n      }\n    } else {\n      return BTreePage.empty();\n    }\n  }\n\n  private removedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i - 1] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<K>(oldKnots.length - 1);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i];\n      }\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i - 1] = oldKnots[i];\n      }\n    } else {\n      for (let i = 1; i < oldKnots.length; i += 1) {\n        newKnots[i - 1] = oldKnots[i];\n      }\n    }\n\n    const newSize = this._size - oldPage.size;\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  drop(lower: number, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (lower > 0) {\n      let newSize = this._size;\n      if (lower < newSize) {\n        const oldPages = this._pages;\n        let x = 0;\n        while (x < oldPages.length) {\n          const size = oldPages[x].size;\n          if (size <= lower) {\n            newSize -= size;\n            lower -= size;\n            x += 1;\n          } else {\n            break;\n          }\n        }\n        const newArity = oldPages.length - x;\n        if (newArity > 1) {\n          let newNode: BTreeNode<K, V, U>;\n          if (x > 0) {\n            const newPages = new Array<BTreePage<K, V, U>>(newArity);\n            for (let i = 0; i < newArity; i += 1) {\n              newPages[i] = oldPages[i + x];\n            }\n            const newKnots = new Array<K>(newArity - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this._knots[i + x];\n            }\n            newNode = this.newNode(newPages, newKnots, void 0, newSize);\n          } else {\n            newNode = this;\n          }\n          if (lower > 0) {\n            const oldPage = oldPages[x];\n            const newPage = oldPage.drop(lower, tree);\n            return newNode.replacedPage(0, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else {\n          return oldPages[x].drop(lower, tree);\n        }\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  take(upper: number, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (upper < this._size) {\n      if (upper > 0) {\n        const oldPages = this._pages;\n        let x = 0;\n        let newSize = 0;\n        while (x < oldPages.length && upper > 0) {\n          const size = oldPages[x].size;\n          newSize += size;\n          x += 1;\n          if (size <= upper) {\n            upper -= size;\n          } else {\n            break;\n          }\n        }\n        const newArity = upper === 0 ? x : x + 1;\n        if (newArity > 1) {\n          let newNode: BTreeNode<K, V, U>;\n          if (x < oldPages.length) {\n            const newPages = new Array<BTreePage<K, V, U>>(newArity);\n            for (let i = 0; i < newArity; i += 1) {\n              newPages[i] = oldPages[i];\n            }\n            const newKnots = new Array<K>(newArity - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this._knots[i];\n            }\n            newNode = this.newNode(newPages, newKnots, void 0, newSize);\n          } else {\n            newNode = this;\n          }\n          if (upper > 0) {\n            const oldPage = oldPages[x - 1];\n            const newPage = oldPage.take(upper, tree);\n            return newNode.replacedPage(x - 1, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else if (upper > 0) {\n          return oldPages[0].take(upper, tree);\n        } else {\n          return oldPages[0];\n        }\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  balanced(tree: BTreeContext<K, V>): BTreeNode<K, V, U> {\n    if (this._pages.length > 1 && tree.pageShouldSplit(this)) {\n      const x = this._knots.length >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  split(x: number): BTreeNode<K, V, U> {\n    const newPages = new Array<BTreePage<K, V, U>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<K>(1);\n    newKnots[0] = newRightPage.minKey();\n\n    return this.newNode(newPages, newKnots, void 0, this._size);\n  }\n\n  splitLeft(x: number): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newPages = new Array<BTreePage<K, V, U>>(x + 1);\n    for (let i = 0; i < x + 1; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<K>(x);\n    for (let i = 0; i < x; i += 1) {\n      newKnots[i] = oldKnots[i];\n    }\n\n    let newSize = 0;\n    for (let i = 0; i <= x; i += 1) {\n      newSize += newPages[i].size;\n    }\n\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  splitRight(x: number): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newArity = oldPages.length - (x + 1);\n    const newPages = new Array<BTreePage<K, V, U>>(newArity);\n    for (let i = 0; i < newArity; i += 1) {\n      newPages[i] = oldPages[i + (x + 1)];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<K>(newArity - 1);\n    for (let i = 0; i < newKnots.length; i += 1) {\n      newKnots[i] = oldKnots[i + (x + 1)];\n    }\n\n    let newSize = 0;\n    for (let i = 0; i < newArity; i += 1) {\n      newSize += newPages[i].size;\n    }\n\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  reduced(identity: U, accumulator: (result: U, element: V) => U,\n          combiner: (result: U, result2: U) => U): BTreeNode<K, V, U> {\n    if (this._fold === void 0) {\n      const oldPages = this._pages;\n      const n = oldPages.length;\n      const newPages = new Array<BTreePage<K, V, U>>(n);\n      for (let i = 0; i < n; i += 1) {\n        newPages[i] = oldPages[i].reduced(identity, accumulator, combiner);\n      }\n      // assert n > 0;\n      let fold: U = newPages[0].fold()!;\n      for (let i = 1; i < n; i += 1) {\n        fold = combiner(fold, newPages[i].fold()!);\n      }\n      return this.newNode(newPages, this._knots, fold, this._size);\n    } else {\n      return this;\n    }\n  }\n\n  forEach<T, S>(callback: (this: S,\n                           key: K,\n                           value: V,\n                           tree: BTree<K, V>) => T | void,\n                thisArg: S,\n                tree: BTree<K, V>): T | undefined {\n    const pages = this._pages;\n    for (let i = 0, n = pages.length; i < n; i += 1) {\n      const result = pages[i].forEach(callback, thisArg, tree);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  entries(): Cursor<[K, V]> {\n    return new BTree.NodeCursor(this._pages);\n  }\n\n  reverseEntries(): Cursor<[K, V]> {\n    return new BTree.NodeCursor(this._pages, this._size, this._pages.length);\n  }\n\n  private lookup(key: K, tree: BTreeContext<K, V>): number {\n    let lo = 0;\n    let hi = this._knots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      const order = tree.compare(key, this._knots[mid]);\n      if (order > 0) {\n        lo = mid + 1;\n      } else if (order < 0) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n\n  protected newNode(pages: BTreePage<K, V, U>[], knots: K[], fold: U | undefined, size: number): BTreeNode<K, V, U> {\n    return new BTreeNode(pages, knots, fold, size);\n  }\n}\nBTree.Node = BTreeNode;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {NodeCursor} from \"./NodeCursor\";\nimport {BTree} from \"./BTree\";\nimport {BTreePage} from \"./BTreePage\";\n\nexport class BTreeNodeCursor<K, V, U> extends NodeCursor<[K, V], BTreePage<K, V, U>> {\n  constructor(pages: BTreePage<K, V, U>[], index?: number, pageIndex?: number,\n              subCursor?: Cursor<[K, V]>) {\n    super(pages, index, pageIndex, subCursor);\n  }\n\n  protected pageSize(page: BTreePage<K, V, U>): number {\n    return page.size;\n  }\n\n  protected pageCursor(page: BTreePage<K, V, U>): Cursor<[K, V]> {\n    return page.entries();\n  }\n\n  protected reversePageCursor(page: BTreePage<K, V, U>): Cursor<[K, V]> {\n    return page.reverseEntries();\n  }\n}\nBTree.NodeCursor = BTreeNodeCursor;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Random, Objects} from \"@swim/util\";\nimport {STreePage} from \"./STreePage\";\n\n/** @hidden */\nexport abstract class STreeContext<V, I> {\n  pageSplitSize: number;\n \n  identify(value: V): I {\n    const id = new Uint8Array(6);\n    Random.fillBytes(id);\n    return id as unknown as I;\n  }\n\n  compare(x: I, y: I): number {\n    return Objects.compare(x, y);\n  }\n\n  pageShouldSplit(page: STreePage<V, I>): boolean {\n    return page.arity > this.pageSplitSize;\n  }\n\n  pageShouldMerge(page: STreePage<V, I>): boolean {\n    return page.arity < this.pageSplitSize >>> 1;\n  }\n}\nSTreeContext.prototype.pageSplitSize = 32;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STreePage} from \"./STreePage\";\nimport {STreeLeaf} from \"./STreeLeaf\";\nimport {STreeNode} from \"./STreeNode\";\nimport {STreeNodeCursor} from \"./STreeNodeCursor\";\n\nexport class STree<V = unknown, I = unknown> extends STreeContext<V, I> {\n  root: STreePage<V, I>;\n\n  constructor(root: STreePage<V, I> = STree.Page.empty()) {\n    super();\n    this.root = root;\n  }\n\n  get length(): number {\n    return this.root.size;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  get(index: number, id?: I): V | undefined {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        return void 0;\n      }\n    }\n    return this.root.get(index);\n  }\n\n  getEntry(index: number, id?: I): [I, V] | undefined {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        return void 0;\n      }\n    }\n    return this.root.getEntry(index);\n  }\n\n  set(index: number, newValue: V, id?: I): this {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (index < 0 || index >= oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.updated(index, newValue, this);\n    return this;\n  }\n\n  insert(index: number, newValue: V, id?: I): this {\n    const oldRoot = this.root;\n    if (index < 0 || index > oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.inserted(index, newValue, id, this).balanced(this);\n    return this;\n  }\n\n  remove(index: number, id?: I): this {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (index < 0 || index > oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.removed(index, this);\n    return this;\n  }\n\n  push(...newValues: V[]): number {\n    let newRoot = this.root;\n    for (let i = 0; i < newValues.length; i += 1) {\n      newRoot = newRoot.inserted(newRoot.size, newValues[i], void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return newRoot.size;\n  }\n\n  pop(): V | undefined {\n    const oldRoot = this.root;\n    const index = oldRoot.size - 1;\n    if (index >= 0) {\n      const oldValue = oldRoot.get(index);\n      this.root = oldRoot.removed(index, this);\n      return oldValue;\n    } else {\n      return void 0;\n    }\n  }\n\n  unshift(...newValues: V[]): number {\n    let newRoot = this.root;\n    for (let i = newValues.length - 1; i >= 0; i -= 1) {\n      newRoot = newRoot.inserted(0, newValues[i], void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return newRoot.size;\n  }\n\n  shift(): V | undefined {\n    const oldRoot = this.root;\n    if (oldRoot.size > 0) {\n      const oldValue = oldRoot.get(0);\n      this.root = oldRoot.removed(0, this);\n      return oldValue;\n    } else {\n      return void 0;\n    }\n  }\n\n  move(fromIndex: number, toIndex: number, id?: I): this {\n    if (id !== void 0) {\n      fromIndex = this.lookup(id, fromIndex);\n      if (fromIndex < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (fromIndex < 0 || fromIndex >= oldRoot.size) {\n      throw new RangeError(\"\" + fromIndex);\n    }\n    if (toIndex < 0 || toIndex >= oldRoot.size) {\n      throw new RangeError(\"\" + toIndex);\n    }\n    if (fromIndex !== toIndex) {\n      const entry = oldRoot.getEntry(fromIndex)!;\n      this.root = oldRoot.removed(fromIndex, this)\n                         .inserted(toIndex, entry[1], entry[0], this)\n                         .balanced(this);\n    }\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newValues: V[]): V[] {\n    let newRoot = this.root;\n    if (start < 0) {\n      start = newRoot.size + start;\n    }\n    start = Math.min(Math.max(0, start), newRoot.size);\n    if (deleteCount === void 0) {\n      deleteCount = newRoot.size - start;\n    }\n    const deleted = [] as V[];\n    for (let i = start, n = start + deleteCount; i < n; i += 1) {\n      deleted.push(newRoot.get(start)!);\n      newRoot = newRoot.removed(start, this);\n    }\n    for (let i = 0; i < newValues.length; i += 1) {\n      newRoot = newRoot.inserted(start + i, newValues[i], void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return deleted;\n  }\n\n  drop(lower: number): this {\n    const oldRoot = this.root;\n    if (lower > 0 && oldRoot.size > 0) {\n      if (lower < oldRoot.size) {\n        this.root = oldRoot.drop(lower, this);\n      } else {\n        this.root = STree.Page.empty();\n      }\n    }\n    return this;\n  }\n\n  take(upper: number): this {\n    const oldRoot = this.root;\n    if (upper < oldRoot.size && oldRoot.size > 0) {\n      if (upper > 0) {\n        this.root = oldRoot.take(upper, this);\n      } else {\n        this.root = STree.Page.empty();\n      }\n    }\n    return this;\n  }\n\n  clear(): void {\n    this.root = STree.Page.empty();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     value: V,\n                                     index: number,\n                                     tree: STree<V, I>,\n                                     id: I) => T | void,\n                          thisArg?: S): T | undefined {\n    return this.root.forEach(callback, thisArg, 0, this);\n  }\n\n  keys(): Cursor<I> {\n    return this.root.keys();\n  }\n\n  values(): Cursor<V> {\n    return this.root.values();\n  }\n\n  entries(): Cursor<[I, V]> {\n    return this.root.entries();\n  }\n\n  reverseKeys(): Cursor<I> {\n    return this.root.reverseKeys();\n  }\n\n  reverseValues(): Cursor<V> {\n    return this.root.reverseValues();\n  }\n\n  reverseEntries(): Cursor<[I, V]> {\n    return this.root.reverseEntries();\n  }\n\n  clone(): STree<V, I> {\n    return this.copy(this.root);\n  }\n\n  protected copy(root: STreePage<V, I>): STree<V, I> {\n    const tree = new STree(root);\n    if (tree.identify !== this.identify) {\n      tree.identify = this.identify;\n    }\n    if (tree.compare !== this.compare) {\n      tree.compare = this.compare;\n    }\n    if (tree.pageSplitSize !== this.pageSplitSize) {\n      tree.pageSplitSize = this.pageSplitSize;\n    }\n    return tree;\n  }\n\n  lookup(id: I, start: number = 0): number {\n    const root = this.root;\n    start = Math.min(Math.max(0, start), root.size - 1);\n    let index = start;\n    do {\n      const entry = root.getEntry(index);\n      if (entry !== void 0 && this.compare(entry[0], id) === 0) {\n        return index;\n      }\n      index = (index + 1) % root.size;\n    } while (isFinite(index) && index !== start);\n    return -1;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Page: typeof STreePage; // defined by STreePage\n  /** @hidden */\n  static Leaf: typeof STreeLeaf; // defined by STreeLeaf\n  /** @hidden */\n  static Node: typeof STreeNode; // defined by STreeNode\n  /** @hidden */\n  static NodeCursor: typeof STreeNodeCursor; // defined by STreeNodeCursor\n}\nSTree.prototype.pageSplitSize = 32;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {KeysCursor} from \"./KeysCursor\";\nimport {ValuesCursor} from \"./ValuesCursor\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STree} from \"./STree\";\nimport {STreeLeaf} from \"./STreeLeaf\";\n\n/** @hidden */\nexport abstract class STreePage<V = unknown, I = unknown> {\n  abstract get arity(): number;\n\n  abstract get size(): number;\n\n  abstract isEmpty(): boolean;\n\n  abstract get(index: number): V | undefined;\n\n  abstract getEntry(index: number): [I, V] | undefined;\n\n  abstract updated(index: number, newValue: V, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract removed(index: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract drop(lower: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract take(upper: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract balanced(tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract split(index: number): STreePage<V, I>;\n\n  abstract splitLeft(index: number): STreePage<V, I>;\n\n  abstract splitRight(index: number): STreePage<V, I>;\n\n  abstract forEach<T, S>(callback: (this: S,\n                                    value: V,\n                                    index: number,\n                                    tree: STree<V, I>,\n                                    id: I) => T | void,\n                         thisArg: S,\n                         offset: number,\n                         tree: STree<V, I>): T | undefined;\n\n  keys(): Cursor<I> {\n    return new KeysCursor(this.entries());\n  }\n\n  values(): Cursor<V> {\n    return new ValuesCursor(this.entries());\n  }\n\n  abstract entries(): Cursor<[I, V]>;\n\n  reverseKeys(): Cursor<I> {\n    return new KeysCursor(this.reverseEntries());\n  }\n\n  reverseValues(): Cursor<V> {\n    return new ValuesCursor(this.reverseEntries());\n  }\n\n  abstract reverseEntries(): Cursor<[I, V]>;\n\n  private static _empty?: STreeLeaf<unknown, unknown>;\n\n  static empty<V, I>(): STreeLeaf<V, I> {\n    if (STreePage._empty === void 0) {\n      STreePage._empty = new STree.Leaf([]);\n    }\n    return STreePage._empty as STreeLeaf<V, I>;\n  }\n}\nSTree.Page = STreePage;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STree} from \"./STree\";\nimport {STreePage} from \"./STreePage\";\nimport {STreeNode} from \"./STreeNode\";\n\n/** @hidden */\nexport class STreeLeaf<V, I> extends STreePage<V, I> {\n  readonly _slots: [I, V][];\n\n  constructor(slots: [I, V][]) {\n    super();\n    this._slots = slots;\n  }\n\n  get arity(): number {\n    return this._slots.length;\n  }\n\n  get size(): number {\n    return this._slots.length;\n  }\n\n  isEmpty(): boolean {\n    return this._slots.length === 0;\n  }\n\n  get(index: number): V | undefined {\n    const slot = this._slots[index];\n    if (slot !== void 0) {\n      return slot[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  getEntry(index: number): [I, V] | undefined {\n    return this._slots[index];\n  }\n\n  updated(index: number, newValue: V, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index >= this._slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    return this.updatedItem(index, newValue);\n  }\n\n  private updatedItem(index: number, newValue: V): STreeLeaf<V, I> {\n    const oldItems = this._slots;\n    const oldSlot = oldItems[index];\n    if (newValue !== oldSlot[1]) {\n      const newValues = oldItems.slice(0);\n      newValues[index] = [oldSlot[0], newValue];\n      return new STreeLeaf(newValues);\n    } else {\n      return this;\n    }\n  }\n\n  inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index > this._slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    return this.insertedItem(index, newValue, id, tree);\n  }\n\n  private insertedItem(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (id === void 0) {\n      id = tree.identify(newValue);\n    }\n    const oldSlots = this._slots;\n    const newSlots = new Array<[I, V]>(oldSlots.length + 1);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    newSlots[index] = [id, newValue];\n    for (let i = index; i < oldSlots.length; i += 1) {\n      newSlots[i + 1] = oldSlots[i];\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  removed(index: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index >= this._slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    if (this._slots.length > 1) {\n      return this.removedSlot(index);\n    } else {\n      return STreePage.empty();\n    }\n  }\n\n  private removedSlot(index: number): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    const newSlots = new Array<[I, V]>(oldSlots.length - 1);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    for (let i = index; i < newSlots.length; i += 1) {\n      newSlots[i] = oldSlots[i + 1];\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  drop(lower: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    if (lower > 0 && oldSlots.length > 0) {\n      if (lower < oldSlots.length) {\n        const size = oldSlots.length - lower;\n        const newSlots = new Array<[I, V]>(size);\n        for (let i = 0; i < size; i += 1) {\n          newSlots[i] = oldSlots[i + lower];\n        }\n        return new STreeLeaf(newSlots);\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  take(upper: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    if (upper < oldSlots.length && oldSlots.length > 0) {\n      if (upper > 0) {\n        const newSlots = new Array<[I, V]>(upper);\n        for (let i = 0; i < upper; i += 1) {\n          newSlots[i] = oldSlots[i];\n        }\n        return new STreeLeaf(newSlots);\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  balanced(tree: STreeContext<V, I>): STreePage<V, I> {\n    const size = this._slots.length;\n    if (size > 1 && tree.pageShouldSplit(this)) {\n      return this.split(size >>> 1);\n    } else {\n      return this;\n    }\n  }\n\n  split(index: number): STreeNode<V, I> {\n    const newPages = new Array<STreePage<V, I>>(2);\n    const newLeftPage = this.splitLeft(index);\n    const newRightPage = this.splitRight(index);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<number>(1);\n    newKnots[0] = index;\n\n    return new STree.Node(newPages, newKnots, this._slots.length);\n  }\n\n  splitLeft(index: number): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    const newSlots = new Array<[I, V]>(index);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  splitRight(index: number): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    const newSize = oldSlots.length - index;\n    const newSlots = new Array<[I, V]>(newSize);\n    for (let i = 0; i < newSize; i += 1) {\n      newSlots[i] = oldSlots[i + index];\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  forEach<T, S>(callback: (this: S,\n                           value: V,\n                           index: number,\n                           tree: STree<V, I>,\n                           id: I) => T | void,\n                thisArg: S,\n                offset: number,\n                tree: STree<V, I>): T | undefined {\n    for (let i = 0; i < this._slots.length; i += 1) {\n      const slot = this._slots[i];\n      const result = callback.call(thisArg, slot[1], offset + i, tree, slot[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  entries(): Cursor<[I, V]> {\n    return Cursor.array(this._slots);\n  }\n\n  reverseEntries(): Cursor<[I, V]> {\n    return Cursor.array(this._slots, this._slots.length);\n  }\n}\nSTree.Leaf = STreeLeaf;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STree} from \"./STree\";\nimport {STreePage} from \"./STreePage\";\n\n/** @hidden */\nexport class STreeNode<V, I> extends STreePage<V, I> {\n  readonly _pages: STreePage<V, I>[];\n  readonly _knots: number[];\n  readonly _size: number;\n\n  constructor(pages: STreePage<V, I>[], knots?: number[], size?: number) {\n    super();\n    this._pages = pages;\n    if (knots === void 0 || size === void 0) {\n      knots = new Array<number>(pages.length - 1);\n      size = 0;\n      for (let i = 0, n  = knots.length; i < n; i += 1) {\n        size += pages[i].size;\n        knots[i] = size;\n      }\n      size += pages[knots.length].size;\n    }\n    this._knots = knots;\n    this._size = size;\n  }\n\n  get arity(): number {\n    return this._pages.length;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  get(index: number): V | undefined {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this._knots[x - 1];\n    return this._pages[x].get(i);\n  }\n\n  getEntry(index: number): [I, V] | undefined {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this._knots[x - 1];\n    return this._pages[x].getEntry(i);\n  }\n\n  updated(index: number, newValue: V, tree: STreeContext<V, I>): STreeNode<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this._knots[x - 1];\n    const oldPage = this._pages[x];\n    const newPage = oldPage.updated(i, newValue, tree);\n    if (oldPage !== newPage) {\n      if (oldPage.size !== newPage.size && tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  private updatedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const newPages = oldPages.slice(0);\n    newPages[x] = newPage;\n\n    const oldKnots = this._knots;\n    let newKnots: number[];\n    let newSize: number;\n    if (oldPages.length - 1 > 0) {\n      newKnots = oldKnots.slice(0);\n      if (x > 0) {\n        newSize = oldKnots[x - 1];\n      } else {\n        newSize = 0;\n      }\n      for (let i = x; i < newKnots.length; i += 1) {\n        newSize += newPages[i].size;\n        newKnots[i] = newSize;\n      }\n      newSize += newPages[newKnots.length].size;\n    } else {\n      newKnots = [];\n      newSize = 0;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  private updatedPageSplit(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length + 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n\n    const newLeftPage = newPage.splitLeft(newPage.arity >>> 1);\n    const newRightPage = newPage.splitRight(newPage.arity >>> 1);\n    newPages[x] = newLeftPage;\n    newPages[x + 1] = newRightPage;\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + 1] = oldPages[i];\n    }\n\n    return new STreeNode(newPages);\n  }\n\n  private updatedPageMerge(x: number, newPage: STreeNode<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const midPages = newPage._pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length + midPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n    for (let i = 0; i < midPages.length; i += 1) {\n      newPages[i + x] = midPages[i];\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + midPages.length - 1] = oldPages[i];\n    }\n\n    return new STreeNode(newPages);\n  }\n\n  inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeNode<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const subIndex = x === 0 ? index : index - this._knots[x - 1];\n    const oldPage = this._pages[x];\n    const newPage = oldPage.inserted(subIndex, newValue, id, tree);\n    if (oldPage !== newPage) {\n      if (tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  removed(index: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const subIndex = x === 0 ? index : index - this._knots[x - 1];\n    const oldPage = this._pages[x];\n    const newPage = oldPage.removed(subIndex, tree);\n    if (oldPage !== newPage) {\n      return this.replacedPage(x, newPage, oldPage, tree);\n    } else {\n      return this;\n    }\n  }\n\n  private replacedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>,\n                       tree: STreeContext<V, I>): STreePage<V, I> {\n    if (!newPage.isEmpty()) {\n      if (newPage instanceof STreeNode && tree.pageShouldMerge(newPage)) {\n        return this.updatedPageMerge(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else if (this._pages.length > 2) {\n      return this.removedPage(x, newPage, oldPage);\n    } else if (this._pages.length > 1) {\n      if (x === 0) {\n        return this._pages[1];\n      } else {\n        return this._pages[0];\n      }\n    } else {\n      return STreePage.empty();\n    }\n  }\n\n  private removedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i - 1] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<number>(oldKnots.length - 1);\n    let newSize: number;\n    if (x > 0) {\n      for (let i = 0; i < x; i += 1) {\n        newKnots[i] = oldKnots[i];\n      }\n      newSize = oldKnots[x - 1];\n    } else {\n      newSize = 0;\n    }\n    for (let i = x; i < newKnots.length; i += 1) {\n      newSize += newPages[i].size;\n      newKnots[i] = newSize;\n    }\n    newSize += newPages[newKnots.length].size;\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  drop(lower: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    if (lower > 0) {\n      if (lower < this._size) {\n        let x = this.lookup(lower);\n        if (x >= 0) {\n          x += 1;\n        } else {\n          x = -(x + 1);\n        }\n        lower = x === 0 ? lower : lower - this._knots[x - 1];\n        const oldPages = this._pages;\n        const n = oldPages.length - x;\n        if (n > 1) {\n          let newNode: STreeNode<V, I>;\n          if (x > 0) {\n            const newPages = new Array<STreePage<V, I>>(n);\n            for (let i = 0; i < n; i += 1) {\n              newPages[i] = oldPages[i + x];\n            }\n            newNode = new STreeNode(newPages);\n          } else {\n            newNode = this;\n          }\n          if (lower > 0) {\n            const oldPage = oldPages[x];\n            const newPage = oldPage.drop(lower, tree);\n            return newNode.replacedPage(0, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else {\n          return oldPages[x].drop(lower, tree);\n        }\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  take(upper: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    if (upper < this._size) {\n      if (upper > 0) {\n        let x = this.lookup(upper);\n        if (x >= 0) {\n          x += 1;\n        } else {\n          x = -(x + 1);\n        }\n        upper = x === 0 ? upper : upper - this._knots[x - 1];\n        const oldPages = this._pages;\n        const n = upper === 0 ? x : x + 1;\n        if (n > 1) {\n          let newNode: STreeNode<V, I>;\n          if (x < oldPages.length) {\n            const newPages = new Array<STreePage<V, I>>(n);\n            for (let i = 0; i < n; i += 1) {\n              newPages[i] = oldPages[i];\n            }\n            const newKnots = new Array<number>(n - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this._knots[i];\n            }\n            const newSize = newKnots[n - 2] + newPages[n - 1].size;\n            newNode = new STreeNode(newPages, newKnots, newSize);\n          } else {\n            newNode = this;\n          }\n          if (upper > 0) {\n            const oldPage = oldPages[x];\n            const newPage = oldPage.take(upper, tree);\n            return newNode.replacedPage(x, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else if (upper > 0) {\n          return oldPages[0].take(upper, tree);\n        } else {\n          return oldPages[0];\n        }\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  balanced(tree: STreeContext<V, I>): STreeNode<V, I> {\n    if (this._pages.length > 1 && tree.pageShouldSplit(this)) {\n      const x = this._knots.length >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  split(x: number): STreeNode<V, I> {\n    const newPages = new Array<STreePage<V, I>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<number>(1);\n    newKnots[0] = newLeftPage._size;\n\n    return new STreeNode(newPages, newKnots, this._size);\n  }\n\n  splitLeft(x: number): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const newPages = new Array<STreePage<V, I>>(x + 1);\n    for (let i = 0; i < x + 1; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<number>(x);\n    for (let i = 0; i < x; i += 1) {\n      newKnots[i] = oldKnots[i];\n    }\n\n    let newSize = 0;\n    for (let i = 0; i <= x; i += 1) {\n      newSize += newPages[i].size;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  splitRight(x: number): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const y = oldPages.length - (x + 1);\n    const newPages = new Array<STreePage<V, I>>(y);\n    for (let i = 0; i < y; i += 1) {\n      newPages[i] = oldPages[i + (x + 1)];\n    }\n\n    const newKnots = new Array<number>(y - 1);\n    let newSize;\n    if (y > 0) {\n      newSize = newPages[0].size;\n      for (let i = 1; i < y; i += 1) {\n        newKnots[i - 1] = newSize;\n        newSize += newPages[i].size;\n      }\n    } else {\n      newSize = 0;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  forEach<T, S>(callback: (this: S,\n                           value: V,\n                           index: number,\n                           tree: STree<V, I>,\n                           id: I) => T | void,\n                thisArg: S,\n                offset: number,\n                tree: STree<V, I>): T | undefined {\n    for (let i = 0; i < this._pages.length; i += 1) {\n      const page = this._pages[i];\n      const result = page.forEach(callback, thisArg, offset, tree);\n      if (result !== void 0) {\n        return result;\n      }\n      offset += page.size;\n    }\n    return void 0;\n  }\n\n  entries(): Cursor<[I, V]> {\n    return new STree.NodeCursor(this._pages);\n  }\n\n  reverseEntries(): Cursor<[I, V]> {\n    return new STree.NodeCursor(this._pages, this._size, this._pages.length);\n  }\n\n  private lookup(index: number): number {\n    let lo = 0;\n    let hi = this._knots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      if (index > this._knots[mid]) {\n        lo = mid + 1;\n      } else if (index < this._knots[mid]) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n}\nSTree.Node = STreeNode;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {NodeCursor} from \"./NodeCursor\";\nimport {STree} from \"./STree\";\nimport {STreePage} from \"./STreePage\";\n\n/** @hidden */\nexport class STreeNodeCursor<V, I> extends NodeCursor<[I, V], STreePage<V, I>> {\n  constructor(pages: STreePage<V, I>[], index?: number, pageIndex?: number,\n              subCursor?: Cursor<[I, V]>) {\n    super(pages, index, pageIndex, subCursor);\n  }\n\n  protected pageSize(page: STreePage<V, I>): number {\n    return page.size;\n  }\n\n  protected pageCursor(page: STreePage<V, I>): Cursor<[I, V]> {\n    return page.entries();\n  }\n\n  protected reversePageCursor(page: STreePage<V, I>): Cursor<[I, V]> {\n    return page.reverseEntries();\n  }\n}\nSTree.NodeCursor = STreeNodeCursor;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals} from \"@swim/util\";\nimport {NumberInterpolator} from \"./NumberInterpolator\";\nimport {StepInterpolator} from \"./StepInterpolator\";\nimport {ArrayInterpolator} from \"./ArrayInterpolator\";\nimport {InterpolatorInterpolator} from \"./InterpolatorInterpolator\";\nimport {InterpolatorMap} from \"./InterpolatorMap\";\n\nexport interface InterpolatorFactory {\n  tryBetween(a: unknown, b: unknown): Interpolator<unknown> | null;\n\n  tryBetweenAny?(a: unknown, b: unknown): Interpolator<unknown> | null;\n}\n\nexport abstract class Interpolator<T, U = T> implements Equals {\n  abstract interpolate(u: number): T;\n\n  abstract deinterpolate(y: U): number;\n\n  abstract range(): ReadonlyArray<T>;\n  abstract range(ys: ReadonlyArray<T | U>): Interpolator<T, U>;\n  abstract range(y0: T | U, y1: T | U): Interpolator<T, U>;\n\n  map<FT>(f: (value: T) => FT): Interpolator<FT, T> {\n    return new Interpolator.Map(this, f);\n  }\n\n  abstract equals(that: unknown): boolean;\n\n  static map<T, FT>(a: T, b: T, f: (value: T) => FT): Interpolator<FT, T> {\n    return new Interpolator.Map(Interpolator.between(a, b), f);\n  }\n\n  static between<T, U>(a: T | U, b: T | U): Interpolator<T, U>\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    let interpolator: Interpolator<unknown> | null = null;\n    const factories = this._factories;\n    const factoryCount = factories.length;\n    for (let i = 0; interpolator === null && i < factoryCount; i += 1) {\n      const factory = factories[i];\n      interpolator = factory.tryBetween(a, b);\n    }\n    for (let i = 0; interpolator === null && i < factoryCount; i += 1) {\n      const factory = factories[i];\n      if (factory.tryBetweenAny !== void 0) {\n        interpolator = factory.tryBetweenAny(a, b);\n      }\n    }\n    if (interpolator === null) {\n      interpolator = Interpolator.Interpolator.tryBetween(a, b);\n    }\n    if (interpolator === null) {\n      interpolator = Interpolator.Array.tryBetween(a, b);\n    }\n    if (interpolator === null) {\n      interpolator = new Interpolator.Step(a, b);\n    }\n    return interpolator;\n  }\n\n  /** @hidden */\n  private static readonly _factories: InterpolatorFactory[] = [];\n\n  static get factories(): ReadonlyArray<InterpolatorFactory> {\n    return this._factories;\n  }\n\n  static registerFactory(factory: InterpolatorFactory): void {\n    // assert(factory !== Interpolator);\n    if (this._factories.indexOf(factory) < 0) {\n      this._factories.push(factory);\n    }\n  }\n\n  static unregisterFactory(factory: InterpolatorFactory): void {\n    const index = this._factories.indexOf(factory);\n    if (index >= 0) {\n      this._factories.splice(index, 1);\n    }\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Number: typeof NumberInterpolator; // defined by NumberInterpolator\n  /** @hidden */\n  static Step: typeof StepInterpolator; // defined by StepInterpolator\n  /** @hidden */\n  static Array: typeof ArrayInterpolator; // defined by ArrayInterpolator\n  /** @hidden */\n  static Interpolator: typeof InterpolatorInterpolator; // defined by InterpolatorInterpolator\n  /** @hidden */\n  static Map: typeof InterpolatorMap; // defined by InterpolatorMap\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\nexport class NumberInterpolator extends Interpolator<number, number | string> {\n  /** @hidden */\n  readonly y0: number;\n  /** @hidden */\n  readonly dy: number;\n\n  constructor(y0: number, y1: number) {\n    super();\n    this.y0 = y0;\n    this.dy = y1 - this.y0;\n  }\n\n  interpolate(u: number): number {\n    return this.y0 + this.dy * u;\n  }\n\n  deinterpolate(y: number | string): number {\n    y = +y;\n    return this.dy !== 0 ? (y - this.y0) / this.dy : this.dy;\n  }\n\n  range(): ReadonlyArray<number>;\n  range(ys: ReadonlyArray<number | string>): NumberInterpolator;\n  range(y0: number | string, y1: number | string): NumberInterpolator;\n  range(y0?: ReadonlyArray<number | string> | number | string, y1?: number | string): ReadonlyArray<number> | NumberInterpolator {\n    if (y0 === void 0) {\n      return [this.y0, this.y0 + this.dy];\n    } else if (y1 === void 0) {\n      y0 = y0 as ReadonlyArray<number | string>;\n      return NumberInterpolator.between(y0[0], y0[1]);\n    } else {\n      return NumberInterpolator.between(y0 as number | string, y1);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NumberInterpolator) {\n      return this.y0 === that.y0 && this.dy === that.dy;\n    }\n    return false;\n  }\n\n  static between(y0: number | string, y1: number | string): NumberInterpolator;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if ((typeof a === \"number\" || typeof a === \"string\") &&\n        (typeof b === \"number\" || typeof b === \"string\")) {\n      return new NumberInterpolator(+a, +b);\n    }\n    return Interpolator.between(a, b);\n  }\n\n  static tryBetween(a: unknown, b: unknown): NumberInterpolator | null {\n    if (typeof a === \"number\" && typeof b === \"number\") {\n      return new NumberInterpolator(a, b);\n    }\n    return null;\n  }\n\n  static tryBetweenAny(a: unknown, b: unknown): NumberInterpolator | null {\n    if (typeof a === \"number\" && typeof b === \"number\") {\n      return new NumberInterpolator(a, b);\n    } else if (typeof a === \"number\" && typeof b === \"string\") {\n      const y1 = +b;\n      if (!isNaN(y1)) {\n        return new NumberInterpolator(a, y1);\n      }\n    } else if (typeof a === \"string\" && typeof b === \"number\") {\n      const y0 = +a;\n      if (!isNaN(y0)) {\n        return new NumberInterpolator(y0, b);\n      }\n    } else if (typeof a === \"string\" && typeof b === \"string\") {\n      const y0 = +a;\n      const y1 = +b;\n      if (!isNaN(y0) && !isNaN(y1)) {\n        return new NumberInterpolator(y0, y1);\n      }\n    }\n    return null;\n  }\n}\nInterpolator.Number = NumberInterpolator;\nInterpolator.registerFactory(NumberInterpolator);\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\nimport {Interpolator} from \"./Interpolator\";\n\nexport class StepInterpolator<T> extends Interpolator<T> {\n  /** @hidden */\n  readonly y0: T;\n  /** @hidden */\n  readonly y1: T;\n\n  constructor(y0: T, y1: T) {\n    super();\n    this.y0 = y0;\n    this.y1 = y1;\n  }\n\n  interpolate(u: number): T {\n    return u < 1 ? this.y0 : this.y1;\n  }\n\n  deinterpolate(y: T): number {\n    return y === this.y1 ? 1 : 0;\n  }\n\n  range(): ReadonlyArray<T>;\n  range(ys: ReadonlyArray<T>): Interpolator<T>;\n  range(y0: T, y1: T): Interpolator<T>;\n  range(y0?: ReadonlyArray<T> | T, y1?: T): ReadonlyArray<T> | Interpolator<T> {\n    if (y0 === void 0) {\n      return [this.interpolate(0), this.interpolate(1)];\n    } else if (y1 === void 0) {\n      y0 = y0 as ReadonlyArray<T>;\n      return Interpolator.between(y0[0], y0[1]);\n    } else {\n      return Interpolator.between(y0 as T, y1);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof StepInterpolator) {\n      return Objects.equal(this.y0, that.y0) && Objects.equal(this.y1, that.y1);\n    }\n    return false;\n  }\n}\nInterpolator.Step = StepInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\nexport class ArrayInterpolator<T> extends Interpolator<T[]> {\n  /** @hidden */\n  readonly interpolators: ReadonlyArray<Interpolator<T>>;\n\n  constructor(a0: ReadonlyArray<T>, a1: ReadonlyArray<T>) {\n    super();\n    const interpolatorCount = Math.min(a0.length, a1.length);\n    const interpolators = new Array<Interpolator<T>>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      interpolators[i] = Interpolator.between(a0[i], a1[i]);\n    }\n    this.interpolators = interpolators;\n  }\n\n  interpolate(u: number): T[] {\n    const interpolators = this.interpolators;\n    const interpolatorCount = interpolators.length;\n    const array = new Array<T>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      array[i] = interpolators[i].interpolate(u);\n    }\n    return array;\n  }\n\n  deinterpolate(a: ReadonlyArray<T>): number {\n    return 0; // not implemented\n  }\n\n  range(): ReadonlyArray<T[]>;\n  range(as: ReadonlyArray<ReadonlyArray<T>>): ArrayInterpolator<T>;\n  range(a0: ReadonlyArray<T>, a1: ReadonlyArray<T>): ArrayInterpolator<T>;\n  range(a0?: ReadonlyArray<ReadonlyArray<T>> | ReadonlyArray<T>, a1?: ReadonlyArray<T>): ReadonlyArray<T[]> | ArrayInterpolator<T> {\n    if (a0 === void 0) {\n      return [this.interpolate(0), this.interpolate(1)];\n    } else if (a1 === void 0) {\n      a0 = a0 as  ReadonlyArray<ReadonlyArray<T>>;\n      return ArrayInterpolator.between(a0[0], a0[1]);\n    } else {\n      return ArrayInterpolator.between(a0 as ReadonlyArray<T>, a1);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ArrayInterpolator) {\n      const n = this.interpolators.length;\n      if (n === that.interpolators.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!this.interpolators[i].equals(that.interpolators[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static between<T>(f0: ReadonlyArray<T>, f1: ReadonlyArray<T>): ArrayInterpolator<T>;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (Array.isArray(a) && Array.isArray(b)) {\n      return new ArrayInterpolator(a, b);\n    }\n    return Interpolator.between(a, b);\n  }\n\n  static tryBetween(a: unknown, b: unknown): ArrayInterpolator<unknown> | null {\n    if (Array.isArray(a) && Array.isArray(b)) {\n      return new ArrayInterpolator(a, b);\n    }\n    return null;\n  }\n}\nInterpolator.Array = ArrayInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\nexport class InterpolatorInterpolator<T extends U, U = T> extends Interpolator<Interpolator<T, U>> {\n  /** @hidden */\n  readonly i0: Interpolator<T, U>;\n  /** @hidden */\n  readonly i1: Interpolator<T, U>;\n  /** @hidden */\n  readonly i00: Interpolator<T, U>;\n  /** @hidden */\n  readonly i11: Interpolator<T, U>;\n\n  constructor(i0: Interpolator<T, U>, i1: Interpolator<T, U>) {\n    super();\n    this.i0 = i0;\n    this.i1 = i1;\n    this.i00 = this.i1.range(this.i0.interpolate(0), this.i1.interpolate(0));\n    this.i11 = this.i1.range(this.i0.interpolate(1), this.i1.interpolate(1));\n  }\n\n  interpolate(u: number): Interpolator<T, U> {\n    if (u === 0) {\n      return this.i0;\n    } else if (u === 1) {\n      return this.i1;\n    } else {\n      return this.i1.range(this.i00.interpolate(u), this.i11.interpolate(u));\n    }\n  }\n\n  deinterpolate(i: Interpolator<T, U>): number {\n    return 0; // not implemented\n  }\n\n  range(): ReadonlyArray<Interpolator<T, U>>;\n  range(is: ReadonlyArray<Interpolator<T, U>>): InterpolatorInterpolator<T, U>;\n  range(i0: Interpolator<T, U>, i1: Interpolator<T, U>): InterpolatorInterpolator<T, U>;\n  range(i0?: ReadonlyArray<Interpolator<T, U>> | Interpolator<T, U>,\n        i1?: Interpolator<T, U>): ReadonlyArray<Interpolator<T, U>> | InterpolatorInterpolator<T, U> {\n    if (i0 === void 0) {\n      return [this.i0, this.i1];\n    } else if (i1 === void 0) {\n      i0 = i0 as ReadonlyArray<Interpolator<T, U>>;\n      return InterpolatorInterpolator.between(i0[0], i0[1]);\n    } else {\n      return InterpolatorInterpolator.between(i0 as Interpolator<T, U>, i1);\n    }\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InterpolatorInterpolator) {\n      return this.i0.equals(that.i0) && this.i1.equals(that.i1);\n    }\n    return false;\n  }\n\n  static between<T extends U, U = T>(i0: Interpolator<T, U>, i1: Interpolator<T, U>): InterpolatorInterpolator<T, U>;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (a instanceof Interpolator && b instanceof Interpolator) {\n      return new InterpolatorInterpolator(a, b);\n    }\n    return Interpolator.between(a, b);\n  }\n\n  static tryBetween(a: unknown, b: unknown): InterpolatorInterpolator<unknown> | null {\n    if (a instanceof Interpolator && b instanceof Interpolator) {\n      return new InterpolatorInterpolator(a, b);\n    }\n    return null;\n  }\n}\nInterpolator.Interpolator = InterpolatorInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\nexport class InterpolatorMap<T, FT> extends Interpolator<FT, T> {\n  /** @hidden */\n  readonly interpolator: Interpolator<T, unknown>;\n  /** @hidden */\n  readonly transform: (value: T) => FT;\n\n  constructor(interpolator: Interpolator<T, unknown>, transform: (value: T) => FT) {\n    super();\n    this.interpolator = interpolator;\n    this.transform = transform;\n  }\n\n  interpolate(u: number): FT {\n    return this.transform(this.interpolator.interpolate(u));\n  }\n\n  deinterpolate(y: FT | T): number {\n    return 0; // not implemented\n  }\n\n  range(): ReadonlyArray<FT>;\n  range(ys: ReadonlyArray<FT | T>): Interpolator<FT, T>;\n  range(y0: FT | T, y1: FT | T): Interpolator<FT, T>;\n  range(y0?: ReadonlyArray<FT | T> | FT | T, y1?: FT | T): ReadonlyArray<FT> | Interpolator<FT, T> {\n    if (y0 === void 0) {\n      const range = this.interpolator.range();\n      return [this.transform(range[0]), this.transform(range[1])];\n    } else if (y1 === void 0) {\n      y0 = y0 as ReadonlyArray<FT | T>;\n      return this;\n    } else {\n      return this;\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InterpolatorMap) {\n      return this.interpolator.equals(that.interpolator)\n          && this.transform === that.transform;\n    }\n    return false;\n  }\n}\nInterpolator.Map = InterpolatorMap;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Cursor} from \"@swim/util\";\nimport {Debug, Display, Format, Output} from \"@swim/codec\";\nimport {Field} from \"./Field\";\nimport {Attr} from \"./Attr\";\nimport {Slot} from \"./Slot\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {RecordMap} from \"./RecordMap\";\nimport {RecordMapView} from \"./RecordMapView\";\nimport {Data} from \"./Data\";\nimport {AnyText, Text} from \"./Text\";\nimport {AnyNum, Num} from \"./Num\";\nimport {Bool} from \"./Bool\";\nimport {Expression} from \"./Expression\";\nimport {Selector} from \"./Selector\";\nimport {Operator} from \"./Operator\";\nimport {Func} from \"./Func\";\nimport {Extant} from \"./Extant\";\nimport {Absent} from \"./Absent\";\nimport {Form} from \"./Form\";\nimport {AnyInterpreter} from \"./Interpreter\";\nimport {BinaryOperator} from \"./operator/BinaryOperator\";\nimport {UnaryOperator} from \"./operator/UnaryOperator\";\nimport {ConditionalOperator} from \"./operator/ConditionalOperator\";\nimport {OrOperator} from \"./operator/OrOperator\";\nimport {AndOperator} from \"./operator/AndOperator\";\nimport {BitwiseOrOperator} from \"./operator/BitwiseOrOperator\";\nimport {BitwiseXorOperator} from \"./operator/BitwiseXorOperator\";\nimport {BitwiseAndOperator} from \"./operator/BitwiseAndOperator\";\nimport {LtOperator} from \"./operator/LtOperator\";\nimport {LeOperator} from \"./operator/LeOperator\";\nimport {EqOperator} from \"./operator/EqOperator\";\nimport {NeOperator} from \"./operator/NeOperator\";\nimport {GeOperator} from \"./operator/GeOperator\";\nimport {GtOperator} from \"./operator/GtOperator\";\nimport {PlusOperator} from \"./operator/PlusOperator\";\nimport {MinusOperator} from \"./operator/MinusOperator\";\nimport {TimesOperator} from \"./operator/TimesOperator\";\nimport {DivideOperator} from \"./operator/DivideOperator\";\nimport {ModuloOperator} from \"./operator/ModuloOperator\";\nimport {NotOperator} from \"./operator/NotOperator\";\nimport {BitwiseNotOperator} from \"./operator/BitwiseNotOperator\";\nimport {NegativeOperator} from \"./operator/NegativeOperator\";\nimport {PositiveOperator} from \"./operator/PositiveOperator\";\nimport {InvokeOperator} from \"./operator/InvokeOperator\";\nimport {IdentitySelector} from \"./selector/IdentitySelector\";\nimport {GetSelector} from \"./selector/GetSelector\";\nimport {GetAttrSelector} from \"./selector/GetAttrSelector\";\nimport {GetItemSelector} from \"./selector/GetItemSelector\";\nimport {KeysSelector} from \"./selector/KeysSelector\";\nimport {ValuesSelector} from \"./selector/ValuesSelector\";\nimport {ChildrenSelector} from \"./selector/ChildrenSelector\";\nimport {DescendantsSelector} from \"./selector/DescendantsSelector\";\nimport {FilterSelector} from \"./selector/FilterSelector\";\nimport {LiteralSelector} from \"./selector/LiteralSelector\";\nimport {LambdaFunc} from \"./func/LambdaFunc\";\nimport {BridgeFunc} from \"./func/BridgeFunc\";\nimport {MathModule} from \"./func/MathModule\";\n\nexport type AnyItem = Item\n                    | {readonly $key: AnyValue, readonly $value: AnyValue}\n                    | {readonly [key: string]: AnyValue}\n                    | ReadonlyArray<unknown> // ReadonlyArray<AnyItem>\n                    | Uint8Array\n                    | string\n                    | number\n                    | boolean\n                    | null\n                    | undefined;\n\nexport abstract class Item implements Comparable<Item>, HashCode, Debug, Display {\n  /** @hidden */\n  constructor() {\n    // stub\n  }\n\n  /**\n   * Returns `true` if this `Item` is not [[Absent]].\n   */\n  abstract isDefined(): boolean;\n\n  /**\n   * Returns `true` if this `Item is neither [[Extant]] nor [[Absent]].\n   */\n  abstract isDistinct(): boolean;\n\n  /**\n   * Returns `true` if this `Item` always [[Item.evaluate evaluates]] to the\n   * same `Item`.\n   */\n  abstract isConstant(): boolean;\n\n  /**\n   * Returns the key component of this `Item`, if this `Item is a [[Field]];\n   * otherwise returns [[Absent]] if this `Item` is a `Value`.\n   */\n  abstract get key(): Value;\n\n  /**\n   * Returns the value component of this `Item`, if this `Item` is a [[Field]];\n   * otherwise returns `this` if this `Item is a `Value`.\n   */\n  abstract toValue(): Value;\n\n  /**\n   * Returns the `key` string of the first member of this `Item`, if this `Item`\n   * is a [[Record]], and its first member is an [[Attr]]; otherwise returns\n   * `undefined` if this `Item` is not a `Record`, or if this `Item` is a\n   * `Record` whose first member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  abstract tag(): string | undefined;\n\n  /**\n   * Returns the [[Item.flattened flattened]] members of this `Item` after all\n   * attributes have been removed, if this `Item` is a [[Record]]; otherwise\n   * returns `this` if this `Item` is a non-`Record` `Value`, or returns\n   * the value component if this `Item` is a `Field`.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  abstract target(): Value;\n\n  /**\n   * Returns the sole member of this `Item`, if this `Item` is a [[Record]]\n   * with exactly one member, and its member is a `Value`; returns [[Extant]]\n   * if this `Item` is an empty `Record`; returns [[Absent]] if this `Item` is\n   * a `Field`; otherwise returns `this` if this `Item` is a `Record` with more\n   * than one member, or if this `Item` is a non-`Record` `Value`.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  abstract flattened(): Value;\n\n  /**\n   * Returns `this` if this `Item` is a [[Record]]; returns a `Record`\n   * containing just this `Item`, if this `Item` is [[Item.isDistinct\n   * distinct]]; otherwise returns an empty `Record` if this `Item` is\n   * [[Extant]] or [[Absent]].  Facilitates writing code that treats a bare\n   * `Value` equivalently to a unary `Record`.\n   */\n  abstract unflattened(): Record;\n\n  /**\n   * Returns the value of the first member of this `Item`, if this `Item` is a\n   * [[Record]], and its first member is an [[Attr]] whose `key` string is\n   * equal to `tag`; otherwise returns [[Absent]] if this `Item` is not a\n   * `Record`, or if this `Item` is a `Record` whose first member is not an\n   * `Attr`, or if this `Item` is a `Record` whose first member is an `Attr`\n   * whose `key` does not equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  abstract header(tag: string): Value;\n\n  /**\n   * Returns the [[Item.unflattened unflattened]] [[Item.header header]] of\n   * this `Item`, if this `Item` is a [[Record]], and its first member is an\n   * [[Attr]] whose `key` string is equal to `tag`; otherwise returns\n   * `undefined`.\n   *\n   * The `headers` of the `tag` attribute of a structure are like the\n   * attributes of an XML element tag; through unlike an XML element, `tag`\n   * attribute headers are not limited to string keys and values.\n   */\n  abstract headers(tag: string): Record | undefined;\n\n  /**\n   * Returns the first member of this `Item`, if this `Item` is a non-empty\n   * [[Record]]; otherwise returns [[Absent]].\n   */\n  abstract head(): Item;\n\n  /**\n   * Returns a view of all but the first member of this `Item`, if this `Item`\n   * is a non-empty [[Record]]; otherwise returns an empty `Record` if this\n   * `Item` is not a `Record`, or if this `Item` is itself an empty `Record`.\n   */\n  abstract tail(): Record;\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Item.tail tail]] of this\n   * `Item`.  Used to recursively deconstruct a structure, terminating with its\n   * last `Value`, rather than a unary `Record` containing its last value, if\n   * the structure ends with a `Value` member.\n   */\n  abstract body(): Value;\n\n  /**\n   * Returns the number of members contained in this `Item`, if this `Item` is\n   * a [[Record]]; otherwise returns `0` if this `Item` is not a `Record`.\n   */\n  abstract get length(): number;\n\n  /**\n   * Returns `true` if this `Item` is a [[Record]] that has a [[Field]] member\n   * with a key that is equal to the given `key`; otherwise returns `false` if\n   * this `Item` is not a `Record`, or if this `Item` is a `Record`, but has no\n   * `Field` member with a key equal to the given `key`.\n   */\n  abstract has(key: AnyValue): boolean;\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Field` member\n   * with a key equal to the given `key`.\n   */\n  abstract get(key: AnyValue): Value;\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Attr` member\n   * with a key equal to the given `key`.\n   */\n  abstract getAttr(key: AnyText): Value;\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Slot` member\n   * with a key equal to the given `key`.\n   */\n  abstract getSlot(key: AnyValue): Value;\n\n  /**\n   * Returns the last [[Field]] member of this `Item` whose key is equal to the\n   * given `key`; returns `undefined` if this `Item` is not a [[Record]], or if\n   * this `Item` is a `Record`, but has no `Field` member with a `key` equal to\n   * the given `key`.\n   */\n  abstract getField(key: AnyValue): Field | undefined;\n\n  /**\n   * Returns the member of this `Item` at the given `index`, if this `Item` is\n   * a [[Record]], and the `index` is greater than or equal to zero, and less\n   * than the [[Record.length length]] of the `Record`; otherwise returns\n   * [[Absent]] if this `Item` is not a `Record`, or if this `Item` is a\n   * `Record`, but the `index` is out of bounds.\n   */\n  abstract getItem(index: AnyNum): Item;\n\n  updated(key: AnyValue, value: AnyValue): Record {\n    const record = Item.Record.create(2);\n    record.push(this);\n    record.set(key, value);\n    return record;\n  }\n\n  updatedAttr(key: AnyText, value: AnyValue): Record {\n    const record = Item.Record.create(2);\n    record.push(this);\n    record.setAttr(key, value);\n    return record;\n  }\n\n  updatedSlot(key: AnyValue, value: AnyValue): Record {\n    const record = Item.Record.create(2);\n    record.push(this);\n    record.setSlot(key, value);\n    return record;\n  }\n\n  appended(...items: AnyItem[]): Record {\n    const record = Item.Record.create(1 + arguments.length);\n    record.push(this);\n    record.push.apply(record, arguments);\n    return record;\n  }\n\n  prepended(...items: AnyItem[]): Record {\n    const record = Item.Record.create(arguments.length + 1);\n    record.push.apply(record, arguments);\n    record.push(this);\n    return record;\n  }\n\n  abstract deleted(key: AnyValue): Item;\n\n  concat(...items: AnyItem[]): Record {\n    const record = Item.Record.create();\n    record.push(this);\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      Item.fromAny(arguments[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  abstract conditional(thenTerm: Item, elseTerm: Item): Item;\n\n  abstract or(that: Item): Item;\n\n  abstract and(that: Item): Item;\n\n  abstract bitwiseOr(that: AnyItem): Item;\n\n  abstract bitwiseXor(that: AnyItem): Item;\n\n  abstract bitwiseAnd(that: AnyItem): Item;\n\n  lt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) < 0 ? Item.Bool.from(true) : Item.absent();\n  }\n\n  le(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) <= 0 ? Item.Bool.from(true) : Item.absent();\n  }\n\n  eq(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.equals(that) ? Item.Bool.from(true) : Item.absent();\n  }\n\n  ne(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return !this.equals(that) ? Item.Bool.from(true) : Item.absent();\n  }\n\n  ge(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) >= 0 ? Item.Bool.from(true) : Item.absent();\n  }\n\n  gt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) > 0 ? Item.Bool.from(true) : Item.absent();\n  }\n\n  abstract plus(that: AnyItem): Item;\n\n  abstract minus(that: AnyItem): Item;\n\n  abstract times(that: AnyItem): Item;\n\n  abstract divide(that: AnyItem): Item;\n\n  abstract modulo(that: AnyItem): Item;\n\n  abstract not(): Item;\n\n  abstract bitwiseNot(): Item;\n\n  abstract negative(): Item;\n\n  abstract positive(): Item;\n\n  abstract inverse(): Item;\n\n  invoke(args: Value): Item {\n    return Item.absent();\n  }\n\n  abstract lambda(template: Value): Value;\n\n  filter(predicate?: AnyItem): Selector {\n    const selector = Item.Selector.literal(this);\n    return selector.filter.apply(selector, arguments);\n  }\n\n  max(that: Item): Item {\n    return this.compareTo(that) >= 0 ? this : that;\n  }\n\n  min(that: Item): Item {\n    return this.compareTo(that) <= 0 ? this : that;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    return this;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    return this;\n  }\n\n  /**\n   * Converts this `Item` into a `string` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `string` value.\n   */\n  abstract stringValue(): string | undefined;\n\n  /**\n   * Converts this `Item` into a `string` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `string` value.\n   */\n  abstract stringValue<T>(orElse: T): string | T;\n\n  /**\n   * Converts this `Item` into a `number` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `number` value.\n   */\n  abstract numberValue(): number | undefined;\n\n  /**\n   * Converts this `Item` into a `number` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `number` value.\n   */\n  abstract numberValue<T>(orElse: T): number | T;\n\n  /**\n   * Converts this `Item` into a `boolean` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `boolean` value.\n   */\n  abstract booleanValue(): boolean | undefined;\n\n  /**\n   * Converts this `Item` into a `boolean` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `boolean` value.\n   */\n  abstract booleanValue<T>(orElse: T): boolean | T;\n\n  cast<T>(form: Form<T, unknown>): T | undefined;\n\n  cast<T, E = T>(form: Form<T, unknown>, orElse: E): T | E;\n\n  cast<T, E = T>(form: Form<T, unknown>, orElse?: E): T | E | undefined {\n    let object: T | E | undefined = form.cast(this);\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  coerce<T>(form: Form<T, unknown>): T;\n\n  coerce<T, E = T>(form: Form<T, unknown>, orElse: E): T | E;\n\n  coerce<T, E = T>(form: Form<T, unknown>, orElse?: E): T | E {\n    let object: T | E | undefined = form.cast(this);\n    if (object === void 0) {\n      object = form.unit();\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object!;\n  }\n\n  abstract toAny(): AnyItem;\n\n  abstract isAliased(): boolean;\n\n  abstract isMutable(): boolean;\n\n  abstract alias(): void;\n\n  abstract branch(): Item;\n\n  abstract clone(): Item;\n\n  abstract commit(): this;\n\n  /** @hidden */\n  precedence(): number {\n    return 11;\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    return callback.call(thisArg, this, 0);\n  }\n\n  iterator(): Cursor<Item> {\n    return Cursor.unary(this);\n  }\n\n  /**\n   * Returns the heterogeneous sort order of this `Item`.  Used to impose a\n   * total order on the set of all items.  When comparing two items of\n   * different types, the items order according to their `typeOrder}`.\n   */\n  abstract typeOrder(): number;\n\n  abstract compareTo(that: Item): 0 | 1 | -1;\n\n  abstract keyEquals(key: unknown): boolean;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static empty(): Item {\n    return Item.Record.empty();\n  }\n\n  static extant(): Item {\n    return Item.Extant.extant();\n  }\n\n  static absent(): Item {\n    return Item.Absent.absent();\n  }\n\n  static fromAny(item: AnyItem): Item {\n    if (item instanceof Item) {\n      return item;\n    } else {\n      return Item.Value.fromAny(item);\n    }\n  }\n\n  private static _globalScope?: Item;\n\n  static globalScope(): Item {\n    if (Item._globalScope === void 0) {\n      Item._globalScope = Item.Record.create(1)\n          .slot(\"math\", Item.MathModule.scope())\n          .commit();\n    }\n    return Item._globalScope;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Field: typeof Field; // defined by Field\n  /** @hidden */\n  static Attr: typeof Attr; // defined by Attr\n  /** @hidden */\n  static Slot: typeof Slot; // defined by Slot\n  /** @hidden */\n  static Value: typeof Value; // defined by Value\n  /** @hidden */\n  static Record: typeof Record; // defined by Record\n  /** @hidden */\n  static RecordMap: typeof RecordMap; // defined by RecordMap\n  /** @hidden */\n  static RecordMapView: typeof RecordMapView; // defined by RecordMapView\n  /** @hidden */\n  static Data: typeof Data; // defined by Data\n  /** @hidden */\n  static Text: typeof Text; // defined by Text\n  /** @hidden */\n  static Num: typeof Num; // defined by Num\n  /** @hidden */\n  static Bool: typeof Bool; // defined by Bool\n  /** @hidden */\n  static Expression: typeof Expression; // defined by Expression\n  /** @hidden */\n  static Selector: typeof Selector; // defined by Selector\n  /** @hidden */\n  static Operator: typeof Operator; // defined by Operator\n  /** @hidden */\n  static Func: typeof Func; // defined by Func\n  /** @hidden */\n  static Extant: typeof Extant; // defined by Extant\n  /** @hidden */\n  static Absent: typeof Absent; // defined by Absent\n  /** @hidden */\n  static BinaryOperator: typeof BinaryOperator; // defined by BinaryOperator\n  /** @hidden */\n  static UnaryOperator: typeof UnaryOperator; // defined by UnaryOperator\n  /** @hidden */\n  static ConditionalOperator: typeof ConditionalOperator; // defined by ConditionalOperator\n  /** @hidden */\n  static OrOperator: typeof OrOperator; // defined by OrOperator\n  /** @hidden */\n  static AndOperator: typeof AndOperator; // defined by AndOperator\n  /** @hidden */\n  static BitwiseOrOperator: typeof BitwiseOrOperator; // defined by BitwiseOrOperator\n  /** @hidden */\n  static BitwiseXorOperator: typeof BitwiseXorOperator; // defined by BitwiseXorOperator\n  /** @hidden */\n  static BitwiseAndOperator: typeof BitwiseAndOperator; // defined by BitwiseAndOperator\n  /** @hidden */\n  static LtOperator: typeof LtOperator; // defined by LtOperator\n  /** @hidden */\n  static LeOperator: typeof LeOperator; // defined by LeOperator\n  /** @hidden */\n  static EqOperator: typeof EqOperator; // defined by EqOperator\n  /** @hidden */\n  static NeOperator: typeof NeOperator; // defined by NeOperator\n  /** @hidden */\n  static GeOperator: typeof GeOperator; // defined by GeOperator\n  /** @hidden */\n  static GtOperator: typeof GtOperator; // defined by GtOperator\n  /** @hidden */\n  static PlusOperator: typeof PlusOperator; // defined by PlusOperator\n  /** @hidden */\n  static MinusOperator: typeof MinusOperator; // defined by MinusOperator\n  /** @hidden */\n  static TimesOperator: typeof TimesOperator; // defined by TimesOperator\n  /** @hidden */\n  static DivideOperator: typeof DivideOperator; // defined by DivideOperator\n  /** @hidden */\n  static ModuloOperator: typeof ModuloOperator; // defined by ModuloOperator\n  /** @hidden */\n  static NotOperator: typeof NotOperator; // defined by NotOperator\n  /** @hidden */\n  static BitwiseNotOperator: typeof BitwiseNotOperator; // defined by BitwiseNotOperator\n  /** @hidden */\n  static NegativeOperator: typeof NegativeOperator; // defined by NegativeOperator\n  /** @hidden */\n  static PositiveOperator: typeof PositiveOperator; // defined by PositiveOperator\n  /** @hidden */\n  static InvokeOperator: typeof InvokeOperator; // defined by InvokeOperator\n  /** @hidden */\n  static IdentitySelector: typeof IdentitySelector; // defined by IdentitySelector\n  /** @hidden */\n  static GetSelector: typeof GetSelector; // defined by GetSelector\n  /** @hidden */\n  static GetAttrSelector: typeof GetAttrSelector; // defined by GetAttrSelector\n  /** @hidden */\n  static GetItemSelector: typeof GetItemSelector; // defined by GetItemSelector\n  /** @hidden */\n  static KeysSelector: typeof KeysSelector; // defined by KeysSelector\n  /** @hidden */\n  static ValuesSelector: typeof ValuesSelector; // defined by ValuesSelector\n  /** @hidden */\n  static ChildrenSelector: typeof ChildrenSelector; // defined by ChildrenSelector\n  /** @hidden */\n  static DescendantsSelector: typeof DescendantsSelector; // defined by DescendantsSelector\n  /** @hidden */\n  static FilterSelector: typeof FilterSelector; // defined by FilterSelector\n  /** @hidden */\n  static LiteralSelector: typeof LiteralSelector; // defined by LiteralSelector\n  /** @hidden */\n  static LambdaFunc: typeof LambdaFunc; // defined by LambdaFunc\n  /** @hidden */\n  static BridgeFunc: typeof BridgeFunc; // defined by BridgeFunc\n  /** @hidden */\n  static MathModule: typeof MathModule; // defined by MathModule\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {AnyText} from \"./Text\";\nimport {AnyNum} from \"./Num\";\n\nexport type AnyField = Field\n                     | {readonly $key: AnyValue, readonly $value: AnyValue}\n                     | {[key: string]: AnyValue};\n\nexport abstract class Field extends Item {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `true` because a `Field` can never be [[Absent]].\n   */\n  isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns `true` because a `Field` can be neither [[Extant]] nor\n   * [[Absent]].\n   */\n  isDistinct(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns the key component of this `Field`.\n   */\n  abstract get key(): Value;\n\n  /**\n   * Returns the value component of this `Field`.\n   */\n  abstract get value(): Value;\n\n  /**\n   * Sets the value of this `Field` to the new `value`, returning the old value.\n   *\n   * @throws `Error` if this `Field` is immutable.\n   */\n  abstract setValue(value: AnyValue): Value;\n\n  /**\n   * Returns a copy of this `Field` with the updated `value`.\n   */\n  abstract updatedValue(value: AnyValue): Field;\n\n  /**\n   * Returns the value component of this `Field`.\n   */\n  toValue(): Value {\n    return this.value;\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a first member `Attr` whose key string could be returned.\n   */\n  tag(): string | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns the value component of this `Field`.\n   */\n  target(): Value {\n    return this.value;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be flattened into a\n   * `Value`.\n   */\n  flattened(): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Returns a `Record` containing just this `Field`.\n   */\n  unflattened(): Record {\n    return Item.Record.of(this);\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a head `Attr` whose value could be returned if its key were\n   * equal to the `tag`.\n   */\n  header(tag: string): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a head `Attr` whose value could be returned as a `Record` if\n   * its key were equal to the `tag`.\n   */\n  headers(tag: string): Record | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a first member.\n   */\n  head(): Item {\n    return Item.absent();\n  }\n\n  /**\n   * Always returns an empty `Record` because a `Field` can't itself be a\n   * `Record`, so it can't have any non-first members.\n   */\n  tail(): Record {\n    return Item.Record.empty();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have any non-first members to flatten, and because a `Field` isn't\n   * a distinct `Value`, so it can't return `Extant`.\n   */\n  body(): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns `0` because a `Field` can't be a `Record`, so it can't\n   * contain any members.\n   */\n  get length(): number {\n    return 0;\n  }\n\n  /**\n   * Always returns `false` because a `Field` can't be a `Record`, so it can't\n   * have a `Field` member whose key is equal to the given `key`.\n   */\n  has(key: AnyValue): boolean {\n    return false;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a `Field` member whose key is equal to the given `key`.\n   */\n  get(key: AnyValue): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have an `Attr` member whose key is equal to the given `key`.\n   */\n  getAttr(key: AnyText): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a `Slot` member whose key is equal to the given `key`.\n   */\n  getSlot(key: AnyValue): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a `Field` member whose key is equal to the given `key`.\n   */\n  getField(key: AnyValue): Field | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a member at the given `index`.\n   */\n  getItem(index: AnyNum): Item {\n    return Item.absent();\n  }\n\n  deleted(key: AnyValue): Field {\n    return this;\n  }\n\n  conditional(thenTerm: Field, elseTerm: Field): Field;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    return thenTerm;\n  }\n\n  or(that: Field): Field;\n  or(that: AnyItem): Item;\n  or(that: AnyItem): Item {\n    return this;\n  }\n\n  and(that: Field): Field;\n  and(that: AnyItem): Item;\n  and(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return that;\n  }\n\n  lambda(template: Value): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Converts the value of this `Field` into a `string` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `string` value.\n   */\n  stringValue(): string | undefined;\n  /**\n   * Converts the value of this `Field` into a `string` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `string` value.\n   */\n  stringValue<T>(orElse: T): string | T;\n  stringValue<T>(orElse?: T): string | T | undefined {\n    return this.value.stringValue(orElse);\n  }\n\n  /**\n   * Converts the value of this `Field` into a `number` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `number` value.\n   */\n  numberValue(): number | undefined;\n  /**\n   * Converts the value of this `Field` into a `number` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `number` value.\n   */\n  numberValue<T>(orElse: T): number | T;\n  numberValue<T>(orElse?: T): number | T | undefined {\n    return this.value.numberValue(orElse);\n  }\n\n  /**\n   * Converts the value of this `Field` into a `boolean` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `boolean` value.\n   */\n  booleanValue(): boolean | undefined;\n  /**\n   * Converts the value of this `Field` into a `boolean` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `boolean` value.\n   */\n  booleanValue<T>(orElse: T): boolean | T;\n  booleanValue<T>(orElse?: T): boolean | T | undefined {\n    return this.value.booleanValue(orElse);\n  }\n\n  abstract toAny(): AnyField;\n\n  abstract branch(): Field;\n\n  abstract clone(): Field;\n\n  abstract commit(): this;\n\n  /** @hidden */\n  static readonly IMMUTABLE: number = 1 << 0;\n\n  static of(key: AnyValue, value?: AnyValue): Field {\n    let name;\n    if (typeof key === \"string\") {\n      name = key;\n    } else if (key instanceof Item.Text) {\n      name = key.value;\n    }\n    if (name !== void 0 && name.charCodeAt(0) === 64/*'@'*/) {\n      arguments[0] = name.slice(1);\n      return Item.Attr.of.apply(undefined, arguments);\n    } else {\n      return Item.Slot.of.apply(undefined, arguments);\n    }\n  }\n\n  static fromAny(field: AnyField): Field {\n    if (field instanceof Field) {\n      return field;\n    } else if (typeof field === \"object\" && field !== null) {\n      if ((field as any).$key !== void 0) {\n        return Field.of((field as any).$key, (field as any).$value);\n      } else {\n        for (const key in field) {\n          return Field.of(key, (field as any)[key]);\n        }\n      }\n    }\n    throw new TypeError(\"\" + field);\n  }\n}\nItem.Field = Field;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class InterpreterException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = InterpreterException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Format, Debug} from \"@swim/codec\";\n\n/**\n * Either an [[InterpreterSettings]] instance, or an [[InterpreterSettingsInit]]\n * object initializer.\n */\nexport type AnyInterpreterSettings = InterpreterSettings | InterpreterSettingsInit;\n\n/**\n * [[InterpreterSettings]] object initializer.\n */\nexport interface InterpreterSettingsInit {\n  lineSeparator?: string | null;\n  isPretty?: boolean;\n  isStyled?: boolean;\n}\n\nexport class InterpreterSettings implements Debug, HashCode {\n  /** @hidden */\n  readonly _maxScopeDepth: number;\n\n  constructor(maxScopeDepth: number) {\n    this._maxScopeDepth = maxScopeDepth;\n  }\n\n  maxScopeDepth(): number;\n\n  maxScopeDepth(maxScopeDepth: number): InterpreterSettings;\n\n  maxScopeDepth(maxScopeDepth?: number): number | InterpreterSettings {\n    if (maxScopeDepth === void 0) {\n      return this._maxScopeDepth;\n    } else {\n      return this.copy(maxScopeDepth);\n    }\n  }\n\n  protected copy(maxScopeDepth: number): InterpreterSettings {\n    return new InterpreterSettings(maxScopeDepth);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof InterpreterSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InterpreterSettings) {\n      return that.canEqual(this) && this._maxScopeDepth === that._maxScopeDepth;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (InterpreterSettings._hashSeed === void 0) {\n      InterpreterSettings._hashSeed = Murmur3.seed(InterpreterSettings);\n    }\n    return Murmur3.mash(Murmur3.mix(InterpreterSettings._hashSeed, this._maxScopeDepth));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"new\").write(32/*' '*/).write(\"InterpreterSettings\")\n        .write(40/*'('*/).debug(this._maxScopeDepth).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n  private static _standard?: InterpreterSettings;\n\n  static standard(): InterpreterSettings {\n    if (InterpreterSettings._standard === void 0) {\n      const maxScopeDepth = 1024;\n      InterpreterSettings._standard = new InterpreterSettings(maxScopeDepth);\n    }\n    return InterpreterSettings._standard;\n  }\n}\n","import {InterpreterException} from \"./InterpreterException\";\nimport {InterpreterSettings} from \"./InterpreterSettings\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Selector} from \"./Selector\";\nimport {Operator} from \"./Operator\";\n\nexport type AnyInterpreter = Interpreter | AnyItem;\n\nexport class Interpreter {\n  /** @hidden */\n  _settings: InterpreterSettings;\n  /** @hidden */\n  _scopeStack: Item[] | null;\n  /** @hidden */\n  _scopeDepth: number;\n\n  constructor(settings: InterpreterSettings = InterpreterSettings.standard(),\n              scopeStack: Item[] | null = null, scopeDepth: number = 0) {\n    this._settings = settings;\n    this._scopeStack = scopeStack;\n    this._scopeDepth = scopeDepth;\n  }\n\n  settings(): InterpreterSettings;\n\n  settings(settings: InterpreterSettings): this;\n\n  settings(settings?: InterpreterSettings): InterpreterSettings | this {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = settings;\n      return this;\n    }\n  }\n\n  scopeDepth(): number {\n    return this._scopeDepth;\n  }\n\n  peekScope(): Item {\n    const scopeDepth = this._scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    return this._scopeStack![scopeDepth - 1];\n  }\n\n  getScope(index: number): Item {\n    if (index < 0 || index >= this._scopeDepth) {\n      throw new RangeError(\"\" + index);\n    }\n    return this._scopeStack![index];\n  }\n\n  pushScope(scope: Item): void {\n    const scopeDepth = this._scopeDepth;\n    if (scopeDepth >= this._settings._maxScopeDepth) {\n      throw new InterpreterException(\"scope stack overflow\");\n    }\n    const oldScopeStack = this._scopeStack;\n    let newScopeStack;\n    if (oldScopeStack === null || scopeDepth + 1 > oldScopeStack.length) {\n      newScopeStack = new Array<Item>(Interpreter.expand(scopeDepth + 1));\n      if (oldScopeStack !== null) {\n        for (let i = 0; i < scopeDepth; i += 1) {\n          newScopeStack[i] = oldScopeStack[i];\n        }\n      }\n      this._scopeStack = newScopeStack;\n    } else {\n      newScopeStack = oldScopeStack;\n    }\n    newScopeStack[scopeDepth] = scope;\n    this._scopeDepth = scopeDepth + 1;\n  }\n\n  popScope(): Item {\n    const scopeDepth = this._scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    const scopeStack = this._scopeStack!;\n    const scope = scopeStack[scopeDepth - 1];\n    scopeStack[scopeDepth - 1] = void 0 as any;\n    this._scopeDepth = scopeDepth - 1;\n    return scope;\n  }\n\n  swapScope(newScope: Item): Item {\n    const scopeDepth = this._scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    const scopeStack = this._scopeStack!;\n    const oldScope = scopeStack[scopeDepth - 1];\n    scopeStack[scopeDepth - 1] = newScope;\n    return oldScope;\n  }\n\n  willOperate(operator: Operator): void {\n    // stub\n  }\n\n  didOperate(operator: Operator, result: Item): void {\n    // stub\n  }\n\n  willSelect(selector: Selector): void {\n    // stub\n  }\n\n  didSelect(selector: Selector, result: unknown): void {\n    // stub\n  }\n\n  willTransform(selector: Selector): void {\n    // stub\n  }\n\n  didTransform(selector: Selector, result: Item): void {\n    // stub\n  }\n\n  static of(...objects: AnyItem[]): Interpreter {\n    const n = arguments.length;\n    const scopes = new Array(Interpreter.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      const scope = Item.fromAny(arguments[i]);\n      scopes[i] = scope;\n    }\n    return new Interpreter(InterpreterSettings.standard(), scopes, n);\n  }\n\n  static fromAny(interpreter: AnyInterpreter, globalScope: Item = Item.globalScope()): Interpreter {\n    if (!(interpreter instanceof Interpreter)) {\n      const scope = interpreter;\n      interpreter = new Interpreter();\n      if (globalScope !== void 0) {\n        interpreter.pushScope(globalScope);\n      }\n      if (scope !== void 0) {\n        interpreter.pushScope(Item.fromAny(scope));\n      }\n    }\n    return interpreter;\n  }\n\n  private static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyField, Field} from \"./Field\";\nimport {AnyValue, Value} from \"./Value\";\nimport {AnyText, Text} from \"./Text\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\n\nexport class Attr extends Field {\n  /** @hidden */\n  readonly _key: Text;\n  /** @hidden */\n  _value: Value;\n  /** @hidden */\n  _flags: number;\n\n  constructor(key: Text, value: Value = Item.Value.extant(), flags: number = 0) {\n    super();\n    this._key = key;\n    this._value = value;\n    this._flags = flags;\n  }\n\n  isConstant(): boolean {\n    return this._key.isConstant() && this._value.isConstant();\n  }\n\n  get name(): string {\n    return this._key.value;\n  }\n\n  get key(): Text {\n    return this._key;\n  }\n\n  get value(): Value {\n    return this._value;\n  }\n\n  setValue(newValue: Value): Value {\n    if ((this._flags & Field.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const oldValue = this._value;\n    this._value = newValue;\n    return oldValue;\n  }\n\n  updatedValue(value: Value): Attr {\n    return new Attr(this._key, value);\n  }\n\n  bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseOrOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseOr(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseOr(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseXorOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseXor(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseXor(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseAndOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseAnd(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseAnd(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.PlusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.plus(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.plus(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.MinusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.minus(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.minus(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.TimesOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.times(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.times(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.DivideOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.divide(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.divide(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.ModuloOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.modulo(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.modulo(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  not(): Item {\n    const newValue = this._value.not();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseNot(): Item {\n    const newValue = this._value.bitwiseNot();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  negative(): Item {\n    const newValue = this._value.negative();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  positive(): Item {\n    const newValue = this._value.positive();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  inverse(): Item {\n    const newValue = this._value.inverse();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key.evaluate(interpreter).toValue();\n    const value = this._value.evaluate(interpreter).toValue();\n    if (key === this._key && value === this._value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      if (key instanceof Item.Text) {\n        return new Attr(key, value);\n      } else {\n        return new Item.Slot(key, value);\n      }\n    }\n    return Item.absent();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key.substitute(interpreter).toValue();\n    const value = this._value.substitute(interpreter).toValue();\n    if (key === this._key && value === this._value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      if (key instanceof Item.Text) {\n        return new Attr(key, value);\n      } else {\n        return new Item.Slot(key, value);\n      }\n    }\n    return Item.absent();\n  }\n\n  toAny(): AnyField {\n    const field = {} as {[key: string]: AnyValue};\n    field[\"@\" + this._key.value] = this._value.toAny();\n    return field;\n  }\n\n  isAliased(): boolean {\n    return false;\n  }\n\n  isMutable(): boolean {\n    return (this._flags & Field.IMMUTABLE) === 0;\n  }\n\n  alias(): void {\n    this._flags |= Field.IMMUTABLE;\n  }\n\n  branch(): Attr {\n    if ((this._flags & Field.IMMUTABLE) !== 0) {\n      return new Attr(this._key, this._value, this._flags & ~Field.IMMUTABLE);\n    } else {\n      return this;\n    }\n  }\n\n  clone(): Attr {\n    return new Attr(this._key.clone(), this._value.clone());\n  }\n\n  commit(): this {\n    if ((this._flags & Field.IMMUTABLE) === 0) {\n      this._flags |= Field.IMMUTABLE;\n      this._value.commit();\n    }\n    return this;\n  }\n\n  typeOrder(): number {\n    return 1;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Attr) {\n      let order = this._key.compareTo(that._key);\n      if (order === 0) {\n        order = this._value.compareTo(that._value);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  keyEquals(key: unknown): boolean {\n    if (typeof key === \"string\") {\n      return this._key.value === key;\n    } else if (key instanceof Field) {\n      return this._key.equals(key.key);\n    } else {\n      return this._key.equals(key);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Attr) {\n      return this._key.equals(that._key) && this._value.equals(that._value);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Attr._hashSeed === void 0) {\n      Attr._hashSeed = Murmur3.seed(Attr);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Attr._hashSeed,\n        this._key.hashCode()), this._value.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Attr\").write(46/*'.'*/).write(\"of\").write(40/*'('*/).display(this.key);\n    if (!(this.value instanceof Item.Extant)) {\n      output = output.write(44/*','*/).write(32/*' '*/).display(this.value);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  private static _hashSeed?: number;\n\n  static of(key: AnyText, value?: AnyValue): Attr {\n    key = Item.Text.fromAny(key);\n    value = (arguments.length >= 2 ? Item.Value.fromAny(value) : Item.Value.extant());\n    return new Attr(key, value);\n  }\n}\nItem.Attr = Attr;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyField, Field} from \"./Field\";\nimport {AnyValue, Value} from \"./Value\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\n\nexport class Slot extends Field {\n  /** @hidden */\n  readonly _key: Value;\n  /** @hidden */\n  _value: Value;\n  /** @hidden */\n  _flags: number;\n\n  constructor(key: Value, value: Value = Item.Value.extant(), flags: number = 0) {\n    super();\n    this._key = key.commit();\n    this._value = value;\n    this._flags = flags;\n  }\n\n  get key(): Value {\n    return this._key;\n  }\n\n  get value(): Value {\n    return this._value;\n  }\n\n  isConstant(): boolean {\n    return this._key.isConstant() && this._value.isConstant();\n  }\n\n  setValue(newValue: Value): Value {\n    if ((this._flags & Field.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const oldValue = this._value;\n    this._value = newValue;\n    return oldValue;\n  }\n\n  updatedValue(value: Value): Slot {\n    return new Slot(this._key, value);\n  }\n\n  bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseOrOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseOr(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseOr(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseXorOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseXor(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseXor(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseAndOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseAnd(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseAnd(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.PlusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.plus(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.plus(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.MinusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.minus(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.minus(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.TimesOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.times(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.times(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.DivideOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.divide(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.divide(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.ModuloOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.modulo(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.modulo(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  not(): Item {\n    const newValue = this._value.not();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseNot(): Item {\n    const newValue = this._value.bitwiseNot();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  negative(): Item {\n    const newValue = this._value.negative();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  positive(): Item {\n    const newValue = this._value.positive();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  inverse(): Item {\n    const newValue = this._value.inverse();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key.evaluate(interpreter).toValue();\n    const value = this._value.evaluate(interpreter).toValue();\n    if (key === this._key && value === this._value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      return new Slot(key, value);\n    }\n    return Item.absent();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key.substitute(interpreter).toValue();\n    const value = this._value.substitute(interpreter).toValue();\n    if (key === this._key && value === this._value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      return new Slot(key, value);\n    }\n    return Item.absent();\n  }\n\n  toAny(): AnyField {\n    const field = {} as {[key: string]: AnyValue};\n    if (this._key instanceof Item.Text) {\n      field[this._key.value] = this._value.toAny();\n    } else {\n      field.$key = this._key.toAny();\n      field.$value = this._value.toAny();\n    }\n    return field;\n  }\n\n  isAliased(): boolean {\n    return false;\n  }\n\n  isMutable(): boolean {\n    return (this._flags & Field.IMMUTABLE) === 0;\n  }\n\n  alias(): void {\n    this._flags |= Field.IMMUTABLE;\n  }\n\n  branch(): Slot {\n    if ((this._flags & Field.IMMUTABLE) !== 0) {\n      return new Slot(this._key, this._value, this._flags & ~Field.IMMUTABLE);\n    } else {\n      return this;\n    }\n  }\n\n  clone(): Slot {\n    return new Slot(this._key.clone(), this._value.clone());\n  }\n\n  commit(): this {\n    if ((this._flags & Field.IMMUTABLE) === 0) {\n      this._flags |= Field.IMMUTABLE;\n      this._value.commit();\n    }\n    return this;\n  }\n\n  typeOrder(): number {\n    return 2;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Slot) {\n      let order = this._key.compareTo(that._key);\n      if (order === 0) {\n        order = this._value.compareTo(that._value);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  keyEquals(key: unknown): boolean {\n    if (typeof key === \"string\" && this._key instanceof Item.Text) {\n      return this._key.value === key;\n    } else if (key instanceof Field) {\n      return this._key.equals(key.key);\n    } else {\n      return this._key.equals(key);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Slot) {\n      return this._key.equals(that._key) && this._value.equals(that._value);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Slot._hashSeed === void 0) {\n      Slot._hashSeed = Murmur3.seed(Slot);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Slot._hashSeed,\n        this._key.hashCode()), this._value.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Slot\").write(46/*'.'*/).write(\"of\").write(40/*'('*/).display(this.key);\n    if (!(this.value instanceof Item.Extant)) {\n      output = output.write(44/*','*/).write(32/*' '*/).display(this.value);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  private static _hashSeed?: number;\n\n  static of(key: AnyValue, value?: AnyValue): Slot {\n    key = Item.Value.fromAny(key);\n    value = arguments.length >= 2 ? Item.Value.fromAny(value) : Item.Value.extant();\n    return new Slot(key, value);\n  }\n}\nItem.Slot = Slot;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {Value} from \"./Value\";\nimport {Record} from \"./Record\";\n\n/** @hidden */\nexport class ValueBuilder implements Builder<Item, Value> {\n  _record: Record | null;\n  _value: Value | null;\n\n  constructor() {\n    this._record = null;\n    this._value = null;\n  }\n\n  push(...items: Item[]): void {\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      const item = arguments[i] as Item;\n      if (item instanceof Field) {\n        return this.pushField(item);\n      } else if (item instanceof Value) {\n        return this.pushValue(item);\n      } else {\n        throw new TypeError(\"\" + item);\n      }\n    }\n  }\n\n  /** @hidden */\n  pushField(item: Field): void {\n    if (this._record === null) {\n      this._record = Item.Record.create();\n      if (this._value !== null) {\n        this._record.push(this._value);\n        this._value = null;\n      }\n    }\n    this._record.push(item);\n  }\n\n  /** @hidden */\n  pushValue(item: Value): void {\n    if (this._record !== null) {\n      this._record.push(item);\n    } else if (this._value === null) {\n      this._value = item;\n    } else {\n      this._record = Item.Record.create();\n      this._record.push(this._value);\n      this._value = null;\n      this._record.push(item);\n    }\n  }\n\n  bind(): Value {\n    if (this._record !== null) {\n      return this._record;\n    } else if (this._value !== null) {\n      return this._value;\n    } else {\n      return Value.absent();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {ValueBuilder} from \"./ValueBuilder\";\nimport {Record} from \"./Record\";\nimport {AnyText} from \"./Text\";\nimport {AnyNum} from \"./Num\";\n\nexport type AnyValue = Value\n                     | {readonly [key: string]: AnyValue}\n                     | ReadonlyArray<unknown> // ReadonlyArray<AnyItem>\n                     | Uint8Array\n                     | string\n                     | number\n                     | boolean\n                     | null\n                     | undefined;\n\nexport abstract class Value extends Item {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Returns `true` if this `Value` is not [[Absent]].\n   */\n  isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` if this `Value` is neither [[Extant]] nor [[Absent]].\n   */\n  isDistinct(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Value` can't be a `Field`, so it\n   * can't have a key component.\n   */\n  get key(): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns `this` because every `Value` is its own value component.\n   */\n  toValue(): Value {\n    return this;\n  }\n\n  /**\n   * Returns the `key` string of the first member of this `Value`, if this\n   * `Value` is a [[Record]], and its first member is an [[Attr]]; otherwise\n   * returns `undefined` if this `Value` is not a `Record`, or if this `Value`\n   * is a `Record` whose first member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  tag(): string | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the [[Value.flattened flattened]] members of this `Value` after\n   * all attributes have been removed, if this `Value` is a [[Record]];\n   * otherwise returns `this` if this `Value` is not a `Record`.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  target(): Value {\n    return this;\n  }\n\n  /**\n   * Returns the sole member of this `Value`, if this `Value` is a [[Record]]\n   * with exactly one member, and its member is a `Value`; returns [[Extant]]\n   * if this `Value` is an empty `Record`; otherwise returns `this` if this\n   * `Value` is a `Record` with more than one member, or if this `Value` is a\n   * not a `Record`.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  flattened(): Value {\n    return this;\n  }\n\n  /**\n   * Returns `this` if this `Value` is a [[Record]]; returns a `Record`\n   * containing just this `Value`, if this `Value` is [[Value.isDistinct\n   * distinct]]; otherwise returns an empty `Record` if this `Value` is\n   * [[Extant]] or [[Absent]].  Facilitates writing code that treats a bare\n   * `Value` equivalently to a unary `Record`.\n   */\n  unflattened(): Record {\n    return Value.Record.of(this);\n  }\n\n  /**\n   * Returns the value of the first member of this `Value`, if this `Value` is\n   * a `Record`, and its first member is an [[Attr]] whose `key` string is\n   * equal to `tag`; otherwise returns [[Absent]] if this `Value` is not a\n   * `Record`, or if this `Value` is a `Record` whose first member is not an\n   * `Attr`, or if this `Value` is a `Record` whose first member is an `Attr`\n   * whose `key` does not equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  header(tag: string): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the [[Value.unflattened unflattened]] [[Value.header header]] of\n   * this `Value`, if this `Value` is a [[Record]], and its first member is an\n   * [[Attr]] whose `key` string is equal to `tag`; otherwise returns\n   * `undefined`.\n   *\n   * The `headers` of the `tag` attribute of a structure are like the\n   * attributes of an XML element tag; through unlike an XML element, `tag`\n   * attribute headers are not limited to string keys and values.\n   */\n  headers(tag: string): Record | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the first member of this `Value`, if this `Value` is a non-empty\n   * [[Record]]; otherwise returns [[Absent]].\n   */\n  head(): Item {\n    return Item.absent();\n  }\n\n  /**\n   * Returns a view of all but the first member of this `Value`, if this\n   * `Value` is a non-empty [[Record]]; otherwise returns an empty `Record`\n   * if this `Value` is not a `Record`, of if this `Value` is itself an\n   * empty `Record`.\n   */\n  tail(): Record {\n    return Value.Record.empty();\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Value.tail tail]] of this\n   * `Value`.  Used to recursively deconstruct a structure, terminating with\n   * its last `Value`, rather than a unary `Record` containing its last value,\n   * if the structure ends with a `Value` member.\n   */\n  body(): Value {\n    return Value.extant();\n  }\n\n  /**\n   * Returns the number of members contained in this `Value`, if this `Value`\n   * is a [[Record]]; otherwise returns `0` if this `Value` is not a `Record`.\n   */\n  get length(): number {\n    return 0;\n  }\n\n  /**\n   * Returns `true` if this `Value` is a [[Record]] that has a [[Field]] member\n   * with a key that is equal to the given `key`; otherwise returns `false` if\n   * this `Value` is not a `Record`, or if this `Value` is a `Record`, but has\n   * no `Field` member with a key equal to the given `key`.\n   */\n  has(key: AnyValue): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Field` member\n   * with a key equal to the given `key`.\n   */\n  get(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Attr` member\n   * with a key equal to the given `key`.\n   */\n  getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Slot` member\n   * with a key equal to the given `key`.\n   */\n  getSlot(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the last [[Field]] member of this `Value` whose key is equal to\n   * the given `key`; returns `undefined` if this `Value` is not a [[Record]],\n   * or if this `Value` is a `Record`, but has no `Field` member with a `key`\n   * equal to the given `key`.\n   */\n  getField(key: AnyValue): Field | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the member of this `Value` at the given `index`, if this `Value`\n   * is a [[Record]], and the `index` is greater than or equal to zero, and\n   * less than the [[Record.length length]] of the `Record`; otherwise returns\n   * [[Absent]] if this `Value` is not a `Record`, or if this `Value` is a\n   * `Record`, but the `index` is out of bounds.\n   */\n  getItem(index: AnyNum): Item {\n    return Item.absent();\n  }\n\n  deleted(key: AnyValue): Value {\n    return this;\n  }\n\n  conditional(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    return thenTerm;\n  }\n\n  or(that: AnyValue): Value;\n  or(that: AnyItem): Item;\n  or(that: AnyItem): Item {\n    return this;\n  }\n\n  and(that: AnyValue): Value;\n  and(that: AnyItem): Item;\n  and(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return that;\n  }\n\n  bitwiseOr(that: AnyValue): Value;\n  bitwiseOr(that: AnyItem): Item;\n  bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseOrOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.bitwiseOr(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.bitwiseOr(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  bitwiseXor(that: AnyValue): Value;\n  bitwiseXor(that: AnyItem): Item;\n  bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseXorOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.bitwiseXor(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.bitwiseXor(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  bitwiseAnd(that: AnyValue): Value;\n  bitwiseAnd(that: AnyItem): Item;\n  bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseAndOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.bitwiseAnd(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.bitwiseAnd(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  lt(that: AnyValue): Value;\n  lt(that: AnyItem): Item;\n  lt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.LtOperator(this, that);\n    }\n    return super.lt(that);\n  }\n\n  le(that: AnyValue): Value;\n  le(that: AnyItem): Item;\n  le(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.LeOperator(this, that);\n    }\n    return super.le(that);\n  }\n\n  eq(that: AnyValue): Value;\n  eq(that: AnyItem): Item;\n  eq(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.EqOperator(this, that);\n    }\n    return super.eq(that);\n  }\n\n  ne(that: AnyValue): Value;\n  ne(that: AnyItem): Item;\n  ne(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.NeOperator(this, that);\n    }\n    return super.ne(that);\n  }\n\n  ge(that: AnyValue): Value;\n  ge(that: AnyItem): Item;\n  ge(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.GeOperator(this, that);\n    }\n    return super.ge(that);\n  }\n\n  gt(that: AnyValue): Value;\n  gt(that: AnyItem): Item;\n  gt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.GtOperator(this, that);\n    }\n    return super.gt(that);\n  }\n\n  plus(that: AnyValue): Value;\n  plus(that: AnyItem): Item;\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.PlusOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.plus(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.plus(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  minus(that: AnyValue): Value;\n  minus(that: AnyItem): Item;\n  minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.MinusOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.minus(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.minus(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  times(that: AnyValue): Value;\n  times(that: AnyItem): Item;\n  times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.TimesOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.times(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.times(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  divide(that: AnyValue): Value;\n  divide(that: AnyItem): Item;\n  divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.DivideOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.divide(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.divide(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  modulo(that: AnyValue): Value;\n  modulo(that: AnyItem): Item;\n  modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.ModuloOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.modulo(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.modulo(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  not(): Value {\n    return Value.absent();\n  }\n\n  bitwiseNot(): Value {\n    return Value.absent();\n  }\n\n  negative(): Value {\n    return Value.absent();\n  }\n\n  positive(): Value {\n    return Value.absent();\n  }\n\n  inverse(): Value {\n    return Value.absent();\n  }\n\n  lambda(template: Value): Value {\n    return new Item.LambdaFunc(this, template);\n  }\n\n  /**\n   * Converts this `Value` into a `string` value, if possible; otherwise returns\n   * `undefined` if this `Value` can't be converted into a `string` value.\n   */\n  stringValue(): string | undefined;\n  /**\n   * Converts this `Value` into a `string` value, if possible; otherwise returns\n   * `orElse` if this `Value` can't be converted into a `string` value.\n   */\n  stringValue<T>(orElse: T): string | T;\n  stringValue<T>(orElse?: T): string | T | undefined {\n    return orElse;\n  }\n\n  /**\n   * Converts this `Value` into a `number` value, if possible; otherwise returns\n   * `undefined` if this `Value` can't be converted into a `number` value.\n   */\n  numberValue(): number | undefined;\n  /**\n   * Converts this `Value` into a `number` value, if possible; otherwise returns\n   * `orElse` if this `Value` can't be converted into a `number` value.\n   */\n  numberValue<T>(orElse: T): number | T;\n  numberValue<T>(orElse?: T): number | T | undefined {\n    return orElse;\n  }\n\n  /**\n   * Converts this `Value` into a `boolean` value, if possible; otherwise\n   * returns `undefined` if this `Value` can't be converted into a `boolean`\n   * value.\n   */\n  booleanValue(): boolean | undefined;\n  /**\n   * Converts this `Value` into a `boolean` value, if possible; otherwise\n   * returns `orElse` if this `Value` can't be converted into a `boolean` value.\n   */\n  booleanValue<T>(orElse: T): boolean | T;\n  booleanValue<T>(orElse?: T): boolean | T | undefined {\n    return orElse;\n  }\n\n  abstract toAny(): AnyValue;\n\n  isAliased(): boolean {\n    return false;\n  }\n\n  isMutable(): boolean {\n    return false;\n  }\n\n  alias(): void {\n    // nop\n  }\n\n  branch(): Value {\n    return this;\n  }\n\n  clone(): Value {\n    return this;\n  }\n\n  commit(): this {\n    return this;\n  }\n\n  keyEquals(key: unknown): boolean {\n    return false;\n  }\n\n  static builder(): Builder<Item, Value> {\n    return new ValueBuilder();\n  }\n\n  static empty(): Value {\n    return Value.Record.empty();\n  }\n\n  static extant(): Value {\n    return Value.Extant.extant();\n  }\n\n  static absent(): Value {\n    return Value.Absent.absent();\n  }\n\n  static fromAny(value: AnyValue): Value {\n    if (value instanceof Value) {\n      return value;\n    } else if (value === void 0) {\n      return Value.Absent.absent();\n    } else if (value === null) {\n      return Value.Extant.extant();\n    } else if (typeof value === \"boolean\") {\n      return Value.Bool.from(value);\n    } else if (typeof value === \"number\") {\n      return Value.Num.from(value);\n    } else if (typeof value === \"string\") {\n      return Value.Text.from(value);\n    } else if (value instanceof Uint8Array) {\n      return Value.Data.wrap(value);\n    } else if (Array.isArray(value)) {\n      return Value.Record.fromArray(value);\n    } else if (typeof value === \"object\") {\n      return Value.Record.fromObject(value as {[key: string]: AnyValue});\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\nItem.Value = Value;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Item} from \"./Item\";\nimport {Record} from \"./Record\";\n\n/** @hidden */\nexport class RecordCursor extends Cursor<Item> {\n  /** @hidden */\n  readonly _record: Record;\n  /** @hidden */\n  readonly _lower: number;\n  /** @hidden */\n  readonly _upper: number;\n  /** @hidden */\n  _index: number;\n  /** @hidden */\n  _direction: number;\n\n  constructor(record: Record, lower: number = 0, upper: number = record.length, index: number = lower) {\n    super();\n    this._record = record;\n    this._lower = lower;\n    this._upper = upper;\n    this._index = index;\n    this._direction = 0;\n  }\n\n  isEmpty(): boolean {\n    return this._index >= this._upper;\n  }\n\n  head(): Item {\n    this._direction = 0;\n    if (this._index < this._upper) {\n      return this._record.getItem(this._index);\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  step(): void {\n    this._direction = 0;\n    if (this._index < this._upper) {\n      this._index += 1;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  skip(count: number): void {\n    this._index = Math.min(Math.max(this._lower, this._index + count, this._upper));\n  }\n\n  hasNext(): boolean {\n    return this._index < this._upper;\n  }\n\n  nextIndex(): number {\n    return this._index - this._lower;\n  }\n\n  next(): {value?: Item, done: boolean} {\n    this._direction = 1;\n    const index = this._index;\n    if (index < this._upper) {\n      this._index = index + 1;\n      return {value: this._record.getItem(index), done: this._index === this._upper};\n    } else {\n      this._index = this._upper;\n      return {done: true};\n    }\n  }\n\n  hasPrevious(): boolean {\n    return this._index > this._lower;\n  }\n\n  previousIndex(): number {\n    return this._index - this._lower - 1;\n  }\n\n  previous(): {value?: Item, done: boolean} {\n    this._direction = -1;\n    const index = this._index - 1;\n    if (index >= this._lower) {\n      this._index = index;\n      return {value: this._record.getItem(index), done: index === this._lower};\n    } else {\n      this._index = 0;\n      return {done: true};\n    }\n  }\n\n  set(newItem: Item): void {\n    if (this._direction > 0) {\n      this._record.setItem(this._index - 1, newItem);\n    } else {\n      this._record.setItem(this._index, newItem);\n    }\n  }\n\n  delete(): void {\n    if (this._direction > 0) {\n      this._index -= 1;\n    }\n    this._record.splice(this._index, 1);\n    this._direction = 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, Cursor, Builder} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {AnyValue, Value} from \"./Value\";\nimport {RecordCursor} from \"./RecordCursor\";\nimport {AnyText} from \"./Text\";\nimport {AnyNum} from \"./Num\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\n\nexport type AnyRecord = Record\n                      | {readonly [key: string]: AnyValue}\n                      | ReadonlyArray<unknown>; // ReadonlyArray<AnyItem>\n\nexport abstract class Record extends Value implements Builder<Item, Record> {\n  /** @hidden */\n  _hashCode?: number;\n\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Returns `true` if this `Record` has no members.\n   */\n  abstract isEmpty(): boolean;\n\n  /**\n   * Returns `true` if this `Record` has only [[Value]] members–no `Field`\n   * members.\n   */\n  isArray(): boolean {\n    return this.fieldCount() === 0;\n  }\n\n  /**\n   * Returns `true` if this `Record` has only [[Field]] members–no `Value`\n   * members.\n   */\n  isObject(): boolean {\n    return this.valueCount() === 0;\n  }\n\n  /**\n   * Returns the number of members contained in this `Record`.\n   */\n  abstract get length(): number;\n\n  /**\n   * Returns the number of [[Field]] members contained in this `Record`.\n   */\n  fieldCount(): number {\n    let count = 0;\n    this.forEach(function (member: Item): void {\n      if (member instanceof Item.Field) {\n        count += 1;\n      }\n    }, this);\n    return count;\n  }\n\n  /**\n   * Returns the number of [[Value]] members contained in this `Record`.\n   */\n  valueCount(): number {\n    let count = 0;\n    this.forEach(function (member: Item): void {\n      if (member instanceof Value) {\n        count += 1;\n      }\n    }, this);\n    return count;\n  }\n\n  isConstant(): boolean {\n    return this.forEach(function (member: Item): boolean | undefined {\n      return member.isConstant() ? void 0 : false;\n    }, this) === void 0;\n  }\n\n  /**\n   * Returns the `key` string of the first member of this `Record`, if the\n   * first member is an [[Attr]]; otherwise returns `undefined` if the first\n   * member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  tag(): string | undefined {\n    const item = this.head();\n    if (item instanceof Item.Attr) {\n      return item.key.value;\n    }\n    return void 0;\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] members of this `Record` after\n   * all attributes have been removed.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    this.forEach(function (item: Item): void {\n      if (item instanceof Item.Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }, this);\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Returns the sole member of this `Record`, if this `Record` has exactly one\n   * member, and its member is a `Value`; returns [[Extant]] if this `Record`\n   * is empty; otherwise returns `this` if this `Record` has more than one\n   * member.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  flattened(): Value {\n    if (this.isEmpty()) {\n      return Value.extant();\n    } else {\n      const items = this.iterator();\n      const head = items.head();\n      items.step();\n      if (items.isEmpty() && head instanceof Value) {\n        return head;\n      } else {\n        return this.branch();\n      }\n    }\n  }\n\n  /**\n   * Returns `this` `Record.\n   */\n  unflattened(): Record {\n    return this;\n  }\n\n  /**\n   * Returns the value of the first member of this `Record`, if the first\n   * member is an [[Attr]] whose `key` string is equal to `tag`; otherwise\n   * returns [[Absent]] if the first member of this `Record` is not an `Attr`,\n   * or if the first member of this `Record` is an `Attr` whose `key` does not\n   * equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  header(tag: string): Value {\n    const head = this.head();\n    if (head instanceof Item.Attr && head.key.value === tag) {\n      return head.value;\n    } else {\n      return Value.absent();\n    }\n  }\n\n  /**\n   * Returns the [[Record.unflattened unflattened]] [[Record.header header]] of\n   * this `Record`.  The `headers` of the `tag` attribute of a structure are\n   * like the attributes of an XML element tag; through unlike an XML element,\n   * `tag` attribute headers are not limited to string keys and values.\n   */\n  headers(tag: string): Record | undefined {\n    const head = this.head();\n    if (head instanceof Item.Attr && head.key.value === tag) {\n      const header = head.value;\n      if (header instanceof Record) {\n        return header;\n      } else {\n        return Record.of(header);\n      }\n    }\n    return void 0;\n  }\n\n  /**\n   * Returns the first member of this `Record`, if this `Record` is non-empty;\n   * otherwise returns [[Absent]].\n   */\n  head(): Item {\n    return this.forEach(function (item: Item): Item {\n      return item;\n    }, this) || Item.absent();\n  }\n\n  /**\n   * Returns a view of all but the first member of this `Record`, if this\n   * `Record` is non-empty; otherwise returns an empty `Record`, if this\n   * `Record` is itself empty.\n   */\n  tail(): Record {\n    const tail = Record.create();\n    this.forEach(function (item: Item, index: number): void {\n      if (index > 0) {\n        tail.push(item);\n      }\n    }, this);\n    return tail;\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Record.tail tail]] of this\n   * `Record`.  Used to recursively deconstruct a structure, terminating\n   * with its last `Value`, rather than a unary `Record` containing its last\n   * value, if the structure ends with a `Value` member.\n   */\n  body(): Value {\n    const tail = this.tail();\n    if (!tail.isEmpty()) {\n      return tail.flattened();\n    } else {\n      return Value.absent();\n    }\n  }\n\n  /**\n   * Returns `true` if this `Record` has a [[Field]] member with a key that is\n   * equal to the given `key`; otherwise returns `false` if this `Record` has\n   * no `Field` member with a key equal to the given `key`.\n   */\n  has(key: AnyValue): boolean {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): boolean | undefined {\n      return item instanceof Item.Field && item.key.equals(key) ? true : void 0;\n    }, this) || false;\n  }\n\n  indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    if (index < 0) {\n      index = Math.max(0, this.length + index);\n    }\n    const i = this.forEach(function (member: Item, i: number): number | undefined {\n      return i >= index && (item as Item).equals(member) ? i : void 0;\n    }, this);\n    return i !== void 0 ? i : -1;\n  }\n\n  lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const n = this.length;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(index, n - 1);\n    while (index >= 0) {\n      if (item.equals(this.getItem(index))) {\n        return index;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Field` member with a key equal to the given `key`.\n   */\n  get(key: AnyValue): Value {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Item.Field && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Attr` member with a key equal to the given `key`.\n   */\n  getAttr(key: AnyText): Value {\n    key = Value.Text.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Item.Attr && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Slot` member with a key equal to the given `key`.\n   */\n  getSlot(key: AnyValue): Value {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Item.Slot && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the last [[Field]] member of this `Record` whose key is equal to\n   * the given `key`; returns `undefined` if this `Record` has no `Field` member\n   * with a `key` equal to the given `key`.\n   */\n  getField(key: AnyValue): Field | undefined {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Field | undefined {\n      return item instanceof Item.Field && item.key.equals(key) ? item : void 0;\n    }, this);\n  }\n\n  /**\n   * Returns the member of this `Record` at the given `index`, if the `index`\n   * is greater than or equal to zero, and less than the [[Record.length\n   * length]] of this `Record`; otherwise returns [[Absent]] if the `index` is\n   * out of bounds.\n   */\n  abstract getItem(index: AnyNum): Item;\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        if (item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(item.updatedValue(newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Item.Slot(key, newValue));\n    return this;\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    key = Value.Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        if (item instanceof Item.Attr && item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(new Item.Attr(key, newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Item.Attr(key, newValue));\n    return this;\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        if (item instanceof Item.Slot && item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(new Item.Slot(key, newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Item.Slot(key, newValue));\n    return this;\n  }\n\n  /**\n   * Replaces the member of this `Record` at the given `index` with a new\n   * `item`, returning {@code this} {@code Record}, if the {@code index} is\n   * greater than or equal to zero, and less than the [[Record.length length]]\n   * of this {@code Record}.\n   *\n   * @throws `Error` if this is an immutable `Record`.\n   * @throws `RangeError` if the `index` is out of bounds.\n   */\n  abstract setItem(index: number, item: AnyItem): this;\n\n  updated(key: AnyValue, value: AnyValue): Record {\n    key = Value.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Item.Field && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Item.Slot(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Item.Slot(key, value));\n    return record;\n  }\n\n  updatedAttr(key: AnyText, value: AnyValue): Record {\n    key = Value.Text.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Item.Attr && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Item.Attr(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Item.Attr(key, value));\n    return record;\n  }\n\n  updatedSlot(key: AnyValue, value: AnyValue): Record {\n    key = Value.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Item.Slot && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Item.Slot(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Item.Slot(key, value));\n    return record;\n  }\n\n  abstract push(...items: AnyItem[]): number;\n\n  abstract splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[];\n\n  abstract delete(key: AnyValue): Item;\n\n  abstract clear(): void;\n\n  appended(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.push.apply(record, arguments);\n    return record;\n  }\n\n  prepended(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.splice.apply(record, Array.prototype.concat.apply([0, 0], arguments));\n    return record;\n  }\n\n  deleted(key: AnyValue): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.delete(key);\n    return record;\n  }\n\n  concat(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      Item.fromAny(arguments[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  slice(lower?: number, upper?: number): Record {\n    return this.subRecord.apply(this, arguments).branch();\n  }\n\n  attr(key: AnyText, value?: AnyValue): this {\n    this.push(Item.Attr.of.apply(void 0, arguments));\n    return this;\n  }\n\n  slot(key: AnyValue, value?: AnyValue): this {\n    this.push(Item.Slot.of.apply(void 0, arguments));\n    return this;\n  }\n\n  item(item: AnyItem): this {\n    this.push(item);\n    return this;\n  }\n\n  items(...items: AnyItem[]): this {\n    this.push.apply(this, arguments);\n    return this;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const scope = Record.create();\n    interpreter.pushScope(scope);\n    let changed = false;\n    this.forEach(function (oldItem: Item): void {\n      const newItem = oldItem.evaluate(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }, this);\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  substitute(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const scope = Record.create();\n    interpreter.pushScope(scope);\n    let changed = false;\n    this.forEach(function (oldItem: Item) {\n      const newItem = oldItem.substitute(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }, this);\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  stringValue(): string | undefined;\n  stringValue<T>(orElse: T): string | T;\n  stringValue<T>(orElse?: T): string | T | undefined {\n    let recordString = \"\";\n    const defined = this.forEach(function (item: Item): null | void {\n      if (item instanceof Value) {\n        const itemString = item.stringValue();\n        if (itemString !== void 0) {\n          recordString += itemString;\n          return;\n        }\n      }\n      return null; // break\n    }, this) === void 0;\n    return defined ? recordString : void 0;\n  }\n\n  toAny(): AnyValue {\n    if (!this.isEmpty() && this.isArray()) {\n      return this.toArray();\n    } else {\n      return this.toObject();\n    }\n  }\n\n  toArray(): AnyItem[] {\n    const array = new Array<AnyItem>(this.length);\n    this.forEach(function (item: Item, index: number): void {\n      if (item instanceof Value) {\n        array[index] = item.toAny();\n      } else if (item instanceof Item.Field) {\n        array[index] = {\n          $key: item.key.toAny(),\n          $value: item.value.toAny(),\n        };\n      }\n    }, this);\n    return array;\n  }\n\n  toObject(): {[key: string]: AnyValue} {\n    const object = {} as {[key: string]: AnyValue};\n    this.forEach(function (item: Item, index: number): void {\n      if (item instanceof Item.Attr) {\n        object[\"@\" + item.key.value] = item.value.toAny();\n      } else if (item instanceof Item.Slot) {\n        if (item.key instanceof Value.Text) {\n          object[item.key.value] = item.value.toAny();\n        } else {\n          object[\"$\" + index] = {\n            $key: item.key.toAny(),\n            $value: item.value.toAny(),\n          };\n        }\n      } else if (item instanceof Value) {\n        object[\"$\" + index] = item.toAny();\n      }\n    }, this);\n    return object;\n  }\n\n  isAliased(): boolean {\n    return false;\n  }\n\n  isMutable(): boolean {\n    return true;\n  }\n\n  alias(): void {\n    // nop\n  }\n\n  branch(): Record {\n    const branch = Record.create();\n    this.forEach(function (item: Item): void {\n      branch.push(item);\n    }, this);\n    return branch;\n  }\n\n  clone(): Record {\n    const clone = Record.create();\n    this.forEach(function (item: Item): void {\n      clone.push(item.clone());\n    }, this);\n    return clone;\n  }\n\n  commit(): this {\n    return this;\n  }\n\n  bind(): Record {\n    return this;\n  }\n\n  subRecord(lower?: number, upper?: number): Record {\n    const n = this.length;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    lower = Math.min(Math.max(0, lower), n);\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    const record = Value.Record.create();\n    this.forEach(function (item: Item, index: number): null | void {\n      if (index < lower!) {\n        return;\n      } else if (index < upper!) {\n        record.push(item);\n        return;\n      } else {\n        return null;\n      }\n    }, this);\n    return record;\n  }\n\n  abstract forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                                   thisArg?: S): T | undefined;\n\n  iterator(): Cursor<Item> {\n    return new RecordCursor(this);\n  }\n\n  typeOrder(): number {\n    return 3;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Record) {\n      const xs = this.iterator();\n      const ys = that.iterator();\n      let order = 0 as 0 | 1 | -1;\n      do {\n        if (!xs.isEmpty() && !ys.isEmpty()) {\n          order = xs.head().compareTo(ys.head());\n          xs.step();\n          ys.step();\n        } else {\n          break;\n        }\n      } while (order === 0);\n      if (order !== 0) {\n        return order;\n      } else if (xs.isEmpty() && !ys.isEmpty()) {\n        return -1;\n      } else if (!xs.isEmpty() && ys.isEmpty()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Record) {\n      const xs = this.iterator();\n      const ys = that.iterator();\n      while (!xs.isEmpty() && !ys.isEmpty()) {\n        if (!xs.head().equals(ys.head())) {\n          return false;\n        }\n        xs.step();\n        ys.step();\n      }\n      return xs.isEmpty() && ys.isEmpty();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      if (Record._hashSeed === void 0) {\n        Record._hashSeed = Murmur3.seed(Record);\n      }\n      let code = Record._hashSeed;\n      this.forEach(function (item: Item): void {\n        code = Murmur3.mix(code, item.hashCode());\n      }, this);\n      this._hashCode = Murmur3.mash(code);\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Record\").write(46/*'.'*/);\n    if (this.isEmpty()) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"of\").write(40/*'('*/);\n      this.forEach(function (item: Item, index: number): void {\n        if (index !== 0) {\n          output = output.write(44/*','*/).write(32/*' '*/);\n        }\n        output.display(item);\n      }, this);\n      output = output.write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  /** @hidden */\n  static readonly ALIASED: number = 1;\n  /** @hidden */\n  static readonly IMMUTABLE: number = 2;\n\n  private static _hashSeed?: number;\n\n  static empty(): Record {\n    return Record.RecordMap.empty();\n  }\n\n  static create(initialCapacity?: number): Record {\n    return Record.RecordMap.create(initialCapacity);\n  }\n\n  static of(...items: AnyItem[]): Record {\n    return Record.RecordMap.of.apply(void 0, arguments);\n  }\n\n  static fromAny(value: AnyRecord): Record {\n    if (value instanceof Record) {\n      return value;\n    } else if (Array.isArray(value)) {\n      return Record.fromArray(value);\n    } else if (typeof value === \"object\" && value !== null) {\n      return Record.fromObject(value as {[key: string]: AnyValue});\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static fromArray(array: {[index: number]: AnyItem, length?: number}): Record {\n    const n = array.length || 0;\n    const record = Record.create(n);\n    for (let i = 0; i < n; i += 1) {\n      record.push(Item.fromAny(array[i]));\n    }\n    return record;\n  }\n\n  static fromObject(object: {[key: string]: AnyValue}): Record {\n    const record = Record.create();\n    for (const key in object) {\n      const value = object[key];\n      if (key.charCodeAt(0) === 36/*'$'*/) {\n        if (!value || typeof value !== \"object\" || !value.hasOwnProperty(\"$key\")) {\n          record.push(Value.fromAny(value));\n        } else {\n          record.push(Item.Field.of((value as any).$key, (value as any).$value));\n        }\n      } else {\n        record.push(Item.Field.of(key, value));\n      }\n    }\n    return record;\n  }\n\n  /** @hidden */\n  static expand(n: number): number {\n    n = Math.max(8, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\nItem.Record = Record;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {AnyText, Text} from \"./Text\";\nimport {AnyNum} from \"./Num\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\n\n/** @hidden */\nexport class RecordMap extends Record {\n  /** @hidden */\n  _array: Array<Item> | null;\n  /** @hidden */\n  _table: Array<Field> | null;\n  /** @hidden */\n  _itemCount: number;\n  /** @hidden */\n  _fieldCount: number;\n  /** @hidden */\n  _flags: number;\n\n  constructor(array: Array<Item> | null, table: Array<Field> | null,\n              itemCount: number, fieldCount: number, flags: number) {\n    super();\n    this._array = array;\n    this._table = table;\n    this._itemCount = itemCount;\n    this._fieldCount = fieldCount;\n    this._flags = flags;\n  }\n\n  isEmpty(): boolean {\n    return this._itemCount === 0;\n  }\n\n  get length(): number {\n    return this._itemCount;\n  }\n\n  fieldCount(): number {\n    return this._fieldCount;\n  }\n\n  valueCount(): number {\n    return this._itemCount - this._fieldCount;\n  }\n\n  isConstant(): boolean {\n    const array = this._array;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      if (!array![i]!.isConstant()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  tag(): string | undefined {\n    if (this._fieldCount > 0) {\n      const head = this._array![0];\n      if (head instanceof Item.Attr) {\n        return head.key.value;\n      }\n    }\n    return void 0;\n  }\n\n  target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  head(): Item {\n    if (this._itemCount > 0) {\n      return this._array![0];\n    }\n    return Item.absent();\n  }\n\n  tail(): Record {\n    const n = this._itemCount;\n    if (n > 0) {\n      return new Record.RecordMapView(this, 1, n);\n    } else {\n      return Record.empty();\n    }\n  }\n\n  body(): Value {\n    const n = this._itemCount;\n    if (n > 2) {\n      return new Record.RecordMapView(this, 1, n).branch();\n    } else if (n === 2) {\n      const item = this._array![1];\n      if (item instanceof Value) {\n        return item;\n      } else {\n        return Record.of(item);\n      }\n    }\n    return Value.absent();\n  }\n\n  has(key: AnyValue): boolean {\n    if (this._fieldCount !== 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return true;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return false;\n  }\n\n  indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    const array = this._array!;\n    const n = this._itemCount;\n    if (index < 0) {\n      index = Math.max(0, n + index);\n    }\n    while (index < n) {\n      if (item.equals(array[index])) {\n        return index;\n      }\n      index += 1;\n    }\n    return -1;\n  }\n\n  lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const array = this._array!;\n    const n = this._itemCount;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(index, n - 1);\n    while (index >= 0) {\n      if (item.equals(array[index])) {\n        return index;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  get(key: AnyValue): Value {\n    if (this._fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  getAttr(key: AnyText): Value {\n    if (this._fieldCount > 0) {\n      key = Value.Text.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field instanceof Item.Attr && field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  getSlot(key: AnyValue): Value {\n    if (this._fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field instanceof Item.Slot && field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  getField(key: AnyValue): Field | undefined {\n    if (this._fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return field;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return void 0;\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Item.Num) {\n      index = index.value;\n    }\n    const n = this._itemCount;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index >= 0 && index < n) {\n      return this._array![index];\n    } else {\n      return Item.absent();\n    }\n  }\n\n  set(key: AnyValue, newValue: Value): this {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      if (this._fieldCount > 0) {\n        this.setAliased(key, newValue);\n      } else {\n        this.pushAliased(new Item.Slot(key, newValue));\n      }\n    } else {\n      if (this._fieldCount > 0) {\n        if (this._table !== null) {\n          this.setMutable(key, newValue);\n        } else {\n          this.updateMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Item.Slot(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  private setAliased(key: Value, newValue: Value): void {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        newArray[i] = item.updatedValue(newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        this._array = newArray;\n        this._table = null;\n        this._flags &= ~Record.ALIASED;\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Item.Slot(key, newValue);\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = n + 1;\n    this._fieldCount += 1;\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private setMutable(key: Value, newValue: Value): void {\n    const table = this._table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field.isMutable()) {\n            field.setValue(newValue);\n            return;\n          } else {\n            this.updateMutable(key, newValue);\n            return;\n          }\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Item.Slot(key, newValue);\n    this.pushMutable(field);\n    RecordMap.put(table, field);\n  }\n\n  private updateMutable(key: Value, newValue: Value): void {\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        array[i] = item.updatedValue(newValue);\n        this._table = null;\n        return;\n      }\n    }\n    const field = new Item.Slot(key, newValue);\n    this.pushMutable(field);\n    RecordMap.put(this._table, field);\n  }\n\n  setAttr(key: AnyText, newValue: Value): this {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      if (this._fieldCount > 0) {\n        this.setAttrAliased(key, newValue);\n      } else {\n        this.pushAliased(new Item.Attr(key, newValue));\n      }\n    } else {\n      if (this._fieldCount > 0) {\n        if (this._table !== null) {\n          this.setAttrMutable(key, newValue);\n        } else {\n          this.updateAttrMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Item.Attr(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  private setAttrAliased(key: Text, newValue: Value): void {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        newArray[i] = new Item.Attr(key, newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        this._array = newArray;\n        this._table = null;\n        this._flags &= ~Record.ALIASED;\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Item.Attr(key, newValue);\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = n + 1;\n    this._fieldCount += 1;\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private setAttrMutable(key: Text, newValue: Value): void {\n    const table = this._table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field instanceof Item.Attr && field.isMutable()) {\n            field.setValue(newValue);\n          } else {\n            this.updateAttrMutable(key, newValue);\n          }\n          return;\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Item.Attr(key, newValue);\n    this.push(field);\n    RecordMap.put(table, field);\n  }\n\n  private updateAttrMutable(key: Text, newValue: Value): void {\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        array[i] = new Item.Attr(key, newValue);\n        this._table = null;\n        return;\n      }\n    }\n    const field = new Item.Attr(key, newValue);\n    this.push(field);\n    RecordMap.put(this._table, field);\n  }\n\n  setSlot(key: AnyValue, newValue: Value): this {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      if (this._fieldCount > 0) {\n        this.setSlotAliased(key, newValue);\n      } else {\n        this.pushAliased(new Item.Slot(key, newValue));\n      }\n    } else {\n      if (this._fieldCount > 0) {\n        if (this._table !== null) {\n          this.setSlotMutable(key, newValue);\n        } else {\n          this.updateSlotMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Item.Slot(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  private setSlotAliased(key: Value, newValue: Value): void {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        newArray[i] = new Item.Slot(key, newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        this._array = newArray;\n        this._table = null;\n        this._flags &= ~Record.ALIASED;\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Item.Slot(key, newValue);\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = n + 1;\n    this._fieldCount += 1;\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private setSlotMutable(key: Value, newValue: Value): void {\n    const table = this._table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field instanceof Item.Slot && field.isMutable()) {\n            field.setValue(newValue);\n          } else {\n            this.updateSlotMutable(key, newValue);\n          }\n          return;\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Item.Slot(key, newValue);\n    this.push(field);\n    RecordMap.put(table, field);\n  }\n\n  private updateSlotMutable(key: Value, newValue: Value): void {\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        array[i] = new Item.Slot(key, newValue);\n        this._table = null;\n        return;\n      }\n    }\n    const field = new Item.Slot(key, newValue);\n    this.push(field);\n    RecordMap.put(this._table, field);\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    newItem = Item.fromAny(newItem);\n    const n = this._itemCount;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index < 0 || index > n) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((this._flags & Record.ALIASED) !== 0) {\n      this.setItemAliased(index, newItem);\n    } else {\n      this.setItemMutable(index, newItem);\n    }\n    return this;\n  }\n\n  private setItemAliased(index: number, newItem: Item): void {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      newArray[i] = oldArray[i];\n    }\n    const oldItem = oldArray[index];\n    newArray[index] = newItem;\n    this._array = newArray;\n    this._table = null;\n    if (newItem instanceof Item.Field) {\n      if (!(oldItem instanceof Item.Field)) {\n        this._fieldCount += 1;\n      }\n    } else if (oldItem instanceof Item.Field) {\n      this._fieldCount -= 1;\n    }\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private setItemMutable(index: number, newItem: Item): void {\n    const array = this._array!;\n    const oldItem = array[index];\n    array[index] = newItem;\n    if (newItem instanceof Item.Field) {\n      this._table = null;\n      if (!(oldItem instanceof Item.Field)) {\n        this._fieldCount += 1;\n      }\n    } else if (oldItem instanceof Item.Field) {\n      this._table = null;\n      this._fieldCount -= 1;\n    }\n  }\n\n  updated(key: AnyValue, newValue: AnyValue): Record {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this._flags & Record.IMMUTABLE) === 0 ? this : this.branch();\n    if ((record._flags & Record.ALIASED) !== 0) {\n      if (record._fieldCount > 0) {\n        record.setAliased(key, newValue);\n      } else {\n        record.pushAliased(new Item.Slot(key, newValue));\n      }\n    } else {\n      if (record._fieldCount > 0) {\n        if (record._table !== null) {\n          record.setMutable(key, newValue);\n        } else {\n          record.updateMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Item.Slot(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  updatedAttr(key: AnyText, newValue: AnyValue): Record {\n    key = Value.Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this._flags & Record.IMMUTABLE) === 0 ? this : this.branch();\n    if ((record._flags & Record.ALIASED) !== 0) {\n      if (record._fieldCount > 0) {\n        record.setAttrAliased(key, newValue);\n      } else {\n        record.pushAliased(new Item.Attr(key, newValue));\n      }\n    } else {\n      if (record._fieldCount > 0) {\n        if (record._table !== null) {\n          record.setAttrMutable(key, newValue);\n        } else {\n          record.updateAttrMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Item.Attr(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  updatedSlot(key: AnyValue, newValue: AnyValue): Record {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this._flags & Record.IMMUTABLE) === 0 ? this : this.branch();\n    if ((record._flags & Record.ALIASED) !== 0) {\n      if (record._fieldCount > 0) {\n        record.setSlotAliased(key, newValue);\n      } else {\n        record.pushAliased(new Item.Slot(key, newValue));\n      }\n    } else {\n      if (record._fieldCount > 0) {\n        if (record._table !== null) {\n          record.setSlotMutable(key, newValue);\n        } else {\n          record.updateSlotMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Item.Slot(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  push(...newItems: AnyItem[]): number {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this._flags & Record.ALIASED) !== 0) {\n      this.pushAliased.apply(this, arguments);\n    } else {\n      this.pushMutable.apply(this, arguments);\n    }\n    return this._itemCount;\n  }\n\n  private pushAliased(...newItems: AnyItem[]): void {\n    const k = arguments.length;\n    let m = this._itemCount;\n    let n = this._fieldCount;\n    const oldArray = this._array;\n    const newArray = new Array(Record.expand(m + k));\n    if (oldArray !== null) {\n      for (let i = 0; i < m; i += 1) {\n        newArray[i] = oldArray[i];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(arguments[i]);\n      newArray[m] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n      }\n    }\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = m;\n    this._fieldCount = n;\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private pushMutable(...newItems: AnyItem[]): void {\n    const k = arguments.length;\n    let m = this._itemCount;\n    let n = this._fieldCount;\n    const oldArray = this._array;\n    let newArray;\n    if (oldArray === null || m + k > oldArray.length) {\n      newArray = new Array(Record.expand(m + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < m; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(arguments[i]);\n      newArray[m] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n        this._table = null;\n      }\n    }\n    this._array = newArray;\n    this._itemCount = m;\n    this._fieldCount = n;\n  }\n\n  splice(start: number, deleteCount: number = 0, ...newItems: AnyItem[]): Item[] {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const n = this._itemCount;\n    if (start < 0) {\n      start = n + start;\n    }\n    start = Math.min(Math.max(0, start), n);\n    deleteCount = Math.min(Math.max(0, deleteCount), n - start);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      return this.spliceAliased.apply(this, arguments);\n    } else {\n      return this.spliceMutable.apply(this, arguments);\n    }\n  }\n\n  /** @hidden */\n  spliceAliased(start: number, deleteCount: number, ...newItems: AnyItem[]): Item[] {\n    const k = newItems.length;\n    let m = this._itemCount;\n    let n = this._fieldCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(m - deleteCount + k));\n    for (let i = 0; i < start; i += 1) {\n      newArray[i] = oldArray[i];\n    }\n    const oldItems = [];\n    for (let i = start; i < start + deleteCount; i += 1) {\n      const oldItem = oldArray[i];\n      oldItems.push(oldItem);\n      m -= 1;\n      if (oldItem instanceof Item.Field) {\n        n -= 1;\n      }\n    }\n    for (let i = start; i < m; i += 1) {\n      newArray[i + k] = oldArray[i + deleteCount];\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + start] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n      }\n    }\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = m;\n    this._fieldCount = n;\n    this._flags &= ~Record.ALIASED;\n    return oldItems;\n  }\n\n  /** @hidden */\n  spliceMutable(start: number, deleteCount: number, ...newItems: AnyItem[]): Item[] {\n    const k = newItems.length;\n    let m = this._itemCount;\n    let n = this._fieldCount;\n    const oldArray = this._array!;\n    let newArray;\n    if (oldArray === null || m - deleteCount + k > oldArray.length) {\n      newArray = new Array(Record.expand(m - deleteCount + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < start; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    const oldItems = [];\n    for (let i = start; i < start + deleteCount; i += 1) {\n      const oldItem = oldArray[i];\n      oldItems.push(oldItem);\n      m -= 1;\n      if (oldItem instanceof Item.Field) {\n        n -= 1;\n      }\n    }\n    if (k > deleteCount) {\n      for (let i = m - 1; i >= start; i -= 1) {\n        newArray[i + k] = oldArray[i + deleteCount];\n      }\n    } else {\n      for (let i = start; i < m; i += 1) {\n        newArray[i + k] = oldArray[i + deleteCount];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + start] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n      }\n    }\n    this._array = newArray;\n    this._itemCount = m;\n    this._fieldCount = n;\n    return oldItems;\n  }\n\n  delete(key: AnyValue): Item {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      return this.deleteAliased(key);\n    } else {\n      return this.deleteMutable(key);\n    }\n  }\n\n  private deleteAliased(key: Value): Item {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          newArray[i] = oldArray[j];\n        }\n        this._array = newArray;\n        this._table = null;\n        this._itemCount = n - 1;\n        this._fieldCount -= 1;\n        this._flags &= ~Record.ALIASED;\n        return item;\n      }\n      newArray[i] = item;\n    }\n    return Item.absent();\n  }\n\n  private deleteMutable(key: Value): Item {\n    const n = this._itemCount;\n    const array = this._array!;\n    for (let i = 0; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          array[i] = array[j];\n        }\n        array[n - 1] = void 0 as any;\n        this._table = null;\n        this._itemCount = n - 1;\n        this._fieldCount -= 1;\n        return item;\n      }\n    }\n    return Item.absent();\n  }\n\n  clear(): void {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    this._array = null;\n    this._table = null;\n    this._itemCount = 0;\n    this._fieldCount = 0;\n    this._flags = 0;\n  }\n\n  isAliased(): boolean {\n    return (this._flags & Record.ALIASED) !== 0;\n  }\n\n  isMutable(): boolean {\n    return (this._flags & Record.IMMUTABLE) === 0;\n  }\n\n  alias(): void {\n    this._flags |= Record.ALIASED;\n  }\n\n  branch(): RecordMap {\n    if ((this._flags & (Record.ALIASED | Record.IMMUTABLE)) === 0) {\n      const array = this._array!;\n      for (let i = 0, n = this._itemCount; i < n; i += 1) {\n        array[i].alias();\n      }\n    }\n    this._flags |= Record.ALIASED;\n    return new RecordMap(this._array, this._table, this._itemCount, this._fieldCount, Record.ALIASED);\n  }\n\n  clone(): RecordMap {\n    const itemCount = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(itemCount);\n    for (let i = 0; i < itemCount; i += 1) {\n      newArray[i] = oldArray[i].clone();\n    }\n    return new RecordMap(newArray, null, itemCount, this._fieldCount, 0);\n  }\n\n  commit(): this {\n    if ((this._flags & Record.IMMUTABLE) === 0) {\n      this._flags |= Record.IMMUTABLE;\n      const array = this._array!;\n      for (let i = 0, n = this._itemCount; i < n; i += 1) {\n        array[i].commit();\n      }\n    }\n    return this;\n  }\n\n  hashTable(): Array<Field> | null {\n    const n = this._fieldCount;\n    let table = this._table;\n    if (n !== 0 && this._table === null) {\n      table = new Array(Record.expand(Math.max(n, n * 10 / 7)));\n      const array = this._array!;\n      for (let i = 0, m = this._itemCount; i < m; i += 1) {\n        const item = array[i];\n        if (item instanceof Item.Field) {\n          RecordMap.put(table, item);\n        }\n      }\n      this._table = table;\n    }\n    return table;\n  }\n\n  /** @hidden */\n  static put(table: Field[] | null, field: Field): void {\n    if (table !== null) {\n      const n = table.length;\n      const x = Math.abs(field.key.hashCode() % n);\n      let i = x;\n      do {\n        const item = table[i];\n        if (item !== void 0) {\n          if (field.key.equals(item.key)) {\n            table[i] = field;\n            return;\n          }\n        } else {\n          table[i] = field;\n          return;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n      throw new Error();\n    }\n  }\n\n  evaluate(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const array = this._array!;\n    const n = this._itemCount;\n    const scope = Record.create(n);\n    interpreter.pushScope(scope);\n    let changed = false;\n    for (let i = 0; i < n; i += 1) {\n      const oldItem = array[i];\n      const newItem = oldItem.evaluate(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  substitute(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const array = this._array!;\n    const n = this._itemCount;\n    const scope = Record.create(n);\n    interpreter.pushScope(scope);\n    let changed = false;\n    for (let i = 0; i < n; i += 1) {\n      const oldItem = array[i];\n      const newItem = oldItem.substitute(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  subRecord(lower?: number, upper?: number): Record {\n    const n = this._itemCount;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    if (lower < 0 || upper > n || lower > upper) {\n      throw new RangeError(lower + \", \" + upper);\n    }\n    return new Record.RecordMapView(this, lower, upper);\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const result = callback.call(thisArg, array[i], i);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return;\n  }\n\n  private static _empty?: RecordMap;\n\n  static empty(): RecordMap {\n    if (RecordMap._empty === void 0) {\n      RecordMap._empty = new RecordMap(null, null, 0, 0, Record.ALIASED | Record.IMMUTABLE);\n    }\n    return RecordMap._empty;\n  }\n\n  static create(initialCapacity?: number): RecordMap {\n    if (initialCapacity === void 0) {\n      return new RecordMap(null, null, 0, 0, Record.ALIASED);\n    } else {\n      return new RecordMap(new Array(initialCapacity), null, 0, 0, 0);\n    }\n  }\n\n  static of(...items: AnyItem[]): RecordMap {\n    const n = arguments.length;\n    if (n === 0) {\n      return new RecordMap(null, null, 0, 0, Record.ALIASED);\n    } else {\n      const array = new Array(n);\n      let itemCount = 0;\n      let fieldCount = 0;\n      for (let i = 0; i < n; i += 1) {\n        const item = Item.fromAny(arguments[i]);\n        array[i] = item;\n        itemCount += 1;\n        if (item instanceof Item.Field) {\n          fieldCount += 1;\n        }\n      }\n      return new RecordMap(array, null, itemCount, fieldCount, 0);\n    }\n  }\n}\nItem.RecordMap = RecordMap;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {RecordMap} from \"./RecordMap\";\nimport {AnyNum} from \"./Num\";\n\n/** @hidden */\nexport class RecordMapView extends Record {\n  /** @hidden */\n  readonly _record: RecordMap;\n  /** @hidden */\n  _lower: number;\n  /** @hidden */\n  _upper: number;\n\n  constructor(record: RecordMap, lower: number, upper: number) {\n    super();\n    this._record = record;\n    this._lower = lower;\n    this._upper = upper;\n  }\n\n  isEmpty(): boolean {\n    return this._lower === this._upper;\n  }\n\n  isArray(): boolean {\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (array[i] instanceof Item.Field) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isObject(): boolean {\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (array[i] instanceof Value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get length(): number {\n    return this._upper - this._lower;\n  }\n\n  fieldCount(): number {\n    const array = this._record._array!;\n    let k = 0;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (array[i] instanceof Item.Field) {\n        k += 1;\n      }\n    }\n    return k;\n  }\n\n  valueCount(): number {\n    let k = 0;\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (array[i] instanceof Value) {\n        k += 1;\n      }\n    }\n    return k;\n  }\n\n  isConstant(): boolean {\n    const array = this._record._array;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (!array![i].isConstant()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  tag(): string | undefined {\n    if (this.length > 0) {\n      const item = this._record._array![this._lower];\n      if (item instanceof Item.Attr) {\n        return item.key.value;\n      }\n    }\n    return void 0;\n  }\n\n  target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  head(): Item {\n    if (this.length > 0) {\n      return this._record._array![this._lower];\n    } else {\n      return Item.absent();\n    }\n  }\n\n  tail(): Record {\n    if (this.length > 0) {\n      return new RecordMapView(this._record, this._lower + 1, this._upper);\n    } else {\n      return Record.empty();\n    }\n  }\n\n  body(): Value {\n    const n = this.length;\n    if (n > 2) {\n      return new RecordMapView(this._record, this._lower + 1, this._upper).branch();\n    } else if (n === 2) {\n      const item = this._record._array![this._lower + 1];\n      if (item instanceof Value) {\n        return item;\n      } else {\n        return Record.of(item);\n      }\n    } else {\n      return Value.absent();\n    }\n  }\n\n  indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    const array = this._record._array!;\n    const n = this.length;\n    if (index < 0) {\n      index = Math.max(0, n + index);\n    }\n    index = this._lower + index;\n    while (index < this._upper) {\n      if (item.equals(array[index])) {\n        return index - this._lower;\n      }\n      index += 1;\n    }\n    return -1;\n  }\n\n  lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const array = this._record._array!;\n    const n = this.length;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = this._lower + Math.min(index, n - 1);\n    while (index >= this._lower) {\n      if (item.equals(array[index])) {\n        return index - this._lower;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Item.Num) {\n      index = index.value;\n    }\n    const n = this.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index >= 0 && index < n) {\n      return this._record._array![this._lower + index];\n    } else {\n      return Item.absent();\n    }\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    newItem = Item.fromAny(newItem);\n    const n = this.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index < 0 || index > n) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      this.setItemAliased(index, newItem);\n    } else {\n      this.setItemMutable(index, newItem);\n    }\n    return this;\n  }\n\n  private setItemAliased(index: number, newItem: Item): void {\n    const n = this._record._itemCount;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      newArray[i] = oldArray[i];\n    }\n    const oldItem = oldArray[this._lower + index];\n    newArray[this._lower + index] = newItem;\n    this._record._array = newArray;\n    this._record._table = null;\n    if (newItem instanceof Item.Field) {\n      if (!(oldItem instanceof Item.Field)) {\n        this._record._fieldCount += 1;\n      }\n    } else if (oldItem instanceof Item.Field) {\n      this._record._fieldCount -= 1;\n    }\n    this._record._flags &= ~Record.ALIASED;\n  }\n\n  private setItemMutable(index: number, newItem: Item): void {\n    const array = this._record._array!;\n    const oldItem = array[this._lower + index];\n    array[this._lower + index] = newItem;\n    if (newItem instanceof Item.Field) {\n      this._record._table = null;\n      if (!(oldItem instanceof Item.Field)) {\n        this._record._fieldCount += 1;\n      }\n    } else if (oldItem instanceof Item.Field) {\n      this._record._table = null;\n      this._record._fieldCount -= 1;\n    }\n  }\n\n  push(...newItems: AnyItem[]): number {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      this.pushAliased.apply(this, arguments);\n    } else {\n      this.pushMutable.apply(this, arguments);\n    }\n    return this.length;\n  }\n\n  private pushAliased(...newItems: AnyItem[]): void {\n    const k = newItems.length;\n    let m = this._record._itemCount;\n    let n = this._record._fieldCount;\n    const oldArray = this._record._array;\n    const newArray = new Array(Record.expand(m + k));\n    if (oldArray !== null) {\n      for (let i = 0; i < this._upper; i += 1) {\n        newArray[i] = oldArray[i];\n      }\n      for (let i = this._upper; i < m; i += 1) {\n        newArray[i + k] = oldArray[i];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + this._upper] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n      }\n    }\n    this._record._array = newArray;\n    this._record._table = null;\n    this._record._itemCount = m;\n    this._record._fieldCount = n;\n    this._record._flags &= ~Record.ALIASED;\n    this._upper += k;\n  }\n\n  private pushMutable(...newItems: AnyItem[]): void {\n    const k = newItems.length;\n    let m = this._record._itemCount;\n    let n = this._record._fieldCount;\n    const oldArray = this._record._array!;\n    let newArray;\n    if (oldArray === null || m + k > oldArray.length) {\n      newArray = new Array(Record.expand(m + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < this._upper; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    for (let i = m - 1; i >= this._upper; i -= 1) {\n      newArray[i + k] = oldArray[i];\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + this._upper] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n        this._record._table = null;\n      }\n    }\n    this._record._array = newArray;\n    this._record._itemCount = m;\n    this._record._fieldCount = n;\n    this._upper += k;\n  }\n\n  splice(start: number, deleteCount: number = 0, ...newItems: AnyItem[]): Item[] {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const n = this.length;\n    if (start < 0) {\n      start = n + start;\n    }\n    start = Math.min(Math.max(0, start), n);\n    deleteCount = Math.min(Math.max(0, deleteCount), n - start);\n    let deleted;\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      deleted = this._record.spliceAliased(this._lower + start, deleteCount, ...newItems);\n    } else {\n      deleted = this._record.spliceMutable(this._lower + start, deleteCount, ...newItems);\n    }\n    this._upper += newItems.length - deleted.length;\n    return deleted;\n  }\n\n  delete(key: AnyValue): Item {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      return this.deleteAliased(key);\n    } else {\n      return this.deleteMutable(key);\n    }\n  }\n\n  /** @hidden */\n  deleteAliased(key: Value): Item {\n    const n = this._record._itemCount;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = this._lower; i < this._upper; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          newArray[i] = oldArray[j];\n        }\n        this._record._array = newArray;\n        this._record._table = null;\n        this._record._itemCount = n - 1;\n        this._record._fieldCount -= 1;\n        this._record._flags &= ~Record.ALIASED;\n        this._upper -= 1;\n        return item;\n      }\n      newArray[i] = item;\n    }\n    return Item.absent();\n  }\n\n  /** @hidden */\n  deleteMutable(key: Value): Item {\n    const n = this._record._itemCount;\n    const array = this._record._array!;\n    for (let i = this._lower; i < this._upper; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          array[i] = array[j];\n        }\n        array[n - 1] = void 0 as any;\n        this._record._table = null;\n        this._record._itemCount -= 1;\n        this._record._fieldCount -= 1;\n        this._upper -= 1;\n        return item;\n      }\n    }\n    return Item.absent();\n  }\n\n  clear(): void {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      this.clearAliased();\n    } else {\n      this.clearMutable();\n    }\n  }\n\n  private clearAliased(): void {\n    const m = this._record._itemCount;\n    let n = this._record._fieldCount;\n    const l = m - this.length;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(l));\n    let i = 0;\n    while (i < this._lower) {\n      newArray[i] = oldArray[i];\n      i += 1;\n    }\n    while (i < this._upper) {\n      if (oldArray[i] instanceof Item.Field) {\n        n -= 1;\n      }\n      i += 1;\n    }\n    i = this._lower;\n    let j = this._upper;\n    while (j < m) {\n      newArray[i] = oldArray[j];\n      i += 1;\n      j += 1;\n    }\n    this._record._array = newArray;\n    this._record._table = null;\n    this._record._itemCount = l;\n    this._record._fieldCount = n;\n    this._record._flags &= ~Record.ALIASED;\n    this._upper = this._lower;\n  }\n\n  private clearMutable(): void {\n    const m = this._record._itemCount;\n    let n = this._record._fieldCount;\n    const array = this._record._array!;\n    let i = this._lower;\n    while (i < this._upper) {\n      if (array[i] instanceof Item.Field) {\n        n -= 1;\n      }\n      i += 1;\n    }\n    i = this._lower;\n    let j = this._upper;\n    while (j < m) {\n      const item = array[j];\n      if (item instanceof Item.Field) {\n        this._record._table = null;\n      }\n      array[i] = item;\n      i += 1;\n      j += 1;\n    }\n    this._record._itemCount = i;\n    this._record._fieldCount = n;\n    while (i < m) {\n      array[i] = void 0 as any;\n      i += 1;\n    }\n    this._upper = this._lower;\n  }\n\n  isAliased(): boolean {\n    return (this._record._flags & Record.ALIASED) !== 0;\n  }\n\n  isMutable(): boolean {\n    return (this._record._flags & Record.IMMUTABLE) === 0;\n  }\n\n  alias(): void {\n    this._record._flags |= Record.ALIASED;\n  }\n\n  branch(): RecordMap {\n    const m = this.length;\n    let n = 0;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(m));\n    let i = this._lower;\n    let j = 0;\n    while (j < m) {\n      const item = oldArray[i];\n      newArray[j] = item;\n      if (item instanceof Item.Field) {\n        n += 1;\n      }\n      i += 1;\n      j += 1;\n    }\n    return new RecordMap(newArray, null, m, n, 0);\n  }\n\n  clone(): RecordMap {\n    const m = this.length;\n    let n = 0;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(m));\n    let i = this._lower;\n    let j = 0;\n    while (j < m) {\n      const item = oldArray[i];\n      newArray[j] = item.clone();\n      if (item instanceof Item.Field) {\n        n += 1;\n      }\n      i += 1;\n      j += 1;\n    }\n    return new RecordMap(newArray, null, m, n, 0);\n  }\n\n  commit(): this {\n    this._record.commit();\n    return this;\n  }\n\n  subRecord(lower?: number, upper?: number): Record {\n    const n = this.length;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    if (lower < 0 || upper > n || lower > upper) {\n      throw new RangeError(lower + \", \" + upper);\n    }\n    return new RecordMapView(this._record, this._lower + lower, this._upper + upper);\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      const result = callback.call(thisArg, array[i], i);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return;\n  }\n}\nItem.RecordMapView = RecordMapView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings, Output} from \"@swim/codec\";\nimport {Data} from \"./Data\";\n\n/** @hidden */\nexport class DataOutput extends Output<Data> {\n  /** @hidden */\n  readonly _data: Data;\n  /** @hidden */\n  _settings: OutputSettings;\n\n  constructor(data: Data, settings: OutputSettings) {\n    super();\n    this._data = data;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return true;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<Data>;\n  isPart(isPart?: boolean): boolean | Output<Data> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(b: number | string): Output<Data> {\n    if (typeof b === \"number\") {\n      this._data.addByte(b);\n      return this;\n    } else {\n      throw new TypeError(\"\" + b);\n    }\n  }\n\n  writeln(string?: string): Output<Data> {\n    throw new TypeError(\"\" + string);\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<Data>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<Data> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  bind(): Data {\n    return this._data;\n  }\n\n  clone(): Output<Data> {\n    return new DataOutput(this._data.branch(), this._settings);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, Random} from \"@swim/util\";\nimport {Input, OutputSettings, Output, Writer, Unicode, Base16, Base64} from \"@swim/codec\";\nimport {Item} from \"./Item\";\nimport {Value} from \"./Value\";\nimport {DataOutput} from \"./DataOutput\";\n\nexport type AnyData = Data | Uint8Array;\n\nexport class Data extends Value {\n  /** @hidden */\n  _array: Uint8Array | null;\n  /** @hidden */\n  _size: number;\n  /** @hidden */\n  _flags: number;\n\n  constructor(array: Uint8Array | null, size: number, flags: number) {\n    super();\n    this._array = array;\n    this._size = size;\n    this._flags = flags;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  getByte(index: number): number {\n    if (index < 0 || index >= this.size) {\n      throw new RangeError(\"\" + index);\n    }\n    return this._array![index];\n  }\n\n  setByte(index: number, value: number): Data {\n    const flags = this._flags;\n    if ((flags & Data.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    } else if (index < 0 || index >= this._size) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((flags & Data.ALIASED) !== 0) {\n      return this.setByteAliased(index, value);\n    } else {\n      return this.setByteMutable(index, value);\n    }\n  }\n\n  private setByteAliased(index: number, value: number): Data {\n    const n = this.size;\n    const oldArray = this._array!;\n    const newArray = new Uint8Array(Data.expand(n));\n    newArray.set(oldArray, 0);\n    newArray[index] = value;\n    this._array = newArray;\n    this._flags &= ~Data.ALIASED;\n    return this;\n  }\n\n  private setByteMutable(index: number, value: number): Data {\n    this._array![index] = value;\n    return this;\n  }\n\n  public addByte(value: number): Data {\n    const flags = this._flags;\n    if ((flags & Data.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((flags & Data.ALIASED) !== 0) {\n      return this.addByteAliased(value);\n    } else {\n      return this.addByteMutable(value);\n    }\n  }\n\n  private addByteAliased(value: number): Data {\n    const n = this.size;\n    const oldArray = this._array;\n    const newArray = new Uint8Array(Data.expand(n + 1));\n    if (oldArray !== null) {\n      newArray.set(oldArray, 0);\n    }\n    newArray[n] = value;\n    this._array = newArray;\n    this._size = n + 1;\n    this._flags &= ~Data.ALIASED;\n    return this;\n  }\n\n  private addByteMutable(value: number): Data {\n    const n = this.size;\n    const oldArray = this._array;\n    let newArray;\n    if (oldArray === null || n + 1 > oldArray.length) {\n      newArray = new Uint8Array(Data.expand(n + 1));\n      if (oldArray !== null) {\n        newArray.set(oldArray, 0);\n      }\n      this._array = newArray;\n    } else {\n      newArray = oldArray;\n    }\n    newArray[n] = value;\n    this._size = n + 1;\n    return this;\n  }\n\n  addData(data: Data): Data {\n    let array = data._array;\n    if (array !== null) {\n      const size = data._size;\n      if (array.length > size) {\n        array = array.slice(0, size);\n      }\n      return this.addUint8Array(array);\n    } else {\n      return this;\n    }\n  }\n\n  addUint8Array(array: Uint8Array): Data {\n    const flags = this._flags;\n    if ((flags & Data.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((flags & Data.ALIASED) !== 0) {\n      return this.addUint8ArrayAliased(array);\n    } else {\n      return this.addUint8ArrayMutable(array);\n    }\n  }\n\n  private addUint8ArrayAliased(array: Uint8Array): Data {\n    const size = array.length;\n    if (size === 0) {\n      return this;\n    }\n    const n = this.size;\n    const oldArray = this._array;\n    const newArray = new Uint8Array(Data.expand(n + size));\n    if (oldArray !== null) {\n      newArray.set(oldArray, 0);\n    }\n    newArray.set(array, n);\n    this._array = newArray;\n    this._size = n + size;\n    this._flags &= ~Data.ALIASED;\n    return this;\n  }\n\n  private addUint8ArrayMutable(array: Uint8Array): Data {\n    const size = array.length;\n    if (size === 0) {\n      return this;\n    }\n    const n = this.size;\n    const oldArray = this._array;\n    let newArray;\n    if (oldArray === null || n + size > oldArray.length) {\n      newArray = new Uint8Array(Data.expand(n + size));\n      if (oldArray !== null) {\n        newArray.set(oldArray, 0);\n      }\n      this._array = newArray;\n    } else {\n      newArray = oldArray;\n    }\n    newArray.set(array, n);\n    this._size = n + size;\n    return this;\n  }\n\n  clear(): void {\n    if ((this._flags & Data.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    this._array = null;\n    this._size = 0;\n    this._flags = Data.ALIASED;\n  }\n\n  toUint8Array(): Uint8Array {\n    const oldArray = this._array;\n    const flags = this._flags;\n    if ((flags & Data.IMMUTABLE) !== 0) {\n      return oldArray !== null ? oldArray.slice(0) : new Uint8Array(0);\n    } else if ((flags & Data.ALIASED) !== 0 || this._size !== oldArray!.length) {\n      const newArray = oldArray !== null ? oldArray.slice(0) : new Uint8Array(0);\n      this._array = newArray;\n      this._flags &= ~Data.ALIASED;\n      return newArray;\n    } else {\n      return oldArray!;\n    }\n  }\n\n  asUint8Array(): Uint8Array | undefined {\n    let array: Uint8Array | undefined;\n    if (this._array !== null && this._size > 0) {\n      array = this._array;\n      if (array.length !== this._size) {\n        array = new Uint8Array(array.buffer, array.byteOffset, this._size);\n      }\n    } else {\n      array = void 0;\n    }\n    return array;\n  }\n\n  toAny(): AnyData {\n    return this.toUint8Array();\n  }\n\n  isAliased(): boolean {\n    return (this._flags & Data.ALIASED) !== 0;\n  }\n\n  isMutable(): boolean {\n    return (this._flags & Data.IMMUTABLE) === 0;\n  }\n\n  branch(): Data {\n    this._flags |= Data.ALIASED;\n    return new Data(this._array, this._size, Data.ALIASED);\n  }\n\n  clone(): Data {\n    return this.branch();\n  }\n\n  commit(): this {\n    this._flags |= Data.IMMUTABLE;\n    return this;\n  }\n\n  writeBase16(output: Output, base16: Base16 = Base16.uppercase()): Writer<unknown, unknown> {\n    let array = this._array;\n    const size = this._size;\n    if (array !== null && size !== 0) {\n      if (array.length !== size) {\n        array = array.slice(0, size);\n      }\n      return base16.writeUint8Array(array, output);\n    } else {\n      return Writer.done();\n    }\n  }\n\n  toBase16(base16: Base16 = Base16.uppercase()): string {\n    const output = Unicode.stringOutput();\n    this.writeBase16(output, base16);\n    return output.bind();\n  }\n\n  writeBase64(output: Output, base64: Base64 = Base64.standard()): Writer<unknown, unknown> {\n    let array = this._array;\n    const size = this._size;\n    if (array !== null && size !== 0) {\n      if (array.length !== size) {\n        array = array.slice(0, size);\n      }\n      return base64.writeUint8Array(array, output);\n    } else {\n      return Writer.done();\n    }\n  }\n\n  toBase64(base64: Base64 = Base64.standard()): string {\n    const output = Unicode.stringOutput();\n    this.writeBase64(output, base64);\n    return output.bind();\n  }\n\n  typeOrder(): number {\n    return 4;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Data) {\n      const xs = this._array!;\n      const ys = that._array!;\n      const xn = this._size;\n      const yn = that._size;\n      let order = 0;\n      let i = 0;\n      do {\n        if (i < xn && i < yn) {\n          order = xs[i] - ys[i];\n          i += 1;\n        } else {\n          break;\n        }\n      } while (order === 0);\n      if (order > 0) {\n        return 1;\n      } else if (order < 0) {\n        return -1;\n      } else if (xn > yn) {\n        return 1;\n      } else if (xn < yn) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Data) {\n      const xs = this._array!;\n      const ys = that._array!;\n      const xn = this._size;\n      if (xn !== that._size) {\n        return false;\n      }\n      for (let i = 0; i < xn; i += 1) {\n        if (xs[i] !== ys[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Data._hashSeed === void 0) {\n      Data._hashSeed = Murmur3.seed(Data);\n    }\n    return Murmur3.mash(Murmur3.mix(Data._hashSeed, this._array || new Uint8Array(0)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Data\").write(46/*'.'*/);\n    if (this._size === 0) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"base16\").write(40/*'('*/).write(34/*'\"'*/);\n      this.writeBase16(output);\n      output = output.write(34/*'\"'*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  /** @hidden */\n  static readonly ALIASED: number = 1 << 0;\n  /** @hidden */\n  static readonly IMMUTABLE: number = 1 << 1;\n\n  private static _hashSeed?: number;\n\n  private static _empty?: Data;\n\n  static output(): Output<Data>;\n  static output(initialCapacity: number): Output<Data>;\n  static output(data: Data): Output<Data>;\n  static output(data?: number | Data): Output<Data> {\n    if (!(data instanceof Data)) {\n      data = Data.create(data);\n    }\n    return new DataOutput(data, OutputSettings.standard());\n  }\n\n  static empty(): Data {\n    if (Data._empty === void 0) {\n      Data._empty = new Data(null, 0, Data.ALIASED | Data.IMMUTABLE);\n    }\n    return Data._empty;\n  }\n\n  static create(initialCapacity?: number): Data {\n    if (initialCapacity === void 0) {\n      return new Data(null, 0, Data.ALIASED);\n    } else {\n      return new Data(new Uint8Array(initialCapacity), 0, 0);\n    }\n  }\n\n  static wrap(value: Uint8Array): Data {\n    return new Data(value, value.length, Data.ALIASED);\n  }\n\n  static fromBase16(input: Input | string): Data {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    return Base16.parse(input, Data.output()).bind();\n  }\n\n  static fromBase64(input: Input | string, base64: Base64 = Base64.standard()): Data {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    return base64.parse(input, Data.output()).bind();\n  }\n\n  static fromAny(value: AnyData): Data {\n    if (value instanceof Data) {\n      return value;\n    } else if (value instanceof Uint8Array) {\n      return Data.wrap(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static random(size: number): Data {\n    const array = new Uint8Array(size);\n    Random.fillBytes(array);\n    return Data.wrap(array);\n  }\n\n  /** @hidden */\n  static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\nItem.Data = Data;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings, Output} from \"@swim/codec\";\nimport {Text} from \"./Text\";\n\n/** @hidden */\nexport class TextOutput extends Output<Text> {\n  /** @hidden */\n  _string: string;\n  /** @hidden */\n  _settings: OutputSettings;\n\n  constructor(string: string, settings: OutputSettings) {\n    super();\n    this._string = string;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return true;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<Text>;\n  isPart(isPart?: boolean): boolean | Output<Text> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(token: number | string): Output<Text> {\n    if (typeof token === \"number\") {\n      if ((token >= 0x0000 && token <= 0xd7ff)\n          || (token >= 0xe000 && token <= 0xffff)) { // U+0000..U+D7FF | U+E000..U+FFFF\n        token = String.fromCharCode(token);\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        const u = token - 0x10000;\n        token = String.fromCharCode(0xd800 | (u >>> 10), 0xdc00 | (u & 0x3ff));\n      } else { // invalid code point\n        token = \"\\ufffd\";\n      }\n    }\n    this._string += token;\n    return this;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<Text>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<Text> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  bind(): Text {\n    return Text.from(this._string);\n  }\n\n  clone(): Output<Text> {\n    return new TextOutput(this._string, this._settings);\n  }\n\n  toString(): string {\n    return this._string;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, HashGenCacheSet} from \"@swim/util\";\nimport {OutputSettings, Output, Format} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {TextOutput} from \"./TextOutput\";\n\nexport type AnyText = Text | string;\n\nexport class Text extends Value {\n  /** @hidden */\n  readonly _value: string;\n  /** @hidden */\n  _hashCode?: number;\n\n  private constructor(value: string) {\n    super();\n    this._value = value;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  get size(): number {\n    return this._value.length;\n  }\n\n  stringValue(): string;\n  stringValue<T>(orElse: T): string;\n  stringValue<T>(orElse?: T): string {\n    return this._value;\n  }\n\n  numberValue(): number | undefined;\n  numberValue<T>(orElse: T): number | T;\n  numberValue<T>(orElse?: T): number | T | undefined {\n    try {\n      return Item.Num.from(this._value).numberValue();\n    } catch (error) {\n      return orElse;\n    }\n  }\n\n  booleanValue(): boolean | undefined;\n  booleanValue<T>(orElse: T): boolean | T;\n  booleanValue<T>(orElse?: T): boolean | T | undefined {\n    if (this._value === \"true\") {\n      return true;\n    } else if (this._value === \"false\") {\n      return false;\n    } else {\n      return orElse;\n    }\n  }\n\n  toAny(): AnyText {\n    return this._value;\n  }\n\n  valueOf(): string {\n    return this._value;\n  }\n\n  plus(that: AnyValue): Value;\n  plus(that: AnyItem): Item;\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Text) {\n      return Text.from(this._value + that._value);\n    }\n    return super.plus(that);\n  }\n\n  branch(): Text {\n    return this;\n  }\n\n  clone(): Text {\n    return this;\n  }\n\n  commit(): this {\n    return this;\n  }\n\n  typeOrder(): number {\n    return 5;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Text) {\n      const order = this._value.localeCompare(that._value);\n      return order < 0 ? -1 : order > 0 ? 1 : 0;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Text) {\n      return this._value === that._value;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this._value);\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Text\").write(46/*'.'*/);\n    if (this._value.length === 0) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"from\").write(40/*'('*/).debug(this._value).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    Format.debug(this._value, output);\n  }\n\n  toString(): string {\n    return this._value;\n  }\n\n  private static _empty?: Text;\n\n  private static _cache?: HashGenCacheSet<Text>;\n\n  static output(settings: OutputSettings = OutputSettings.standard()): Output<Text> {\n    return new TextOutput(\"\", settings);\n  }\n\n  static empty(): Text {\n    if (Text._empty === void 0) {\n      Text._empty = new Text(\"\");\n    }\n    return Text._empty;\n  }\n\n  static from(value: string): Text {\n    const n = value.length;\n    if (n === 0) {\n      return Text.empty();\n    } else {\n      let text = new Text(value);\n      if (n <= 64) {\n        text = Text.cache().put(text);\n      }\n      return text;\n    }\n  }\n\n  static fromAny(value: AnyText): Text {\n    if (value instanceof Text) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return Text.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheSet<Text> {\n    if (Text._cache === void 0) {\n      const cacheSize = 128;\n      Text._cache = new HashGenCacheSet<Text>(cacheSize);\n    }\n    return Text._cache;\n  }\n}\nItem.Text = Text;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, HashGenCacheSet} from \"@swim/util\";\nimport {Output, Format} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\n\nexport type AnyNum = Num | number;\n\nexport class Num extends Value {\n  /** @hidden */\n  readonly _value: number;\n  /** @hidden */\n  readonly _flags: number;\n\n  private constructor(value: number, flags: number = 0) {\n    super();\n    this._value = value;\n    this._flags = flags;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  isNaN(): boolean {\n    return isNaN(this._value);\n  }\n\n  isInfinite(): boolean {\n    return !isNaN(this._value) && !isFinite(this._value);\n  }\n\n  isUint32(): boolean {\n    return (this._flags & Num.UINT32) !== 0;\n  }\n\n  isUint64(): boolean {\n    return (this._flags & Num.UINT64) !== 0;\n  }\n\n  stringValue(): string;\n  stringValue<T>(orElse: T): string;\n  stringValue<T>(orElse?: T): string {\n    return \"\" + this._value;\n  }\n\n  numberValue(): number;\n  numberValue<T>(orElse: T): number;\n  numberValue<T>(orElse?: T): number {\n    return this._value;\n  }\n\n  booleanValue(): boolean;\n  booleanValue<T>(orElse: T): boolean;\n  booleanValue<T>(orElse?: T): boolean {\n    return !!this._value;\n  }\n\n  toAny(): AnyNum {\n    return this._value;\n  }\n\n  valueOf(): number {\n    return this._value;\n  }\n\n  bitwiseOr(that: AnyValue): Value;\n  bitwiseOr(that: AnyItem): Item;\n  bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this._value | that._value) >>> 0);\n    }\n    return super.bitwiseOr(that);\n  }\n\n  bitwiseXor(that: AnyValue): Value;\n  bitwiseXor(that: AnyItem): Item;\n  bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this._value ^ that._value) >>> 0);\n    }\n    return super.bitwiseXor(that);\n  }\n\n  bitwiseAnd(that: AnyValue): Value;\n  bitwiseAnd(that: AnyItem): Item;\n  bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this._value & that._value) >>> 0);\n    }\n    return super.bitwiseAnd(that);\n  }\n\n  plus(that: AnyValue): Value;\n  plus(that: AnyItem): Item;\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value + that._value);\n    }\n    return super.plus(that);\n  }\n\n  minus(that: AnyValue): Value;\n  minus(that: AnyItem): Item;\n  minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value - that._value);\n    }\n    return super.minus(that);\n  }\n\n  times(that: AnyValue): Value;\n  times(that: AnyItem): Item;\n  times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value * that._value);\n    }\n    return super.times(that);\n  }\n\n  divide(that: AnyValue): Value;\n  divide(that: AnyItem): Item;\n  divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value / that._value);\n    }\n    return super.divide(that);\n  }\n\n  modulo(that: AnyValue): Value;\n  modulo(that: AnyItem): Item;\n  modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value % that._value);\n    }\n    return super.modulo(that);\n  }\n\n  bitwiseNot(): Value {\n    return Num.from(~this._value >>> 0);\n  }\n\n  negative(): Value {\n    return Num.from(-this._value);\n  }\n\n  positive(): Value {\n    return this;\n  }\n\n  inverse(): Value {\n    return Num.from(1 / this._value);\n  }\n\n  abs(): Num {\n    return Num.from(Math.abs(this._value));\n  }\n\n  ceil(): Num {\n    return Num.from(Math.ceil(this._value));\n  }\n\n  floor(): Num {\n    return Num.from(Math.floor(this._value));\n  }\n\n  round(): Num {\n    return Num.from(Math.round(this._value));\n  }\n\n  sqrt(): Num {\n    return Num.from(Math.sqrt(this._value));\n  }\n\n  pow(that: AnyNum): Num {\n    that = Num.fromAny(that);\n    return Num.from(Math.pow(this._value, that._value));\n  }\n\n  max(that: Num): Num;\n  max(that: Item): Item;\n  max(that: Item): Item {\n    return this.compareTo(that) >= 0 ? this : that;\n  }\n\n  min(that: Num): Num;\n  min(that: Item): Item;\n  min(that: Item): Item {\n    return this.compareTo(that) <= 0 ? this : that;\n  }\n\n  typeOrder(): number {\n    return 6;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Num) {\n      const x = this._value;\n      const y = that._value;\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Num) {\n      const x = this._value;\n      const y = that._value;\n      return x === y || isNaN(x) && isNaN(y);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.hash(this._value);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Num\").write(46/*'.'*/).write(\"from\")\n        .write(40/*'('*/).display(this).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    Format.displayNumber(this._value, output);\n  }\n\n  /** @hidden */\n  static readonly TYPE_MASK = 0x3;\n  /** @hidden */\n  static readonly UINT32: number = 1;\n  /** @hidden */\n  static readonly UINT64: number = 2;\n\n  private static _positiveZero?: Num;\n  private static _negativeZero?: Num;\n  private static _positiveOne?: Num;\n  private static _negativeOne?: Num;\n  private static _nan?: Num;\n\n  private static _cache?: HashGenCacheSet<Num>;\n\n  static positiveZero(): Num {\n    if (Num._positiveZero === void 0) {\n      Num._positiveZero = new Num(0);\n    }\n    return Num._positiveZero;\n  }\n\n  static negativeZero(): Num {\n    if (Num._negativeZero === void 0) {\n      Num._negativeZero = new Num(-0);\n    }\n    return Num._negativeZero;\n  }\n\n  static positiveOne(): Num {\n    if (Num._positiveOne === void 0) {\n      Num._positiveOne = new Num(1);\n    }\n    return Num._positiveOne;\n  }\n\n  static negativeOne(): Num {\n    if (Num._negativeOne === void 0) {\n      Num._negativeOne = new Num(-1);\n    }\n    return Num._negativeOne;\n  }\n\n  static nan(): Num {\n    if (Num._nan === void 0) {\n      Num._nan = new Num(NaN);\n    }\n    return Num._nan;\n  }\n\n  static uint32(value: number): Num {\n    return new Num(value, Num.UINT32);\n  }\n\n  static uint64(value: number): Num {\n    return new Num(value, Num.UINT64);\n  }\n\n  static from(value: number | string): Num {\n    if (typeof value === \"number\") {\n      if (value === 0) {\n        if (1 / value === -Infinity) {\n          return Num.negativeZero();\n        } else {\n          return Num.positiveZero();\n        }\n      } else if (value === 1) {\n        return Num.positiveOne();\n      } else if (value === -1) {\n        return Num.negativeOne();\n      } else if (isNaN(value)) {\n        return Num.nan();\n      } else {\n        return Num.cache().put(new Num(value));\n      }\n    } else if (typeof value === \"string\") {\n      if (value === \"NaN\") {\n        return Num.nan();\n      } else {\n        const num = +value;\n        if (isFinite(num)) {\n          return Num.from(num);\n        }\n      }\n      throw new Error(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromAny(value: AnyNum): Num {\n    if (value instanceof Num) {\n      return value;\n    } else if (typeof value === \"number\") {\n      return Num.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheSet<Num> {\n    if (Num._cache === void 0) {\n      const cacheSize = 16;\n      Num._cache = new HashGenCacheSet<Num>(cacheSize);\n    }\n    return Num._cache;\n  }\n}\nItem.Num = Num;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\n\nexport type AnyBool = Bool | boolean;\n\nexport class Bool extends Value {\n  /** @hidden */\n  readonly _value: boolean;\n  /** @hidden */\n  _hashCode?: number;\n\n  private constructor(value: boolean) {\n    super();\n    this._value = value;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get value(): boolean {\n    return this._value;\n  }\n\n  stringValue(): string;\n  stringValue<T>(orElse: T): string;\n  stringValue<T>(orElse?: T): string {\n    return this._value ? \"true\" : \"false\";\n  }\n\n  booleanValue(): boolean;\n  booleanValue<T>(orElse: T): boolean;\n  booleanValue<T>(orElse?: T): boolean {\n    return this._value;\n  }\n\n  toAny(): AnyBool {\n    return this._value;\n  }\n\n  valueOf(): boolean {\n    return this._value;\n  }\n\n  conditional(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    return this._value ? Item.fromAny(thenTerm) : Item.fromAny(elseTerm);\n  }\n\n  or(that: AnyValue): Value;\n  or(that: AnyItem): Item;\n  or(that: AnyItem): Item {\n    return this._value ? this : Item.fromAny(that);\n  }\n\n  and(that: AnyValue): Value;\n  and(that: AnyItem): Item;\n  and(that: AnyItem): Item {\n    return this._value ? Item.fromAny(that) : this;\n  }\n\n  not(): Value {\n    return Bool.from(!this._value);\n  }\n\n  typeOrder(): number {\n    return 7;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Bool) {\n      if (this._value && !that._value) {\n        return -1;\n      } else if (!this._value && that._value) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Bool) {\n      return this._value === that._value;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this._value ? \"true\" : \"false\");\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Bool\").write(46/*'.'*/).write(\"from\")\n        .write(40/*'('*/).write(this._value ? \"true\" : \"false\").write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    output = output.write(this._value ? \"true\" : \"false\");\n  }\n\n  private static readonly True: Bool = new Bool(true);\n\n  private static readonly False: Bool = new Bool(false);\n\n  static from(value: boolean): Bool {\n    return value ? Bool.True : Bool.False;\n  }\n\n  static fromAny(value: AnyBool): Bool {\n    if (value instanceof Bool) {\n      return value;\n    } else if (typeof value === \"boolean\") {\n      return Bool.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\nItem.Bool = Bool;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Operator} from \"./Operator\";\n\nexport abstract class Expression extends Value {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  conditional(thenTerm: Value, elseTerm: Value): Value;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    elseTerm = Item.fromAny(elseTerm);\n    return new Item.ConditionalOperator(this, thenTerm, elseTerm);\n  }\n\n  or(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.OrOperator(this, that);\n  }\n\n  and(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.AndOperator(this, that);\n  }\n\n  bitwiseOr(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.BitwiseOrOperator(this, that);\n  }\n\n  bitwiseXor(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.BitwiseXorOperator(this, that);\n  }\n\n  bitwiseAnd(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.BitwiseAndOperator(this, that);\n  }\n\n  lt(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.LtOperator(this, that);\n  }\n\n  le(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.LeOperator(this, that);\n  }\n\n  eq(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.EqOperator(this, that);\n  }\n\n  ne(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.NeOperator(this, that);\n  }\n\n  ge(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.GeOperator(this, that);\n  }\n\n  gt(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.GtOperator(this, that);\n  }\n\n  plus(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.PlusOperator(this, that);\n  }\n\n  minus(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.MinusOperator(this, that);\n  }\n\n  times(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.TimesOperator(this, that);\n  }\n\n  divide(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.DivideOperator(this, that);\n  }\n\n  modulo(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.ModuloOperator(this, that);\n  }\n\n  not(): Operator {\n    return new Item.NotOperator(this);\n  }\n\n  bitwiseNot(): Operator {\n    return new Item.BitwiseNotOperator(this);\n  }\n\n  negative(): Operator {\n    return new Item.NegativeOperator(this);\n  }\n\n  positive(): Operator {\n    return new Item.PositiveOperator(this);\n  }\n\n  inverse(): Operator {\n    return new Item.DivideOperator(Item.Num.positiveOne(), this);\n  }\n\n  toAny(): AnyValue {\n    return this;\n  }\n}\nItem.Expression = Expression;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"./Item\";\nimport {Expression} from \"./Expression\";\n\nexport abstract class Operator extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n}\nItem.Operator = Operator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {AnyText} from \"./Text\";\nimport {AnyNum} from \"./Num\";\nimport {Expression} from \"./Expression\";\nimport {IdentitySelector} from \"./selector/IdentitySelector\";\nimport {KeysSelector} from \"./selector/KeysSelector\";\nimport {ValuesSelector} from \"./selector/ValuesSelector\";\nimport {ChildrenSelector} from \"./selector/ChildrenSelector\";\nimport {DescendantsSelector} from \"./selector/DescendantsSelector\";\nimport {Operator} from \"./Operator\";\n\nexport abstract class Selector extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  isConstant(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the `Selector` that this `Selector` uses to match sub-selections.\n   */\n  abstract then(): Selector;\n\n  abstract forSelected<T, S = unknown>(interpreter: Interpreter,\n                                       callback: (this: S, interpreter: Interpreter) => T | undefined,\n                                       thisArg?: S): T | undefined;\n\n  abstract mapSelected<S = unknown>(interpreter: Interpreter,\n                                    transform: (this: S, interpreter: Interpreter) => Item,\n                                    thisArg?: S): Item;\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const selected = Item.Record.create();\n    this.forSelected(interpreter, function (interpreter: Interpreter): void {\n      const scope = interpreter.peekScope();\n      if (scope !== void 0) {\n        selected.push(scope);\n      }\n    }, this);\n    return selected.isEmpty() ? Item.absent() : selected.flattened();\n  }\n\n  abstract substitute(interpreter: AnyInterpreter): Item;\n\n  abstract andThen(then: Selector): Selector;\n\n  get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return this.andThen(new Item.GetSelector(key, Selector.identity()));\n  }\n\n  getAttr(key: AnyText): Selector {\n    key = Item.Text.fromAny(key);\n    return this.andThen(new Item.GetAttrSelector(key, Selector.identity()));\n  }\n\n  getItem(index: AnyNum): Selector {\n    index = Item.Num.fromAny(index);\n    return this.andThen(new Item.GetItemSelector(index, Selector.identity()));\n  }\n\n  keys(): Selector {\n    return this.andThen(Selector.keys());\n  }\n\n  values(): Selector {\n    return this.andThen(Selector.values());\n  }\n\n  children(): Selector {\n    return this.andThen(Selector.children());\n  }\n\n  descendants(): Selector {\n    return this.andThen(Selector.descendants());\n  }\n\n  filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return new Item.FilterSelector(this, Selector.identity());\n    } else {\n      predicate = Item.fromAny(predicate);\n      return this.andThen(predicate.filter());\n    }\n  }\n\n  invoke(args: Value): Operator {\n    return new Item.InvokeOperator(this, args);\n  }\n\n  precedence(): number {\n    return 11;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Selector\").write(46/*'.'*/).write(\"identity\").write(40/*'('*/).write(41/*')'*/);\n    this.debugThen(output);\n  }\n\n  abstract debugThen(output: Output): void;\n\n  abstract clone(): Selector;\n\n  /** @hidden */\n  static _identity: IdentitySelector; // defined by IdentitySelector\n  private static _keys?: KeysSelector;\n  private static _values?: ValuesSelector;\n  private static _children?: ChildrenSelector;\n  private static _descendants?: DescendantsSelector;\n\n  static identity(): Selector {\n    return Selector._identity;\n  }\n\n  static get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return new Item.GetSelector(key, Selector.identity());\n  }\n\n  static getAttr(key: AnyText): Selector {\n    key = Item.Text.fromAny(key);\n    return new Item.GetAttrSelector(key, Selector.identity());\n  }\n\n  static getItem(index: AnyNum): Selector {\n    index = Item.Num.fromAny(index);\n    return new Item.GetItemSelector(index, Selector.identity());\n  }\n\n  static keys(): Selector {\n    if (Selector._keys === void 0) {\n      Selector._keys = new Item.KeysSelector(Selector.identity());\n    }\n    return Selector._keys;\n  }\n\n  static values(): Selector {\n    if (Selector._values === void 0) {\n      Selector._values = new Item.ValuesSelector(Selector.identity());\n    }\n    return Selector._values;\n  }\n\n  static children(): Selector {\n    if (Selector._children === void 0) {\n      Selector._children = new Item.ChildrenSelector(Selector.identity());\n    }\n    return Selector._children;\n  }\n\n  static descendants(): Selector {\n    if (Selector._descendants === void 0) {\n      Selector._descendants = new Item.DescendantsSelector(Selector.identity());\n    }\n    return Selector._descendants;\n  }\n\n  static literal(item: AnyItem): Selector {\n    item = Item.fromAny(item);\n    if (!(item instanceof Selector)) {\n      item = new Item.LiteralSelector(item, Selector.identity());\n    }\n    return item as Selector;\n  }\n}\nItem.Selector = Selector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"./Item\";\nimport {Value} from \"./Value\";\nimport {Expression} from \"./Expression\";\nimport {InvokeOperator} from \"./operator/InvokeOperator\";\nimport {Interpreter} from \"./Interpreter\";\n\nexport abstract class Func extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  abstract invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item;\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    return void 0;\n  }\n\n  isConstant(): boolean {\n    return false;\n  }\n}\nItem.Func = Func;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"./Item\";\nimport {Value} from \"./Value\";\nimport {Record} from \"./Record\";\n\nexport type AnyExtant = Extant | null;\n\nexport class Extant extends Value {\n  /** @hidden */\n  private constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `true` because `Extant` is a defined value.\n   */\n  isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns `false` because `Extant` is not a distinct\n   * value.\n   */\n  isDistinct(): boolean {\n    return false;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns an empty `Record` because `Extant` is not a distinct value.\n   */\n  unflattened(): Record {\n    return Value.Record.empty();\n  }\n\n  not(): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns the empty `string` because `Extant` behaves like an empty\n   * `Record`, which converts to a `string` by concatenating the string values\n   * of all its members, if all its members convert to string values.\n   */\n  stringValue(): string;\n  /**\n   * Always returns the empty `string` because `Extant` behaves like an empty\n   * `Record`, which converts to a `string` by concatenating the string values\n   * of all its members, if all its members convert to string values.\n   */\n  stringValue<T>(orElse: T): string;\n  stringValue<T>(orElse?: T): string {\n    return \"\";\n  }\n\n  /**\n   * Always returns `true` because `Extant` behaves like a truthy value.\n   */\n  booleanValue(): boolean;\n  /**\n   * Always returns `true` because `Extant` behaves like a truthy value.\n   */\n  booleanValue<T>(orElse: T): boolean;\n  booleanValue<T>(orElse?: T): boolean {\n    return true;\n  }\n\n  toAny(): AnyExtant {\n    return null;\n  }\n\n  typeOrder(): number {\n    return 98;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  hashCode(): number {\n    if (Extant._hashSeed === void 0) {\n      Extant._hashSeed = Murmur3.seed(Extant);\n    }\n    return Extant._hashSeed;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Value\").write(46/*'.'*/).write(\"extant\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    output = output.write(\"null\");\n  }\n\n  private static readonly _extant: Extant = new Extant();\n\n  private static _hashSeed?: number;\n\n  static extant(): Extant {\n    return Extant._extant;\n  }\n\n  static fromAny(value: AnyExtant): Extant {\n    if (value instanceof Extant) {\n      return value;\n    } else if (value === null) {\n      return Extant.extant();\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\nItem.Extant = Extant;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, Cursor} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {AnyText} from \"./Text\";\n\nexport type AnyAbsent = Absent | undefined;\n\nexport class Absent extends Value {\n  /** @hidden */\n  private constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `false` because `Absent` represents an undefined value.\n   */\n  isDefined(): boolean {\n    return false;\n  }\n\n  /**\n   * Always returns `false` because `Absent` is not a distinct value.\n   */\n  isDistinct(): boolean {\n    return false;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns an empty `Record` because `Absent` is not a distinct value.\n   */\n  unflattened(): Record {\n    return Value.Record.empty();\n  }\n\n  updated(key: AnyValue, value: AnyValue): Record {\n    return Value.Record.of(Item.Slot.of(key, value));\n  }\n\n  updatedAttr(key: AnyText, value: AnyValue): Record {\n    return Value.Record.of(Item.Attr.of(key, value));\n  }\n\n  updatedSlot(key: AnyValue, value: AnyValue): Record {\n    return Value.Record.of(Item.Slot.of(key, value));\n  }\n\n  appended(...items: AnyItem[]): Record {\n    return Value.Record.of(items);\n  }\n\n  prepended(...items: AnyItem[]): Record {\n    return Value.Record.of(items);\n  }\n\n  concat(...items: AnyItem[]): Record {\n    const record = Value.Record.create();\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      Item.fromAny(arguments[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  cond(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  cond(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  cond(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    return Item.fromAny(elseTerm);\n  }\n\n  or(that: AnyValue): Value;\n  or(that: AnyItem): Item;\n  or(that: AnyItem): Item {\n    return Item.fromAny(that);\n  }\n\n  and(that: AnyValue): Value;\n  and(that: AnyItem): Item;\n  and(that: AnyItem): Item {\n    return this;\n  }\n\n  not(): Value {\n    return Value.extant();\n  }\n\n  /**\n   * Always returns `false` because `Absent` behaves like a falsey value.\n   */\n  booleanValue(): boolean;\n  /**\n   * Always returns `false` because `Absent` behaves like a falsey value.\n   */\n  booleanValue<T>(orElse: T): boolean;\n  booleanValue<T>(orElse?: T): boolean {\n    return false;\n  }\n\n  toAny(): AnyAbsent {\n    return void 0;\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    return void 0;\n  }\n\n  iterator(): Cursor<Item> {\n    return Cursor.empty();\n  }\n\n  typeOrder(): number {\n    return 99;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  hashCode(): number {\n    if (Absent._hashSeed === void 0) {\n      Absent._hashSeed = Murmur3.seed(Absent);\n    }\n    return Absent._hashSeed;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Value\").write(46/*'.'*/).write(\"absent\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    output = output.write(\"undefined\");\n  }\n\n  private static readonly _absent: Absent = new Absent();\n\n  private static _hashSeed?: number;\n\n  static absent(): Absent {\n    return Absent._absent;\n  }\n\n  static fromAny(value: AnyAbsent): Absent {\n    if (value instanceof Absent) {\n      return value;\n    } else if (value === void 0) {\n      return Absent.absent();\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\nItem.Absent = Absent;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class FormException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = FormException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {TagForm} from \"./form/TagForm\";\nimport {UnitForm} from \"./form/UnitForm\";\nimport {StringForm} from \"./form/StringForm\";\nimport {NumberForm} from \"./form/NumberForm\";\nimport {BooleanForm} from \"./form/BooleanForm\";\nimport {AnyForm} from \"./form/AnyForm\";\nimport {ItemForm} from \"./form/ItemForm\";\nimport {ValueForm} from \"./form/ValueForm\";\n\n/**\n * Transformation between a structurally typed [Item] and a nominally typed\n * JavaScript object.\n */\nexport abstract class Form<T extends U, U = T> {\n  /**\n   * Returns the key of the tag attribute that distinguishes structures of this\n   * `Form`; returns `undefined` if this `Form` has no distinguishing tag\n   * attribute.  Used to accelerate distrcrimination of polymorphic structural\n   * types with nominal type hints.\n   */\n  tag(): string | undefined;\n\n  /**\n   * Returns a version of this `Form` that requires a head [Attr] with the\n   * given `tag` name.\n   */\n  tag(tag: string | undefined): Form<T, U>;\n\n  tag(tag?: string | undefined): string | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return void 0;\n    } else if (tag !== void 0) {\n      return new Form.TagForm<T, U>(tag, this);\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Returns a default–possibly `undefined`–value of type `T`.  Used as the\n   * fallback return value when [Item.coerce coercing] an invalid structural\n   * value.\n   */\n  unit(): T | undefined;\n\n  /**\n   * Returns a version of this `Form` with the given `unit` value.\n   */\n  unit(unit: T | undefined): Form<T, U>;\n\n  unit(unit?: T | undefined): T | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return void 0;\n    } else if (unit !== void 0) {\n      return new Form.UnitForm<T, U>(unit, this);\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Converts a nominally typed JavaScript `object` into its structurally typed\n   * equivalent, optionally based on the provided prototype `item`.\n   */\n  abstract mold(object: U, item?: Item): Item;\n\n  /**\n   * Converts a structurally typed `item` into a nominally typed JavaScript\n   * object, optionally based on the provided prototype `object`.\n   */\n  abstract cast(item: Item, object?: T): T | undefined;\n\n  // Forward type declarations\n  /** @hidden */\n  static TagForm: typeof TagForm; // defined by TagForm\n  /** @hidden */\n  static UnitForm: typeof UnitForm; // defined by UnitForm\n  /** @hidden */\n  static StringForm: typeof StringForm; // defined by StringForm\n  /** @hidden */\n  static NumberForm: typeof NumberForm; // defined by NumberForm\n  /** @hidden */\n  static BooleanForm: typeof BooleanForm; // defined by BooleanForm\n  /** @hidden */\n  static AnyForm: typeof AnyForm; // defined by AnyForm\n  /** @hidden */\n  static ItemForm: typeof ItemForm; // defined by ItemForm\n  /** @hidden */\n  static ValueForm: typeof ValueForm; // defined by ValueForm\n\n  private static _stringForm?: Form<string>;\n  private static _numberForm?: Form<number>;\n  private static _booleanForm?: Form<boolean>;\n  private static _anyForm?: Form<AnyItem>;\n  private static _itemForm?: Form<Item, AnyItem>;\n  private static _valueForm?: Form<Value, AnyValue>;\n\n  static forString(): Form<string> {\n    if (Form._stringForm === void 0) {\n      Form._stringForm = new Form.StringForm(\"\");\n    }\n    return Form._stringForm;\n  }\n\n  static forNumber(): Form<number> {\n    if (Form._numberForm === void 0) {\n      Form._numberForm = new Form.NumberForm(0);\n    }\n    return Form._numberForm;\n  }\n\n  static forBoolean(): Form<boolean> {\n    if (Form._booleanForm === void 0) {\n      Form._booleanForm = new Form.BooleanForm(false);\n    }\n    return Form._booleanForm;\n  }\n\n  static forAny(): Form<AnyItem> {\n    if (Form._anyForm === void 0) {\n      Form._anyForm = new Form.AnyForm(void 0);\n    }\n    return Form._anyForm;\n  }\n\n  static forItem(): Form<Item, AnyItem> {\n    if (Form._itemForm === void 0) {\n      Form._itemForm = new Form.ItemForm(Item.absent());\n    }\n    return Form._itemForm;\n  }\n\n  static forValue(): Form<Value, AnyValue> {\n    if (Form._valueForm === void 0) {\n      Form._valueForm = new Form.ValueForm(Value.absent());\n    }\n    return Form._valueForm;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Operator} from \"../Operator\";\n\nexport abstract class BinaryOperator extends Operator {\n  /** @hidden */\n  readonly _operand1: Item;\n  /** @hidden */\n  readonly _operand2: Item;\n\n  constructor(operand1: Item, operand2: Item) {\n    super();\n    this._operand1 = operand1;\n    this._operand2 = operand2;\n  }\n\n  operand1(): Item {\n    return this._operand1;\n  }\n\n  abstract operator(): string;\n\n  operand2(): Item {\n    return this._operand2;\n  }\n\n  isConstant(): boolean {\n    return this._operand1.isConstant() && this._operand2.isConstant();\n  }\n}\nItem.BinaryOperator = BinaryOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Operator} from \"../Operator\";\n\nexport abstract class UnaryOperator extends Operator {\n  /** @hidden */\n  readonly _operand: Item;\n\n  constructor(operand: Item) {\n    super();\n    this._operand = operand;\n  }\n\n  operand(): Item {\n    return this._operand;\n  }\n\n  abstract operator(): string;\n\n  isConstant(): boolean {\n    return this._operand.isConstant();\n  }\n}\nItem.UnaryOperator = UnaryOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Operator} from \"../Operator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class ConditionalOperator extends Operator {\n  /** @hidden */\n  readonly _ifTerm: Item;\n  /** @hidden */\n  readonly _thenTerm: Item;\n  /** @hidden */\n  readonly _elseTerm: Item;\n\n  constructor(ifTerm: Item, thenTerm: Item, elseTerm: Item) {\n    super();\n    this._ifTerm = ifTerm.commit();\n    this._thenTerm = thenTerm.commit();\n    this._elseTerm = elseTerm.commit();\n  }\n\n  ifTerm(): Item {\n    return this._ifTerm;\n  }\n\n  thenTerm(): Item {\n    return this._thenTerm;\n  }\n\n  elseTerm(): Item {\n    return this._elseTerm;\n  }\n\n  isConstant(): boolean {\n    return this._ifTerm.isConstant() && this._thenTerm.isConstant()\n        && this._elseTerm.isConstant();\n  }\n\n  precedence(): number {\n    return 2;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result;\n    const ifTerm = this._ifTerm.evaluate(interpreter);\n    if (ifTerm.booleanValue(false)) {\n      const theTerm = this._thenTerm.evaluate(interpreter);\n      result = theTerm;\n    } else {\n      const elseTerm = this._elseTerm.evaluate(interpreter);\n      result = elseTerm;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const ifTerm = this._ifTerm.substitute(interpreter);\n    const thenTerm = this._thenTerm.substitute(interpreter);\n    const elseTerm = this._elseTerm.substitute(interpreter);\n    return new ConditionalOperator(ifTerm, thenTerm, elseTerm);\n  }\n\n  typeOrder() {\n    return 20;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof ConditionalOperator) {\n      let order = this._ifTerm.compareTo(that._ifTerm);\n      if (order === 0) {\n        order = this._thenTerm.compareTo(that._thenTerm);\n        if (order === 0) {\n          order = this._elseTerm.compareTo(that._elseTerm);\n        }\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ConditionalOperator) {\n      return this._ifTerm.equals(that._ifTerm) && this._thenTerm.equals(that._thenTerm)\n          && this._elseTerm.equals(that._elseTerm);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (ConditionalOperator._hashSeed === void 0) {\n      ConditionalOperator._hashSeed = Murmur3.seed(ConditionalOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(ConditionalOperator._hashSeed,\n        this._ifTerm.hashCode()), this._thenTerm.hashCode()), this._elseTerm.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._ifTerm).write(46/*'.'*/).write(\"conditional\").write(40/*'('*/)\n        .debug(this._thenTerm).write(44/*','*/).write(32/*' '*/)\n        .debug(this._elseTerm).write(41/*')'*/);\n  }\n\n  clone(): ConditionalOperator {\n    return new ConditionalOperator(this._ifTerm.clone(), this._thenTerm.clone(), this._elseTerm.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.ConditionalOperator = ConditionalOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class OrOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"||\";\n  }\n\n  precedence(): number {\n    return 3;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result: Item;\n    const argument1 = this._operand1.evaluate(interpreter);\n    if (argument1.booleanValue(false)) {\n      result = argument1;\n    } else {\n      const argument2 = this._operand2.evaluate(interpreter);\n      result = argument2;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.or(argument2);\n  }\n\n  typeOrder(): number {\n    return 21;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof OrOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof OrOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (OrOperator._hashSeed === void 0) {\n      OrOperator._hashSeed = Murmur3.seed(OrOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(OrOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"or\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): OrOperator {\n    return new OrOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.OrOperator = OrOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class AndOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"&&\";\n  }\n\n  precedence(): number {\n    return 4;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result: Item;\n    const argument1 = this._operand1.evaluate(interpreter);\n    if (argument1.booleanValue(false)) {\n      const argument2 = this._operand2.evaluate(interpreter);\n      result = argument2;\n    } else {\n      result = argument1;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.and(argument2);\n  }\n\n  typeOrder(): number {\n    return 22;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof AndOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof AndOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (AndOperator._hashSeed === void 0) {\n      AndOperator._hashSeed = Murmur3.seed(AndOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(AndOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"and\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): AndOperator {\n    return new AndOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.AndOperator = AndOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class BitwiseOrOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"|\";\n  }\n\n  precedence(): number {\n    return 5;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.bitwiseOr(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.bitwiseOr(argument2);\n  }\n\n  typeOrder(): number {\n    return 23;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BitwiseOrOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseOrOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BitwiseOrOperator._hashSeed === void 0) {\n      BitwiseOrOperator._hashSeed = Murmur3.seed(BitwiseOrOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(BitwiseOrOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"bitwiseOr\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): BitwiseOrOperator {\n    return new BitwiseOrOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.BitwiseOrOperator = BitwiseOrOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class BitwiseXorOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"^\";\n  }\n\n  precedence(): number {\n    return 6;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.bitwiseXor(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.bitwiseXor(argument2);\n  }\n\n  typeOrder(): number {\n    return 24;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BitwiseXorOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseXorOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BitwiseXorOperator._hashSeed === void 0) {\n      BitwiseXorOperator._hashSeed = Murmur3.seed(BitwiseXorOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(BitwiseXorOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"bitwiseXor\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): BitwiseXorOperator {\n    return new BitwiseXorOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.BitwiseXorOperator = BitwiseXorOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class BitwiseAndOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"&\";\n  }\n\n  precedence(): number {\n    return 7;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.bitwiseAnd(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.bitwiseAnd(argument2);\n  }\n\n  typeOrder(): number {\n    return 25;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BitwiseAndOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseAndOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BitwiseAndOperator._hashSeed === void 0) {\n      BitwiseAndOperator._hashSeed = Murmur3.seed(BitwiseAndOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(BitwiseAndOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"bitwiseAnd\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): BitwiseAndOperator {\n    return new BitwiseAndOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.BitwiseAndOperator = BitwiseAndOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class LtOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"<\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.lt(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.lt(argument2);\n  }\n\n  typeOrder(): number {\n    return 26;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof LtOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LtOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (LtOperator._hashSeed === void 0) {\n      LtOperator._hashSeed = Murmur3.seed(LtOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(LtOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"lt\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): LtOperator {\n    return new LtOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.LtOperator = LtOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class LeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"<=\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.le(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.le(argument2);\n  }\n\n  typeOrder(): number {\n    return 27;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof LeOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LeOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (LeOperator._hashSeed === void 0) {\n      LeOperator._hashSeed = Murmur3.seed(LeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(LeOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"le\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): LeOperator {\n    return new LeOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.LeOperator = LeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class EqOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"==\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.eq(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.eq(argument2);\n  }\n\n  typeOrder(): number {\n    return 28;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof EqOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EqOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (EqOperator._hashSeed === void 0) {\n      EqOperator._hashSeed = Murmur3.seed(EqOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(EqOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"eq\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): EqOperator {\n    return new EqOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.EqOperator = EqOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class NeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"!=\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.ne(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.ne(argument2);\n  }\n\n  typeOrder(): number {\n    return 29;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof NeOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NeOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (NeOperator._hashSeed === void 0) {\n      NeOperator._hashSeed = Murmur3.seed(NeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(NeOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"ne\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): NeOperator {\n    return new NeOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.NeOperator = NeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \">=\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.ge(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.ge(argument2);\n  }\n\n  typeOrder(): number {\n    return 30;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GeOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GeOperator._hashSeed === void 0) {\n      GeOperator._hashSeed = Murmur3.seed(GeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GeOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"ge\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): GeOperator {\n    return new GeOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GeOperator = GeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GtOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \">\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.gt(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.gt(argument2);\n  }\n\n  typeOrder(): number {\n    return 31;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GtOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GtOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GtOperator._hashSeed === void 0) {\n      GtOperator._hashSeed = Murmur3.seed(GtOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GtOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"gt\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): GtOperator {\n    return new GtOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GtOperator = GtOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class PlusOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"+\";\n  }\n\n  precedence(): number {\n    return 8;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.plus(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.plus(argument2);\n  }\n\n  typeOrder(): number {\n    return 32;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof PlusOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PlusOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (PlusOperator._hashSeed === void 0) {\n      PlusOperator._hashSeed = Murmur3.seed(PlusOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(PlusOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"plus\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): PlusOperator {\n    return new PlusOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.PlusOperator = PlusOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class MinusOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"-\";\n  }\n\n  precedence(): number {\n    return 8;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.minus(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.minus(argument2);\n  }\n\n  typeOrder(): number {\n    return 33;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof MinusOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MinusOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (MinusOperator._hashSeed === void 0) {\n      MinusOperator._hashSeed = Murmur3.seed(MinusOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(MinusOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"minus\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): MinusOperator {\n    return new MinusOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.MinusOperator = MinusOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class TimesOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"*\";\n  }\n\n  precedence(): number {\n    return 9;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.times(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.times(argument2);\n  }\n\n  typeOrder(): number {\n    return 34;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof TimesOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TimesOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (TimesOperator._hashSeed === void 0) {\n      TimesOperator._hashSeed = Murmur3.seed(TimesOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(TimesOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"times\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): TimesOperator {\n    return new TimesOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.TimesOperator = TimesOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class DivideOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"/\";\n  }\n\n  precedence(): number {\n    return 9;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.divide(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.divide(argument2);\n  }\n\n  typeOrder(): number {\n    return 35;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof DivideOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DivideOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (DivideOperator._hashSeed === void 0) {\n      DivideOperator._hashSeed = Murmur3.seed(DivideOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(DivideOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"divide\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): DivideOperator {\n    return new DivideOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.DivideOperator = DivideOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class ModuloOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"%\";\n  }\n\n  precedence(): number {\n    return 9;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.modulo(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.modulo(argument2);\n  }\n\n  typeOrder(): number {\n    return 36;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof ModuloOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ModuloOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (ModuloOperator._hashSeed === void 0) {\n      ModuloOperator._hashSeed = Murmur3.seed(ModuloOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(ModuloOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"modulo\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): ModuloOperator {\n    return new ModuloOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.ModuloOperator = ModuloOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class NotOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  operator(): string {\n    return \"!\";\n  }\n\n  precedence(): number {\n    return 10;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.evaluate(interpreter);\n    return argument.not();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.substitute(interpreter);\n    return argument.not();\n  }\n\n  typeOrder(): number {\n    return 37;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof NotOperator) {\n      return this._operand.compareTo(that._operand);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NotOperator) {\n      return this._operand.equals(that._operand);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (NotOperator._hashSeed === void 0) {\n      NotOperator._hashSeed = Murmur3.seed(NotOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(NotOperator._hashSeed, this._operand.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand).write(46/*'.'*/).write(\"not\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  clone(): NotOperator {\n    return new NotOperator(this._operand.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.NotOperator = NotOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class BitwiseNotOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  operator(): string {\n    return \"~\";\n  }\n\n  precedence(): number {\n    return 10;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.evaluate(interpreter);\n    return argument.bitwiseNot();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.substitute(interpreter);\n    return argument.bitwiseNot();\n  }\n\n  typeOrder(): number {\n    return 38;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BitwiseNotOperator) {\n      return this._operand.compareTo(that._operand);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseNotOperator) {\n      return this._operand.equals(that._operand);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BitwiseNotOperator._hashSeed === void 0) {\n      BitwiseNotOperator._hashSeed = Murmur3.seed(BitwiseNotOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(BitwiseNotOperator._hashSeed, this._operand.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand).write(46/*'.'*/).write(\"bitwiseNot\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  clone(): BitwiseNotOperator {\n    return new BitwiseNotOperator(this._operand.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.BitwiseNotOperator = BitwiseNotOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class NegativeOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  operator(): string {\n    return \"-\";\n  }\n\n  precedence(): number {\n    return 10;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.evaluate(interpreter);\n    return argument.negative();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.substitute(interpreter);\n    return argument.negative();\n  }\n\n  typeOrder(): number {\n    return 39;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof NegativeOperator) {\n      return this._operand.compareTo(that._operand);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NegativeOperator) {\n      return this._operand.equals(that._operand);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (NegativeOperator._hashSeed === void 0) {\n      NegativeOperator._hashSeed = Murmur3.seed(NegativeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(NegativeOperator._hashSeed, this._operand.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand).write(46/*'.'*/).write(\"negative\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  clone(): NegativeOperator {\n    return new NegativeOperator(this._operand.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.NegativeOperator = NegativeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class PositiveOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  operator(): string {\n    return \"+\";\n  }\n\n  precedence(): number {\n    return 10;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.evaluate(interpreter);\n    return argument.positive();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.substitute(interpreter);\n    return argument.positive();\n  }\n\n  typeOrder(): number {\n    return 40;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof PositiveOperator) {\n      return this._operand.compareTo(that._operand);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PositiveOperator) {\n      return this._operand.equals(that._operand);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (PositiveOperator._hashSeed === void 0) {\n      PositiveOperator._hashSeed = Murmur3.seed(PositiveOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(PositiveOperator._hashSeed, this._operand.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand).write(46/*'.'*/).write(\"positive\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  clone(): PositiveOperator {\n    return new PositiveOperator(this._operand.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.PositiveOperator = PositiveOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {Operator} from \"../Operator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class InvokeOperator extends Operator {\n  /** @hidden */\n  readonly _func: Value;\n  /** @hidden */\n  readonly _args: Value;\n  /** @hidden */\n  _state?: unknown;\n\n  constructor(func: Value, args: Value) {\n    super();\n    this._func = func;\n    this._args = args.commit();\n  }\n\n  func(): Value {\n    return this._func;\n  }\n\n  args(): Value {\n    return this._args;\n  }\n\n  state(): unknown {\n    return this._state;\n  }\n\n  setState(state: unknown) {\n    this._state = state;\n  }\n\n  isConstant(): boolean {\n    return this._func.isConstant() && this._args.isConstant();\n  }\n\n  precedence(): number {\n    return 11;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const func = this._func.evaluate(interpreter);\n    if (func instanceof Item.Func) {\n      return func.invoke(this._args, interpreter, this);\n    }\n    return Item.absent();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const func = this._func.evaluate(interpreter);\n    if (func instanceof Item.Func) {\n      const result = func.expand(this._args, interpreter, this);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    const args = this._args.substitute(interpreter).toValue();\n    return new InvokeOperator(this._func, args);\n  }\n\n  typeOrder(): number {\n    return 41;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof InvokeOperator) {\n      let order = this._func.compareTo(that._func);\n      if (order === 0) {\n        order = this._args.compareTo(that._args);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InvokeOperator) {\n      return this._func.equals(that._func) && this._args.equals(that._args);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (InvokeOperator._hashSeed === void 0) {\n      InvokeOperator._hashSeed = Murmur3.seed(InvokeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(InvokeOperator._hashSeed,\n        this._func.hashCode()), this._args.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._func).write(46/*'.'*/).write(\"invoke\").write(40/*'('*/)\n        .debug(this._args).write(41/*')'*/);\n  }\n\n  clone(): InvokeOperator {\n    return new InvokeOperator(this._func.clone(), this._args.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.InvokeOperator = InvokeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"../Item\";\nimport {AnyValue, Value} from \"../Value\";\nimport {AnyText} from \"../Text\";\nimport {AnyNum} from \"../Num\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class IdentitySelector extends Selector {\n  then(): Selector {\n    return this;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const oldScope = interpreter.popScope();\n      // Evaluate the current selection.\n      const newScope = oldScope.evaluate(interpreter);\n      // Push the evaluated selection onto the scope stack.\n      interpreter.pushScope(newScope);\n      // Visit the evaluated selection.\n      selected = callback.call(thisArg, interpreter);\n      // Restore the original selection to the top of the scope stack.\n      interpreter.swapScope(oldScope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    return transform.call(thisArg, interpreter);\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    return interpreter.peekScope().substitute(interpreter);\n  }\n\n  get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return new Item.GetSelector(key, this);\n  }\n\n  getAttr(key: AnyText): Selector {\n    key = Item.Text.fromAny(key);\n    return new Item.GetAttrSelector(key, this);\n  }\n\n  getItem(index: AnyNum): Selector {\n    index = Item.Num.fromAny(index);\n    return new Item.GetItemSelector(index, this);\n  }\n\n  andThen(then: Selector): Selector {\n    return then;\n  }\n\n  keys(): Selector {\n    return Selector.keys();\n  }\n\n  values(): Selector {\n    return Selector.values();\n  }\n\n  children(): Selector {\n    return Selector.children();\n  }\n\n  descendants(): Selector {\n    return Selector.descendants();\n  }\n\n  filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return new Item.FilterSelector(this, this);\n    } else {\n      predicate = Item.fromAny(predicate);\n      return predicate.filter();\n    }\n  }\n\n  typeOrder(): number {\n    return 10;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  hashCode(): number {\n    if (IdentitySelector._hashSeed === void 0) {\n      IdentitySelector._hashSeed = Murmur3.seed(IdentitySelector);\n    }\n    return IdentitySelector._hashSeed;\n  }\n\n  debugThen(output: Output): void {\n    // nop\n  }\n\n  clone(): Selector {\n    return this;\n  }\n\n  private static _hashSeed?: number;\n}\nItem.IdentitySelector = IdentitySelector;\nSelector._identity = new IdentitySelector();\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Value} from \"../Value\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GetSelector extends Selector {\n  /** @hidden */\n  readonly _key: Value;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(key: Value, then: Selector) {\n    super();\n    this._key = key.commit();\n    this._then = then;\n  }\n\n  accessor(): Value {\n    return this._key;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    interpreter.willSelect(this);\n    // Evaluate the key, in case it's dynamic.\n    const key = this._key.evaluate(interpreter).toValue();\n    const selected = GetSelector.forSelected(key, this._then, interpreter, callback, thisArg);\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  private static forSelected<T, S>(key: Value, then: Selector, interpreter: Interpreter,\n                                   callback: (this: S, interpreter: Interpreter) => T,\n                                   thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        field = scope.getField(key);\n        if (field !== void 0) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(field.toValue());\n          // Subselect the field value.\n          selected = then.forSelected(interpreter, callback, thisArg);\n          // Pop the field value off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetSelector.forSelected(key, then, interpreter, callback, thisArg);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    // Evaluate the key, if it's dynamic.\n    const key = this._key.evaluate(interpreter).toValue();\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        const oldField = scope.getField(key);\n        if (oldField !== void 0) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(oldField.toValue());\n          // Transform the field value.\n          const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n          // Pop the field value off the scope stack.\n          interpreter.popScope();\n          if (newItem instanceof Item.Field) {\n            // Replace the original field with the transformed field.\n            if (key.equals(newItem.key)) {\n              scope.set(key, newItem.toValue());\n            } else {\n              scope.delete(key);\n              scope.push(newItem);\n            }\n          } else if (newItem.isDefined()) {\n            // Update the field with the transformed value.\n            scope.set(key, newItem.toValue());\n          } else {\n            // Remove the field.\n            scope.delete(key);\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    // Evaluate the key, in case it's dynamic.\n    const key = this._key.evaluate(interpreter).toValue();\n    const value = GetSelector.substitute(key, this._then, interpreter);\n    if (value !== void 0) {\n      return value;\n    }\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new GetSelector(this._key, then as Selector);\n  }\n\n  private static substitute(key: Value, then: Selector, interpreter: Interpreter): Item | undefined {\n    let selected: Item | undefined;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        field = scope.getField(key);\n        if (field !== void 0) {\n          // Substitute the field value.\n          selected = field.toValue().substitute(interpreter);\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetSelector.substitute(key, then, interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  andThen(then: Selector): Selector {\n    return new GetSelector(this._key, this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 12;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GetSelector) {\n      let order = this._key.compareTo(that._key);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetSelector) {\n      return this._key.equals(that._key) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GetSelector._hashSeed === void 0) {\n      GetSelector._hashSeed = Murmur3.seed(GetSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GetSelector._hashSeed,\n        this._key.hashCode()), this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"get\").write(40/*'('*/).debug(this._key).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new GetSelector(this._key.clone(), this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GetSelector = GetSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Attr} from \"../Attr\";\nimport {Text} from \"../Text\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GetAttrSelector extends Selector {\n  /** @hidden */\n  readonly _key: Text;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(key: Text, then: Selector) {\n    super();\n    this._key = key;\n    this._then = then;\n  }\n\n  accessor(): Text {\n    return this._key;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    interpreter.willSelect(this);\n    const key = this._key;\n    const selected = GetAttrSelector.forSelected(key, this._then, interpreter, callback);\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  private static forSelected<T, S>(key: Text, then: Selector, interpreter: Interpreter,\n                                   callback: (this: S, interpreter: Interpreter) => T | undefined,\n                                   thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        field = scope.getField(key);\n        if (field instanceof Attr) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(field.toValue());\n          // Subselect the field value.\n          selected = then.forSelected(interpreter, callback, thisArg);\n          // Pop the field value off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetAttrSelector.forSelected(key, then, interpreter, callback, thisArg);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    const key = this._key;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        const oldField = scope.getField(key);\n        if (oldField instanceof Item.Attr) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(oldField.toValue());\n          // Transform the field value.\n          const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n          // Pop the field value off the scope stack.\n          interpreter.popScope();\n          if (newItem instanceof Item.Field) {\n            // Replace the original field with the transformed field.\n            if (key.equals(newItem.key)) {\n              scope.setAttr(key, newItem.toValue());\n            } else {\n              scope.delete(key);\n              scope.push(newItem);\n            }\n          } else if (newItem.isDefined()) {\n            // Update the field with the transformed value.\n            scope.setAttr(key, newItem.toValue());\n          } else {\n            // Remove the field.\n            scope.delete(key);\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key;\n    const value = GetAttrSelector.substitute(key, this._then, interpreter);\n    if (value !== void 0) {\n      return value;\n    }\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new GetAttrSelector(this._key, then as Selector);\n  }\n\n  private static substitute(key: Text, then: Selector, interpreter: Interpreter): Item | undefined {\n    let selected: Item | undefined;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        field = scope.getField(key);\n        if (field instanceof Item.Attr) {\n          // Substitute the field value.\n          selected = field.toValue().substitute(interpreter);\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetAttrSelector.substitute(key, then, interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  andThen(then: Selector): Selector {\n    return new GetAttrSelector(this._key, this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 13;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GetAttrSelector) {\n      let order = this._key.compareTo(that._key);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetAttrSelector) {\n      return this._key.equals(that._key) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GetAttrSelector._hashSeed === void 0) {\n      GetAttrSelector._hashSeed = Murmur3.seed(GetAttrSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GetAttrSelector._hashSeed,\n        this._key.hashCode()), this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"getAttr\").write(40/*'('*/).debug(this._key).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new GetAttrSelector(this._key.clone(), this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GetAttrSelector = GetAttrSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Num} from \"../Num\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GetItemSelector extends Selector {\n  /** @hidden */\n  readonly _index: Num;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(index: Num, then: Selector) {\n    super();\n    this._index = index;\n    this._then = then;\n  }\n\n  accessor(): Num {\n    return this._index;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    const index = this._index.numberValue();\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      if (scope instanceof Item.Record && index < scope.length) {\n        const item = scope.getItem(index);\n        // Push the item onto the scope stack.\n        interpreter.pushScope(item);\n        // Subselect the item.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n        // Pop the item off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      const index = this._index.numberValue();\n      if (scope instanceof Item.Record && index < scope.length) {\n        const oldItem = scope.getItem(index);\n        // Push the item onto the scope stack.\n        interpreter.pushScope(oldItem);\n        // Transform the item.\n        const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n        // Pop the item off the scope stack.\n        interpreter.popScope();\n        if (newItem.isDefined()) {\n          scope.setItem(index, newItem);\n        } else {\n          scope.splice(index, 1);\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const index = this._index.numberValue();\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let selected: Item | undefined;\n      if (scope instanceof Item.Record && index < scope.length) {\n        const item = scope.getItem(index);\n        // Substitute the item.\n        selected = item.substitute(interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n      if (selected !== void 0) {\n        return selected;\n      }\n    }\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new GetItemSelector(this._index, then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new GetItemSelector(this._index, this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 14;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GetItemSelector) {\n      let order = this._index.compareTo(that._index);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetItemSelector) {\n      return this._index.equals(that._index) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GetItemSelector._hashSeed === void 0) {\n      GetItemSelector._hashSeed = Murmur3.seed(GetItemSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GetItemSelector._hashSeed,\n        this._index.hashCode()), this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"getItem\").write(40/*'('*/).debug(this._index).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new GetItemSelector(this._index, this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GetItemSelector = GetItemSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class KeysSelector extends Selector {\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(then: Selector) {\n    super();\n    this._then = then;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope();\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Only fields can have keys.\n          if (child instanceof Item.Field) {\n            // Push the child key onto the scope stack.\n            interpreter.pushScope(child.key);\n            // Subselect the child key.\n            selected = this._then.forSelected(interpreter, callback, thisArg);\n            // Pop the child key off of the scope stack.\n            interpreter.popScope();\n          }\n        }\n      } else if (scope instanceof Item.Field) {\n        // Push the key onto the scope stack.\n        interpreter.pushScope(scope.key);\n        // Subselect the key.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n        // Pop the key off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      let scope = interpreter.popScope();\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        while (children.hasNext()) {\n          const child = children.next().value!;\n          if (child instanceof Item.Field) {\n            const oldKey = child.key;\n            // Push the key onto the scope stack.\n            interpreter.pushScope(oldKey);\n            // Subselect the key.\n            const newKey = this._then.mapSelected(interpreter, transform, thisArg).toValue();\n            // Pop the key off of the scope stack.\n            interpreter.popScope();\n            if (newKey.isDefined()) {\n              if (oldKey !== newKey) {\n                if (scope instanceof Item.Attr && newKey instanceof Item.Text) {\n                  children.set(Item.Attr.of(newKey, scope.toValue()));\n                } else {\n                  children.set(Item.Slot.of(newKey, scope.toValue()));\n                }\n              }\n            } else {\n              children.delete();\n            }\n          }\n        }\n      } else if (scope instanceof Item.Field) {\n        const oldKey = scope.key;\n        // Push the key onto the scope stack.\n        interpreter.pushScope(oldKey);\n        // Subselect the key.\n        const newKey = this._then.mapSelected(interpreter, transform, thisArg).toValue();\n        // Pop the key off of the scope stack.\n        interpreter.popScope();\n        if (newKey.isDefined()) {\n          if (oldKey !== newKey) {\n            if (scope instanceof Item.Attr && newKey instanceof Item.Text) {\n              scope = Item.Attr.of(newKey, scope.toValue());\n            } else {\n              scope = Item.Slot.of(newKey, scope.toValue());\n            }\n          }\n        } else {\n          scope = Item.absent();\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new KeysSelector(then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new KeysSelector(this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 15;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof KeysSelector) {\n      return this._then.compareTo(that._then);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof KeysSelector) {\n      return this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (KeysSelector._hashSeed === void 0) {\n      KeysSelector._hashSeed = Murmur3.seed(KeysSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(KeysSelector._hashSeed, this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"keys\").write(40/*'('*/).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new KeysSelector(this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.KeysSelector = KeysSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class ValuesSelector extends Selector {\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(then: Selector) {\n    super();\n    this._then = then;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope();\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child value onto the scope stack.\n          interpreter.pushScope(child.toValue());\n          // Subselect the child value.\n          selected = this._then.forSelected(interpreter, callback, thisArg);\n          // Pop the child value off of the scope stack.\n          interpreter.popScope();\n        }\n      } else {\n        // Push the value onto the scope stack.\n        interpreter.pushScope(scope.toValue());\n        // Subselect the value.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n        // Pop the value off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      let scope = interpreter.popScope();\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        while (children.hasNext()) {\n          const child = children.next().value!;\n          if (child instanceof Item.Field) {\n            const oldValue = child.toValue();\n            // Push the child value onto the scope stack.\n            interpreter.pushScope(oldValue);\n            // Transform the child value.\n            const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n            // Pop the child value off of the scope stack.\n            interpreter.popScope();\n            if (newItem.isDefined()) {\n              if (newItem instanceof Item.Field) {\n                children.set(newItem);\n              } else if (newItem !== oldValue) {\n                children.set(child.updatedValue(newItem.toValue()));\n              }\n            } else {\n              children.delete();\n            }\n          } else {\n            // Push the child onto the scope stack.\n            interpreter.pushScope(child.toValue());\n            // Transform the child.\n            const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n            // Pop the child off of the scope stack.\n            interpreter.popScope();\n            if (newItem.isDefined()) {\n              if (child !== newItem) {\n                children.set(newItem);\n              }\n            } else {\n              children.delete();\n            }\n          }\n        }\n      } else if (scope instanceof Item.Field) {\n        const oldValue = scope.toValue();\n        // Push the field value onto the scope stack.\n        interpreter.pushScope(oldValue);\n        // Transform the field value.\n        const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n        // Pop the field value off of the scope stack.\n        interpreter.popScope();\n        if (newItem.isDefined()) {\n          if (newItem instanceof Item.Field) {\n            scope = newItem;\n          } else if (newItem !== oldValue) {\n            scope = scope.updatedValue(newItem.toValue());\n          }\n        } else {\n          scope = Item.absent();\n        }\n      } else {\n        // Push the value onto the scope stack.\n        interpreter.pushScope(scope);\n        // Transform the value.\n        scope = this._then.mapSelected(interpreter, transform, thisArg);\n        // Pop the value off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new ValuesSelector(then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new ValuesSelector(this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 16;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof ValuesSelector) {\n      return this._then.compareTo(that._then);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ValuesSelector) {\n      return this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (ValuesSelector._hashSeed === void 0) {\n      ValuesSelector._hashSeed = Murmur3.seed(ValuesSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(ValuesSelector._hashSeed, this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"values\").write(40/*'('*/).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new ValuesSelector(this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.ValuesSelector = ValuesSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class ChildrenSelector extends Selector {\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(then: Selector) {\n    super();\n    this._then = then;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have children.\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(child);\n          // Subselect the child.\n          selected = this._then.forSelected(interpreter, callback, thisArg);\n          // Pop the child off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have children.\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child:\n        while (children.hasNext()) {\n          const oldChild = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(oldChild);\n          // Transform the child.\n          const newChild = this._then.mapSelected(interpreter, transform);\n          // Pop the child off the scope stack.\n          interpreter.popScope();\n          if (newChild.isDefined()) {\n            // Update the child, if its identity changed.\n            if (newChild !== oldChild) {\n              children.set(newChild);\n            }\n          } else {\n            // Remove the child, if it transformed to Absent.\n            children.delete();\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new ChildrenSelector(then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new ChildrenSelector(this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 17;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof ChildrenSelector) {\n      return this._then.compareTo(that._then);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ChildrenSelector) {\n      return this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (ChildrenSelector._hashSeed === void 0) {\n      ChildrenSelector._hashSeed = Murmur3.seed(ChildrenSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(ChildrenSelector._hashSeed, this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"children\").write(40/*'('*/).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new ChildrenSelector(this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.ChildrenSelector = ChildrenSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class DescendantsSelector extends Selector {\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(then: Selector) {\n    super();\n    this._then = then;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have descendants.\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child, while none have selected a result:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(child);\n          // Subselect the child.\n          selected = this._then.forSelected(interpreter, callback, thisArg);\n          // If the child was not selected:\n          if (selected === void 0) {\n            // Recursively select the child's children.\n            this.forSelected(interpreter, callback, thisArg);\n          }\n          // Pop the child off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have descendants.\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child:\n        while (children.hasNext()) {\n          const oldChild = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(oldChild);\n          // Transform the child.\n          let newChild = this._then.mapSelected(interpreter, transform, thisArg);\n          // If the child was not removed:\n          if (newChild.isDefined()) {\n            // Recursively transform the child's children.\n            newChild = this.mapSelected(interpreter, transform, thisArg);\n          }\n          // Pop the child off the scope stack.\n          interpreter.popScope();\n          if (newChild.isDefined()) {\n            // Update the child, if its identity changed.\n            if (newChild !== oldChild) {\n              children.set(newChild);\n            }\n          } else {\n            // Remove the child, if it transformed to Absent.\n            children.delete();\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new DescendantsSelector(then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new DescendantsSelector(this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 18;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof DescendantsSelector) {\n      return this._then.compareTo(that._then);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DescendantsSelector) {\n      return this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (DescendantsSelector._hashSeed === void 0) {\n      DescendantsSelector._hashSeed = Murmur3.seed(DescendantsSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(DescendantsSelector._hashSeed, this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"descendants\").write(40/*'('*/).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new DescendantsSelector(this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.DescendantsSelector = DescendantsSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class FilterSelector extends Selector {\n  /** @hidden */\n  readonly _predicate: Selector;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(predicate: Selector, then: Selector) {\n    super();\n    this._predicate = predicate;\n    this._then = then;\n  }\n\n  predicate(): Selector {\n    return this._predicate;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // If the filter matches the selection scope:\n      if (this.filterSelected(interpreter)) {\n        // Then subselect the selection scope.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n      }\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // If the filter matches the selection scope:\n      if (this.filterSelected(interpreter)) {\n        // Then transform the selection scope.\n        result = this._then.mapSelected(interpreter, transform, thisArg);\n      } else {\n        result = interpreter.peekScope().toValue();\n      }\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let predicate = this._predicate.substitute(interpreter);\n    if (!(predicate instanceof Selector)) {\n      predicate = this._predicate;\n    }\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new FilterSelector(predicate as Selector, then as Selector);\n  }\n\n  protected filterSelected(interpreter: Interpreter): boolean {\n    return this._predicate.forSelected(interpreter, this.selected, this) !== void 0;\n  }\n\n  protected selected(interpreter: Interpreter): null {\n    return null;\n  }\n\n  andThen(then: Selector): Selector {\n    return new FilterSelector(this._predicate, this._then.andThen(then));\n  }\n\n  filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return this;\n    } else {\n      predicate = Item.fromAny(predicate);\n      return this.andThen(predicate.filter());\n    }\n  }\n\n  typeOrder(): number {\n    return 19;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof FilterSelector) {\n      let order = this._predicate.compareTo(that._predicate);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FilterSelector) {\n      return this._predicate.equals(that._predicate) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (FilterSelector._hashSeed === void 0) {\n      FilterSelector._hashSeed = Murmur3.seed(FilterSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(FilterSelector._hashSeed,\n        this._predicate.hashCode()), this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"filter\").write(40/*'('*/).debug(this._predicate).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new FilterSelector(this._predicate.clone(), this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.FilterSelector = FilterSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class LiteralSelector extends Selector {\n  /** @hidden */\n  readonly _item: Item;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(item: Item, then: Selector) {\n    super();\n    this._item = item.commit();\n    this._then = then;\n  }\n\n  item(): Item {\n    return this._item;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      const literal = this._item.evaluate(interpreter);\n      if (literal.isDefined()) {\n        // Push the literal onto the scope stack.\n        interpreter.pushScope(literal);\n        // Subselect the literal.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n        // Pop the literal off of the scope stack.\n        interpreter.popScope();\n      }\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      let literal = this._item.evaluate(interpreter);\n      if (literal.isDefined()) {\n        // Push the literal onto the scope stack.\n        interpreter.pushScope(literal);\n        // Transform the literal.\n        literal = this._then.mapSelected(interpreter, transform, thisArg);\n        // Pop the literal off of the scope stack.\n        interpreter.popScope();\n      }\n      result = literal;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const item = this._item.substitute(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new LiteralSelector(item, then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new LiteralSelector(this._item, this._then.andThen(then));\n  }\n\n  precedence(): number {\n    return this._item.precedence();\n  }\n\n  typeOrder(): number {\n    return 11;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof LiteralSelector) {\n      let order = this._item.compareTo(that._item);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LiteralSelector) {\n      return this._item.equals(that._item) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (LiteralSelector._hashSeed === void 0) {\n      LiteralSelector._hashSeed = Murmur3.seed(LiteralSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(LiteralSelector._hashSeed,\n        this._item.hashCode()), this._then.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Selector\").write(46/*'.'*/).write(\"literal\").write(40/*'('*/)\n        .debug(this._item).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  debugThen(output: Output): void {\n    // nop\n  }\n\n  clone(): Selector {\n    return new LiteralSelector(this._item.clone(), this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.LiteralSelector = LiteralSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {Func} from \"../Func\";\nimport {Interpreter} from \"../Interpreter\";\nimport {InvokeOperator} from \"../operator/InvokeOperator\";\n\nexport class LambdaFunc extends Func {\n  readonly _bindings: Value;\n  readonly _template: Value;\n\n  constructor(bindings: Value, template: Value) {\n    super();\n    this._bindings = bindings;\n    this._template = template;\n  }\n\n  bindings(): Value {\n    return this._bindings;\n  }\n\n  template(): Value {\n    return this._template;\n  }\n\n  precedence(): number {\n    return 1;\n  }\n\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const bindings = this._bindings;\n    const arity = Math.max(1, bindings.length);\n    const params = Item.Record.create(arity);\n    let i = 0;\n    let j = 0;\n    while (i < arity) {\n      const binding = bindings instanceof Item.Record ? bindings.getItem(i) : i === 0 ? bindings : Item.absent();\n      const arg = args instanceof Item.Record ? args.getItem(j).toValue() : j === 0 ? args : Item.Value.absent();\n      if (binding instanceof Item.Text && arg.isDistinct()) {\n        params.push(Item.Slot.of(binding, arg));\n        j += 1;\n      } else if (binding instanceof Item.Slot) {\n        if (arg.isDistinct()) {\n          params.push(binding.updatedValue(arg));\n        } else {\n          params.push(binding);\n        }\n        j += 1;\n      }\n      i += 1;\n    }\n    interpreter.pushScope(params);\n    const result = this._template.evaluate(interpreter);\n    interpreter.popScope();\n    return result;\n  }\n\n  typeOrder(): number {\n    return 50;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof LambdaFunc) {\n      let order = this._bindings.compareTo(that._bindings);\n      if (order === 0) {\n        order = this._template.compareTo(that._template);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LambdaFunc) {\n      return this._bindings.equals(that._bindings) && this._template.equals(that._template);\n    }\n    return false;\n  }\n\n  hashCode() {\n    if (LambdaFunc._hashSeed === void 0) {\n      LambdaFunc._hashSeed = Murmur3.seed(LambdaFunc);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(LambdaFunc._hashSeed,\n        this._bindings.hashCode()), this._template.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this.bindings).write(46/*'.'*/).write(\"lambda\").write(40/*'('*/)\n        .debug(this.template).write(41/*')'*/);\n  }\n\n  private static _hashSeed?: number;\n}\nItem.LambdaFunc = LambdaFunc;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Func} from \"../Func\";\n\nexport abstract class BridgeFunc extends Func {\n  typeOrder(): number {\n    return 51;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BridgeFunc) {\n      return Objects.compare((this as any).__proto__.constructor.name,\n                             (that as any).__proto__.constructor.name);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  hashCode(): number {\n    return Murmur3.seed((this as any).__proto__.constructor);\n  }\n\n  debug(output: Output) {\n    output = output.write((this as any).__proto__.constructor.name);\n  }\n}\nItem.BridgeFunc = BridgeFunc;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {Record} from \"../Record\";\nimport {Func} from \"../Func\";\nimport {Interpreter} from \"../Interpreter\";\nimport {InvokeOperator} from \"../operator/InvokeOperator\";\nimport {BridgeFunc} from \"./BridgeFunc\";\n\nexport class MathModule {\n  private constructor() {\n    // stub\n  }\n\n  private static _max?: Func;\n  private static _min?: Func;\n  private static _abs?: Func;\n  private static _ceil?: Func;\n  private static _floor?: Func;\n  private static _round?: Func;\n  private static _sqrt?: Func;\n  private static _pow?: Func;\n  private static _rate?: Func;\n  private static _random?: Func;\n\n  private static _scope?: Record;\n\n  static max(): Func {\n    if (MathModule._max === void 0) {\n      MathModule._max = new MaxFunc();\n    }\n    return MathModule._max;\n  }\n\n  static min(): Func {\n    if (MathModule._min === void 0) {\n      MathModule._min = new MinFunc();\n    }\n    return MathModule._min;\n  }\n\n  static abs(): Func {\n    if (MathModule._abs === void 0) {\n      MathModule._abs = new AbsFunc();\n    }\n    return MathModule._abs;\n  }\n\n  static ceil(): Func {\n    if (MathModule._ceil === void 0) {\n      MathModule._ceil = new CeilFunc();\n    }\n    return MathModule._ceil;\n  }\n\n  static floor(): Func {\n    if (MathModule._floor === void 0) {\n      MathModule._floor = new FloorFunc();\n    }\n    return MathModule._floor;\n  }\n\n  static round(): Func {\n    if (MathModule._round === void 0) {\n      MathModule._round = new RoundFunc();\n    }\n    return MathModule._round;\n  }\n\n  static sqrt(): Func {\n    if (MathModule._sqrt === void 0) {\n      MathModule._sqrt = new SqrtFunc();\n    }\n    return MathModule._sqrt;\n  }\n\n  static pow(): Func {\n    if (MathModule._pow === void 0) {\n      MathModule._pow = new PowFunc();\n    }\n    return MathModule._pow;\n  }\n\n  static rate(): Func {\n    if (MathModule._rate === void 0) {\n      MathModule._rate = new RateFunc();\n    }\n    return MathModule._rate;\n  }\n\n  static random(): Func {\n    if (MathModule._random === void 0) {\n      MathModule._random = new RandomFunc();\n    }\n    return MathModule._random;\n  }\n\n  static scope(): Record {\n    if (MathModule._scope === void 0) {\n      MathModule._scope = Item.Record.create(10)\n          .slot(\"max\", MathModule.max())\n          .slot(\"min\", MathModule.min())\n          .slot(\"abs\", MathModule.abs())\n          .slot(\"ceil\", MathModule.ceil())\n          .slot(\"floor\", MathModule.floor())\n          .slot(\"round\", MathModule.round())\n          .slot(\"pow\", MathModule.pow())\n          .slot(\"sqrt\", MathModule.sqrt())\n          .slot(\"rate\", MathModule.rate())\n          .slot(\"random\", MathModule.random())\n          .commit();\n    }\n    return MathModule._scope;\n  }\n}\nItem.MathModule = MathModule;\n\n/** @hidden */\nclass MaxFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let x: Item;\n    let y: Item | undefined;\n    if (args.length >= 2) {\n      x = args.getItem(0).evaluate(interpreter);\n      y = args.getItem(1).evaluate(interpreter);\n    } else {\n      x = args.evaluate(interpreter);\n    }\n    if (y !== void 0) {\n      return x.max(y);\n    } else if (operator !== void 0) {\n      y = operator.state() as Item;\n      const max = y !== void 0 ? x.max(y) : x;\n      operator.setState(max);\n      return max;\n    }\n    return Item.absent();\n  }\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    if (args.length === 1) {\n      args = args.evaluate(interpreter).toValue();\n      return this.invoke(args, interpreter, operator);\n    }\n    return void 0;\n  }\n}\n\n/** @hidden */\nclass MinFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let x: Item;\n    let y: Item | undefined;\n    if (args.length >= 2) {\n      x = args.getItem(0).evaluate(interpreter);\n      y = args.getItem(1).evaluate(interpreter);\n    } else {\n      x = args.evaluate(interpreter);\n    }\n    if (y !== void 0) {\n      return x.min(y);\n    } else if (operator !== void 0) {\n      y = operator.state() as Item;\n      const min = y !== void 0 ? x.min(y) : x;\n      operator.setState(min);\n      return min;\n    }\n    return Item.absent();\n  }\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    if (args.length === 1) {\n      args = args.evaluate(interpreter).toValue();\n      return this.invoke(args, interpreter, operator);\n    }\n    return void 0;\n  }\n}\n\n/** @hidden */\nclass AbsFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.abs();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass CeilFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.ceil();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass FloorFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.floor();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass RoundFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.round();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass SqrtFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.sqrt();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass PowFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const x = args.getItem(0).evaluate(interpreter);\n    const y = args.getItem(1).evaluate(interpreter);\n    if (x instanceof Item.Num && y instanceof Item.Num) {\n      return x.pow(y);\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass RateFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let value: number;\n    let period: number;\n    if (args.length >= 2) {\n      value = args.getItem(0).evaluate(interpreter).numberValue(NaN);\n      period = args.getItem(1).evaluate(interpreter).numberValue(1000);\n    } else {\n      value = args.evaluate(interpreter).numberValue(NaN);\n      period = 1000;\n    }\n    if (isFinite(value) && operator !== void 0) {\n      let state = operator.state() as {v0: number, t0: number, dv: number, dt: number} | undefined;\n      if (state === void 0) {\n        state = {v0: value, t0: Date.now(), dv: 0, dt: 0};\n        operator.setState(state);\n      } else {\n        const t1 = Date.now();\n        const dt = t1 - state.t0;\n        if (dt > period && t1 > state.t0 || dt > 2 * period) {\n          const dv = value - state.v0;\n          state.v0 = value;\n          state.t0 = t1;\n          state.dv = dv;\n          state.dt = dt;\n        }\n        operator.setState(state);\n        if (state.dt !== 0) {\n          const rate = period * state.dv / state.dt;\n          return Item.Num.from(rate);\n        }\n      }\n    }\n    return Item.absent();\n  }\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    args = args.evaluate(interpreter).toValue();\n    return this.invoke(args, interpreter, operator);\n  }\n}\n\n/** @hidden */\nclass RandomFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    const lower = args.length >= 1 ? args.getItem(0).numberValue(0.0) : 0.0;\n    const upper = args.length >= 2 ? args.getItem(1).numberValue(lower + 1.0) : lower + 1.0;\n    const value = lower + Math.random() * (upper - lower);\n    return Item.Num.from(value);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Attr} from \"../Attr\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class TagForm<T extends U, U = T> extends Form<T, U> {\n  /** @hidden */\n  readonly _tag: string;\n  /** @hidden */\n  readonly _form: Form<T, U>;\n\n  constructor(tag: string, form: Form<T, U>) {\n    super();\n    this._tag = tag;\n    this._form = form;\n  }\n\n  tag(): string | undefined;\n  tag(tag: string | undefined): Form<T, U>;\n  tag(tag?: string | undefined): string | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return this._tag;\n    } else if (tag !== void 0) {\n      return new TagForm<T, U>(tag, this._form);\n    } else {\n      return this._form;\n    }\n  }\n\n  unit(): T | undefined;\n  unit(unit: T | undefined): Form<T, U>;\n  unit(unit?: T | undefined): T | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return this._form.unit();\n    } else {\n      return new TagForm<T, U>(this._tag, this._form.unit(unit));\n    }\n  }\n\n  mold(object: U, item?: Item): Item {\n    item = this._form.mold(object, item);\n    if (!item.header(this._tag).isDefined()) {\n      item = item.prepended(Attr.of(this._tag));\n    }\n    return item;\n  }\n\n  cast(item: Item, object?: T): T | undefined {\n    if (item.header(this._tag).isDefined()) {\n      return this._form.cast(item, object);\n    } else if (item.keyEquals(this._tag)) {\n      return this._form.cast(item.toValue(), object);\n    }\n    return void 0;\n  }\n}\nForm.TagForm = TagForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class UnitForm<T extends U, U = T> extends Form<T, U> {\n  /** @hidden */\n  readonly _unit: T;\n  /** @hidden */\n  readonly _form: Form<T, U>;\n\n  constructor(unit: T, form: Form<T, U>) {\n    super();\n    this._unit = unit;\n    this._form = form;\n  }\n\n  tag(): string | undefined;\n  tag(tag: string | undefined): Form<T, U>;\n  tag(tag?: string | undefined): string | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return this._form.tag();\n    } else {\n      return new UnitForm<T, U>(this._unit, this._form.tag(tag));\n    }\n  }\n\n  unit(): T | undefined;\n  unit(unit: T | undefined): Form<T, U>;\n  unit(unit?: T | undefined): T | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return this._form.unit();\n    } else if (unit !== void 0) {\n      return new UnitForm<T, U>(unit, this._form);\n    } else {\n      return this._form;\n    }\n  }\n\n  mold(object: U, item?: Item): Item {\n    return this._form.mold.apply(this._form, arguments);\n  }\n\n  cast(item: Item, object?: T): T | undefined {\n    return this._form.cast.apply(this._form, arguments);\n  }\n}\nForm.UnitForm = UnitForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Text} from \"../Text\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class StringForm extends Form<string> {\n  /** @hidden */\n  readonly _unit: string | undefined;\n\n  constructor(unit?: string) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): string | undefined;\n  unit(unit: string | undefined): Form<string>;\n  unit(unit?: string | undefined): string | undefined | Form<string> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new StringForm(unit);\n    }\n  }\n\n  mold(object: string, item?: Item): Item {\n    if (item === void 0) {\n      return Text.from(object);\n    } else {\n      return item.concat(Text.from(object));\n    }\n  }\n\n  cast(item: Item, object?: string): string | undefined {\n    const value = item.target();\n    try {\n      return value.stringValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\nForm.StringForm = StringForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Num} from \"../Num\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class NumberForm extends Form<number> {\n  /** @hidden */\n  readonly _unit: number | undefined;\n\n  constructor(unit?: number) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): number | undefined;\n  unit(unit: number | undefined): Form<number>;\n  unit(unit?: number | undefined): number | undefined | Form<number> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new NumberForm(unit);\n    }\n  }\n\n  mold(object: number, item?: Item): Item {\n    if (item === void 0) {\n      return Num.from(object);\n    } else {\n      return item.concat(Num.from(object));\n    }\n  }\n\n  cast(item: Item, object?: number): number | undefined {\n    const value = item.target();\n    try {\n      return value.numberValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\nForm.NumberForm = NumberForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Bool} from \"../Bool\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class BooleanForm extends Form<boolean> {\n  /** @hidden */\n  readonly _unit: boolean | undefined;\n\n  constructor(unit?: boolean) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): boolean | undefined;\n  unit(unit: boolean | undefined): Form<boolean>;\n  unit(unit?: boolean | undefined): boolean | undefined | Form<boolean> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new BooleanForm(unit);\n    }\n  }\n\n  mold(object: boolean, item?: Item): Item {\n    if (item === void 0) {\n      return Bool.from(object);\n    } else {\n      return item.concat(Bool.from(object));\n    }\n  }\n\n  cast(item: Item, object?: boolean): boolean | undefined {\n    const value = item.target();\n    try {\n      return value.booleanValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\nForm.BooleanForm = BooleanForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class AnyForm extends Form<AnyItem> {\n  /** @hidden */\n  readonly _unit: AnyItem | undefined;\n\n  constructor(unit?: AnyItem) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): AnyItem | undefined;\n  unit(unit: AnyItem | undefined): Form<AnyItem>;\n  unit(unit?: AnyItem | undefined): AnyItem | undefined | Form<AnyItem> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new AnyForm(unit);\n    }\n  }\n\n  mold(object: AnyItem, item?: Item): Item {\n    object = Item.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  cast(item: Item, object?: AnyItem): AnyItem | undefined {\n    return item.toAny();\n  }\n}\nForm.AnyForm = AnyForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class ItemForm extends Form<Item, AnyItem> {\n  /** @hidden */\n  readonly _unit: Item | undefined;\n\n  constructor(unit?: Item) {\n    super();\n    this._unit = unit ? unit.commit() : unit;\n  }\n\n  unit(): Item | undefined;\n  unit(unit: Item | undefined): Form<Item, AnyItem>;\n  unit(unit?: Item | undefined): Item | undefined | Form<Item, AnyItem> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new ItemForm(unit);\n    }\n  }\n\n  mold(object: AnyItem, item?: Item): Item {\n    object = Item.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  cast(item: Item, object?: Item): Item | undefined {\n    return item;\n  }\n}\nForm.ItemForm = ItemForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {AnyValue, Value} from \"../Value\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class ValueForm extends Form<Value, AnyValue> {\n  /** @hidden */\n  readonly _unit: Value | undefined;\n\n  constructor(unit?: Value) {\n    super();\n    this._unit = unit ? unit.commit() : unit;\n  }\n\n  unit(): Value | undefined;\n  unit(unit: Value | undefined): Form<Value, AnyValue>;\n  unit(unit?: Value | undefined): Value | undefined | Form<Value, AnyValue> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new ValueForm(unit);\n    }\n  }\n\n  mold(object: AnyValue, item?: Item): Item {\n    object = Value.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  cast(item: Item, object?: Value): Value | undefined {\n    return item.toValue();\n  }\n}\nForm.ValueForm = ValueForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Value} from \"../Value\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class ValueCursor<V> extends Cursor<V> {\n  private readonly _cursor: Cursor<Value>;\n  private readonly _form: Form<V, unknown>;\n\n  constructor(cursor: Cursor<Value>, form: Form<V, unknown>) {\n    super();\n    this._cursor = cursor;\n    this._form = form;\n  }\n\n  isEmpty(): boolean {\n    return this._cursor.isEmpty();\n  }\n\n  head(): V {\n    const value = this._cursor.head();\n    return value.coerce(this._form);\n  }\n\n  step(): void {\n    this._cursor.step();\n  }\n\n  skip(count: number): void {\n    this._cursor.skip(count);\n  }\n\n  hasNext(): boolean {\n    return this._cursor.hasNext();\n  }\n\n  nextIndex(): number {\n    return this._cursor.nextIndex();\n  }\n\n  next(): {value?: V, done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && value.coerce(this._form), done};\n  }\n\n  hasPrevious(): boolean {\n    return this._cursor.hasPrevious();\n  }\n\n  previousIndex(): number {\n    return this._cursor.previousIndex();\n  }\n\n  previous(): {value?: V, done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && value.coerce(this._form), done};\n  }\n\n  delete(): void {\n    this._cursor.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Value} from \"../Value\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class ValueEntryCursor<K, V> extends Cursor<[K, V]> {\n  private readonly _cursor: Cursor<[Value, Value]>;\n  private readonly _keyForm: Form<K, unknown>;\n  private readonly _valueForm: Form<V, unknown>;\n\n  constructor(cursor: Cursor<[Value, Value]>, keyForm: Form<K, unknown>, valueForm: Form<V, unknown>) {\n    super();\n    this._cursor = cursor;\n    this._keyForm = keyForm;\n    this._valueForm = valueForm;\n  }\n\n  isEmpty(): boolean {\n    return this._cursor.isEmpty();\n  }\n\n  head(): [K, V] {\n    const pair = this._cursor.head();\n    return [pair[0].coerce(this._keyForm), pair[1].coerce(this._valueForm)];\n  }\n\n  step(): void {\n    this._cursor.step();\n  }\n\n  skip(count: number): void {\n    this._cursor.skip(count);\n  }\n\n  hasNext(): boolean {\n    return this._cursor.hasNext();\n  }\n\n  nextIndex(): number {\n    return this._cursor.nextIndex();\n  }\n\n  next(): {value?: [K, V], done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && [value[0].coerce(this._keyForm), value[1].coerce(this._valueForm)], done};\n  }\n\n  hasPrevious(): boolean {\n    return this._cursor.hasPrevious();\n  }\n\n  previousIndex(): number {\n    return this._cursor.previousIndex();\n  }\n\n  previous(): {value?: [K, V], done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && [value[0].coerce(this._keyForm), value[1].coerce(this._valueForm)], done};\n  }\n\n  delete(): void {\n    this._cursor.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/interpolate\";\nimport {AnyItem, Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Attr} from \"../Attr\";\nimport {Value} from \"../Value\";\nimport {Record} from \"../Record\";\nimport {Num} from \"../Num\";\nimport {BinaryOperator} from \"../operator/BinaryOperator\";\nimport {UnaryOperator} from \"../operator/UnaryOperator\";\nimport {InvokeOperator} from \"../operator/InvokeOperator\";\nimport {AttrInterpolator} from \"./AttrInterpolator\";\nimport {SlotInterpolator} from \"./SlotInterpolator\";\nimport {ValueInterpolator} from \"./ValueInterpolator\";\nimport {RecordInterpolator} from \"./RecordInterpolator\";\nimport {NumInterpolator} from \"./NumInterpolator\";\nimport {ConditionalOperatorInterpolator} from \"./ConditionalOperatorInterpolator\";\nimport {BinaryOperatorInterpolator} from \"./BinaryOperatorInterpolator\";\nimport {UnaryOperatorInterpolator} from \"./UnaryOperatorInterpolator\";\nimport {InvokeOperatorInterpolator} from \"./InvokeOperatorInterpolator\";\n\nexport abstract class ItemInterpolator<I extends Item = Item> extends Interpolator<I, AnyItem> {\n  range(): ReadonlyArray<I>;\n  range(is: ReadonlyArray<I>): ItemInterpolator<I>;\n  range(i0: I, i1: I): ItemInterpolator<I>;\n  range(is: ReadonlyArray<AnyItem>): ItemInterpolator;\n  range(i0: AnyItem, i1: AnyItem): ItemInterpolator;\n  range(i0?: ReadonlyArray<AnyItem> | AnyItem, i1?: AnyItem): ReadonlyArray<I> | ItemInterpolator {\n    if (i0 === void 0) {\n      return [this.interpolate(0), this.interpolate(1)];\n    } else if (i1 === void 0) {\n      i0 = i0 as ReadonlyArray<AnyItem>\n      return ItemInterpolator.between(i0[0] as AnyItem, i0[1] as AnyItem);\n    } else {\n      return ItemInterpolator.between(i0 as AnyItem, i1);\n    }\n  }\n\n  static between<I extends Item>(i0: I, i1: I): ItemInterpolator<I>;\n  static between(i0: AnyItem, i1: AnyItem): ItemInterpolator;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (a instanceof Attr && b instanceof Attr) {\n      return new ItemInterpolator.Attr(a, b);\n    } else if (a instanceof Field && b instanceof Field) {\n      return new ItemInterpolator.Slot(a, b);\n    } if (a instanceof Record && b instanceof Record) {\n      return new ItemInterpolator.Record(a, b);\n    } else if (a instanceof Num && b instanceof Num) {\n      return new ItemInterpolator.Num(a.value, b.value);\n    } else if (a instanceof BinaryOperator && b instanceof BinaryOperator) {\n      return new ItemInterpolator.BinaryOperator(a, b);\n    } else if (a instanceof UnaryOperator && b instanceof UnaryOperator) {\n      return new ItemInterpolator.UnaryOperator(a, b);\n    } else if (a instanceof InvokeOperator && b instanceof InvokeOperator) {\n      return new ItemInterpolator.InvokeOperator(a, b);\n    } else if (a instanceof Value && b instanceof Value) {\n      return new ItemInterpolator.Value(a, b);\n    } else if (!(a instanceof Item) && !(b instanceof Item)) {\n      return ItemInterpolator.between(Item.fromAny(a as AnyItem), Item.fromAny(b as AnyItem));\n    }\n    return Interpolator.between(a, b);\n  }\n\n  static tryBetween(a: unknown, b: unknown): ItemInterpolator | null {\n    if (a instanceof Attr && b instanceof Attr) {\n      return new ItemInterpolator.Attr(a, b);\n    } else if (a instanceof Field && b instanceof Field) {\n      return new ItemInterpolator.Slot(a, b);\n    } if (a instanceof Record && b instanceof Record) {\n      return new ItemInterpolator.Record(a, b);\n    } else if (a instanceof Num && b instanceof Num) {\n      return new ItemInterpolator.Num(a.value, b.value);\n    } else if (a instanceof BinaryOperator && b instanceof BinaryOperator) {\n      return new ItemInterpolator.BinaryOperator(a, b);\n    } else if (a instanceof UnaryOperator && b instanceof UnaryOperator) {\n      return new ItemInterpolator.UnaryOperator(a, b);\n    } else if (a instanceof InvokeOperator && b instanceof InvokeOperator) {\n      return new ItemInterpolator.InvokeOperator(a, b);\n    } else if (a instanceof Value && b instanceof Value) {\n      return new ItemInterpolator.Value(a, b);\n    }\n    return null;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Attr: typeof AttrInterpolator; // defined by AttrInterpolator\n  /** @hidden */\n  static Slot: typeof SlotInterpolator; // defined by SlotInterpolator\n  /** @hidden */\n  static Value: typeof ValueInterpolator; // defined by ValueInterpolator\n  /** @hidden */\n  static Record: typeof RecordInterpolator; // defined by RecordInterpolator\n  /** @hidden */\n  static Num: typeof NumInterpolator; // defined by NumInterpolator\n  /** @hidden */\n  static ConditionalOperator: typeof ConditionalOperatorInterpolator; // defined by ConditionalOperatorInterpolator\n  /** @hidden */\n  static BinaryOperator: typeof BinaryOperatorInterpolator; // defined by BinaryOperatorInterpolator\n  /** @hidden */\n  static UnaryOperator: typeof UnaryOperatorInterpolator; // defined by UnaryOperatorInterpolator\n  /** @hidden */\n  static InvokeOperator: typeof InvokeOperatorInterpolator; // defined by InvokeOperatorInterpolator\n}\nInterpolator.registerFactory(ItemInterpolator);\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem} from \"../Item\";\nimport {Attr} from \"../Attr\";\nimport {Value} from \"../Value\";\nimport {Text} from \"../Text\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class AttrInterpolator extends ItemInterpolator<Attr> {\n  /** @hidden */\n  readonly keyInterpolator: ItemInterpolator<Text>;\n  /** @hidden */\n  readonly valueInterpolator: ItemInterpolator<Value>;\n\n  constructor(a0: Attr, a1: Attr) {\n    super();\n    this.keyInterpolator = ItemInterpolator.between(a0.key, a1.key);\n    this.valueInterpolator = ItemInterpolator.between(a0.value, a1.value);\n  }\n\n  interpolate(u: number): Attr {\n    const key = this.keyInterpolator.interpolate(u);\n    const value = this.valueInterpolator.interpolate(u);\n    return Attr.of(key, value);\n  }\n\n  deinterpolate(f: AnyItem): number {\n    return 0; // not implemented\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof AttrInterpolator) {\n      return this.keyInterpolator.equals(that.keyInterpolator)\n          && this.valueInterpolator.equals(that.valueInterpolator);\n    }\n    return false;\n  }\n}\nItemInterpolator.Attr = AttrInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Slot} from \"../Slot\";\nimport {Value} from \"../Value\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class SlotInterpolator extends ItemInterpolator<Slot> {\n  /** @hidden */\n  readonly keyInterpolator: ItemInterpolator<Value>;\n  /** @hidden */\n  readonly valueInterpolator: ItemInterpolator<Value>;\n\n  constructor(f0: Field, f1: Field) {\n    super();\n    this.keyInterpolator = ItemInterpolator.between(f0.key, f1.key);\n    this.valueInterpolator = ItemInterpolator.between(f0.value, f1.value);\n  }\n\n  interpolate(u: number): Slot {\n    const key = this.keyInterpolator.interpolate(u);\n    const value = this.valueInterpolator.interpolate(u);\n    return Slot.of(key, value);\n  }\n\n  deinterpolate(f: AnyItem): number {\n    return 0; // not implemented\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof SlotInterpolator) {\n      return this.keyInterpolator.equals(that.keyInterpolator)\n          && this.valueInterpolator.equals(that.valueInterpolator);\n    }\n    return false;\n  }\n}\nItemInterpolator.Slot = SlotInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class ValueInterpolator<V extends Value> extends ItemInterpolator<V> {\n  /** @hidden */\n  readonly v0: V;\n  /** @hidden */\n  readonly v1: V;\n\n  constructor(v0: V, v1: V) {\n    super();\n    this.v0 = v0.commit();\n    this.v1 = v1.commit();\n  }\n\n  interpolate(u: number): V {\n    return u < 1 ? this.v0 : this.v1;\n  }\n\n  deinterpolate(v: AnyItem): number {\n    v = Item.fromAny(v);\n    return v.equals(this.v1) ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ValueInterpolator) {\n      return this.v0.equals(that.v0) && this.v1.equals(that.v1);\n    }\n    return false;\n  }\n}\nItemInterpolator.Value = ValueInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Record} from \"../Record\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class RecordInterpolator extends ItemInterpolator<Record> {\n  /** @hidden */\n  readonly interpolators: ReadonlyArray<ItemInterpolator<Item>>;\n\n  constructor(r0: Record, r1: Record) {\n    super();\n    const interpolatorCount = Math.min(r0.length, r1.length);\n    const interpolators = new Array<ItemInterpolator>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      interpolators[i] = ItemInterpolator.between(r0.getItem(i), r1.getItem(i));\n    }\n    this.interpolators = interpolators;\n  }\n\n  interpolate(u: number): Record {\n    const interpolators = this.interpolators;\n    const interpolatorCount = interpolators.length;\n    const record = Record.create(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      record.push(this.interpolators[i].interpolate(u));\n    }\n    return record;\n  }\n\n  deinterpolate(f: AnyItem): number {\n    return 0; // not implemented\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof RecordInterpolator) {\n      const n = this.interpolators.length;\n      if (n === that.interpolators.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!this.interpolators[i].equals(that.interpolators[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n}\nItemInterpolator.Record = RecordInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Num} from \"../Num\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class NumInterpolator extends ItemInterpolator<Num> {\n  /** @hidden */\n  readonly y0: number;\n  /** @hidden */\n  readonly dy: number;\n\n  constructor(y0: number, y1: number) {\n    super();\n    this.y0 = y0;\n    this.dy = y1 - this.y0;\n  }\n\n  interpolate(u: number): Num {\n    return Num.from(this.y0 + this.dy * u);\n  }\n\n  deinterpolate(y: AnyItem): number {\n    y = Item.fromAny(y);\n    if (y instanceof Num) {\n      return this.dy !== 0 ? (y.value - this.y0) / this.dy : this.dy;\n    }\n    return 0;\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NumInterpolator) {\n      return this.y0 === that.y0 && this.dy === that.dy;\n    }\n    return false;\n  }\n}\nItemInterpolator.Num = NumInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {ConditionalOperator} from \"../operator/ConditionalOperator\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class ConditionalOperatorInterpolator extends ItemInterpolator<Item> {\n  /** @hidden */\n  readonly ifTermInterpolator: ItemInterpolator<Value>;\n  /** @hidden */\n  readonly thenTermInterpolator: ItemInterpolator<Value>;\n  /** @hidden */\n  readonly elseTermInterpolator: ItemInterpolator<Value>;\n\n  constructor(e0: ConditionalOperator, e1: ConditionalOperator) {\n    super();\n    this.ifTermInterpolator = ItemInterpolator.between(e0.ifTerm(), e1.ifTerm());\n    this.thenTermInterpolator = ItemInterpolator.between(e0.thenTerm(), e1.thenTerm());\n    this.elseTermInterpolator = ItemInterpolator.between(e0.elseTerm(), e1.elseTerm());\n  }\n\n  interpolate(u: number): Item {\n    const ifTerm = this.ifTermInterpolator.interpolate(u);\n    const thenTerm = this.thenTermInterpolator.interpolate(u);\n    const elseTerm = this.elseTermInterpolator.interpolate(u);\n    return ifTerm.conditional(thenTerm, elseTerm);\n  }\n\n  deinterpolate(f: AnyItem): number {\n    return 0; // not implemented\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ConditionalOperatorInterpolator) {\n      return this.ifTermInterpolator.equals(that.ifTermInterpolator)\n          && this.thenTermInterpolator.equals(that.thenTermInterpolator)\n          && this.elseTermInterpolator.equals(that.elseTermInterpolator);\n    }\n    return false;\n  }\n}\nItemInterpolator.ConditionalOperator = ConditionalOperatorInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {BinaryOperator} from \"../operator/BinaryOperator\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class BinaryOperatorInterpolator extends ItemInterpolator<Item> {\n  /** @hidden */\n  readonly operand1Interpolator: ItemInterpolator<Value>;\n  /** @hidden */\n  readonly operator: string;\n  /** @hidden */\n  readonly operand2Interpolator: ItemInterpolator<Value>;\n\n  constructor(e0: BinaryOperator, e1: BinaryOperator) {\n    super();\n    this.operator = e0.operator();\n    if (this.operator !== e1.operator()) {\n      throw new Error(e1.operator());\n    }\n    this.operand1Interpolator = ItemInterpolator.between(e0.operand1(), e1.operand1());\n    this.operand2Interpolator = ItemInterpolator.between(e0.operand2(), e1.operand2());\n  }\n\n  interpolate(u: number): Item {\n    const operand1 = this.operand1Interpolator.interpolate(u);\n    const operand2 = this.operand2Interpolator.interpolate(u);\n    switch (this.operator) {\n      case \"||\": return operand1.or(operand2);\n      case \"&&\": return operand1.and(operand2);\n      case \"|\": return operand1.bitwiseOr(operand2);\n      case \"^\": return operand1.bitwiseXor(operand2);\n      case \"&\": return operand1.bitwiseAnd(operand2);\n      case \"<\": return operand1.lt(operand2);\n      case \"<=\": return operand1.le(operand2);\n      case \"==\": return operand1.eq(operand2);\n      case \"!=\": return operand1.ne(operand2);\n      case \">=\": return operand1.ge(operand2);\n      case \">\": return operand1.gt(operand2);\n      case \"+\": return operand1.plus(operand2);\n      case \"-\": return operand1.minus(operand2);\n      case \"*\": return operand1.times(operand2);\n      case \"/\": return operand1.divide(operand2);\n      case \"%\": return operand1.modulo(operand2);\n      default: throw new Error(this.operator);\n    }\n  }\n\n  deinterpolate(f: AnyItem): number {\n    return 0; // not implemented\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BinaryOperatorInterpolator) {\n      return this.operand1Interpolator.equals(that.operand1Interpolator)\n          && this.operator === that.operator\n          && this.operand2Interpolator.equals(that.operand2Interpolator);\n    }\n    return false;\n  }\n}\nItemInterpolator.BinaryOperator = BinaryOperatorInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {UnaryOperator} from \"../operator/UnaryOperator\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class UnaryOperatorInterpolator extends ItemInterpolator<Item> {\n  /** @hidden */\n  readonly operator: string;\n  /** @hidden */\n  readonly operandInterpolator: ItemInterpolator<Value>;\n\n  constructor(e0: UnaryOperator, e1: UnaryOperator) {\n    super();\n    this.operator = e0.operator();\n    if (this.operator !== e1.operator()) {\n      throw new Error(e1.operator());\n    }\n    this.operandInterpolator = ItemInterpolator.between(e0.operand(), e1.operand());\n  }\n\n  interpolate(u: number): Item {\n    const operand = this.operandInterpolator.interpolate(u);\n    switch (this.operator) {\n      case \"!\": return operand.not();\n      case \"~\": return operand.bitwiseNot();\n      case \"-\": return operand.negative();\n      default: throw new Error(this.operator);\n    }\n  }\n\n  deinterpolate(f: AnyItem): number {\n    return 0; // not implemented\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UnaryOperatorInterpolator) {\n      return this.operator === that.operator\n          &&  this.operandInterpolator.equals(that.operandInterpolator);\n    }\n    return false;\n  }\n}\nItemInterpolator.UnaryOperator = UnaryOperatorInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {InvokeOperator} from \"../operator/InvokeOperator\";\nimport {Selector} from \"../Selector\";\nimport {ItemInterpolator} from \"./ItemInterpolator\";\n\nexport class InvokeOperatorInterpolator extends ItemInterpolator<Item> {\n  /** @hidden */\n  readonly funcInterpolator: ItemInterpolator<Value>;\n  /** @hidden */\n  readonly argsInterpolator: ItemInterpolator<Value>;\n\n  constructor(e0: InvokeOperator, e1: InvokeOperator) {\n    super();\n    this.funcInterpolator = ItemInterpolator.between(e0.func(), e1.func());\n    this.argsInterpolator = ItemInterpolator.between(e0.args(), e1.args());\n  }\n\n  interpolate(u: number): Item {\n    const func = this.funcInterpolator.interpolate(u);\n    const args = this.argsInterpolator.interpolate(u);\n    return Selector.literal(func).invoke(args);\n  }\n\n  deinterpolate(f: AnyItem): number {\n    return 0; // not implemented\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InvokeOperatorInterpolator) {\n      return this.funcInterpolator.equals(that.funcInterpolator)\n          && this.argsInterpolator.equals(that.argsInterpolator);\n    }\n    return false;\n  }\n}\nItemInterpolator.InvokeOperator = InvokeOperatorInterpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const enum KeyEffect {\n  Update,\n  Remove,\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Outlet} from \"./Outlet\";\n\nexport type InletType = \"value\" | \"map\";\n\nexport interface InletOptions {\n  name?: string;\n  type?: InletType;\n}\n\n/**\n * Input connector into a [[Streamlet]].  An `Inlet` represents a source from\n * which a `Streamlet` acquires state.\n *\n * In order for an `Inlet` to provide state to its `Streamlet`, it must bind to\n * an [[input]] source.  The input source of an `Inlet` is an [[Outlet]] of\n * some other `Streamlet`.  The [[bindInput]] method \"plugs\" the `Inlet` into\n * an `Outlet`.  The [[unbindInput]] method \"unplugs\" the `Inlet` from its\n * connected `Outlet`.\n *\n * The state of an `Inlet` has an integral _version_.  When its version is\n * negative, the state of the `Inlet` is considered _decoherent_.  When any\n * state on which an `Inlet` transitively depends changes, the `Inlet` will be\n * [[decohereOutput decohered]].  Decoherence does not immediately cause an\n * `Inlet` to recompute its state.  Instead, a separate [[recohereOutput\n * recohere]] step causes all of the decoherent paths in the dataflow graph\n * passing through the `Inlet` to make their states coherent again.\n */\nexport interface Inlet<I = unknown> {\n  /**\n   * Returns the `Outlet` from which this `Inlet` acquires its state; returns\n   * `null` if this `Inlet` is disconnected.\n   */\n  input(): Outlet<I> | null;\n\n  /**\n   * Connects this `Inlet` to an `Outlet` from which it will  acquire its\n   * state.  If this `Inlet` is already connected, it will first disconnect\n   * from its existing input.  Then, after updating its [[input]] property,\n   * the `Inlet` will invoke [[Outlet.bindOutput]] on its new `input`.\n   */\n  bindInput(input: Outlet<I> | null): void;\n\n  /**\n   * Disconnects this `Inlet` from its input `Outlet`, if connected.  After\n   * setting its [[input]] property to `null`, the `Inlet` will invoke\n   * [[Outlet.unbindOutput]] on its old input, if defined.\n   */\n  unbindInput(): void;\n\n  /**\n   * Disconnects all `Inlet`s dominated by this `Inlet` in the dataflow\n   * dependency graph.  Used to recursively clean up chains of combinators\n   * terminating at this `Inlet`.\n   */\n  disconnectInputs(): void;\n\n  /**\n   * Disconnects all `Outlet`s dominated by this `Inlet` in the dataflow graph.\n   * Used to recursively clean up chains of combinators passing through this\n   * `Inlet`.\n   */\n  disconnectOutputs(): void;\n\n  /**\n   * Marks this `Inlet`—and the `Streamlet` to which this `Inlet` is attached—as\n   * having decoherent state.  Decohering an `Inlet` will recursively decohere\n   * all streamlets that transitively depend on the state of this `Inlet`.\n   * Decohering an `Inlet` does not cause its state to be recomputed.  A\n   * subsequent [[recohereOutput]] call will eventually make the state of the\n   * `Inlet` coherent again.\n   */\n  decohereOutput(): void;\n\n  /**\n   * Updates the state of this `Inlet` to make it consistent with the target\n   * `version`. The `Inlet` only needs to update if its current `version`\n   * differs from the target `version`.  To update its state, the `Inlet` first\n   * invokes [[Outlet.recohereInput]] on its [[input]], to ensure that its\n   * input is coherent.  It then invokes [[Streamlet.recohere]] on the\n   * `Streamlet` to which it's attached, causing the `Streamlet` to make its\n   * own state coherent again.\n   */\n  recohereOutput(version: number): void;\n}\n\n/** @hidden */\nexport const Inlet = {\n  is<I>(object: unknown): object is Inlet<I> {\n    if (typeof object === \"object\" && object !== null) {\n      const inlet = object as Inlet<I>;\n      return typeof inlet.input === \"function\"\n          && typeof inlet.bindInput === \"function\"\n          && typeof inlet.unbindInput === \"function\";\n    }\n    return false;\n  },\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator} from \"@swim/util\";\nimport {Inlet} from \"./Inlet\";\nimport {MapValueFunction, WatchValueFunction} from \"./function\";\nimport {MemoizeValueCombinator} from \"./combinator/MemoizeValueCombinator\";\nimport {MapValueCombinator} from \"./combinator/MapValueCombinator\";\nimport {WatchValueCombinator} from \"./combinator/WatchValueCombinator\";\n\nexport type OutletType = \"value\" | \"map\";\n\nexport interface OutletOptions {\n  name?: string;\n  type?: OutletType;\n}\n\n/**\n * Output connector from a [[Streamlet]].  An `Outlet` represents a sink to\n * which a `Streamlet` provides state.\n *\n * An `Outlet` has a one-to-many relationship with a set of output sinks.\n * An output sink of an `Outlet` is an `Inlet` of some other `Streamlet`.\n * The [[bindOutput]] method \"plugs\" an `Inlet` into the `Outlet`.\n * The [[unbindOutput]] method \"unplugs\" an `Inlet` from the `Outlet`.\n */\nexport interface Outlet<O = unknown> {\n  /**\n   * Returns the current state of this `Outlet`.\n   */\n  get(): O | undefined;\n\n  /**\n   * Returns an `Iterator` over the set of `Inlet`s that depend on the state of\n   * this `Outlet`.\n   */\n  outputIterator(): Iterator<Inlet<O>>;\n\n  /**\n   * Adds an `output` to the set of `Inlet`s that depend on the state of this\n   * `Outlet`.  The `output` will be decohered when the state of this\n   * `Outlet` is decohered, and recohered when this `Outlet` is recohered.\n   */\n  bindOutput(output: Inlet<O>): void;\n\n  /**\n   * Removes an `output` from the set of `Inlet`s that depend on the state of\n   * this `Outlet`.\n   */\n  unbindOutput(output: Inlet<O>): void;\n\n  /**\n   * Disconnects all outputs from this `Outlet` by invoking\n   * [[Inlet.unbindInput]] on each `Inelt` that depends on the state of this\n   * `Outlet`.\n   */\n  unbindOutputs(): void;\n\n  /**\n   * Disconnects all `Outlet`s dominated by this `Outlet` in the dataflow\n   * graph.  Used to recursively clean up chains of combinators originating\n   * from this `Inlet`.\n   */\n  disconnectOutputs(): void;\n\n  /**\n   * Disconnects all `Inlet`s dominated by this `Outlet` in the dataflow\n   * dependency graph.  Used to recursively clean up chains of combinators\n   * passing through this `Outlet`.\n   */\n  disconnectInputs(): void;\n\n  /**\n   * Marks this `Outlet`—and all [[outputIterator outputs]] that depend on the\n   * state of this `Outlet`—as having decoherent state.\n   */\n  decohereInput(): void;\n\n  /**\n   * Updates the state of this `Outlet` to make it consistent with the target\n   * `version`.  The `Outlet` only needs to update if its current `version`\n   * differs from the target `version`.  To update its state, the `Outlet`\n   * first invokes [[Streamlet.recohere]] on the `Streamlet` to which\n   * it's attached. It then invokes [[Inlet.recohereOutput]] on each of its\n   * dependent [[outputIterator outputs]].\n   */\n  recohereInput(version: number): void;\n\n  memoize(): Outlet<O>;\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n\n  watch(func: WatchValueFunction<O>): this;\n}\n\n/** @hidden */\nexport const Outlet = {\n  is<O>(object: unknown): object is Outlet<O> {\n    if (typeof object === \"object\" && object !== null) {\n      const outlet = object as Outlet<O>;\n      return typeof outlet.outputIterator === \"function\"\n          && typeof outlet.bindOutput === \"function\"\n          && typeof outlet.unbindOutput === \"function\";\n    }\n    return false;\n  },\n\n  // Forward type declarations\n  /** @hidden */\n  MemoizeValueCombinator: void 0 as unknown as typeof MemoizeValueCombinator, // defined by MemoizeValueCombinator\n  /** @hidden */\n  MapValueCombinator: void 0 as unknown as typeof MapValueCombinator, // defined by MapValueCombinator\n  /** @hidden */\n  WatchValueCombinator: void 0 as unknown as typeof WatchValueCombinator, // defined by WatchValueCombinator\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Inlet} from \"./Inlet\";\nimport {KeyEffect} from \"./KeyEffect\";\n\n/**\n * Input connector into a `Streamlet` for a key-value map state.\n */\nexport interface MapInlet<K, V, I> extends Inlet<I> {\n  /**\n   * Marks this `MapInlet` as needing an `effect` applied to a given `key`.\n   * Decohering an individual key decoheres the entire state of the `Inlet`.\n   * But only the decoherent keys need to be updated in order to recohere the\n   * overall state of the `Inlet`.\n   */\n  decohereOutputKey(key: K, effect: KeyEffect): void;\n\n  /**\n   * Updates the state of an individual `key` in this `MapInlet` to make it\n   * consistent with the target `version`.  The `MapInlet` only needs to update\n   * if the current `version` differs from the target `version`.  To update the\n   * state of a key, the `MapInlet` first invokes [[MapOutlet.recohereInputKey]]\n   * on its [[input]], if its input is a `MapOutlet`, or it invokes\n   * [[Outlet.recohereInput]], if its input is not a `MapOutlet`.  Then,\n   * if all decoherent keys have been recohered, the `MapInlet` invokes\n   * [[Streamlet.recohere]] on its attached streamlet.\n   */\n  recohereOutputKey(key: K, version: number): void;\n}\n\n/** @hidden */\nexport const MapInlet = {\n  is<K, V, I>(object: unknown): object is MapInlet<K, V, I> {\n    if (typeof object === \"object\" && object !== null) {\n      const inlet = object as MapInlet<K, V, I>;\n      return Inlet.is(inlet)\n          && typeof inlet.decohereOutputKey === \"function\"\n          && typeof inlet.recohereOutputKey === \"function\";\n    }\n    return false;\n  },\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Map} from \"@swim/util\";\nimport {Outlet} from \"./Outlet\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {FilterFieldsFunction} from \"./function\";\nimport {MapValueFunction, MapFieldValuesFunction} from \"./function\";\nimport {WatchValueFunction, WatchFieldsFunction} from \"./function\";\nimport {MemoizeMapCombinator} from \"./combinator/MemoizeMapCombinator\";\nimport {FilterFieldsCombinator} from \"./combinator/FilterFieldsCombinator\";\nimport {MapFieldValuesCombinator} from \"./combinator/MapFieldValuesCombinator\";\nimport {ReduceFieldsCombinator} from \"./combinator/ReduceFieldsCombinator\";\nimport {WatchFieldsCombinator} from \"./combinator/WatchFieldsCombinator\";\n\n/**\n * Output connector from a [[Streamlet]] for a key-value map state.\n */\nexport interface MapOutlet<K, V, O> extends Outlet<O> {\n  /**\n   * Returns `true` if the current state of this `MapOutlet` contains the given\n   * `key`; otherwise returns `false`.\n   */\n  has(key: K): boolean;\n\n  /**\n   * Returns the current state of this `Outlet`.\n   */\n  get(): O | undefined;\n\n  /**\n   * Returns the value assocaited with the given `key` in the current state of\n   * this `MapOutlet`, if defined; otherwise returns `undefined`.\n   */\n  get(key: K): V | undefined;\n\n  /**\n   * Returns an `Iterator` over the keys in the current state of this `MapOutlet`.\n   */\n  keyIterator(): Iterator<K>;\n\n  /**\n   * Returns an `Outlet` that updates when the specified `key` updates.\n   */\n  outlet(key: K): Outlet<V>;\n\n  /**\n   * Marks this `MapOutlet` as needing an `effect` applied to a given `key`.\n   * Decohering an individual key decoheres the entire state of the `Outlet`.\n   * But only the decoherent keys need to be updated in order to recohere the\n   * overall state of the `Outlet`.\n   */\n  decohereInputKey(key: K, effect: KeyEffect): void;\n\n  /**\n   * Updates the state of an individual `key` in this `MapOutlet` to make it\n   * consistent with the target `version`.  The `MapOutlet` only needs to\n   * update if its current `version` differs from the target `version`.\n   * To update the state of a key, the `MapOutlet` first invokes\n   * [[Streamlet.recohere]] on its attached streamlets.  Then, for each\n   * dependent output, it invokes [[MapInlet.recohereOutputKey]], if the\n   * dependent output is a [[MapInlet]], or it invokes [[Inlet.recohere]],\n   * if the dependent output is not a `MapInlet`.\n   */\n  recohereInputKey(key: K, version: number): void;\n\n  memoize(): MapOutlet<K, V, O>;\n\n  filter(func: FilterFieldsFunction<K, V>): MapOutlet<K, V, Map<K, V>>;\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<K, V, V2>): MapOutlet<K, V2, Map<K, V2>>;\n\n  reduce<U>(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): Outlet<U>;\n\n  watch(func: WatchValueFunction<O>): this;\n  watch(func: WatchFieldsFunction<K, V>): this;\n}\n\n/** @hidden */\nexport const MapOutlet = {\n  is<K, V, I>(object: unknown): object is MapOutlet<K, V, I> {\n    if (typeof object === \"object\" && object !== null) {\n      const outlet = object as MapOutlet<K, V, I>;\n      return Outlet.is(outlet)\n          && typeof outlet.keyIterator === \"function\"\n          && typeof outlet.outlet === \"function\";\n    }\n    return false;\n  },\n\n  // Forward type declarations\n  /** @hidden */\n  MemoizeMapCombinator: void 0 as unknown as typeof MemoizeMapCombinator, // defined by MemoizeMapCombinator\n  /** @hidden */\n  FilterFieldsCombinator: void 0 as unknown as typeof FilterFieldsCombinator, // defined by FilterFieldsCombinator\n  /** @hidden */\n  MapFieldValuesCombinator: void 0 as unknown as typeof MapFieldValuesCombinator, // defined by MapFieldValuesCombinator\n  /** @hidden */\n  ReduceFieldsCombinator: void 0 as unknown as typeof ReduceFieldsCombinator, // defined by ReduceFieldsCombinator\n  /** @hidden */\n  WatchFieldsCombinator: void 0 as unknown as typeof WatchFieldsCombinator, // defined by WatchFieldsCombinator\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class StreamletException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = StreamletException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Outlet} from \"./Outlet\";\n\nimport {StreamletContext} from \"./StreamletContext\";\n\nexport interface StreamletScope<O> {\n  /**\n   * Returns the lexically scoped parent of this `StreamletScope`.\n   * Returns `null` if this `StreamletScope` has no lexical parent.\n   */\n  streamletScope(): StreamletScope<O> | null;\n\n  /**\n   * Returns the environment in which this `StreamletScope` operates.\n   */\n  streamletContext(): StreamletContext | null;\n\n  /**\n   * Returns an `Outlet` that updates when the specified `key` updates.\n   */\n  outlet(key: string): Outlet<O> | null;\n}\n\n/** @hidden */\nexport const StreamletScope = {\n  is<O>(object: unknown): object is StreamletScope<O> {\n    if (typeof object === \"object\" && object !== null) {\n      const scope = object as StreamletScope<O>;\n      return typeof scope.streamletScope === \"function\"\n          && typeof scope.streamletContext === \"function\"\n          && typeof scope.outlet === \"function\";\n    }\n    return false;\n  },\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Inlet} from \"./Inlet\";\nimport {Outlet} from \"./Outlet\";\n\nexport abstract class AbstractInlet<I> implements Inlet<I> {\n  /** @hidden */\n  protected _input: Outlet<I> | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    this._input = null;\n    this._version = -1;\n  }\n\n  input(): Outlet<I> | null {\n    return this._input;\n  }\n\n  bindInput(input: Outlet<I> | null): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    const input = this._input;\n    if (input !== null) {\n      input.unbindOutput(this);\n      this._input = null;\n      input.disconnectInputs();\n    }\n  }\n\n  disconnectOutputs(): void {\n    // nop\n  }\n\n  decohereOutput(): void {\n    if (this._version >= 0) {\n      this.willDecohereOutput();\n      this._version = -1;\n      this.onDecohereOutput();\n      this.didDecohereOutput();\n    }\n  }\n\n  recohereOutput(version: number): void {\n    if (this._version < 0) {\n      this.willRecohereOutput(version);\n      this._version = version;\n      if (this._input !== null) {\n        this._input.recohereInput(version);\n      }\n      this.onRecohereOutput(version);\n      this.didRecohereOutput(version);\n    }\n  }\n\n  protected willDecohereOutput(): void {\n    // hook\n  }\n\n  protected onDecohereOutput(): void {\n    // hook\n  }\n\n  protected didDecohereOutput(): void {\n    // hook\n  }\n\n  protected willRecohereOutput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutput(version: number): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Inlet} from \"./Inlet\";\nimport {Outlet} from \"./Outlet\";\nimport {MapValueFunction, WatchValueFunction} from \"./function\";\n\nexport abstract class AbstractOutlet<O> implements Outlet<O> {\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<O>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  abstract get(): O | undefined;\n\n  outputIterator(): Cursor<Inlet<O>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<O>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    for (let i = 0, n = oldOutputs !== null ? oldOutputs.length : 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<O>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n        output.disconnectOutputs();\n      }\n    }\n  }\n\n  disconnectInputs(): void {\n    // nop\n  }\n\n  decohereInput(): void {\n    if (this._version >= 0) {\n      this.willDecohereInput();\n      this._version = -1;\n      this.onDecohereInput();\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this.didDecohereInput();\n    }\n  }\n\n  recohereInput(version: number): void {\n    if (this._version < 0) {\n      this.willRecohereInput(version);\n      this._version = version;\n      this.onRecohereInput(version);\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.didRecohereInput(version);\n    }\n  }\n\n  protected willDecohereInput(): void {\n    // hook\n  }\n\n  protected onDecohereInput(): void {\n    // hook\n  }\n\n  protected didDecohereInput(): void {\n    // hook\n  }\n\n  protected willRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereInput(version: number): void {\n    // hook\n  }\n\n  memoize(): Outlet<O> {\n    const combinator = new Outlet.MemoizeValueCombinator<O>();\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2> {\n    const combinator = new Outlet.MapValueCombinator<O, O2>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<O>): this {\n    const combinator = new Outlet.WatchValueCombinator<O>(func);\n    combinator.bindInput(this);\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor} from \"@swim/util\";\nimport {Inlet} from \"./Inlet\";\nimport {Outlet} from \"./Outlet\";\nimport {Inoutlet} from \"./Inoutlet\";\nimport {MapValueFunction, WatchValueFunction} from \"./function\";\n\nexport abstract class AbstractInoutlet<I, O> implements Inoutlet<I, O> {\n  /** @hidden */\n  protected _input: Outlet<I> | null;\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<O>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    this._input = null;\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  abstract get(): O | undefined;\n\n  input(): Outlet<I> | null {\n    return this._input;\n  }\n\n  bindInput(input: Outlet<I> | null): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    if (this._outputs === null) {\n      const input = this._input;\n      if (input !== null) {\n        input.unbindOutput(this);\n        this._input = null;\n        input.disconnectInputs();\n      }\n    }\n  }\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<O>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<O>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    if (this._input === null) {\n      const outputs = this._outputs;\n      if (outputs !== null) {\n        this._outputs = null;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          output.unbindInput();\n          output.disconnectOutputs();\n        }\n      }\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this._version >= 0) {\n      this.willDecohere();\n      this._version = -1;\n      this.onDecohere();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this.didDecohere();\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this._version < 0) {\n      this.willRecohere(version);\n      this._version = version;\n      if (this._input !== null) {\n        this._input.recohereInput(version);\n      }\n      this.onRecohere(version);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohere(): void {\n    // stub\n  }\n\n  protected onDecohere(): void {\n    // stub\n  }\n\n  protected didDecohere(): void {\n    // stub\n  }\n\n  protected willRecohere(version: number): void {\n    // stub\n  }\n\n  protected onRecohere(version: number): void {\n    // stub\n  }\n\n  protected didRecohere(version: number): void {\n    // stub\n  }\n\n  memoize(): Outlet<O> {\n    const combinator = new Outlet.MemoizeValueCombinator<O>();\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2> {\n    const combinator = new Outlet.MapValueCombinator<O, O2>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<O>): this {\n    const combinator = new Outlet.WatchValueCombinator<O>(func);\n    combinator.bindInput(this);\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapOutlet} from \"./MapOutlet\";\nimport {AbstractOutlet} from \"./AbstractOutlet\";\n\nexport class KeyOutlet<K, V> extends AbstractOutlet<V> {\n  /** @hidden */\n  protected readonly _input: MapOutlet<K, V, unknown>;\n  /** @hidden */\n  protected readonly _key: K;\n\n  constructor(input: MapOutlet<K, V, unknown>, key: K) {\n    super();\n    this._input = input;\n    this._key = key;\n  }\n\n  input(): MapOutlet<K, V, unknown> {\n    return this._input;\n  }\n\n  key(): K {\n    return this._key;\n  }\n\n  get(): V | undefined {\n    return this._input.get(this._key);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {MapInlet} from \"./MapInlet\";\nimport {MapOutlet} from \"./MapOutlet\";\n\nexport abstract class AbstractMapInlet<K, V, O> implements MapInlet<K, V, O> {\n  /** @hidden */\n  protected _input: MapOutlet<K, V, O> | null;\n  /** @hidden */\n  protected _effects: BTree<K, KeyEffect>;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    this._input = null;\n    this._effects = new BTree();\n    this._version = -1;\n  }\n\n  input(): MapOutlet<K, V, O> | null {\n    return this._input;\n  }\n\n  bindInput(input: MapOutlet<K, V, O> | null): void {\n    if (!MapOutlet.is(input)) {\n      throw new TypeError(\"\" + input);\n    }\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    const input = this._input;\n    if (input !== null) {\n      input.unbindOutput(this);\n      this._input = null;\n      input.disconnectInputs();\n    }\n  }\n\n  disconnectOutputs(): void {\n    // nop\n  }\n\n  decohereOutputKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this._effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereOutputKey(key, effect);\n      this._effects = oldEffects.updated(key, effect);\n      this._version = -1;\n      this.onDecohereOutputKey(key, effect);\n      this.didDecohereOutputKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    if (this._version >= 0) {\n      this.willDecohereOutput();\n      this._version = -1;\n      this.onDecohereOutput();\n      this.didDecohereOutput();\n    }\n  }\n\n  recohereOutputKey(key: K, version: number): void {\n    if (this._version < 0) {\n      const oldEffects = this._effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereOutputKey(key, effect, version);\n        this._effects = oldEffects.removed(key);\n        if (this._input !== null) {\n          this._input.recohereInputKey(key, version);\n        }\n        this.onRecohereOutputKey(key, effect, version);\n        this.didRecohereOutputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    if (this._version < 0) {\n      this.willRecohereOutput(version);\n      this._effects.forEach(function (key: K): void {\n        this.recohereOutputKey(key, version);\n      }, this);\n      this._version = version;\n      this.onRecohereOutput(version);\n      this.didRecohereOutput(version);\n    }\n  }\n\n  protected willDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohereOutput(): void {\n    // hook\n  }\n\n  protected onDecohereOutput(): void {\n    // hook\n  }\n\n  protected didDecohereOutput(): void {\n    // hook\n  }\n\n  protected willRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohereOutput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutput(version: number): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Inlet} from \"./Inlet\";\nimport {Outlet} from \"./Outlet\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {MapInlet} from \"./MapInlet\";\nimport {MapOutlet} from \"./MapOutlet\";\nimport {KeyOutlet} from \"./KeyOutlet\";\nimport {FilterFieldsFunction} from \"./function\";\nimport {MapValueFunction, MapFieldValuesFunction} from \"./function\";\nimport {WatchValueFunction, WatchFieldsFunction} from \"./function\";\n\nexport abstract class AbstractMapOutlet<K, V, O> implements MapOutlet<K, V, O> {\n  /** @hidden */\n  protected _effects: BTree<K, KeyEffect>;\n  /** @hidden */\n  protected _outlets: BTree<K, KeyOutlet<K, V>>;\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<O>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    this._effects = new BTree();\n    this._outlets = new BTree();\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  abstract has(key: K): boolean;\n\n  abstract get(): O | undefined;\n\n  abstract get(key: K): V | undefined;\n\n  abstract keyIterator(): Iterator<K>;\n\n  outlet(key: K): Outlet<V> {\n    let outlet = this._outlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet<K, V>(this, key);\n      this._outlets = this._outlets.updated(key, outlet);\n    }\n    return outlet;\n  }\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<O>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<O>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const outlets = this._outlets;\n    if (outlets.isEmpty()) {\n      this._outlets = new BTree();\n      outlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, V>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    const outlets = this._outlets;\n    if (outlets.isEmpty()) {\n      this._outlets = new BTree();\n      outlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, V>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n        output.disconnectOutputs();\n      }\n    }\n  }\n\n  disconnectInputs(): void {\n    // nop\n  }\n\n  decohereInputKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this._effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereInputKey(key, effect);\n      this._effects = oldEffects.updated(key, effect);\n      this._version = -1;\n      this.onDecohereInputKey(key, effect);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        const output = this._outputs![i];\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this._outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereInputKey(key, effect);\n    }\n  }\n\n  decohereInput(): void {\n    if (this._version >= 0) {\n      this.willDecohereInput();\n      this._version = -1;\n      this.onDecohereInput();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this._outlets.forEach(function (key: K, outlet: KeyOutlet<K, V>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohereInput();\n    }\n  }\n\n  recohereInputKey(key: K, version: number): void {\n    if (this._version < 0) {\n      const oldEffects = this._effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereInputKey(key, effect, version);\n        this._effects = oldEffects.removed(key);\n        this.onRecohereInputKey(key, effect, version);\n        for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n          const output = this._outputs![i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this._outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereInputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereInput(version: number): void {\n    if (this._version < 0) {\n      this.willRecohereInput(version);\n      this._effects.forEach(function (key: K): void {\n        this.recohereInputKey(key, version);\n      }, this);\n      this._version = version;\n      this.onRecohereInput(version);\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.didRecohereInput(version);\n    }\n  }\n\n  protected willDecohereInputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereInputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereInputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohereInput(): void {\n    // hook\n  }\n\n  protected onDecohereInput(): void {\n    // hook\n  }\n\n  protected didDecohereInput(): void {\n    // hook\n  }\n\n  protected willRecohereInputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereInputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereInputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereInput(version: number): void {\n    // hook\n  }\n\n  memoize(): MapOutlet<K, V, O> {\n    const combinator = new MapOutlet.MemoizeMapCombinator<K, V, O>();\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  filter(func: FilterFieldsFunction<K, V>): MapOutlet<K, V, Map<K, V>> {\n    const combinator = new MapOutlet.FilterFieldsCombinator<K, V, O>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<K, V, V2>): MapOutlet<K, V2, Map<K, V2>>;\n  map<V2>(func: MapValueFunction<O, V2> | MapFieldValuesFunction<K, V, V2>): Outlet<V2> | MapOutlet<K, V2, Map<K, V2>> {\n    if (func.length === 1) {\n      const combinator = new Outlet.MapValueCombinator<O, V2>(func as MapValueFunction<O, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    } else {\n      const combinator = new MapOutlet.MapFieldValuesCombinator<K, V, V2, O>(func as MapFieldValuesFunction<K, V, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    }\n  }\n\n  reduce<U>(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): Outlet<U> {\n    const combinator = new MapOutlet.ReduceFieldsCombinator<K, V, O, U>(identity, accumulator, combiner);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<O>): this;\n  watch(func: WatchFieldsFunction<K, V>): this;\n  watch(func: WatchValueFunction<O> | WatchFieldsFunction<K, V>): this {\n    if (func.length === 1) {\n      const combinator = new Outlet.WatchValueCombinator<O>(func as WatchValueFunction<O>);\n      combinator.bindInput(this);\n      return this;\n    } else {\n      const combinator = new MapOutlet.WatchFieldsCombinator<K, V, O>(func as WatchFieldsFunction<K, V>);\n      combinator.bindInput(this);\n      return this;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Inlet} from \"./Inlet\";\nimport {Outlet} from \"./Outlet\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {MapInlet} from \"./MapInlet\";\nimport {MapOutlet} from \"./MapOutlet\";\nimport {KeyOutlet} from \"./KeyOutlet\";\nimport {MapInoutlet} from \"./MapInoutlet\";\nimport {FilterFieldsFunction} from \"./function\";\nimport {MapValueFunction, MapFieldValuesFunction} from \"./function\";\nimport {WatchValueFunction, WatchFieldsFunction} from \"./function\";\n\nexport abstract class AbstractMapInoutlet<K, VI, VO, I, O> implements MapInoutlet<K, VI, VO, I, O> {\n  /** @hidden */\n  protected _input: MapOutlet<K, VI, I> | null;\n  /** @hidden */\n  protected _effects: BTree<K, KeyEffect>;\n  /** @hidden */\n  protected _outlets: BTree<K, KeyOutlet<K, VO>>;\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<O>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    this._input = null;\n    this._effects = new BTree();\n    this._outlets = new BTree();\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  abstract has(key: K): boolean;\n\n  abstract get(): O | undefined;\n\n  abstract get(key: K): VO | undefined;\n\n  abstract keyIterator(): Iterator<K>;\n\n  input(): MapOutlet<K, VI, I> | null {\n    return this._input;\n  }\n\n  bindInput(input: MapOutlet<K, VI, I>): void {\n    if (!MapOutlet.is(input)) {\n      throw new TypeError(\"\" + input);\n    }\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    if (this._outputs === null && this._outlets.isEmpty()) {\n      const input = this._input;\n      if (input !== null) {\n        input.unbindOutput(this);\n        this._input = null;\n        input.disconnectInputs();\n      }\n    }\n  }\n\n  outlet(key: K): Outlet<VO> {\n    let outlet = this._outlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet<K, VO>(this, key);\n      this._outlets = this._outlets.updated(key, outlet);\n    }\n    return outlet;\n  }\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<O>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<O>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const outlets = this._outlets;\n    if (outlets.isEmpty()) {\n      this._outlets = new BTree();\n      outlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, VO>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    if (this._input === null) {\n      const outlets = this._outlets;\n      if (outlets.isEmpty()) {\n        this._outlets = new BTree();\n        outlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, VO>) {\n          keyOutlet.disconnectOutputs();\n        }, this);\n      }\n      const outputs = this._outputs;\n      if (outputs !== null) {\n        this._outputs = null;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          output.unbindInput();\n          output.disconnectOutputs();\n        }\n      }\n    }\n  }\n\n  decohereOutputKey(key: K, effect: KeyEffect): void {\n    this.decohereKey(key, effect);\n  }\n\n  decohereInputKey(key: K, effect: KeyEffect): void {\n    this.decohereKey(key, effect);\n  }\n\n  decohereKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this._effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereKey(key, effect);\n      this._effects = oldEffects.updated(key, effect);\n      this._version = -1;\n      this.onDecohereKey(key, effect);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        const output = this._outputs![i];\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this._outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this._version >= 0) {\n      this.willDecohere();\n      this._version = -1;\n      this.onDecohere();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this._outlets.forEach(function (key: K, outlet: KeyOutlet<K, VO>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohere();\n    }\n  }\n\n  recohereOutputKey(key: K, version: number): void {\n    this.recohereKey(key, version);\n  }\n\n  recohereInputKey(key: K, version: number): void {\n    this.recohereKey(key, version);\n  }\n\n  recohereKey(key: K, version: number): void {\n    if (this._version < 0) {\n      const oldEffects = this._effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereKey(key, effect, version);\n        this._effects = oldEffects.removed(key);\n        if (this._input !== null) {\n          this._input.recohereInputKey(key, version);\n        }\n        this.onRecohereKey(key, effect, version);\n        for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n          const output = this._outputs![i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this._outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this._version < 0) {\n      this.willRecohere(version);\n      this._effects.forEach(function (key: K): void {\n        this.recohereKey(key, version);\n      }, this);\n      this._version = version;\n      this.onRecohere(version);\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n\n  memoize(): MapOutlet<K, VO, O> {\n    const combinator = new MapOutlet.MemoizeMapCombinator<K, VO, O>();\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  filter(func: FilterFieldsFunction<K, VO>): MapOutlet<K, VO, Map<K, VO>> {\n    const combinator = new MapOutlet.FilterFieldsCombinator<K, VO, O>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<K, VO, V2>): MapOutlet<K, V2, Map<K, V2>>;\n  map<V2>(func: MapValueFunction<O, V2> | MapFieldValuesFunction<K, VO, V2>): Outlet<V2> | MapOutlet<K, V2, Map<K, V2>> {\n    if (func.length === 1) {\n      const combinator = new Outlet.MapValueCombinator<O, V2>(func as MapValueFunction<O, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    } else {\n      const combinator = new MapOutlet.MapFieldValuesCombinator<K, VO, V2, O>(func as MapFieldValuesFunction<K, VO, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    }\n  }\n\n  reduce<U>(identity: U, accumulator: (result: U, element: VO) => U, combiner: (result: U, result2: U) => U): Outlet<U> {\n    const combinator = new MapOutlet.ReduceFieldsCombinator<K, VO, O, U>(identity, accumulator, combiner);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<O>): this;\n  watch(func: WatchFieldsFunction<K, VO>): this;\n  watch(func: WatchValueFunction<O> | WatchFieldsFunction<K, VO>): this {\n    if (func.length === 1) {\n      const combinator = new Outlet.WatchValueCombinator<O>(func as WatchValueFunction<O>);\n      combinator.bindInput(this);\n      return this;\n    } else {\n      const combinator = new MapOutlet.WatchFieldsCombinator<K, VO, O>(func as WatchFieldsFunction<K, VO>);\n      combinator.bindInput(this);\n      return this;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Inlet} from \"./Inlet\";\nimport {Outlet} from \"./Outlet\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {MapOutlet} from \"./MapOutlet\";\nimport {MapInletOutlet} from \"./MapInletOutlet\";\nimport {MapValueFunction, WatchValueFunction} from \"./function\";\n\nexport abstract class AbstractMapInletOutlet<K, V, I, O> implements MapInletOutlet<K, V, I, O> {\n  /** @hidden */\n  protected _input: MapOutlet<K, V, I> | null;\n  /** @hidden */\n  protected _effects: BTree<K, KeyEffect>;\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<O>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    this._input = null;\n    this._effects = new BTree();\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  abstract get(): O | undefined;\n\n  input(): MapOutlet<K, V, I> | null {\n    return this._input;\n  }\n\n  bindInput(input: MapOutlet<K, V, I>): void {\n    if (!MapOutlet.is(input)) {\n      throw new TypeError(\"\" + input);\n    }\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    if (this._outputs === null) {\n      const input = this._input;\n      if (input !== null) {\n        input.unbindOutput(this);\n        this._input = null;\n        input.disconnectInputs();\n      }\n    }\n  }\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<O>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<O>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    if (this._input === null) {\n      const outputs = this._outputs;\n      if (outputs !== null) {\n        this._outputs = null;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          output.unbindInput();\n          output.disconnectOutputs();\n        }\n      }\n    }\n  }\n\n  decohereOutputKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this._effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereOutputKey(key, effect);\n      this._effects = oldEffects.updated(key, effect);\n      this._version = -1;\n      this.onDecohereOutputKey(key, effect);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        const output = this._outputs![i];\n        output.decohereOutput();\n      }\n      this.didDecohereOutputKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this._version >= 0) {\n      this.willDecohere();\n      this._version = -1;\n      this.onDecohere();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this.didDecohere();\n    }\n  }\n\n  recohereOutputKey(key: K, version: number): void {\n    if (this._version < 0) {\n      const oldEffects = this._effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereOutputKey(key, effect, version);\n        this._effects = oldEffects.removed(key);\n        if (this._input !== null) {\n          this._input.recohereInputKey(key, version);\n        }\n        this.onRecohereOutputKey(key, effect, version);\n        this.didRecohereOutputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this._version < 0) {\n      this.willRecohere(version);\n      this._effects.forEach(function (key: K): void {\n        this.recohereOutputKey(key, version);\n      }, this);\n      this._version = version;\n      this.onRecohere(version);\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n\n  memoize(): Outlet<O> {\n    const combinator = new Outlet.MemoizeValueCombinator<O>();\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2> {\n    const combinator = new Outlet.MapValueCombinator<O, O2>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<O>): this {\n    const combinator = new Outlet.WatchValueCombinator<O>(func);\n    combinator.bindInput(this);\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Inlet} from \"./Inlet\";\nimport {Outlet} from \"./Outlet\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {MapInlet} from \"./MapInlet\";\nimport {MapOutlet} from \"./MapOutlet\";\nimport {KeyOutlet} from \"./KeyOutlet\";\nimport {FilterFieldsFunction} from \"./function\";\nimport {MapInletMapOutlet} from \"./MapInletMapOutlet\";\nimport {MapValueFunction, MapFieldValuesFunction} from \"./function\";\nimport {WatchValueFunction, WatchFieldsFunction} from \"./function\";\n\nexport abstract class AbstractMapInletMapOutlet<KI, KO, VI, VO, I, O> implements MapInletMapOutlet<KI, KO, VI, VO, I, O> {\n  /** @hidden */\n  protected _input: MapOutlet<KI, VI, I> | null;\n  /** @hidden */\n  protected _outputEffects: BTree<KI, KeyEffect>;\n  /** @hidden */\n  protected _inputEffects: BTree<KO, KeyEffect>;\n  /** @hidden */\n  protected _outlets: BTree<KO, KeyOutlet<KO, VO>>;\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<O>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    this._input = null;\n    this._outputEffects = new BTree();\n    this._inputEffects = new BTree();\n    this._outlets = new BTree();\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  abstract has(key: KO): boolean;\n\n  abstract get(): O;\n\n  abstract get(key: KO): VO | undefined;\n\n  abstract keyIterator(): Iterator<KO>;\n\n  input(): MapOutlet<KI, VI, I> | null {\n    return this._input;\n  }\n\n  bindInput(input: MapOutlet<KI, VI, I>): void {\n    if (!MapOutlet.is(input)) {\n      throw new TypeError(\"\" + input);\n    }\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    if (this._outputs === null && this._outlets.isEmpty()) {\n      const input = this._input;\n      if (input !== null) {\n        input.unbindOutput(this);\n        this._input = null;\n        input.disconnectInputs();\n      }\n    }\n  }\n\n  outlet(key: KO): Outlet<VO> {\n    let outlet = this._outlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet<KO, VO>(this, key);\n      this._outlets = this._outlets.updated(key, outlet);\n    }\n    return outlet;\n  }\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<O>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<O>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const outlets = this._outlets;\n    if (outlets.isEmpty()) {\n      this._outlets = new BTree();\n      outlets.forEach(function (key: KO, keyOutlet: KeyOutlet<KO, VO>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    if (this._input === null) {\n      const outlets = this._outlets;\n      if (outlets.isEmpty()) {\n        this._outlets = new BTree();\n        outlets.forEach(function (key: KO, keyOutlet: KeyOutlet<KO, VO>) {\n          keyOutlet.disconnectOutputs();\n        }, this);\n      }\n      const outputs = this._outputs;\n      if (outputs !== null) {\n        this._outputs = null;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          output.unbindInput();\n          output.disconnectOutputs();\n        }\n      }\n    }\n  }\n\n  decohereOutputKey(key: KI, effect: KeyEffect): void {\n    const oldOutputEffects = this._outputEffects;\n    if (oldOutputEffects.get(key) !== effect) {\n      this.willDecohereOutputKey(key, effect);\n      this._outputEffects = oldOutputEffects.updated(key, effect);\n      this._version = -1;\n      this.onDecohereOutputKey(key, effect);\n      this.didDecohereOutputKey(key, effect);\n    }\n  }\n\n  decohereInputKey(key: KO, effect: KeyEffect): void {\n    const oldInputEffects = this._inputEffects;\n    if (oldInputEffects.get(key) !== effect) {\n      this.willDecohereInputKey(key, effect);\n      this._inputEffects = oldInputEffects.updated(key, effect);\n      this._version = -1;\n      this.onDecohereInputKey(key, effect);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        const output = this._outputs![i];\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this._outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereInputKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this._version >= 0) {\n      this.willDecohere();\n      this._version = -1;\n      this.onDecohere();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this._outlets.forEach(function (key: KO, outlet: KeyOutlet<KO, VO>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohere();\n    }\n  }\n\n  recohereOutputKey(key: KI, version: number): void {\n    if (this._version < 0) {\n      const oldOutputEffects = this._outputEffects;\n      const effect = oldOutputEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereOutputKey(key, effect, version);\n        this._outputEffects = oldOutputEffects.removed(key);\n        if (this._input !== null) {\n          this._input.recohereInputKey(key, version);\n        }\n        this.onRecohereOutputKey(key, effect, version);\n        this.didRecohereOutputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereInputKey(key: KO, version: number): void {\n    if (this._version < 0) {\n      const oldInputEffects = this._inputEffects;\n      const oldEffect = oldInputEffects.get(key);\n      if (oldEffect !== void 0) {\n        const newEffect = this.willRecohereInputKey(key, oldEffect, version);\n        if (oldEffect !== newEffect) {\n          this.decohereInputKey(key, newEffect);\n        }\n        this._inputEffects = oldInputEffects.removed(key);\n        this.onRecohereInputKey(key, newEffect, version);\n        for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n          const output = this._outputs![i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this._outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereInputKey(key, newEffect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this._version < 0) {\n      this.willRecohere(version);\n      this._outputEffects.forEach(function (key: KI): void {\n        this.recohereOutputKey(key, version);\n      }, this);\n      this._inputEffects.forEach(function (key: KO): void {\n        this.recohereInputKey(key, version);\n      }, this);\n      this._version = version;\n      this.onRecohere(version);\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohereOutputKey(key: KI, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereOutputKey(key: KI, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereOutputKey(key: KI, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohereInputKey(key: KO, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereInputKey(key: KO, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereInputKey(key: KO, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohereOutputKey(key: KI, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutputKey(key: KI, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutputKey(key: KI, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohereInputKey(key: KO, effect: KeyEffect, version: number): KeyEffect {\n    return effect;\n  }\n\n  protected onRecohereInputKey(key: KO, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereInputKey(key: KO, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n\n  memoize(): MapOutlet<KO, VO, O> {\n    const combinator = new MapOutlet.MemoizeMapCombinator<KO, VO, O>();\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  filter(func: FilterFieldsFunction<KO, VO>): MapOutlet<KO, VO, Map<KO, VO>> {\n    const combinator = new MapOutlet.FilterFieldsCombinator<KO, VO, O>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<KO, VO, V2>): MapOutlet<KO, V2, Map<KO, V2>>;\n  map<V2>(func: MapValueFunction<O, V2> | MapFieldValuesFunction<KO, VO, V2>): Outlet<V2> | MapOutlet<KO, V2, Map<KO, V2>> {\n    if (func.length === 1) {\n      const combinator = new Outlet.MapValueCombinator<O, V2>(func as MapValueFunction<O, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    } else {\n      const combinator = new MapOutlet.MapFieldValuesCombinator<KO, VO, V2, O>(func as MapFieldValuesFunction<KO, VO, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    }\n  }\n\n  reduce<U>(identity: U, accumulator: (result: U, element: VO) => U, combiner: (result: U, result2: U) => U): Outlet<U> {\n    const combinator = new MapOutlet.ReduceFieldsCombinator<KO, VO, O, U>(identity, accumulator, combiner);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<O>): this;\n  watch(func: WatchFieldsFunction<KO, VO>): this;\n  watch(func: WatchValueFunction<O> | WatchFieldsFunction<KO, VO>): this {\n    if (func.length === 1) {\n      const combinator = new Outlet.WatchValueCombinator<O>(func as WatchValueFunction<O>);\n      combinator.bindInput(this);\n      return this;\n    } else {\n      const combinator = new MapOutlet.WatchFieldsCombinator<KO, VO, O>(func as WatchFieldsFunction<KO, VO>);\n      combinator.bindInput(this);\n      return this;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Outlet} from \"./Outlet\";\nimport {AbstractInlet} from \"./AbstractInlet\";\n\n/**\n * An `Inlet` that decoheres a parameterized `Outlet` whenever the `Inlet`\n * decoheres, and that recoheres the parameterized `Outlet` whenever the\n * `Inlet` recoheres.\n */\nexport class OutletInlet<I> extends AbstractInlet<I> {\n  /** @hidden */\n  protected readonly _outlet: Outlet<unknown>;\n\n  constructor(outlet: Outlet<unknown>) {\n    super();\n    this._outlet = outlet;\n  }\n\n  outlet(): Outlet<unknown> {\n    return this._outlet;\n  }\n\n  protected onDecohereOutput(): void {\n    this._outlet.decohereInput();\n  }\n\n  protected onRecohereOutput(version: number): void {\n    this._outlet.recohereInput(version);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Outlet} from \"./Outlet\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {AbstractMapInlet} from \"./AbstractMapInlet\";\n\n/**\n * A `MapInlet` that decoheres a parameterized `Outlet` whenever the\n * `MapInlet` decoheres, and that recoheres the parameterized `Outlet`\n * whenever the `MapInlet` recoheres.\n */\nexport class OutletMapInlet<K, V, O> extends AbstractMapInlet<K, V, O> {\n  /** @hidden */\n  protected readonly _outlet: Outlet<unknown>;\n\n  constructor(outlet: Outlet<unknown>) {\n    super();\n    this._outlet = outlet;\n  }\n\n  outlet(): Outlet<unknown> {\n    return this._outlet;\n  }\n\n  protected onDecohereOutputKey(key: K, effect: KeyEffect): void {\n    this._outlet.decohereInput();\n  }\n\n  protected onDecohereOutput(): void {\n    this._outlet.decohereInput();\n  }\n\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    this._outlet.recohereInput(version);\n  }\n\n  protected onRecohereOutput(version: number): void {\n    this._outlet.recohereInput(version);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractOutlet} from \"./AbstractOutlet\";\n\nexport class ValueInput<O> extends AbstractOutlet<O> {\n  /** @hidden */\n  protected _state: O | undefined;\n\n  constructor(state?: O) {\n    super();\n    this._state = state;\n  }\n\n  get(): O | undefined {\n    return this._state;\n  }\n\n  set(newState: O | undefined): O | undefined {\n    const oldState = this._state;\n    this._state = newState;\n    this.decohereInput();\n    return oldState;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractInlet} from \"./AbstractInlet\";\n\nexport class ValueOutput<I> extends AbstractInlet<I> {\n  /** @hidden */\n  protected _state: I | undefined;\n\n  constructor(state?: I) {\n    super();\n    this._state = state;\n  }\n\n  get(): I | undefined {\n    return this._state;\n  }\n\n  protected onRecohereOutput(version: number): void {\n    if (this._input !== null) {\n      this._state = this._input.get();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {AbstractMapOutlet} from \"./AbstractMapOutlet\";\n\nexport class MapInput<K, V> extends AbstractMapOutlet<K, V, Map<K, V>> {\n  /** @hidden */\n  protected _state: BTree<K, V>;\n\n  constructor(state: BTree<K, V> = new BTree()) {\n    super();\n    this._state = state;\n    state.forEach(function (key: K): void {\n      this._effects = this._effects.updated(key, KeyEffect.Update);\n    }, this);\n  }\n\n  has(key: K): boolean {\n    return this._state.has(key);\n  }\n\n  get(): Map<K, V> | undefined;\n  get(key: K): V | undefined;\n  get(key?: K): Map<K, V> | V | undefined {\n    if (key === void 0) {\n      return this._state;\n    } else {\n      return this._state.get(key);\n    }\n  }\n\n  set(key: K, newValue: V): V | undefined {\n    const oldValue = this._state.get(key);\n    this._state = this._state.updated(key, newValue);\n    this.decohereInputKey(key, KeyEffect.Update);\n    return oldValue;\n  }\n\n  delete(key: K): this {\n    const oldState = this._state;\n    const newState = oldState.removed(key);\n    if (oldState !== newState) {\n      this._state = newState;\n      this.decohereInputKey(key, KeyEffect.Remove);\n    }\n    return this;\n  }\n\n  keyIterator(): Cursor<K> {\n    return this._state.keys();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {AbstractMapInlet} from \"./AbstractMapInlet\";\n\nexport class MapOutput<K, V> extends AbstractMapInlet<K, V, Map<K, V>> {\n  /** @hidden */\n  protected _state: BTree<K, V>;\n\n  constructor() {\n    super();\n    this._state = new BTree();\n  }\n\n  get(): Map<K, V> {\n    return this._state;\n  }\n\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      if (this._input !== null) {\n        const value = this._input.get(key);\n        if (value !== void 0) {\n          this._state = this._state.updated(key, value);\n        } else {\n          this._state = this._state.removed(key);\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this._state = this._state.removed(key);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Outlet} from \"../Outlet\";\nimport {AbstractInoutlet} from \"../AbstractInoutlet\";\n\nexport class MemoizeValueCombinator<IO> extends AbstractInoutlet<IO, IO> {\n  /** @hidden */\n  protected _state: IO | undefined;\n\n  get(): IO | undefined {\n    return this._state;\n  }\n\n  protected onRecohere(version: number): void {\n    if (this._input !== null) {\n      this._state = this._input.get();\n    }\n  }\n\n  memoize(): Outlet<IO> {\n    return this;\n  }\n}\nOutlet.MemoizeValueCombinator = MemoizeValueCombinator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"../KeyEffect\";\nimport {MapOutlet} from \"../MapOutlet\";\nimport {AbstractMapInoutlet} from \"../AbstractMapInoutlet\";\n\nexport class MemoizeMapCombinator<K, V, IO> extends AbstractMapInoutlet<K, V, V, IO, IO> {\n  /** @hidden */\n  protected _state: IO | undefined;\n  /** @hidden */\n  protected _cache: BTree<K, V>;\n\n  constructor() {\n    super();\n    this._cache = new BTree();\n  }\n\n  has(key: K): boolean {\n    return this._cache.has(key);\n  }\n\n  get(): IO | undefined;\n  get(key: K): V | undefined;\n  get(key?: K): IO | V | undefined {\n    if (key === void 0) {\n      if (this._state === void 0 && this._input !== null) {\n        this._state = this._input.get();\n      }\n      return this._state;\n    } else {\n      return this._cache.get(key);\n    }\n  }\n\n  keyIterator(): Iterator<K> {\n    return this._cache.keys();\n  }\n\n  protected onRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      if (this._input !== null) {\n        const value = this._input.get(key);\n        if (value !== void 0) {\n          this._cache = this._cache.updated(key, value);\n        } else {\n          this._cache = this._cache.removed(key);\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this._cache = this._cache.removed(key);\n    }\n  }\n\n  protected onRecohere(version: number): void {\n    this._state = void 0;\n  }\n\n  memoize(): MapOutlet<K, V, IO> {\n    return this;\n  }\n}\nMapOutlet.MemoizeMapCombinator = MemoizeMapCombinator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"../KeyEffect\";\nimport {AbstractMapInletMapOutlet} from \"../AbstractMapInletMapOutlet\";\n\nexport abstract class FilterFieldsOperator<K, V, I> extends AbstractMapInletMapOutlet<K, K, V, V, I, Map<K, V>> {\n  has(key: K): boolean {\n    if (this._input !== null) {\n      const value = this._input.get(key);\n      return value !== void 0 && this.evaluate(key, value);\n    }\n    return false;\n  }\n\n  get(): Map<K, V>;\n  get(key: K): V | undefined;\n  get(key?: K): Map<K, V> | V | undefined {\n    if (key === void 0) {\n      const output = new BTree<K, V>();\n      const keys = this.keyIterator();\n      do {\n        const next = keys.next();\n        if (!next.done) {\n          const key = next.value!;\n          const value = this._input!.get(key);\n          if (value !== void 0 && this.evaluate(key, value)) {\n            output.set(key, value);\n          }\n          continue;\n        }\n        break;\n      } while (true);\n      return output;\n    } else {\n      if (this._input !== null) {\n        const value = this._input.get(key);\n        if (value !== void 0 && this.evaluate(key, value)) {\n          return value;\n        }\n      }\n      return void 0;\n    }\n  }\n\n  keyIterator(): Iterator<K> {\n    if (this._input !== null) {\n      return this._input.keyIterator(); // TODO: filter keys\n    } else {\n      return Cursor.empty();\n    }\n  }\n\n  protected onDecohereOutputKey(key: K, effect: KeyEffect): void {\n    this.decohereInputKey(key, effect);\n  }\n\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    this.recohereInputKey(key, version);\n  }\n\n  protected willRecohereInputKey(key: K, effect: KeyEffect, version: number): KeyEffect {\n    if (effect === KeyEffect.Update) {\n      if (this._input !== null) {\n        const value = this._input.get(key);\n        if (value === void 0 || !this.evaluate(key, value)) {\n          return KeyEffect.Remove;\n        }\n      }\n    }\n    return effect;\n  }\n\n  abstract evaluate(key: K, value: V): boolean;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapOutlet} from \"../MapOutlet\";\nimport {FilterFieldsFunction} from \"../function\";\nimport {FilterFieldsOperator} from \"./FilterFieldsOperator\";\n\nexport class FilterFieldsCombinator<K, V, I> extends FilterFieldsOperator<K, V, I> {\n  /** @hidden */\n  protected readonly _func: FilterFieldsFunction<K, V>;\n\n  constructor(func: FilterFieldsFunction<K, V>) {\n    super();\n    this._func = func;\n  }\n\n  evaluate(key: K, value: V): boolean {\n    return this._func(key, value);\n  }\n}\nMapOutlet.FilterFieldsCombinator = FilterFieldsCombinator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractInoutlet} from \"../AbstractInoutlet\";\n\nexport abstract class MapValueOperator<I, O> extends AbstractInoutlet<I, O> {\n  get(): O | undefined {\n    if (this._input !== null) {\n      return this.evaluate(this._input.get());\n    } else {\n      return void 0;\n    }\n  }\n\n  abstract evaluate(value: I | undefined): O | undefined;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Outlet} from \"../Outlet\";\nimport {MapValueFunction} from \"../function\";\nimport {MapValueOperator} from \"./MapValueOperator\";\n\nexport class MapValueCombinator<I, O> extends MapValueOperator<I, O> {\n  /** @hidden */\n  protected readonly _func: MapValueFunction<I, O>;\n\n  constructor(func: MapValueFunction<I, O>) {\n    super();\n    this._func = func;\n  }\n\n  evaluate(value: I | undefined): O | undefined {\n    if (value !== void 0) {\n      return this._func(value);\n    } else {\n      return void 0;\n    }\n  }\n}\nOutlet.MapValueCombinator = MapValueCombinator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {AbstractMapInoutlet} from \"../AbstractMapInoutlet\";\n\nexport abstract class MapFieldValuesOperator<K, VI, VO, I> extends AbstractMapInoutlet<K, VI, VO, I, Map<K, VO>> {\n  has(key: K): boolean {\n    if (this._input !== null) {\n      return this._input.has(key);\n    } else {\n      return false;\n    }\n  }\n\n  get(): Map<K, VO>;\n  get(key: K): VO | undefined;\n  get(key?: K): Map<K, VO> | VO | undefined {\n    if (key === void 0) {\n      const output = new BTree<K, VO>();\n      const keys = this.keyIterator();\n      do {\n        const next = keys.next();\n        if (!next.done) {\n          const key = next.value!;\n          const value = this.evaluate(key, this._input!.get(key));\n          if (value !== void 0) {\n            output.set(key, value);\n          }\n          continue;\n        }\n        break;\n      } while (true);\n      return output;\n    } else {\n      if (this._input !== null) {\n        return this.evaluate(key, this._input.get(key));\n      } else {\n        return void 0;\n      }\n    }\n  }\n\n  keyIterator(): Iterator<K> {\n    if (this._input !== null) {\n      return this._input.keyIterator(); // TODO: filter keys\n    } else {\n      return Cursor.empty();\n    }\n  }\n\n  abstract evaluate(key: K, value: VI | undefined): VO | undefined;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapOutlet} from \"../MapOutlet\";\nimport {MapFieldValuesFunction} from \"../function\";\nimport {MapFieldValuesOperator} from \"./MapFieldValuesOperator\";\n\nexport class MapFieldValuesCombinator<K, VI, VO, I> extends MapFieldValuesOperator<K, VI, VO, I> {\n  /** @hidden */\n  protected readonly _func: MapFieldValuesFunction<K, VI, VO>;\n\n  constructor(func: MapFieldValuesFunction<K, VI, VO> ) {\n    super();\n    this._func = func;\n  }\n\n  evaluate(key: K, value: VI | undefined): VO | undefined {\n    if (value !== void 0) {\n      return this._func(key, value);\n    } else {\n      return void 0;\n    }\n  }\n}\nMapOutlet.MapFieldValuesCombinator = MapFieldValuesCombinator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"../KeyEffect\";\nimport {AbstractMapInletOutlet} from \"../AbstractMapInletOutlet\";\n\nexport abstract class ReduceFieldsOperator<K, V, I, O> extends AbstractMapInletOutlet<K, V, I, O> {\n  /** @hidden */\n  protected _state: BTree<K, V, O>;\n\n  constructor() {\n    super();\n    this._state = new BTree();\n  }\n\n  get(): O | undefined {\n    return this._state.reduced(this.identity(), this.accumulate.bind(this), this.combine.bind(this));\n  }\n\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      if (this._input !== null) {\n        const value = this._input.get(key);\n        if (value !== void 0) {\n          this._state.set(key, value);\n        } else {\n          this._state.delete(key);\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this._state.delete(key);\n    }\n  }\n\n  abstract identity(): O;\n\n  abstract accumulate(result: O, value: V): O;\n\n  abstract combine(result: O, value: O): O;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapOutlet} from \"../MapOutlet\";\nimport {ReduceFieldsOperator} from \"./ReduceFieldsOperator\";\n\nexport class ReduceFieldsCombinator<K, V, I, O> extends ReduceFieldsOperator<K, V, I, O> {\n  /** @hidden */\n  protected readonly _identity: O;\n  /** @hidden */\n  protected readonly _accumulator: (result: O, element: V) => O;\n  /** @hidden */\n  protected readonly _combiner: (result: O, result2: O) => O;\n\n  constructor(identity: O, accumulator: (result: O, element: V) => O,\n              combiner: (result: O, result2: O) => O) {\n    super();\n    this._identity = identity;\n    this._accumulator = accumulator;\n    this._combiner = combiner;\n  }\n\n  get(): O {\n    return this._state.reduced(this._identity, this._accumulator, this._combiner);\n  }\n\n  identity(): O {\n    return this._identity;\n  }\n\n  accumulate(result: O, value: V): O {\n    return this._accumulator(result, value);\n  }\n\n  combine(result: O, value: O): O {\n    return this._combiner(result, value);\n  }\n}\nMapOutlet.ReduceFieldsCombinator = ReduceFieldsCombinator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractInlet} from \"../AbstractInlet\";\n\nexport abstract class WatchValueOperator<I> extends AbstractInlet<I> {\n  onRecohereOutput(version: number): void {\n    if (this._input !== null) {\n      this.evaluate(this._input.get());\n    }\n  }\n\n  abstract evaluate(value: I | undefined): void;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Outlet} from \"../Outlet\";\nimport {WatchValueFunction} from \"../function\";\nimport {WatchValueOperator} from \"./WatchValueOperator\";\n\nexport class WatchValueCombinator<I> extends WatchValueOperator<I> {\n  /** @hidden */\n  protected readonly _func: WatchValueFunction<I>;\n\n  constructor(func: WatchValueFunction<I>) {\n    super();\n    this._func = func;\n  }\n\n  evaluate(value: I | undefined): void {\n    if (value !== void 0) {\n      return this._func(value);\n    }\n  }\n}\nOutlet.WatchValueCombinator = WatchValueCombinator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {KeyEffect} from \"../KeyEffect\";\nimport {AbstractMapInlet} from \"../AbstractMapInlet\";\n\nexport abstract class WatchFieldsOperator<K, V, O> extends AbstractMapInlet<K, V, O> {\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      if (this._input !== null) {\n        this.evaluate(key, this._input.get(key));\n      } else {\n        this.evaluate(key, void 0);\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this.evaluate(key, void 0);\n    }\n  }\n\n  abstract evaluate(key: K, value: V | undefined): void;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapOutlet} from \"../MapOutlet\";\nimport {WatchFieldsFunction} from \"../function\";\nimport {WatchFieldsOperator} from \"./WatchFieldsOperator\";\n\nexport class WatchFieldsCombinator<K, V, O> extends WatchFieldsOperator<K, V, O> {\n  /** @hidden */\n  protected readonly _func: WatchFieldsFunction<K, V>;\n\n  constructor(func: WatchFieldsFunction<K, V>) {\n    super();\n    this._func = func;\n  }\n\n  evaluate(key: K, value: V | undefined): void {\n    if (value !== void 0) {\n      return this._func(key, value);\n    }\n  }\n}\nMapOutlet.WatchFieldsCombinator = WatchFieldsCombinator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Streamlet} from \"./Streamlet\";\nimport {GenericStreamlet} from \"./GenericStreamlet\";\nimport {AbstractInlet} from \"./AbstractInlet\";\n\n/**\n * An `Inlet` that decoheres a parameterized `Streamlet` whenever the `Inlet`\n * decoheres, and that recoheres the parameterized `Streamlet` whenever the\n * `Inlet` recoheres.\n */\nexport class StreamletInlet<I> extends AbstractInlet<I> {\n  /** @hidden */\n  protected readonly _streamlet: Streamlet<I, unknown>;\n\n  constructor(streamlet: Streamlet<I, unknown>) {\n    super();\n    this._streamlet = streamlet;\n  }\n\n  streamlet(): Streamlet<I, unknown> {\n    return this._streamlet;\n  }\n\n  protected willDecohereOutput(): void {\n    const streamlet = this._streamlet as GenericStreamlet<I, unknown>;\n    if (streamlet.willDecohereInlet !== void 0) {\n      streamlet.willDecohereInlet(this);\n    }\n  }\n\n  protected didDecohereOutput(): void {\n    const streamlet = this._streamlet as GenericStreamlet<I, unknown>;\n    if (streamlet.didDecohereInlet !== void 0) {\n      streamlet.didDecohereInlet(this);\n    } else {\n      streamlet.decohere();\n    }\n  }\n\n  protected willRecohereOutput(version: number): void {\n    const streamlet = this._streamlet as GenericStreamlet<I, unknown>;\n    if (streamlet.willRecohereInlet !== void 0) {\n      streamlet.willRecohereInlet(this, version);\n    }\n  }\n\n  protected didRecohereOutput(version: number): void {\n    const streamlet = this._streamlet as GenericStreamlet<I, unknown>;\n    if (streamlet.didRecohereInlet !== void 0) {\n      streamlet.didRecohereInlet(this, version);\n    } else {\n      streamlet.recohere(version);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Streamlet} from \"./Streamlet\";\nimport {GenericStreamlet} from \"./GenericStreamlet\";\nimport {AbstractOutlet} from \"./AbstractOutlet\";\n\n/**\n * An `Outlet` that decoheres a parameterized `Streamlet` whenever the\n * `Outlet` decoheres, and which gets its state from the parameterized\n * `Streamlet`.\n */\nexport class StreamletOutlet<O> extends AbstractOutlet<O> {\n  /** @hidden */\n  protected readonly _streamlet: Streamlet<unknown, O>;\n\n  constructor(streamlet: Streamlet<unknown, O>) {\n    super();\n    this._streamlet = streamlet;\n  }\n\n  streamlet(): Streamlet<unknown, O> {\n    return this._streamlet;\n  }\n\n  get(): O | undefined {\n    const streamlet = this._streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.getOutput !== void 0) {\n      return streamlet.getOutput(this);\n    }\n    return void 0;\n  }\n\n  protected willDecohereInput(): void {\n    const streamlet = this._streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.willDecohereOutlet !== void 0) {\n      streamlet.willDecohereOutlet(this);\n    }\n  }\n\n  protected didDecohereInput(): void {\n    const streamlet = this._streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.didDecohereOutlet !== void 0) {\n      streamlet.didDecohereOutlet(this);\n    } else {\n      streamlet.decohere();\n    }\n  }\n\n  protected willRecohereInput(version: number): void {\n    const streamlet = this._streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.willRecohereOutlet !== void 0) {\n      streamlet.willRecohereOutlet(this, version);\n    }\n  }\n\n  protected didRecohereInput(version: number): void {\n    const streamlet = this._streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.didRecohereOutlet !== void 0) {\n      streamlet.didRecohereOutlet(this, version);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Streamlet} from \"./Streamlet\";\nimport {GenericStreamlet} from \"./GenericStreamlet\";\nimport {AbstractInoutlet} from \"./AbstractInoutlet\";\n\n/**\n * An `Inoutlet` that decoheres a parameterized `Streamlet` whenever the\n * `Inoutlet` decoheres, that recoheres the parameterized `Streamlet`\n * whenever the `Inoutlet` recoheres, and which gets its state from the\n * parameterized `Streamlet`.\n */\nexport class StreamletInoutlet<I, O> extends AbstractInoutlet<I, O> {\n  /** @hidden */\n  protected readonly _streamlet: Streamlet<I, O>;\n\n  constructor(streamlet: Streamlet<I, O>) {\n    super();\n    this._streamlet = streamlet;\n  }\n\n  streamlet(): Streamlet<I, O> {\n    return this._streamlet;\n  }\n\n  get(): O | undefined {\n    const streamlet = this._streamlet as GenericStreamlet<I, O>;\n    if (streamlet.getOutput !== void 0) {\n      const output = streamlet.getOutput(this);\n      if (output !== void 0) {\n        return output;\n      }\n    }\n    if (this._input !== null) {\n      return this._input.get() as O | undefined;\n    }\n    return void 0;\n  }\n\n  protected willDecohere(): void {\n    const streamlet = this._streamlet as GenericStreamlet<I, O>;\n    if (streamlet.willDecohereOutlet !== void 0) {\n      streamlet.willDecohereOutlet(this);\n    }\n  }\n\n  protected didDecohere(): void {\n    const streamlet = this._streamlet as GenericStreamlet<I, O>;\n    if (streamlet.didDecohereOutlet !== void 0) {\n      streamlet.didDecohereOutlet(this);\n    } else {\n      streamlet.decohere();\n    }\n  }\n\n  protected willRecohere(version: number): void {\n    const streamlet = this._streamlet as GenericStreamlet<I, O>;\n    if (streamlet.willRecohereOutlet !== void 0) {\n      streamlet.willRecohereOutlet(this, version);\n    }\n  }\n\n  protected didRecohere(version: number): void {\n    const streamlet = this._streamlet as GenericStreamlet<I, O>;\n    if (streamlet.didRecohereOutlet !== void 0) {\n      streamlet.didRecohereOutlet(this, version);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {InletType, InletOptions, Inlet} from \"./Inlet\";\nimport {OutletType, OutletOptions, Outlet} from \"./Outlet\";\nimport {InoutletType, InoutletOptions, Inoutlet} from \"./Inoutlet\";\nimport {StreamletContext} from \"./StreamletContext\";\nimport {StreamletScope} from \"./StreamletScope\";\nimport {Streamlet} from \"./Streamlet\";\nimport {GenericStreamlet} from \"./GenericStreamlet\";\nimport {StreamletInlet} from \"./StreamletInlet\";\nimport {StreamletOutlet} from \"./StreamletOutlet\";\nimport {StreamletInoutlet} from \"./StreamletInoutlet\";\n\n/** @hidden */\nexport class InletDescriptor {\n  readonly key: string;\n  readonly name: string;\n  readonly type: InletType;\n\n  constructor(key: string, name: string, type: InletType) {\n    this.key = key;\n    this.name = name;\n    this.type = type;\n  }\n}\n\n/** @hidden */\nexport class OutletDescriptor {\n  readonly key: string;\n  readonly name: string;\n  readonly type: OutletType;\n\n  constructor(key: string, name: string, type: OutletType) {\n    this.key = key;\n    this.name = name;\n    this.type = type;\n  }\n}\n\n/** @hidden */\nexport class InoutletDescriptor {\n  readonly key: string;\n  readonly name: string;\n  readonly type: InoutletType;\n\n  constructor(key: string, name: string, type: InoutletType) {\n    this.key = key;\n    this.name = name;\n    this.type = type;\n  }\n}\n\n/** @hidden */\nexport interface StreamletClass {\n  _inlets?: {[name: string]: InletDescriptor | InoutletDescriptor | undefined};\n  _outlets?: {[name: string]: OutletDescriptor | InoutletDescriptor | undefined};\n  _inoutlets?: {[name: string]: InoutletDescriptor | undefined};\n}\n\nexport abstract class AbstractStreamlet<I = unknown, O = I> implements GenericStreamlet<I, O> {\n  protected scope: StreamletScope<O> | null;\n  protected context: StreamletContext | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor(scope: StreamletScope<O> | null = null) {\n    this.scope = scope;\n    this._version = -1;\n  }\n\n  protected streamletClass(): StreamletClass {\n    return (this as any).__proto__ as StreamletClass;\n  }\n\n  streamletScope(): StreamletScope<O> | null {\n    return this.scope;\n  }\n\n  setStreamletScope(scope: StreamletScope<O> | null): void {\n    this.scope = scope;\n  }\n\n  streamletContext(): StreamletContext | null {\n    if (this.context !== null) {\n      return this.context;\n    }\n    const scope = this.streamletScope();\n    if (scope !== null) {\n      return scope.streamletContext();\n    }\n    return null;\n  }\n\n  setStreamletContext(context: StreamletContext | null): void {\n    this.context = context;\n  }\n\n  inlet(key: string): Inlet<I> | null;\n  inlet<I2 extends I>(): Inlet<I2>;\n  inlet(key?: string): Inlet<I> | null {\n    if (key === void 0) {\n      return new StreamletInlet<I>(this);\n    } else {\n      return AbstractStreamlet.reflectInletKey<I, O>(key, this, this.streamletClass());\n    }\n  }\n\n  bindInput(key: string, input: Outlet<I>): void {\n    const inlet = this.inlet(key);\n    if (inlet === null) {\n      throw new Error(\"\" + key);\n    }\n    inlet.bindInput(input);\n  }\n\n  unbindInput(key: string): void {\n    const inlet = this.inlet(key);\n    if (inlet === null) {\n      throw new Error(\"\" + key);\n    }\n    inlet.unbindInput();\n  }\n\n  outlet(key: string | Outlet<O>): Outlet<O> | null;\n  outlet<O2>(): Outlet<O2>;\n  outlet(key?: string | Outlet<O>): Outlet<O> | null {\n    if (key === void 0) {\n      return new StreamletOutlet<O>(this);\n    } else if (typeof key === \"string\") {\n      return AbstractStreamlet.reflectOutletKey<I, O>(key, this, this.streamletClass());\n    } else {\n      return key;\n    }\n  }\n\n  inoutlet<I2 extends I, O2>(): Inoutlet<I2, O2> {\n    return new StreamletInoutlet<I2, O2>(this as Streamlet<I2, O2>);\n  }\n\n  decohere(): void {\n    if (this._version >= 0) {\n      this.willDecohere();\n      this._version = -1;\n      this.onDecohere();\n      this.onDecohereOutlets();\n      this.didDecohere();\n    }\n  }\n\n  recohere(version: number): void {\n    if (this._version < 0) {\n      this.willRecohere(version);\n      this._version = version;\n      this.onRecohereInlets(version);\n      this.onRecohere(version);\n      this.onRecohereOutlets(version);\n      this.didRecohere(version);\n    }\n  }\n\n  getInput<I2 extends I>(inlet: Inlet<I2> | string): I2 | undefined;\n  getInput<I2 extends I, E = I2>(inlet: Inlet<I2> | string, orElse: E): I2 | E;\n  getInput<I2 extends I, E = I2>(inlet: Inlet<I2> | string, orElse?: E): I2 | E | undefined {\n    if (typeof inlet === \"string\") {\n      inlet = this.inlet(inlet) as Inlet<I2>;\n    }\n    let object: I2 | E | undefined;\n    if (inlet !== null) {\n      const input = inlet.input();\n      if (input !== null) {\n        object = input.get();\n      }\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  getOutput(outlet: Outlet<O> | string): O | undefined {\n    return void 0;\n  }\n\n  disconnectInputs(): void {\n    AbstractStreamlet.disconnectInputs(this, this.streamletClass());\n  }\n\n  /** @hidden */\n  static disconnectInputs<I, O>(streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): void {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_inlets\")) {\n        for (const name in streamletClass._inlets) {\n          const inletDescriptor = streamletClass._inlets[name]!;\n          if (inletDescriptor instanceof InletDescriptor) {\n            const inlet = AbstractStreamlet.reflectInletField(streamlet, inletDescriptor);\n            inlet.disconnectInputs();\n          } else if (inletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor);\n            inoutlet.disconnectInputs();\n          }\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n  }\n\n  disconnectOutputs(): void {\n    AbstractStreamlet.disconnectOutputs(this, this.streamletClass());\n  }\n\n  /** @hidden */\n  static disconnectOutputs<I, O>(streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): void {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_outlets\")) {\n        for (const name in streamletClass._outlets) {\n          const outletDescriptor = streamletClass._outlets[name]!;\n          if (outletDescriptor instanceof OutletDescriptor) {\n            const outlet = AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n            outlet.disconnectOutputs();\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n            inoutlet.disconnectOutputs();\n          }\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n  }\n\n  willDecohereInlet(inlet: Inlet<I>): void {\n    // hook\n  }\n\n  didDecohereInlet(inlet: Inlet<I>): void {\n    this.decohere();\n  }\n\n  willRecohereInlet(inlet: Inlet<I>, version: number): void {\n    // hook\n  }\n\n  didRecohereInlet(inlet: Inlet<I>, version: number): void {\n    this.recohere(version);\n  }\n\n  willDecohereOutlet(outlet: Outlet<O>): void {\n    // hook\n  }\n\n  didDecohereOutlet(outlet: Outlet<O>): void {\n    // hook\n  }\n\n  willRecohereOutlet(outlet: Outlet<O>, version: number): void {\n    // hook\n  }\n\n  didRecohereOutlet(outlet: Outlet<O>, version: number): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected onDecohereOutlets(): void {\n    AbstractStreamlet.decohereOutlets(this, this.streamletClass());\n  }\n\n  /** @hidden */\n  static decohereOutlets<I, O>(streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): void {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_outlets\")) {\n        for (const name in streamletClass._outlets) {\n          const outletDescriptor = streamletClass._outlets[name]!;\n          if (outletDescriptor instanceof OutletDescriptor) {\n            const outlet = AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n            outlet.decohereInput();\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n            inoutlet.decohereInput();\n          }\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInlets(version: number): void {\n    AbstractStreamlet.recohereInlets(version, this, this.streamletClass());\n  }\n\n  /** @hidden */\n  static recohereInlets<I, O>(version: number, streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): void {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_inlets\")) {\n        for (const name in streamletClass._inlets) {\n          const inletDescriptor = streamletClass._inlets[name]!;\n          if (inletDescriptor instanceof InletDescriptor) {\n            const inlet = AbstractStreamlet.reflectInletField(streamlet, inletDescriptor);\n            inlet.recohereOutput(version);\n          } else if (inletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor);\n            inoutlet.recohereOutput(version);\n          }\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutlets(version: number): void {\n    AbstractStreamlet.recohereOutlets(version, this, this.streamletClass());\n  }\n\n  /** @hidden */\n  static recohereOutlets<I, O>(version: number, streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): void {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_outlets\")) {\n        for (const name in streamletClass._outlets) {\n          const outletDescriptor = streamletClass._outlets[name]!;\n          if (outletDescriptor instanceof OutletDescriptor) {\n            const outlet = AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n            outlet.recohereInput(version);\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n            inoutlet.recohereInput(version);\n          }\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n\n  /** @hidden */\n  static reflectEachInlet<I, O, T, S>(streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null,\n                                      callback: (this: S, inlet: Inlet<I>, name: string, index: number) => T | void,\n                                      thisArg?: S): T | undefined {\n    let index = 0;\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_inlets\")) {\n        for (const name in streamletClass._inlets) {\n          const inletDescriptor = streamletClass._inlets[name]!;\n          let inlet: Inlet<I> | null;\n          if (inletDescriptor instanceof InletDescriptor) {\n            inlet = AbstractStreamlet.reflectInletField(streamlet, inletDescriptor);\n          } else if (inletDescriptor instanceof InoutletDescriptor) {\n            inlet = AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor);\n          } else {\n            inlet = null;\n          }\n          const result = callback.call(thisArg, inlet, inletDescriptor.name, index);\n          if (result !== void 0) {\n            return result;\n          }\n          index += 1;\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n    return void 0;\n  }\n\n  /** @hidden */\n  static reflectEachOutlet<I, O, T, S>(streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null,\n                                       callback: (this: S, outlet: Outlet<O>, name: string, index: number) => T | void,\n                                       thisArg?: S): T | undefined {\n    let index = 0;\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_outlets\")) {\n        for (const name in streamletClass._outlets) {\n          const outletDescriptor = streamletClass._outlets[name]!;\n          let outlet: Outlet<O> | null;\n          if (outletDescriptor instanceof OutletDescriptor) {\n            outlet = AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            outlet = AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n          } else {\n            outlet = null;\n          }\n          const result = callback.call(thisArg, outlet, outletDescriptor.name, index);\n          if (result !== void 0) {\n            return result;\n          }\n          index += 1;\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n    return void 0;\n  }\n\n  /** @hidden */\n  static reflectInletCount(streamletClass: StreamletClass | null): number {\n    let count = 0;\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_inlets\")) {\n        for (const _ in streamletClass._inlets) {\n          count += 1;\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n    return count;\n  }\n\n  /** @hidden */\n  static reflectOutletCount(streamletClass: StreamletClass | null): number {\n    let count = 0;\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_outlets\")) {\n        for (const _ in streamletClass._outlets) {\n          count += 1;\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n    return count;\n  }\n\n  /** @hidden */\n  static reflectInletIndex<I, O>(index: number, streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): [string, Inlet<I>] | null {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_inlets\")) {\n        for (const name in streamletClass._inlets) {\n          if (index === 0) {\n            const inletDescriptor = streamletClass._inlets[name]!;\n            if (inletDescriptor instanceof InletDescriptor) {\n              return [inletDescriptor.name, AbstractStreamlet.reflectInletField(streamlet, inletDescriptor)];\n            } else if (inletDescriptor instanceof InoutletDescriptor) {\n              return [inletDescriptor.name, AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor)];\n            } else {\n              return null;\n            }\n          }\n          index -= 1;\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static reflectOutletIndex<I, O>(index: number, streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): [string, Outlet<O>] | null {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_outlets\")) {\n        for (const name in streamletClass._outlets) {\n          if (index === 0) {\n            const outletDescriptor = streamletClass._outlets[name]!;\n            if (outletDescriptor instanceof OutletDescriptor) {\n              return [outletDescriptor.name, AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor)];\n            } else if (outletDescriptor instanceof InoutletDescriptor) {\n              return [outletDescriptor.name, AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor)];\n            } else {\n              return null;\n            }\n          }\n          index -= 1;\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static reflectInletKey<I, O>(key: string, streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): Inlet<I> | null {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_inlets\")) {\n        const inletDescriptor = streamletClass._inlets![key];\n        if (inletDescriptor !== void 0) {\n          if (inletDescriptor instanceof InletDescriptor) {\n            return AbstractStreamlet.reflectInletField(streamlet, inletDescriptor);\n          } else if (inletDescriptor instanceof InoutletDescriptor) {\n            return AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor);\n          } else {\n            return null;\n          }\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static reflectOutletKey<I, O>(key: string, streamlet: Streamlet<I, O>, streamletClass: StreamletClass | null): Outlet<O> | null {\n    while (streamletClass !== null) {\n      if (streamletClass.hasOwnProperty(\"_outlets\")) {\n        const outletDescriptor = streamletClass._outlets![key];\n        if (outletDescriptor !== void 0) {\n          if (outletDescriptor instanceof OutletDescriptor) {\n            return AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            return AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n          } else {\n            return null;\n          }\n        }\n      }\n      streamletClass = (streamletClass as any).__proto__ as StreamletClass | null;\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static reflectInletField<I, O>(streamlet: Streamlet<I, O>, inletDescriptor: InletDescriptor): Inlet<I> {\n    if (inletDescriptor.type === \"value\") {\n      return AbstractStreamlet.reflectValueInletField(streamlet, inletDescriptor.key);\n    } else if (inletDescriptor.type === \"map\") {\n      return AbstractStreamlet.reflectMapInletField(streamlet, inletDescriptor.key);\n    } else {\n      throw new TypeError(inletDescriptor.type);\n    }\n  }\n\n  /** @hidden */\n  static reflectValueInletField<I, O>(streamlet: Streamlet<I, O>, key: string): Inlet<I> {\n    let inlet = (streamlet as any)[key] as Inlet<I> | undefined;\n    if (inlet === void 0) {\n      if (streamlet instanceof AbstractStreamlet) {\n        inlet = streamlet.inlet();\n      } else {\n        inlet = new StreamletInlet<I>(streamlet);\n      }\n      (streamlet as any)[key] = inlet;\n    }\n    return inlet;\n  }\n\n  /** @hidden */\n  static reflectMapInletField<I, O>(streamlet: Streamlet<I, O>, key: string): Inlet<I> {\n    return null as any; // TODO\n  }\n\n  /** @hidden */\n  static reflectOutletField<I, O>(streamlet: Streamlet<I, O>, outletDescriptor: OutletDescriptor): Outlet<O> {\n    if (outletDescriptor.type === \"value\") {\n      return AbstractStreamlet.reflectValueOutletField(streamlet, outletDescriptor.key);\n    } else if (outletDescriptor.type === \"map\") {\n      return AbstractStreamlet.reflectMapOutletField(streamlet, outletDescriptor.key);\n    } else {\n      throw new TypeError(outletDescriptor.type);\n    }\n  }\n\n  /** @hidden */\n  static reflectValueOutletField<I, O>(streamlet: Streamlet<I, O>, key: string): Outlet<O> {\n    let outlet = (streamlet as any)[key] as Outlet<O> | undefined;\n    if (outlet === void 0) {\n      if (streamlet instanceof AbstractStreamlet) {\n        outlet = streamlet.outlet();\n      } else {\n        outlet = new StreamletOutlet<O>(streamlet);\n      }\n      (streamlet as any)[key] = outlet;\n    }\n    return outlet;\n  }\n\n  /** @hidden */\n  static reflectMapOutletField<I, O>(streamlet: Streamlet<I, O>, key: string): Outlet<O> {\n    return null as any; // TODO\n  }\n\n  /** @hidden */\n  static reflectInoutletField<I, O>(streamlet: Streamlet<I, O>, inoutletDescriptor: InoutletDescriptor): Inoutlet<I, O> {\n    if (inoutletDescriptor.type === \"value\") {\n      return AbstractStreamlet.reflectValueInoutletField(streamlet, inoutletDescriptor.key);\n    } else if (inoutletDescriptor.type === \"map\") {\n      return AbstractStreamlet.reflectMapInoutletField(streamlet, inoutletDescriptor.key);\n    } else {\n      throw new TypeError(inoutletDescriptor.type);\n    }\n  }\n\n  /** @hidden */\n  static reflectValueInoutletField<I, O>(streamlet: Streamlet<I, O>, key: string): Inoutlet<I, O> {\n    let inoutlet = (streamlet as any)[key] as Inoutlet<I, O> | undefined;\n    if (inoutlet === void 0) {\n      if (streamlet instanceof AbstractStreamlet) {\n        inoutlet = streamlet.inoutlet();\n      } else {\n        inoutlet = new StreamletInoutlet<I, O>(streamlet);\n      }\n      (streamlet as any)[key] = inoutlet;\n    }\n    return inoutlet;\n  }\n\n  /** @hidden */\n  static reflectMapInoutletField<I, O>(streamlet: Streamlet<I, O>, key: string): Inoutlet<I, O> {\n    return null as any; // TODO\n  }\n\n  /** @hidden */\n  static init(streamletClass: StreamletClass): void {\n    if (!streamletClass.hasOwnProperty(\"_inlets\")) {\n      streamletClass._inlets = {};\n    }\n    if (!streamletClass.hasOwnProperty(\"_outlets\")) {\n      streamletClass._outlets = {};\n    }\n    if (!streamletClass.hasOwnProperty(\"_inoutlets\")) {\n      streamletClass._inoutlets = {};\n    }\n  }\n\n  /** @hidden */\n  static decorateInlet(options: InletOptions, target: StreamletClass, key: string): void {\n    AbstractStreamlet.init(target);\n    const name = options.name !== void 0 ? options.name : key;\n    const type = options.type !== void 0 ? options.type : \"value\";\n    const inletDescriptor = new InletDescriptor(key, name, type);\n    target._inlets![name] = inletDescriptor;\n  }\n\n  /** @hidden */\n  static decorateOutlet(options: OutletOptions, target: StreamletClass, key: string): void {\n    AbstractStreamlet.init(target);\n    const name = options.name !== void 0 ? options.name : key;\n    const type = options.type !== void 0 ? options.type : \"value\";\n    const outletDescriptor = new OutletDescriptor(key, name, type);\n    target._outlets![name] = outletDescriptor;\n  }\n\n  /** @hidden */\n  static decorateInoutlet(options: InoutletOptions, target: StreamletClass, key: string): void {\n    AbstractStreamlet.init(target);\n    const name = options.name !== void 0 ? options.name : key;\n    const type = options.type !== void 0 ? options.type : \"value\";\n    const inoutletDescriptor = new InoutletDescriptor(key, name, type);\n    target._inlets![name] = inoutletDescriptor;\n    target._outlets![name] = inoutletDescriptor;\n    target._inoutlets![name] = inoutletDescriptor;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Map} from \"@swim/util\";\nimport {Value, Record} from \"@swim/structure\";\nimport {Outlet, MapOutlet, StreamletScope} from \"@swim/streamlet\";\nimport {MapValueFunction, MapFieldValuesFunction} from \"@swim/streamlet\";\nimport {WatchValueFunction, WatchFieldsFunction} from \"@swim/streamlet\";\nimport {RecordStreamlet} from \"./RecordStreamlet\";\nimport {RecordModel} from \"./RecordModel\";\nimport {RecordScope} from \"./RecordScope\";\nimport {Dataflow} from \"./Dataflow\";\n\nexport interface RecordOutlet extends Outlet<Record>, MapOutlet<Value, Value, Record>, StreamletScope<Value> {\n  outlet(key: Value | string): Outlet<Value>;\n\n  get(): Record;\n  get(key: Value): Value;\n\n  memoize(): MapOutlet<Value, Value, Record>;\n\n  map<O2>(func: MapValueFunction<Record, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<Value, Value, V2>): MapOutlet<Value, V2, Map<Value, V2>>;\n\n  watch(func: WatchValueFunction<Record>): this;\n  watch(func: WatchFieldsFunction<Value, Value>): this;\n}\n\n/** @hidden */\nexport const RecordOutlet = {\n  is(object: unknown): object is RecordOutlet {\n    if (typeof object === \"object\" && object !== null) {\n      const outlet = object as RecordOutlet;\n      return MapOutlet.is(outlet) && StreamletScope.is(outlet);\n    }\n    return false;\n  },\n\n  // Forward type declarations\n  /** @hidden */\n  Streamlet: void 0 as unknown as typeof RecordStreamlet, // defined by RecordStreamlet\n  /** @hidden */\n  Model: void 0 as unknown as typeof RecordModel, // defined by RecordModel\n  /** @hidden */\n  Scope: void 0 as unknown as typeof RecordScope, // defined by RecordScope\n  /** @hidden */\n  Dataflow: void 0 as unknown as typeof Dataflow, // defined by Dataflow\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {AnyItem, Item, Field, AnyValue, Value, Record, Text, Selector} from \"@swim/structure\";\nimport {Inlet, Outlet, KeyEffect, MapInlet, MapOutlet, KeyOutlet, StreamletContext, StreamletScope} from \"@swim/streamlet\";\nimport {MemoizeMapCombinator} from \"@swim/streamlet\";\nimport {FilterFieldsFunction, FilterFieldsCombinator} from \"@swim/streamlet\";\nimport {MapValueFunction, MapValueCombinator} from \"@swim/streamlet\";\nimport {MapFieldValuesFunction, MapFieldValuesCombinator} from \"@swim/streamlet\";\nimport {ReduceFieldsCombinator} from \"@swim/streamlet\";\nimport {WatchValueFunction, WatchValueCombinator} from \"@swim/streamlet\";\nimport {WatchFieldsFunction, WatchFieldsCombinator} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\n\nexport abstract class AbstractRecordOutlet extends Record implements RecordOutlet {\n  /** @hidden */\n  protected _effects: BTree<Value, KeyEffect>;\n  /** @hidden */\n  protected _outlets: BTree<Value, KeyOutlet<Value, Value>>;\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<Record>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor() {\n    super();\n    this._effects = new BTree();\n    this._outlets = new BTree();\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  streamletScope(): StreamletScope<Value> | null {\n    return null;\n  }\n\n  streamletContext(): StreamletContext | null {\n    const scope = this.streamletScope();\n    if (scope !== null) {\n      return scope.streamletContext();\n    }\n    return null;\n  }\n\n  hasOwn(key: AnyValue): boolean {\n    return this.has(key);\n  }\n\n  get(): Record;\n  get(key: AnyValue): Value;\n  get(key?: AnyValue): Record | Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      return super.get(key);\n    }\n  }\n\n  abstract keyIterator(): Cursor<Value>;\n\n  outlet(key: Value | string): Outlet<Value> {\n    if (typeof key === \"string\") {\n      key = Text.from(key);\n    }\n    if (!this.hasOwn(key)) {\n      const scope = this.streamletScope();\n      if (RecordOutlet.is(scope) && scope.has(key)) {\n        // TODO: Support dynamic shadowing?\n        return scope.outlet(key);\n      }\n    }\n    let outlet = this._outlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet<Value, Value>(this, key);\n      this._outlets = this._outlets.updated(key, outlet);\n      this.decohereInputKey(key, KeyEffect.Update);\n    }\n    return outlet;\n  }\n\n  outputIterator(): Cursor<Inlet<Record>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<Record>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<Record>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<Record>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<Record>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const outlets = this._outlets;\n    if (outlets.isEmpty()) {\n      this._outlets = new BTree();\n      outlets.forEach(function (key: Value, keyOutlet: KeyOutlet<Value, Value>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const oldOutputs = this._outputs;\n    if (oldOutputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n        oldOutputs[i].unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    const outlets = this._outlets;\n    if (outlets.isEmpty()) {\n      this._outlets = new BTree();\n      outlets.forEach(function (key: Value, keyOutlet: KeyOutlet<Value, Value>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n        output.disconnectOutputs();\n      }\n    }\n    this.forEach(function (member: Item): void {\n      if (member instanceof Field) {\n        member = member.toValue();\n      }\n      if (member instanceof AbstractRecordOutlet) {\n        member.disconnectOutputs();\n      } else if (member instanceof RecordOutlet.Streamlet) {\n        member.disconnectOutputs();\n      } else if (RecordOutlet.is(member)) {\n        member.disconnectOutputs();\n      }\n    }, this);\n  }\n\n  disconnectInputs(): void {\n    // nop\n  }\n\n  decohereInputKey(key: Value, effect: KeyEffect): void {\n    const oldEffects = this._effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereInputKey(key, effect);\n      this._effects = oldEffects.updated(key, effect);\n      this._version = -1;\n      this.onDecohereInputKey(key, effect);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        const output = this._outputs![i];\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this._outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereInputKey(key, effect);\n    }\n  }\n\n  decohereInput(): void {\n    if (this._version >= 0) {\n      this.willDecohereInput();\n      this._version = -1;\n      this.onDecohereInput();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this._outlets.forEach(function (key: Value, outlet: KeyOutlet<Value, Value>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohereInput();\n    }\n  }\n\n  recohereInputKey(key: Value, version: number): void {\n    if (this._version < 0) {\n      const oldEffects = this._effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereInputKey(key, effect, version);\n        this._effects = oldEffects.removed(key);\n        this.onRecohereInputKey(key, effect, version);\n        for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n          const output = this._outputs![i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this._outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereInputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereInput(version: number): void {\n    if (this._version < 0) {\n      this.willRecohereInput(version);\n      this._effects.forEach(function (key: Value): void {\n        this.recohereInputKey(key, version);\n      }, this);\n      this._version = version;\n      this.onRecohereInput(version);\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.forEach(function (member: Item): void {\n        if (member instanceof Field) {\n          member = member.toValue();\n        }\n        if (member instanceof AbstractRecordOutlet) {\n          member.recohereInput(version);\n        } else if (member instanceof RecordOutlet.Streamlet) {\n          member.recohere(version);\n        } else if (RecordOutlet.is(member)) {\n          member.recohereInput(version);\n        }\n      }, this);\n      this.didRecohereInput(version);\n    }\n  }\n\n  protected willDecohereInputKey(key: Value, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereInputKey(key: Value, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereInputKey(key: Value, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohereInput(): void {\n    // hook\n  }\n\n  protected onDecohereInput(): void {\n    // hook\n  }\n\n  protected didDecohereInput(): void {\n    // hook\n  }\n\n  protected willRecohereInputKey(key: Value, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereInputKey(key: Value, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereInputKey(key: Value, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereInput(version: number): void {\n    // hook\n  }\n\n  memoize(): MapOutlet<Value, Value, Record> {\n    const combinator = new MemoizeMapCombinator<Value, Value, Record>();\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  filter(predicate?: AnyItem): Selector;\n  filter(func: FilterFieldsFunction<Value, Value>): MapOutlet<Value, Value, Map<Value, Value>>;\n  filter(func: AnyItem | FilterFieldsFunction<Value, Value>): Selector | MapOutlet<Value, Value, Map<Value, Value>> {\n    if (typeof func !== \"function\") {\n      return super.filter(func as AnyItem);\n    } else {\n      const combinator = new FilterFieldsCombinator<Value, Value, Record>(func);\n      combinator.bindInput(this);\n      return combinator;\n    }\n  }\n\n  map<O2>(func: MapValueFunction<Record, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<Value, Value, V2>): MapOutlet<Value, V2, Map<Value, V2>>;\n  map<V2>(func: MapValueFunction<Record, V2> | MapFieldValuesFunction<Value, Value, V2>): Outlet<V2> | MapOutlet<Value, V2, Map<Value, V2>> {\n    if (func.length === 1) {\n      const combinator = new MapValueCombinator<Record, V2>(func as MapValueFunction<Record, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    } else {\n      const combinator = new MapFieldValuesCombinator<Value, Value, V2, Record>(func as MapFieldValuesFunction<Value, Value, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    }\n  }\n\n  reduce<U>(identity: U, accumulator: (result: U, element: Value) => U, combiner: (result: U, result2: U) => U): Outlet<U> {\n    const combinator = new ReduceFieldsCombinator<Value, Value, Record, U>(identity, accumulator, combiner);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<Record>): this;\n  watch(func: WatchFieldsFunction<Value, Value>): this;\n  watch(func: WatchValueFunction<Record> | WatchFieldsFunction<Value, Value>): this {\n    if (func.length === 1) {\n      const combinator = new WatchValueCombinator<Record>(func as WatchValueFunction<Record>);\n      combinator.bindInput(this);\n      return this;\n    } else {\n      const combinator = new WatchFieldsCombinator<Value, Value, Record>(func as WatchFieldsFunction<Value, Value>);\n      combinator.bindInput(this);\n      return this;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, Record} from \"@swim/structure\";\nimport {Inlet, Outlet, StreamletContext, StreamletScope, StreamletClass, Streamlet, AbstractStreamlet} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\n\nexport abstract class RecordStreamlet<I extends Value = Value, O extends Value = I> extends Record implements Streamlet<I, O> {\n  isConstant(): boolean {\n    return false;\n  }\n\n  protected streamletClass(): StreamletClass {\n    return (this as any).__proto__ as StreamletClass;\n  }\n\n  abstract streamletScope(): StreamletScope<O> | null;\n\n  abstract setStreamletScope(parent: StreamletScope<O> | null): void;\n\n  abstract streamletContext(): StreamletContext | null;\n\n  abstract setStreamletContext(context: StreamletContext | null): void;\n\n  abstract inlet(key: string): Inlet<I> | null;\n\n  abstract bindInput(key: string, input: Outlet<I>): void;\n\n  abstract unbindInput(key: string): void;\n\n  abstract outlet(key: string): Outlet<O> | null;\n\n  abstract disconnectInputs(): void;\n\n  abstract disconnectOutputs(): void;\n\n  abstract decohere(): void;\n\n  abstract recohere(version: number): void;\n\n  compile(): void {\n    AbstractStreamlet.reflectEachInlet<I, O, void, this>(this, this.streamletClass(), function (inlet: Inlet<I>, name: string): void {\n      if (inlet.input() === null) {\n        this.compileInlet(inlet, name);\n      }\n    }, this);\n  }\n\n  compileInlet(inlet: Inlet<I>, name: string): void {\n    const scope = this.streamletScope();\n    if (scope !== null) {\n      const input = scope.outlet(name);\n      if (input !== null) {\n        // Assume Outlet<O> conforms to Outlet<I>.\n        inlet.bindInput(input as Outlet<unknown> as Outlet<I>);\n      }\n    }\n  }\n}\nRecordOutlet.Streamlet = RecordStreamlet;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item, Field, Slot, AnyValue, Value, AnyText, Text, AnyNum, Num, Form} from \"@swim/structure\";\nimport {\n  Inlet,\n  Outlet,\n  Inoutlet,\n  StreamletContext,\n  GenericStreamlet,\n  AbstractStreamlet,\n  StreamletScope,\n  StreamletInlet,\n  StreamletOutlet,\n  StreamletInoutlet,\n} from \"@swim/streamlet\";\nimport {RecordStreamlet} from \"./RecordStreamlet\";\n\nexport abstract class AbstractRecordStreamlet<I extends Value = Value, O extends Value = I> extends RecordStreamlet<I, O> implements GenericStreamlet<I, O> {\n  protected scope: StreamletScope<O> | null;\n  protected context: StreamletContext | null;\n  /** @hidden */\n  protected _version: number;\n\n  constructor(scope: StreamletScope<O> | null = null) {\n    super();\n    this.scope = scope;\n    this.context = null;\n    this._version = -1;\n  }\n\n  streamletScope(): StreamletScope<O> | null {\n    return this.scope;\n  }\n\n  setStreamletScope(scope: StreamletScope<O> | null): void {\n    this.scope = scope;\n  }\n\n  streamletContext(): StreamletContext | null {\n    if (this.context !== null) {\n      return this.context;\n    }\n    const scope = this.streamletScope();\n    if (scope !== null) {\n      return scope.streamletContext();\n    }\n    return null;\n  }\n\n  setStreamletContext(context: StreamletContext | null): void {\n    this.context = context;\n  }\n\n  isEmpty(): boolean {\n    return this.length !== 0;\n  }\n\n  get length(): number {\n    return AbstractStreamlet.reflectOutletCount(this.streamletClass());\n  }\n\n  has(key: AnyValue): boolean {\n    if (key instanceof Text) {\n      key = key.value;\n    } else if (typeof key !== \"string\") {\n      return false;\n    }\n    const outlet = this.outlet(key);\n    return outlet !== null;\n  }\n\n  get(key: AnyValue): Value {\n    if (key instanceof Text) {\n      key = key.value;\n    } else if (typeof key !== \"string\") {\n      return Value.absent();\n    }\n    const outlet = this.outlet(key);\n    if (outlet !== null) {\n      const output = outlet.get();\n      if (output !== void 0) {\n        return output;\n      }\n    }\n    return Value.absent();\n  }\n\n  getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  getSlot(key: AnyValue): Value {\n    return this.get(key);\n  }\n\n  getField(key: AnyValue): Field | undefined {\n    if (typeof key === \"string\") {\n      key = Text.from(key);\n    } else if (!(key instanceof Text)) {\n      return void 0;\n    }\n    const value = this.get(key);\n    if (value.isDefined()) {\n      return Slot.of(key, value);\n    }\n    return void 0;\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const entry = AbstractStreamlet.reflectOutletIndex<I, O>(index, this, this.streamletClass());\n    if (entry !== null) {\n      const name = entry[0];\n      let output = entry[1].get() as Value | undefined;\n      if (output === void 0) {\n        output = Value.extant();\n      }\n      return Slot.of(name, output);\n    }\n    return Item.absent();\n  }\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setItem(index: number, item: AnyItem): this {\n    throw new Error(\"unsupported\");\n  }\n\n  push(...items: AnyItem[]): number {\n    throw new Error(\"unsupported\");\n  }\n\n  splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    throw new Error(\"unsupported\");\n  }\n\n  delete(key: AnyValue): Item {\n    throw new Error(\"unsupported\");\n  }\n\n  clear(): void {\n    throw new Error(\"unsupported\");\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    return AbstractStreamlet.reflectEachOutlet(this, this.streamletClass(), function (outlet: Outlet<O>, name: string, index: number): T | void {\n      const output = outlet.get();\n      if (output !== void 0) {\n        const result = callback.call(thisArg, output, index);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n    }, this);\n  }\n\n  inlet(key: string): Inlet<I> | null;\n  inlet<I2 extends I>(): Inlet<I2>;\n  inlet(key?: string): Inlet<I> | null {\n    if (key === void 0) {\n      return new StreamletInlet<I>(this);\n    } else {\n      return AbstractStreamlet.reflectInletKey<I, O>(key, this, this.streamletClass());\n    }\n  }\n\n  bindInput(key: string, input: Outlet<I>): void {\n    const inlet = this.inlet(key);\n    if (inlet === null) {\n      throw new Error(\"\" + key);\n    }\n    inlet.bindInput(input);\n  }\n\n  unbindInput(key: string): void {\n    const inlet = this.inlet(key);\n    if (inlet === null) {\n      throw new Error(\"\" + key);\n    }\n    inlet.unbindInput();\n  }\n\n  outlet(key: string | Outlet<O>): Outlet<O> | null;\n  outlet<O2 extends Value>(): Outlet<O2>;\n  outlet(key?: string | Outlet<O>): Outlet<O> | null {\n    if (key === void 0) {\n      return new StreamletOutlet<O>(this);\n    } else if (typeof key === \"string\") {\n      return AbstractStreamlet.reflectOutletKey<I, O>(key, this, this.streamletClass());\n    } else {\n      return key;\n    }\n  }\n\n  inoutlet<I2 extends I, O2 extends Value>(): Inoutlet<I2, O2> {\n    return new StreamletInoutlet<I2, O2>(this as RecordStreamlet<I2, O2>);\n  }\n\n  decohere(): void {\n    if (this._version >= 0) {\n      this.willDecohere();\n      this._version = -1;\n      this.onDecohere();\n      this.onDecohereOutlets();\n      this.didDecohere();\n    }\n  }\n\n  recohere(version: number): void {\n    if (this._version < 0) {\n      this.willRecohere(version);\n      this._version = version;\n      this.onRecohereInlets(version);\n      this.onRecohere(version);\n      this.onRecohereOutlets(version);\n      this.didRecohere(version);\n    }\n  }\n\n  getInput<I2 extends I>(inlet: Inlet<I2> | string): I2 | undefined;\n  getInput<I2 extends I, E = I2>(inlet: Inlet<I2> | string, orElse: E): I2 | E;\n  getInput<I2 extends I, E = I2>(inlet: Inlet<I2> | string, orElse?: E): I2 | E | undefined {\n    if (typeof inlet === \"string\") {\n      inlet = this.inlet(inlet) as Inlet<I2>;\n    }\n    let object: I2 | E | undefined;\n    if (inlet !== null) {\n      const input = inlet.input();\n      if (input !== null) {\n        object = input.get();\n      }\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  castInput<T>(inlet: Inlet<I> | string, form: Form<T, unknown>): T | undefined;\n  castInput<T, E = T>(inlet: Inlet<I> | string, form: Form<T, unknown>, orElse: E): T | E;\n  castInput<T, E = T>(inlet: Inlet<I> | string, form: Form<T, unknown>, orElse?: E): T | E | undefined {\n    const input = this.getInput(inlet);\n    let object: T | E | undefined;\n    if (input !== void 0) {\n      object = form.cast(input);\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  coerceInput<T>(inlet: Inlet<I> | string, form: Form<T, unknown>): T;\n  coerceInput<T, E = T>(inlet: Inlet<I> | string, form: Form<T, unknown>, orElse: E): T | E;\n  coerceInput<T, E = T>(inlet: Inlet<I> | string, form: Form<T, unknown>, orElse?: E): T | E {\n    const input = this.getInput(inlet);\n    let object: T | E | undefined;\n    if (input !== void 0) {\n      object = form.cast(input);\n    }\n    if (object === void 0) {\n      object = form.unit();\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object!;\n  }\n\n  getOutput(outlet: Outlet<O> | string): O | undefined {\n    return void 0;\n  }\n\n  disconnectInputs(): void {\n    AbstractStreamlet.disconnectInputs(this, this.streamletClass());\n  }\n\n  disconnectOutputs(): void {\n    AbstractStreamlet.disconnectOutputs(this, this.streamletClass());\n  }\n\n  willDecohereInlet(inlet: Inlet<I>): void {\n    // hook\n  }\n\n  didDecohereInlet(inlet: Inlet<I>): void {\n    this.decohere();\n  }\n\n  willRecohereInlet(inlet: Inlet<I>, version: number): void {\n    // hook\n  }\n\n  didRecohereInlet(inlet: Inlet<I>, version: number): void {\n    this.recohere(version);\n  }\n\n  willDecohereOutlet(outlet: Outlet<O>): void {\n    // hook\n  }\n\n  didDecohereOutlet(outlet: Outlet<O>): void {\n    // hook\n  }\n\n  willRecohereOutlet(outlet: Outlet<O>, version: number): void {\n    // hook\n  }\n\n  didRecohereOutlet(outlet: Outlet<O>, version: number): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected onDecohereOutlets(): void {\n    AbstractStreamlet.decohereOutlets(this, this.streamletClass());\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInlets(version: number): void {\n    AbstractStreamlet.recohereInlets(version, this, this.streamletClass());\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutlets(version: number): void {\n    AbstractStreamlet.recohereOutlets(version, this, this.streamletClass());\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, Record} from \"@swim/structure\";\nimport {KeyEffect, AbstractInlet} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\n\nexport class RecordFieldUpdater extends AbstractInlet<Value> {\n  /** @hidden */\n  protected readonly _record: Record;\n  /** @hidden */\n  protected readonly _key: Value;\n\n  constructor(record: Record, key: Value) {\n    super();\n    this._record = record;\n    this._key = key;\n  }\n\n  protected onDecohereOutput(): void {\n    if (RecordOutlet.is(this._record)) {\n      this._record.decohereInputKey(this._key, KeyEffect.Update);\n    }\n  }\n\n  protected onRecohereOutput(version: number): void {\n    if (this._input !== null) {\n      const value = this._input.get();\n      if (value !== void 0) {\n        this._record.set(this._key, value);\n      } else {\n        this._record.delete(this._key);\n      }\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"@swim/structure\";\n\nexport abstract class Reifier {\n  abstract reify(item: Item): Item;\n\n  static system(): Reifier {\n    return null as unknown as Reifier;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {AnyItem, Item, Field, Slot, AnyValue, Value, Record, AnyText, Text, AnyNum, MathModule} from \"@swim/structure\";\nimport {KeyEffect, MapOutlet} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\nimport {RecordStreamlet} from \"./RecordStreamlet\";\nimport {AbstractRecordOutlet} from \"./AbstractRecordOutlet\";\nimport {RecordFieldUpdater} from \"./RecordFieldUpdater\";\nimport {Reifier} from \"./Reifier\";\n\nexport class RecordModel extends AbstractRecordOutlet {\n  /** @hidden */\n  protected _state: Record;\n  /** @hidden */\n  protected _fieldUpdaters: BTree<Value, RecordFieldUpdater>;\n\n  constructor(state: Record = Record.create()) {\n    super();\n    this._state = state;\n    this._fieldUpdaters = new BTree();\n  }\n\n  isEmpty(): boolean {\n    return this._state.isEmpty();\n  }\n\n  isArray(): boolean {\n    return this._state.isArray();\n  }\n\n  isObject(): boolean {\n    return this._state.isObject();\n  }\n\n  get length(): number {\n    return this._state.length;\n  }\n\n  fieldCount(): number {\n    return this._state.fieldCount();\n  }\n\n  valueCount(): number {\n    return this._state.valueCount();\n  }\n\n  has(key: AnyValue): boolean {\n    if (this._state.has(key)) {\n      return true;\n    } else {\n      const scope = this.streamletScope();\n      return scope instanceof Record ? scope.has(key) : false;\n    }\n  }\n\n  hasOwn(key: AnyValue): boolean {\n    return this._state.has(key);\n  }\n\n  indexOf(item: AnyItem, index?: number): number {\n    return this._state.indexOf(item, index);\n  }\n\n  lastIndexOf(item: AnyItem, index: number = 0): number {\n    return this._state.lastIndexOf(item, index);\n  }\n\n  get(): Record;\n  get(key: AnyValue): Value;\n  get(key?: AnyValue): Record | Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      key = Value.fromAny(key);\n      let value = this._state.get(key);\n      if (!value.isDefined()) {\n        const scope = this.streamletScope();\n        if (scope instanceof Record) {\n          value = scope.get(key);\n        }\n      }\n      return value;\n    }\n  }\n\n  getAttr(key: AnyText): Value {\n    key = Text.fromAny(key);\n    let value = this._state.getAttr(key);\n    if (!value.isDefined()) {\n      const scope = this.streamletScope();\n      if (scope instanceof Record) {\n        value = scope.getAttr(key);\n      }\n    }\n    return value;\n  }\n\n  getSlot(key: AnyValue): Value {\n    key = Value.fromAny(key);\n    let value = this._state.getSlot(key);\n    if (!value.isDefined()) {\n      const scope = this.streamletScope();\n      if (scope instanceof Record) {\n        value = scope.getSlot(key);\n      }\n    }\n    return value;\n  }\n\n  getField(key: AnyValue): Field | undefined {\n    key = Value.fromAny(key);\n    let field = this._state.getField(key);\n    if (field === void 0) {\n      const scope = this.streamletScope();\n      if (scope instanceof Record) {\n        field = scope.getField(key);\n      }\n    }\n    return field;\n  }\n\n  getItem(index: AnyNum): Item {\n    return this._state.getItem(index);\n  }\n\n  bindValue(key: Value, expr: Value): void {\n    const fieldUpdater = new RecordFieldUpdater(this, key);\n    const valueInput = RecordOutlet.Dataflow.compile(expr, this);\n    fieldUpdater.bindInput(valueInput);\n    // TODO: clean up existing field updater\n    this._fieldUpdaters = this._fieldUpdaters.updated(key, fieldUpdater);\n  }\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    if (!this._state.has(key)) {\n      const scope = this.streamletScope();\n      if (scope instanceof Record && scope.has(key)) {\n        scope.set(key, newValue);\n      } else {\n        this._state.set(key, newValue);\n      }\n    } else {\n      this._state.set(key, newValue);\n    }\n    this.decohereInputKey(key, KeyEffect.Update);\n    return this;\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    key = Text.fromAny(key);\n    if (!this._state.has(key)) {\n      const scope = this.streamletScope();\n      if (scope instanceof Record && scope.has(key)) {\n        scope.setAttr(key, newValue);\n      } else {\n        this._state.setAttr(key, newValue);\n      }\n    } else {\n      this._state.setAttr(key, newValue);\n    }\n    this.decohereInputKey(key, KeyEffect.Update);\n    return this;\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    if (!this._state.has(key)) {\n      const scope = this.streamletScope();\n      if (scope instanceof Record && scope.has(key)) {\n        scope.setSlot(key, newValue);\n      } else {\n        this._state.setSlot(key, newValue);\n      }\n    } else {\n      this._state.setSlot(key, newValue);\n    }\n    this.decohereInputKey(key, KeyEffect.Update);\n    return this;\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    const oldItem = this._state.getItem(index);\n    newItem = Item.fromAny(newItem);\n    this._state.setItem(index, newItem);\n    if (oldItem instanceof Field && newItem instanceof Field) {\n      if (oldItem.key.equals(newItem.key)) {\n        this.decohereInputKey(oldItem.key, KeyEffect.Update);\n      } else {\n        this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n        this.decohereInputKey(newItem.key, KeyEffect.Update);\n      }\n    } else if (oldItem instanceof Field) {\n      this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n    } else if (newItem instanceof Field) {\n      this.decohereInputKey(newItem.key, KeyEffect.Update);\n    } else {\n      this.decohereInput();\n    }\n    return this;\n  }\n\n  push(...newItems: AnyItem[]): number {\n    let i = this._state.length;\n    const n = this._state.push.apply(this._state, arguments);\n    while (i < n) {\n      const newItem = this._state.get(i);\n      if (newItem instanceof Field) {\n        this.decohereInputKey(newItem.key, KeyEffect.Update);\n      }\n      i += 1;\n    }\n    return n;\n  }\n\n  splice(start: number, deleteCount: number = 0, ...newItems: AnyItem[]): Item[] {\n    const n = this._state.length;\n    if (start < 0) {\n      start = n + start;\n    }\n    start = Math.max(0, start);\n    deleteCount = Math.max(0, deleteCount);\n    const deleted = this._state.splice.apply(this._state, arguments);\n    for (let i = 0; i < deleted.length; i += 1) {\n      const oldItem = deleted[i];\n      if (oldItem instanceof Field) {\n        this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n      }\n    }\n    for (let i = start; i < start + newItems.length; i += 1) {\n      const newItem = this._state.get(i);\n      if (newItem instanceof Field) {\n        this.decohereInputKey(newItem.key, KeyEffect.Update);\n      }\n    }\n    return deleted;\n  }\n\n  delete(key: AnyValue): Item {\n    const oldItem = this._state.delete(key);\n    if (oldItem instanceof Field) {\n      this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n    }\n    return oldItem;\n  }\n\n  clear(): void {\n    const oldState = this._state.branch();\n    this._state.clear();\n    oldState.forEach(function (oldItem: Item): void {\n      if (oldItem instanceof Field) {\n        this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n      }\n    }, this);\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    return this._state.forEach(callback, thisArg);\n  }\n\n  keyIterator(): Cursor<Value> {\n    throw new Error(); // TODO\n  }\n\n  disconnectInputs(): void {\n    const fieldUpdaters = this._fieldUpdaters;\n    if (!fieldUpdaters.isEmpty()) {\n      this._fieldUpdaters = new BTree();\n      fieldUpdaters.forEach(function (key: Value, inlet: RecordFieldUpdater): void {\n        inlet.disconnectInputs();\n      }, this);\n    }\n  }\n\n  memoize(): MapOutlet<Value, Value, Record> {\n    return this;\n  }\n\n  materialize(record: Record): void {\n    record.forEach(function (item: Item): void {\n      this.materializeItem(item);\n    }, this);\n  }\n\n  materializeItem(item: Item): void {\n    if (item instanceof Field) {\n      this.materializeField(item);\n    } else {\n      this.materializeValue(item);\n    }\n  }\n\n  materializeField(field: Field): void {\n    const value = field.value;\n    if (value instanceof RecordStreamlet) {\n      value.setStreamletScope(this);\n      this._state.push(field);\n    } else if (value instanceof Record) {\n      // Add recursively materialized nested scope.\n      const child = new RecordOutlet.Scope(this);\n      child.materialize(value);\n      this._state.push(field.updatedValue(child));\n    } else {\n      this._state.push(field);\n    }\n  }\n\n  materializeValue(value: Value): void {\n    if (value instanceof RecordStreamlet) {\n      value.setStreamletScope(this);\n      this._state.push(value);\n    } else if (value instanceof Record) {\n      // Add recursively materialized nested scope.\n      const child = new RecordOutlet.Scope(this);\n      child.materialize(value);\n      this._state.push(child);\n    } else {\n      this._state.push(value);\n    }\n  }\n\n  compile(record: Record): void {\n    record.forEach(function (item: Item, index: number): void {\n      this.compileItem(item, index);\n    }, this);\n  }\n\n  compileItem(item: Item, index: number): void {\n    if (item instanceof Field) {\n      this.compileField(item, index);\n    } else {\n      this.compileValue(item, index);\n    }\n  }\n\n  compileField(field: Field, index: number): void {\n    const key = field.key;\n    const value = field.value;\n    if (!key.isConstant()) {\n      // TODO: Add dynamic key updater.\n    } else if (!value.isConstant()) {\n      if (value instanceof RecordStreamlet) {\n        // Lexically bind nested streamlet.\n        value.compile();\n        // Decohere nested scope key.\n        this.decohereInputKey(key, KeyEffect.Update);\n      } else if (value instanceof Record) {\n        // Recursively compile nested scope.\n        (this._state.getItem(index).toValue() as RecordModel).compile(value);\n        // Decohere nested scope key.\n        this.decohereInputKey(key, KeyEffect.Update);\n      } else {\n        // Set placeholder value.\n        field.setValue(Value.extant());\n        // Bind dynamic value updater.\n        this.bindValue(key, value);\n      }\n    } else {\n      // Decohere constant key.\n      this.decohereInputKey(key, KeyEffect.Update);\n    }\n  }\n\n  compileValue(value: Value, index: number): void {\n    if (value instanceof RecordStreamlet) {\n      value.compile();\n    } else if (value instanceof Record) {\n      // Recursively compile nested scope.\n      (this._state.getItem(index) as RecordModel).compile(value);\n    } else if (!value.isConstant()) {\n      // TODO: Bind dynamic item updater.\n    } else {\n      // TODO: Fold constant expressions.\n    }\n  }\n\n  reify(reifier: Reifier | null = Reifier.system()): void {\n    this.forEach(function (oldItem: Item, index: number): void {\n      const newItem = this.reifyItem(oldItem, reifier);\n      if (oldItem !== newItem) {\n        this.setItem(index, newItem);\n      }\n    }, this);\n  }\n\n  reifyItem(item: Item, reifier: Reifier | null): Item {\n    const scope = this.streamletScope();\n    if (scope instanceof RecordModel) {\n      return scope.reifyItem(item, reifier);\n    } else {\n      return item;\n    }\n  }\n\n  static from(record: Record): RecordModel {\n    const model = new RecordModel();\n    model.materialize(record);\n    model.compile(record);\n    return model;\n  }\n\n  static of(...items: AnyItem[]): RecordModel {\n    return RecordModel.from(Record.of.apply(void 0, arguments));\n  }\n\n  static globalScope(): RecordModel {\n    const model = new RecordModel();\n    model.materializeField(Slot.of(\"math\", MathModule.scope().branch()));\n    return model;\n  }\n}\nRecordOutlet.Model = RecordModel;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Value, Record} from \"@swim/structure\";\nimport {StreamletScope} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\nimport {RecordModel} from \"./RecordModel\";\n\nexport class RecordScope extends RecordModel {\n  /** @hidden */\n  protected scope: StreamletScope<Value> | null;\n\n  constructor(scope: StreamletScope<Value> | null, state?: Record) {\n    super(state);\n    this.scope = scope;\n  }\n\n  streamletScope(): StreamletScope<Value> | null {\n    return this.scope;\n  }\n\n  static from(record: Record): RecordScope {\n    const scope = new RecordScope(RecordScope.globalScope());\n    scope.materialize(record);\n    scope.compile(record);\n    return scope;\n  }\n\n  static of(...items: AnyItem[]): RecordScope {\n    return RecordScope.from(Record.of.apply(void 0, arguments));\n  }\n}\nRecordOutlet.Scope = RecordScope;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Inlet, MapInlet, AbstractOutlet, OutletInlet, OutletMapInlet} from \"@swim/streamlet\";\n\n/** @hidden */\nexport class GetOutlet extends AbstractOutlet<Value> {\n  /** @hidden */\n  readonly _keyInlet: OutletInlet<Value>;\n  /** @hidden */\n  readonly _mapInlet: OutletMapInlet<Value, Value, unknown>;\n\n  constructor() {\n    super();\n    this._keyInlet = new OutletInlet<Value>(this);\n    this._mapInlet = new OutletMapInlet<Value, Value, unknown>(this);\n  }\n\n  keyInlet(): Inlet<Value> {\n    return this._keyInlet;\n  }\n\n  mapInlet(): MapInlet<Value, Value, unknown> {\n    return this._mapInlet;\n  }\n\n  get(): Value {\n    const keyInput = this._keyInlet.input();\n    if (keyInput !== null) {\n      const key = keyInput.get();\n      if (key !== void 0) {\n        const mapInput = this._mapInlet.input();\n        if (mapInput !== null) {\n          const value = mapInput.get(key);\n          if (value !== void 0) {\n            return value;\n          }\n        }\n      }\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport abstract class BinaryOutlet extends AbstractOutlet<Value> {\n  /** @hidden */\n  readonly _operand1Inlet: Inlet<Value>;\n  /** @hidden */\n  readonly _operand2Inlet: Inlet<Value>;\n\n  constructor() {\n    super();\n    this._operand1Inlet = new OutletInlet<Value>(this);\n    this._operand2Inlet = new OutletInlet<Value>(this);\n  }\n\n  operand1Inlet(): Inlet<Value> {\n    return this._operand1Inlet;\n  }\n\n  operand2Inlet(): Inlet<Value> {\n    return this._operand2Inlet;\n  }\n\n  get(): Value {\n    const operand1Input = this._operand1Inlet.input();\n    const operand2Input = this._operand2Inlet.input();\n    if (operand1Input !== null && operand2Input !== null) {\n      const argument1 = operand1Input.get();\n      const argument2 = operand2Input.get();\n      if (argument1 !== void 0 && argument2 !== void 0) {\n        const result = this.evaluate(argument1, argument2);\n        return result.toValue();\n      }\n    }\n    return Value.absent();\n  }\n\n  protected abstract evaluate(argument1: Value, argument2: Value): Item;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport abstract class UnaryOutlet extends AbstractOutlet<Value> {\n  /** @hidden */\n  readonly _operandInlet: Inlet<Value>;\n\n  constructor() {\n    super();\n    this._operandInlet = new OutletInlet<Value>(this);\n  }\n\n  operandInlet(): Inlet<Value> {\n    return this._operandInlet;\n  }\n\n  get(): Value {\n    const operandInput = this._operandInlet.input();\n    if (operandInput !== null) {\n      const argument = operandInput.get();\n      if (argument !== void 0) {\n        const result = this.evaluate(argument);\n        return result.toValue();\n      }\n    }\n    return Value.absent();\n  }\n\n  protected abstract evaluate(argument: Value): Item;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport class ConditionalOutlet extends AbstractOutlet<Value> {\n  /** @hidden */\n  readonly _ifInlet: Inlet<Value>;\n  /** @hidden */\n  readonly _thenInlet: Inlet<Value>;\n  /** @hidden */\n  readonly _elseInlet: Inlet<Value>;\n\n  constructor() {\n    super();\n    this._ifInlet = new OutletInlet<Value>(this);\n    this._thenInlet = new OutletInlet<Value>(this);\n    this._elseInlet = new OutletInlet<Value>(this);\n  }\n\n  ifInlet(): Inlet<Value> {\n    return this._ifInlet;\n  }\n\n  thenInlet(): Inlet<Value> {\n    return this._thenInlet;\n  }\n\n  elseInlet(): Inlet<Value> {\n    return this._elseInlet;\n  }\n\n  get(): Value {\n    const ifInput = this._ifInlet.input();\n    if (ifInput !== null) {\n      const ifTerm = ifInput.get();\n      if (ifTerm !== void 0) {\n        if (ifTerm.booleanValue(false)) {\n          const thenInput = this._thenInlet.input();\n          if (thenInput !== null) {\n            const thenTerm = thenInput.get();\n            if (thenTerm !== void 0) {\n              return thenTerm;\n            }\n          }\n        } else {\n          const elseInput = this._elseInlet.input();\n          if (elseInput !== null) {\n            const elseTerm = elseInput.get();\n            if (elseTerm !== void 0) {\n              return elseTerm;\n            }\n          }\n        }\n      }\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport class OrOutlet extends AbstractOutlet<Value> {\n  /** @hidden */\n  readonly _operand1Inlet: Inlet<Value>;\n  /** @hidden */\n  readonly _operand2Inlet: Inlet<Value>;\n\n  constructor() {\n    super();\n    this._operand1Inlet = new OutletInlet<Value>(this);\n    this._operand2Inlet = new OutletInlet<Value>(this);\n  }\n\n  operand1Inlet(): Inlet<Value> {\n    return this._operand1Inlet;\n  }\n\n  operand2Inlet(): Inlet<Value> {\n    return this._operand2Inlet;\n  }\n\n  get(): Value {\n    const operand1Input = this._operand1Inlet.input();\n    const argument1 = operand1Input !== null ? operand1Input.get() : void 0;\n    if (argument1 !== void 0 && argument1.booleanValue(false)) {\n      return argument1;\n    }\n    const operand2Input = this._operand2Inlet.input();\n    const argument2 = operand2Input !== null ? operand2Input.get() : void 0;\n    if (argument2 !== void 0) {\n      return argument2;\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport class AndOutlet extends AbstractOutlet<Value> {\n  /** @hidden */\n  readonly _operand1Inlet: Inlet<Value>;\n  /** @hidden */\n  readonly _operand2Inlet: Inlet<Value>;\n\n  constructor() {\n    super();\n    this._operand1Inlet = new OutletInlet<Value>(this);\n    this._operand2Inlet = new OutletInlet<Value>(this);\n  }\n\n  operand1Inlet(): Inlet<Value> {\n    return this._operand1Inlet;\n  }\n\n  operand2Inlet(): Inlet<Value> {\n    return this._operand2Inlet;\n  }\n\n  get(): Value {\n    const operand1Input = this._operand1Inlet.input();\n    const argument1 = operand1Input !== null ? operand1Input.get() : void 0;\n    if (argument1 !== void 0) {\n      if (argument1.booleanValue(false)) {\n        const operand2Input = this._operand2Inlet.input();\n        const argument2 = operand2Input !== null ? operand2Input.get() : void 0;\n        if (argument2 !== void 0) {\n          return argument2;\n        }\n      }\n      return argument1;\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class BitwiseOrOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.bitwiseOr(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class BitwiseXorOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.bitwiseXor(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class BitwiseAndOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.bitwiseAnd(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class LtOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.lt(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class LeOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.le(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class EqOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.eq(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class NeOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.ne(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class GeOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.ge(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class GtOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.gt(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class PlusOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.plus(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class MinusOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.minus(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class TimesOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.times(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class DivideOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.divide(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class ModuloOutlet extends BinaryOutlet {\n  protected evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.modulo(argument2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {UnaryOutlet} from \"./UnaryOutlet\";\n\nexport class NotOutlet extends UnaryOutlet {\n  protected evaluate(argument: Value): Item {\n    return argument.not();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {UnaryOutlet} from \"./UnaryOutlet\";\n\nexport class BitwiseNotOutlet extends UnaryOutlet {\n  protected evaluate(argument: Value): Item {\n    return argument.bitwiseNot();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {UnaryOutlet} from \"./UnaryOutlet\";\n\nexport class NegativeOutlet extends UnaryOutlet {\n  protected evaluate(argument: Value): Item {\n    return argument.negative();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {UnaryOutlet} from \"./UnaryOutlet\";\n\nexport class PositiveOutlet extends UnaryOutlet {\n  protected evaluate(argument: Value): Item {\n    return argument.positive();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, Record, Func, Interpreter} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport class InvokeOutlet extends AbstractOutlet<Value> {\n  /** @hidden */\n  readonly _scope: Record;\n  /** @hidden */\n  readonly _funcInlet: Inlet<Value>;\n  /** @hidden */\n  readonly _argsInlet: Inlet<Value>;\n\n  constructor(scope: Record) {\n    super();\n    this._scope = scope;\n    this._funcInlet = new OutletInlet<Value>(this);\n    this._argsInlet = new OutletInlet<Value>(this);\n  }\n\n  funcInlet(): Inlet<Value> {\n    return this._funcInlet;\n  }\n\n  argsInlet(): Inlet<Value> {\n    return this._argsInlet;\n  }\n\n  get(): Value {\n    const funcInput = this._funcInlet.input();\n    const argsInput = this._argsInlet.input();\n    if (funcInput !== null && argsInput !== null) {\n      const func = funcInput.get();\n      if (func instanceof Func) {\n        const args = argsInput.get();\n        if (args !== void 0) {\n          const interpreter = new Interpreter();\n          interpreter.pushScope(this._scope);\n          const result = func.invoke(args, interpreter, void 0 /* TODO: generalize InvokeOperator to InvokeContext */);\n          return result.toValue();\n        }\n      }\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Value,\n  Record,\n  Selector,\n  IdentitySelector,\n  GetSelector,\n  GetAttrSelector,\n  GetItemSelector,\n  KeysSelector,\n  ValuesSelector,\n  ChildrenSelector,\n  DescendantsSelector,\n  FilterSelector,\n  Operator,\n  BinaryOperator,\n  UnaryOperator,\n  ConditionalOperator,\n  OrOperator,\n  AndOperator,\n  BitwiseOrOperator,\n  BitwiseXorOperator,\n  BitwiseAndOperator,\n  LtOperator,\n  LeOperator,\n  EqOperator,\n  NeOperator,\n  GeOperator,\n  GtOperator,\n  PlusOperator,\n  MinusOperator,\n  TimesOperator,\n  DivideOperator,\n  ModuloOperator,\n  NotOperator,\n  BitwiseNotOperator,\n  NegativeOperator,\n  PositiveOperator,\n  InvokeOperator,\n} from \"@swim/structure\";\nimport {Outlet, KeyOutlet, StreamletScope, ValueInput} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\nimport {GetOutlet} from \"./selector/GetOutlet\";\nimport {BinaryOutlet} from \"./operator/BinaryOutlet\";\nimport {UnaryOutlet} from \"./operator/UnaryOutlet\";\nimport {ConditionalOutlet} from \"./operator/ConditionalOutlet\";\nimport {OrOutlet} from \"./operator/OrOutlet\";\nimport {AndOutlet} from \"./operator/AndOutlet\";\nimport {BitwiseOrOutlet} from \"./operator/BitwiseOrOutlet\";\nimport {BitwiseXorOutlet} from \"./operator/BitwiseXorOutlet\";\nimport {BitwiseAndOutlet} from \"./operator/BitwiseAndOutlet\";\nimport {LtOutlet} from \"./operator/LtOutlet\";\nimport {LeOutlet} from \"./operator/LeOutlet\";\nimport {EqOutlet} from \"./operator/EqOutlet\";\nimport {NeOutlet} from \"./operator/NeOutlet\";\nimport {GeOutlet} from \"./operator/GeOutlet\";\nimport {GtOutlet} from \"./operator/GtOutlet\";\nimport {PlusOutlet} from \"./operator/PlusOutlet\";\nimport {MinusOutlet} from \"./operator/MinusOutlet\";\nimport {TimesOutlet} from \"./operator/TimesOutlet\";\nimport {DivideOutlet} from \"./operator/DivideOutlet\";\nimport {ModuloOutlet} from \"./operator/ModuloOutlet\";\nimport {NotOutlet} from \"./operator/NotOutlet\";\nimport {BitwiseNotOutlet} from \"./operator/BitwiseNotOutlet\";\nimport {NegativeOutlet} from \"./operator/NegativeOutlet\";\nimport {PositiveOutlet} from \"./operator/PositiveOutlet\";\nimport {InvokeOutlet} from \"./operator/InvokeOutlet\";\n\nexport class Dataflow {\n  /** @hidden */\n  private constructor() {\n    // nop\n  }\n\n  /**\n   * Returns an `Outlet` that evaluates the given `expr` in the context of the\n   * given `scope`, and updates whenever any dependent expression updates.\n   */\n  static compile(expr: Value, scope: Outlet<Value>): Outlet<Value> {\n    if (scope instanceof KeyOutlet) {\n      const value = scope.get();\n      if (Outlet.is<Value>(value)) {\n        scope = value;\n      }\n    }\n    if (expr.isConstant()) {\n      return new ValueInput<Value>(expr);\n    } else if (expr instanceof Selector) {\n      return Dataflow.compileSelector(expr, scope);\n    } else if (expr instanceof Operator) {\n      return Dataflow.compileOperator(expr, scope);\n    }\n    throw new TypeError(\"\" + expr);\n  }\n\n  private static compileSelector(selector: Selector, scope: Outlet<Value>): Outlet<Value> {\n    if (selector instanceof IdentitySelector) {\n      return Dataflow.compileIdentitySelector(scope);\n    } else if (selector instanceof GetSelector) {\n      return Dataflow.compileGetSelector(selector, scope);\n    } else if (selector instanceof GetAttrSelector) {\n      return Dataflow.compileGetAttrSelector(selector, scope);\n    } else if (selector instanceof GetItemSelector) {\n      return Dataflow.compileGetItemSelector(selector, scope);\n    } else if (selector instanceof KeysSelector) {\n      return Dataflow.compileKeysSelector(scope);\n    } else if (selector instanceof ValuesSelector) {\n      return Dataflow.compileValuesSelector(scope);\n    } else if (selector instanceof ChildrenSelector) {\n      return Dataflow.compileChildrenSelector(scope);\n    } else if (selector instanceof DescendantsSelector) {\n      return Dataflow.compileDescendantsSelector(scope);\n    } else if (selector instanceof FilterSelector) {\n      return Dataflow.compileFilterSelector(selector, scope);\n    }\n    throw new TypeError(\"\" + selector);\n  }\n\n  private static compileIdentitySelector(scope: Outlet<Value>): Outlet<Value> {\n    return scope;\n  }\n\n  private static compileGetSelector(selector: GetSelector, scope: Outlet<Value>): Outlet<Value> {\n    const key = selector.accessor();\n    if (key.isConstant()) {\n      if (RecordOutlet.is(scope)) {\n        const outlet = scope.outlet(key);\n        if (outlet !== null) {\n          return Dataflow.compile(selector.then(), outlet);\n        }\n      } else if (StreamletScope.is<Value>(scope)) {\n        const name = key.stringValue(void 0);\n        if (name !== void 0) {\n          const outlet = scope.outlet(name);\n          if (outlet !== null) {\n            return Dataflow.compile(selector.then(), outlet);\n          }\n        }\n      }\n    } else {\n      const getOutlet = new GetOutlet();\n      const outlet = Dataflow.compile(key, scope);\n      getOutlet.keyInlet().bindInput(outlet);\n      getOutlet.mapInlet().bindInput(scope);\n      return getOutlet;\n    }\n    return null as unknown as Outlet<Value>;\n  }\n\n  private static compileGetAttrSelector(selector: GetAttrSelector, scope: Outlet<Value>): Outlet<Value> {\n    throw new Error(); // TODO\n  }\n\n  private static compileGetItemSelector(selector: GetItemSelector, scope: Outlet<Value>): Outlet<Value> {\n    throw new Error(); // TODO\n  }\n\n  private static compileKeysSelector(scope: Outlet<Value>): Outlet<Value> {\n    throw new Error(); // TODO\n  }\n\n  private static compileValuesSelector(scope: Outlet<Value>): Outlet<Value> {\n    throw new Error(); // TODO\n  }\n\n  private static compileChildrenSelector(scope: Outlet<Value>): Outlet<Value> {\n    throw new Error(); // TODO\n  }\n\n  private static compileDescendantsSelector(scope: Outlet<Value>): Outlet<Value> {\n    throw new Error(); // TODO\n  }\n\n  private static compileFilterSelector(selector: FilterSelector, scope: Outlet<Value>): Outlet<Value> {\n    throw new Error(); // TODO\n  }\n\n  private static compileOperator(operator: Operator, scope: Outlet<Value>): Outlet<Value> {\n    if (operator instanceof ConditionalOperator) {\n      return Dataflow.compileConditionalOperator(operator, scope);\n    } else if (operator instanceof BinaryOperator) {\n      return Dataflow.compileBinaryOperator(operator, scope);\n    } else if (operator instanceof UnaryOperator) {\n      return Dataflow.compileUnaryOperator(operator, scope);\n    } else if (operator instanceof InvokeOperator) {\n      return Dataflow.compileInvokeOperator(operator, scope);\n    }\n    throw new TypeError(\"\" + operator);\n  }\n\n  private static compileConditionalOperator(operator: ConditionalOperator, scope: Outlet<Value>): Outlet<Value> {\n    const outlet = new ConditionalOutlet();\n    const ifTerm = operator.ifTerm().toValue();\n    const thenTerm = operator.thenTerm().toValue();\n    const elseTerm = operator.elseTerm().toValue();\n    const ifOutlet = Dataflow.compile(ifTerm, scope);\n    const thenOutlet = Dataflow.compile(thenTerm, scope);\n    const elseOutlet = Dataflow.compile(elseTerm, scope);\n    outlet.ifInlet().bindInput(ifOutlet);\n    outlet.thenInlet().bindInput(thenOutlet);\n    outlet.elseInlet().bindInput(elseOutlet);\n    return outlet;\n  }\n\n  private static compileBinaryOperator(operator: BinaryOperator, scope: Outlet<Value>): Outlet<Value> {\n    if (operator instanceof OrOperator) {\n      return Dataflow.compileOrOperator(operator, scope);\n    } else if (operator instanceof AndOperator) {\n      return Dataflow.compileAndOperator(operator, scope);\n    } else if (operator instanceof BitwiseOrOperator) {\n      return Dataflow.compileBitwiseOrOperator(operator, scope);\n    } else if (operator instanceof BitwiseXorOperator) {\n      return Dataflow.compileBitwiseXorOperator(operator, scope);\n    } else if (operator instanceof BitwiseAndOperator) {\n      return Dataflow.compileBitwiseAndOperator(operator, scope);\n    } else if (operator instanceof LtOperator) {\n      return Dataflow.compileLtOperator(operator, scope);\n    } else if (operator instanceof LeOperator) {\n      return Dataflow.compileLeOperator(operator, scope);\n    } else if (operator instanceof EqOperator) {\n      return Dataflow.compileEqOperator(operator, scope);\n    } else if (operator instanceof NeOperator) {\n      return Dataflow.compileNeOperator(operator, scope);\n    } else if (operator instanceof GeOperator) {\n      return Dataflow.compileGeOperator(operator, scope);\n    } else if (operator instanceof GtOperator) {\n      return Dataflow.compileGtOperator(operator, scope);\n    } else if (operator instanceof PlusOperator) {\n      return Dataflow.compilePlusOperator(operator, scope);\n    } else if (operator instanceof MinusOperator) {\n      return Dataflow.compileMinusOperator(operator, scope);\n    } else if (operator instanceof TimesOperator) {\n      return Dataflow.compileTimesOperator(operator, scope);\n    } else if (operator instanceof DivideOperator) {\n      return Dataflow.compileDivideOperator(operator, scope);\n    } else if (operator instanceof ModuloOperator) {\n      return Dataflow.compileModuloOperator(operator, scope);\n    }\n    throw new TypeError(\"\" + operator);\n  }\n\n  private static compileBinaryOutlet(operator: BinaryOperator, outlet: BinaryOutlet, scope: Outlet<Value>): Outlet<Value> {\n    const operand1 = operator.operand1().toValue();\n    const operand2 = operator.operand2().toValue();\n    const operand1Outlet = Dataflow.compile(operand1, scope);\n    const operand2Outlet = Dataflow.compile(operand2, scope);\n    outlet.operand1Inlet().bindInput(operand1Outlet);\n    outlet.operand2Inlet().bindInput(operand2Outlet);\n    return outlet;\n  }\n\n  private static compileOrOperator(operator: OrOperator, scope: Outlet<Value>): Outlet<Value> {\n    const outlet = new OrOutlet();\n    const operand1 = operator.operand1().toValue();\n    const operand2 = operator.operand2().toValue();\n    const operand1Outlet = Dataflow.compile(operand1, scope);\n    const operand2Outlet = Dataflow.compile(operand2, scope);\n    outlet.operand1Inlet().bindInput(operand1Outlet);\n    outlet.operand2Inlet().bindInput(operand2Outlet);\n    return outlet;\n  }\n\n  private static compileAndOperator(operator: AndOperator, scope: Outlet<Value>): Outlet<Value> {\n    const outlet = new AndOutlet();\n    const operand1 = operator.operand1().toValue();\n    const operand2 = operator.operand2().toValue();\n    const operand1Outlet = Dataflow.compile(operand1, scope);\n    const operand2Outlet = Dataflow.compile(operand2, scope);\n    outlet.operand1Inlet().bindInput(operand1Outlet);\n    outlet.operand2Inlet().bindInput(operand2Outlet);\n    return outlet;\n  }\n\n  private static compileBitwiseOrOperator(operator: BitwiseOrOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new BitwiseOrOutlet(), scope);\n  }\n\n  private static compileBitwiseXorOperator(operator: BitwiseXorOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new BitwiseXorOutlet(), scope);\n  }\n\n  private static compileBitwiseAndOperator(operator: BitwiseAndOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new BitwiseAndOutlet(), scope);\n  }\n\n  private static compileLtOperator(operator: LtOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new LtOutlet(), scope);\n  }\n\n  private static compileLeOperator(operator: LeOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new LeOutlet(), scope);\n  }\n\n  private static compileEqOperator(operator: EqOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new EqOutlet(), scope);\n  }\n\n  private static compileNeOperator(operator: NeOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new NeOutlet(), scope);\n  }\n\n  private static compileGeOperator(operator: GeOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new GeOutlet(), scope);\n  }\n\n  private static compileGtOperator(operator: GtOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new GtOutlet(), scope);\n  }\n\n  private static compilePlusOperator(operator: PlusOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new PlusOutlet(), scope);\n  }\n\n  private static compileMinusOperator(operator: MinusOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new MinusOutlet(), scope);\n  }\n\n  private static compileTimesOperator(operator: TimesOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new TimesOutlet(), scope);\n  }\n\n  private static compileDivideOperator(operator: DivideOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new DivideOutlet(), scope);\n  }\n\n  private static compileModuloOperator(operator: ModuloOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileBinaryOutlet(operator, new ModuloOutlet(), scope);\n  }\n\n  private static compileUnaryOperator(operator: UnaryOperator, scope: Outlet<Value>): Outlet<Value> {\n    if (operator instanceof NotOperator) {\n      return Dataflow.compileNotOperator(operator, scope);\n    } else if (operator instanceof BitwiseNotOperator) {\n      return Dataflow.compileBitwiseNotOperator(operator, scope);\n    } else if (operator instanceof NegativeOperator) {\n      return Dataflow.compileNegativeOperator(operator, scope);\n    } else if (operator instanceof PositiveOperator) {\n      return Dataflow.compilePositiveOperator(operator, scope);\n    }\n    throw new TypeError(\"\" + operator);\n  }\n\n  private static compileUnaryOutlet(operator: UnaryOperator, outlet: UnaryOutlet, scope: Outlet<Value>): Outlet<Value> {\n    const operand = operator.operand().toValue();\n    const operandOutlet = Dataflow.compile(operand, scope);\n    outlet.operandInlet().bindInput(operandOutlet);\n    return outlet;\n  }\n\n  private static compileNotOperator(operator: NotOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileUnaryOutlet(operator, new NotOutlet(), scope);\n  }\n\n  private static compileBitwiseNotOperator(operator: BitwiseNotOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileUnaryOutlet(operator, new BitwiseNotOutlet(), scope);\n  }\n\n  private static compileNegativeOperator(operator: NegativeOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileUnaryOutlet(operator, new NegativeOutlet(), scope);\n  }\n\n  private static compilePositiveOperator(operator: PositiveOperator, scope: Outlet<Value>): Outlet<Value> {\n    return Dataflow.compileUnaryOutlet(operator, new PositiveOutlet(), scope);\n  }\n\n  private static compileInvokeOperator(operator: InvokeOperator, scope: Outlet<Value>): Outlet<Value> {\n    const func = operator.func();\n    const args = operator.args();\n    const invokeOutlet = new InvokeOutlet(scope as unknown as Record);\n    const funcOutlet = Dataflow.compile(func, scope);\n    const argsOutlet = Dataflow.compile(args, scope);\n    invokeOutlet.funcInlet().bindInput(funcOutlet);\n    invokeOutlet.argsInlet().bindInput(argsOutlet);\n    return invokeOutlet;\n  }\n}\nRecordOutlet.Dataflow = Dataflow;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BlockParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _keyParser: Parser<V> | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, keyParser?: Parser<V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._keyParser = keyParser;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return BlockParser.parse(input, this._recon, this._builder, this._keyParser,\n                             this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     keyParser?: Parser<V>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    block: do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 33/*'!'*/ || c === 34/*'\"'*/ || c === 36/*'$'*/ || c === 37/*'%'*/\n              || c === 39/*'\\''*/ || c === 40/*'('*/ || c === 43/*'+'*/ || c === 45/*'-'*/\n              || c >= 48/*'0'*/ && c <= 57/*'9'*/ || c === 64/*'@'*/\n              || c === 91/*'['*/ || c === 123/*'{'*/ || c === 126/*'~'*/\n              || Recon.isIdentStartChar(c)) {\n            builder = builder || recon.valueBuilder();\n            step = 2;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 7;\n          } else {\n            if (builder !== void 0) {\n              return Parser.done(builder.bind());\n            } else {\n              return Parser.done(recon.absent());\n            }\n          }\n        } else if (input.isDone()) {\n          if (builder !== void 0) {\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(recon.absent());\n          }\n        }\n      }\n      if (step === 2) {\n        if (keyParser === void 0) {\n          keyParser = recon.parseBlockExpression(input);\n        }\n        while (keyParser.isCont() && !input.isEmpty()) {\n          keyParser = keyParser.feed(input);\n        }\n        if (keyParser.isDone()) {\n          step = 3;\n        } else if (keyParser.isError()) {\n          return keyParser;\n        }\n      }\n      if (step === 3) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 58/*':'*/) {\n            input = input.step();\n            step = 4;\n          } else {\n            builder!.push(recon.item(keyParser!.bind()));\n            keyParser = void 0;\n            step = 6;\n          }\n        } else if (input.isDone()) {\n          builder!.push(recon.item(keyParser!.bind()));\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 4) {\n        while (input.isCont() && Recon.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          step = 5;\n        } else if (input.isDone()) {\n          builder!.push(recon.slot(keyParser!.bind()));\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 5) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseBlockExpression(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          builder!.push(recon.slot(keyParser!.bind(), valueParser.bind()));\n          keyParser = void 0;\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser.isError()) {\n          return valueParser;\n        }\n      }\n      if (step === 6) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 44/*','*/ || c === 59/*';'*/ || Recon.isNewline(c)) {\n            input = input.step();\n            step = 1;\n            continue;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 7;\n          } else {\n            return Parser.done(builder!.bind());\n          }\n        } else if (input.isDone()) {\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 7) {\n        while (input.isCont()) {\n          c = input.head();\n          if (!Recon.isNewline(c)) {\n            input = input.step();\n          } else {\n            step = 1;\n            continue block;\n          }\n        }\n        if (input.isDone()) {\n          step = 1;\n          continue;\n        }\n      }\n      break;\n    } while (true);\n    return new BlockParser<I, V>(recon, builder, keyParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class AttrParser<I, V> extends Parser<I> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _keyParser: Parser<V> | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, keyParser?: Parser<V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._keyParser = keyParser;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<I> {\n    return AttrParser.parse(input, this._recon, this._keyParser,\n                            this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, keyParser?: Parser<V>,\n                     valueParser?: Parser<V>, step: number = 1): Parser<I> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 64/*'@'*/) {\n          input = input.step();\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(64/*'@'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(64/*'@'*/, input));\n      }\n    }\n    if (step === 2) {\n      if (keyParser === void 0) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n            keyParser = recon.parseString(input);\n          } else if (Recon.isIdentStartChar(c)) {\n            keyParser = recon.parseIdent(input);\n          } else {\n            return Parser.error(Diagnostic.expected(\"attribute name\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"attribute name\", input));\n        }\n      } else {\n        keyParser = keyParser.feed(input);\n      }\n      if (keyParser !== void 0) {\n        if (keyParser.isDone()) {\n          step = 3;\n        } else if (keyParser.isError()) {\n          return keyParser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      if (input.isCont() && input.head() === 40/*'('*/) {\n        input = input.step();\n        step = 4;\n      } else if (!input.isEmpty()) {\n        return Parser.done(recon.attr(keyParser!.bind()));\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          return Parser.done(recon.attr(keyParser!.bind()));\n        } else {\n          step = 5;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    if (step === 5) {\n      if (valueParser === void 0) {\n        valueParser = recon.parseBlock(input);\n      }\n      while (valueParser.isCont() && !input.isEmpty()) {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 6;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 6) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          return Parser.done(recon.attr(keyParser!.bind(), valueParser!.bind()));\n        } else {\n          return Parser.error(Diagnostic.expected(\")\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new AttrParser<I, V>(recon, keyParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BlockItemParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _fieldParser: Parser<I> | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, fieldParser?: Parser<I>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._fieldParser = fieldParser;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return BlockItemParser.parse(input, this._recon, this._builder, this._fieldParser,\n                                 this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     fieldParser?: Parser<I>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 64/*'@'*/) {\n            fieldParser = recon.parseAttr(input);\n            step = 2;\n          } else if (c === 123/*'{'*/) {\n            builder = builder || recon.recordBuilder();\n            valueParser = recon.parseRecord(input, builder);\n            step = 5;\n          } else if (c === 91/*'['*/) {\n            builder = builder || recon.recordBuilder();\n            valueParser = recon.parseMarkup(input, builder);\n            step = 5;\n          } else if (Recon.isIdentStartChar(c)) {\n            valueParser = recon.parseIdent(input);\n            step = 4;\n          } else if (c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n            valueParser = recon.parseString(input);\n            step = 4;\n          } else if (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n            valueParser = recon.parseNumber(input);\n            step = 4;\n          } else if (c === 37/*'%'*/) {\n            valueParser = recon.parseData(input);\n            step = 4;\n          } else if (c === 36/*'$'*/) {\n            valueParser = recon.parseSelector(input);\n            step = 4;\n          } else if (builder === void 0) {\n            return Parser.done(recon.extant());\n          } else {\n            return Parser.done(builder.bind());\n          }\n        } else if (input.isDone()) {\n          if (builder === void 0) {\n            return Parser.done(recon.extant());\n          } else {\n            return Parser.done(builder.bind());\n          }\n        }\n      }\n      if (step === 2) {\n        while (fieldParser!.isCont() && !input.isEmpty()) {\n          fieldParser = fieldParser!.feed(input);\n        }\n        if (fieldParser!.isDone()) {\n          builder = builder || recon.valueBuilder();\n          builder.push(fieldParser!.bind());\n          fieldParser = void 0;\n          step = 3;\n        } else if (fieldParser!.isError()) {\n          return fieldParser!.asError();\n        }\n      }\n      if (step === 3) {\n        while (input.isCont() && Recon.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          step = 1;\n          continue;\n        } else if (input.isDone()) {\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 4) {\n        while (valueParser!.isCont() && !input.isEmpty()) {\n          valueParser = valueParser!.feed(input);\n        }\n        if (valueParser!.isDone()) {\n          builder = builder || recon.valueBuilder();\n          builder.push(recon.item(valueParser!.bind()));\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser!.isError()) {\n          return valueParser!;\n        }\n      }\n      if (step === 5) {\n        while (valueParser!.isCont() && !input.isEmpty()) {\n          valueParser = valueParser!.feed(input);\n        }\n        if (valueParser!.isDone()) {\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser!.isError()) {\n          return valueParser!;\n        }\n      }\n      if (step === 6) {\n        while (input.isCont() && Recon.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (input.head() === 64/*'@'*/) {\n            step = 1;\n          } else {\n            return Parser.done(builder!.bind());\n          }\n        } else if (input.isDone()) {\n          return Parser.done(builder!.bind());\n        }\n      }\n      break;\n    } while (true);\n    return new BlockItemParser<I, V>(recon, builder, fieldParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class InlineItemParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _fieldParser: Parser<I> | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, fieldParser?: Parser<I>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._fieldParser = fieldParser;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return InlineItemParser.parse(input, this._recon, this._builder, this._fieldParser,\n                                  this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     fieldParser?: Parser<I>,  valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 64/*'@'*/) {\n          fieldParser = recon.parseAttr(input);\n          step = 2;\n        } else if (c === 123/*'{'*/) {\n          if (builder !== void 0) {\n            valueParser = recon.parseRecord(input, builder);\n            step = 5;\n          } else {\n            valueParser = recon.parseRecord(input);\n            step = 4;\n          }\n        } else if (c === 91/*'['*/) {\n          if (builder !== void 0) {\n            valueParser = recon.parseMarkup(input, builder);\n            step = 5;\n          } else {\n            valueParser = recon.parseMarkup(input);\n            step = 4;\n          }\n        } else if (builder === void 0) {\n          return Parser.done(recon.extant());\n        } else {\n          return Parser.done(builder.bind());\n        }\n      } else if (input.isDone()) {\n        if (builder === void 0) {\n          return Parser.done(recon.extant());\n        } else {\n          return Parser.done(builder.bind());\n        }\n      }\n    }\n    if (step === 2) {\n      while (fieldParser!.isCont() && !input.isEmpty()) {\n        fieldParser = fieldParser!.feed(input);\n      }\n      if (fieldParser!.isDone()) {\n        builder = builder || recon.valueBuilder();\n        builder.push(fieldParser!.bind());\n        fieldParser = void 0;\n        step = 3;\n      } else if (fieldParser!.isError()) {\n        return fieldParser!.asError();\n      }\n    }\n    if (step === 3) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 123/*'{'*/) {\n          valueParser = recon.parseRecord(input, builder);\n          step = 5;\n        } else if (c === 91/*'['*/) {\n          valueParser = recon.parseMarkup(input, builder);\n          step = 5;\n        } else {\n          return Parser.done(builder!.bind());\n        }\n      } else if (input.isDone()) {\n        return Parser.done(builder!.bind());\n      }\n    }\n    if (step === 4) {\n      while (valueParser!.isCont() && !input.isEmpty()) {\n        valueParser = valueParser!.feed(input);\n      }\n      if (valueParser!.isDone()) {\n        builder = builder || recon.valueBuilder();\n        builder.push(recon.item(valueParser!.bind()));\n        return Parser.done(builder.bind());\n      } else if (valueParser!.isError()) {\n        return valueParser!;\n      }\n    }\n    if (step === 5) {\n      while (valueParser!.isCont() && !input.isEmpty()) {\n        valueParser = valueParser!.feed(input);\n      }\n      if (valueParser!.isDone()) {\n        return Parser.done(builder!.bind());\n      } else if (valueParser!.isError()) {\n        return valueParser!;\n      }\n    }\n    return new InlineItemParser<I, V>(recon, builder, fieldParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class RecordParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _keyParser: Parser<V> | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, keyParser?: Parser<V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._keyParser = keyParser;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return RecordParser.parse(input, this._recon, this._builder, this._keyParser,\n                              this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     keyParser?: Parser<V>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 123/*'{'*/) {\n          input = input.step();\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(123/*'{'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(123/*'{'*/, input));\n      }\n    }\n    block: do {\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          builder = builder || recon.recordBuilder();\n          if (c === 125/*'}'*/) {\n            input = input.step();\n            return Parser.done(builder.bind());\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 8;\n          } else {\n            step = 3;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(125/*'}'*/, input));\n        }\n      }\n      if (step === 3) {\n        if (keyParser === void 0) {\n          keyParser = recon.parseBlockExpression(input);\n        }\n        while (keyParser.isCont() && !input.isEmpty()) {\n          keyParser = keyParser.feed(input);\n        }\n        if (keyParser.isDone()) {\n          step = 4;\n        } else if (keyParser.isError()) {\n          return keyParser;\n        }\n      }\n      if (step === 4) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 58/*':'*/) {\n            input = input.step();\n            step = 5;\n          } else {\n            builder!.push(recon.item(keyParser!.bind()));\n            keyParser = void 0;\n            step = 7;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(125/*'}'*/, input));\n        }\n      }\n      if (step === 5) {\n        while (input.isCont() && Recon.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          step = 6;\n        } else if (input.isDone()) {\n          builder!.push(recon.slot(keyParser!.bind()));\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 6) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseBlockExpression(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          builder!.push(recon.slot(keyParser!.bind(), valueParser.bind()));\n          keyParser = void 0;\n          valueParser = void 0;\n          step = 7;\n        } else if (valueParser.isError()) {\n          return valueParser;\n        }\n      }\n      if (step === 7) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 44/*','*/ || c === 59/*';'*/ || Recon.isNewline(c)) {\n            input = input.step();\n            step = 2;\n            continue;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 8;\n          } else if (c === 125/*'}'*/) {\n            input = input.step();\n            return Parser.done(builder!.bind());\n          } else {\n            return Parser.error(Diagnostic.expected(\"'}', ';', ',', or newline\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(125/*'}'*/, input));\n        }\n      }\n      if (step === 8) {\n        while (input.isCont()) {\n          c = input.head();\n          if (!Recon.isNewline(c)) {\n            input = input.step();\n          } else {\n            step = 2;\n            continue block;\n          }\n        }\n        if (input.isDone()) {\n          step = 2;\n          continue;\n        }\n      }\n      break;\n    } while (true);\n    return new RecordParser<I, V>(recon, builder, keyParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class MarkupParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _textOutput: Output<V> | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, textOutput?: Output<V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._textOutput = textOutput;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return MarkupParser.parse(input, this._recon, this._builder, this._textOutput,\n                              this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     textOutput?: Output<V>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 91/*'['*/) {\n          input = input.step();\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(91/*'['*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(91/*'['*/, input));\n      }\n    }\n    do {\n      if (step === 2) {\n        while (input.isCont()) {\n          c = input.head();\n          if (c !== 64/*'@'*/ && c !== 91/*'['*/ && c !== 92/*'\\\\'*/ && c !== 93/*']'*/\n              && c !== 123/*'{'*/ && c !== 125/*'}'*/) {\n            input = input.step();\n            textOutput = textOutput || recon.textOutput();\n            textOutput.write(c);\n          } else {\n            break;\n          }\n        }\n        if (input.isCont()) {\n          if (c === 93/*']'*/) {\n            input = input.step();\n            builder = builder || recon.recordBuilder();\n            if (textOutput !== void 0) {\n              builder.push(recon.item(textOutput.bind()));\n            }\n            return Parser.done(builder.bind());\n          } else if (c === 64/*'@'*/) {\n            builder = builder || recon.recordBuilder();\n            if (textOutput !== void 0) {\n              builder.push(recon.item(textOutput.bind()));\n              textOutput = void 0;\n            }\n            valueParser = recon.parseInlineItem(input);\n            step = 3;\n          } else if (c === 123/*'{'*/) {\n            builder = builder || recon.recordBuilder();\n            if (textOutput !== void 0) {\n              builder.push(recon.item(textOutput.bind()));\n              textOutput = void 0;\n            }\n            valueParser = recon.parseRecord(input, builder);\n            step = 4;\n          } else if (c === 91/*'['*/) {\n            builder = builder || recon.recordBuilder();\n            if (textOutput !== void 0) {\n              builder.push(recon.item(textOutput.bind()));\n              textOutput = void 0;\n            }\n            valueParser = recon.parseMarkup(input, builder);\n            step = 4;\n          } else if (c === 92/*'\\\\'*/) {\n            input = input.step();\n            step = 5;\n          } else {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 3) {\n        while (valueParser!.isCont() && !input.isEmpty()) {\n          valueParser = valueParser!.feed(input);\n        }\n        if (valueParser!.isDone()) {\n          builder!.push(recon.item(valueParser!.bind()));\n          valueParser = void 0;\n          step = 2;\n          continue;\n        } else if (valueParser!.isError()) {\n          return valueParser!;\n        }\n      }\n      if (step === 4) {\n        while (valueParser!.isCont() && !input.isEmpty()) {\n          valueParser = valueParser!.feed(input);\n        }\n        if (valueParser!.isDone()) {\n          valueParser = void 0;\n          step = 2;\n          continue;\n        } else if (valueParser!.isError()) {\n          return valueParser!;\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          c = input.head();\n          textOutput = textOutput || recon.textOutput();\n          if (c === 34/*'\"'*/ || c === 36/*'$'*/ || c === 39/*'\\''*/ || c === 47/*'/'*/\n              || c === 64/*'@'*/ || c === 91/*'['*/ || c === 92/*'\\\\'*/ || c === 93/*']'*/\n              || c === 123/*'{'*/ || c === 125/*'}'*/) {\n            input = input.step();\n            textOutput.write(c);\n            step = 2;\n          } else if (c === 98/*'b'*/) {\n            input = input.step();\n            textOutput.write(8/*'\\b'*/);\n            step = 2;\n          } else if (c === 102/*'f'*/) {\n            input = input.step();\n            textOutput.write(12/*'\\f'*/);\n            step = 2;\n          } else if (c === 110/*'n'*/) {\n            input = input.step();\n            textOutput.write(10/*'\\n'*/);\n            step = 2;\n          } else if (c === 114/*'r'*/) {\n            input = input.step();\n            textOutput.write(13/*'\\r'*/);\n            step = 2;\n          } else if (c === 116/*'t'*/) {\n            input = input.step();\n            textOutput.write(9/*'\\t'*/);\n            step = 2;\n          } else {\n            return Parser.error(Diagnostic.expected(\"escape character\", input));\n          }\n          continue;\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"escape character\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new MarkupParser<I, V>(recon, builder, textOutput, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Base64} from \"@swim/codec\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class DataParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _base64Parser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, base64Parser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._base64Parser = base64Parser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return DataParser.parse(input, this._recon, this._base64Parser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>,\n                     base64Parser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(37/*'%'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(37/*'%'*/, input));\n      }\n    }\n    if (step === 2) {\n      if (base64Parser === void 0) {\n        base64Parser = Base64.standard().parse(input, recon.dataOutput());\n      }\n      while (base64Parser.isCont() && !input.isEmpty()) {\n        base64Parser = base64Parser.feed(input);\n      }\n      if (base64Parser.isDone()) {\n        return base64Parser;\n      } else if (base64Parser.isError()) {\n        return base64Parser;\n      }\n    }\n    return new DataParser<I, V>(recon, base64Parser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class IdentParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _output: Output<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, output?: Output<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._output = output;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return IdentParser.parse(input, this._recon, this._output, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, output?: Output<V>,\n                     step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (Recon.isIdentStartChar(c)) {\n          input = input.step();\n          output = output || recon.textOutput();\n          output = output.write(c);\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(\"identifier\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"identifier\", input));\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Recon.isIdentChar(c))) {\n        input = input.step();\n        output!.write(c);\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(recon.ident(output!.bind()));\n      }\n    }\n    return new IdentParser<I, V>(recon, output, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class StringParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _output: Output<V> | undefined;\n  private readonly _quote: number | undefined;\n  private readonly _code: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, output?: Output<V>, quote?: number,\n              code?: number, step?: number) {\n    super();\n    this._recon = recon;\n    this._output = output;\n    this._quote = quote;\n    this._code = code;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return StringParser.parse(input, this._recon, this._output, this._quote,\n                              this._code, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, output?: Output<V>,\n                     quote: number = 0, code: number = 0, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 34/*'\"'*/ || c === 39/*'\\''*/ && (quote === c || quote === 0)) {\n          input = input.step();\n          output = output || recon.textOutput();\n          quote = c;\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(\"string\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"string\", input));\n      }\n    }\n    string: do {\n      if (step === 2) {\n        while (input.isCont()) {\n          c = input.head();\n          if (c >= 0x20 && c !== quote && c !== 92/*'\\\\'*/) {\n            input = input.step();\n            output!.write(c);\n          } else {\n            break;\n          }\n        }\n        if (input.isCont()) {\n          if (c === quote) {\n            input = input.step();\n            return Parser.done(output!.bind());\n          } else if (c === 92/*'\\\\'*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return Parser.error(Diagnostic.expected(quote, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(quote, input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 34/*'\"'*/ || c === 36/*'$'*/ || c === 39/*'\\''*/ || c === 47/*'/'*/\n              || c === 64/*'@'*/ || c === 91/*'['*/ || c === 92/*'\\\\'*/ || c === 93/*']'*/\n              || c === 123/*'{'*/ || c === 125/*'}'*/) {\n            input = input.step();\n            output!.write(c);\n            step = 2;\n            continue;\n          } else if (c === 98/*'b'*/) {\n            input = input.step();\n            output!.write(8/*'\\b'*/);\n            step = 2;\n            continue;\n          } else if (c === 102/*'f'*/) {\n            input = input.step();\n            output!.write(12/*'\\f'*/);\n            step = 2;\n            continue;\n          } else if (c === 110/*'n'*/) {\n            input = input.step();\n            output!.write(10/*'\\n'*/);\n            step = 2;\n            continue;\n          } else if (c === 114/*'r'*/) {\n            input = input.step();\n            output!.write(13/*'\\r'*/);\n            step = 2;\n            continue;\n          } else if (c === 116/*'t'*/) {\n            input = input.step();\n            output!.write(9/*'\\t'*/);\n            step = 2;\n            continue;\n          } else if (c === 117/*'u'*/) {\n            input = input.step();\n            step = 4;\n          } else {\n            return Parser.error(Diagnostic.expected(\"escape character\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"escape character\", input));\n        }\n      }\n      if (step >= 4) {\n        do {\n          if (input.isCont()) {\n            c = input.head();\n            if (Base16.isDigit(c)) {\n              input = input.step();\n              code = 16 * code + Base16.decodeDigit(c);\n              if (step <= 6) {\n                step += 1;\n                continue;\n              } else {\n                output!.write(code);\n                code = 0;\n                step = 2;\n                continue string;\n              }\n            } else {\n              return Parser.error(Diagnostic.expected(\"hex digit\", input));\n            }\n          } else if (input.isDone()) {\n            return Parser.error(Diagnostic.expected(\"hex digit\", input));\n          }\n          break;\n        } while (true);\n      }\n      break;\n    } while (true);\n    return new StringParser<I, V>(recon, output, quote, code, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base16} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class NumberParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _sign: number | undefined;\n  private readonly _value: number | undefined;\n  private readonly _mode: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, sign?: number, value?: number, mode?: number, step?: number) {\n    super();\n    this._recon = recon;\n    this._sign = sign;\n    this._value = value;\n    this._mode = mode;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return NumberParser.parse(input, this._recon, this._sign, this._value, this._mode, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, sign: number = 1, value: number = 0,\n                     mode: number = 2, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 45/*'-'*/) {\n          input = input.step();\n          sign = -1;\n        }\n        step = 2;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"number\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 48/*'0'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          value = sign * (c - 48/*'0'*/);\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          const newValue = 10 * value + sign * (c - 48/*'0'*/);\n          if (-9007199254740991 <= newValue && newValue <= 9007199254740992) {\n            value = newValue;\n            input = input.step();\n          } else {\n            return Parser.error(Diagnostic.message(\"integer overflow\", input));\n          }\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        step = 4;\n      } else if (input.isDone()) {\n        return Parser.done(recon.num(value));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        c = input.head();\n        if (mode > 0 && c === 46/*'.'*/ || mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          let output = Unicode.stringOutput();\n          if (sign < 0 && value === 0) {\n            output = output.write(45/*'-'*/).write(48/*'0'*/);\n          } else {\n            output = output.write(\"\" + value);\n          }\n          return DecimalParser.parse(input, recon, output, mode);\n        } else if (c === 120/*'x'*/ && sign > 0 && value === 0) {\n          input = input.step();\n          return HexadecimalParser.parse(input, recon);\n        } else {\n          return Parser.done(recon.num(value));\n        }\n      } else if (input.isDone()) {\n        return Parser.done(recon.num(value));\n      }\n    }\n    return new NumberParser<I, V>(recon, sign, value, mode, step);\n  }\n\n  static parseInteger<I, V>(input: Input, recon: ReconParser<I, V>): Parser<V> {\n    return NumberParser.parse(input, recon, void 0, void 0, 0);\n  }\n\n  static parseDecimal<I, V>(input: Input, recon: ReconParser<I, V>): Parser<V> {\n    return NumberParser.parse(input, recon, void 0, void 0, 1);\n  }\n}\n\n/** @hidden */\nclass DecimalParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _output: Output<string>;\n  private readonly _mode: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, output: Output<string>, mode?: number, step?: number) {\n    super();\n    this._recon = recon;\n    this._output = output;\n    this._mode = mode;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return DecimalParser.parse(input, this._recon, this._output, this._mode, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, output: Output<string>,\n                     mode: number = 2, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 46/*'.'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 2;\n        } else if (mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          input = input.step();\n          output = output.write(c);\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        if (mode > 1) {\n          step = 4;\n        } else {\n          return Parser.done(recon.num(output.bind()));\n        }\n      } else if (input.isDone()) {\n        return Parser.done(recon.num(output.bind()));\n      }\n    }\n    if (step === 4) {\n      c = input.head();\n      if (c === 69/*'E'*/ || c === 101/*'e'*/) {\n        input = input.step();\n        output = output.write(c);\n        step = 5;\n      } else {\n        return Parser.done(recon.num(output.bind()));\n      }\n    }\n    if (step === 5) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n          input = input.step();\n          output = output.write(c);\n        }\n        step = 6;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 7;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 7) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(recon.num(output.bind()));\n      }\n    }\n    return new DecimalParser<I, V>(recon, output, mode, step);\n  }\n}\n\n/** @hidden */\nclass HexadecimalParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _value: number | undefined;\n  private readonly _size: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, value?: number, size?: number) {\n    super();\n    this._recon = recon;\n    this._value = value;\n    this._size = size;\n  }\n\n  feed(input: Input): Parser<V> {\n    return HexadecimalParser.parse(input, this._recon, this._value, this._size);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>,\n                     value: number = 0, size: number = 0): Parser<V> {\n    let c = 0;\n    while (input.isCont()) {\n      c = input.head();\n      if (Base16.isDigit(c)) {\n        input = input.step();\n        value = 16 * value + Base16.decodeDigit(c);\n        size += 1;\n      } else {\n        break;\n      }\n    }\n    if (!input.isEmpty()) {\n      if (size > 0) {\n        if (size <= 8) {\n          return Parser.done(recon.uint32(value));\n        } else {\n          return Parser.done(recon.uint64(value));\n        }\n      } else {\n        return Parser.error(Diagnostic.expected(\"hex digit\", input));\n      }\n    }\n    return new HexadecimalParser<I, V>(recon, value, size);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class LambdaFuncParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _bindingsParser: Parser<V> | undefined;\n  private readonly _templateParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, bindingsParser?: Parser<V>,\n              templateParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._bindingsParser = bindingsParser;\n    this._templateParser = templateParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return LambdaFuncParser.parse(input, this._recon, this._builder, this._bindingsParser,\n                                  this._templateParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     bindingsParser?: Parser<V>, templateParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (bindingsParser === void 0) {\n        bindingsParser = recon.parseConditionalOperator(input, builder);\n      }\n      while (bindingsParser.isCont() && !input.isEmpty()) {\n        bindingsParser = bindingsParser.feed(input);\n      }\n      if (bindingsParser.isDone()) {\n        step = 2;\n      } else if (bindingsParser.isError()) {\n        return bindingsParser.asError();\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 62/*'>'*/) {\n          // leading '=' consumed by ComparisonOperatorParser\n          input = input.step();\n          step = 3;\n        } else {\n          return bindingsParser!;\n        }\n      } else if (input.isDone()) {\n        return bindingsParser!;\n      }\n    }\n    if (step === 3) {\n      if (templateParser === void 0) {\n        templateParser = recon.parseConditionalOperator(input);\n      }\n      while (templateParser.isCont() && !input.isEmpty()) {\n        templateParser = templateParser.feed(input);\n      }\n      if (templateParser.isDone()) {\n        const bindings = bindingsParser!.bind();\n        const template = templateParser.bind();\n        return Parser.done(recon.lambda(bindings, template));\n      } else if (templateParser.isError()) {\n        return templateParser.asError();\n      }\n    }\n    return new LambdaFuncParser<I, V>(recon, builder, bindingsParser, templateParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class ConditionalOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _ifParser: Parser<V> | undefined;\n  private readonly _thenParser: Parser<V> | undefined;\n  private readonly _elseParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, ifParser?: Parser<V>,\n              thenParser?: Parser<V>, elseParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._ifParser = ifParser;\n    this._thenParser = thenParser;\n    this._elseParser = elseParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return ConditionalOperatorParser.parse(input, this._recon, this._builder, this._ifParser,\n                                           this._thenParser, this._elseParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     ifParser?: Parser<V>, thenParser?: Parser<V>,\n                     elseParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (ifParser === void 0) {\n        ifParser = recon.parseOrOperator(input, builder);\n      }\n      while (ifParser.isCont() && !input.isEmpty()) {\n        ifParser = ifParser.feed(input);\n      }\n      if (ifParser.isDone()) {\n        step = 2;\n      } else if (ifParser.isError()) {\n        return ifParser.asError();\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 63/*'?'*/) {\n          input = input.step();\n          step = 3;\n        } else {\n          return ifParser!;\n        }\n      } else if (input.isDone()) {\n        return ifParser!;\n      }\n    }\n    if (step === 3) {\n      if (thenParser === void 0) {\n        thenParser = recon.parseConditionalOperator(input, builder);\n      }\n      while (thenParser.isCont() && !input.isEmpty()) {\n        thenParser = thenParser.feed(input);\n      }\n      if (thenParser.isDone()) {\n        step = 4;\n      } else if (thenParser.isError()) {\n        return thenParser.asError();\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 58/*':'*/) {\n          input = input.step();\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(58/*':'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(58/*':'*/, input));\n      }\n    }\n    if (step === 5) {\n      if (elseParser === void 0) {\n        elseParser = recon.parseConditionalOperator(input, builder);\n      }\n      while (elseParser.isCont() && !input.isEmpty()) {\n        elseParser = elseParser.feed(input);\n      }\n      if (elseParser.isDone()) {\n        const ifTerm = ifParser!.bind();\n        const thenTerm = thenParser!.bind();\n        const elseTerm = elseParser.bind();\n        return Parser.done(recon.conditional(ifTerm, thenTerm, elseTerm));\n      } else if (elseParser.isError()) {\n        return elseParser.asError();\n      }\n    }\n    return new ConditionalOperatorParser<I, V>(recon, builder, ifParser, thenParser, elseParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class OrOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _lhsParser: Parser<V> | undefined;\n  private readonly _rhsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._lhsParser = lhsParser;\n    this._rhsParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return OrOperatorParser.parse(input, this._recon, this._builder, this._lhsParser,\n                                  this._rhsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseAndOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 124/*'|'*/) {\n            // first '|' consumed by BitwiseOrOperatorParser\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseAndOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.or(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new OrOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class AndOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _lhsParser: Parser<V> | undefined;\n  private readonly _rhsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._lhsParser = lhsParser;\n    this._rhsParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return AndOperatorParser.parse(input, this._recon, this._builder, this._lhsParser,\n                                   this._rhsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseBitwiseOrOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 38/*'&'*/) {\n            // first '&' consumed by BitwiseAndOperatorParser\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseBitwiseOrOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.and(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new AndOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BitwiseOrOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _lhsParser: Parser<V> | undefined;\n  private readonly _rhsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._lhsParser = lhsParser;\n    this._rhsParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return BitwiseOrOperatorParser.parse(input, this._recon, this._builder,\n                                         this._lhsParser, this._rhsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseBitwiseXorOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 124/*'|'*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 124/*'|'*/) {\n            return lhsParser!;\n          } else {\n            step = 4;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 4) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseBitwiseXorOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.bitwiseOr(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new BitwiseOrOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BitwiseXorOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _lhsParser: Parser<V> | undefined;\n  private readonly _rhsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._lhsParser = lhsParser;\n    this._rhsParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return BitwiseXorOperatorParser.parse(input, this._recon, this._builder,\n                                          this._lhsParser, this._rhsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseBitwiseAndOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 94/*'^'*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseBitwiseAndOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.bitwiseXor(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new BitwiseXorOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BitwiseAndOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _lhsParser: Parser<V> | undefined;\n  private readonly _rhsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._lhsParser = lhsParser;\n    this._rhsParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return BitwiseAndOperatorParser.parse(input, this._recon, this._builder,\n                                          this._lhsParser, this._rhsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseComparisonOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 38/*'&'*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 38/*'&'*/) {\n            return lhsParser!;\n          } else {\n            step = 4;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 4) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseComparisonOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.bitwiseAnd(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new BitwiseAndOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class ComparisonOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _lhsParser: Parser<V> | undefined;\n  private readonly _operator: string | undefined;\n  private readonly _rhsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n              operator?: string, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._lhsParser = lhsParser;\n    this._operator = operator;\n    this._rhsParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return ComparisonOperatorParser.parse(input, this._recon, this._builder, this._lhsParser,\n                                          this._operator, this._rhsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n                     operator?: string, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (lhsParser === void 0) {\n        lhsParser = recon.parseAttrExpression(input, builder);\n      }\n      while (lhsParser.isCont() && !input.isEmpty()) {\n        lhsParser = lhsParser.feed(input);\n      }\n      if (lhsParser.isDone()) {\n        step = 2;\n      } else if (lhsParser.isError()) {\n        return lhsParser.asError();\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 33/*'!'*/) {\n          input = input.step();\n          step = 3;\n        } else if (c === 60/*'<'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c === 62/*'>'*/) {\n          input = input.step();\n          step = 5;\n        } else if (c === 61/*'='*/) {\n          input = input.step();\n          step = 6;\n        } else {\n          return lhsParser!;\n        }\n      } else if (input.isDone()) {\n        return lhsParser!;\n      }\n    }\n    if (step === 3) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 61/*'='*/) {\n          input = input.step();\n          operator = \"!=\";\n          step = 7;\n        } else {\n          operator = \"!\";\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 61/*'='*/) {\n          input = input.step();\n          operator = \"<=\";\n          step = 7;\n        } else {\n          operator = \"<\";\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 61/*'='*/) {\n          input = input.step();\n          operator = \">=\";\n          step = 7;\n        } else {\n          operator = \">\";\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 61/*'='*/) {\n          input = input.step();\n          operator = \"==\";\n          step = 7;\n        } else if (c === 62/*'>'*/) {\n          return lhsParser!;\n        } else {\n          operator = \"=\";\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 7) {\n      if (rhsParser === void 0) {\n        rhsParser = recon.parseAttrExpression(input, builder);\n      }\n      while (rhsParser.isCont() && !input.isEmpty()) {\n        rhsParser = rhsParser.feed(input);\n      }\n      if (rhsParser.isDone()) {\n        const lhs = lhsParser!.bind();\n        const rhs = rhsParser.bind();\n        if (operator === \"<\") {\n          return Parser.done(recon.lt(lhs, rhs));\n        } else if (operator === \"<=\") {\n          return Parser.done(recon.le(lhs, rhs));\n        } else if (operator === \"==\") {\n          return Parser.done(recon.eq(lhs, rhs));\n        } else if (operator === \"!=\") {\n          return Parser.done(recon.ne(lhs, rhs));\n        } else if (operator === \">=\") {\n          return Parser.done(recon.ge(lhs, rhs));\n        } else if (operator === \">\") {\n          return Parser.done(recon.gt(lhs, rhs));\n        } else {\n          return Parser.error(Diagnostic.message(operator!, input));\n        }\n      } else if (rhsParser.isError()) {\n        return rhsParser.asError();\n      }\n    }\n    return new ComparisonOperatorParser<I, V>(recon, builder, lhsParser, operator, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class AttrExpressionParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _fieldParser: Parser<I> | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              fieldParser?: Parser<I>, valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._fieldParser = fieldParser;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return AttrExpressionParser.parse(input, this._recon, this._builder,\n                                      this._fieldParser, this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     fieldParser?: Parser<I>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 64/*'@'*/) {\n            step = 2;\n          } else if (c === 123/*'{'*/ || c === 91/*'['*/) {\n            builder = builder || recon.recordBuilder();\n            step = 5;\n          } else if (c === 40/*'('*/) {\n            step = 4;\n          } else if (c === 33/*'!'*/ || c === 34/*'\"'*/ || c === 36/*'$'*/ || c === 37/*'%'*/\n                  || c === 39/*'\\''*/ || c === 43/*'+'*/ || c === 45/*'-'*/\n                  || c >= 48/*'0'*/ && c <= 57/*'9'*/ || c === 126/*'~'*/\n                  || Recon.isIdentStartChar(c)) {\n            step = 3;\n          } else if (builder === void 0) {\n            return Parser.done(recon.extant());\n          } else {\n            return Parser.done(builder.bind());\n          }\n        } else if (input.isDone()) {\n          if (builder === void 0) {\n            return Parser.done(recon.extant());\n          } else {\n            return Parser.done(builder.bind());\n          }\n        }\n      }\n      if (step === 2) {\n        if (fieldParser === void 0) {\n          fieldParser = recon.parseAttr(input);\n        }\n        while (fieldParser.isCont() && !input.isEmpty()) {\n          fieldParser = fieldParser.feed(input);\n        }\n        if (fieldParser.isDone()) {\n          builder = builder || recon.recordBuilder();\n          builder.push(fieldParser.bind());\n          fieldParser = void 0;\n          step = 1;\n          continue;\n        } else if (fieldParser.isError()) {\n          return fieldParser.asError();\n        }\n      }\n      if (step === 3) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseAdditiveOperator(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          builder = builder || recon.valueBuilder();\n          builder.push(recon.item(valueParser.bind()));\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 4) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseAdditiveOperator(input, builder);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          if (builder === void 0) {\n            builder = recon.valueBuilder();\n            builder.push(recon.item(valueParser.bind()));\n          }\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 5) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseAdditiveOperator(input, builder);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 6) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 64/*'@'*/) {\n            step = 1;\n            continue;\n          } else {\n            return Parser.done(builder!.bind());\n          }\n        } else if (input.isDone()) {\n          return Parser.done(builder!.bind());\n        }\n      }\n      break;\n    } while (true);\n    return new AttrExpressionParser<I, V>(recon, builder, fieldParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class AdditiveOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _lhsParser: Parser<V> | undefined;\n  private readonly _operator: string | undefined;\n  private readonly _rhsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n              operator?: string, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._lhsParser = lhsParser;\n    this._operator = operator;\n    this._rhsParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return AdditiveOperatorParser.parse(input, this._recon, this._builder, this._lhsParser,\n                                        this._operator, this._rhsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n                     operator?: string, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseMultiplicativeOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 43/*'+'*/) {\n            input = input.step();\n            operator = \"+\";\n            step = 3;\n          } else if (c === 45/*'-'*/) {\n            input = input.step();\n            operator = \"-\";\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseMultiplicativeOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          if (operator === \"+\") {\n            lhsParser = Parser.done(recon.plus(lhs, rhs));\n          } else if (operator === \"-\") {\n            lhsParser = Parser.done(recon.minus(lhs, rhs));\n          } else {\n            return Parser.error(Diagnostic.message(operator!, input));\n          }\n          rhsParser = void 0;\n          operator = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new AdditiveOperatorParser<I, V>(recon, builder, lhsParser, operator, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class MultiplicativeOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _lhsParser: Parser<V> | undefined;\n  private readonly _operator: string | undefined;\n  private readonly _rhsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n              operator?: string, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._lhsParser = lhsParser;\n    this._operator = operator;\n    this._rhsParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return MultiplicativeOperatorParser.parse(input, this._recon, this._builder, this._lhsParser,\n                                              this._operator, this._rhsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n                     operator?: string, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parsePrefixOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 42/*'*'*/) {\n            input = input.step();\n            operator = \"*\";\n            step = 3;\n          } else if (c === 47/*'/'*/) {\n            input = input.step();\n            operator = \"/\";\n            step = 3;\n          } else if (c === 37/*'%'*/) {\n            input = input.step();\n            operator = \"%\";\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parsePrefixOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          if (operator === \"*\") {\n            lhsParser = Parser.done(recon.times(lhs, rhs));\n          } else if (operator === \"/\") {\n            lhsParser = Parser.done(recon.divide(lhs, rhs));\n          } else if (operator === \"%\") {\n            lhsParser = Parser.done(recon.modulo(lhs, rhs));\n          } else {\n            return Parser.error(Diagnostic.message(operator!, input));\n          }\n          rhsParser = void 0;\n          operator = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new MultiplicativeOperatorParser<I, V>(recon, builder, lhsParser, operator, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class PrefixOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _operator: string | undefined;\n  private readonly _operandParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              operator?: string, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._operator = operator;\n    this._operandParser = rhsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return PrefixOperatorParser.parse(input, this._recon, this._builder,\n                                      this._operator, this._operandParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     operator?: string, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 33/*'!'*/) {\n          input = input.step();\n          operator = \"!\";\n        } else if (c === 126/*'~'*/) {\n          input = input.step();\n          operator = \"~\";\n        } else if (c === 45/*'-'*/) {\n          input = input.step();\n          operator = \"-\";\n        } else if (c === 43/*'+'*/) {\n          input = input.step();\n          operator = \"+\";\n        } else {\n          return recon.parseInvokeOperator(input, builder);\n        }\n        step = 2;\n      } else if (input.isDone()) {\n        return recon.parseInvokeOperator(input, builder);\n      }\n    }\n    if (step === 2) {\n      if (rhsParser === void 0) {\n        rhsParser = recon.parsePrefixOperator(input, builder);\n      }\n      while (rhsParser.isCont() && !input.isEmpty()) {\n        rhsParser = rhsParser.feed(input);\n      }\n      if (rhsParser.isDone()) {\n        const operand = rhsParser.bind();\n        if (!recon.isDistinct(operand)) {\n          return Parser.error(Diagnostic.expected(\"value\", input));\n        } else if (operator === \"!\") {\n          return Parser.done(recon.not(operand));\n        } else if (operator === \"~\") {\n          return Parser.done(recon.bitwiseNot(operand));\n        } else if (operator === \"-\") {\n          return Parser.done(recon.negative(operand));\n        } else if (operator === \"+\") {\n          return Parser.done(recon.positive(operand));\n        } else {\n          return Parser.error(Diagnostic.message(operator!, input));\n        }\n      } else if (rhsParser.isError()) {\n        return rhsParser.asError();\n      }\n    }\n    return new PrefixOperatorParser<I, V>(recon, builder, operator, rhsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class InvokeOperatorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _exprParser: Parser<V> | undefined;\n  private readonly _argsParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              exprParser?: Parser<V>, argsParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._exprParser = exprParser;\n    this._argsParser = argsParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return InvokeOperatorParser.parse(input, this._recon, this._builder,\n                                      this._exprParser, this._argsParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     exprParser?: Parser<V>, argsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (exprParser === void 0) {\n        exprParser = recon.parsePrimary(input, builder);\n      }\n      while (exprParser.isCont() && !input.isEmpty()) {\n        exprParser = exprParser.feed(input);\n      }\n      if (exprParser.isDone()) {\n        step = 2;\n      } else if (exprParser.isError()) {\n        return exprParser.asError();\n      }\n    }\n    do {\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 40/*'('*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return exprParser!;\n          }\n        } else if (input.isDone()) {\n          return exprParser!;\n        }\n      }\n      if (step === 3) {\n        while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 41/*')'*/) {\n            input = input.step();\n            const expr = exprParser!.bind();\n            exprParser = Parser.done(recon.invoke(expr, recon.extant()));\n            step = 2;\n            continue;\n          } else {\n            step = 4;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(41/*')'*/, input));\n        }\n      }\n      if (step === 4) {\n        if (argsParser === void 0) {\n          argsParser = recon.parseBlock(input);\n        }\n        while (argsParser.isCont() && !input.isEmpty()) {\n          argsParser = argsParser.feed(input);\n        }\n        if (argsParser.isDone()) {\n          step = 5;\n        } else if (argsParser.isError()) {\n          return argsParser.asError();\n        }\n      }\n      if (step === 5) {\n        while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n        if (c === 41/*')'*/) {\n            input = input.step();\n            const expr = exprParser!.bind();\n            const args = argsParser!.bind();\n            exprParser = Parser.done(recon.invoke(expr, args));\n            argsParser = void 0;\n            step = 2;\n            continue;\n          } else {\n            return Parser.error(Diagnostic.expected(41/*')'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(41/*')'*/, input));\n        }\n      }\n      break;\n    } while (true);\n    return new InvokeOperatorParser<I, V>(recon, builder, exprParser, argsParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class PrimaryParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _exprParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              exprParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._exprParser = exprParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return PrimaryParser.parse(input, this._recon, this._builder,\n                               this._exprParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     exprParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 40/*'('*/) {\n          input = input.step();\n          step = 3;\n        } else {\n          step = 2;\n        }\n      } else if (input.isDone()) {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (exprParser === void 0) {\n        exprParser = recon.parseLiteral(input, builder);\n      }\n      while (exprParser.isCont() && !input.isEmpty()) {\n        exprParser = exprParser.feed(input);\n      }\n      if (exprParser.isDone()) {\n        return exprParser;\n      } else if (exprParser.isError()) {\n        return exprParser.asError();\n      }\n    }\n    if (step === 3) {\n      if (exprParser === void 0) {\n        exprParser = recon.parseBlockExpression(input, builder);\n      }\n      while (exprParser.isCont() && !input.isEmpty()) {\n        exprParser = exprParser.feed(input);\n      }\n      if (exprParser.isDone()) {\n        step = 4;\n      } else if (exprParser.isError()) {\n        return exprParser.asError();\n      }\n    }\n    do {\n      if (step === 4) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 44/*','*/) {\n            input = input.step();\n            if (exprParser !== void 0) {\n              if (builder === void 0) {\n                builder = recon.recordBuilder();\n                builder.push(recon.item(exprParser.bind()));\n              }\n              exprParser = void 0;\n            }\n            step = 5;\n          } else if (c === 41/*')'*/) {\n            input = input.step();\n            if (exprParser !== void 0) {\n              return exprParser;\n            } else {\n              return Parser.done(builder!.bind());\n            }\n          } else {\n            return Parser.error(Diagnostic.expected(41/*')'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(41/*')'*/, input));\n        }\n      }\n      if (step === 5) {\n        if (exprParser === void 0) {\n          exprParser = recon.parseBlockExpression(input, builder);\n        }\n        while (exprParser.isCont() && !input.isEmpty()) {\n          exprParser = exprParser.feed(input);\n        }\n        if (exprParser.isDone()) {\n          exprParser = void 0;\n          step = 4;\n          continue;\n        } else if (exprParser.isError()) {\n          return exprParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new PrimaryParser<I, V>(recon, builder, exprParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class LiteralParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return LiteralParser.parse(input, this._recon, this._builder, this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 40/*'('*/) {\n          input = input.step();\n          step = 4;\n        } else if (c === 123/*'{'*/) {\n          builder = builder || recon.recordBuilder();\n          valueParser = recon.parseRecord(input, builder);\n          step = 3;\n        } else if (c === 91/*'['*/) {\n          builder = builder || recon.recordBuilder();\n          valueParser = recon.parseMarkup(input, builder);\n          step = 3;\n        } else if (Recon.isIdentStartChar(c)) {\n          valueParser = recon.parseIdent(input);\n          step = 2;\n        } else if (c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n          valueParser = recon.parseString(input);\n          step = 2;\n        } else if (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          valueParser = recon.parseNumber(input);\n          step = 2;\n        } else if (c === 37/*'%'*/) {\n          valueParser = recon.parseData(input);\n          step = 2;\n        } else if (c === 36/*'$'*/) {\n          valueParser = recon.parseSelector(input);\n          step = 2;\n        } else if (builder === void 0) {\n          return Parser.done(recon.extant());\n        } else {\n          return Parser.done(builder.bind());\n        }\n      } else if (input.isDone()) {\n        if (builder === void 0) {\n          return Parser.done(recon.extant());\n        } else {\n          return Parser.done(builder.bind());\n        }\n      }\n    }\n    if (step === 2) {\n      while (valueParser!.isCont() && !input.isEmpty()) {\n        valueParser = valueParser!.feed(input);\n      }\n      if (valueParser!.isDone()) {\n        builder = builder || recon.valueBuilder();\n        builder.push(recon.item(valueParser!.bind()));\n        return Parser.done(builder.bind());\n      } else if (valueParser!.isError()) {\n        return valueParser!.asError();\n      }\n    }\n    if (step === 3) {\n      while (valueParser!.isCont() && !input.isEmpty()) {\n        valueParser = valueParser!.feed(input);\n      }\n      if (valueParser!.isDone()) {\n        return Parser.done(builder!.bind());\n      } else if (valueParser!.isError()) {\n        return valueParser!.asError();\n      }\n    }\n    if (step === 4) {\n      if (valueParser === void 0) {\n        valueParser = recon.parseBlockExpression(input);\n      }\n      while (valueParser.isCont() && !input.isEmpty()) {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 5;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          builder = builder || recon.valueBuilder();\n          builder.push(recon.item(valueParser!.bind()));\n          return Parser.done(builder.bind());\n        } else {\n          return Parser.error(Diagnostic.expected(41/*')'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(41/*')'*/, input));\n      }\n    }\n    return new LiteralParser<I, V>(recon, builder, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class SelectorParser<I, V> extends Parser<V> {\n  private readonly _recon: ReconParser<I, V>;\n  private readonly _builder: Builder<I, V> | undefined;\n  private readonly _selector: V | undefined;\n  private readonly _valueParser: Parser<V> | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              selector?: V, valueParser?: Parser<V>, step?: number) {\n    super();\n    this._recon = recon;\n    this._builder = builder;\n    this._selector = selector;\n    this._valueParser = valueParser;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<V> {\n    return SelectorParser.parse(input, this._recon, this._builder,\n                                this._selector, this._valueParser, this._step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     selector?: V, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 36/*'$'*/) {\n        input = input.step();\n        selector = selector || recon.selector();\n        step = 2;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(36/*'$'*/, input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 91/*'['*/) {\n          input = input.step();\n          step = 8;\n        } else if (c === 64/*'@'*/) {\n          input = input.step();\n          step = 7;\n        } else if (c === 58/*':'*/) {\n          input = input.step();\n          step = 6;\n        } else if (c === 42/*'*'*/) {\n          input = input.step();\n          step = 5;\n        } else if (c === 35/*'#'*/) {\n          input = input.step();\n          step = 4;\n        } else {\n          step = 3;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    do {\n      if (step === 3) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseLiteral(input, recon.valueBuilder());\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          selector = recon.get(selector!, valueParser.bind());\n          valueParser = void 0;\n          step = 10;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 4) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseInteger(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          selector = recon.value(recon.getItem(selector!, valueParser.bind()));\n          valueParser = void 0;\n          step = 10;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 58/*':'*/) {\n            input = input.step();\n            selector = recon.keys(selector!);\n            step = 10;\n          } else if (c === 42/*'*'*/) {\n            input = input.step();\n            selector = recon.descendants(selector!);\n            step = 10;\n          } else {\n            selector = recon.children(selector!);\n            step = 10;\n          }\n        } else if (input.isDone()) {\n          selector = recon.children(selector!);\n          step = 10;\n        }\n      }\n      if (step === 6) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 42/*'*'*/) {\n            input = input.step();\n            selector = recon.values(selector!);\n            step = 10;\n          } else {\n            return Parser.error(Diagnostic.expected(42/*'*'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(42/*'*'*/, input));\n        }\n      }\n      if (step === 7) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseIdent(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          selector = recon.getAttr(selector!, valueParser.bind());\n          valueParser = void 0;\n          step = 10;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 8) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseBlockExpression(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          step = 9;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 9) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 93/*']'*/) {\n            input = input.step();\n            selector = recon.filter(selector!, valueParser!.bind());\n            valueParser = void 0;\n            step = 10;\n          } else {\n            return Parser.error(Diagnostic.expected(93/*']'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(93/*']'*/, input));\n        }\n      }\n      if (step === 10) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 91/*'['*/) {\n            input = input.step();\n            step = 8;\n            continue;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 4;\n            continue;\n          } else if (c === 46/*'.'*/) {\n            input = input.step();\n            step = 11;\n          } else if (builder !== void 0) {\n            builder.push(recon.item(selector!));\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(selector!);\n          }\n        } else if (input.isDone()) {\n          if (builder !== void 0) {\n            builder.push(recon.item(selector!));\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(selector!);\n          }\n        }\n      }\n      if (step === 11) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 64/*'@'*/) {\n            input = input.step();\n            step = 7;\n            continue;\n          } else if (c === 58/*':'*/) {\n            input = input.step();\n            step = 6;\n            continue;\n          } else if (c === 42/*'*'*/) {\n            input = input.step();\n            step = 5;\n            continue;\n          } else {\n            step = 3;\n            continue;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      break;\n    } while (true);\n    return new SelectorParser<I, V>(recon, builder, selector, valueParser, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {BlockParser} from \"./BlockParser\";\nimport {AttrParser} from \"./AttrParser\";\nimport {BlockItemParser} from \"./BlockItemParser\";\nimport {InlineItemParser} from \"./InlineItemParser\";\nimport {RecordParser} from \"./RecordParser\";\nimport {MarkupParser} from \"./MarkupParser\";\nimport {DataParser} from \"./DataParser\";\nimport {IdentParser} from \"./IdentParser\";\nimport {StringParser} from \"./StringParser\";\nimport {NumberParser} from \"./NumberParser\";\nimport {LambdaFuncParser} from \"./LambdaFuncParser\";\nimport {ConditionalOperatorParser} from \"./ConditionalOperatorParser\";\nimport {OrOperatorParser} from \"./OrOperatorParser\";\nimport {AndOperatorParser} from \"./AndOperatorParser\";\nimport {BitwiseOrOperatorParser} from \"./BitwiseOrOperatorParser\";\nimport {BitwiseXorOperatorParser} from \"./BitwiseXorOperatorParser\";\nimport {BitwiseAndOperatorParser} from \"./BitwiseAndOperatorParser\";\nimport {ComparisonOperatorParser} from \"./ComparisonOperatorParser\";\nimport {AttrExpressionParser} from \"./AttrExpressionParser\";\nimport {AdditiveOperatorParser} from \"./AdditiveOperatorParser\";\nimport {MultiplicativeOperatorParser} from \"./MultiplicativeOperatorParser\";\nimport {PrefixOperatorParser} from \"./PrefixOperatorParser\";\nimport {InvokeOperatorParser} from \"./InvokeOperatorParser\";\nimport {PrimaryParser} from \"./PrimaryParser\";\nimport {LiteralParser} from \"./LiteralParser\";\nimport {SelectorParser} from \"./SelectorParser\";\n\n/**\n * Factory for constructing Recon parsers and parse trees.\n */\nexport abstract class ReconParser<I, V> {\n  abstract isDistinct(value: V): boolean;\n\n  abstract item(value: V): I;\n\n  abstract value(item: I): V;\n\n  abstract attr(key: V, value: V): I;\n\n  abstract attr(key: V): I;\n\n  abstract slot(key: V, value: V): I;\n\n  abstract slot(key: V): I;\n\n  abstract valueBuilder(): Builder<I, V>;\n\n  abstract recordBuilder(): Builder<I, V>;\n\n  abstract dataOutput(): Output<V>;\n\n  abstract textOutput(): Output<V>;\n\n  abstract ident(value: V): V;\n\n  abstract num(value: number | string): V;\n\n  abstract uint32(value: number): V;\n\n  abstract uint64(value: number): V;\n\n  abstract bool(value: boolean): V;\n\n  abstract selector(): V;\n\n  abstract extant(): V;\n\n  abstract absent(): V;\n\n  abstract conditional(ifTerm: V, thenTerm: V, elseTerm: V): V;\n\n  abstract or(lhs: V, rhs: V): V;\n\n  abstract and(lhs: V, rhs: V): V;\n\n  abstract bitwiseOr(lhs: V, rhs: V): V;\n\n  abstract bitwiseXor(lhs: V, rhs: V): V;\n\n  abstract bitwiseAnd(lhs: V, rhs: V): V;\n\n  abstract lt(lhs: V, rhs: V): V;\n\n  abstract le(lhs: V, rhs: V): V;\n\n  abstract eq(lhs: V, rhs: V): V;\n\n  abstract ne(lhs: V, rhs: V): V;\n\n  abstract ge(lhs: V, rhs: V): V;\n\n  abstract gt(lhs: V, rhs: V): V;\n\n  abstract plus(lhs: V, rhs: V): V;\n\n  abstract minus(lhs: V, rhs: V): V;\n\n  abstract times(lhs: V, rhs: V): V;\n\n  abstract divide(lhs: V, rhs: V): V;\n\n  abstract modulo(lhs: V, rhs: V): V;\n\n  abstract not(rhs: V): V;\n\n  abstract bitwiseNot(rhs: V): V;\n\n  abstract negative(rhs: V): V;\n\n  abstract positive(rhs: V): V;\n\n  abstract invoke(func: V, args: V): V;\n\n  abstract lambda(bindings: V, template: V): V;\n\n  abstract get(selector: V, key: V): V;\n\n  abstract getAttr(selector: V, key: V): V;\n\n  abstract getItem(selector: V, index: V): I;\n\n  abstract children(selector: V): V;\n\n  abstract descendants(selector: V): V;\n\n  abstract keys(selector: V): V;\n\n  abstract values(selector: V): V;\n\n  abstract filter(selector: V, predicate: V): V;\n\n  parseBlock(input: Input): Parser<V> {\n    return BlockParser.parse(input, this);\n  }\n\n  parseAttr(input: Input): Parser<I> {\n    return AttrParser.parse(input, this);\n  }\n\n  parseBlockItem(input: Input): Parser<V> {\n    return BlockItemParser.parse(input, this);\n  }\n\n  parseInlineItem(input: Input): Parser<V> {\n    return InlineItemParser.parse(input, this);\n  }\n\n  parseRecord(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return RecordParser.parse(input, this, builder);\n  }\n\n  parseMarkup(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return MarkupParser.parse(input, this, builder);\n  }\n\n  parseData(input: Input): Parser<V> {\n    return DataParser.parse(input, this);\n  }\n\n  parseIdent(input: Input): Parser<V> {\n    return IdentParser.parse(input, this);\n  }\n\n  parseString(input: Input): Parser<V> {\n    return StringParser.parse(input, this);\n  }\n\n  parseNumber(input: Input): Parser<V> {\n    return NumberParser.parse(input, this);\n  }\n\n  parseInteger(input: Input): Parser<V> {\n    return NumberParser.parseInteger(input, this);\n  }\n\n  parseBlockExpression(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return this.parseLambdaFunc(input, builder);\n  }\n\n  parseLambdaFunc(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return LambdaFuncParser.parse(input, this, builder);\n  }\n\n  parseConditionalOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return ConditionalOperatorParser.parse(input, this, builder);\n  }\n\n  parseOrOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return OrOperatorParser.parse(input, this, builder);\n  }\n\n  parseAndOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return AndOperatorParser.parse(input, this, builder);\n  }\n\n  parseBitwiseOrOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return BitwiseOrOperatorParser.parse(input, this, builder);\n  }\n\n  parseBitwiseXorOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return BitwiseXorOperatorParser.parse(input, this, builder);\n  }\n\n  parseBitwiseAndOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return BitwiseAndOperatorParser.parse(input, this, builder);\n  }\n\n  parseComparisonOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return ComparisonOperatorParser.parse(input, this, builder);\n  }\n\n  parseAttrExpression(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return AttrExpressionParser.parse(input, this, builder);\n  }\n\n  parseAdditiveOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return AdditiveOperatorParser.parse(input, this, builder);\n  }\n\n  parseMultiplicativeOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return MultiplicativeOperatorParser.parse(input, this, builder);\n  }\n\n  parsePrefixOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return PrefixOperatorParser.parse(input, this, builder);\n  }\n\n  parseInvokeOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return InvokeOperatorParser.parse(input, this, builder);\n  }\n\n  parsePrimary(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return PrimaryParser.parse(input, this, builder);\n  }\n\n  parseLiteral(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return LiteralParser.parse(input, this, builder);\n  }\n\n  parseSelector(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return SelectorParser.parse(input, this, builder);\n  }\n\n  blockParser(): Parser<V> {\n    return new BlockParser<I, V>(this);\n  }\n\n  parseBlockString(string: string): V {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Recon.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = this.parseBlock(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Recon.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  /** @hidden */\n  parseNumberString(string: string): V {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Recon.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = this.parseNumber(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Recon.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {\n  Item,\n  Attr,\n  Slot,\n  Value,\n  Record,\n  Data,\n  Text,\n  Num,\n  Bool,\n  Selector,\n  AndOperator,\n  BitwiseAndOperator,\n  BitwiseNotOperator,\n  BitwiseOrOperator,\n  BitwiseXorOperator,\n  DivideOperator,\n  EqOperator,\n  GeOperator,\n  GtOperator,\n  InvokeOperator,\n  LeOperator,\n  LtOperator,\n  MinusOperator,\n  ModuloOperator,\n  NeOperator,\n  NegativeOperator,\n  NotOperator,\n  OrOperator,\n  PlusOperator,\n  PositiveOperator,\n  TimesOperator,\n} from \"@swim/structure\";\nimport {ReconParser} from \"./ReconParser\";\n\nexport class ReconStructureParser extends ReconParser<Item, Value> {\n  isDistinct(value: Value): boolean {\n    return value.isDistinct();\n  }\n\n  item(value: Value): Item {\n    return value;\n  }\n\n  value(item: Item): Value {\n    return item.toValue();\n  }\n\n  attr(key: Value, value?: Value): Item {\n    return Attr.of.apply(Attr, arguments);\n  }\n\n  slot(key: Value, value?: Value): Item {\n    return Slot.of.apply(Slot, arguments);\n  }\n\n  valueBuilder(): Builder<Item, Value> {\n    return Value.builder();\n  }\n\n  recordBuilder(): Builder<Item, Value> {\n    return Record.create();\n  }\n\n  dataOutput(): Output<Value> {\n    return Data.output();\n  }\n\n  textOutput(): Output<Value> {\n    return Text.output();\n  }\n\n  ident(value: Value): Value {\n    if (value instanceof Text) {\n      const string = value.stringValue();\n      if (string === \"true\") {\n        return Bool.from(true);\n      } else if (string === \"false\") {\n        return Bool.from(false);\n      }\n    }\n    return value;\n  }\n\n  num(value: number | string): Value {\n    if (typeof value === \"number\") {\n      return Num.from(value);\n    } else if (typeof value === \"string\") {\n      return Num.from(+value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  uint32(value: number): Value {\n    return Num.uint32(value);\n  }\n\n  uint64(value: number): Value {\n    return Num.uint64(value);\n  }\n\n  bool(value: boolean): Value {\n    return Bool.from(value);\n  }\n\n  selector(): Value {\n    return Selector.identity();\n  }\n\n  extant(): Value {\n    return Value.extant();\n  }\n\n  absent(): Value {\n    return Value.absent();\n  }\n\n  conditional(ifTerm: Value, thenTerm: Value, elseTerm: Value): Value {\n    return ifTerm.conditional(thenTerm, elseTerm);\n  }\n\n  or(lhs: Value, rhs: Value): Value {\n    return new OrOperator(lhs, rhs);\n  }\n\n  and(lhs: Value, rhs: Value): Value {\n    return new AndOperator(lhs, rhs);\n  }\n\n  bitwiseOr(lhs: Value, rhs: Value): Value {\n    return new BitwiseOrOperator(lhs, rhs);\n  }\n\n  bitwiseXor(lhs: Value, rhs: Value): Value {\n    return new BitwiseXorOperator(lhs, rhs);\n  }\n\n  bitwiseAnd(lhs: Value, rhs: Value): Value {\n    return new BitwiseAndOperator(lhs, rhs);\n  }\n\n  lt(lhs: Value, rhs: Value): Value {\n    return new LtOperator(lhs, rhs);\n  }\n\n  le(lhs: Value, rhs: Value): Value {\n    return new LeOperator(lhs, rhs);\n  }\n\n  eq(lhs: Value, rhs: Value): Value {\n    return new EqOperator(lhs, rhs);\n  }\n\n  ne(lhs: Value, rhs: Value): Value {\n    return new NeOperator(lhs, rhs);\n  }\n\n  ge(lhs: Value, rhs: Value): Value {\n    return new GeOperator(lhs, rhs);\n  }\n\n  gt(lhs: Value, rhs: Value): Value {\n    return new GtOperator(lhs, rhs);\n  }\n\n  plus(lhs: Value, rhs: Value): Value {\n    return new PlusOperator(lhs, rhs);\n  }\n\n  minus(lhs: Value, rhs: Value): Value {\n    return new MinusOperator(lhs, rhs);\n  }\n\n  times(lhs: Value, rhs: Value): Value {\n    return new TimesOperator(lhs, rhs);\n  }\n\n  divide(lhs: Value, rhs: Value): Value {\n    return new DivideOperator(lhs, rhs);\n  }\n\n  modulo(lhs: Value, rhs: Value): Value {\n    return new ModuloOperator(lhs, rhs);\n  }\n\n  not(rhs: Value): Value {\n    return new NotOperator(rhs);\n  }\n\n  bitwiseNot(rhs: Value): Value {\n    return new BitwiseNotOperator(rhs);\n  }\n\n  negative(rhs: Value): Value {\n    if (rhs instanceof Num) {\n      return rhs.negative();\n    } else {\n      return new NegativeOperator(rhs);\n    }\n  }\n\n  positive(rhs: Value): Value {\n    return new PositiveOperator(rhs);\n  }\n\n  invoke(func: Value, args: Value): Value {\n    return new InvokeOperator(func, args);\n  }\n\n  lambda(bindings: Value, template: Value): Value {\n    return bindings.lambda(template);\n  }\n\n  get(selector: Value, key: Value): Value {\n    return selector.get(key);\n  }\n\n  getAttr(selector: Value, key: Value): Value {\n    return selector.getAttr(key as Text);\n  }\n\n  getItem(selector: Value, index: Value): Item {\n    return selector.getItem(index as Num);\n  }\n\n  children(selector: Value): Value {\n    return Selector.literal(selector).children();\n  }\n\n  descendants(selector: Value): Value {\n    return Selector.literal(selector).descendants();\n  }\n\n  keys(selector: Value): Value {\n    return Selector.literal(selector).keys();\n  }\n\n  values(selector: Value): Value {\n    return Selector.literal(selector).values();\n  }\n\n  filter(selector: Value, predicate: Value): Value {\n    return selector.filter(predicate);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class AttrWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _key: V;\n  private readonly _value: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, key: V, value: V, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._key = key;\n    this._value = value;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return AttrWriter.write(output, this._recon, this._key, this._value, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, key: V, value: V): number {\n    let size = 0;\n    size += 1; // '@'\n    size += recon.sizeOfValue(key);\n    if (!recon.isExtant(recon.item(value))) {\n      size += 1; // '(';\n      size += recon.sizeOfBlockValue(value);\n      size += 1; // ')';\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, value: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(64/*'@'*/);\n      step = 2;\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = recon.writeValue(key, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        if (recon.isExtant(recon.item(value))) {\n          return Writer.done();\n        } else {\n          step = 3;\n        }\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(40/*'('*/);\n      step = 4;\n    }\n    if (step === 4) {\n      if (part === void 0) {\n        part = recon.writeBlockValue(value, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 5;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 5 && output.isCont()) {\n      output = output.write(41/*')'*/);\n      return Writer.done();\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new AttrWriter<I, V>(recon, key, value, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class SlotWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _key: V;\n  private readonly _value: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, key: V, value: V, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._key = key;\n    this._value = value;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return SlotWriter.write(output, this._recon, this._key, this._value, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, key: V, value: V): number {\n    let size = 0;\n    size += recon.sizeOfValue(key);\n    size += 1; // ':'\n    if (!recon.isExtant(recon.item(value))) {\n      size += recon.sizeOfValue(value);\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, value: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (part === void 0) {\n        part = recon.writeValue(key, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 2;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(58/*':'*/);\n      if (recon.isExtant(recon.item(value))) {\n        return Writer.done();\n      } else {\n        step = 3;\n      }\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeValue(value, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return Writer.done();\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new SlotWriter<I, V>(recon, key, value, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class BlockWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _items: Cursor<I>;\n  private readonly _inBlock: boolean;\n  private readonly _inMarkup: boolean;\n  private readonly _inBraces: boolean | undefined;\n  private readonly _inBrackets: boolean | undefined;\n  private readonly _first: boolean | undefined;\n  private readonly _markupSafe: boolean | undefined;\n  private readonly _item: I | undefined;\n  private readonly _next: I | undefined;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, items: Cursor<I>, inBlock: boolean, inMarkup: boolean,\n              inBraces?: boolean, inBrackets?: boolean, first?: boolean, markupSafe?: boolean,\n              item?: I, next?: I, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._items = items;\n    this._inBlock = inBlock;\n    this._inMarkup = inMarkup;\n    this._inBraces = inBraces;\n    this._inBrackets = inBrackets;\n    this._first = first;\n    this._markupSafe = markupSafe;\n    this._item = item;\n    this._next = next;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return BlockWriter.write(output, this._recon, this._items, this._inBlock, this._inMarkup,\n                             this._inBraces, this._inBrackets, this._first, this._markupSafe,\n                             this._item, this._next, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, items: Cursor<I>,\n                      inBlock: boolean, inMarkup: boolean): number {\n    let size = 0;\n    let inBraces = false;\n    let inBrackets = false;\n    let first = true;\n    let markupSafe = true;\n    let next: I | undefined;\n    while (next !== void 0 || items.hasNext()) {\n      let item: I | undefined;\n      if (next === void 0 ) {\n        item = items.next().value!;\n      } else {\n        item = next;\n        next = void 0;\n      }\n      if (items.hasNext()) {\n        next = items.next().value!;\n      }\n      if (recon.isExpression(item)) {\n        markupSafe = false;\n      }\n      if (inBrackets && recon.isAttr(item)) {\n        if (inBraces) {\n          size += 1; // '}'\n          inBraces = false;\n        }\n        size += 1; // ']'\n        inBrackets = false;\n      }\n      if (recon.isAttr(item)) {\n        if (inBraces) {\n          size += 1; // '}'\n          inBraces = false;\n        } else if (inBrackets) { // FIXME: case already covered?\n          size += 1; // ']'\n          inBrackets = false;\n        }\n        size += recon.sizeOfItem(item);\n        first = false;\n      } else if (inBrackets && recon.isText(item)) {\n        if (inBraces) {\n          size += 1; // '}'\n          inBraces = false;\n        }\n        size += recon.sizeOfMarkupText(item);\n      } else if (inBraces) {\n        if (!first) {\n          size += 1; // ','\n        } else {\n          first = false;\n        }\n        size += BlockWriter.sizeOfBlockItem(recon, item);\n      } else if (inBrackets) {\n        if (recon.isRecord(item) && recon.isMarkupSafe(recon.items(item))) {\n          size += recon.sizeOfBlock(recon.items(item), false, true);\n          if (next !== void 0 && recon.isText(next)) {\n            size += recon.sizeOfMarkupText(next);\n            next = void 0;\n          } else if (next !== void 0 && !recon.isAttr(next)) {\n            size += 1; // '{'\n            inBraces = true;\n            first = true;\n          } else {\n            size += 1; // ']'\n            inBrackets = false;\n          }\n        } else {\n          size += 1; // '{'\n          size += recon.sizeOfItem(item);\n          inBraces = true;\n          first = false;\n        }\n      } else if (markupSafe && recon.isText(item) && next !== void 0 && !recon.isField(next)\n              && !recon.isText(next) && !recon.isBool(next)) {\n        size += 1; // '['\n        size += recon.sizeOfMarkupText(item);\n        inBrackets = true;\n      } else if (inBlock && !inBraces) {\n        if (!first) {\n          size += 1; // ','\n        } else {\n          first = false;\n        }\n        size += BlockWriter.sizeOfBlockItem(recon, item);\n      } else if (inMarkup && recon.isText(item) && next === void 0) {\n        size += 1; // '['\n        size += recon.sizeOfMarkupText(item);\n        size += 1; // ']'\n      } else if (!inMarkup && recon.isValue(item) && !recon.isRecord(item)\n             && (!first && next === void 0 || next !== void 0 && recon.isAttr(next))) {\n        if (!first && (recon.isText(item) && recon.isIdent(item)\n                    || recon.isNum(item) || recon.isBool(item))) {\n          size += 1; // ' '\n        }\n        size += recon.sizeOfItem(item);\n      } else {\n        size += 1; // '{'\n        size += recon.sizeOfItem(item);\n        inBraces = true;\n        first = false;\n      }\n    }\n    if (inBraces) {\n      size += 1; // '}'\n    }\n    if (inBrackets) {\n      size += 1; // ']'\n    }\n    return size;\n  }\n\n  static sizeOfBlockItem<I, V>(recon: ReconWriter<I, V>, item: I): number {\n    let size = 0;\n    if (recon.isField(item)) {\n      size += recon.sizeOfSlot(recon.key(item), recon.value(item));\n    } else {\n      size += recon.sizeOfItem(item);\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, items: Cursor<I>,\n                     inBlock: boolean, inMarkup: boolean, inBraces: boolean = false,\n                     inBrackets: boolean = false, first: boolean = true, markupSafe: boolean = true,\n                     item?: I, next?: I, part?: Writer, step: number = 1): Writer {\n    do {\n      if (step === 1) {\n        if (next === void 0 && !items.hasNext()) {\n          step = 10;\n          break;\n        } else {\n          if (next === void 0) {\n            item = items.next().value!;\n          } else {\n            item = next;\n            next = void 0;\n          }\n          if (items.hasNext()) {\n            next = items.next().value!;\n          }\n          if (recon.isExpression(item)) {\n            markupSafe = false;\n          }\n          step = 2;\n        }\n      }\n      if (step === 2 && output.isCont()) {\n        if (inBrackets && recon.isAttr(item!)) {\n          if (inBraces) {\n            output = output.write(125/*'}'*/);\n            inBraces = false;\n          }\n          step = 3;\n        } else {\n          step = 4;\n        }\n      }\n      if (step === 3 && output.isCont()) {\n        output = output.write(93/*']'*/);\n        inBrackets = false;\n        step = 4;\n      }\n      if (step === 4 && output.isCont()) {\n        if (recon.isAttr(item!)) {\n          if (inBraces) {\n            output = output.write(125/*'}'*/);\n            inBraces = false;\n          } else if (inBrackets) {\n            output = output.write(93/*']'*/);\n            inBrackets = false;\n          }\n          part = recon.writeItem(item!, output);\n          first = false;\n          step = 7;\n        } else if (inBrackets && recon.isText(item!)) {\n          if (inBraces) {\n            output = output.write(125/*'}'*/);\n            inBraces = false;\n          }\n          part = recon.writeMarkupText(item!, output);\n          step = 7;\n        } else if (inBraces) {\n          if (!first) {\n            output = output.write(44/*','*/);\n          } else {\n            first = false;\n          }\n          part = BlockWriter.writeBlockItem(output, recon, item!);\n          step = 7;\n        } else if (inBrackets) {\n          if (recon.isRecord(item!) && recon.isMarkupSafe(recon.items(item!))) {\n            part = recon.writeBlock(recon.items(item!), output, false, true);\n            step = 5;\n          } else {\n            output = output.write(123/*'{'*/);\n            part = recon.writeItem(item!, output);\n            inBraces = true;\n            first = false;\n            step = 7;\n          }\n        } else if (markupSafe && recon.isText(item!) && next !== void 0 && !recon.isField(next)\n                && !recon.isText(next) && !recon.isBool(next)) {\n          output = output.write(91/*'['*/);\n          part = recon.writeMarkupText(item!, output);\n          inBrackets = true;\n          step = 7;\n        } else if (inBlock && !inBraces) {\n          if (!first) {\n            output = output.write(44/*','*/);\n          } else {\n            first = false;\n          }\n          part = BlockWriter.writeBlockItem(output, recon, item!);\n          step = 7;\n        } else if (inMarkup && recon.isText(item!) && next === void 0) {\n          output = output.write(91/*'['*/);\n          part = recon.writeMarkupText(item!, output);\n          step = 8;\n        } else if (!inMarkup && recon.isValue(item!) && !recon.isRecord(item!)\n               && (!first && next === void 0 || next !== void 0 && recon.isAttr(next))) {\n          if (!first && (recon.isText(item!) && recon.isIdent(item!)\n                      || recon.isNum(item!) || recon.isBool(item!))) {\n            output = output.write(32/*' '*/);\n          }\n          part = recon.writeItem(item!, output);\n          step = 7;\n        } else {\n          output = output.write(123/*'{'*/);\n          part = recon.writeItem(item!, output);\n          inBraces = true;\n          first = false;\n          step = 7;\n        }\n      }\n      if (step === 5) {\n        part = part!.pull(output);\n        if (part.isDone()) {\n          part = void 0;\n          step = 6;\n        } else if (part.isError()) {\n          return part.asError();\n        }\n      }\n      if (step === 6 && output.isCont()) {\n        if (next !== void 0 && recon.isText(next)) {\n          part = recon.writeMarkupText(next, output);\n          next = void 0;\n          step = 7;\n        } else if (next !== void 0 && !recon.isAttr(next)) {\n          output = output.write(123/*'{'*/);\n          inBraces = true;\n          first = true;\n          step = 1;\n          continue;\n        } else {\n          output = output.write(93/*']'*/);\n          inBrackets = false;\n          step = 1;\n          continue;\n        }\n      }\n      if (step === 7) {\n        part = part!.pull(output);\n        if (part.isDone()) {\n          part = void 0;\n          step = 1;\n          continue;\n        } else if (part.isError()) {\n          return part.asError();\n        }\n      }\n      if (step === 8) {\n        part = part!.pull(output);\n        if (part.isDone()) {\n          part = void 0;\n          step = 9;\n        } else if (part.isError()) {\n          return part.asError();\n        }\n      }\n      if (step === 9 && output.isCont()) {\n        output = output.write(93/*']'*/);\n        step = 1;\n        continue;\n      }\n      break;\n    } while (true);\n    if (step === 10) {\n      if (inBraces) {\n        if (output.isCont()) {\n          output = output.write(125/*'}'*/);\n          step = 11;\n        }\n      } else {\n        step = 11;\n      }\n    }\n    if (step === 11) {\n      if (inBrackets) {\n        if (output.isCont()) {\n          output = output.write(93/*']'*/);\n          return Writer.done();\n        }\n      } else {\n        return Writer.done();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new BlockWriter<I, V>(recon, items, inBlock, inMarkup, inBraces, inBrackets,\n                                 first, markupSafe, item, next, part, step);\n  }\n\n  static writeBlockItem<I, V>(output: Output, recon: ReconWriter<I, V>, item: I): Writer {\n    if (recon.isField(item)) {\n      return recon.writeSlot(recon.key(item), recon.value(item), output);\n    } else {\n      return recon.writeItem(item, output);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class PrimaryWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _items: Cursor<I>;\n  private readonly _inParens: boolean | undefined;\n  private readonly _first: boolean | undefined;\n  private readonly _item: I | undefined;\n  private readonly _next: I | undefined;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, items: Cursor<I>, inParens?: boolean,\n              first?: boolean, item?: I, next?: I, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._items = items;\n    this._inParens = inParens;\n    this._first = first;\n    this._item = item;\n    this._next = next;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return PrimaryWriter.write(output, this._recon, this._items, this._inParens, this._first,\n                               this._item, this._next, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, items: Cursor<I>): number {\n    let size = 0;\n    let inParens = false;\n    let first = true;\n    let next: I | undefined;\n    while (next !== void 0 || items.hasNext()) {\n      let item: I | undefined;\n      if (next === void 0) {\n        item = items.next().value!;\n      } else {\n        item = next;\n        next = void 0;\n      }\n      if (items.hasNext()) {\n        next = items.next().value!;\n      }\n      if (!inParens && !first) {\n        size += 1; // ' '\n      }\n      if (recon.isAttr(item)) {\n        if (inParens) {\n          size += 1; // ')'\n          inParens = false;\n        }\n        size += recon.sizeOfItem(item);\n        first = false;\n      } else if (inParens) {\n        if (!first) {\n          size += 1; // ','\n        } else {\n          first = false;\n        }\n        size += recon.sizeOfBlockItem(item);\n      } else if (recon.isValue(item) && !recon.isRecord(item)\n             && (!first && next === void 0 || next !== void 0 && recon.isAttr(next))) {\n        size += recon.sizeOfItem(item);\n      } else {\n        size += 1; // '('\n        size += recon.sizeOfItem(item);\n        inParens = true;\n        first = false;\n      }\n    }\n    if (inParens) {\n      size += 1; // ')'\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, items: Cursor<I>,\n                     inParens: boolean = false, first: boolean = true, item?: I,\n                     next?: I, part?: Writer, step: number = 1): Writer {\n    do {\n      if (step === 1) {\n        if (next === void 0 && !items.hasNext()) {\n          step = 5;\n          break;\n        } else {\n          if (next === void 0) {\n            item = items.next().value!;\n          } else {\n            item = next;\n            next = void 0;\n          }\n          if (items.hasNext()) {\n            next = items.next().value!;\n          }\n          step = 2;\n        }\n      }\n      if (step === 2 && output.isCont()) {\n        if (!inParens && !first) {\n          output = output.write(32/*' '*/);\n        }\n        step = 3;\n      }\n      if (step === 3 && output.isCont()) {\n        if (recon.isAttr(item!)) {\n          if (inParens) {\n            output = output.write(41/*')'*/);\n            inParens = false;\n          }\n          part = recon.writeItem(item!, output);\n          first = false;\n          step = 4;\n        } else if (inParens) {\n          if (!first) {\n            output = output.write(44/*','*/);\n          } else {\n            first = false;\n          }\n          part = recon.writeBlockItem(item!, output);\n          step = 4;\n        } else if (recon.isValue(item!) && !recon.isRecord(item!)\n               && (!first && next === void 0 || next !== void 0 && recon.isAttr(next))) {\n          part = recon.writeItem(item!, output);\n          step = 4;\n        } else {\n          output = output.write(40/*'('*/);\n          part = recon.writeItem(item!, output);\n          inParens = true;\n          first = false;\n          step = 4;\n        }\n      }\n      if (step === 4) {\n        part = part!.pull(output);\n        if (part.isDone()) {\n          part = void 0;\n          step = 1;\n          continue;\n        } else if (part.isError()) {\n          return part.asError();\n        }\n      }\n      break;\n    } while (true);\n    if (step === 5) {\n      if (inParens) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          return Writer.done();\n        }\n      } else {\n        return Writer.done();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new PrimaryWriter<I, V>(recon, items, inParens, first, item, next, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Utf8, Base16} from \"@swim/codec\";\n\n/** @hidden */\nexport class MarkupTextWriter extends Writer {\n  private readonly _text: string;\n  private readonly _index: number | undefined;\n  private readonly _escape: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(text: string, index?: number, escape?: number, step?: number) {\n    super();\n    this._text = text;\n    this._index = index;\n    this._escape = escape;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return MarkupTextWriter.write(output, this._text, this._index, this._escape, this._step);\n  }\n\n  static sizeOf(text: string): number {\n    let size = 0;\n    for (let i = 0, n = text.length; i < n; i = text.offsetByCodePoints(i, 1)) {\n      let c = text.codePointAt(i);\n      if (c === void 0) {\n        c = text.charCodeAt(i);\n      }\n      if (c === 36/*'$'*/ || c === 64/*'@'*/ || c === 91/*'['*/ || c === 92/*'\\\\'*/\n          || c === 93/*']'*/ || c === 123/*'{'*/ || c === 125/*'}'*/ || c === 8/*'\\b'*/\n          || c === 12/*'\\f'*/ || c === 10/*'\\n'*/ || c === 13/*'\\r'*/ || c === 9/*'\\t'*/) {\n        size += 2;\n      } else if (c < 0x20) {\n        size += 6;\n      } else {\n        size += Utf8.sizeOf(c);\n      }\n    }\n    return size;\n  }\n\n  static write(output: Output, text: string, index: number = 0,\n               escape: number = 0, step: number = 1): Writer {\n    const length = text.length;\n    while (output.isCont()) {\n      if (step === 1) {\n        if (index < length) {\n          let c = text.codePointAt(index);\n          if (c === void 0) {\n            c = text.charCodeAt(index);\n          }\n          index = text.offsetByCodePoints(index, 1);\n          if (c === 36/*'$'*/ || c === 64/*'@'*/ || c === 91/*'['*/ || c === 92/*'\\\\'*/\n              || c === 93/*']'*/ || c === 123/*'{'*/ || c === 125/*'}'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = c;\n            step = 2;\n          } else if (c === 8/*'\\b'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 98/*'b'*/;\n            step = 2;\n          } else if (c === 12/*'\\f'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 102/*'f'*/;\n            step = 2;\n          } else if (c === 10/*'\\n'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 110/*'n'*/;\n            step = 2;\n          } else if (c === 13/*'\\r'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 114/*'r'*/;\n            step = 2;\n          } else if (c === 9/*'\\t'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 116/*'t'*/;\n            step = 2;\n          } else if (c < 0x20) {\n            output = output.write(92/*'\\\\'*/);\n            escape = c;\n            step = 3;\n          } else {\n            output = output.write(c);\n          }\n        } else {\n          return Writer.done();\n        }\n      } else if (step === 2) {\n        output = output.write(escape);\n        escape = 0;\n        step = 1;\n      } else if (step === 3) {\n        output = output.write(117/*'u'*/);\n        step = 4;\n      } else if (step === 4) {\n        output = output.write(Base16.uppercase().encodeDigit((escape >>> 12) & 0xf));\n        step = 5;\n      } else if (step === 5) {\n        output = output.write(Base16.uppercase().encodeDigit((escape >>> 8) & 0xf));\n        step = 6;\n      } else if (step === 6) {\n        output = output.write(Base16.uppercase().encodeDigit((escape >>> 4) & 0xf));\n        step = 7;\n      } else if (step === 7) {\n        output = output.write(Base16.uppercase().encodeDigit(escape & 0xf));\n        escape = 0;\n        step = 1;\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new MarkupTextWriter(text, index, escape, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Base64} from \"@swim/codec\";\n\n/** @hidden */\nexport class DataWriter extends Writer {\n  private readonly _array: Uint8Array;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(array: Uint8Array, part?: Writer, step?: number) {\n    super();\n    this._array = array;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return DataWriter.write(output, this._array, this._part, this._step);\n  }\n\n  static sizeOf(length: number): number {\n    return 1 + ((Math.floor(length * 4 / 3) + 3) & ~3);\n  }\n\n  static write(output: Output, array: Uint8Array, part?: Writer,\n               step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(37/*'%'*/);\n      step = 2;\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = Base64.standard().writeUint8Array(array, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        return Writer.done();\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new DataWriter(array, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Utf8} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\n\n/** @hidden */\nexport class IdentWriter extends Writer {\n  private readonly _ident: string;\n  private readonly _index: number | undefined;\n\n  constructor(ident: string, index?: number) {\n    super();\n    this._ident = ident;\n    this._index = index;\n  }\n\n  pull(output: Output): Writer {\n    return IdentWriter.write(output, this._ident, this._index);\n  }\n\n  static sizeOf(ident: string): number {\n    return Utf8.sizeOf(ident);\n  }\n\n  static write(output: Output, ident: string, index: number = 0): Writer {\n    let c: number | undefined;\n    const length = ident.length;\n    if (length === 0) {\n      return Writer.error(new WriterException(\"empty identifier\"));\n    }\n    if (index === 0 && output.isCont()) {\n      c = ident.codePointAt(0);\n      if (c === void 0) {\n        c = ident.charCodeAt(0);\n      }\n      if (Recon.isIdentStartChar(c)) {\n        output = output.write(c);\n        index = ident.offsetByCodePoints(0, 1);\n      }\n    }\n    while (index < length && output.isCont()) {\n      c = ident.codePointAt(index);\n      if (c === void 0) {\n        c = ident.charCodeAt(index);\n      }\n      if (Recon.isIdentChar(c)) {\n        output = output.write(c);\n        index = ident.offsetByCodePoints(index, 1);\n      } else {\n        return Writer.error(new WriterException(\"invalid identifier\"));\n      }\n    }\n    if (index >= length) {\n      return Writer.done();\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new IdentWriter(ident, index);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Utf8, Base16} from \"@swim/codec\";\n\n/** @hidden */\nexport class StringWriter extends Writer {\n  private readonly _string: string;\n  private readonly _index: number | undefined;\n  private readonly _escape: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(string: string, index?: number, escape?: number, step?: number) {\n    super();\n    this._string = string;\n    this._index = index;\n    this._escape = escape;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return StringWriter.write(output, this._string, this._index, this._escape, this._step);\n  }\n\n  static sizeOf(string: string): number {\n    let size = 0;\n    size += 1; // '\"';\n    for (let i = 0, n = string.length; i < n; i = string.offsetByCodePoints(i, 1)) {\n      let c = string.codePointAt(i);\n      if (c === void 0) {\n        c = string.charCodeAt(i);\n      }\n      if (c === 34/*'\"'*/ || c === 92/*'\\\\'*/ || c === 8/*'\\b'*/ || c === 12/*'\\f'*/\n          || c === 10/*'\\n'*/ || c === 13/*'\\r'*/ || c === 9/*'\\t'*/) {\n        size += 2;\n      } else if (c < 0x20) {\n        size += 6;\n      } else {\n        size += Utf8.sizeOf(c);\n      }\n    }\n    size += 1; // '\"';\n    return size;\n  }\n\n  static write(output: Output, string: string, index: number = 0, escape: number = 0,\n               step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(34/*'\"'*/);\n      step = 2;\n    }\n    const length = string.length;\n    while (step >= 2 && step <= 8 && output.isCont()) {\n      if (step === 2) {\n        if (index < length) {\n          let c = string.codePointAt(index);\n          if (c === void 0) {\n            c = string.charCodeAt(index);\n          }\n          index = string.offsetByCodePoints(index, 1);\n          if (c === 34/*'\"'*/ || c === 92/*'\\\\'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = c;\n            step = 3;\n          } else if (c === 8/*'\\b'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 98/*'b'*/;\n            step = 3;\n          } else if (c === 12/*'\\f'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 102/*'f'*/;\n            step = 3;\n          } else if (c === 10/*'\\n'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 110/*'n'*/;\n            step = 3;\n          } else if (c === 13/*'\\r'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 114/*'r'*/;\n            step = 3;\n          } else if (c === 9/*'\\t'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 116/*'t'*/;\n            step = 3;\n          } else if (c < 0x20) {\n            output = output.write('\\\\');\n            escape = c;\n            step = 4;\n          } else {\n            output = output.write(c);\n          }\n        } else {\n          step = 9;\n          break;\n        }\n      } else if (step === 3) {\n        output = output.write(escape);\n        escape = 0;\n        step = 2;\n      } else if (step === 4) {\n        output = output.write(117/*'u'*/);\n        step = 5;\n      } else if (step === 5) {\n        output = output.write(Base16.uppercase().encodeDigit((escape >>> 12) & 0xf));\n        step = 6;\n      } else if (step === 6) {\n        output = output.write(Base16.uppercase().encodeDigit((escape >>> 8) & 0xf));\n        step = 7;\n      } else if (step === 7) {\n        output = output.write(Base16.uppercase().encodeDigit((escape >>> 4) & 0xf));\n        step = 8;\n      } else if (step === 8) {\n        output = output.write(Base16.uppercase().encodeDigit(escape & 0xf));\n        escape = 0;\n        step = 2;\n      }\n    }\n    if (step === 9 && output.isCont()) {\n      output = output.write(34/*'\"'*/);\n      return Writer.done();\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new StringWriter(string, index, escape, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class LambdaFuncWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _bindings: V;\n  private readonly _template: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, bindings: V, template: V,\n              part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._bindings = bindings;\n    this._template = template;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return LambdaFuncWriter.write(output, this._recon, this._bindings, this._template,\n                                  this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, bindings: V, template: V): number {\n    let size = 0;\n    size += recon.sizeOfPrimary(bindings);\n    size += 4; // \" => \"\n    size += recon.sizeOfValue(template);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, bindings: V, template: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (part === void 0) {\n        part = recon.writePrimary(bindings, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 2;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(61/*'='*/);\n      step = 4;\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(62/*'>'*/);\n      step = 5;\n    }\n    if (step === 5 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 6;\n    }\n    if (step === 6) {\n      if (part === void 0) {\n        part = recon.writeValue(template, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return Writer.done();\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new LambdaFuncWriter<I, V>(recon, bindings, template, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class ConditionalOperatorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _ifTerm: I;\n  private readonly _thenTerm: I;\n  private readonly _elseTerm: I;\n  private readonly _precedence: number;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I, elseTerm: I,\n              precedence: number, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._ifTerm = ifTerm;\n    this._thenTerm = thenTerm;\n    this._elseTerm = elseTerm;\n    this._precedence = precedence;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return ConditionalOperatorWriter.write(output, this._recon, this._ifTerm, this._thenTerm,\n                                           this._elseTerm, this._precedence, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I,\n                      elseTerm: I, precedence: number): number {\n    let size = 0;\n    if (recon.precedence(ifTerm) > 0 && recon.precedence(ifTerm) <= precedence) {\n      size += 1; // '('\n      size += recon.sizeOfItem(ifTerm);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(ifTerm);\n    }\n    size += 3; // \" ? \"\n    size += recon.sizeOfItem(thenTerm);\n    size += 3; // \" : \"\n    size += recon.sizeOfItem(elseTerm);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I, elseTerm: I,\n                     precedence: number, part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (recon.precedence(ifTerm) > 0 && recon.precedence(ifTerm) <= precedence) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = recon.writeItem(ifTerm, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 3;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 3) {\n      if (recon.precedence(ifTerm) > 0 && recon.precedence(ifTerm) <= precedence) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          step = 4;\n        }\n      } else {\n        step = 4;\n      }\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 5;\n    }\n    if (step === 5 && output.isCont()) {\n      output = output.write(63/*'?'*/);\n      step = 6;\n    }\n    if (step === 6 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 7;\n    }\n    if (step === 7) {\n      if (part === void 0) {\n        part = recon.writeItem(thenTerm, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 8;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 8 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 9;\n    }\n    if (step === 9 && output.isCont()) {\n      output = output.write(58/*':'*/);\n      step = 10;\n    }\n    if (step === 10 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 11;\n    }\n    if (step === 11) {\n      if (part === void 0) {\n        part = recon.writeItem(elseTerm, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return Writer.done();\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new ConditionalOperatorWriter<I, V>(recon, ifTerm, thenTerm, elseTerm,\n                                               precedence, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Unicode, Utf8} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class InfixOperatorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _lhs: I;\n  private readonly _operator: string;\n  private readonly _rhs: I;\n  private readonly _precedence: number;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, lhs: I, operator: string, rhs: I,\n              precedence: number, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._lhs = lhs;\n    this._operator = operator;\n    this._rhs = rhs;\n    this._precedence = precedence;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return InfixOperatorWriter.write(output, this._recon, this._lhs, this._operator, this._rhs,\n                                     this._precedence, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, lhs: I, operator: string, rhs: I, precedence: number): number {\n    let size = 0;\n    if (recon.precedence(lhs) < precedence) {\n      size += 1; // '('\n      size += recon.sizeOfItem(lhs);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(lhs);\n    }\n    size += 1; // ' '\n    size += Utf8.sizeOf(operator);\n    size += 1; // ' '\n    if (recon.precedence(rhs) < precedence) {\n      size += 1; // '('\n      size += recon.sizeOfItem(rhs);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(rhs);\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, lhs: I, operator: string, rhs: I,\n                     precedence: number, part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (recon.precedence(lhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = recon.writeItem(lhs, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 3;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 3) {\n      if (recon.precedence(lhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          step = 4;\n        }\n      } else {\n        step = 4;\n      }\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 5;\n    }\n    if (step === 5) {\n      if (part === void 0) {\n        part = Unicode.writeString(operator, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 6;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 6 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 7;\n    }\n    if (step === 7) {\n      if (recon.precedence(rhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 8;\n        }\n      } else {\n        step = 8;\n      }\n    }\n    if (step === 8) {\n      if (part === void 0) {\n        part = recon.writeItem(rhs, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 9;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 9) {\n      if (recon.precedence(rhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          return Writer.done();\n        }\n      } else {\n        return Writer.done();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new InfixOperatorWriter<I, V>(recon, lhs, operator, rhs, precedence, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Unicode, Utf8} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class PrefixOperatorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _operator: string;\n  private readonly _rhs: I;\n  private readonly _precedence: number;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, operator: string, rhs: I,\n              precedence: number, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._operator = operator;\n    this._rhs = rhs;\n    this._precedence = precedence;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return PrefixOperatorWriter.write(output, this._recon, this._operator, this._rhs,\n                                      this._precedence, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, operator: string, rhs: I, precedence: number): number {\n    let size = 0;\n    size += Utf8.sizeOf(operator);\n    if (recon.precedence(rhs) < precedence) {\n      size += 1; // '('\n      size += recon.sizeOfItem(rhs);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(rhs);\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, operator: string, rhs: I,\n                     precedence: number, part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (part === void 0) {\n        part = Unicode.writeString(operator, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 2;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 2) {\n      if (recon.precedence(rhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 3;\n        }\n      } else {\n        step = 3;\n      }\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeItem(rhs, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 4;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 4) {\n      if (recon.precedence(rhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          return Writer.done();\n        }\n      } else {\n        return Writer.done();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new PrefixOperatorWriter<I, V>(recon, operator, rhs, precedence, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class InvokeOperatorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _func: V;\n  private readonly _args: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, func: V, args: V, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._func = func;\n    this._args = args;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return InvokeOperatorWriter.write(output, this._recon, this._func, this._args,\n                                      this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, func: V, args: V): number {\n    let size = 0;\n    size += recon.sizeOfValue(func);\n    size += 1; // '('\n    size += recon.sizeOfBlockValue(args);\n    size += 1; // ')'\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, func: V, args: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (part === void 0) {\n        part = recon.writeValue(func, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 2;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(40/*'('*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeBlockValue(args, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 4;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(41/*')'*/);\n      return Writer.done();\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new InvokeOperatorWriter<I, V>(recon, func, args, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class LiteralSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _item: I;\n  private readonly _then: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, item: I, then: V, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._item = item;\n    this._then = then;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return LiteralSelectorWriter.write(output, this._recon, this._item, this._then,\n                                       this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, item: I, then: V): number {\n    let size = 0;\n    if (recon.precedence(item) < recon.precedence(recon.item(then))) {\n      size += 1; // '('\n      size += recon.sizeOfItem(item);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(item);\n    }\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, item: I, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (recon.precedence(item) < recon.precedence(recon.item(then))) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = recon.writeItem(item, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 3;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 3) {\n      if (recon.precedence(item) < recon.precedence(recon.item(then))) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          step = 4;\n        }\n      } else {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new LiteralSelectorWriter<I, V>(recon, item, then, part, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class GetSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _key: V;\n  private readonly _then: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, key: V, then: V, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._key = key;\n    this._then = then;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return GetSelectorWriter.write(output, this._recon, this._key, this._then, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, key: V, then: V): number {\n    let size = 1; // '$' | '.'\n    if (recon.isRecord(recon.item(key))) {\n      size += 1; // '{'\n      size += recon.sizeOfBlockValue(key);\n      size += 1; // '}'\n    } else {\n      size += recon.sizeOfValue(key);\n    }\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (recon.isRecord(recon.item(key))) {\n        if (output.isCont()) {\n          output = output.write(123/*'{'*/);\n          step = 4;\n        }\n      } else {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      if (part === void 0) {\n        if (recon.isRecord(recon.item(key))) {\n          part = recon.writeBlockValue(key, output);\n        } else {\n          part = recon.writeValue(key, output);\n        }\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 5;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 5) {\n      if (recon.isRecord(recon.item(key))) {\n        if (output.isCont()) {\n          output = output.write(125/*'}'*/);\n          step = 6;\n        }\n      } else {\n        step = 6;\n      }\n    }\n    if (step === 6) {\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new GetSelectorWriter<I, V>(recon, key, then, part, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, then: V): Writer {\n    return GetSelectorWriter.write(output, recon, key, then, void 0, 2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class GetAttrSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _key: V;\n  private readonly _then: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, key: V, then: V, part?: Writer, step?: number) {\n    super();\n    this._recon  = recon;\n    this._key = key;\n    this._then = then;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return GetAttrSelectorWriter.write(output, this._recon, this._key, this._then,\n                                       this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, key: V, then: V): number {\n    let size = 2; // ('$' | '.') '@'\n    size += recon.sizeOfValue(key);\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(64/*'@'*/);\n      step = 4;\n    }\n    if (step === 4) {\n      if (part === void 0) {\n        part = recon.writeValue(key, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return recon.writeThen(then, output);\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new GetAttrSelectorWriter<I, V>(recon, key, then, part, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, then: V): Writer {\n    return GetAttrSelectorWriter.write(output, recon, key, then, void 0, 2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class GetItemSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _index: V;\n  private readonly _then: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, index: V, then: V, part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._index = index;\n    this._then = then;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return GetItemSelectorWriter.write(output, this._recon, this._index, this._then,\n                                       this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, index: V, then: V): number {\n    let size = 2; // \"$#\"\n    size += recon.sizeOfValue(index);\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static sizeOfThen<I, V>(recon: ReconWriter<I, V>, index: V, then: V): number {\n    let size = 1; // '#'\n    size += recon.sizeOfValue(index);\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, index: V, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 2;\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(35/*'#'*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeValue(index, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return recon.writeThen(then, output);\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new GetItemSelectorWriter<I, V>(recon, index, then, part, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, index: V, then: V): Writer {\n    return GetItemSelectorWriter.write(output, recon, index, then, void 0, 2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class KeysSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _then: V;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, then: V, step?: number) {\n    super();\n    this._recon = recon;\n    this._then = then;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return KeysSelectorWriter.write(output, this._recon, this._then, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, then: V): number {\n    let size = 3; // ('$' | '.') '*' ':'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, then: V,\n                     step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      step = 4;\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(58/*':'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new KeysSelectorWriter<I, V>(recon, then, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, then: V): Writer {\n    return KeysSelectorWriter.write(output, recon, then, 2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class ValuesSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _then: V;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, then: V, step?: number) {\n    super();\n    this._recon = recon;\n    this._then = then;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return ValuesSelectorWriter.write(output, this._recon, this._then, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, then: V): number {\n    let size = 3; // ('$' | '.') ':' '*'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, then: V,\n                     step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(58/*':'*/);\n      step = 4;\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new ValuesSelectorWriter<I, V>(recon, then, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, then: V): Writer {\n    return ValuesSelectorWriter.write(output, recon, then, 2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class ChildrenSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _then: V;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, then: V, step?: number) {\n    super();\n    this._recon = recon;\n    this._then = then;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return ChildrenSelectorWriter.write(output, this._recon, this._then, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, then: V): number {\n    let size = 2; // ('$' | '.') '*'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, then: V,\n                     step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new ChildrenSelectorWriter<I, V>(recon, then, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, then: V): Writer {\n    return ChildrenSelectorWriter.write(output, recon, then, 2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class DescendantsSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _then: V;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, then: V, step?: number) {\n    super();\n    this._recon = recon;\n    this._then = then;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return DescendantsSelectorWriter.write(output, this._recon, this._then, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, then: V): number {\n    let size = 3; // ('$' | '.') '*' '*'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, then: V,\n                     step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      step = 4;\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new DescendantsSelectorWriter<I, V>(recon, then, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, then: V): Writer {\n    return DescendantsSelectorWriter.write(output, recon, then, 2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class FilterSelectorWriter<I, V> extends Writer {\n  private readonly _recon: ReconWriter<I, V>;\n  private readonly _predicate: V;\n  private readonly _then: V;\n  private readonly _part: Writer | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, predicate: V, then: V,\n              part?: Writer, step?: number) {\n    super();\n    this._recon = recon;\n    this._predicate = predicate;\n    this._then = then;\n    this._part = part;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer {\n    return FilterSelectorWriter.write(output, this._recon, this._predicate,\n                                      this._then, this._part, this._step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, predicate: V, then: V): number {\n    let size = 2; // '$' '['\n    size += recon.sizeOfValue(predicate);\n    size += 1; // ']'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static sizeOfThen<I, V>(recon: ReconWriter<I, V>, predicate: V, then: V): number {\n    let size = 1; // '['\n    size += recon.sizeOfValue(predicate);\n    size += 1; // ']'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, predicate: V, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 2;\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(91/*'['*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeValue(predicate, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 4;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(93/*']'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new FilterSelectorWriter<I, V>(recon, predicate, then, part, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>,\n                         predicate: V, then: V): Writer {\n    return FilterSelectorWriter.write(output, recon, predicate, then, void 0, 2);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Output, Writer, Unicode, Base10, Base16} from \"@swim/codec\";\nimport {Recon} from \"./Recon\";\nimport {AttrWriter} from \"./AttrWriter\";\nimport {SlotWriter} from \"./SlotWriter\";\nimport {BlockWriter} from \"./BlockWriter\";\nimport {PrimaryWriter} from \"./PrimaryWriter\";\nimport {MarkupTextWriter} from \"./MarkupTextWriter\";\nimport {DataWriter} from \"./DataWriter\";\nimport {IdentWriter} from \"./IdentWriter\";\nimport {StringWriter} from \"./StringWriter\";\nimport {LambdaFuncWriter} from \"./LambdaFuncWriter\";\nimport {ConditionalOperatorWriter} from \"./ConditionalOperatorWriter\";\nimport {InfixOperatorWriter} from \"./InfixOperatorWriter\";\nimport {PrefixOperatorWriter} from \"./PrefixOperatorWriter\";\nimport {InvokeOperatorWriter} from \"./InvokeOperatorWriter\";\nimport {LiteralSelectorWriter} from \"./LiteralSelectorWriter\";\nimport {GetSelectorWriter} from \"./GetSelectorWriter\";\nimport {GetAttrSelectorWriter} from \"./GetAttrSelectorWriter\";\nimport {GetItemSelectorWriter} from \"./GetItemSelectorWriter\";\nimport {KeysSelectorWriter} from \"./KeysSelectorWriter\";\nimport {ValuesSelectorWriter} from \"./ValuesSelectorWriter\";\nimport {ChildrenSelectorWriter} from \"./ChildrenSelectorWriter\";\nimport {DescendantsSelectorWriter} from \"./DescendantsSelectorWriter\";\nimport {FilterSelectorWriter} from \"./FilterSelectorWriter\";\n\n/**\n * Factory for constructing Recon writers.\n */\nexport abstract class ReconWriter<I, V> {\n  abstract isField(item: I): boolean;\n\n  abstract isAttr(item: I): boolean;\n\n  abstract isSlot(item: I): boolean;\n\n  abstract isValue(item: I): boolean;\n\n  abstract isRecord(item: I): boolean;\n\n  abstract isText(item: I): boolean;\n\n  abstract isNum(item: I): boolean;\n\n  abstract isBool(item: I): boolean;\n\n  abstract isExpression(item: I): boolean;\n\n  abstract isExtant(item: I): boolean;\n\n  abstract items(item: I): Cursor<I>;\n\n  abstract item(value: V): I;\n\n  abstract key(item: I): V;\n\n  abstract value(item: I): V;\n\n  abstract string(item: I): string;\n\n  abstract precedence(item: I): number;\n\n  abstract sizeOfItem(item: I): number;\n\n  abstract writeItem(item: I, output: Output): Writer;\n\n  abstract sizeOfValue(value: V): number;\n\n  abstract writeValue(value: V, output: Output): Writer;\n\n  abstract sizeOfBlockValue(value: V): number;\n\n  abstract writeBlockValue(value: V, output: Output): Writer;\n\n  sizeOfAttr(key: V, value: V): number {\n    return AttrWriter.sizeOf(this, key, value);\n  }\n\n  writeAttr(key: V, value: V, output: Output): Writer {\n    return AttrWriter.write(output, this, key, value);\n  }\n\n  sizeOfSlot(key: V, value: V): number {\n    return SlotWriter.sizeOf(this, key, value);\n  }\n\n  writeSlot(key: V, value: V, output: Output): Writer {\n    return SlotWriter.write(output, this, key, value);\n  }\n\n  abstract sizeOfBlockItem(item: I): number;\n\n  abstract writeBlockItem(item: I, output: Output): Writer;\n\n  sizeOfBlock(item: I): number;\n  sizeOfBlock(items: Cursor<I>, inBlock: boolean, inMarkup: boolean): number;\n  sizeOfBlock(item: I | Cursor<I>, inBlock?: boolean, inMarkup?: boolean): number {\n    if (arguments.length === 3) {\n      return BlockWriter.sizeOf(this, item as Cursor<I>, inBlock!, inMarkup!);\n    } else {\n      const items = this.items(item as I);\n      if (items.hasNext()) {\n        return BlockWriter.sizeOf(this, items, this.isBlockSafe(this.items(item as I)), false);\n      } else {\n        return 2; // \"{}\"\n      }\n    }\n  }\n\n  writeBlock(item: I, output: Output): Writer;\n  writeBlock(items: Cursor<I>, output: Output, inBlock: boolean, inMarkup: boolean): Writer;\n  writeBlock(item: I | Cursor<I>, output: Output, inBlock?: boolean, inMarkup?: boolean): Writer {\n    if (arguments.length === 4) {\n      return BlockWriter.write(output, this, item as Cursor<I>, inBlock!, inMarkup!);\n    } else {\n      const items = this.items(item as I);\n      if (items.hasNext()) {\n        return BlockWriter.write(output, this, items, this.isBlockSafe(this.items(item as I)), false);\n      } else {\n        return Unicode.writeString(\"{}\", output);\n      }\n    }\n  }\n\n  sizeOfRecord(item: I): number {\n    const items = this.items(item);\n    if (items.hasNext()) {\n      return BlockWriter.sizeOf(this, items, false, false);\n    } else {\n      return 2; // \"{}\"\n    }\n  }\n\n  writeRecord(item: I, output: Output): Writer {\n    const items = this.items(item);\n    if (items.hasNext()) {\n      return BlockWriter.write(output, this, items, false, false);\n    } else {\n      return Unicode.writeString(\"{}\", output);\n    }\n  }\n\n  sizeOfPrimary(value: V): number {\n    if (this.isRecord(this.item(value))) {\n      const items = this.items(this.item(value));\n      if (items.hasNext()) {\n        return PrimaryWriter.sizeOf(this, items);\n      }\n    } else if (!this.isExtant(this.item(value))) {\n      return this.sizeOfValue(value);\n    }\n    return 2; // \"()\"\n  }\n\n  writePrimary(value: V, output: Output): Writer {\n    if (this.isRecord(this.item(value))) {\n      const items = this.items(this.item(value));\n      if (items.hasNext()) {\n        return PrimaryWriter.write(output, this, items);\n      }\n    } else if (!this.isExtant(this.item(value))) {\n      return this.writeValue(value, output);\n    }\n    return Unicode.writeString(\"()\", output);\n  }\n\n  isBlockSafe(items: Cursor<I>): boolean {\n    while (items.hasNext()) {\n      if (this.isAttr(items.next().value!)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isMarkupSafe(items: Cursor<I>): boolean {\n    if (!items.hasNext() || !this.isAttr(items.next().value!)) {\n      return false;\n    }\n    while (items.hasNext()) {\n      if (this.isAttr(items.next().value!)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  sizeOfMarkupText(item: I | string): number {\n    if (typeof item !== \"string\") {\n      item = this.string(item);\n    }\n    return MarkupTextWriter.sizeOf(item);\n  }\n\n  writeMarkupText(item: I | string, output: Output): Writer {\n    if (typeof item !== \"string\") {\n      item = this.string(item);\n    }\n    return MarkupTextWriter.write(output, item);\n  }\n\n  sizeOfData(length: number): number {\n    return DataWriter.sizeOf(length);\n  }\n\n  writeData(value: Uint8Array | undefined, output: Output): Writer {\n    if (value !== void 0) {\n      return DataWriter.write(output, value);\n    } else {\n      return Unicode.writeString(\"%\", output);\n    }\n  }\n\n  isIdent(value: I | string): boolean {\n    if (typeof value !== \"string\") {\n      value = this.string(value);\n    }\n    const n = value.length;\n    let c: number | undefined;\n    if (n === 0 || (c = value.codePointAt(0), c !== void 0 && !Recon.isIdentStartChar(c))) {\n      return false;\n    }\n    for (let i = value.offsetByCodePoints(0, 1); i < n; i = value.offsetByCodePoints(i, 1)) {\n      c = value.codePointAt(i);\n      if (c === void 0 || !Recon.isIdentChar(c)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  sizeOfText(value: string): number {\n    if (this.isIdent(value)) {\n      return IdentWriter.sizeOf(value);\n    } else {\n      return StringWriter.sizeOf(value);\n    }\n  }\n\n  writeText(value: string, output: Output): Writer {\n    if (this.isIdent(value)) {\n      return IdentWriter.write(output, value);\n    } else {\n      return StringWriter.write(output, value);\n    }\n  }\n\n  sizeOfNum(value: number): number {\n    if (isFinite(value) && Math.floor(value) === value && Math.abs(value) < 2147483648) {\n      let size = Base10.countDigits(value);\n      if (value < 0) {\n        size += 1;\n      }\n      return size;\n    } else {\n      return (\"\" + value).length;\n    }\n  }\n\n  writeNum(value: number, output: Output): Writer {\n    if (isFinite(value) && Math.floor(value) === value && Math.abs(value) < 2147483648) {\n      return Base10.writeInteger(value, output);\n    } else {\n      return Unicode.writeString(\"\" + value, output);\n    }\n  }\n\n  sizeOfUint32(value: number): number {\n    return 10;\n  }\n\n  writeUint32(value: number, output: Output): Writer {\n    return Base16.lowercase().writeIntegerLiteral(value, output, 8);\n  }\n\n  sizeOfUint64(value: number): number {\n    return 18;\n  }\n\n  writeUint64(value: number, output: Output): Writer {\n    return Base16.lowercase().writeIntegerLiteral(value, output, 16);\n  }\n\n  sizeOfBool(value: boolean): number {\n    return value ? 4 : 5;\n  }\n\n  writeBool(value: boolean, output: Output): Writer {\n    return Unicode.writeString(value ? \"true\" : \"false\", output);\n  }\n\n  sizeOfLambdaFunc(bindings: V, template: V): number {\n    return LambdaFuncWriter.sizeOf(this, bindings, template);\n  }\n\n  writeLambdaFunc(bindings: V, template: V, output: Output): Writer {\n    return LambdaFuncWriter.write(output, this, bindings, template);\n  }\n\n  sizeOfConditionalOperator(ifTerm: I, thenTerm: I, elseTerm: I, precedence: number): number {\n    return ConditionalOperatorWriter.sizeOf(this, ifTerm, thenTerm, elseTerm, precedence);\n  }\n\n  writeConditionalOperator(ifTerm: I, thenTerm: I, elseTerm: I, precedence: number, output: Output): Writer {\n    return ConditionalOperatorWriter.write(output, this, ifTerm, thenTerm, elseTerm, precedence);\n  }\n\n  sizeOfInfixOperator(lhs: I, operator: string, rhs: I, precedence: number): number {\n    return InfixOperatorWriter.sizeOf(this, lhs, operator, rhs, precedence);\n  }\n\n  writeInfixOperator(lhs: I, operator: string, rhs: I, precedence: number, output: Output): Writer {\n    return InfixOperatorWriter.write(output, this, lhs, operator, rhs, precedence);\n  }\n\n  sizeOfPrefixOperator(operator: string, rhs: I, precedence: number): number {\n    return PrefixOperatorWriter.sizeOf(this, operator, rhs, precedence);\n  }\n\n  writePrefixOperator(operator: string, rhs: I, precedence: number, output: Output): Writer {\n    return PrefixOperatorWriter.write(output, this, operator, rhs, precedence);\n  }\n\n  sizeOfInvokeOperator(func: V, args: V): number {\n    return InvokeOperatorWriter.sizeOf(this, func, args);\n  }\n\n  writeInvokeOperator(func: V, args: V, output: Output): Writer {\n    return InvokeOperatorWriter.write(output, this, func, args);\n  }\n\n  abstract sizeOfThen(then: V): number;\n\n  abstract writeThen(then: V, output: Output): Writer;\n\n  sizeOfIdentitySelector(): number {\n    return 0;\n  }\n\n  writeIdentitySelector(output: Output): Writer {\n    return Writer.done();\n  }\n\n  sizeOfThenIdentitySelector(): number {\n    return 0;\n  }\n\n  writeThenIdentitySelector(output: Output): Writer {\n    return Writer.done();\n  }\n\n  sizeOfLiteralSelector(item: I, then: V): number {\n    return LiteralSelectorWriter.sizeOf(this, item, then);\n  }\n\n  writeLiteralSelector(item: I, then: V, output: Output): Writer {\n    return LiteralSelectorWriter.write(output, this, item, then);\n  }\n\n  sizeOfThenLiteralSelector(item: I, then: V): number {\n    return 0;\n  }\n\n  writeThenLiteralSelector(item: I, then: V, output: Output): Writer {\n    return Writer.done();\n  }\n\n  sizeOfGetSelector(key: V, then: V): number {\n    return GetSelectorWriter.sizeOf(this, key, then);\n  }\n\n  writeGetSelector(key: V, then: V, output: Output): Writer {\n    return GetSelectorWriter.write(output, this, key, then);\n  }\n\n  sizeOfThenGetSelector(key: V, then: V): number {\n    return GetSelectorWriter.sizeOf(this, key, then);\n  }\n\n  writeThenGetSelector(key: V, then: V, output: Output): Writer {\n    return GetSelectorWriter.writeThen(output, this, key, then);\n  }\n\n  sizeOfGetAttrSelector(key: V, then: V): number {\n    return GetAttrSelectorWriter.sizeOf(this, key, then);\n  }\n\n  writeGetAttrSelector(key: V, then: V, output: Output): Writer {\n    return GetAttrSelectorWriter.write(output, this, key, then);\n  }\n\n  sizeOfThenGetAttrSelector(key: V, then: V): number {\n    return GetAttrSelectorWriter.sizeOf(this, key, then);\n  }\n\n  writeThenGetAttrSelector(key: V, then: V, output: Output): Writer {\n    return GetAttrSelectorWriter.writeThen(output, this, key, then);\n  }\n\n  sizeOfGetItemSelector(index: V, then: V): number {\n    return GetItemSelectorWriter.sizeOf(this, index, then);\n  }\n\n  writeGetItemSelector(index: V, then: V, output: Output): Writer {\n    return GetItemSelectorWriter.write(output, this, index, then);\n  }\n\n  sizeOfThenGetItemSelector(index: V, then: V): number {\n    return GetItemSelectorWriter.sizeOfThen(this, index, then);\n  }\n\n  writeThenGetItemSelector(index: V, then: V, output: Output): Writer {\n    return GetItemSelectorWriter.writeThen(output, this, index, then);\n  }\n\n  sizeOfKeysSelector(then: V): number {\n    return KeysSelectorWriter.sizeOf(this, then);\n  }\n\n  writeKeysSelector(then: V, output: Output): Writer {\n    return KeysSelectorWriter.write(output, this, then);\n  }\n\n  sizeOfThenKeysSelector(then: V): number {\n    return KeysSelectorWriter.sizeOf(this, then);\n  }\n\n  writeThenKeysSelector(then: V, output: Output): Writer {\n    return KeysSelectorWriter.writeThen(output, this, then);\n  }\n\n  sizeOfValuesSelector(then: V): number {\n    return ValuesSelectorWriter.sizeOf(this, then);\n  }\n\n  writeValuesSelector(then: V, output: Output): Writer {\n    return ValuesSelectorWriter.write(output, this, then);\n  }\n\n  sizeOfThenValuesSelector(then: V): number {\n    return ValuesSelectorWriter.sizeOf(this, then);\n  }\n\n  writeThenValuesSelector(then: V, output: Output): Writer {\n    return ValuesSelectorWriter.writeThen(output, this, then);\n  }\n\n  sizeOfChildrenSelector(then: V): number {\n    return ChildrenSelectorWriter.sizeOf(this, then);\n  }\n\n  writeChildrenSelector(then: V, output: Output): Writer {\n    return ChildrenSelectorWriter.write(output, this, then);\n  }\n\n  sizeOfThenChildrenSelector(then: V): number {\n    return ChildrenSelectorWriter.sizeOf(this, then);\n  }\n\n  writeThenChildrenSelector(then: V, output: Output): Writer {\n    return ChildrenSelectorWriter.writeThen(output, this, then);\n  }\n\n  sizeOfDescendantsSelector(then: V): number {\n    return DescendantsSelectorWriter.sizeOf(this, then);\n  }\n\n  writeDescendantsSelector(then: V, output: Output): Writer {\n    return DescendantsSelectorWriter.write(output, this, then);\n  }\n\n  sizeOfThenDescendantsSelector(then: V): number {\n    return DescendantsSelectorWriter.sizeOf(this, then);\n  }\n\n  writeThenDescendantsSelector(then: V, output: Output): Writer {\n    return DescendantsSelectorWriter.writeThen(output, this, then);\n  }\n\n  sizeOfFilterSelector(predicate: V, then: V): number {\n    return FilterSelectorWriter.sizeOf(this, predicate, then);\n  }\n\n  writeFilterSelector(predicate: V, then: V, output: Output): Writer {\n    return FilterSelectorWriter.write(output, this, predicate, then);\n  }\n\n  sizeOfThenFilterSelector(predicate: V, then: V): number {\n    return FilterSelectorWriter.sizeOfThen(this, predicate, then);\n  }\n\n  writeThenFilterSelector(predicate: V, then: V, output: Output): Writer {\n    return FilterSelectorWriter.writeThen(output, this, predicate, then);\n  }\n\n  sizeOfExtant(): number {\n    return 0;\n  }\n\n  writeExtant(output: Output): Writer {\n    return Writer.done();\n  }\n\n  sizeOfAbsent(): number {\n    return 0;\n  }\n\n  writeAbsent(output: Output): Writer {\n    return Writer.done();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {\n  Item,\n  Field,\n  Attr,\n  Slot,\n  Value,\n  Record,\n  Data,\n  Text,\n  Num,\n  Bool,\n  Expression,\n  Operator,\n  Selector,\n  Func,\n  Extant,\n  Absent,\n  ChildrenSelector,\n  DescendantsSelector,\n  FilterSelector,\n  GetAttrSelector,\n  GetItemSelector,\n  GetSelector,\n  IdentitySelector,\n  KeysSelector,\n  LiteralSelector,\n  ValuesSelector,\n  BinaryOperator,\n  ConditionalOperator,\n  InvokeOperator,\n  UnaryOperator,\n  BridgeFunc,\n  LambdaFunc,\n} from \"@swim/structure\";\nimport {ReconWriter} from \"./ReconWriter\";\n\nexport class ReconStructureWriter extends ReconWriter<Item, Value> {\n  isField(item: Item): boolean {\n    return item instanceof Field;\n  }\n\n  isAttr(item: Item): boolean {\n    return item instanceof Attr;\n  }\n\n  isSlot(item: Item): boolean {\n    return item instanceof Slot;\n  }\n\n  isValue(item: Item): boolean {\n    return item instanceof Value;\n  }\n\n  isRecord(item: Item): boolean {\n    return item instanceof Record;\n  }\n\n  isText(item: Item): boolean {\n    return item instanceof Text;\n  }\n\n  isNum(item: Item): boolean {\n    return item instanceof Num;\n  }\n\n  isBool(item: Item): boolean {\n    return item instanceof Bool;\n  }\n\n  isExpression(item: Item): boolean {\n    return item instanceof Expression;\n  }\n\n  isExtant(item: Item): boolean {\n    return item instanceof Extant;\n  }\n\n  items(item: Item): Cursor<Item> {\n    return item.iterator();\n  }\n\n  item(value: Value): Item {\n    return value;\n  }\n\n  key(item: Item): Value {\n    return item.key;\n  }\n\n  value(item: Item): Value {\n    return item.toValue();\n  }\n\n  string(item: Item): string {\n    return item.stringValue(\"\");\n  }\n\n  precedence(item: Item): number {\n    return item.precedence();\n  }\n\n  sizeOfItem(item: Item): number {\n    if (item instanceof Field) {\n      if (item instanceof Attr) {\n        return this.sizeOfAttr(item.key, item.value);\n      } else if (item instanceof Slot) {\n        return this.sizeOfSlot(item.key, item.value);\n      }\n    } else if (item instanceof Value) {\n      return this.sizeOfValue(item);\n    }\n    throw new WriterException(\"No Recon serialization for \" + item);\n  }\n\n  writeItem(item: Item, output: Output): Writer {\n    if (item instanceof Field) {\n      if (item instanceof Attr) {\n        return this.writeAttr(item.key, item.value, output);\n      } else if (item instanceof Slot) {\n        return this.writeSlot(item.key, item.value, output);\n      }\n    } else if (item instanceof Value) {\n      return this.writeValue(item, output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + item));\n  }\n\n  sizeOfValue(value: Value): number {\n    if (value instanceof Record) {\n      return this.sizeOfRecord(value);\n    } else if (value instanceof Data) {\n      return this.sizeOfData(value.size);\n    } else if (value instanceof Text) {\n      return this.sizeOfText(value.value);\n    } else if (value instanceof Num) {\n      if (value.isUint32()) {\n        return this.sizeOfUint32(value.value);\n      } else if (value.isUint64()) {\n        return this.sizeOfUint64(value.value);\n      } else {\n        return this.sizeOfNum(value.value);\n      }\n    } else if (value instanceof Bool) {\n      return this.sizeOfBool(value.value);\n    } else if (value instanceof Selector) {\n      return this.sizeOfSelector(value);\n    } else if (value instanceof Operator) {\n      return this.sizeOfOperator(value);\n    } else if (value instanceof Func) {\n      return this.sizeOfFunc(value);\n    } else if (value instanceof Extant) {\n      return this.sizeOfExtant();\n    } else if (value instanceof Absent) {\n      return this.sizeOfAbsent();\n    }\n    throw new WriterException(\"No Recon serialization for \" + value);\n  }\n\n  writeValue(value: Value, output: Output): Writer {\n    if (value instanceof Record) {\n      return this.writeRecord(value, output);\n    } else if (value instanceof Data) {\n      return this.writeData(value.asUint8Array(), output);\n    } else if (value instanceof Text) {\n      return this.writeText(value.value, output);\n    } else if (value instanceof Num) {\n      if (value.isUint32()) {\n        return this.writeUint32(value.value, output);\n      } else if (value.isUint64()) {\n        return this.writeUint64(value.value, output);\n      } else {\n        return this.writeNum(value.value, output);\n      }\n    } else if (value instanceof Bool) {\n      return this.writeBool(value.value, output);\n    } else if (value instanceof Selector) {\n      return this.writeSelector(value, output);\n    } else if (value instanceof Operator) {\n      return this.writeOperator(value, output);\n    } else if (value instanceof Func) {\n      return this.writeFunc(value, output);\n    } else if (value instanceof Extant) {\n      return this.writeExtant(output);\n    } else if (value instanceof Absent) {\n      return this.writeAbsent(output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + value));\n  }\n\n  sizeOfSelector(selector: Selector): number {\n    if (selector instanceof IdentitySelector) {\n      return this.sizeOfIdentitySelector();\n    } else if (selector instanceof LiteralSelector) {\n      return this.sizeOfLiteralSelector(selector.item(), selector.then());\n    } else if (selector instanceof GetSelector) {\n      return this.sizeOfGetSelector(selector.accessor(), selector.then());\n    } else if (selector instanceof GetAttrSelector) {\n      return this.sizeOfGetAttrSelector(selector.accessor(), selector.then());\n    } else if (selector instanceof GetItemSelector) {\n      return this.sizeOfGetItemSelector(selector.accessor(), selector.then());\n    } else if (selector instanceof KeysSelector) {\n      return this.sizeOfKeysSelector(selector.then());\n    } else if (selector instanceof ValuesSelector) {\n      return this.sizeOfValuesSelector(selector.then());\n    } else if (selector instanceof ChildrenSelector) {\n      return this.sizeOfChildrenSelector(selector.then());\n    } else if (selector instanceof DescendantsSelector) {\n      return this.sizeOfDescendantsSelector(selector.then());\n    } else if (selector instanceof FilterSelector) {\n      return this.sizeOfFilterSelector(selector.predicate(), selector.then());\n    }\n    throw new WriterException(\"No Recon serialization for \" + selector);\n  }\n\n  writeSelector(selector: Selector, output: Output): Writer {\n    if (selector instanceof IdentitySelector) {\n      return this.writeIdentitySelector(output);\n    } else if (selector instanceof LiteralSelector) {\n      return this.writeLiteralSelector(selector.item(), selector.then(), output);\n    } else if (selector instanceof GetSelector) {\n      return this.writeGetSelector(selector.accessor(), selector.then(), output);\n    } else if (selector instanceof GetAttrSelector) {\n      return this.writeGetAttrSelector(selector.accessor(), selector.then(), output);\n    } else if (selector instanceof GetItemSelector) {\n      return this.writeGetItemSelector(selector.accessor(), selector.then(), output);\n    } else if (selector instanceof KeysSelector) {\n      return this.writeKeysSelector(selector.then(), output);\n    } else if (selector instanceof ValuesSelector) {\n      return this.writeValuesSelector(selector.then(), output);\n    } else if (selector instanceof ChildrenSelector) {\n      return this.writeChildrenSelector(selector.then(), output);\n    } else if (selector instanceof DescendantsSelector) {\n      return this.writeDescendantsSelector(selector.then(), output);\n    } else if (selector instanceof FilterSelector) {\n      return this.writeFilterSelector(selector.predicate(), selector.then(), output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + selector));\n  }\n\n  sizeOfOperator(operator: Operator): number {\n    if (operator instanceof BinaryOperator) {\n      return this.sizeOfInfixOperator(operator.operand1(), operator.operator(), operator.operand2(), operator.precedence());\n    } else if (operator instanceof UnaryOperator) {\n      return this.sizeOfPrefixOperator(operator.operator(), operator.operand(), operator.precedence());\n    } else if (operator instanceof InvokeOperator) {\n      return this.sizeOfInvokeOperator(operator.func(), operator.args());\n    } else if (operator instanceof ConditionalOperator) {\n      return this.sizeOfConditionalOperator(operator.ifTerm(), operator.thenTerm(), operator.elseTerm(), operator.precedence());\n    }\n    throw new WriterException(\"No Recon serialization for \" + operator);\n  }\n\n  writeOperator(operator: Operator, output: Output): Writer {\n    if (operator instanceof BinaryOperator) {\n      return this.writeInfixOperator(operator.operand1(), operator.operator(), operator.operand2(), operator.precedence(), output);\n    } else if (operator instanceof UnaryOperator) {\n      return this.writePrefixOperator(operator.operator(), operator.operand(), operator.precedence(), output);\n    } else if (operator instanceof InvokeOperator) {\n      return this.writeInvokeOperator(operator.func(), operator.args(), output);\n    } else if (operator instanceof ConditionalOperator) {\n      return this.writeConditionalOperator(operator.ifTerm(), operator.thenTerm(), operator.elseTerm(), operator.precedence(), output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + operator));\n  }\n\n  sizeOfFunc(func: Func): number {\n    if (func instanceof LambdaFunc) {\n      return this.sizeOfLambdaFunc(func.bindings(), func.template());\n    } else if (func instanceof BridgeFunc) {\n      return 0;\n    }\n    throw new WriterException(\"No Recon serialization for \" + func);\n  }\n\n  writeFunc(func: Func, output: Output): Writer {\n    if (func instanceof LambdaFunc) {\n      return this.writeLambdaFunc(func.bindings(), func.template(), output);\n    } else if (func instanceof BridgeFunc) {\n      return Writer.done();\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + func));\n  }\n\n  sizeOfBlockItem(item: Item): number {\n    if (item instanceof Field) {\n      return this.sizeOfItem(item);\n    } else if (item instanceof Value) {\n      return this.sizeOfBlockValue(item);\n    }\n    throw new WriterException(\"No Recon serialization for \" + item);\n  }\n\n  writeBlockItem(item: Item, output: Output): Writer {\n    if (item instanceof Field) {\n      return this.writeItem(item, output);\n    } else if (item instanceof Value) {\n      return this.writeBlockValue(item, output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + item));\n  }\n\n  sizeOfBlockValue(value: Value): number {\n    if (value instanceof Record) {\n      return this.sizeOfBlock(value);\n    }\n    return this.sizeOfValue(value);\n  }\n\n  writeBlockValue(value: Value, output: Output): Writer {\n    if (value instanceof Record) {\n      return this.writeBlock(value, output);\n    }\n    return this.writeValue(value, output);\n  }\n\n  sizeOfThen(then: Value): number {\n    if (then instanceof Selector) {\n      if (then instanceof IdentitySelector) {\n        return this.sizeOfThenIdentitySelector();\n      } else if (then instanceof LiteralSelector) {\n        return this.sizeOfThenLiteralSelector(then.item(), then.then());\n      } else if (then instanceof GetSelector) {\n        return this.sizeOfThenGetSelector(then.accessor(), then.then());\n      } else if (then instanceof GetAttrSelector) {\n        return this.sizeOfThenGetAttrSelector(then.accessor(), then.then());\n      } else if (then instanceof GetItemSelector) {\n        return this.sizeOfThenGetItemSelector(then.accessor(), then.then());\n      } else if (then instanceof KeysSelector) {\n        return this.sizeOfThenKeysSelector(then.then());\n      } else if (then instanceof ValuesSelector) {\n        return this.sizeOfThenValuesSelector(then.then());\n      } else if (then instanceof ChildrenSelector) {\n        return this.sizeOfThenChildrenSelector(then.then());\n      } else if (then instanceof DescendantsSelector) {\n        return this.sizeOfThenDescendantsSelector(then.then());\n      } else if (then instanceof FilterSelector) {\n        return this.sizeOfThenFilterSelector(then.predicate(), then.then());\n      }\n    }\n    throw new WriterException(\"No Recon serialization for \" + then);\n  }\n\n  writeThen(then: Value, output: Output): Writer {\n    if (then instanceof Selector) {\n      if (then instanceof IdentitySelector) {\n        return this.writeThenIdentitySelector(output);\n      } else if (then instanceof LiteralSelector) {\n        return this.writeThenLiteralSelector(then.item(), then.then(), output);\n      } else if (then instanceof GetSelector) {\n        return this.writeThenGetSelector(then.accessor(), then.then(), output);\n      } else if (then instanceof GetAttrSelector) {\n        return this.writeThenGetAttrSelector(then.accessor(), then.then(), output);\n      } else if (then instanceof GetItemSelector) {\n        return this.writeThenGetItemSelector(then.accessor(), then.then(), output);\n      } else if (then instanceof KeysSelector) {\n        return this.writeThenKeysSelector(then.then(), output);\n      } else if (then instanceof ValuesSelector) {\n        return this.writeThenValuesSelector(then.then(), output);\n      } else if (then instanceof ChildrenSelector) {\n        return this.writeThenChildrenSelector(then.then(), output);\n      } else if (then instanceof DescendantsSelector) {\n        return this.writeThenDescendantsSelector(then.then(), output);\n      } else if (then instanceof FilterSelector) {\n        return this.writeThenFilterSelector(then.predicate(), then.then(), output);\n      }\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + then));\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Parser, Writer, Unicode, Utf8} from \"@swim/codec\";\nimport {Item, Value, Data} from \"@swim/structure\";\nimport {ReconParser} from \"./ReconParser\";\nimport {ReconStructureParser} from \"./ReconStructureParser\";\nimport {ReconWriter} from \"./ReconWriter\";\nimport {ReconStructureWriter} from \"./ReconStructureWriter\";\n\n/**\n * Factory for constructing Recon parsers and writers.\n */\nexport class Recon {\n  private constructor() {\n    // stub\n  }\n\n  /** @hidden */\n  static isSpace(c: number): boolean {\n    return c === 0x20 || c === 0x9;\n  }\n\n  /** @hidden */\n  static isNewline(c: number): boolean {\n    return c === 0xa || c === 0xd;\n  }\n\n  /** @hidden */\n  static isWhitespace(c: number): boolean {\n    return Recon.isSpace(c) || Recon.isNewline(c);\n  }\n\n  /** @hidden */\n  static isIdentStartChar(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c === 95/*'_'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c >= 0xc0 && c <= 0xd6\n        || c >= 0xd8 && c <= 0xf6\n        || c >= 0xf8 && c <= 0x2ff\n        || c >= 0x370 && c <= 0x37d\n        || c >= 0x37f && c <= 0x1fff\n        || c >= 0x200c && c <= 0x200d\n        || c >= 0x2070 && c <= 0x218f\n        || c >= 0x2c00 && c <= 0x2fef\n        || c >= 0x3001 && c <= 0xd7ff\n        || c >= 0xf900 && c <= 0xfdcf\n        || c >= 0xfdf0 && c <= 0xfffd\n        || c >= 0x10000 && c <= 0xeffff;\n  }\n\n  /** @hidden */\n  static isIdentChar(c: number): boolean {\n    return c === 45/*'-'*/\n        || c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c === 95/*'_'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c === 0xb7\n        || c >= 0xc0 && c <= 0xd6\n        || c >= 0xd8 && c <= 0xf6\n        || c >= 0xf8 && c <= 0x37d\n        || c >= 0x37f && c <= 0x1fff\n        || c >= 0x200c && c <= 0x200d\n        || c >= 0x203f && c <= 0x2040\n        || c >= 0x2070 && c <= 0x218f\n        || c >= 0x2c00 && c <= 0x2fef\n        || c >= 0x3001 && c <= 0xd7ff\n        || c >= 0xf900 && c <= 0xfdcf\n        || c >= 0xfdf0 && c <= 0xfffd\n        || c >= 0x10000 && c <= 0xeffff;\n  }\n\n  private static _structureParser?: ReconParser<Item, Value>;\n  private static _structureWriter?: ReconWriter<Item, Value>;\n\n  static structureParser(): ReconParser<Item, Value> {\n    if (Recon._structureParser === void 0) {\n      Recon._structureParser = new ReconStructureParser();\n    }\n    return Recon._structureParser;\n  }\n\n  static structureWriter(): ReconWriter<Item, Value> {\n    if (Recon._structureWriter === void 0) {\n      Recon._structureWriter = new ReconStructureWriter();\n    }\n    return Recon._structureWriter;\n  }\n\n  static parse(recon: string): Value {\n    return Recon.structureParser().parseBlockString(recon);\n  }\n\n  static parser(): Parser<Value> {\n    return Recon.structureParser().blockParser();\n  }\n\n  static sizeOf(item: Item): number {\n    return Recon.structureWriter().sizeOfItem(item);\n  }\n\n  static sizeOfBlock(item: Item): number {\n    return Recon.structureWriter().sizeOfBlockItem(item);\n  }\n\n  static write(item: Item, output: Output): Writer {\n    return Recon.structureWriter().writeItem(item, output);\n  }\n\n  static writeBlock(item: Item, output: Output): Writer {\n    return Recon.structureWriter().writeBlockItem(item, output);\n  }\n\n  static toString(item: Item): string {\n    const output = Unicode.stringOutput();\n    Recon.write(item, output);\n    return output.bind();\n  }\n\n  static toBlockString(item: Item): string {\n    const output = Unicode.stringOutput();\n    Recon.writeBlock(item, output);\n    return output.bind();\n  }\n\n  static toData(item: Item): Data {\n    const output = Utf8.encodedOutput(Data.output());\n    Recon.write(item, output);\n    return output.bind();\n  }\n\n  static toBlockData(item: Item): Data {\n    const output = Utf8.encodedOutput(Data.output());\n    Recon.writeBlock(item, output);\n    return output.bind();\n  }\n}\n\nItem.prototype.toRecon = function (): string {\n  return Recon.toString(this);\n};\n\nItem.prototype.toReconBlock = function (): string {\n  return Recon.toBlockString(this);\n};\n\nValue.parseRecon = function (recon: string): Value {\n  return Recon.parse(recon);\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyR2Shape, R2Shape} from \"./R2Shape\";\nimport {PointR2Init, PointR2Tuple} from \"./PointR2\";\nimport {SegmentR2Init} from \"./SegmentR2\";\nimport {BoxR2Init} from \"./BoxR2\";\nimport {CircleR2Init} from \"./CircleR2\";\n\nexport type AnyShape = Shape | PointR2Init | PointR2Tuple | SegmentR2Init | BoxR2Init | CircleR2Init;\n\nexport interface Shape {\n  contains(that: AnyShape): boolean;\n\n  intersects(that: AnyShape): boolean;\n}\n\nexport const Shape = {\n  fromAny(value: AnyShape): Shape {\n    return Shape.R2.fromAny(value as AnyR2Shape);\n  },\n\n  /** @hidden */\n  isAny(value: unknown): value is AnyShape {\n    return Shape.R2.isAny(value);\n  },\n\n  /** @hidden */\n  is(object: unknown): object is Shape {\n    if (typeof object === \"object\" && object !== null) {\n      const shape = object as Shape;\n      return typeof shape.contains === \"function\"\n          && typeof shape.intersects === \"function\";\n    }\n    return false;\n  },\n\n  // Forward type declarations\n  /** @hidden */\n  R2: void 0 as unknown as typeof R2Shape, // defined by R2Shape\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyShape, Shape} from \"./Shape\";\nimport {R2Function} from \"./R2Function\";\nimport {PointR2Init, PointR2Tuple, PointR2} from \"./PointR2\";\nimport {SegmentR2Init, SegmentR2} from \"./SegmentR2\";\nimport {BoxR2Init, BoxR2} from \"./BoxR2\";\nimport {CircleR2Init, CircleR2} from \"./CircleR2\";\n\nexport type AnyR2Shape = R2Shape | PointR2Init | PointR2Tuple | SegmentR2Init | BoxR2Init | CircleR2Init;\n\nexport abstract class R2Shape implements Shape {\n  abstract get xMin(): number;\n\n  abstract get yMin(): number;\n\n  abstract get xMax(): number;\n\n  abstract get yMax(): number;\n\n  abstract contains(that: AnyShape): boolean;\n\n  abstract contains(x: number, y: number): boolean;\n\n  abstract intersects(that: AnyShape): boolean;\n\n  union(that: AnyR2Shape): R2Shape {\n    that = R2Shape.fromAny(that);\n    return new R2Shape.Box(Math.min(this.xMin, that.xMin),\n                           Math.min(this.yMin, that.yMin),\n                           Math.max(this.xMax, that.xMax),\n                           Math.max(this.yMax, that.yMax));\n  }\n\n  abstract transform(f: R2Function): R2Shape;\n\n  boundingBox(): BoxR2 {\n    return new R2Shape.Box(this.xMin, this.yMin, this.xMax, this.yMax);\n  }\n\n  static fromAny(value: AnyR2Shape): R2Shape {\n    if (value instanceof R2Shape) {\n      return value;\n    } else if (R2Shape.Point.isInit(value)) {\n      return R2Shape.Point.fromInit(value);\n    } else if (R2Shape.Point.isTuple(value)) {\n      return R2Shape.Point.fromTuple(value);\n    } else if (R2Shape.Segment.isInit(value)) {\n      return R2Shape.Segment.fromInit(value);\n    } else if (R2Shape.Box.isInit(value)) {\n      return R2Shape.Box.fromInit(value);\n    } else if (R2Shape.Circle.isInit(value)) {\n      return R2Shape.Circle.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyR2Shape {\n    return value instanceof R2Shape\n        || R2Shape.Point.isInit(value)\n        || R2Shape.Point.isTuple(value)\n        || R2Shape.Segment.isInit(value)\n        || R2Shape.Box.isInit(value)\n        || R2Shape.Circle.isInit(value);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Point: typeof PointR2; // defined by PointR2\n  /** @hidden */\n  static Segment: typeof SegmentR2; // defined by SegmentR2\n  /** @hidden */\n  static Box: typeof BoxR2; // defined by BoxR2\n  /** @hidden */\n  static Circle: typeof CircleR2; // defined by CircleR2\n}\nShape.R2 = R2Shape;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\n\nexport type AnyVectorR2 = VectorR2 | VectorR2Init;\n\nexport interface VectorR2Init {\n  x: number;\n  y: number;\n}\n\nexport class VectorR2 implements HashCode, Debug {\n  /** @hidden */\n  readonly _x: number;\n  /** @hidden */\n  readonly _y: number;\n\n  constructor(x: number, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  isDefined(): boolean {\n    return this._x !== 0 || this._y !== 0;\n  }\n\n  get x(): number {\n    return this._x;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n\n  plus(that: AnyVectorR2): VectorR2 {\n    return new VectorR2(this._x + that.x, this._y + that.y);\n  }\n\n  opposite(): VectorR2 {\n    return new VectorR2(-this._x, -this._y);\n  }\n\n  minus(that: AnyVectorR2): VectorR2 {\n    return new VectorR2(this._x - that.x, this._y - that.y);\n  }\n\n  times(scalar: number): VectorR2 {\n    return new VectorR2(this._x * scalar, this._y * scalar);\n  }\n\n  toAny(): VectorR2Init {\n    return {\n      x: this._x,\n      y: this._y,\n    };\n  }\n\n  protected canEqual(that: VectorR2): boolean {\n    return true;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof VectorR2) {\n      return that.canEqual(this) && this._x === that._x && this._y === that._y;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (VectorR2._hashSeed === void 0) {\n      VectorR2._hashSeed = Murmur3.seed(VectorR2);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(VectorR2._hashSeed,\n        Murmur3.hash(this._x)), Murmur3.hash(this._y)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"VectorR2\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this._x).write(\", \").debug(this._y).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n\n  private static _zero?: VectorR2;\n\n  static zero(): VectorR2 {\n    if (VectorR2._zero === void 0) {\n      VectorR2._zero = new VectorR2(0, 0);\n    }\n    return VectorR2._zero;\n  }\n\n  static of(x: number, y: number): VectorR2 {\n    return new VectorR2(x, y);\n  }\n\n  static fromInit(value: VectorR2Init): VectorR2 {\n    return new VectorR2(value.x, value.y);\n  }\n\n  static fromAny(value: AnyVectorR2): VectorR2 {\n    if (value instanceof VectorR2) {\n      return value;\n    } else if (VectorR2.isInit(value)) {\n      return VectorR2.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is VectorR2Init {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as VectorR2Init;\n      return typeof init.x === \"number\"\n          && typeof init.y === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyVectorR2 {\n    return value instanceof VectorR2\n        || VectorR2.isInit(value);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {AnyShape, Shape} from \"./Shape\";\nimport {R2Function} from \"./R2Function\";\nimport {R2Shape} from \"./R2Shape\";\nimport {AnyVectorR2, VectorR2} from \"./VectorR2\";\n\nexport type AnyPointR2 = PointR2 | PointR2Init | PointR2Tuple;\n\nexport interface PointR2Init {\n  x: number;\n  y: number;\n}\n\nexport type PointR2Tuple = [number, number];\n\nexport class PointR2 extends R2Shape implements HashCode, Debug {\n  /** @hidden */\n  readonly _x: number;\n  /** @hidden */\n  readonly _y: number;\n\n  constructor(x: number, y: number) {\n    super();\n    this._x = x;\n    this._y = y;\n  }\n\n  isDefined(): boolean {\n    return this._x !== 0 || this._y !== 0;\n  }\n\n  get x(): number {\n    return this._x;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n\n  get xMin(): number {\n    return this._x;\n  }\n\n  get yMin(): number {\n    return this._y;\n  }\n\n  get xMax(): number {\n    return this._x;\n  }\n\n  get yMax(): number {\n    return this._y;\n  }\n\n  plus(vector: AnyVectorR2): PointR2 {\n    return new PointR2(this._x + vector.x, this._y + vector.y);\n  }\n\n  minus(vector: VectorR2): PointR2;\n  minus(that: PointR2): VectorR2;\n  minus(that: VectorR2 | PointR2): PointR2 | VectorR2 {\n    const x = this._x - that._x;\n    const y = this._y - that._y;\n    if (that instanceof VectorR2) {\n      return new PointR2(x, y);\n    } else {\n      return new VectorR2(x, y);\n    }\n  }\n\n  contains(that: AnyShape): boolean;\n  contains(x: number, y: number): boolean;\n  contains(that: AnyShape | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      return this._x === that && this._y === y!;\n    } else {\n      that = Shape.fromAny(that);\n      if (that instanceof PointR2) {\n        return this._x === that._x && this._y === that._y;\n      } else if (that instanceof R2Shape) {\n        return this._x <= that.xMin && that.xMax <= this._x\n            && this._y <= that.yMin && that.yMax <= this._y;\n      }\n      return false;\n    }\n  }\n\n  intersects(that: AnyShape): boolean {\n    that = Shape.fromAny(that);\n    return that.intersects(this);\n  }\n\n  transform(f: R2Function): PointR2 {\n    return new PointR2(f.transformX(this.x, this.y), f.transformY(this.x, this.y));\n  }\n\n  toAny(): PointR2Init {\n    return {\n      x: this._x,\n      y: this._y,\n    };\n  }\n\n  protected canEqual(that: PointR2): boolean {\n    return true;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PointR2) {\n      return that.canEqual(this) && this._x === that._x && this._y === that._y;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (PointR2._hashSeed === void 0) {\n      PointR2._hashSeed = Murmur3.seed(PointR2);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(PointR2._hashSeed,\n        Murmur3.hash(this._x)), Murmur3.hash(this._y)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"PointR2\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this._x).write(\", \").debug(this._y).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n\n  private static _origin?: PointR2;\n\n  static origin(): PointR2 {\n    if (PointR2._origin === void 0) {\n      PointR2._origin = new PointR2(0, 0);\n    }\n    return PointR2._origin;\n  }\n\n  static of(x: number, y: number): PointR2 {\n    return new PointR2(x, y);\n  }\n\n  static fromInit(value: PointR2Init): PointR2 {\n    return new PointR2(value.x, value.y);\n  }\n\n  static fromTuple(value: PointR2Tuple): PointR2 {\n    return new PointR2(value[0], value[1]);\n  }\n\n  static fromAny(value: AnyPointR2): PointR2 {\n    if (value instanceof PointR2) {\n      return value;\n    } else if (PointR2.isInit(value)) {\n      return PointR2.fromInit(value);\n    } else if (PointR2.isTuple(value)) {\n      return PointR2.fromTuple(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is PointR2Init {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as PointR2Init;\n      return typeof init.x === \"number\"\n          && typeof init.y === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isTuple(value: unknown): value is PointR2Tuple {\n    return Array.isArray(value)\n        && value.length === 2\n        && typeof value[0] === \"number\"\n        && typeof value[1] === \"number\";\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyPointR2 {\n    return value instanceof PointR2\n        || PointR2.isInit(value)\n        || PointR2.isTuple(value);\n  }\n}\nR2Shape.Point = PointR2;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {AnyShape, Shape} from \"./Shape\";\nimport {R2Function} from \"./R2Function\";\nimport {R2Shape} from \"./R2Shape\";\nimport {PointR2} from \"./PointR2\";\n\nexport type AnySegmentR2 = SegmentR2 | SegmentR2Init;\n\nexport interface SegmentR2Init {\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\nexport class SegmentR2 extends R2Shape implements HashCode, Debug {\n  /** @hidden */\n  readonly _x0: number;\n  /** @hidden */\n  readonly _y0: number;\n  /** @hidden */\n  readonly _x1: number;\n  /** @hidden */\n  readonly _y1: number;\n\n  constructor(x0: number, y0: number, x1: number, y1: number) {\n    super();\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n  }\n\n  isDefined(): boolean {\n    return this._x0 !== 0 || this._y0 !== 0\n        || this._x1 !== 0 || this._y1 !== 0;\n  }\n\n  get x0(): number {\n    return this._x0;\n  }\n\n  get y0(): number {\n    return this._y0;\n  }\n\n  get x1(): number {\n    return this._x1;\n  }\n\n  get y1(): number {\n    return this._y1;\n  }\n\n  get xMin(): number {\n    return Math.min(this._x0, this._x1);\n  }\n\n  get yMin(): number {\n    return Math.min(this._y0, this._y1);\n  }\n\n  get xMax(): number {\n    return Math.max(this._x0, this._x1);\n  }\n\n  get yMax(): number {\n    return Math.max(this._y0, this._y1);\n  }\n\n  contains(that: AnyShape): boolean;\n  contains(x: number, y: number): boolean;\n  contains(that: AnyShape | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      return SegmentR2.contains(this._x0, this._y0, this._x1, this._y1, that, y!);\n    } else {\n      that = Shape.fromAny(that);\n      if (that instanceof R2Shape) {\n        if (that instanceof PointR2) {\n          return this.containsPoint(that);\n        } else if (that instanceof SegmentR2) {\n          return this.containsSegment(that);\n        }\n      }\n      return false;\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: PointR2): boolean {\n    return SegmentR2.contains(this._x0, this._y0, this._x1, this._y1, that._x, that._y);\n  }\n\n  /** @hidden */\n  containsSegment(that: SegmentR2): boolean {\n    return SegmentR2.contains(this._x0, this._y0, this._x1, this._y1, that._x0, that._y0)\n        && SegmentR2.contains(this._x0, this._y0, this._x1, this._y1, that._x1, that._y1);\n  }\n\n  intersects(that: AnyShape): boolean {\n    that = Shape.fromAny(that);\n    if (that instanceof R2Shape) {\n      if (that instanceof PointR2) {\n        return this.intersectsPoint(that);\n      } else if (that instanceof SegmentR2) {\n        return this.intersectsSegment(that);\n      } else {\n        return that.intersects(this);\n      }\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsPoint(that: PointR2): boolean {\n    return SegmentR2.contains(this._x0, this._y0, this._x1, this._y1, that._x, that._y);\n  }\n\n  /** @hidden */\n  intersectsSegment(that: SegmentR2): boolean {\n    return SegmentR2.intersects(this._x0, this._y0, this._x1 - this._x0, this._y1 - this._y0,\n                                that._x0, that._y0, that._x1 - that._x0, that._y1 - that._y0);\n  }\n\n  transform(f: R2Function): SegmentR2 {\n    return new SegmentR2(f.transformX(this.x0, this.y0), f.transformY(this.x0, this.y0),\n                         f.transformX(this.x1, this.y1), f.transformY(this.x1, this.y1));\n  }\n\n  /** @hidden */\n  private static contains(ax: number, ay: number, bx: number, by: number, cx: number, cy: number): boolean {\n    return (ax <= cx && cx <= bx || bx <= cx && cx <= ax)\n        && (ay <= cy && cy <= by || by <= cy && cy <= ay)\n        && (bx - ax) * (cy - ay) === (cx - ax) * (by - ay);\n  }\n\n  /** @hidden */\n  private static intersects(px: number, py: number, rx: number, ry: number,\n                            qx: number, qy: number, sx: number, sy: number): boolean {\n    const pqx = qx - px;\n    const pqy = qy - py;\n    const pqr = pqx * ry - pqy * rx;\n    const rs = rx * sy - ry * sx;\n    if (pqr === 0 && rs === 0) { // collinear\n      const rr = rx * rx + ry * ry;\n      const sr = sx * rx + sy * ry;\n      const t0 = (pqx * rx + pqy * ry) / rr;\n      const t1 = t0 + sr / rr;\n      return sr >= 0 ? 0 < t1 && t0 < 1 : 0 < t0 && t1 < 1;\n    } else if (rs === 0) { // parallel\n      return false;\n    } else {\n      const pqs = pqx * sy - pqy * sx;\n      const t = pqs / rs; // (q − p) × s / (r × s)\n      const u = pqr / rs; // (q − p) × r / (r × s)\n      return 0 <= t && t <= 1 && 0 <= u && u <= 1;\n    }\n  }\n\n  toAny(): SegmentR2Init {\n    return {\n      x0: this._x0,\n      y0: this._y0,\n      x1: this._x1,\n      y1: this._y1,\n    };\n  }\n\n  protected canEqual(that: SegmentR2): boolean {\n    return true;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof SegmentR2) {\n      return that.canEqual(this) && this._x0 === that._x0 && this._y0 === that._y0\n          && this._x1 === that._x1 && this._y1 === that._y1;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (SegmentR2._hashSeed === void 0) {\n      SegmentR2._hashSeed = Murmur3.seed(SegmentR2);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(SegmentR2._hashSeed,\n        Murmur3.hash(this._x0)), Murmur3.hash(this._y0)),\n        Murmur3.hash(this._x1)), Murmur3.hash(this._y1)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"SegmentR2\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this._x0).write(\", \").debug(this._y0).write(\", \")\n        .debug(this._x1).write(\", \").debug(this._y1).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n\n  static of(x0: number, y0: number, x1: number, y1: number): SegmentR2 {\n    return new SegmentR2(x0, y0, x1, y1);\n  }\n\n  static fromInit(value: SegmentR2Init): SegmentR2 {\n    return new SegmentR2(value.x0, value.y0, value.x1, value.y1);\n  }\n\n  static fromAny(value: AnySegmentR2): SegmentR2 {\n    if (value instanceof SegmentR2) {\n      return value;\n    } else if (SegmentR2.isInit(value)) {\n      return SegmentR2.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is SegmentR2Init {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as SegmentR2Init;\n      return typeof init.x0 === \"number\"\n          && typeof init.y0 === \"number\"\n          && typeof init.x1 === \"number\"\n          && typeof init.y1 === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnySegmentR2 {\n    return value instanceof SegmentR2\n        || SegmentR2.isInit(value);\n  }\n}\nR2Shape.Segment = SegmentR2;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {AnyShape, Shape} from \"./Shape\";\nimport {R2Function} from \"./R2Function\";\nimport {R2Shape} from \"./R2Shape\";\nimport {PointR2} from \"./PointR2\";\nimport {SegmentR2} from \"./SegmentR2\";\nimport {BoxR2} from \"./BoxR2\";\n\nexport type AnyCircleR2 = CircleR2 | CircleR2Init;\n\nexport interface CircleR2Init {\n  cx: number;\n  cy: number;\n  r: number;\n}\n\nexport class CircleR2 extends R2Shape implements HashCode, Debug {\n  /** @hidden */\n  readonly _cx: number;\n  /** @hidden */\n  readonly _cy: number;\n  /** @hidden */\n  readonly _r: number;\n\n  constructor(x: number, y: number, r: number) {\n    super();\n    this._cx = x;\n    this._cy = y;\n    this._r = r;\n  }\n\n  isDefined(): boolean {\n    return this._cx !== 0 || this._cy !== 0 || this._r !== 0;\n  }\n\n  get cx(): number {\n    return this._cx;\n  }\n\n  get cy(): number {\n    return this._cy;\n  }\n\n  get r(): number {\n    return this._r;\n  }\n\n  get xMin(): number {\n    return this._cx - this._r;\n  }\n\n  get yMin(): number {\n    return this._cy - this._r;\n  }\n\n  get xMax(): number {\n    return this._cx + this._r;\n  }\n\n  get yMax(): number {\n    return this._cy + this._r;\n  }\n\n  contains(that: AnyShape): boolean;\n  contains(x: number, y: number): boolean;\n  contains(that: AnyShape | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      const dx = that - this._cx;\n      const dy = y! - this._cy;\n      return dx * dx + dy * dy <= this._r * this._r;\n    } else {\n      that = Shape.fromAny(that);\n      if (that instanceof R2Shape) {\n        if (that instanceof PointR2) {\n          return this.containsPoint(that);\n        } else if (that instanceof SegmentR2) {\n          return this.containsSegment(that);\n        } else if (that instanceof BoxR2) {\n          return this.containsBox(that);\n        } else if (that instanceof CircleR2) {\n          return this.containsCircle(that);\n        }\n      }\n      return false;\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: PointR2): boolean {\n    const dx = that._x - this._cx;\n    const dy = that._y - this._cy;\n    return dx * dx + dy * dy <= this._r * this._r;\n  }\n\n  /** @hidden */\n  containsSegment(that: SegmentR2): boolean {\n    const dx0 = that._x0 - this._cx;\n    const dy0 = that._y0 - this._cy;\n    const dx1 = that._x1 - this._cx;\n    const dy1 = that._y1 - this._cy;\n    const r2 = this._r * this._r;\n    return dx0 * dx0 + dy0 * dy0 <= r2\n        && dx1 * dx1 + dy1 * dy1 <= r2;\n  }\n\n  /** @hidden */\n  containsBox(that: BoxR2): boolean {\n    const dxMin = that._xMin - this._cx;\n    const dyMin = that._yMin - this._cy;\n    const dxMax = that._xMax - this._cx;\n    const dyMax = that._yMax - this._cy;\n    const r2 = this._r * this._r;\n    return dxMin * dxMin + dyMin * dyMin <= r2\n        && dxMin * dxMin + dyMax * dyMax <= r2\n        && dxMax * dxMax + dyMin * dyMin <= r2\n        && dxMax * dxMax + dyMax * dyMax <= r2;\n  }\n\n  /** @hidden */\n  containsCircle(that: CircleR2): boolean {\n    const dx = that._cx - this._cx;\n    const dy = that._cy - this._cy;\n    return dx * dx + dy * dy + that._r * that._r <= this._r * this._r;\n  }\n\n  intersects(that: AnyShape): boolean {\n    that = Shape.fromAny(that);\n    if (that instanceof R2Shape) {\n      if (that instanceof PointR2) {\n        return this.intersectsPoint(that);\n      } else if (that instanceof SegmentR2) {\n        return this.intersectsSegment(that);\n      } else if (that instanceof BoxR2) {\n        return this.intersectsBox(that);\n      } else if (that instanceof CircleR2) {\n        return this.intersectsCircle(that);\n      } else {\n        return that.intersects(this);\n      }\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsPoint(that: PointR2): boolean {\n    const dx = that._x - this._cx;\n    const dy = that._y - this._cy;\n    return dx * dx + dy * dy <= this._r * this._r;\n  }\n\n  /** @hidden */\n  intersectsSegment(that: SegmentR2): boolean {\n    const cx = this._cx;\n    const cy = this._cy;\n    const r = this._r;\n    const x0 = that._x0;\n    const y0 = that._y0;\n    const x1 = that._x1;\n    const y1 = that._y1;\n    const dx = x1 - x0;\n    const dy = y1 - y0;\n    const l = Math.sqrt(dx * dx + dy * dy);\n    const unitX = dx / l;\n    const unitY = dy / l;\n    const d = (cx - x0) * unitY - (cy - y0) * unitX;\n    if (d < -r || r < d) {\n      return false;\n    } else {\n      const dcx0 = x0 - cx;\n      const dcy0 = y0 - cy;\n      const dcx1 = x1 - cx;\n      const dcy1 = y1 - cy;\n      const r2 = r * r;\n      if (dcx0 * dcx0 + dcy0 * dcy0 <= r2 || dcx1 * dcx1 + dcy1 * dcy1 <= r2) {\n        return true;\n      } else {\n        const uc = unitX * cx + unitY * cy;\n        const u0 = unitX * x0 + unitY * y0;\n        const u1 = unitX * x1 + unitY * y1;\n        return u0 < uc && uc <= u1 || u1 < uc && uc <= u0;\n      }\n    }\n  }\n\n  /** @hidden */\n  intersectsBox(that: BoxR2): boolean {\n    const dx = (this._cx < that._xMin ? that._xMin : that._xMax < this._cx ? that._xMax : this._cx) - this._cx;\n    const dy = (this._cy < that._yMin ? that._yMin : that._yMax < this._cy ? that._yMax : this._cy) - this._cy;\n    return dx * dx + dy * dy <= this._r * this._r;\n  }\n\n  /** @hidden */\n  intersectsCircle(that: CircleR2): boolean {\n    const dx = that._cx - this._cx;\n    const dy = that._cy - this._cy;\n    const rr = this._r + that._r;\n    return dx * dx + dy * dy <= rr * rr;\n  }\n\n  transform(f: R2Function): CircleR2 {\n    const cx = f.transformX(this.cx, this.cy);\n    const cy = f.transformY(this.cx, this.cy);\n    const rx = f.transformX(this.cx + this.r, this.cy);\n    const ry = f.transformY(this.cx + this.r, this.cy);\n    const dx = rx - cx;\n    const dy = ry - cy;\n    const r = Math.sqrt(dx * dx + dy * dy);\n    return new CircleR2(cx, cy, r);\n  }\n\n  toAny(): CircleR2Init {\n    return {\n      cx: this._cx,\n      cy: this._cy,\n      r: this._r,\n    };\n  }\n\n  protected canEqual(that: CircleR2): boolean {\n    return true;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof CircleR2) {\n      return that.canEqual(this) && this._cx === that._cx && this._cy === that._cy && this._r === that._r;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (CircleR2._hashSeed === void 0) {\n      CircleR2._hashSeed = Murmur3.seed(CircleR2);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(CircleR2._hashSeed,\n        Murmur3.hash(this._cx)), Murmur3.hash(this._cy)), Murmur3.hash(this._r)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"CircleR2\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this._cx).write(\", \").debug(this._cy).write(\", \").debug(this._r).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n\n  static of(cx: number, cy: number, r: number): CircleR2 {\n    return new CircleR2(cx, cy, r);\n  }\n\n  static fromInit(value: CircleR2Init): CircleR2 {\n    return new CircleR2(value.cx, value.cy, value.r);\n  }\n\n  static fromAny(value: AnyCircleR2): CircleR2 {\n    if (value instanceof CircleR2) {\n      return value;\n    } else if (CircleR2.isInit(value)) {\n      return CircleR2.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is CircleR2Init {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as CircleR2Init;\n      return typeof init.cx === \"number\"\n          && typeof init.cy === \"number\"\n          && typeof init.r === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyCircleR2 {\n    return value instanceof CircleR2\n        || CircleR2.isInit(value);\n  }\n}\nR2Shape.Circle = CircleR2;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {AnyShape, Shape} from \"./Shape\";\nimport {R2Function} from \"./R2Function\";\nimport {AnyR2Shape, R2Shape} from \"./R2Shape\";\nimport {PointR2} from \"./PointR2\";\nimport {SegmentR2} from \"./SegmentR2\";\nimport {CircleR2} from \"./CircleR2\";\n\nexport type AnyBoxR2 = BoxR2 | BoxR2Init;\n\nexport interface BoxR2Init {\n  xMin: number;\n  yMin: number;\n  xMax: number;\n  yMax: number;\n}\n\nexport class BoxR2 extends R2Shape implements HashCode, Debug {\n  /** @hidden */\n  readonly _xMin: number;\n  /** @hidden */\n  readonly _yMin: number;\n  /** @hidden */\n  readonly _xMax: number;\n  /** @hidden */\n  readonly _yMax: number;\n\n  constructor(xMin: number, yMin: number, xMax: number, yMax: number) {\n    super();\n    this._xMin = xMin <= xMax ? xMin : xMax;\n    this._yMin = yMin <= yMax ? yMin : yMax;\n    this._xMax = xMin <= xMax ? xMax : xMin;\n    this._yMax = yMin <= yMax ? yMax : yMin;\n  }\n\n  isDefined(): boolean {\n    return this._xMin !== 0 || this._yMin !== 0\n        || this._xMax !== 0 || this._yMax !== 0;\n  }\n\n  get xMin(): number {\n    return this._xMin;\n  }\n\n  get yMin(): number {\n    return this._yMin;\n  }\n\n  get xMax(): number {\n    return this._xMax;\n  }\n\n  get yMax(): number {\n    return this._yMax;\n  }\n\n  get x(): number {\n    return this._xMin;\n  }\n\n  get y(): number {\n    return this._yMin;\n  }\n\n  get width(): number {\n    return this._xMax - this._xMin;\n  }\n\n  get height(): number {\n    return this._yMax - this._yMin;\n  }\n\n  get top(): number {\n    return this._yMin;\n  }\n\n  get right(): number {\n    return this._xMax;\n  }\n\n  get bottom(): number {\n    return this._yMax;\n  }\n\n  get left(): number {\n    return this._xMin;\n  }\n\n  get center(): PointR2 {\n    return new PointR2((this._xMin + this._xMax) / 2, (this._yMin + this._yMax) / 2);\n  }\n\n  contains(that: AnyShape): boolean;\n  contains(x: number, y: number): boolean;\n  contains(that: AnyShape | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      return this._xMin <= that && that <= this._xMax\n          && this._yMin <= y! && y! <= this._yMax;\n    } else {\n      that = Shape.fromAny(that);\n      if (that instanceof R2Shape) {\n        if (that instanceof PointR2) {\n          return this.containsPoint(that);\n        } else if (that instanceof SegmentR2) {\n          return this.containsSegment(that);\n        } else if (that instanceof BoxR2) {\n          return this.containsBox(that);\n        } else if (that instanceof CircleR2) {\n          return this.containsCircle(that);\n        } else {\n          return this._xMin <= that.xMin && that.xMax <= this._xMax\n              && this._yMin <= that.yMin && that.yMax <= this._yMax;\n        }\n      }\n      return false;\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: PointR2): boolean {\n    return this._xMin <= that._x && that._x <= this._xMax\n        && this._yMin <= that._y && that._y <= this._yMax;\n  }\n\n  /** @hidden */\n  containsSegment(that: SegmentR2): boolean {\n    return this._xMin <= that._x0 && that._x0 <= this._xMax\n        && this._yMin <= that._y0 && that._y0 <= this._yMax\n        && this._xMin <= that._x1 && that._x1 <= this._xMax\n        && this._yMin <= that._y1 && that._y1 <= this._yMax;\n  }\n\n  /** @hidden */\n  containsBox(that: BoxR2): boolean {\n    return this._xMin <= that._xMin && that._xMax <= this._xMax\n        && this._yMin <= that._yMin && that._yMax <= this._yMax;\n  }\n\n  /** @hidden */\n  containsCircle(that: CircleR2): boolean {\n    return this._xMin <= that._cx - that._r && that._cx + that._r <= this._xMax\n        && this._yMin <= that._cy - that._r && that._cy + that._r <= this._yMax;\n  }\n\n  intersects(that: Shape): boolean {\n    that = Shape.fromAny(that);\n    if (that instanceof R2Shape) {\n      if (that instanceof PointR2) {\n        return this.intersectsPoint(that);\n      } else if (that instanceof SegmentR2) {\n        return this.intersectsSegment(that);\n      } else if (that instanceof BoxR2) {\n        return this.intersectsBox(that);\n      } else if (that instanceof CircleR2) {\n        return this.intersectsCircle(that);\n      } else {\n        return that.intersects(this);\n      }\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsPoint(that: PointR2): boolean {\n    return this._xMin <= that._x && that._x <= this._xMax\n        && this._yMin <= that._y && that._y <= this._yMax;\n  }\n\n  /** @hidden */\n  intersectsSegment(that: SegmentR2): boolean {\n    const xMin = this._xMin;\n    const yMin = this._yMin;\n    const xMax = this._xMax;\n    const yMax = this._yMax;\n    const x0 = that._x0;\n    const y0 = that._y0;\n    const x1 = that._x1;\n    const y1 = that._y1;\n    if (x0 < xMin && x1 < xMin || x0 > xMax && x1 > xMax ||\n        y0 < yMin && y1 < yMin || y0 > yMax && y1 > yMax) {\n      return false;\n    } else if (x0 > xMin && x0 < xMax && y0 > yMin && y0 < yMax) {\n      return true;\n    } else if ((BoxR2.intersectsSegment(x0 - xMin, x1 - xMin, x0, y0, x1, y1) && BoxR2._hitY > yMin && BoxR2._hitY < yMax)\n            || (BoxR2.intersectsSegment(y0 - yMin, y1 - yMin, x0, y0, x1, y1) && BoxR2._hitX > xMin && BoxR2._hitX < xMax)\n            || (BoxR2.intersectsSegment(x0 - xMax, x1 - xMax, x0, y0, x1, y1) && BoxR2._hitY > yMin && BoxR2._hitY < yMax)\n            || (BoxR2.intersectsSegment(y0 - yMax, y1 - yMax, x0, y0, x1, y1) && BoxR2._hitX > xMin && BoxR2._hitX < xMax)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _hitX: number = 0; // stack local hit register\n  private static _hitY: number = 0; // stack local hit register\n  private static intersectsSegment(d0: number, d1: number, x0: number, y0: number, x1: number, y1: number): boolean {\n    if (d0 !== d1 || d0 * d1 < 0) {\n      const scale = -d0 / (d1 - d0);\n      BoxR2._hitX = x0 + (x1 - x0) * scale;\n      BoxR2._hitY = y0 + (y1 - y0) * scale;\n      return true;\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsBox(that: BoxR2): boolean {\n    return this._xMin <= that._xMax && that._xMin <= this._xMax\n        && this._yMin <= that._yMax && that._yMin <= this._yMax;\n  }\n\n  /** @hidden */\n  intersectsCircle(that: CircleR2): boolean {\n    const dx = (that._cx < this._xMin ? this._xMin : this._xMax < that._cx ? this._xMax : that._cx) - that._cx;\n    const dy = (that._cy < this._yMin ? this._yMin : this._yMax < that._cy ? this._yMax : that._cy) - that._cy;\n    return dx * dx + dy * dy <= that._r * that._r;\n  }\n\n  union(that: AnyR2Shape): BoxR2 {\n    return super.union(that) as BoxR2;\n  }\n\n  transform(f: R2Function): BoxR2 {\n    return new BoxR2(f.transformX(this.xMin, this.yMin), f.transformY(this.xMin, this.yMin),\n                     f.transformX(this.xMax, this.yMax), f.transformY(this.xMax, this.yMax));\n  }\n\n  boundingBox(): BoxR2 {\n    return this;\n  }\n\n  toAny(): BoxR2Init {\n    return {\n      xMin: this._xMin,\n      yMin: this._yMin,\n      xMax: this._xMax,\n      yMax: this._yMax,\n    };\n  }\n\n  protected canEqual(that: BoxR2): boolean {\n    return true;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BoxR2) {\n      return that.canEqual(this) && this._xMin === that._xMin && this._yMin === that._yMin\n          && this._xMax === that._xMax && this._yMax === that._yMax;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BoxR2._hashSeed === void 0) {\n      BoxR2._hashSeed = Murmur3.seed(BoxR2);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(BoxR2._hashSeed,\n        Murmur3.hash(this.xMin)), Murmur3.hash(this.yMin)),\n        Murmur3.hash(this.xMax)), Murmur3.hash(this.yMax)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"BoxR2\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.xMin).write(\", \").debug(this.yMin).write(\", \")\n        .debug(this.xMax).write(\", \").debug(this.yMax).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n\n  private static _empty?: BoxR2;\n\n  static empty(): BoxR2 {\n    if (BoxR2._empty === void 0) {\n      BoxR2._empty = new BoxR2(0, 0, 0, 0);\n    }\n    return BoxR2._empty;\n  }\n\n  static from(xMin: number, yMin: number, xMax?: number, yMax?: number): BoxR2 {\n    if (xMax === void 0) {\n      xMax = xMin;\n    }\n    if (yMax === void 0) {\n      yMax = yMin;\n    }\n    return new BoxR2(xMin, yMin, xMax, yMax);\n  }\n\n  static fromInit(value: BoxR2Init): BoxR2 {\n    return new BoxR2(value.xMin, value.yMin, value.xMax, value.yMax);\n  }\n\n  static fromAny(value: AnyBoxR2): BoxR2 {\n    if (value instanceof BoxR2) {\n      return value;\n    } else if (BoxR2.isInit(value)) {\n      return BoxR2.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is BoxR2Init {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as BoxR2Init;\n      return typeof init.xMin === \"number\"\n          && typeof init.yMin === \"number\"\n          && typeof init.xMax === \"number\"\n          && typeof init.yMax === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyBoxR2 {\n    return value instanceof BoxR2\n        || BoxR2.isInit(value);\n  }\n}\nR2Shape.Box = BoxR2;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/interpolate\";\nimport {R2Shape} from \"./R2Shape\";\nimport {PointR2} from \"./PointR2\";\nimport {SegmentR2} from \"./SegmentR2\";\nimport {BoxR2} from \"./BoxR2\";\nimport {CircleR2} from \"./CircleR2\";\nimport {PointR2Interpolator} from \"./PointR2Interpolator\";\nimport {SegmentR2Interpolator} from \"./SegmentR2Interpolator\";\nimport {BoxR2Interpolator} from \"./BoxR2Interpolator\";\nimport {CircleR2Interpolator} from \"./CircleR2Interpolator\";\n\nexport abstract class R2ShapeInterpolator<S extends R2Shape & AS, AS = S> extends Interpolator<S, AS> {\n  static between<S extends R2Shape>(s0: S, s1: S): R2ShapeInterpolator<S>;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (a instanceof PointR2 && b instanceof PointR2) {\n      return new R2ShapeInterpolator.PointR2(a, b);\n    } else if (a instanceof SegmentR2 && b instanceof SegmentR2) {\n      return new R2ShapeInterpolator.SegmentR2(a, b);\n    } else if (a instanceof BoxR2 && b instanceof BoxR2) {\n      return new R2ShapeInterpolator.BoxR2(a, b);\n    } else if (a instanceof CircleR2 && b instanceof CircleR2) {\n      return new R2ShapeInterpolator.CircleR2(a, b);\n    } else if (a instanceof R2Shape && b instanceof R2Shape) {\n      return new R2ShapeInterpolator.BoxR2(a.boundingBox(), b.boundingBox());\n    } else if (PointR2.isAny(a) && PointR2.isAny(b)) {\n      return new R2ShapeInterpolator.PointR2(PointR2.fromAny(a), PointR2.fromAny(b));\n    } else if (SegmentR2.isAny(a) && SegmentR2.isAny(b)) {\n      return new R2ShapeInterpolator.SegmentR2(SegmentR2.fromAny(a), SegmentR2.fromAny(b));\n    } else if (BoxR2.isAny(a) && BoxR2.isAny(b)) {\n      return new R2ShapeInterpolator.BoxR2(BoxR2.fromAny(a), BoxR2.fromAny(b));\n    } else if (CircleR2.isAny(a) && CircleR2.isAny(b)) {\n      return new R2ShapeInterpolator.CircleR2(CircleR2.fromAny(a), CircleR2.fromAny(b));\n    } else if (R2Shape.isAny(a) && R2Shape.isAny(b)) {\n      return new R2ShapeInterpolator.BoxR2(R2Shape.fromAny(a).boundingBox(), R2Shape.fromAny(b).boundingBox());\n    }\n    return Interpolator.between(a, b);\n  }\n\n  static tryBetween(a: unknown, b: unknown): R2ShapeInterpolator<any> | null {\n    if (a instanceof PointR2 && b instanceof PointR2) {\n      return new R2ShapeInterpolator.PointR2(a, b);\n    } else if (a instanceof SegmentR2 && b instanceof SegmentR2) {\n      return new R2ShapeInterpolator.SegmentR2(a, b);\n    } else if (a instanceof BoxR2 && b instanceof BoxR2) {\n      return new R2ShapeInterpolator.BoxR2(a, b);\n    } else if (a instanceof CircleR2 && b instanceof CircleR2) {\n      return new R2ShapeInterpolator.CircleR2(a, b);\n    }\n    return null;\n  }\n\n  static tryBetweenAny(a: unknown, b: unknown): R2ShapeInterpolator<any> | null {\n    if ((a instanceof PointR2 || PointR2.isInit(a)) && (b instanceof PointR2 || PointR2.isInit(b))) {\n      return new R2ShapeInterpolator.PointR2(PointR2.fromAny(a), PointR2.fromAny(b));\n    } else if (SegmentR2.isAny(a) && SegmentR2.isAny(b)) {\n      return new R2ShapeInterpolator.SegmentR2(SegmentR2.fromAny(a), SegmentR2.fromAny(b));\n    } else if (BoxR2.isAny(a) && BoxR2.isAny(b)) {\n      return new R2ShapeInterpolator.BoxR2(BoxR2.fromAny(a), BoxR2.fromAny(b));\n    } else if (CircleR2.isAny(a) && CircleR2.isAny(b)) {\n      return new R2ShapeInterpolator.CircleR2(CircleR2.fromAny(a), CircleR2.fromAny(b));\n    } else if (R2Shape.isAny(a) && R2Shape.isAny(b)) {\n      return new R2ShapeInterpolator.BoxR2(R2Shape.fromAny(a).boundingBox(), R2Shape.fromAny(b).boundingBox());\n    }\n    return null;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static PointR2: typeof PointR2Interpolator; // defined by PointR2Interpolator\n  /** @hidden */\n  static SegmentR2: typeof SegmentR2Interpolator; // defined by SegmentR2Interpolator\n  /** @hidden */\n  static BoxR2: typeof BoxR2Interpolator; // defined by BoxR2Interpolator\n  /** @hidden */\n  static CircleR2: typeof CircleR2Interpolator; // defined by CircleR2Interpolator\n}\nInterpolator.registerFactory(R2ShapeInterpolator);\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/interpolate\";\nimport {AnyPointR2, PointR2} from \"./PointR2\";\nimport {R2ShapeInterpolator} from \"./R2ShapeInterpolator\";\n\nexport class PointR2Interpolator extends R2ShapeInterpolator<PointR2, AnyPointR2> {\n  /** @hidden */\n  readonly x: number;\n  /** @hidden */\n  readonly dx: number;\n  /** @hidden */\n  readonly y: number;\n  /** @hidden */\n  readonly dy: number;\n\n  constructor(p0: PointR2, p1: PointR2) {\n    super();\n    this.x = p0.x;\n    this.dx = p1.x - this.x;\n    this.y = p0.y;\n    this.dy = p1.y - this.y;\n  }\n\n  interpolate(u: number): PointR2 {\n    const x = this.x + this.dx * u;\n    const y = this.y + this.dy * u;\n    return new PointR2(x, y);\n  }\n\n  deinterpolate(p: AnyPointR2): number {\n    p = PointR2.fromAny(p);\n    const x = p.x - this.x;\n    const y = p.y - this.y;\n    const dp = x * this.dx + y * this.dy;\n    const l = Math.sqrt(x * x + y * y);\n    return l !== 0 ? dp / l : l;\n  }\n\n  range(): ReadonlyArray<PointR2>;\n  range(ps: ReadonlyArray<AnyPointR2>): PointR2Interpolator;\n  range(p0: AnyPointR2, p1: AnyPointR2): PointR2Interpolator;\n  range(p0?: ReadonlyArray<AnyPointR2> | AnyPointR2, p1?: AnyPointR2): ReadonlyArray<PointR2> | PointR2Interpolator {\n    if (p0 === void 0) {\n      return [this.interpolate(0), this.interpolate(1)];\n    } else if (p1 === void 0) {\n      p0 = p0 as ReadonlyArray<AnyPointR2>\n      return PointR2Interpolator.between(p0[0], p0[1]);\n    } else {\n      return PointR2Interpolator.between(p0 as AnyPointR2, p1);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PointR2Interpolator) {\n      return this.x === that.x && this.dx === that.dx\n          && this.y === that.y && this.dy === that.dy;\n    }\n    return false;\n  }\n\n  static between(p0: AnyPointR2, p1: AnyPointR2): PointR2Interpolator;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (a instanceof PointR2 && b instanceof PointR2) {\n      return new PointR2Interpolator(a, b);\n    } else if (PointR2.isAny(a) && PointR2.isAny(b)) {\n      return new PointR2Interpolator(PointR2.fromAny(a), PointR2.fromAny(b));\n    }\n    return R2ShapeInterpolator.between(a, b);\n  }\n}\nR2ShapeInterpolator.PointR2 = PointR2Interpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/interpolate\";\nimport {AnySegmentR2, SegmentR2} from \"./SegmentR2\";\nimport {R2ShapeInterpolator} from \"./R2ShapeInterpolator\";\n\nexport class SegmentR2Interpolator extends R2ShapeInterpolator<SegmentR2, AnySegmentR2> {\n  /** @hidden */\n  readonly x0: number;\n  /** @hidden */\n  readonly dx0: number;\n  /** @hidden */\n  readonly y0: number;\n  /** @hidden */\n  readonly dy0: number;\n  /** @hidden */\n  readonly x1: number;\n  /** @hidden */\n  readonly dx1: number;\n  /** @hidden */\n  readonly y1: number;\n  /** @hidden */\n  readonly dy1: number;\n\n  constructor(s0: SegmentR2, s1: SegmentR2) {\n    super();\n    this.x0 = s0.x0;\n    this.dx0 = s1.x0 - this.x0;\n    this.y0 = s0.y0;\n    this.dy0 = s1.y0 - this.y0;\n    this.x1 = s0.x1;\n    this.dx1 = s1.x1 - this.x1;\n    this.y1 = s0.y1;\n    this.dy1 = s1.y1 - this.y1;\n  }\n\n  interpolate(u: number): SegmentR2 {\n    const x0 = this.x0 + this.dx0 * u;\n    const y0 = this.y0 + this.dy0 * u;\n    const x1 = this.x1 + this.dx1 * u;\n    const y1 = this.y1 + this.dy1 * u;\n    return new SegmentR2(x0, y0, x1, y1);\n  }\n\n  deinterpolate(s: AnySegmentR2): number {\n    return 0;\n  }\n\n  range(): ReadonlyArray<SegmentR2>;\n  range(ss: ReadonlyArray<AnySegmentR2>): SegmentR2Interpolator;\n  range(s0: AnySegmentR2, s1: AnySegmentR2): SegmentR2Interpolator;\n  range(s0?: ReadonlyArray<AnySegmentR2> | AnySegmentR2, s1?: AnySegmentR2): ReadonlyArray<SegmentR2> | SegmentR2Interpolator {\n    if (s0 === void 0) {\n      return [this.interpolate(0), this.interpolate(1)];\n    } else if (s1 === void 0) {\n      s0 = s0 as ReadonlyArray<AnySegmentR2>\n      return SegmentR2Interpolator.between(s0[0], s0[1]);\n    } else {\n      return SegmentR2Interpolator.between(s0 as AnySegmentR2, s1);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof SegmentR2Interpolator) {\n      return this.x0 === that.x0 && this.dx0 === that.dx0\n          && this.y0 === that.y0 && this.dy0 === that.dy0\n          && this.x1 === that.x1 && this.dx1 === that.dx1\n          && this.y1 === that.y1 && this.dy1 === that.dy1;\n    }\n    return false;\n  }\n\n  static between(s0: AnySegmentR2, s1: AnySegmentR2): SegmentR2Interpolator;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (a instanceof SegmentR2 && b instanceof SegmentR2) {\n      return new SegmentR2Interpolator(a, b);\n    } else if (SegmentR2.isAny(a) && SegmentR2.isAny(b)) {\n      return new SegmentR2Interpolator(SegmentR2.fromAny(a), SegmentR2.fromAny(b));\n    }\n    return R2ShapeInterpolator.between(a, b);\n  }\n}\nR2ShapeInterpolator.SegmentR2 = SegmentR2Interpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/interpolate\";\nimport {AnyBoxR2, BoxR2} from \"./BoxR2\";\nimport {R2ShapeInterpolator} from \"./R2ShapeInterpolator\";\n\nexport class BoxR2Interpolator extends R2ShapeInterpolator<BoxR2, AnyBoxR2> {\n  /** @hidden */\n  readonly xMin: number;\n  /** @hidden */\n  readonly dxMin: number;\n  /** @hidden */\n  readonly yMin: number;\n  /** @hidden */\n  readonly dyMin: number;\n  /** @hidden */\n  readonly xMax: number;\n  /** @hidden */\n  readonly dxMax: number;\n  /** @hidden */\n  readonly yMax: number;\n  /** @hidden */\n  readonly dyMax: number;\n\n  constructor(s0: BoxR2, s1: BoxR2) {\n    super();\n    this.xMin = s0.xMin;\n    this.dxMin = s1.xMin - this.xMin;\n    this.yMin = s0.yMin;\n    this.dyMin = s1.yMin - this.yMin;\n    this.xMax = s0.xMax;\n    this.dxMax = s1.xMax - this.xMax;\n    this.yMax = s0.yMax;\n    this.dyMax = s1.yMax - this.yMax;\n  }\n\n  interpolate(u: number): BoxR2 {\n    const xMin = this.xMin + this.dxMin * u;\n    const yMin = this.yMin + this.dyMin * u;\n    const xMax = this.xMax + this.dxMax * u;\n    const yMax = this.yMax + this.dyMax * u;\n    return new BoxR2(xMin, yMin, xMax, yMax);\n  }\n\n  deinterpolate(b: AnyBoxR2): number {\n    return 0;\n  }\n\n  range(): ReadonlyArray<BoxR2>;\n  range(ss: ReadonlyArray<AnyBoxR2>): BoxR2Interpolator;\n  range(s0: AnyBoxR2, s1: AnyBoxR2): BoxR2Interpolator;\n  range(s0?: ReadonlyArray<AnyBoxR2> | AnyBoxR2, s1?: AnyBoxR2): ReadonlyArray<BoxR2> | BoxR2Interpolator {\n    if (s0 === void 0) {\n      return [this.interpolate(0), this.interpolate(1)];\n    } else if (s1 === void 0) {\n      s0 = s0 as ReadonlyArray<AnyBoxR2>\n      return BoxR2Interpolator.between(s0[0], s0[1]);\n    } else {\n      return BoxR2Interpolator.between(s0 as AnyBoxR2, s1);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BoxR2Interpolator) {\n      return this.xMin === that.xMin && this.dxMin === that.dxMin\n          && this.yMin === that.yMin && this.dyMin === that.dyMin\n          && this.xMax === that.xMax && this.dxMax === that.dxMax\n          && this.yMax === that.yMax && this.dyMax === that.dyMax;\n    }\n    return false;\n  }\n\n  static between(s0: AnyBoxR2, s1: AnyBoxR2): BoxR2Interpolator;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (a instanceof BoxR2 && b instanceof BoxR2) {\n      return new BoxR2Interpolator(a, b);\n    } else if (BoxR2.isAny(a) && BoxR2.isAny(b)) {\n      return new BoxR2Interpolator(BoxR2.fromAny(a), BoxR2.fromAny(b));\n    }\n    return R2ShapeInterpolator.between(a, b);\n  }\n}\nR2ShapeInterpolator.BoxR2 = BoxR2Interpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/interpolate\";\nimport {AnyCircleR2, CircleR2} from \"./CircleR2\";\nimport {R2ShapeInterpolator} from \"./R2ShapeInterpolator\";\n\nexport class CircleR2Interpolator extends R2ShapeInterpolator<CircleR2, AnyCircleR2> {\n  /** @hidden */\n  readonly cx: number;\n  /** @hidden */\n  readonly dcx: number;\n  /** @hidden */\n  readonly cy: number;\n  /** @hidden */\n  readonly dcy: number;\n  /** @hidden */\n  readonly r: number;\n  /** @hidden */\n  readonly dr: number;\n\n  constructor(s0: CircleR2, s1: CircleR2) {\n    super();\n    this.cx = s0.cx;\n    this.dcx = s1.cx - this.cx;\n    this.cy = s0.cy;\n    this.dcy = s1.cy - this.cy;\n    this.r = s0.r;\n    this.dr = s1.r - this.r;\n  }\n\n  interpolate(u: number): CircleR2 {\n    const cx = this.cx + this.dcx * u;\n    const cy = this.cy + this.dcy * u;\n    const r = this.r + this.dr * u;\n    return new CircleR2(cx, cy, r);\n  }\n\n  deinterpolate(s: AnyCircleR2): number {\n    return 0;\n  }\n\n  range(): ReadonlyArray<CircleR2>;\n  range(ss: ReadonlyArray<AnyCircleR2>): CircleR2Interpolator;\n  range(s0: AnyCircleR2, s1: AnyCircleR2): CircleR2Interpolator;\n  range(s0?: ReadonlyArray<AnyCircleR2> | AnyCircleR2, s1?: AnyCircleR2): ReadonlyArray<CircleR2> | CircleR2Interpolator {\n    if (s0 === void 0) {\n      return [this.interpolate(0), this.interpolate(1)];\n    } else if (s1 === void 0) {\n      s0 = s0 as ReadonlyArray<AnyCircleR2>\n      return CircleR2Interpolator.between(s0[0], s0[1]);\n    } else {\n      return CircleR2Interpolator.between(s0 as AnyCircleR2, s1);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof CircleR2Interpolator) {\n      return this.cx === that.cx && this.dcx === that.dcx\n          && this.cy === that.cy && this.dcy === that.dcy\n          && this.r === that.r && this.dr === that.dr;\n    }\n    return false;\n  }\n\n  static between(s0: AnyCircleR2, s1: AnyCircleR2): CircleR2Interpolator;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (a instanceof CircleR2 && b instanceof CircleR2) {\n      return new CircleR2Interpolator(a, b);\n    } else if (CircleR2.isAny(a) && CircleR2.isAny(b)) {\n      return new CircleR2Interpolator(CircleR2.fromAny(a), CircleR2.fromAny(b));\n    }\n    return R2ShapeInterpolator.between(a, b);\n  }\n}\nR2ShapeInterpolator.CircleR2 = CircleR2Interpolator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {Value, Form} from \"@swim/structure\";\nimport {TimeZoneForm} from \"./TimeZoneForm\";\n\nexport type AnyTimeZone = TimeZone | string | number;\n\nexport class TimeZone implements HashCode, Debug {\n  /** @hidden */\n  readonly _name: string | undefined;\n  /** @hidden */\n  readonly _offset: number;\n\n  /** @hidden */\n  private constructor(name: string | undefined, offset: number) {\n    this._name = name;\n    this._offset = offset;\n  }\n\n  isUTC(): boolean {\n    return this._offset === 0;\n  }\n\n  isLocal(): boolean {\n    return this._offset === -new Date().getTimezoneOffset();\n  }\n\n  name(): string | undefined {\n    return this._name;\n  }\n\n  offset(): number {\n    return this._offset;\n  }\n\n  equals(that: unknown) {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TimeZone) {\n      return this._offset === that._offset;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (TimeZone._hashSeed === void 0) {\n      TimeZone._hashSeed = Murmur3.seed(TimeZone);\n    }\n    return Murmur3.mash(Murmur3.mix(TimeZone._hashSeed, Murmur3.hash(this._offset)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"TimeZone\").write(46/*'.'*/);\n    if (this._name === \"UTC\" && this._offset === 0) {\n      output = output.write(\"utc\").write(40/*'('*/).write(41/*')'*/);\n    } else if (this._name === void 0) {\n      output = output.write(\"forOffset\").write(40/*'('*/)\n          .debug(this._offset).write(41/*')'*/);\n    } else {\n      output = output.write(\"from\").write(40/*'('*/)\n          .debug(this._name).write(\", \").debug(this._offset).write(41/*')'*/);\n    }\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n\n  private static _utc?: TimeZone;\n  static utc(): TimeZone {\n    if (TimeZone._utc === void 0) {\n      TimeZone._utc = new TimeZone(\"UTC\", 0);\n    }\n    return TimeZone._utc;\n  }\n\n  private static _local?: TimeZone;\n  static local(): TimeZone {\n    if (TimeZone._local === void 0) {\n      TimeZone._local = TimeZone.forOffset(-new Date().getTimezoneOffset());\n    }\n    return TimeZone._local;\n  }\n\n  static forName(name: string): TimeZone | undefined {\n    switch (name) {\n      case \"UTC\": return TimeZone.utc();\n      default: return void 0;\n    }\n  }\n\n  static forOffset(offset: number): TimeZone {\n    switch (offset) {\n      case 0: return TimeZone.utc();\n      default: return new TimeZone(void 0, offset);\n    }\n  }\n\n  static from(name: string, offset: number): TimeZone {\n    if (name === \"UTC\" && offset === 0) {\n      return TimeZone.utc();\n    } else {\n      return new TimeZone(name, offset);\n    }\n  }\n\n  static fromAny(value: AnyTimeZone): TimeZone {\n    if (value instanceof TimeZone) {\n      return value;\n    } else if (typeof value === \"string\") {\n      const zone = TimeZone.forName(value);\n      if (zone !== void 0) {\n        return zone;\n      }\n    } else if (typeof value === \"number\") {\n      return TimeZone.forOffset(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromValue(value: Value): TimeZone | undefined {\n    const name = value.stringValue(void 0);\n    if (name !== void 0) {\n      return TimeZone.forName(name);\n    }\n    const offset = value.numberValue(void 0);\n    if (offset !== void 0) {\n      return TimeZone.forOffset(offset);\n    }\n    return void 0;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyTimeZone {\n    return value instanceof TimeZone\n        || typeof value === \"string\"\n        || typeof value === \"number\";\n  }\n\n  private static _form: Form<TimeZone, AnyTimeZone>;\n  static form(unit?: AnyTimeZone): Form<TimeZone, AnyTimeZone> {\n    if (unit !== void 0) {\n      unit = TimeZone.fromAny(unit);\n    }\n    if (unit !== TimeZone.utc()) {\n      return new TimeZone.Form(unit);\n    } else {\n      if (TimeZone._form === void 0) {\n        TimeZone._form = new TimeZone.Form(TimeZone.utc());\n      }\n      return TimeZone._form;\n    }\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Form: typeof TimeZoneForm; // defined by TimeZoneForm\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Num, Form} from \"@swim/structure\";\nimport {AnyTimeZone, TimeZone} from \"./TimeZone\";\n\n/** @hidden */\nexport class TimeZoneForm extends Form<TimeZone, AnyTimeZone> {\n  private readonly _unit: TimeZone | undefined;\n\n  constructor(unit?: TimeZone) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): TimeZone | undefined;\n  unit(unit: TimeZone | undefined): Form<TimeZone, AnyTimeZone>;\n  unit(unit?: TimeZone | undefined): TimeZone | undefined | Form<TimeZone, AnyTimeZone> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new TimeZoneForm(unit);\n    }\n  }\n\n  mold(zone: AnyTimeZone): Item {\n    zone = TimeZone.fromAny(zone);\n    const name = zone.name();\n    if (name !== void 0) {\n      return Text.from(name);\n    } else {\n      return Num.from(zone._offset);\n    }\n  }\n\n  cast(item: Item): TimeZone | undefined {\n    const value = item.toValue();\n    return TimeZone.fromValue(value);\n  }\n}\nTimeZone.Form = TimeZoneForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class DateTimeLocale {\n  readonly periods: ReadonlyArray<string>;\n  readonly weekdays: ReadonlyArray<string>;\n  readonly shortWeekdays: ReadonlyArray<string>;\n  readonly months: ReadonlyArray<string>;\n  readonly shortMonths: ReadonlyArray<string>;\n\n  constructor(periods: ReadonlyArray<string> = DateTimeLocale.Periods,\n              weekdays: ReadonlyArray<string> = DateTimeLocale.Weekdays,\n              shortWeekdays: ReadonlyArray<string> = DateTimeLocale.ShortWeekdays,\n              months: ReadonlyArray<string> = DateTimeLocale.Months,\n              shortMonths: ReadonlyArray<string> = DateTimeLocale.ShortMonths) {\n    this.periods = periods;\n    this.weekdays = weekdays;\n    this.shortWeekdays = shortWeekdays;\n    this.months = months;\n    this.shortMonths = shortMonths;\n  }\n\n  private static _standard?: DateTimeLocale;\n  static standard(): DateTimeLocale {\n    if (DateTimeLocale._standard === void 0) {\n      DateTimeLocale._standard = new DateTimeLocale();\n    }\n    return DateTimeLocale._standard;\n  }\n\n  private static readonly Periods: ReadonlyArray<string> = [\n    \"AM\",\n    \"PM\",\n  ];\n  private static readonly Weekdays: ReadonlyArray<string> = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  private static readonly ShortWeekdays: ReadonlyArray<string> = [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\",\n  ];\n  private static readonly Months: ReadonlyArray<string> = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  private static readonly ShortMonths: ReadonlyArray<string> = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3} from \"@swim/util\";\nimport {Display, Output} from \"@swim/codec\";\nimport {Item, Value, Form} from \"@swim/structure\";\nimport {AnyTimeZone, TimeZone} from \"./TimeZone\";\nimport {DateTimeParser} from \"./DateTimeParser\";\nimport {DateTimeForm} from \"./DateTimeForm\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\nexport type AnyDateTime = DateTime | DateTimeInit | Date | string | number;\n\nexport interface DateTimeInit {\n  year?: number;\n  month?: number;\n  day?: number;\n  hour?: number;\n  minute?: number;\n  second?: number;\n  millisecond?: number;\n  zone?: AnyTimeZone;\n}\n\nexport class DateTime implements Comparable<AnyDateTime>, HashCode, Display {\n  /** @hidden */\n  readonly _time: number;\n  /** @hidden */\n  readonly _zone: TimeZone;\n\n  constructor(time: number, zone: TimeZone = TimeZone.utc()) {\n    this._time = time;\n    this._zone = zone;\n  }\n\n  time(): number;\n  time(time: number): DateTime;\n  time(time?: number): number | DateTime {\n    if (time === void 0) {\n      return this._time;\n    } else {\n      return new DateTime(time, this._zone);\n    }\n  }\n\n  zone(): TimeZone;\n  zone(zone: TimeZone): DateTime;\n  zone(zone?: TimeZone): TimeZone | DateTime {\n    if (zone === void 0) {\n      return this._zone;\n    } else {\n      return new DateTime(this._time, zone);\n    }\n  }\n\n  year(): number;\n  year(year: number, month?: number, day?: number, hour?: number, minute?: number,\n       second?: number, millisecond?: number): DateTime;\n  year(year?: number, month?: number, day?: number, hour?: number, minute?: number,\n       second?: number, millisecond?: number): number | DateTime {\n    const date = this.toUTCLocalDate();\n    if (year === void 0) {\n      return date.getUTCFullYear();\n    } else {\n      date.setUTCFullYear(year);\n      if (month !== void 0) {\n        date.setUTCMonth(month);\n      }\n      if (day !== void 0) {\n        date.setUTCDate(day);\n      }\n      if (hour !== void 0) {\n        date.setUTCHours(hour);\n      }\n      if (minute !== void 0) {\n        date.setUTCMinutes(minute);\n      }\n      if (second !== void 0) {\n        date.setUTCSeconds(second);\n      }\n      if (millisecond !== void 0) {\n        date.setUTCMilliseconds(millisecond);\n      }\n      return DateTime.fromUTCLocalDate(date, this._zone);\n    }\n  }\n\n  month(): number;\n  month(month: number, day?: number, hour?: number, minute?: number,\n        second?: number, millisecond?: number): DateTime;\n  month(month?: number, day?: number, hour?: number, minute?: number,\n        second?: number, millisecond?: number): number | DateTime {\n    const date = this.toUTCLocalDate();\n    if (month === void 0) {\n      return date.getUTCMonth();\n    } else {\n      date.setUTCMonth(month);\n      if (day !== void 0) {\n        date.setUTCDate(day);\n      }\n      if (hour !== void 0) {\n        date.setUTCHours(hour);\n      }\n      if (minute !== void 0) {\n        date.setUTCMinutes(minute);\n      }\n      if (second !== void 0) {\n        date.setUTCSeconds(second);\n      }\n      if (millisecond !== void 0) {\n        date.setUTCMilliseconds(millisecond);\n      }\n      return DateTime.fromUTCLocalDate(date, this._zone);\n    }\n  }\n\n  day(): number;\n  day(day: number, hour?: number, minute?: number, second?: number,\n      millisecond?: number): DateTime;\n  day(day?: number, hour?: number, minute?: number, second?: number,\n      millisecond?: number): number | DateTime {\n    const date = this.toUTCLocalDate();\n    if (day === void 0) {\n      return date.getUTCDate();\n    } else {\n      date.setUTCDate(day);\n      if (hour !== void 0) {\n        date.setUTCHours(hour);\n      }\n      if (minute !== void 0) {\n        date.setUTCMinutes(minute);\n      }\n      if (second !== void 0) {\n        date.setUTCSeconds(second);\n      }\n      if (millisecond !== void 0) {\n        date.setUTCMilliseconds(millisecond);\n      }\n      return DateTime.fromUTCLocalDate(date, this._zone);\n    }\n  }\n\n  hour(): number;\n  hour(hour: number, minute?: number, second?: number, millisecond?: number): DateTime;\n  hour(hour?: number, minute?: number, second?: number, millisecond?: number): number | DateTime {\n    const date = this.toUTCLocalDate();\n    if (hour === void 0) {\n      return date.getUTCHours();\n    } else {\n      date.setUTCHours(hour);\n      if (minute !== void 0) {\n        date.setUTCMinutes(minute);\n      }\n      if (second !== void 0) {\n        date.setUTCSeconds(second);\n      }\n      if (millisecond !== void 0) {\n        date.setUTCMilliseconds(millisecond);\n      }\n      return DateTime.fromUTCLocalDate(date, this._zone);\n    }\n  }\n\n  minute(): number;\n  minute(minute: number, second?: number, millisecond?: number): DateTime;\n  minute(minute?: number, second?: number, millisecond?: number): number | DateTime {\n    const date = this.toUTCLocalDate();\n    if (minute === void 0) {\n      return date.getUTCMinutes();\n    } else {\n      date.setUTCMinutes(minute);\n      if (second !== void 0) {\n        date.setUTCSeconds(second);\n      }\n      if (millisecond !== void 0) {\n        date.setUTCMilliseconds(millisecond);\n      }\n      return DateTime.fromUTCLocalDate(date, this._zone);\n    }\n  }\n\n  second(): number;\n  second(second: number, millisecond?: number): DateTime;\n  second(second?: number, millisecond?: number): number | DateTime {\n    const date = this.toUTCLocalDate();\n    if (second === void 0) {\n      return date.getUTCSeconds();\n    } else {\n      date.setUTCSeconds(second);\n      if (millisecond !== void 0) {\n        date.setUTCMilliseconds(millisecond);\n      }\n      return DateTime.fromUTCLocalDate(date, this._zone);\n    }\n  }\n\n  millisecond(): number;\n  millisecond(millisecond: number): DateTime;\n  millisecond(millisecond?: number): number | DateTime {\n    const date = this.toUTCLocalDate();\n    if (millisecond === void 0) {\n      return date.getUTCMilliseconds();\n    } else {\n      date.setUTCMilliseconds(millisecond);\n      return DateTime.fromUTCLocalDate(date, this._zone);\n    }\n  }\n\n  weekday(): number {\n    return this.toUTCLocalDate().getUTCDay();\n  }\n\n  /**\n   * Returns this date time shifted by the time zone offset.\n   * @hidden\n   */\n  toUTCLocalDate(): Date {\n    return new Date(this._time + 60000 * this._zone._offset);\n  }\n\n  toDate(): Date {\n    return new Date(this._time);\n  }\n\n  valueOf(): number {\n    return this._time;\n  }\n\n  compareTo(that: AnyDateTime): number {\n    const x = this._time;\n    const y = DateTime.time(that);\n    return x < y ? -1 : x > y ? 1 : x === y ? 0 : NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DateTime) {\n      return this._time === that._time && this._zone.equals(that._zone);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (DateTime._hashSeed === void 0) {\n      DateTime._hashSeed = Murmur3.seed(DateTime);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(DateTime._hashSeed,\n        Murmur3.hash(this._time)), this._zone.hashCode()));\n  }\n\n  display(output: Output, format: DateTimeFormat = DateTime.Format.iso8601()): void {\n    format.writeDate(this, output);\n  }\n\n  toString(format: DateTimeFormat = DateTime.Format.iso8601()): string {\n    return format.format(this);\n  }\n\n  private static _hashSeed?: number;\n\n  static current(zone?: AnyTimeZone): DateTime {\n    zone = zone !== void 0 ? TimeZone.fromAny(zone) : TimeZone.local();\n    return new DateTime(Date.now(), zone);\n  }\n\n  /**\n   * Returns this date time shifted back by the time zone offset.\n   * @hidden\n   */\n  static fromUTCLocalDate(date: Date, zone: TimeZone): DateTime {\n    return new DateTime(date.getTime() - 60000 * zone._offset, zone);\n  }\n\n  static fromInit(init: DateTimeInit, zone?: AnyTimeZone): DateTime {\n    let time = Date.UTC(init.year !== void 0 ? init.year : 1970,\n                        init.month !== void 0 ? init.month : 0,\n                        init.day !== void 0 ? init.day : 1,\n                        init.hour !== void 0 ? init.hour : 0,\n                        init.minute !== void 0 ? init.minute : 0,\n                        init.second !== void 0 ? init.second : 0,\n                        init.millisecond !== void 0 ? init.millisecond : 0);\n    if (init.zone !== void 0) {\n      zone = TimeZone.fromAny(init.zone);\n    }\n    if (zone !== void 0) {\n      zone = TimeZone.fromAny(zone);\n      time += 60000 * zone._offset;\n    } else {\n      zone = TimeZone.utc();\n    }\n    return new DateTime(time, zone);\n  }\n\n  static fromAny(date: AnyDateTime, zone?: AnyTimeZone): DateTime {\n    if (date instanceof DateTime) {\n      return date;\n    } else if (date instanceof Date) {\n      zone = zone !== void 0 ? TimeZone.fromAny(zone) : TimeZone.utc();\n      return new DateTime(date.getTime(), zone);\n    } else if (typeof date === \"number\") {\n      zone = zone !== void 0 ? TimeZone.fromAny(zone) : TimeZone.utc();\n      return new DateTime(date, zone);\n    } else if (typeof date === \"string\") {\n      return DateTime.parse(date, zone);\n    } else if (DateTime.isInit(date)) {\n      return DateTime.fromInit(date, zone);\n    }\n    throw new TypeError(\"\" + date);\n  }\n\n  static fromValue(value: Value): DateTime | undefined {\n    let positional: boolean;\n    const header = value.header(\"date\");\n    if (header.isDefined()) {\n      value = header;\n      positional = true;\n    } else {\n      positional = false;\n    }\n    const init = {} as DateTimeInit;\n    value.forEach(function (item: Item, index: number) {\n      const key = item.key.stringValue(void 0);\n      if (key !== void 0) {\n        if (key === \"year\") {\n          init.year = item.toValue().numberValue(init.year);\n        } else if (key === \"month\") {\n          init.month = item.toValue().numberValue(init.month);\n        } else if (key === \"day\") {\n          init.day = item.toValue().numberValue(init.day);\n        } else if (key === \"hour\") {\n          init.hour = item.toValue().numberValue(init.hour);\n        } else if (key === \"minute\") {\n          init.minute = item.toValue().numberValue(init.minute);\n        } else if (key === \"second\") {\n          init.second = item.toValue().numberValue(init.second);\n        } else if (key === \"millisecond\") {\n          init.millisecond = item.toValue().numberValue(init.millisecond);\n        } else if (key === \"zone\") {\n          init.zone = item.toValue().cast(TimeZone.form(), init.zone);\n        }\n      } else if (item instanceof Value && positional) {\n        if (index === 0) {\n          init.year = item.numberValue(init.year);\n        } else if (index === 1) {\n          init.month = item.numberValue(init.month);\n        } else if (index === 2) {\n          init.day = item.numberValue(init.day);\n        } else if (index === 3) {\n          init.hour = item.numberValue(init.hour);\n        } else if (index === 4) {\n          init.minute = item.numberValue(init.minute);\n        } else if (index === 5) {\n          init.second = item.numberValue(init.second);\n        } else if (index === 6) {\n          init.millisecond = item.numberValue(init.millisecond);\n        } else if (index === 7) {\n          init.zone = item.cast(TimeZone.form(), init.zone);\n        }\n      }\n    });\n    if (DateTime.isInit(init)) {\n      return DateTime.fromInit(init);\n    }\n    return void 0;\n  }\n\n  static parse(date: string, zone?: AnyTimeZone): DateTime {\n    return DateTime.Format.iso8601().parse(date);\n  }\n\n  static time(date: AnyDateTime): number {\n    if (date instanceof DateTime) {\n      return date._time;\n    } else if (date instanceof Date) {\n      return date.getTime();\n    } else if (typeof date === \"number\") {\n      return date;\n    } else if (typeof date === \"string\") {\n      return DateTime.parse(date).time();\n    } else if (DateTime.isInit(date)) {\n      return DateTime.fromInit(date).time();\n    }\n    throw new TypeError(\"\" + date);\n  }\n\n  static zone(date: AnyDateTime): TimeZone {\n    if (date instanceof DateTime) {\n      return date._zone;\n    } else {\n      return TimeZone.utc();\n    }\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is DateTimeInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as DateTimeInit;\n      return (typeof init.year === \"undefined\" || typeof init.year === \"number\")\n          && (typeof init.month === \"undefined\" || typeof init.month === \"number\")\n          && (typeof init.day === \"undefined\" || typeof init.day === \"number\")\n          && (typeof init.hour === \"undefined\" || typeof init.hour === \"number\")\n          && (typeof init.minute === \"undefined\" || typeof init.minute === \"number\")\n          && (typeof init.second === \"undefined\" || typeof init.second === \"number\")\n          && (typeof init.millisecond === \"undefined\" || typeof init.millisecond === \"number\")\n          && (typeof init.zone === \"undefined\" || TimeZone.isAny(init.zone))\n          && (typeof init.year === \"number\"\n           || typeof init.month === \"number\"\n           || typeof init.day === \"number\"\n           || typeof init.hour === \"number\"\n           || typeof init.minute === \"number\"\n           || typeof init.second === \"number\"\n           || typeof init.millisecond === \"number\");\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyDateTime {\n    return value instanceof DateTime\n        || value instanceof Date\n        || typeof value === \"number\"\n        || typeof value === \"string\"\n        || DateTime.isInit(value);\n  }\n\n  private static _form: Form<DateTime, AnyDateTime>;\n  static form(unit?: AnyDateTime): Form<DateTime, AnyDateTime> {\n    if (unit !== void 0) {\n      unit = DateTime.fromAny(unit);\n    }\n    if (unit !== void 0) {\n      return new DateTime.Form(unit);\n    } else {\n      if (DateTime._form === void 0) {\n        DateTime._form = new DateTime.Form();\n      }\n      return DateTime._form;\n    }\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Parser: typeof DateTimeParser; // defined by DateTimeParser\n  /** @hidden */\n  static Form: typeof DateTimeForm; // defined by DateTimeForm\n  /** @hidden */\n  static Format: typeof DateTimeFormat; // defined by DateTimeFormat\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"./DateTime\";\n\n/** @hidden */\nexport class DateTimeParser extends Parser<DateTime> {\n  private readonly dateParser: Parser<DateTimeInit>;\n\n  constructor(dateParser: Parser<DateTimeInit>) {\n    super();\n    this.dateParser = dateParser;\n  }\n\n  feed(input: Input): Parser<DateTime> {\n    return DateTimeParser.parse(input, this.dateParser);\n  }\n\n  static parse(input: Input, dateParser: Parser<DateTimeInit>): Parser<DateTime> {\n    dateParser = dateParser.feed(input);\n    if (dateParser.isDone()) {\n      return Parser.done(DateTime.fromAny(dateParser.bind()));\n    } else if (dateParser.isError()) {\n      return dateParser.asError();\n    }\n    return new DateTimeParser(dateParser);\n  }\n}\nDateTime.Parser = DateTimeParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyTimeZone, TimeZone} from \"./TimeZone\";\nimport {AnyDateTime, DateTime} from \"./DateTime\";\nimport {Interpolator} from \"@swim/interpolate\";\n\nexport class DateTimeInterpolator extends Interpolator<DateTime, AnyDateTime> {\n  /** @hidden */\n  readonly t0: number;\n  /** @hidden */\n  readonly dt: number;\n  /** @hidden */\n  readonly zone: TimeZone;\n\n  constructor(t0: number, t1: number, zone: TimeZone) {\n    super();\n    this.t0 = t0;\n    this.dt = t1 - this.t0;\n    this.zone = zone;\n  }\n\n  interpolate(u: number): DateTime {\n    return new DateTime(this.t0 + this.dt * u, this.zone);\n  }\n\n  deinterpolate(t: AnyDateTime): number {\n    t = DateTime.time(t);\n    return this.dt !== 0 ? (t - this.t0) / this.dt : this.dt;\n  }\n\n  range(): ReadonlyArray<DateTime>;\n  range(ts: ReadonlyArray<AnyDateTime>): DateTimeInterpolator;\n  range(t0: AnyDateTime, t1: AnyDateTime): DateTimeInterpolator;\n  range(t0?: ReadonlyArray<AnyDateTime> | AnyDateTime, t1?: AnyDateTime): ReadonlyArray<DateTime> | DateTimeInterpolator {\n    if (t0 === void 0) {\n      return [new DateTime(this.t0, this.zone), new DateTime(this.t0 + this.dt, this.zone)];\n    } else if (t1 === void 0) {\n      t0 = t0 as ReadonlyArray<AnyDateTime>;\n      return DateTimeInterpolator.between(t0[0], t0[1], this.zone);\n    } else {\n      return DateTimeInterpolator.between(t0 as AnyDateTime, t1, this.zone);\n    }\n  }\n\n  equals(that: any): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DateTimeInterpolator) {\n      return this.t0 === that.t0 && this.dt === that.dt;\n    }\n    return false;\n  }\n\n  static between(t0: AnyDateTime, t1: AnyDateTime, zone?: AnyTimeZone): DateTimeInterpolator;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown, zone?: AnyTimeZone): Interpolator<unknown> {\n    if (DateTime.isAny(a) && DateTime.isAny(b)) {\n      if (zone === void 0) {\n        if (a instanceof DateTime) {\n          zone = a.zone();\n        } else if (b instanceof DateTime) {\n          zone = b.zone();\n        } else {\n          zone = TimeZone.utc();\n        }\n      } else {\n        zone = TimeZone.fromAny(zone);\n      }\n      return new DateTimeInterpolator(DateTime.time(a), DateTime.time(b), zone);\n    }\n    return Interpolator.between(a, b);\n  }\n\n  static tryBetween(a: unknown, b: unknown): DateTimeInterpolator | null {\n    if (a instanceof DateTime && b instanceof DateTime) {\n      return new DateTimeInterpolator(a.time(), b.time(), a.zone());\n    }\n    return null;\n  }\n\n  static tryBetweenAny(a: unknown, b: unknown): DateTimeInterpolator | null {\n    if ((a instanceof DateTime || a instanceof Date || DateTime.isInit(a)) &&\n        (b instanceof DateTime || b instanceof Date || DateTime.isInit(b))) {\n      let zone: TimeZone;\n      if (a instanceof DateTime) {\n        zone = a.zone();\n      } else if (b instanceof DateTime) {\n        zone = b.zone();\n      } else {\n        zone = TimeZone.utc();\n      }\n      return new DateTimeInterpolator(DateTime.time(a), DateTime.time(b), zone);\n    }\n    return null;\n  }\n}\nInterpolator.registerFactory(DateTimeInterpolator);\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"./DateTime\";\nimport {Item, Value, Text, Form} from \"@swim/structure\";\n\n/** @hidden */\nexport class DateTimeForm extends Form<DateTime, AnyDateTime> {\n  private readonly _unit: DateTime | undefined;\n\n  constructor(unit?: DateTime) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): DateTime | undefined;\n  unit(unit: DateTime | undefined): Form<DateTime, AnyDateTime>;\n  unit(unit?: DateTime | undefined): DateTime | undefined | Form<DateTime, AnyDateTime> {\n    if (arguments.length === 0) {\n      return this._unit !== void 0 ? this._unit : new DateTime(0);\n    } else {\n      return new DateTimeForm(unit);\n    }\n  }\n\n  mold(date: AnyDateTime): Item {\n    date = DateTime.fromAny(date);\n    return Text.from(date.toString());\n  }\n\n  cast(value: Value): DateTime | undefined {\n    let date: DateTime | undefined;\n    try {\n      date = DateTime.fromValue(value);\n      if (date === void 0) {\n        const millis = value.numberValue(void 0);\n        if (millis !== void 0) {\n          date = new DateTime(millis);\n        } else {\n          const string = value.stringValue(void 0);\n          if (string !== void 0) {\n            date = DateTime.parse(string);\n          }\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return date;\n  }\n}\nDateTime.Form = DateTimeForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\nexport interface DateTimeSpecifiers {\n  [symbol: string]: DateTimeFormat | undefined;\n  Y: DateTimeFormat;\n  m: DateTimeFormat;\n  B: DateTimeFormat;\n  b: DateTimeFormat;\n  d: DateTimeFormat;\n  A: DateTimeFormat;\n  a: DateTimeFormat;\n  H: DateTimeFormat;\n  I: DateTimeFormat;\n  p: DateTimeFormat;\n  M: DateTimeFormat;\n  S: DateTimeFormat;\n  L: DateTimeFormat;\n}\n\nexport const DateTimeSpecifiers = {\n  /** @hidden */\n  _standard: void 0 as DateTimeSpecifiers | undefined,\n  standard(locale: DateTimeLocale = DateTimeLocale.standard()): DateTimeSpecifiers {\n    let specifiers: DateTimeSpecifiers | undefined;\n    if (locale === DateTimeLocale.standard()) {\n      specifiers = DateTimeSpecifiers._standard;\n    }\n    if (specifiers === void 0) {\n      specifiers = {\n        Y: DateTimeFormat.year(),\n        m: DateTimeFormat.monthOfYear(),\n        B: DateTimeFormat.month(locale),\n        b: DateTimeFormat.shortMonth(locale),\n        d: DateTimeFormat.dayOfMonth(),\n        A: DateTimeFormat.weekday(locale),\n        a: DateTimeFormat.shortWeekday(locale),\n        H: DateTimeFormat.hour24(),\n        I: DateTimeFormat.hour12(),\n        p: DateTimeFormat.period(locale),\n        M: DateTimeFormat.minute(),\n        S: DateTimeFormat.second(),\n        L: DateTimeFormat.millisecond(),\n      };\n      if (locale === DateTimeLocale.standard()) {\n        DateTimeSpecifiers._standard = specifiers;\n      }\n    }\n    return specifiers;\n  },\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {DateTimeLocale} from \"./DateTimeLocale\";\nimport {AnyDateTime, DateTimeInit, DateTime} from \"./DateTime\";\nimport {DateTimeSpecifiers} from \"./DateTimeSpecifiers\";\nimport {YearFormat} from \"./format/YearFormat\";\nimport {MonthOfYearFormat} from \"./format/MonthOfYearFormat\";\nimport {MonthFormat} from \"./format/MonthFormat\";\nimport {ShortMonthFormat} from \"./format/ShortMonthFormat\";\nimport {DayOfMonthFormat} from \"./format/DayOfMonthFormat\";\nimport {WeekdayFormat} from \"./format/WeekdayFormat\";\nimport {ShortWeekdayFormat} from \"./format/ShortWeekdayFormat\";\nimport {Hour24Format} from \"./format/Hour24Format\";\nimport {Hour12Format} from \"./format/Hour12Format\";\nimport {PeriodFormat} from \"./format/PeriodFormat\";\nimport {MinuteFormat} from \"./format/MinuteFormat\";\nimport {SecondFormat} from \"./format/SecondFormat\";\nimport {MillisecondFormat} from \"./format/MillisecondFormat\";\nimport {PatternFormat} from \"./format/PatternFormat\";\nimport {YearParser} from \"./format/YearParser\";\nimport {MonthOfYearParser} from \"./format/MonthOfYearParser\";\nimport {MonthParser} from \"./format/MonthParser\";\nimport {ShortMonthParser} from \"./format/ShortMonthParser\";\nimport {DayOfMonthParser} from \"./format/DayOfMonthParser\";\nimport {WeekdayParser} from \"./format/WeekdayParser\";\nimport {ShortWeekdayParser} from \"./format/ShortWeekdayParser\";\nimport {Hour24Parser} from \"./format/Hour24Parser\";\nimport {Hour12Parser} from \"./format/Hour12Parser\";\nimport {PeriodParser} from \"./format/PeriodParser\";\nimport {MinuteParser} from \"./format/MinuteParser\";\nimport {SecondParser} from \"./format/SecondParser\";\nimport {MillisecondParser} from \"./format/MillisecondParser\";\nimport {PatternParser} from \"./format/PatternParser\";\n\n/** @hidden */\nexport interface DateNumberFactory {\n  bind(value: number, date: DateTimeInit, input: Input): Parser<DateTimeInit>;\n  cont(date: DateTimeInit, value: number, step: number, input: Input): Parser<DateTimeInit>;\n}\n\n/** @hidden */\nexport interface DateStringFactory {\n  bind(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit>;\n  cont(locale: DateTimeLocale, date: DateTimeInit, output: Output, input: Input): Parser<DateTimeInit>;\n}\n\nexport abstract class DateTimeFormat {\n  format(date: AnyDateTime): string {\n    date = DateTime.fromAny(date);\n    const output = Unicode.stringOutput();\n    this.writeDate(date, output);\n    return output.bind();\n  }\n\n  abstract writeDate(date: DateTime, output: Output): void;\n\n  parse(input: Input | string): DateTime {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    while (input.isCont() && Unicode.isSpace(input.head())) {\n      input = input.step();\n    }\n    let parser = this.parseDate(input, {});\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  /** @hidden */\n  parseDate(input: Input, date: DateTimeInit): Parser<DateTime> {\n    const dateParser = this.parseDateTime(input, date);\n    if (dateParser.isDone()) {\n      return Parser.done(DateTime.fromAny(dateParser.bind()));\n    } else if (dateParser.isError()) {\n      return dateParser.asError();\n    }\n    return new DateTime.Parser(dateParser);\n  }\n\n  /** @hidden */\n  abstract parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit>;\n\n  private static _year?: YearFormat;\n  static year(): YearFormat {\n    if (DateTimeFormat._year === void 0) {\n      DateTimeFormat._year = new DateTimeFormat.Year();\n    }\n    return DateTimeFormat._year;\n  }\n\n  private static _monthOfYear?: MonthOfYearFormat;\n  static monthOfYear(): MonthOfYearFormat {\n    if (DateTimeFormat._monthOfYear === void 0) {\n      DateTimeFormat._monthOfYear = new DateTimeFormat.MonthOfYear();\n    }\n    return DateTimeFormat._monthOfYear;\n  }\n\n  private static _month?: MonthFormat;\n  static month(locale: DateTimeLocale = DateTimeLocale.standard()): MonthFormat {\n    if (locale !== DateTimeLocale.standard()) {\n      return new DateTimeFormat.Month(locale);\n    } else {\n      if (DateTimeFormat._month === void 0) {\n        DateTimeFormat._month = new DateTimeFormat.Month(locale);\n      }\n      return DateTimeFormat._month;\n    }\n  }\n\n  private static _shortMonth?: ShortMonthFormat;\n  static shortMonth(locale: DateTimeLocale = DateTimeLocale.standard()): ShortMonthFormat {\n    if (locale !== DateTimeLocale.standard()) {\n      return new DateTimeFormat.ShortMonth(locale);\n    } else {\n      if (DateTimeFormat._shortMonth === void 0) {\n        DateTimeFormat._shortMonth = new DateTimeFormat.ShortMonth(locale);\n      }\n      return DateTimeFormat._shortMonth;\n    }\n  }\n\n  private static _dayOfMonth?: DayOfMonthFormat;\n  static dayOfMonth(): DayOfMonthFormat {\n    if (DateTimeFormat._dayOfMonth === void 0) {\n      DateTimeFormat._dayOfMonth = new DateTimeFormat.DayOfMonth();\n    }\n    return DateTimeFormat._dayOfMonth;\n  }\n\n  private static _weekday?: WeekdayFormat;\n  static weekday(locale: DateTimeLocale = DateTimeLocale.standard()): WeekdayFormat {\n    if (locale !== DateTimeLocale.standard()) {\n      return new DateTimeFormat.Weekday(locale);\n    } else {\n      if (DateTimeFormat._weekday === void 0) {\n        DateTimeFormat._weekday = new DateTimeFormat.Weekday(locale);\n      }\n      return DateTimeFormat._weekday;\n    }\n  }\n\n  private static _shortWeekday?: ShortWeekdayFormat;\n  static shortWeekday(locale: DateTimeLocale = DateTimeLocale.standard()): ShortWeekdayFormat {\n    if (locale !== DateTimeLocale.standard()) {\n      return new DateTimeFormat.ShortWeekday(locale);\n    } else {\n      if (DateTimeFormat._shortWeekday === void 0) {\n        DateTimeFormat._shortWeekday = new DateTimeFormat.ShortWeekday(locale);\n      }\n      return DateTimeFormat._shortWeekday;\n    }\n  }\n\n  private static _hour24?: Hour24Format;\n  static hour24(): Hour24Format {\n    if (DateTimeFormat._hour24 === void 0) {\n      DateTimeFormat._hour24 = new DateTimeFormat.Hour24();\n    }\n    return DateTimeFormat._hour24;\n  }\n\n  private static _hour12?: Hour12Format;\n  static hour12(): Hour12Format {\n    if (DateTimeFormat._hour12 === void 0) {\n      DateTimeFormat._hour12 = new DateTimeFormat.Hour12();\n    }\n    return DateTimeFormat._hour12;\n  }\n\n  private static _period?: PeriodFormat;\n  static period(locale: DateTimeLocale = DateTimeLocale.standard()): PeriodFormat {\n    if (locale !== DateTimeLocale.standard()) {\n      return new DateTimeFormat.Period(locale);\n    } else {\n      if (DateTimeFormat._period === void 0) {\n        DateTimeFormat._period = new DateTimeFormat.Period(locale);\n      }\n      return DateTimeFormat._period;\n    }\n  }\n\n  private static _minute?: MinuteFormat;\n  static minute(): MinuteFormat {\n    if (DateTimeFormat._minute === void 0) {\n      DateTimeFormat._minute = new DateTimeFormat.Minute();\n    }\n    return DateTimeFormat._minute;\n  }\n\n  private static _second?: SecondFormat;\n  static second(): SecondFormat {\n    if (DateTimeFormat._second === void 0) {\n      DateTimeFormat._second = new DateTimeFormat.Second();\n    }\n    return DateTimeFormat._second;\n  }\n\n  private static _millisecond?: YearFormat;\n  static millisecond(): YearFormat {\n    if (DateTimeFormat._millisecond === void 0) {\n      DateTimeFormat._millisecond = new DateTimeFormat.Millisecond();\n    }\n    return DateTimeFormat._millisecond;\n  }\n\n  static pattern(pattern: string, specifiers?: DateTimeSpecifiers | DateTimeLocale): PatternFormat {\n    if (specifiers === void 0 || specifiers instanceof DateTimeLocale) {\n      specifiers = DateTimeSpecifiers.standard(specifiers);\n    }\n    return new DateTimeFormat.Pattern(pattern, specifiers);\n  }\n\n  private static _iso8601?: DateTimeFormat;\n  static iso8601(): DateTimeFormat {\n    if (DateTimeFormat._iso8601 === void 0) {\n      DateTimeFormat._iso8601 = new DateTimeFormat.Pattern(\"%Y-%m-%dT%H:%M:%S.%LZ\", DateTimeSpecifiers.standard());\n    }\n    return DateTimeFormat._iso8601;\n  }\n\n  /** @hidden */\n  static parseDateNumber(input: Input, factory: DateNumberFactory, desc: string,\n                         minDigits: number, maxDigits: number, date: DateTimeInit | undefined,\n                         value: number = 0, step: number = 0): Parser<DateTimeInit> {\n    let c = 0;\n    while (step < maxDigits) {\n      if (input.isCont() && (c = input.head(), Base10.isDigit(c))) {\n        input.step();\n        value = 10 * value + Base10.decodeDigit(c);\n        step += 1;\n        continue;\n      }\n      break;\n    }\n    if (!input.isEmpty()) {\n      if (step >= minDigits) {\n        return factory.bind(value, date || {}, input);\n      } else {\n        return Parser.error(Diagnostic.expected(desc, input));\n      }\n    }\n    return factory.cont(date !== void 0 ? date : {}, value, step, input);\n  }\n\n  /** @hidden */\n  static parseDateString(input: Input, factory: DateStringFactory, locale: DateTimeLocale,\n                         date?: DateTimeInit, output?: Output<string>): Parser<DateTimeInit> {\n    let c = 0;\n    output = output || Unicode.stringOutput();\n    do {\n      if (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input.step();\n        output.write(c);\n        continue;\n      } else if (!input.isEmpty()) {\n        return factory.bind(locale, output.bind(), date || {}, input);\n      }\n      break;\n    } while (true);\n    return factory.cont(locale, date || {}, output, input);\n  }\n\n  /** @hidden */\n  static writeDateNumber2(value: number, output: Output): void {\n    const c1 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c0 = 48/*'0'*/ + value % 10;\n    output = output.write(c0).write(c1);\n  }\n\n  /** @hidden */\n  static writeDateNumber3(value: number, output: Output): void {\n    const c2 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c1 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c0 = 48/*'0'*/ + value % 10;\n    output = output.write(c0).write(c1).write(c2);\n  }\n\n  /** @hidden */\n  static writeDateNumber4(value: number, output: Output): void {\n    const c3 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c2 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c1 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c0 = 48/*'0'*/ + value % 10;\n    output = output.write(c0).write(c1).write(c2).write(c3);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Year: typeof YearFormat; // defined by YearFormat\n  /** @hidden */\n  static MonthOfYear: typeof MonthOfYearFormat; // defined by MonthOfYearFormat\n  /** @hidden */\n  static Month: typeof MonthFormat; // defined by MonthFormat\n  /** @hidden */\n  static ShortMonth: typeof ShortMonthFormat; // defined by ShortMonthFormat\n  /** @hidden */\n  static DayOfMonth: typeof DayOfMonthFormat; // defined by DayOfMonthFormat\n  /** @hidden */\n  static Weekday: typeof WeekdayFormat; // defined by WeekdayFormat\n  /** @hidden */\n  static ShortWeekday: typeof ShortWeekdayFormat; // defined by ShortWeekdayFormat\n  /** @hidden */\n  static Hour24: typeof Hour24Format; // defined by Hour24Format\n  /** @hidden */\n  static Hour12: typeof Hour12Format; // defined by Hour12Format\n  /** @hidden */\n  static Period: typeof PeriodFormat; // defined by PeriodFormat\n  /** @hidden */\n  static Minute: typeof MinuteFormat; // defined by MinuteFormat\n  /** @hidden */\n  static Second: typeof SecondFormat; // defined by SecondFormat\n  /** @hidden */\n  static Millisecond: typeof MillisecondFormat; // defined by MillisecondFormat\n  /** @hidden */\n  static Pattern: typeof PatternFormat; // defined by PatternFormat\n  /** @hidden */\n  static YearParser: typeof YearParser; // defined by YearParser\n  /** @hidden */\n  static MonthOfYearParser: typeof MonthOfYearParser; // defined by MonthOfYearParser\n  /** @hidden */\n  static MonthParser: typeof MonthParser; // defined by MonthParser\n  /** @hidden */\n  static ShortMonthParser: typeof ShortMonthParser; // defined by ShortMonthParser\n  /** @hidden */\n  static DayOfMonthParser: typeof DayOfMonthParser; // defined by DayOfMonthParser\n  /** @hidden */\n  static WeekdayParser: typeof WeekdayParser; // defined by WeekdayParser\n  /** @hidden */\n  static ShortWeekdayParser: typeof ShortWeekdayParser; // defined by ShortWeekdayParser\n  /** @hidden */\n  static Hour24Parser: typeof Hour24Parser; // defined by Hour24Parser\n  /** @hidden */\n  static Hour12Parser: typeof Hour12Parser; // defined by Hour12Parser\n  /** @hidden */\n  static PeriodParser: typeof PeriodParser; // defined by PeriodParser\n  /** @hidden */\n  static MinuteParser: typeof MinuteParser; // defined by MinuteParser\n  /** @hidden */\n  static SecondParser: typeof SecondParser; // defined by SecondParser\n  /** @hidden */\n  static MillisecondParser: typeof MillisecondParser; // defined by MillisecondParser\n  /** @hidden */\n  static PatternParser: typeof PatternParser; // defined by PatternParser\n}\nDateTime.Format = DateTimeFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class YearFormat extends DateTimeFormat {\n  writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber4(date.year(), output);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.YearParser.parse(input, date);\n  }\n}\nDateTimeFormat.Year = YearFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class MonthOfYearFormat extends DateTimeFormat {\n  writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.month() + 1, output);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.MonthOfYearParser.parse(input, date);\n  }\n}\nDateTimeFormat.MonthOfYear = MonthOfYearFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class MonthFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.months[date.month()]);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.MonthParser.parse(input, this.locale, date);\n  }\n}\nDateTimeFormat.Month = MonthFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class ShortMonthFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.shortMonths[date.month()]);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.ShortMonthParser.parse(input, this.locale, date);\n  }\n}\nDateTimeFormat.ShortMonth = ShortMonthFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class DayOfMonthFormat extends DateTimeFormat {\n  writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.day(), output);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.DayOfMonthParser.parse(input, date);\n  }\n}\nDateTimeFormat.DayOfMonth = DayOfMonthFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class WeekdayFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.weekdays[date.weekday()]);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.WeekdayParser.parse(input, this.locale, date);\n  }\n}\nDateTimeFormat.Weekday = WeekdayFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class ShortWeekdayFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.shortWeekdays[date.weekday()]);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.ShortWeekdayParser.parse(input, this.locale, date);\n  }\n}\nDateTimeFormat.ShortWeekday = ShortWeekdayFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class Hour24Format extends DateTimeFormat {\n  writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.hour(), output);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.Hour24Parser.parse(input, date);\n  }\n}\nDateTimeFormat.Hour24 = Hour24Format;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class Hour12Format extends DateTimeFormat {\n  writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.hour() % 12 || 12, output);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.Hour12Parser.parse(input, date);\n  }\n}\nDateTimeFormat.Hour12 = Hour12Format;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class PeriodFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.periods[+(date.hour() >= 12)]);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.PeriodParser.parse(input, this.locale, date);\n  }\n}\nDateTimeFormat.Period = PeriodFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class MinuteFormat extends DateTimeFormat {\n  writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.minute(), output);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.MinuteParser.parse(input, date);\n  }\n}\nDateTimeFormat.Minute = MinuteFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class SecondFormat extends DateTimeFormat {\n  writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.second(), output);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat. SecondParser.parse(input, date);\n  }\n}\nDateTimeFormat.Second = SecondFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class MillisecondFormat extends DateTimeFormat {\n  writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber3(date.millisecond(), output);\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.MillisecondParser.parse(input, date);\n  }\n}\nDateTimeFormat.Millisecond = MillisecondFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\nimport {DateTimeSpecifiers} from \"../DateTimeSpecifiers\";\n\n/** @hidden */\nexport class PatternFormat extends DateTimeFormat {\n  private readonly pattern: string;\n  private readonly specifiers: DateTimeSpecifiers;\n\n  constructor(pattern: string, specifiers: DateTimeSpecifiers) {\n    super();\n    this.pattern = pattern;\n    this.specifiers = specifiers;\n  }\n\n  writeDate(date: DateTime, output: Output): void {\n    const pattern = this.pattern;\n    const specifiers = this.specifiers;\n    let i = 0;\n    let j = 0;\n    const n = pattern.length;\n    while (j < n) {\n      if (pattern.charCodeAt(j) === 37/*'%'*/) {\n        if (i !== j) {\n          output.write(pattern.slice(i, j));\n        }\n        const s = pattern.charAt(j + 1);\n        const f = specifiers[s];\n        if (f !== void 0) {\n          f.writeDate(date, output);\n        }\n        j += 2;\n        i = j;\n      } else {\n        j += 1;\n      }\n    }\n    if (i !== j) {\n      output.write(pattern.slice(i, j));\n    }\n  }\n\n  parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DateTimeFormat.PatternParser.parse(input, this.pattern, this.specifiers, date);\n  }\n}\nDateTimeFormat.Pattern = PatternFormat;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class YearParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly year: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, year?: number, step?: number) {\n    super();\n    this.date = date;\n    this.year = year;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return YearParser.parse(input, this.date, this.year, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, year?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, YearParser, \"full year\", 4, 4, date, year, step);\n  }\n\n  static bind(year: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.year = year;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, year: number, step: number): Parser<DateTimeInit> {\n    return new YearParser(date, year, step);\n  }\n}\nDateTimeFormat.YearParser = YearParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class MonthOfYearParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly month: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, month?: number, step?: number) {\n    super();\n    this.date = date;\n    this.month = month;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return MonthOfYearParser.parse(input, this.date, this.month, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, month?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, MonthOfYearParser, \"month number\", 2, 2, date, month, step);\n  }\n\n  static bind(month: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.month = month - 1;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, month: number, step: number): Parser<DateTimeInit> {\n    return new MonthOfYearParser(date, month, step);\n  }\n}\nDateTimeFormat.MonthOfYearParser = MonthOfYearParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class MonthParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return MonthParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, MonthParser, locale, date, output);\n  }\n\n  static bind(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const month = locale.months.indexOf(value);\n    if (month >= 0) {\n      date.month = month;\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected month, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new MonthParser(locale, date, output);\n  }\n}\nDateTimeFormat.MonthParser = MonthParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class ShortMonthParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return ShortMonthParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, ShortMonthParser, locale, date, output);\n  }\n\n  static bind(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const month = locale.shortMonths.indexOf(value);\n    if (month >= 0) {\n      date.month = month;\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected short month, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new ShortMonthParser(locale, date, output);\n  }\n}\nDateTimeFormat.ShortMonthParser = ShortMonthParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class DayOfMonthParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly day: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, day?: number, step?: number) {\n    super();\n    this.date = date;\n    this.day = day;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return DayOfMonthParser.parse(input, this.date, this.day, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, day?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, DayOfMonthParser, \"day of month\", 2, 2, date, day, step);\n  }\n\n  static bind(day: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.day = day;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, month: number, step: number): Parser<DateTimeInit> {\n    return new DayOfMonthParser(date, month, step);\n  }\n}\nDateTimeFormat.DayOfMonthParser = DayOfMonthParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class WeekdayParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return WeekdayParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, WeekdayParser, locale, date, output);\n  }\n\n  static bind(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const day = locale.weekdays.indexOf(value);\n    if (day >= 0) {\n      // nop\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected weekday, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new WeekdayParser(locale, date, output);\n  }\n}\nDateTimeFormat.WeekdayParser = WeekdayParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class ShortWeekdayParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return ShortWeekdayParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, ShortWeekdayParser, locale, date, output);\n  }\n\n  static bind(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const day = locale.shortWeekdays.indexOf(value);\n    if (day >= 0) {\n      // nop\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected short weekday, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new ShortWeekdayParser(locale, date, output);\n  }\n}\nDateTimeFormat.ShortWeekdayParser = ShortWeekdayParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class Hour24Parser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly hour: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, hour?: number, step?: number) {\n    super();\n    this.date = date;\n    this.hour = hour;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return Hour24Parser.parse(input, this.date, this.hour, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, hour?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, Hour24Parser, \"hour (24)\", 2, 2, date, hour, step);\n  }\n\n  static bind(hour: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.hour = hour;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, hour: number, step: number): Parser<DateTimeInit> {\n    return new Hour24Parser(date, hour, step);\n  }\n}\nDateTimeFormat.Hour24Parser = Hour24Parser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class Hour12Parser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly hour: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, hour?: number, step?: number) {\n    super();\n    this.date = date;\n    this.hour = hour;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return Hour12Parser.parse(input, this.date, this.hour, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, hour?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, Hour12Parser, \"hour (12)\", 2, 2, date, hour, step);\n  }\n\n  static bind(hour: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.hour = (date.hour || 0) + hour;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, hour: number, step: number): Parser<DateTimeInit> {\n    return new Hour12Parser(date, hour, step);\n  }\n}\nDateTimeFormat.Hour12Parser = Hour12Parser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {DateTimeLocale} from \"../DateTimeLocale\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class PeriodParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return PeriodParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, PeriodParser, locale, date, output);\n  }\n\n  static bind(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const period = locale.months.indexOf(value);\n    if (period >= 0) {\n      date.hour = (date.hour || 0) + 12 * period;\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected period of day, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new PeriodParser(locale, date, output);\n  }\n}\nDateTimeFormat.PeriodParser = PeriodParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class MinuteParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly minute: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, minute?: number, step?: number) {\n    super();\n    this.date = date;\n    this.minute = minute;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return MinuteParser.parse(input, this.date, this.minute, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, minute?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, MinuteParser, \"minute\", 2, 2, date, minute, step);\n  }\n\n  static bind(minute: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.minute = minute;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, minute: number, step: number): Parser<DateTimeInit> {\n    return new MinuteParser(date, minute, step);\n  }\n}\nDateTimeFormat.MinuteParser = MinuteParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class SecondParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly second: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, second?: number, step?: number) {\n    super();\n    this.date = date;\n    this.second = second;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return SecondParser.parse(input, this.date, this.second, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, second?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, SecondParser, \"second\", 2, 2, date, second, step);\n  }\n\n  static bind(second: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.second = second;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, second: number, step: number): Parser<DateTimeInit> {\n    return new SecondParser(date, second, step);\n  }\n}\nDateTimeFormat.SecondParser = SecondParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\n\n/** @hidden */\nexport class MillisecondParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly millisecond: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, millisecond?: number, step?: number) {\n    super();\n    this.date = date;\n    this.millisecond = millisecond;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return MillisecondParser.parse(input, this.date, this.millisecond, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, millisecond?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, MillisecondParser, \"millisecond\", 1, 3, date, millisecond, step);\n  }\n\n  static bind(millisecond: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.millisecond = millisecond;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, millisecond: number, step: number): Parser<DateTimeInit> {\n    return new MillisecondParser(date, millisecond, step);\n  }\n}\nDateTimeFormat.MillisecondParser = MillisecondParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"../DateTimeFormat\";\nimport {DateTimeSpecifiers} from \"../DateTimeSpecifiers\";\n\n/** @hidden */\nexport class PatternParser extends Parser<DateTimeInit> {\n  private readonly pattern: string;\n  private readonly specifiers: DateTimeSpecifiers;\n  private readonly date: DateTimeInit | undefined;\n  private readonly dateParser: Parser<DateTimeInit> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(pattern: string, specifiers: DateTimeSpecifiers, date?: DateTimeInit,\n              dateParser?: Parser<DateTimeInit>, step?: number) {\n    super();\n    this.pattern = pattern;\n    this.specifiers = specifiers;\n    this.date = date;\n    this.dateParser = dateParser;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<DateTimeInit> {\n    return PatternParser.parse(input, this.pattern, this.specifiers, this.date,\n                                     this.dateParser, this.step);\n  }\n\n  static parse(input: Input, pattern: string, specifiers: DateTimeSpecifiers,\n               date: DateTimeInit = {}, dateParser?: Parser<DateTimeInit>,\n               step: number = 0): Parser<DateTimeInit> {\n    let c = 0;\n    const n = pattern.length;\n    while (step < n) {\n      const p = pattern.charCodeAt(step);\n      if (p === 37/*'%'*/) {\n        if (dateParser === void 0) {\n          const s = pattern.charAt(step + 1);\n          const format = specifiers[s];\n          if (format !== void 0) {\n            dateParser = format.parseDateTime(input, date);\n          } else {\n            return Parser.error(Diagnostic.message(\"unknown format specifier: \" + s, input));\n          }\n        } else {\n          dateParser = dateParser.feed(input);\n        }\n        if (dateParser.isDone()) {\n          date = dateParser.bind();\n          dateParser = void 0;\n          step += 2;\n          continue;\n        } else if (dateParser.isError()) {\n          return dateParser.asError();\n        }\n      } else if (input.isCont()) {\n        c = input.head();\n        if (c === p) {\n          input.step();\n          step += 1;\n          continue;\n        } else {\n          return Parser.error(Diagnostic.expected(p, input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n      break;\n    }\n    if (step === n) {\n      return Parser.done(date);\n    }\n    return new PatternParser(pattern, specifiers, date, dateParser, step);\n  }\n}\nDateTimeFormat.PatternParser = PatternParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"./DateTime\";\nimport {FilterInterval} from \"./interval/FilterInterval\";\nimport {YearInterval} from \"./interval/YearInterval\";\nimport {YearsInterval} from \"./interval/YearsInterval\";\nimport {MonthInterval} from \"./interval/MonthInterval\";\nimport {WeekInterval} from \"./interval/WeekInterval\";\nimport {DayInterval} from \"./interval/DayInterval\";\nimport {HourInterval} from \"./interval/HourInterval\";\nimport {MinuteInterval} from \"./interval/MinuteInterval\";\nimport {SecondInterval} from \"./interval/SecondInterval\";\nimport {MillisecondInterval} from \"./interval/MillisecondInterval\";\nimport {MillisecondsInterval} from \"./interval/MillisecondsInterval\";\n\n/** @hidden */\nexport const MILLIS_PER_SECOND: number = 1000;\n/** @hidden */\nexport const MILLIS_PER_MINUTE: number = 60 * MILLIS_PER_SECOND;\n/** @hidden */\nexport const MILLIS_PER_HOUR: number = 60 * MILLIS_PER_MINUTE;\n\nexport abstract class TimeInterval {\n  abstract offset(d: AnyDateTime, k?: number): DateTime;\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    return this.floor(this.offset(d, k));\n  }\n\n  abstract floor(d: AnyDateTime): DateTime;\n\n  ceil(d: AnyDateTime): DateTime {\n    if (d instanceof DateTime) {\n      d = d.time(d.time() - 1);\n    } else {\n      d = DateTime.time(d) - 1;\n    }\n    return this.next(this.floor(d), 1);\n  }\n\n  round(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    const d0 = this.floor(d);\n    const d1 = this.ceil(d);\n    return d.time() - d0.time() < d1.time() - d.time() ? d0 : d1;\n  }\n\n  range(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    d0 = this.ceil(d0);\n    d1 = DateTime.time(d1);\n    const ds = [];\n    step = typeof step === \"number\" ? Math.floor(step) : 1;\n    if (step > 0) {\n      while (d0.time() < d1) {\n        ds.push(d0);\n        d0 = this.next(d0, step);\n      }\n    }\n    return ds;\n  }\n\n  filter(predicate: (d: DateTime) => boolean): TimeInterval {\n    return new TimeInterval.Filter(this, predicate);\n  }\n\n  private static _year?: YearInterval;\n  static year(): UnitTimeInterval;\n  static year(k: number): TimeInterval;\n  static year(k?: number): TimeInterval {\n    if (TimeInterval._year === void 0) {\n      TimeInterval._year = new TimeInterval.Year();\n    }\n    if (k === void 0) {\n      return TimeInterval._year;\n    } else {\n      return TimeInterval._year.every(k);\n    }\n  }\n\n  private static _month?: MonthInterval;\n  static month(): UnitTimeInterval;\n  static month(k: number): TimeInterval;\n  static month(k?: number): TimeInterval {\n    if (TimeInterval._month === void 0) {\n      TimeInterval._month = new TimeInterval.Month();\n    }\n    if (k === void 0) {\n      return TimeInterval._month;\n    } else {\n      return TimeInterval._month.every(k);\n    }\n  }\n\n  private static _week?: WeekInterval;\n  static week(): TimeInterval {\n    if (TimeInterval._week === void 0) {\n      TimeInterval._week = new TimeInterval.Week();\n    }\n    return TimeInterval._week;\n  }\n\n  private static _day?: DayInterval;\n  static day(): UnitTimeInterval;\n  static day(k: number): TimeInterval;\n  static day(k?: number): TimeInterval {\n    if (TimeInterval._day === void 0) {\n      TimeInterval._day = new TimeInterval.Day();\n    }\n    if (k === void 0) {\n      return TimeInterval._day;\n    } else {\n      return TimeInterval._day.every(k);\n    }\n  }\n\n  private static _hour?: HourInterval;\n  static hour(): UnitTimeInterval;\n  static hour(k: number): TimeInterval;\n  static hour(k?: number): TimeInterval {\n    if (TimeInterval._hour === void 0) {\n      TimeInterval._hour = new TimeInterval.Hour();\n    }\n    if (k === void 0) {\n      return TimeInterval._hour;\n    } else {\n      return TimeInterval._hour.every(k);\n    }\n  }\n\n  private static _minute?: MinuteInterval;\n  static minute(): UnitTimeInterval;\n  static minute(k: number): TimeInterval;\n  static minute(k?: number): TimeInterval {\n    if (TimeInterval._minute === void 0) {\n      TimeInterval._minute = new TimeInterval.Minute();\n    }\n    if (k === void 0) {\n      return TimeInterval._minute;\n    } else {\n      return TimeInterval._minute.every(k);\n    }\n  }\n\n  private static _second?: SecondInterval;\n  static second(): UnitTimeInterval;\n  static second(k: number): TimeInterval;\n  static second(k?: number): TimeInterval {\n    if (TimeInterval._second === void 0) {\n      TimeInterval._second = new TimeInterval.Second();\n    }\n    if (k === void 0) {\n      return TimeInterval._second;\n    } else {\n      return TimeInterval._second.every(k);\n    }\n  }\n\n  private static _millisecond?: MillisecondInterval;\n  static millisecond(): UnitTimeInterval;\n  static millisecond(k: number): TimeInterval;\n  static millisecond(k?: number): TimeInterval {\n    if (TimeInterval._millisecond === void 0) {\n      TimeInterval._millisecond = new TimeInterval.Millisecond();\n    }\n    if (k === void 0) {\n      return TimeInterval._millisecond;\n    } else {\n      return TimeInterval._millisecond.every(k);\n    }\n  }\n\n  static years(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.year().range(d0, d1, step);\n  }\n\n  static months(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.month().range(d0, d1, step);\n  }\n\n  static weeks(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.week().range(d0, d1, step);\n  }\n\n  static days(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.day().range(d0, d1, step);\n  }\n\n  static hours(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.hour().range(d0, d1, step);\n  }\n\n  static minutes(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.minute().range(d0, d1, step);\n  }\n\n  static seconds(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.second().range(d0, d1, step);\n  }\n\n  static milliseconds(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.millisecond().range(d0, d1, step);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Filter: typeof FilterInterval; // defined by FilterInterval\n  /** @hidden */\n  static Year: typeof YearInterval; // defined by YearInterval\n  /** @hidden */\n  static Years: typeof YearsInterval; // defined by YearsInterval\n  /** @hidden */\n  static Month: typeof MonthInterval; // defined by MonthInterval\n  /** @hidden */\n  static Week: typeof WeekInterval; // defined by WeekInterval\n  /** @hidden */\n  static Day: typeof DayInterval; // defined by DayInterval\n  /** @hidden */\n  static Hour: typeof HourInterval; // defined by HourInterval\n  /** @hidden */\n  static Minute: typeof MinuteInterval; // defined by MinuteInterval\n  /** @hidden */\n  static Second: typeof SecondInterval; // defined by SecondInterval\n  /** @hidden */\n  static Millisecond: typeof MillisecondInterval; // defined by MillisecondInterval\n  /** @hidden */\n  static Milliseconds: typeof MillisecondsInterval; // defined by MillisecondsInterval\n}\n\nexport abstract class UnitTimeInterval extends TimeInterval {\n  abstract every(k: number): TimeInterval;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class FilterInterval extends TimeInterval {\n  private readonly unit: TimeInterval;\n  private readonly predicate: (d: DateTime) => boolean;\n\n  constructor(unit: TimeInterval, predicate: (d: DateTime) => boolean) {\n    super();\n    this.unit = unit;\n    this.predicate = predicate;\n  }\n\n  offset(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    while (k < 0) {\n      do {\n        d = this.unit.offset(d, -1);\n      } while (!this.predicate(d));\n      k += 1;\n    }\n    while (k > 0) {\n      do {\n        d = this.unit.offset(d, 1);\n      } while (!this.predicate(d));\n      k -= 1;\n    }\n    return d;\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    while (d = this.unit.floor(d), !this.predicate(d)) {\n      d = d.time(d.time() - 1);\n    }\n    return d;\n  }\n}\nTimeInterval.Filter = FilterInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class YearInterval extends UnitTimeInterval {\n  offset(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.year(d.year() + k);\n    return d;\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.year(d.year() + k).month(0, 1).hour(0, 0, 0, 0);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    return d.month(0, 1).hour(0, 0, 0, 0);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    d = d.time(d.time() - 1);\n    d = d.month(0, 1).hour(0, 0, 0, 0);\n    d = d.year(d.year() + 1);\n    return d.month(0, 1).hour(0, 0, 0, 0);\n  }\n\n  every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new TimeInterval.Years(k);\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n}\nTimeInterval.Year = YearInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class YearsInterval extends TimeInterval {\n  private readonly stride: number;\n\n  constructor(stride: number) {\n    super();\n    this.stride = stride || 1;\n  }\n\n  offset(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.year(d.year() + k * this.stride);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.year(Math.floor((d.year() + k * this.stride) / this.stride) * this.stride);\n    return d.month(0, 1).hour(0, 0, 0, 0);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    d = d.year(Math.floor(d.year() / this.stride) * this.stride);\n    return d.month(0, 1).hour(0, 0, 0, 0);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    d = d.time(d.time() - 1);\n    d = d.year(Math.floor(d.year() / this.stride) * this.stride);\n    d = d.month(0, 1).hour(0, 0, 0, 0);\n    d = d.year(Math.floor((d.year() + this.stride) / this.stride) * this.stride);\n    return d.month(0, 1).hour(0, 0, 0, 0);\n  }\n}\nTimeInterval.Years = YearsInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class MonthInterval extends UnitTimeInterval {\n  offset(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.month(d.month() + k);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.month(d.month() + k);\n    return d.day(1).hour(0, 0, 0, 0);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    return d.day(1).hour(0, 0, 0, 0);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    d = d.time(d.time() - 1);\n    d = d.day(1).hour(0, 0, 0, 0);\n    d = d.month(d.month() + 1);\n    return d.day(1).hour(0, 0, 0, 0);\n  }\n\n  every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new TimeInterval.Filter(this, MonthInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n\n  private static modulo(k: number, d: DateTime): boolean {\n    return d.month() % k === 0;\n  }\n}\nTimeInterval.Month = MonthInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class WeekInterval extends TimeInterval {\n  readonly day: number;\n\n  constructor(day: number = 0) {\n    super();\n    this.day = day;\n  }\n\n  offset(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.day(d.day() + 7 * k);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.day(d.day() + 7 * k);\n    d = d.day(d.day() - (d.weekday() + 7 - this.day) % 7);\n    return d.hour(0, 0, 0, 0);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    d = d.day(d.day() - (d.weekday() + 7 - this.day) % 7);\n    return d.hour(0, 0, 0, 0);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    d = d.time(d.time() - 1);\n    d = d.day(d.day() - (d.weekday() + 7 - this.day) % 7);\n    d = d.hour(0, 0, 0, 0);\n    d = d.day(d.day() + 7);\n    return d.hour(0, 0, 0, 0);\n  }\n}\nTimeInterval.Week = WeekInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class DayInterval extends UnitTimeInterval {\n  offset(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.day(d.day() + k);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    d = DateTime.fromAny(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.day(d.day() + k);\n    return d.hour(0, 0, 0, 0);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    return d.hour(0, 0, 0, 0);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    d = DateTime.fromAny(d);\n    d = d.time(d.time() - 1);\n    d = d.hour(0, 0, 0, 0);\n    d = d.day(d.day() + 1);\n    return d.hour(0, 0, 0, 0);\n  }\n\n  every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new TimeInterval.Filter(this, DayInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n\n  private static modulo(k: number, d: DateTime): boolean {\n    return d.day() % k === 0;\n  }\n}\nTimeInterval.Day = DayInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {MILLIS_PER_MINUTE, MILLIS_PER_HOUR, UnitTimeInterval, TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class HourInterval extends UnitTimeInterval {\n  offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * MILLIS_PER_HOUR;\n    return new DateTime(d, z);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * MILLIS_PER_HOUR;\n    let dtz = z.offset() * MILLIS_PER_MINUTE % MILLIS_PER_HOUR;\n    if (dtz < 0) {\n      dtz += MILLIS_PER_HOUR;\n    }\n    d = Math.floor((d - dtz) / MILLIS_PER_HOUR) * MILLIS_PER_HOUR + dtz;\n    return new DateTime(d, z);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    let dtz = z.offset() * MILLIS_PER_MINUTE % MILLIS_PER_HOUR;\n    if (dtz < 0) {\n      dtz += MILLIS_PER_HOUR;\n    }\n    d = Math.floor((d - dtz) / MILLIS_PER_HOUR) * MILLIS_PER_HOUR + dtz;\n    return new DateTime(d, z);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d -= 1;\n    let dtz = z.offset() * MILLIS_PER_MINUTE % MILLIS_PER_HOUR;\n    if (dtz < 0) {\n      dtz += MILLIS_PER_HOUR;\n    }\n    d = (Math.floor((d - dtz) / MILLIS_PER_HOUR) * MILLIS_PER_HOUR + dtz) + MILLIS_PER_HOUR;\n    d = Math.floor((d - dtz) / MILLIS_PER_HOUR) * MILLIS_PER_HOUR + dtz;\n    return new DateTime(d, z);\n  }\n\n  every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new TimeInterval.Filter(this, HourInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n\n  private static modulo(k: number, d: DateTime): boolean {\n    return d.hour() % k === 0;\n  }\n}\nTimeInterval.Hour = HourInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {MILLIS_PER_MINUTE, UnitTimeInterval, TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class MinuteInterval extends UnitTimeInterval {\n  offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * MILLIS_PER_MINUTE;\n    return new DateTime(d, z);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = Math.floor((d + k * MILLIS_PER_MINUTE) / MILLIS_PER_MINUTE) * MILLIS_PER_MINUTE;\n    return new DateTime(d, z);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d = Math.floor(d / MILLIS_PER_MINUTE) * MILLIS_PER_MINUTE;\n    return new DateTime(d, z);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d = Math.floor(((Math.floor((d - 1) / MILLIS_PER_MINUTE) * MILLIS_PER_MINUTE) + MILLIS_PER_MINUTE) / MILLIS_PER_MINUTE) * MILLIS_PER_MINUTE;\n    return new DateTime(d, z);\n  }\n\n  every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new TimeInterval.Filter(this, MinuteInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n\n  private static modulo(k: number, d: DateTime): boolean {\n    return d.minute() % k === 0;\n  }\n}\nTimeInterval.Minute = MinuteInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {MILLIS_PER_SECOND, UnitTimeInterval, TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class SecondInterval extends UnitTimeInterval {\n  offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * MILLIS_PER_SECOND;\n    return new DateTime(d, z);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * MILLIS_PER_SECOND;\n    d = Math.floor(d / MILLIS_PER_SECOND) * MILLIS_PER_SECOND;\n    return new DateTime(d, z);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d = Math.floor(d / MILLIS_PER_SECOND) * MILLIS_PER_SECOND;\n    return new DateTime(d, z);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d = Math.floor(((Math.floor((d - 1) / MILLIS_PER_SECOND) * MILLIS_PER_SECOND) + MILLIS_PER_SECOND) / MILLIS_PER_SECOND) * MILLIS_PER_SECOND;\n    return new DateTime(d, z);\n  }\n\n  every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new TimeInterval.Filter(this, SecondInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error('' + k);\n    }\n  }\n\n  private static modulo(k: number, d: DateTime): boolean {\n    return d.second() % k === 0;\n  }\n}\nTimeInterval.Second = SecondInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class MillisecondInterval extends UnitTimeInterval {\n  offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k;\n    return new DateTime(d, z);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k;\n    return new DateTime(d, z);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    return DateTime.fromAny(d);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    return DateTime.fromAny(d);\n  }\n\n  every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new TimeInterval.Milliseconds(k);\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n}\nTimeInterval.Millisecond = MillisecondInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeInterval} from \"../TimeInterval\";\n\n/** @hidden */\nexport class MillisecondsInterval extends TimeInterval {\n  private readonly stride: number;\n\n  constructor(stride: number) {\n    super();\n    if (typeof stride !== \"number\" || !isFinite(stride) || isNaN(stride)) {\n      stride = 1;\n    }\n    this.stride = stride;\n  }\n\n  offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * this.stride;\n    return new DateTime(d, z);\n  }\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    const stride = this.stride;\n    d = Math.floor((d + k * stride) / stride) * stride;\n    return new DateTime(d, z);\n  }\n\n  floor(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    const stride = this.stride;\n    d = Math.floor(d / stride) * stride;\n    return new DateTime(d, z);\n  }\n\n  ceil(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    const stride = this.stride;\n    d = Math.floor(((Math.floor((d - 1) / stride) * stride) + stride) / stride) * stride;\n    return new DateTime(d, z);\n  }\n}\nTimeInterval.Milliseconds = MillisecondsInterval;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Diagnostic} from \"@swim/codec\";\n\nexport class UriException extends Error {\n  readonly diagnostic?: Diagnostic;\n\n  constructor(message?: Diagnostic | string) {\n    super(message instanceof Diagnostic ? message.message() || void 0 : message);\n    if (message instanceof Diagnostic) {\n      this.diagnostic = message;\n    }\n    (this as any).__proto__ = UriException.prototype;\n  }\n\n  toString(): string {\n    if (this.diagnostic !== void 0) {\n      return this.diagnostic.toString();\n    } else {\n      return super.toString();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Format, Debug, Display, Base16} from \"@swim/codec\";\nimport {Form} from \"@swim/structure\";\nimport {UriException} from \"./UriException\";\nimport {AnyUriScheme, UriScheme} from \"./UriScheme\";\nimport {AnyUriAuthority, UriAuthorityInit, UriAuthority} from \"./UriAuthority\";\nimport {AnyUriUser, UriUser} from \"./UriUser\";\nimport {AnyUriHost, UriHost} from \"./UriHost\";\nimport {UriHostName} from \"./UriHostName\";\nimport {UriHostIPv4} from \"./UriHostIPv4\";\nimport {UriHostIPv6} from \"./UriHostIPv6\";\nimport {UriHostUndefined} from \"./UriHostUndefined\";\nimport {AnyUriPort, UriPort} from \"./UriPort\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\nimport {UriPathSegment} from \"./UriPathSegment\";\nimport {UriPathSlash} from \"./UriPathSlash\";\nimport {UriPathEmpty} from \"./UriPathEmpty\";\nimport {UriPathBuilder} from \"./UriPathBuilder\";\nimport {AnyUriQuery, UriQuery} from \"./UriQuery\";\nimport {UriQueryParam} from \"./UriQueryParam\";\nimport {UriQueryUndefined} from \"./UriQueryUndefined\";\nimport {UriQueryBuilder} from \"./UriQueryBuilder\";\nimport {AnyUriFragment, UriFragment} from \"./UriFragment\";\nimport {UriParser} from \"./UriParser\";\nimport {UriForm} from \"./UriForm\";\nimport {UriPathForm} from \"./UriPathForm\";\n\nexport type AnyUri = Uri | UriInit | string;\n\nexport interface UriInit extends UriAuthorityInit {\n  scheme?: AnyUriScheme;\n  authority?: AnyUriAuthority;\n  path?: AnyUriPath;\n  query?: AnyUriQuery;\n  fragment?: AnyUriFragment;\n}\n\nexport class Uri implements Comparable<Uri>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _scheme: UriScheme;\n  /** @hidden */\n  readonly _authority: UriAuthority;\n  /** @hidden */\n  readonly _path: UriPath;\n  /** @hidden */\n  readonly _query: UriQuery;\n  /** @hidden */\n  readonly _fragment: UriFragment;\n  /** @hidden */\n  _string?: string;\n  /** @hidden */\n  _hashCode?: number;\n\n  /** @hidden */\n  constructor(scheme: UriScheme, authority: UriAuthority, path: UriPath,\n              query: UriQuery, fragment: UriFragment) {\n    this._scheme = scheme;\n    this._authority = authority;\n    this._path = path;\n    this._query = query;\n    this._fragment = fragment;\n  }\n\n  isDefined(): boolean {\n    return this._scheme.isDefined() || this._authority.isDefined() || this._path.isDefined()\n        || this._query.isDefined() || this._fragment.isDefined();\n  }\n\n  isEmpty(): boolean {\n    return !this._scheme.isDefined() && !this._authority.isDefined() && this._path.isEmpty()\n        && !this._query.isDefined() && !this._fragment.isDefined();\n  }\n\n  scheme(): UriScheme;\n  scheme(scheme: AnyUriScheme): Uri;\n  scheme(scheme?: AnyUriScheme): UriScheme | Uri {\n    if (scheme === void 0) {\n      return this._scheme;\n    } else {\n      scheme = Uri.Scheme.fromAny(scheme);\n      if (scheme !== this._scheme) {\n        return this.copy(scheme, this._authority, this._path, this._query, this._fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  schemePart(): string;\n  schemePart(scheme: string): Uri;\n  schemePart(scheme?: string): string | Uri {\n    if (scheme === void 0) {\n      return this._scheme.toString();\n    } else {\n      return this.scheme(Uri.Scheme.parse(scheme));\n    }\n  }\n\n  schemeName(): string;\n  schemeName(scheme: string): Uri;\n  schemeName(scheme?: string): string | Uri {\n    if (scheme === void 0) {\n      return this._scheme.name();\n    } else {\n      return this.scheme(Uri.Scheme.from(scheme));\n    }\n  }\n\n  authority(): UriAuthority;\n  authority(authority: AnyUriAuthority): Uri;\n  authority(authority?: AnyUriAuthority): UriAuthority | Uri {\n    if (authority === void 0) {\n      return this._authority;\n    } else {\n      authority = Uri.Authority.fromAny(authority);\n      if (authority !== this._authority) {\n        return this.copy(this._scheme, authority, this._path, this._query, this._fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  authorityPart(): string;\n  authorityPart(authority: string): Uri;\n  authorityPart(authority?: string): string | Uri {\n    if (authority === void 0) {\n      return this._authority.toString();\n    } else {\n      return this.authority(Uri.Authority.parse(authority));\n    }\n  }\n\n  user(): UriUser;\n  user(user: AnyUriUser): Uri;\n  user(user?: AnyUriUser): UriUser | Uri {\n    if (user === void 0) {\n      return this._authority.user();\n    } else {\n      return this.authority(this._authority.user(user));\n    }\n  }\n\n  userPart(): string;\n  userPart(user: string): Uri;\n  userPart(user?: string): string | Uri {\n    if (user === void 0) {\n      return this._authority.userPart();\n    } else {\n      return this.authority(this._authority.userPart(user));\n    }\n  }\n\n  username(): string;\n  username(username: string, password?: string | null): Uri;\n  username(username?: string, password?: string | null): string | Uri {\n    if (username === void 0) {\n      return this._authority.username();\n    } else {\n      return this.authority(this._authority.username(username, password));\n    }\n  }\n\n  password(): string | null;\n  password(password: string | null): Uri;\n  password(password?: string | null): string | null | Uri {\n    if (password === void 0) {\n      return this._authority.password();\n    } else {\n      return this.authority(this._authority.password(password));\n    }\n  }\n\n  host(): UriHost;\n  host(host: AnyUriHost): Uri;\n  host(host?: AnyUriHost): UriHost | Uri {\n    if (host === void 0) {\n      return this._authority.host();\n    } else {\n      return this.authority(this._authority.host(host));\n    }\n  }\n\n  hostPart(): string;\n  hostPart(host: string): Uri;\n  hostPart(host?: string): string | Uri {\n    if (host === void 0) {\n      return this._authority.hostPart();\n    } else {\n      return this.authority(this._authority.hostPart(host));\n    }\n  }\n\n  hostAddress(): string {\n    return this._authority.hostAddress();\n  }\n\n  hostName(): string | null;\n  hostName(address: string): Uri;\n  hostName(address?: string): string | null | Uri {\n    if (address === void 0) {\n      return this._authority.hostName();\n    } else {\n      return this.authority(this._authority.hostName(address));\n    }\n  }\n\n  hostIPv4(): string | null;\n  hostIPv4(address: string): Uri;\n  hostIPv4(address?: string): string | null | Uri {\n    if (address === void 0) {\n      return this._authority.hostIPv4();\n    } else {\n      return this.authority(this._authority.hostIPv4(address));\n    }\n  }\n\n  hostIPv6(): string | null;\n  hostIPv6(address: string): Uri;\n  hostIPv6(address?: string): string | null | Uri {\n    if (address === void 0) {\n      return this._authority.hostIPv6();\n    } else {\n      return this.authority(this._authority.hostIPv6(address));\n    }\n  }\n\n  port(): UriPort;\n  port(port: AnyUriPort): Uri;\n  port(port?: AnyUriPort): UriPort | Uri {\n    if (port === void 0) {\n      return this._authority.port();\n    } else {\n      return this.authority(this._authority.port(port));\n    }\n  }\n\n  portPart(): string;\n  portPart(port: string): Uri;\n  portPart(port?: string): string | Uri {\n    if (port === void 0) {\n      return this._authority.portPart();\n    } else {\n      return this.authority(this._authority.portPart(port));\n    }\n  }\n\n  portNumber(): number;\n  portNumber(port: number): Uri;\n  portNumber(port?: number): number | Uri {\n    if (port === void 0) {\n      return this._authority.portNumber();\n    } else {\n      return this.authority(this._authority.portNumber(port));\n    }\n  }\n\n  path(): UriPath;\n  path(...components: AnyUriPath[]): Uri;\n  path(...components: AnyUriPath[]): UriPath | Uri {\n    if (arguments.length === 0) {\n      return this._path;\n    } else {\n      const path = Uri.Path.from.apply(void 0, components);\n      if (path !== this._path) {\n        return this.copy(this._scheme, this._authority, path, this._query, this._fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  pathPart(): string;\n  pathPart(path: string): Uri;\n  pathPart(path?: string): string | Uri {\n    if (path === void 0) {\n      return this._path.toString();\n    } else {\n      return this.path(Uri.Path.parse(path));\n    }\n  }\n\n  pathName(): string;\n  pathName(name: string): Uri;\n  pathName(name?: string): string | Uri {\n    if (name === void 0) {\n      return this._path.name();\n    } else {\n      return this.path(this._path.name(name));\n    }\n  }\n\n  parentPath(): UriPath {\n    return this._path.parent();\n  }\n\n  basePath(): UriPath {\n    return this._path.base();\n  }\n\n  parent(): Uri {\n    return Uri.from(this._scheme, this._authority, this._path.parent());\n  }\n\n  base(): Uri {\n    return Uri.from(this._scheme, this._authority, this._path.base());\n  }\n\n  appendedPath(...components: AnyUriPath[]): Uri {\n    return this.path(this._path.appended.apply(this._path, arguments));\n  }\n\n  appendedSlash(): Uri {\n    return this.path(this._path.appendedSlash());\n  }\n\n  appendedSegment(segment: string): Uri {\n    return this.path(this._path.appendedSegment(segment));\n  }\n\n  prependedPath(...components: AnyUriPath[]): Uri {\n    return this.path(this._path.prepended.apply(this._path, arguments));\n  }\n\n  prependedSlash(): Uri {\n    return this.path(this._path.prependedSlash());\n  }\n\n  prependedSegment(segment: string): Uri {\n    return this.path(this._path.prependedSegment(segment));\n  }\n\n  query(): UriQuery;\n  query(query: AnyUriQuery): Uri;\n  query(query?: AnyUriQuery): UriQuery | Uri {\n    if (query === void 0) {\n      return this._query;\n    } else {\n      query = Uri.Query.fromAny(query);\n      if (query !== this._query) {\n        return this.copy(this._scheme, this._authority, this._path, query, this._fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  queryPart(): string;\n  queryPart(query: string): Uri;\n  queryPart(query?: string): string | Uri {\n    if (query === void 0) {\n      return this._query.toString();\n    } else {\n      return this.query(Uri.Query.parse(query));\n    }\n  }\n\n  updatedQuery(key: string, value: string): Uri {\n    return this.query(this._query.updated(key, value));\n  }\n\n  removedQuery(key: string): Uri {\n    return this.query(this._query.removed(key));\n  }\n\n  appendedQuery(key: string | null, value: string): Uri;\n  appendedQuery(params: AnyUriQuery): Uri;\n  appendedQuery(key: AnyUriQuery | null, value?: string): Uri {\n    return this.query(this._query.appended(key as any, value as any));\n  }\n\n  prependedQuery(key: string | null, value: string): Uri;\n  prependedQuery(params: AnyUriQuery): Uri;\n  prependedQuery(key: AnyUriQuery | null, value?: string): Uri {\n    return this.query(this._query.prepended(key as any, value as any));\n  }\n\n  fragment(): UriFragment;\n  fragment(fragment: AnyUriFragment): Uri;\n  fragment(fragment?: AnyUriFragment): UriFragment | Uri {\n    if (fragment === void 0) {\n      return this._fragment;\n    } else {\n      fragment = Uri.Fragment.fromAny(fragment);\n      if (fragment !== this._fragment) {\n        return Uri.from(this._scheme, this._authority, this._path, this._query, fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  fragmentPart(): string | null;\n  fragmentPart(fragment: string): Uri;\n  fragmentPart(fragment?: string): string  | null| Uri {\n    if (fragment === void 0) {\n      return this._fragment.toString();\n    } else {\n      return this.fragment(Uri.Fragment.parse(fragment));\n    }\n  }\n\n  fragmentIdentifier(): string | null;\n  fragmentIdentifier(identifier: string | null): Uri;\n  fragmentIdentifier(identifier?: string | null): string | null | Uri {\n    if (identifier === void 0) {\n      return this._fragment.identifier();\n    } else {\n      return this.fragment(Uri.Fragment.from(identifier));\n    }\n  }\n\n  endpoint(): Uri {\n    if (this._path.isDefined() || this._query.isDefined() || this._fragment.isDefined()) {\n      return Uri.from(this._scheme, this._authority);\n    } else {\n      return this;\n    }\n  }\n\n  resolve(relative: AnyUri): Uri {\n    relative = Uri.fromAny(relative);\n    if (relative._scheme.isDefined()) {\n      return this.copy(relative._scheme,\n                       relative._authority,\n                       relative._path.removeDotSegments(),\n                       relative._query,\n                       relative._fragment);\n    } else if (relative._authority.isDefined()) {\n      return this.copy(this._scheme,\n                       relative._authority,\n                       relative._path.removeDotSegments(),\n                       relative._query,\n                       relative._fragment);\n    } else if (relative._path.isEmpty()) {\n      return this.copy(this._scheme,\n                       this._authority,\n                       this._path,\n                       relative._query.isDefined() ? relative._query : this._query,\n                       relative._fragment);\n    } else if (relative._path.isAbsolute()) {\n      return this.copy(this._scheme,\n                       this._authority,\n                       relative._path.removeDotSegments(),\n                       relative._query,\n                       relative._fragment);\n    } else {\n      return this.copy(this._scheme,\n                       this._authority,\n                       this.merge(relative._path).removeDotSegments(),\n                       relative._query,\n                       relative._fragment);\n    }\n  }\n\n  /** @hidden */\n  merge(relative: UriPath): UriPath {\n    if (this._authority.isDefined() && this._path.isEmpty()) {\n      return relative.prependedSlash();\n    } else if (this._path.isEmpty()) {\n      return relative;\n    } else {\n      return this._path.merge(relative);\n    }\n  }\n\n  unresolve(absolute: AnyUri): Uri {\n    absolute = Uri.fromAny(absolute);\n    if (!this._scheme.equals(absolute._scheme) || !this._authority.equals(absolute._authority)) {\n      return absolute;\n    } else {\n      return Uri.from(Uri.Scheme.undefined(),\n                      Uri.Authority.undefined(),\n                      this._path.unmerge(absolute._path),\n                      absolute._query,\n                      absolute._fragment);\n    }\n  }\n\n  protected copy(scheme: UriScheme, authority: UriAuthority, path: UriPath,\n                 query: UriQuery, fragment: UriFragment): Uri {\n    return Uri.from(scheme, authority, path, query, fragment);\n  }\n\n  toAny(): {scheme?: string, username?: string, password?: string, host?: string,\n            port?: number, path: string[], query?: {[key: string]: string},\n            fragment?: string} {\n    const uri = {} as {scheme?: string, username?: string, password?: string, host?: string,\n                       port?: number, path: string[], query?: {[key: string]: string},\n                       fragment?: string};\n    uri.scheme = this._scheme.toAny();\n    this._authority.toAny(uri);\n    uri.path = this._path.toAny();\n    uri.query = this._query.toAny();\n    uri.fragment = this._fragment.toAny();\n    return uri;\n  }\n\n  compareTo(that: Uri): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Uri) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Uri\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      if (this._scheme.isDefined()) {\n        output.display(this._scheme).write(58/*':'*/);\n      }\n      if (this._authority.isDefined()) {\n        output = output.write(47/*'/'*/).write(47/*'/'*/).display(this._authority);\n      }\n      output.display(this._path);\n      if (this._query.isDefined()) {\n        output = output.write(63/*'?'*/).display(this._query);\n      }\n      if (this._fragment.isDefined()) {\n        output = output.write(35/*'#'*/).display(this._fragment);\n      }\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n\n  private static _empty?: Uri;\n\n  private static _standardParser?: UriParser;\n\n  static empty(): Uri {\n    if (Uri._empty === void 0) {\n      Uri._empty = new Uri(Uri.Scheme.undefined(), Uri.Authority.undefined(), Uri.Path.empty(),\n                           Uri.Query.undefined(), Uri.Fragment.undefined());\n    }\n    return Uri._empty;\n  }\n\n  static from(scheme: UriScheme = Uri.Scheme.undefined(),\n              authority: UriAuthority = Uri.Authority.undefined(),\n              path: UriPath = Uri.Path.empty(),\n              query: UriQuery = Uri.Query.undefined(),\n              fragment: UriFragment = Uri.Fragment.undefined()): Uri {\n    if (scheme.isDefined() || authority.isDefined() || path.isDefined()\n        || query.isDefined() || fragment.isDefined()) {\n      return new Uri(scheme, authority, path, query, fragment);\n    } else {\n      return Uri.empty();\n    }\n  }\n\n  static fromAny(uri: AnyUri | null | undefined): Uri {\n    if (uri === null || uri === void 0) {\n      return Uri.empty();\n    } else if (uri instanceof Uri) {\n      return uri;\n    } else if (typeof uri === \"object\") {\n      const scheme = Uri.Scheme.fromAny(uri.scheme);\n      const authority = Uri.Authority.fromAny(uri.authority || uri);\n      const path = Uri.Path.fromAny(uri.path);\n      const query = Uri.Query.fromAny(uri.query);\n      const fragment = Uri.Fragment.fromAny(uri.fragment);\n      if (scheme.isDefined() || authority.isDefined() || path.isDefined()\n          || query.isDefined() || fragment.isDefined()) {\n        return new Uri(scheme, authority, path, query, fragment);\n      } else {\n        return Uri.empty();\n      }\n    } else if (typeof uri === \"string\") {\n      return Uri.parse(uri);\n    } else {\n      throw new TypeError(\"\" + uri);\n    }\n  }\n\n  static scheme(scheme: AnyUriScheme): Uri {\n    scheme = Uri.Scheme.fromAny(scheme);\n    return Uri.from(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static schemePart(part: string): Uri {\n    const scheme = Uri.Scheme.parse(part);\n    return Uri.from(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static schemeName(name: string): Uri {\n    const scheme = Uri.Scheme.from(name);\n    return Uri.from(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static authority(authority: AnyUriAuthority): Uri {\n    authority = Uri.Authority.fromAny(authority);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static authorityPart(part: string): Uri {\n    const authority = Uri.Authority.parse(part);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static user(user: AnyUriUser): Uri {\n    const authority = Uri.Authority.user(user);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static userPart(part: string): Uri {\n    const authority = Uri.Authority.userPart(part);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static username(username: string, password?: string | null): Uri {\n    const authority = Uri.Authority.username(username, password);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static password(password: string): Uri {\n    const authority = Uri.Authority.password(password);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static host(host: AnyUriHost): Uri {\n    const authority = Uri.Authority.host(host);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostPart(part: string): Uri {\n    const authority = Uri.Authority.hostPart(part);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostName(address: string): Uri {\n    const authority = Uri.Authority.hostName(address);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostIPv4(address: string): Uri {\n    const authority = Uri.Authority.hostIPv4(address);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostIPv6(address: string): Uri {\n    const authority = Uri.Authority.hostIPv6(address);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static port(port: AnyUriPort): Uri {\n    const authority = Uri.Authority.port(port);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static portPart(part: string): Uri {\n    const authority = Uri.Authority.portPart(part);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static portNumber(number: number): Uri {\n    const authority = Uri.Authority.portNumber(number);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static path(...components: AnyUriPath[]): Uri {\n    const path = Uri.Path.from.apply(void 0, components);\n    return Uri.from(void 0, void 0, path, void 0, void 0);\n  }\n\n  static pathPart(part: string): Uri {\n    const path = Uri.Path.parse(part);\n    return Uri.from(void 0, void 0, path, void 0, void 0);\n  }\n\n  static query(query: AnyUriQuery): Uri {\n    query = Uri.Query.fromAny(query);\n    return Uri.from(void 0, void 0, void 0, query, void 0);\n  }\n\n  static queryPart(part: string): Uri {\n    const query = Uri.Query.parse(part);\n    return Uri.from(void 0, void 0, void 0, query, void 0);\n  }\n\n  static fragment(fragment: AnyUriFragment): Uri {\n    fragment = Uri.Fragment.fromAny(fragment);\n    return Uri.from(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  static fragmentPart(part: string): Uri {\n    const fragment = Uri.Fragment.parse(part);\n    return Uri.from(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  static fragmentIdentifier(identifier: string): Uri {\n    const fragment = Uri.Fragment.from(identifier);\n    return Uri.from(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  static standardParser(): UriParser {\n    if (this._standardParser === void 0) {\n      this._standardParser = new Uri.Parser();\n    }\n    return this._standardParser;\n  }\n\n  static parse(string: string): Uri {\n    return Uri.standardParser().parseAbsoluteString(string);\n  }\n\n  /** @hidden */\n  static isUnreservedChar(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c === 45/*'-'*/ || c === 46/*'.'*/\n        || c === 95/*'_'*/ || c === 126/*'~'*/;\n  }\n\n  /** @hidden */\n  static isSubDelimChar(c: number): boolean {\n    return c === 33/*'!'*/ || c === 36/*'$'*/\n        || c === 38/*'&'*/ || c === 40/*'('*/\n        || c === 41/*')'*/ || c === 42/*'*'*/\n        || c === 43/*'+'*/ || c === 44/*','*/\n        || c === 59/*';'*/ || c === 61/*'='*/\n        || c === 39/*'\\''*/;\n  }\n\n  /** @hidden */\n  static isSchemeChar(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c === 43/*'+'*/ || c === 45/*'-'*/\n        || c === 46/*'.'*/;\n  }\n\n  /** @hidden */\n  static isUserInfoChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 58/*':'*/;\n  }\n\n  /** @hidden */\n  static isUserChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c);\n  }\n\n  /** @hidden */\n  static isHostChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c);\n  }\n\n  /** @hidden */\n  static isPathChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 58/*':'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isQueryChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 47/*'/'*/ || c === 58/*':'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isParamChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || c === 33/*'!'*/ || c === 36/*'$'*/\n        || c === 40/*'('*/ || c === 41/*')'*/\n        || c === 42/*'*'*/ || c === 43/*'+'*/\n        || c === 44/*','*/ || c === 47/*'/'*/\n        || c === 58/*':'*/ || c === 59/*';'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/\n        || c === 39/*'\\''*/;\n  }\n\n  /** @hidden */\n  static isFragmentChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 47/*'/'*/ || c === 58/*':'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isAlpha(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/;\n  }\n\n  /** @hidden */\n  static toLowerCase(c: number): number {\n    if (c >= 65/*'A'*/ && c <= 90/*'Z'*/) {\n      return c + (97/*'a'*/ - 65/*'A'*/);\n    } else {\n      return c;\n    }\n  }\n\n  /** @hidden */\n  static writeScheme(scheme: string, output: Output): void {\n    for (let i = 0, n = scheme.length; i < n; i += 1) {\n      const c = scheme.charCodeAt(i);\n      if (i > 0 && Uri.isSchemeChar(c) || i === 0 && Uri.isAlpha(c)) {\n        output = output.write(c);\n      } else {\n        throw new UriException(\"Invalid scheme: \" + scheme);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeUserInfo(userInfo: string, output: Output): void {\n    for (let i = 0, n = userInfo.length; i < n; i += 1) {\n      const c = userInfo.charCodeAt(i);\n      if (Uri.isUserInfoChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeUser(user: string, output: Output): void {\n    for (let i = 0, n = user.length; i < n; i += 1) {\n      const c = user.charCodeAt(i);\n      if (Uri.isUserChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeHost(address: string, output: Output): void {\n    for (let i = 0, n = address.length; i < n; i += 1) {\n      const c = address.charCodeAt(i);\n      if (Uri.isHostChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeHostLiteral(address: string, output: Output): void {\n    for (let i = 0, n = address.length; i < n; i += 1) {\n      const c = address.charCodeAt(i);\n      if (Uri.isHostChar(c) || c === 58/*':'*/) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writePathSegment(segment: string, output: Output): void {\n    for (let i = 0, n = segment.length; i < n; i += 1) {\n      const c = segment.charCodeAt(i);\n      if (Uri.isPathChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeQuery(query: string, output: Output): void {\n    for (let i = 0, n = query.length; i < n; i += 1) {\n      const c = query.charCodeAt(i);\n      if (Uri.isQueryChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeParam(param: string, output: Output): void {\n    for (let i = 0, n = param.length; i < n; i += 1) {\n      const c = param.charCodeAt(i);\n      if (Uri.isParamChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeFragment(fragment: string, output: Output): void {\n    for (let i = 0, n = fragment.length; i < n; i += 1) {\n      const c = fragment.charCodeAt(i);\n      if (Uri.isFragmentChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeEncoded(c: number, output: Output): void {\n    if (c === 0x00) { // modified UTF-8\n      Uri.writePctEncoded(0xC0, output);\n      Uri.writePctEncoded(0x80, output);\n    } else if (c >= 0x00 && c <= 0x7F) { // U+0000..U+007F\n      Uri.writePctEncoded(c, output);\n    } else if (c >= 0x80 && c <= 0x07FF) { // U+0080..U+07FF\n      Uri.writePctEncoded(0xC0 | (c >>> 6), output);\n      Uri.writePctEncoded(0x80 | (c & 0x3F), output);\n    } else if (c >= 0x0800 && c <= 0xFFFF    // U+0800..U+D7FF\n            || c >= 0xE000 && c <= 0xFFFF) { // U+E000..U+FFFF\n      Uri.writePctEncoded(0xE0 | (c >>> 12), output);\n      Uri.writePctEncoded(0x80 | (c >>>  6 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c        & 0x3F), output);\n    } else if (c >= 0x10000 && c <= 0x10FFFF) { // U+10000..U+10FFFF\n      Uri.writePctEncoded(0xF0 | (c >>> 18), output);\n      Uri.writePctEncoded(0x80 | (c >>> 12 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c >>>  6 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c        & 0x3F), output);\n    } else { // surrogate or invalid code point\n      Uri.writePctEncoded(0xEF, output);\n      Uri.writePctEncoded(0xBF, output);\n      Uri.writePctEncoded(0xBD, output);\n    }\n  }\n\n  /** @hidden */\n  static writePctEncoded(c: number, output: Output) {\n    output = output.write(37/*'%'*/)\n          .write(Base16.lowercase().encodeDigit(c >>> 4 & 0xF))\n          .write(Base16.lowercase().encodeDigit(c       & 0xF));\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Scheme: typeof UriScheme; // defined by UriScheme\n  /** @hidden */\n  static Authority: typeof UriAuthority; // defined by UriAuthority\n  /** @hidden */\n  static User: typeof UriUser; // defined by UriUser\n  /** @hidden */\n  static Host: typeof UriHost; // defined by UriHost\n  /** @hidden */\n  static HostName: typeof UriHostName; // defined by UriHostName\n  /** @hidden */\n  static HostIPv4: typeof UriHostIPv4; // defined by UriHostIPv4\n  /** @hidden */\n  static HostIPv6: typeof UriHostIPv6; // defined by UriHostIPv6\n  /** @hidden */\n  static HostUndefined: typeof UriHostUndefined; // defined by UriHostUndefined\n  /** @hidden */\n  static Port: typeof UriPort; // defined by UriPort\n  /** @hidden */\n  static Path: typeof UriPath; // defined by UriPath\n  /** @hidden */\n  static PathSegment: typeof UriPathSegment; // defined by UriPathSegment\n  /** @hidden */\n  static PathSlash: typeof UriPathSlash; // defined by UriPathSlash\n  /** @hidden */\n  static PathEmpty: typeof UriPathEmpty; // defined by UriPathEmpty\n  /** @hidden */\n  static PathBuilder: typeof UriPathBuilder; // defined by UriPathBuilder\n  /** @hidden */\n  static Query: typeof UriQuery; // defined by UriQuery\n  /** @hidden */\n  static QueryParam: typeof UriQueryParam; // defined by UriQueryParam\n  /** @hidden */\n  static QueryUndefined: typeof UriQueryUndefined; // defined by UriQueryUndefined\n  /** @hidden */\n  static QueryBuilder: typeof UriQueryBuilder; // defined by UriQueryBuilder\n  /** @hidden */\n  static Fragment: typeof UriFragment; // defined by UriFragment\n  /** @hidden */\n  static Parser: typeof UriParser; // defined by UriParser\n  /** @hidden */\n  static Form: typeof UriForm; // defined by UriForm\n  /** @hidden */\n  static PathForm: typeof UriPathForm; // defined by UriPathForm\n\n  private static _form?: Form<Uri>;\n\n  static form(): Form<Uri> {\n    if (Uri._form === void 0) {\n      Uri._form = new Uri.Form(Uri.empty());\n    }\n    return Uri._form;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriScheme = UriScheme | string;\n\nexport class UriScheme implements Comparable<UriScheme>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _name: string;\n\n  /** @hidden */\n  constructor(name: string) {\n    this._name = name;\n  }\n\n  isDefined(): boolean {\n    return this._name.length !== 0;\n  }\n\n  name(): string {\n    return this._name;\n  }\n\n  toAny(): string | undefined {\n    return this._name.length !== 0 ? this._name : void 0;\n  }\n\n  compareTo(that: UriScheme): 0 | 1 | -1 {\n    const order = this._name.localeCompare(that._name);\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriScheme) {\n      return this._name === that._name;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.hash(this._name);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriScheme\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    Uri.writeScheme(this._name, output);\n  }\n\n  toString(): string {\n    return this._name;\n  }\n\n  private static _undefined?: UriScheme;\n\n  private static _cache?: HashGenCacheMap<string, UriScheme>;\n\n  static undefined(): UriScheme {\n    if (UriScheme._undefined === void 0) {\n      UriScheme._undefined = new UriScheme(\"\");\n    }\n    return UriScheme._undefined;\n  }\n\n  static from(name: string): UriScheme {\n    const cache = UriScheme.cache();\n    const scheme = cache.get(name);\n    if (scheme !== void 0) {\n      return scheme;\n    } else {\n      return cache.put(name, new UriScheme(name));\n    }\n  }\n\n  static fromAny(scheme: AnyUriScheme | null | undefined): UriScheme {\n    if (scheme === null || scheme === void 0) {\n      return UriScheme.undefined();\n    } else if (scheme instanceof UriScheme) {\n      return scheme;\n    } else if (typeof scheme === \"string\") {\n      return UriScheme.parse(scheme);\n    } else {\n      throw new TypeError(\"\" + scheme);\n    }\n  }\n\n  static parse(string: string): UriScheme {\n    return Uri.standardParser().parseSchemeString(string);\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheMap<string, UriScheme> {\n    if (UriScheme._cache === void 0) {\n      const cacheSize = 4;\n      UriScheme._cache = new HashGenCacheMap<string, UriScheme>(cacheSize);\n    }\n    return UriScheme._cache;\n  }\n}\nUri.Scheme = UriScheme;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriUser, UriUserInit, UriUser} from \"./UriUser\";\nimport {AnyUriHost, UriHost} from \"./UriHost\";\nimport {AnyUriPort, UriPort} from \"./UriPort\";\n\nexport type AnyUriAuthority = UriAuthority | UriAuthorityInit | string;\n\nexport interface UriAuthorityInit extends UriUserInit {\n  user?: AnyUriUser;\n  host?: AnyUriHost;\n  port?: AnyUriPort;\n}\n\nexport class UriAuthority implements Comparable<UriAuthority>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _user: UriUser;\n  /** @hidden */\n  readonly _host: UriHost;\n  /** @hidden */\n  readonly _port: UriPort;\n  /** @hidden */\n  _string?: string;\n  /** @hidden */\n  _hashCode?: number;\n\n  /** @hidden */\n  constructor(user: UriUser, host: UriHost, port: UriPort) {\n    this._user = user;\n    this._host = host;\n    this._port = port;\n  }\n\n  isDefined(): boolean {\n    return this._user.isDefined() || this._host.isDefined() || this._port.isDefined();\n  }\n\n  user(): UriUser;\n  user(user: AnyUriUser): UriAuthority;\n  user(user?: AnyUriUser): UriUser | UriAuthority {\n    if (user === void 0) {\n      return this._user;\n    } else {\n      user = Uri.User.fromAny(user);\n      if (user !== this._user) {\n        return this.copy(user, this._host, this._port);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  userPart(): string;\n  userPart(user: string): UriAuthority;\n  userPart(user?: string): string | UriAuthority {\n    if (user === void 0) {\n      return this._user.toString();\n    } else {\n      return this.user(Uri.User.parse(user));\n    }\n  }\n\n  username(): string;\n  username(username: string, password?: string | null): UriAuthority;\n  username(username?: string, password?: string | null): string | UriAuthority {\n    if (username === void 0) {\n      return this._user._username || \"\";\n    } else if (password === void 0) {\n      return this.user(this._user.username(username));\n    } else {\n      return this.user(Uri.User.from(username, password));\n    }\n  }\n\n  password(): string | null;\n  password(password: string | null): UriAuthority;\n  password(password?: string | null): string | null | UriAuthority {\n    if (password === void 0) {\n      return this._user.password();\n    } else {\n      return this.user(this._user.password(password));\n    }\n  }\n\n  host(): UriHost;\n  host(host: AnyUriHost): UriAuthority;\n  host(host?: AnyUriHost): UriHost | UriAuthority {\n    if (host === void 0) {\n      return this._host;\n    } else {\n      host = Uri.Host.fromAny(host);\n      if (host !== this._host) {\n        return this.copy(this._user, host, this._port);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  hostPart(): string;\n  hostPart(host: string): UriAuthority;\n  hostPart(host?: string): string | UriAuthority {\n    if (host === void 0) {\n      return this._host.toString();\n    } else {\n      return this.host(Uri.Host.parse(host));\n    }\n  }\n\n  hostAddress(): string {\n    return this._host.address();\n  }\n\n  hostName(): string | null;\n  hostName(address: string): UriAuthority;\n  hostName(address?: string): string | null | UriAuthority {\n    if (address === void 0) {\n      return this._host.name();\n    } else {\n      return this.host(Uri.Host.from(address));\n    }\n  }\n\n  hostIPv4(): string | null;\n  hostIPv4(address: string): UriAuthority;\n  hostIPv4(address?: string): string | null | UriAuthority {\n    if (address === void 0) {\n      return this._host.ipv4();\n    } else {\n      return this.host(Uri.Host.ipv4(address));\n    }\n  }\n\n  hostIPv6(): string | null;\n  hostIPv6(address: string): UriAuthority;\n  hostIPv6(address?: string): string | null | UriAuthority {\n    if (address === void 0) {\n      return this._host.ipv6();\n    } else {\n      return this.host(Uri.Host.ipv6(address));\n    }\n  }\n\n  port(): UriPort;\n  port(port: AnyUriPort): UriAuthority;\n  port(port?: AnyUriPort): UriPort | UriAuthority {\n    if (port === void 0) {\n      return this._port;\n    } else {\n      port = Uri.Port.fromAny(port);\n      if (port !== this._port) {\n        return this.copy(this._user, this._host, port);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  portPart(): string;\n  portPart(port: string): UriAuthority;\n  portPart(port?: string): string | UriAuthority {\n    if (port === void 0) {\n      return this._port.toString();\n    } else {\n      return this.port(Uri.Port.parse(port));\n    }\n  }\n\n  portNumber(): number;\n  portNumber(port: number): UriAuthority;\n  portNumber(port?: number): number | UriAuthority {\n    if (port === void 0) {\n      return this._port.number();\n    } else {\n      return this.port(Uri.Port.from(port));\n    }\n  }\n\n  protected copy(user: UriUser, host: UriHost, port: UriPort): UriAuthority {\n    return UriAuthority.from(user, host, port);\n  }\n\n  toAny(authority?: {username?: string, password?: string, host?: string, port?: number}):\n      {username?: string, password?: string, host?: string, port?: number} | undefined {\n    if (this.isDefined()) {\n      authority = authority || {};\n      this._user.toAny(authority);\n      if (this._host.isDefined()) {\n        authority.host = this._host.toAny();\n      }\n      if (this._port.isDefined()) {\n        authority.port = this._port.toAny();\n      }\n    }\n    return authority;\n  }\n\n  compareTo(that: UriAuthority): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriAuthority) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriAuthority\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      if (this._user.isDefined()) {\n        output.display(this._user).write(64/*'@'*/);\n      }\n      output.display(this._host);\n      if (this._port.isDefined()) {\n        output = output.write(58/*':'*/).display(this._port);\n      }\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n\n  private static _undefined?: UriAuthority;\n\n  static undefined(): UriAuthority {\n    if (UriAuthority._undefined === void 0) {\n      UriAuthority._undefined = new UriAuthority(Uri.User.undefined(), Uri.Host.undefined(), Uri.Port.undefined());\n    }\n    return UriAuthority._undefined;\n  }\n\n  static from(user: UriUser = Uri.User.undefined(),\n              host: UriHost = Uri.Host.undefined(),\n              port: UriPort = Uri.Port.undefined()): UriAuthority {\n    if (user.isDefined() || host.isDefined() || port.isDefined()) {\n      return new UriAuthority(user, host, port);\n    } else {\n      return UriAuthority.undefined();\n    }\n  }\n\n  static fromAny(authority: AnyUriAuthority | null | undefined): UriAuthority {\n    if (authority === null || authority === void 0) {\n      return UriAuthority.undefined();\n    } else if (authority instanceof UriAuthority) {\n      return authority;\n    } else if (typeof authority === \"object\") {\n      const user = Uri.User.fromAny(authority.user || authority);\n      const host = Uri.Host.fromAny(authority.host);\n      const port = Uri.Port.fromAny(authority.port);\n      return UriAuthority.from(user, host, port);\n    } else if (typeof authority === \"string\") {\n      return UriAuthority.parse(authority);\n    } else {\n      throw new TypeError(\"\" + authority);\n    }\n  }\n\n  static user(user: AnyUriUser): UriAuthority {\n    user = Uri.User.fromAny(user);\n    return UriAuthority.from(user, void 0, void 0);\n  }\n\n  static userPart(part: string): UriAuthority {\n    const user = Uri.User.parse(part);\n    return UriAuthority.from(user, void 0, void 0);\n  }\n\n  static username(username: string, password?: string | null): UriAuthority {\n    const user = Uri.User.from(username, password);\n    return UriAuthority.from(user, void 0, void 0);\n  }\n\n  static password(password: string): UriAuthority {\n    const user = Uri.User.from(\"\", password);\n    return UriAuthority.from(user, void 0, void 0);\n  }\n\n  static host(host: AnyUriHost): UriAuthority {\n    host = Uri.Host.fromAny(host);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static hostPart(part: string): UriAuthority {\n    const host = Uri.Host.parse(part);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static hostName(address: string): UriAuthority {\n    const host = Uri.Host.from(address);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static hostIPv4(address: string): UriAuthority {\n    const host = Uri.Host.ipv4(address);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static hostIPv6(address: string): UriAuthority {\n    const host = Uri.Host.ipv6(address);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static port(port: AnyUriPort): UriAuthority {\n    port = Uri.Port.fromAny(port);\n    return UriAuthority.from(void 0, void 0, port);\n  }\n\n  static portPart(part: string): UriAuthority {\n    const port = Uri.Port.parse(part);\n    return UriAuthority.from(void 0, void 0, port);\n  }\n\n  static portNumber(number: number): UriAuthority {\n    const port = Uri.Port.from(number);\n    return UriAuthority.from(void 0, void 0, port);\n  }\n\n  static parse(string: string): UriAuthority {\n    return Uri.standardParser().parseAuthorityString(string);\n  }\n}\nUri.Authority = UriAuthority;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriUser = UriUser | UriUserInit | string;\n\nexport interface UriUserInit {\n  username?: string;\n  password?: string | null;\n}\n\nexport class UriUser implements HashCode, Debug, Display {\n  /** @hidden */\n  readonly _username: string | null;\n  /** @hidden */\n  readonly _password: string | null;\n\n  /** @hidden */\n  constructor(username: string | null, password: string | null) {\n    this._username = username;\n    this._password = password;\n  }\n\n  isDefined(): boolean {\n    return this._username !== null;\n  }\n\n  username(): string;\n  username(username: string): UriUser;\n  username(username?: string): string | UriUser {\n    if (username === void 0) {\n      return this._username || \"\";\n    } else {\n      if (username !== this._username) {\n        return this.copy(username, this._password);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  password(): string | null;\n  password(password: string | null): UriUser;\n  password(password?: string | null): string | null | UriUser {\n    if (password === void 0) {\n      return this._password;\n    } else {\n      if (password !== this._password) {\n        return this.copy(this._username, password);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  protected copy(username: string | null, password: string | null): UriUser {\n    return UriUser.from(username, password);\n  }\n\n  toAny(user?: {username?: string, password?: string}): {username?: string, password?: string} | undefined {\n    if (this._username !== null) {\n      user = user || {};\n      user.username = this._username;\n      if (this._password !== null) {\n        user.password = this._password;\n      }\n    }\n    return user;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriUser) {\n      return this._username === that._username && this._password === that._password;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (UriUser._hashSeed === void 0) {\n      UriUser._hashSeed = Murmur3.seed(UriUser);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(UriUser._hashSeed,\n        Murmur3.hash(this._username)), Murmur3.hash(this._password)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriUser\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this._username !== null) {\n      Uri.writeUser(this._username, output);\n      if (this._password !== null) {\n        output = output.write(58/*':'*/);\n        Uri.writeUser(this._password, output);\n      }\n    }\n  }\n\n  toString(): string {\n    return Format.display(this);\n  }\n\n  private static _hashSeed?: number;\n\n  private static _undefined?: UriUser;\n\n  static undefined(): UriUser {\n    if (UriUser._undefined === void 0) {\n      UriUser._undefined = new UriUser(null, null);\n    }\n    return UriUser._undefined;\n  }\n\n  static from(username: string | null, password: string | null = null): UriUser {\n    if (username !== null || password !== null) {\n      return new UriUser(username || \"\", password);\n    } else {\n      return UriUser.undefined();\n    }\n  }\n\n  static fromAny(user: AnyUriUser | null | undefined): UriUser {\n    if (user === null || user === void 0) {\n      return UriUser.undefined();\n    } else if (user instanceof UriUser) {\n      return user;\n    } else if (typeof user === \"object\") {\n      const username = typeof user.username === \"string\" ? user.username : null;\n      const password = typeof user.password === \"string\" ? user.password : null;\n      return UriUser.from(username, password);\n    } else if (typeof user === \"string\") {\n      return UriUser.parse(user);\n    } else {\n      throw new TypeError(\"\" + user);\n    }\n  }\n\n  static parse(string: string): UriUser {\n    return Uri.standardParser().parseUserString(string);\n  }\n}\nUri.User = UriUser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriHost = UriHost | string;\n\nexport abstract class UriHost implements Comparable<UriHost>, HashCode, Debug, Display {\n  /** @hidden */\n  _hashCode?: number;\n\n  protected constructor() {\n    // stub\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  abstract address(): string;\n\n  name(): string | null {\n    return null;\n  }\n\n  ipv4(): string | null {\n    return null;\n  }\n\n  ipv6(): string | null {\n    return null;\n  }\n\n  toAny(): string {\n    return this.toString();\n  }\n\n  compareTo(that: UriHost): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriHost) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  abstract debug(output: Output): void;\n\n  abstract display(output: Output): void;\n\n  abstract toString(): string;\n\n  private static _undefined?: UriHost;\n\n  private static _cache?: HashGenCacheMap<string, UriHost>;\n\n  static undefined(): UriHost {\n    if (UriHost._undefined === void 0) {\n      UriHost._undefined = new Uri.HostUndefined();\n    }\n    return UriHost._undefined;\n  }\n\n  static from(address: string): UriHost {\n    const cache = UriHost.cache();\n    const host = cache.get(address);\n    if (host instanceof Uri.HostName) {\n      return host;\n    } else {\n      return cache.put(address, new Uri.HostName(address));\n    }\n  }\n\n  static ipv4(address: string): UriHost {\n    const cache = UriHost.cache();\n    const host = cache.get(address);\n    if (host instanceof Uri.HostIPv4) {\n      return host;\n    } else {\n      return cache.put(address, new Uri.HostIPv4(address));\n    }\n  }\n\n  static ipv6(address: string): UriHost {\n    const cache = UriHost.cache();\n    const host = cache.get(address);\n    if (host instanceof Uri.HostIPv6) {\n      return host;\n    } else {\n      return cache.put(address, new Uri.HostIPv6(address));\n    }\n  }\n\n  static fromAny(host: AnyUriHost | null | undefined): UriHost {\n    if (host === null || host === void 0) {\n      return UriHost.undefined();\n    } else if (host instanceof UriHost) {\n      return host;\n    } else if (typeof host === \"string\") {\n      return UriHost.parse(host);\n    } else {\n      throw new TypeError(\"\" + host);\n    }\n  }\n\n  static parse(string: string): UriHost {\n    return Uri.standardParser().parseHostString(string);\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheMap<string, UriHost> {\n    if (UriHost._cache === void 0) {\n      const cacheSize = 16;\n      UriHost._cache = new HashGenCacheMap<string, UriHost>(cacheSize);\n    }\n    return UriHost._cache;\n  }\n}\nUri.Host = UriHost;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostName extends UriHost {\n  /** @hidden */\n  readonly _address: string;\n\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    this._address = address;\n  }\n\n  address(): string {\n    return this._address;\n  }\n\n  name(): string {\n    return this._address;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"from\")\n        .write(40/*'('*/).debug(this._address).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    Uri.writeHost(this._address, output);\n  }\n\n  toString(): string {\n    return this._address;\n  }\n}\nUri.HostName = UriHostName;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostIPv4 extends UriHost {\n  /** @hidden */\n  readonly _address: string;\n\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    this._address = address;\n  }\n\n  address(): string {\n    return this._address;\n  }\n\n  ipv4(): string {\n    return this._address;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"ipv4\")\n        .write(40/*'('*/).debug(this._address).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    Uri.writeHost(this._address, output);\n  }\n\n  toString(): string {\n    return this._address;\n  }\n}\nUri.HostIPv4 = UriHostIPv4;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostIPv6 extends UriHost {\n  /** @hidden */\n  readonly _address: string;\n  /** @hidden */\n  _string?: string;\n\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    this._address = address;\n  }\n\n  address(): string {\n    return this._address;\n  }\n\n  ipv6(): string {\n    return this._address;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"ipv6\")\n        .write(40/*'('*/).debug(this._address).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      output = output.write(91/*'['*/);\n      Uri.writeHostLiteral(this._address, output);\n      output = output.write(93/*']'*/);\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = \"[\" + this.address + \"]\";\n    }\n    return this._string;\n  }\n}\nUri.HostIPv6 = UriHostIPv6;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostUndefined extends UriHost {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  isDefined(): boolean {\n    return false;\n  }\n\n  address(): string {\n    return \"\";\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"undefined\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    // nop\n  }\n\n  toString(): string {\n    return \"\";\n  }\n}\nUri.HostUndefined = UriHostUndefined;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriPort = UriPort | number | string;\n\nexport class UriPort implements Comparable<UriPort>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _number: number;\n\n  /** @hidden */\n  constructor(num: number) {\n    this._number = num;\n  }\n\n  isDefined(): boolean {\n    return this._number !== 0;\n  }\n\n  number(): number {\n    return this._number;\n  }\n\n  valueOf(): number {\n    return this._number;\n  }\n\n  toAny(): number {\n    return this._number;\n  }\n\n  compareTo(that: UriPort): 0 | 1 | -1 {\n    return this._number < that._number ? -1 : this._number > that._number ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriPort) {\n      return this._number === that._number;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (UriPort._hashSeed === void 0) {\n      UriPort._hashSeed = Murmur3.seed(UriPort);\n    }\n    return Murmur3.mash(Murmur3.mix(UriPort._hashSeed, this._number));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPort\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"from\").write(40/*'('*/);\n      Format.displayNumber(this._number, output);\n      output = output.write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    Format.displayNumber(this._number, output);\n  }\n\n  toString(): string {\n    return \"\" + this._number;\n  }\n\n  private static _hashSeed?: number;\n\n  private static _undefined?: UriPort;\n\n  private static _cache?: HashGenCacheMap<number, UriPort>;\n\n  static undefined(): UriPort {\n    if (UriPort._undefined === void 0) {\n      UriPort._undefined = new UriPort(0);\n    }\n    return UriPort._undefined;\n  }\n\n  static from(number: number) {\n    if (number > 0) {\n      const cache = UriPort.cache();\n      const port = cache.get(number);\n      if (port !== void 0) {\n        return port;\n      } else {\n        return cache.put(number, new UriPort(number));\n      }\n    } else if (number === 0) {\n      return UriPort.undefined();\n    } else {\n      throw new TypeError(\"\" + number);\n    }\n  }\n\n  static fromAny(port: AnyUriPort | null | undefined): UriPort {\n    if (port === null || port === void 0) {\n      return UriPort.undefined();\n    } else if (port instanceof UriPort) {\n      return port;\n    } else if (typeof port === \"number\") {\n      return UriPort.from(port);\n    } else if (typeof port === \"string\") {\n      return UriPort.parse(port);\n    } else {\n      throw new TypeError(\"\" + port);\n    }\n  }\n\n  static parse(string: string): UriPort {\n    return Uri.standardParser().parsePortString(string);\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheMap<number, UriPort> {\n    if (UriPort._cache === void 0) {\n      const cacheSize = 4;\n      UriPort._cache = new HashGenCacheMap<number, UriPort>(cacheSize);\n    }\n    return UriPort._cache;\n  }\n}\nUri.Port = UriPort;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheSet} from \"@swim/util\";\nimport {Output, Debug, Display} from \"@swim/codec\";\nimport {Form} from \"@swim/structure\";\nimport {Uri} from \"./Uri\";\nimport {UriPathBuilder} from \"./UriPathBuilder\";\n\nexport type AnyUriPath = UriPath | string[] | string;\n\nexport abstract class UriPath implements Comparable<UriPath>, HashCode, Debug, Display {\n  /** @hidden */\n  _hashCode?: number;\n\n  /** @hidden */\n  protected constructor() {\n    // sealed\n  }\n\n  abstract isDefined(): boolean;\n\n  abstract isAbsolute(): boolean;\n\n  abstract isRelative(): boolean;\n\n  abstract isEmpty(): boolean;\n\n  get length(): number {\n    let n = 0;\n    let path = this as UriPath;\n    while (!path.isEmpty()) {\n      n += 1;\n      path = path.tail();\n    }\n    return n;\n  }\n\n  get(index: number): string | undefined {\n    let i = 0;\n    let path = this as UriPath;\n    while (!path.isEmpty()) {\n      if (i < index) {\n        i += 1;\n        path = path.tail();\n      } else {\n        return path.head();\n      }\n    }\n    return void 0;\n  }\n\n  abstract head(): string;\n\n  abstract tail(): UriPath;\n\n  /** @hidden */\n  abstract setTail(tail: UriPath): void;\n\n  /** @hidden */\n  abstract dealias(): UriPath;\n\n  abstract parent(): UriPath;\n\n  abstract base(): UriPath;\n\n  name(): string;\n  name(name: string): UriPath;\n  name(name?: string): string | UriPath {\n    if (name === void 0) {\n      if (this.isEmpty()) {\n        return \"\";\n      }\n      let path = this as UriPath;\n      do {\n        const tail = path.tail();\n        if (tail.isEmpty()) {\n          return path.isRelative() ? path.head() : \"\";\n        } else {\n          path = tail;\n        }\n      } while (true);\n    } else {\n      const builder = new Uri.PathBuilder();\n      builder.addPath(this.base());\n      builder.addSegment(name);\n      return builder.bind();\n    }\n  }\n\n  foot(): UriPath {\n    if (this.isEmpty()) {\n      return this;\n    }\n    let path = this as UriPath;\n    do {\n      const tail = path.tail();\n      if (tail.isEmpty()) {\n        return path;\n      } else {\n        path = tail;\n      }\n    } while (true);\n  }\n\n  isSubpathOf(b: AnyUriPath): boolean {\n    b = UriPath.fromAny(b);\n    let a = this as UriPath;\n    while (!a.isEmpty() && !b.isEmpty()) {\n      if (a.head() !== b.head()) {\n        return false;\n      }\n      a = a.tail();\n      b = b.tail();\n    }\n    return b.isEmpty();\n  }\n\n  appended(...components: AnyUriPath[]): UriPath {\n    if (arguments.length > 0) {\n      const builder = new Uri.PathBuilder();\n      builder.addPath(this);\n      builder.push.apply(builder, arguments);\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  appendedSlash(): UriPath {\n    const builder = new Uri.PathBuilder();\n    builder.addPath(this);\n    builder.addSlash();\n    return builder.bind();\n  }\n\n  appendedSegment(segment: string): UriPath {\n    const builder = new Uri.PathBuilder();\n    builder.addPath(this);\n    builder.addSegment(segment);\n    return builder.bind();\n  }\n\n  prepended(...components: AnyUriPath[]): UriPath {\n    if (arguments.length > 0) {\n      const builder = new Uri.PathBuilder();\n      builder.push.apply(builder, arguments);\n      builder.addPath(this);\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  prependedSlash(): UriPath {\n    return UriPath.slash(this);\n  }\n\n  prependedSegment(segment: string): UriPath {\n    if (this.isEmpty() || this.isAbsolute()) {\n      return UriPath.segment(segment, this);\n    } else {\n      return UriPath.segment(segment, UriPath.slash(this));\n    }\n  }\n\n  resolve(that: UriPath): UriPath {\n    if (that.isEmpty()) {\n      return this;\n    } else if (that.isAbsolute() || this.isEmpty()) {\n      return that.removeDotSegments();\n    } else {\n      return this.merge(that).removeDotSegments();\n    }\n  }\n\n  removeDotSegments(): UriPath {\n    let path = this as UriPath;\n    const builder = new Uri.PathBuilder();\n    while (!path.isEmpty()) {\n      const head = path.head();\n      if (head === \".\" || head === \"..\") {\n        path = path.tail();\n        if (!path.isEmpty()) {\n          path = path.tail();\n        }\n      } else if (path.isAbsolute()) {\n        const rest = path.tail();\n        if (!rest.isEmpty()) {\n          const next = rest.head();\n          if (next === \".\") {\n            path = rest.tail();\n            if (path.isEmpty()) {\n              path = UriPath.slash();\n            }\n          } else if (next === \"..\") {\n            path = rest.tail();\n            if (path.isEmpty()) {\n              path = UriPath.slash();\n            }\n            if (!builder.isEmpty() && !builder.pop().isAbsolute()) {\n              if (!builder.isEmpty()) {\n                builder.pop();\n              }\n            }\n          } else {\n            builder.push(head, next);\n            path = rest.tail();\n          }\n        } else {\n          builder.push(path.head());\n          path = path.tail();\n        }\n      } else {\n        builder.push(path.head());\n        path = path.tail();\n      }\n    }\n    return builder.bind();\n  }\n\n  merge(that: UriPath): UriPath {\n    if (!this.isEmpty()) {\n      const builder = new Uri.PathBuilder();\n      let prev = this as UriPath;\n      do {\n        const next = prev.tail();\n        if (!next.isEmpty()) {\n          if (prev.isAbsolute()) {\n            builder.addSlash();\n          } else {\n            builder.addSegment(prev.head());\n          }\n          prev = next;\n        } else {\n          if (prev.isAbsolute()) {\n            builder.addSlash();\n          }\n          break;\n        }\n      } while (true);\n      builder.addPath(that);\n      return builder.bind();\n    } else {\n      return that;\n    }\n  }\n\n  unmerge(relative: UriPath, root: UriPath = relative): UriPath {\n    let base = this as UriPath;\n    do {\n      if (base.isEmpty()) {\n        if (!relative.isEmpty() && !relative.tail().isEmpty()) {\n          return relative.tail();\n        } else {\n          return relative;\n        }\n      } else if (base.isRelative()) {\n        return relative;\n      } else if (relative.isRelative()) {\n        return UriPath.slash(relative);\n      } else {\n        let a = base.tail();\n        let b = relative.tail();\n        if (!a.isEmpty() && b.isEmpty()) {\n          return UriPath.slash();\n        } else if (a.isEmpty() || b.isEmpty() || a.head() !== b.head()) {\n          return b;\n        } else {\n          a = a.tail();\n          b = b.tail();\n          if (!a.isEmpty() && b.isEmpty()) {\n            return root;\n          } else {\n            base = a;\n            relative = b;\n          }\n        }\n      }\n    } while (true);\n  }\n\n  toAny(): string[] {\n    const components = [];\n    let path = this as UriPath;\n    while (!path.isEmpty()) {\n      components.push(path.head());\n      path = path.tail();\n    }\n    return components;\n  }\n\n  compareTo(that: UriPath): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriPath) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    let path = this as UriPath;\n    while (!path.isEmpty()) {\n      if (path.isAbsolute()) {\n        output = output.write(47/*'/'*/);\n      } else {\n        Uri.writePathSegment(path.head(), output);\n      }\n      path = path.tail();\n    }\n  }\n\n  abstract toString(): string;\n\n  private static _empty?: UriPath;\n\n  private static _slash?: UriPath;\n\n  private static _segmentCache?: HashGenCacheSet<string>;\n\n  static builder(): UriPathBuilder {\n    return new Uri.PathBuilder();\n  }\n\n  static empty(): UriPath {\n    if (UriPath._empty === void 0) {\n      UriPath._empty = new Uri.PathEmpty();\n    }\n    return UriPath._empty;\n  }\n\n  static slash(tail: UriPath = UriPath.empty()): UriPath {\n    if (tail === UriPath.empty()) {\n      if (UriPath._slash === void 0) {\n        UriPath._slash = new Uri.PathSlash(tail);\n      }\n      return UriPath._slash;\n    } else {\n      return new Uri.PathSlash(tail);\n    }\n  }\n\n  static segment(segment: string, tail: UriPath = UriPath.empty()): UriPath {\n    segment = this.cacheSegment(segment);\n    return new Uri.PathSegment(segment, tail);\n  }\n\n  static from(...components: AnyUriPath[]): UriPath {\n    const builder = new Uri.PathBuilder();\n    builder.push.apply(builder, arguments);\n    return builder.bind();\n  }\n\n  static fromAny(path: AnyUriPath | null | undefined): UriPath {\n    if (path === null || path === void 0) {\n      return UriPath.empty();\n    } else if (path instanceof UriPath) {\n      return path;\n    } else if (Array.isArray(path)) {\n      return UriPath.from.apply(void 0, arguments);\n    } else if (typeof path === \"string\") {\n      return UriPath.parse(path);\n    } else {\n      throw new TypeError(\"\" + path);\n    }\n  }\n\n  static parse(string: string): UriPath {\n    return Uri.standardParser().parsePathString(string);\n  }\n\n  /** @hidden */\n  static segmentCache(): HashGenCacheSet<string> {\n    if (UriPath._segmentCache === void 0) {\n      const segmentCacheSize = 64;\n      UriPath._segmentCache = new HashGenCacheSet<string>(segmentCacheSize);\n    }\n    return UriPath._segmentCache;\n  }\n\n  /** @hidden */\n  static cacheSegment(segment: string): string {\n    if (segment.length <= 32) {\n      return this.segmentCache().put(segment);\n    } else {\n      return segment;\n    }\n  }\n\n  private static _pathForm?: Form<UriPath>;\n\n  static pathForm(): Form<UriPath> {\n    if (UriPath._pathForm === void 0) {\n      UriPath._pathForm = new Uri.PathForm(UriPath.empty());\n    }\n    return UriPath._pathForm;\n  }\n}\nUri.Path = UriPath;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathSegment extends UriPath {\n  /** @hidden */\n  readonly _head: string;\n  /** @hidden */\n  _tail: UriPath;\n  /** @hidden */\n  _string?: string;\n\n  /** @hidden */\n  constructor(head: string, tail: UriPath) {\n    super();\n    this._head = head;\n    this._tail = tail;\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  isAbsolute(): boolean {\n    return false;\n  }\n\n  isRelative(): boolean {\n    return true;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  head(): string {\n    return this._head;\n  }\n\n  tail(): UriPath {\n    return this._tail;\n  }\n\n  /** @hidden */\n  setTail(tail: UriPath): void {\n    if (tail.isAbsolute()) {\n      this._tail = tail;\n    } else {\n      this._tail = UriPath.slash(tail);\n    }\n  }\n\n  /** @hidden */\n  dealias(): UriPath {\n    return new UriPathSegment(this._head, this._tail);\n  }\n\n  parent(): UriPath {\n    const tail = this._tail;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      const next = tail.tail();\n      if (next.isEmpty()) {\n        return UriPath.empty();\n      } else {\n        return new UriPathSegment(this._head, tail.parent());\n      }\n    }\n  }\n\n  base(): UriPath {\n    const tail = this._tail;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      return new UriPathSegment(this._head, tail.base());\n    }\n  }\n\n  prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment, UriPath.slash(this));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/) .display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      super.display(output);\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n}\nUri.PathSegment = UriPathSegment;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathSlash extends UriPath {\n  /** @hidden */\n  _tail: UriPath;\n  /** @hidden */\n  _string?: string;\n\n  /** @hidden */\n  constructor(tail: UriPath) {\n    super();\n    this._tail = tail;\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  isAbsolute(): boolean {\n    return true;\n  }\n\n  isRelative(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  head(): string {\n    return \"/\";\n  }\n\n  tail(): UriPath {\n    return this._tail;\n  }\n\n  /** @hidden */\n  setTail(tail: UriPath): void {\n    this._tail = tail;\n  }\n\n  /** @hidden */\n  dealias(): UriPath {\n    return new UriPathSlash(this._tail);\n  }\n\n  parent(): UriPath {\n    const tail = this._tail;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      const next = tail.tail();\n      if (next.isEmpty()) {\n        return UriPath.slash();\n      } else {\n        return new UriPathSlash(tail.parent());\n      }\n    }\n  }\n\n  base(): UriPath {\n    const tail = this._tail;\n    if (tail.isEmpty()) {\n      return this;\n    } else {\n      return new UriPathSlash(tail.base());\n    }\n  }\n\n  prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment, this);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/) .display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      super.display(output);\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n}\nUri.PathSlash = UriPathSlash;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathEmpty extends UriPath {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  isDefined(): boolean {\n    return false;\n  }\n\n  isAbsolute(): boolean {\n    return false;\n  }\n\n  isRelative(): boolean {\n    return true;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  head(): string {\n    throw new Error(\"Empty UriPath\");\n  }\n\n  tail(): UriPath {\n    throw new Error(\"Empty UriPath\");\n  }\n\n  /** @hidden */\n  setTail(tail: UriPath): void {\n    throw new Error(\"Empty UriPath\");\n  }\n\n  /** @hidden */\n  dealias(): UriPath {\n    return this;\n  }\n\n  parent(): UriPath {\n    return this;\n  }\n\n  base(): UriPath {\n    return this;\n  }\n\n  appended(...components: AnyUriPath[]): UriPath {\n    return UriPath.from.apply(void 0, arguments);\n  }\n\n  appendedSlash(): UriPath {\n    return UriPath.slash();\n  }\n\n  appendedSegment(segment: string): UriPath {\n    return UriPath.segment(segment);\n  }\n\n  prepended(...components: AnyUriPath[]): UriPath {\n    return UriPath.from.apply(void 0, arguments);\n  }\n\n  prependedSlash(): UriPath {\n    return UriPath.slash();\n  }\n\n  prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment);\n  }\n\n  merge(that: UriPath): UriPath {\n    return that;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"empty\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    // nop\n  }\n\n  toString(): string {\n    return \"\";\n  }\n}\nUri.PathEmpty = UriPathEmpty;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\n\nexport class UriPathBuilder implements Builder<string, UriPath> {\n  /** @hidden */\n  _first: UriPath;\n  /** @hidden */\n  _last: UriPath | null;\n  /** @hidden */\n  _size: number;\n  /** @hidden */\n  _aliased: number;\n\n  constructor() {\n    this._first = Uri.Path.empty();\n    this._last = null;\n    this._size = 0;\n    this._aliased = 0;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  push(...components: AnyUriPath[]): void {\n    for (let i = 0; i < components.length; i += 1) {\n      const component = components[i];\n      if (component instanceof Uri.Path) {\n        this.addPath(component);\n      } else if (Array.isArray(component)) {\n        this.push.apply(this, component);\n      } else if (component === \"/\") {\n        this.addSlash();\n      } else {\n        this.addSegment(component);\n      }\n    }\n  }\n\n  bind(): UriPath {\n    this._aliased = 0;\n    return this._first;\n  }\n\n  addSlash(): void {\n    const tail = Uri.Path.slash().dealias();\n    const size = this._size;\n    if (size === 0) {\n      this._first = tail;\n    } else {\n      this.dealias(size - 1).setTail(tail);\n    }\n    this._last = tail;\n    this._size = size + 1;\n    this._aliased += 1;\n  }\n\n  addSegment(segment: string): void {\n    const tail = Uri.Path.segment(segment, Uri.Path.empty());\n    const size = this._size;\n    if (size === 0) {\n      this._first = tail;\n    } else {\n      this.dealias(size - 1).setTail(tail);\n    }\n    this._last = tail;\n    this._size = size + 1;\n    this._aliased += 1;\n  }\n\n  addPath(path: UriPath): void {\n    if (!path.isEmpty()) {\n      let size = this._size;\n      if (size === 0) {\n        this._first = path;\n      } else {\n        this.dealias(size - 1).setTail(path);\n      }\n      size += 1;\n      do {\n        const tail = path.tail();\n        if (!tail.isEmpty()) {\n          path = tail;\n          size += 1;\n        } else {\n          break;\n        }\n      } while (true);\n      this._last = path;\n      this._size = size;\n    }\n  }\n\n  pop(): UriPath {\n    const size = this._size;\n    const aliased = this._aliased;\n    if (size === 0) {\n      throw new Error(\"Empty UriPath\");\n    } else if (size === 1) {\n      const first = this._first;\n      this._first = first.tail();\n      if (first.tail().isEmpty()) {\n        this._last = null;\n      }\n      this._size = size - 1;\n      if (aliased > 0) {\n        this._aliased = aliased - 1;\n      }\n      return first;\n    } else {\n      const last = this.dealias(size - 2);\n      last.setTail(Uri.Path.empty());\n      this._last = last;\n      this._size = size - 1;\n      this._aliased = aliased - 1;\n      return last.tail();\n    }\n  }\n\n  /** @hidden */\n  dealias(n: number): UriPath {\n    let i = 0;\n    let xi = null as UriPath | null;\n    let xs = this._first;\n    if (this._aliased <= n) {\n      while (i < this._aliased) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n      while (i <= n) {\n        const xn = xs.dealias();\n        if (i === 0) {\n          this._first = xn;\n        } else {\n          xi!.setTail(xn);\n        }\n        xi = xn;\n        xs = xs.tail();\n        i += 1;\n      }\n      if (i === this._size) {\n        this._last = xi;\n      }\n      this._aliased = i;\n    } else if (n === 0) {\n      xi = this._first;\n    } else if (n === this._size - 1) {\n      xi = this._last;\n    } else {\n      while (i <= n) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n    }\n    return xi!;\n  }\n}\nUri.PathBuilder = UriPathBuilder;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheSet} from \"@swim/util\";\nimport {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriQueryBuilder} from \"./UriQueryBuilder\";\n\nexport type AnyUriQuery = UriQuery | {[key: string]: string} | string;\n\nexport abstract class UriQuery implements Comparable<UriQuery>, HashCode, Debug, Display {\n  /** @hidden */\n  _hashCode?: number;\n\n  abstract isDefined(): boolean;\n\n  abstract isEmpty(): boolean;\n\n  get length(): number {\n    let n = 0;\n    let query = this as UriQuery;\n    while (!query.isEmpty()) {\n      n += 1;\n      query = query.tail();\n    }\n    return n;\n  }\n\n  abstract head(): [string | null, string];\n\n  abstract key(): string | null;\n\n  abstract value(): string;\n\n  abstract tail(): UriQuery;\n\n  /** @hidden */\n  abstract setTail(tail: UriQuery): void;\n\n  /** @hidden */\n  abstract dealias(): UriQuery;\n\n  has(key: string): boolean {\n    let query = this as UriQuery;\n    while (!query.isEmpty()) {\n      if (key === query.key()) {\n        return true;\n      }\n      query = query.tail();\n    }\n    return false;\n  }\n\n  get(key: string): string | undefined {\n    let query = this as UriQuery;\n    while (!query.isEmpty()) {\n      if (key === query.key()) {\n        return query.value();\n      }\n      query = query.tail();\n    }\n    return void 0;\n  }\n\n  updated(key: string, value: string): UriQuery {\n    let query = this as UriQuery;\n    const builder = new Uri.QueryBuilder();\n    let updated = false;\n    while (!query.isEmpty()) {\n      if (key === query.key()) {\n        builder.addParam(key, value);\n        updated = true;\n      } else {\n        builder.addParam(query.key(), query.value());\n      }\n      query = query.tail();\n    }\n    if (!updated) {\n      builder.addParam(key, value);\n    }\n    return builder.bind();\n  }\n\n  removed(key: string): UriQuery {\n    let query = this as UriQuery;\n    const builder = new Uri.QueryBuilder();\n    let updated = false;\n    while (!query.isEmpty()) {\n      if (key === query.key()) {\n        updated = true;\n      } else {\n        builder.addParam(query.key(), query.value());\n      }\n      query = query.tail();\n    }\n    if (updated) {\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  appended(key: string | null, value: string): UriQuery;\n  appended(params: AnyUriQuery): UriQuery;\n  appended(key: AnyUriQuery | null, value?: string): UriQuery {\n    const builder = new Uri.QueryBuilder();\n    builder.addQuery(this);\n    builder.add(key as any, value as any);\n    return builder.bind();\n  }\n\n  prepended(key: string | null, value: string): UriQuery;\n  prepended(params: AnyUriQuery): UriQuery;\n  prepended(key: AnyUriQuery | null, value?: string): UriQuery {\n    const builder = new Uri.QueryBuilder();\n    builder.add(key as any, value as any);\n    builder.addQuery(this);\n    return builder.bind();\n  }\n\n  toAny(params?: {[key: string]: string}): {[key: string]: string} | undefined {\n    if (this.isDefined()) {\n      params = params || {};\n      let query = this as UriQuery;\n      let i = 0;\n      while (!query.isEmpty()) {\n        const key = query.key();\n        if (key !== null) {\n          params[key] = query.value();\n        } else {\n          params[\"$\" + i] = query.value();\n        }\n        query = query.tail();\n        i += 1;\n      }\n    }\n    return params;\n  }\n\n  compareTo(that: UriQuery): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriQuery) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    let query = this as UriQuery;\n    let first = true;\n    while (!query.isEmpty()) {\n      if (!first) {\n        output = output.write(38/*'&'*/);\n      } else {\n        first = false;\n      }\n      const key = query.key();\n      if (key !== null) {\n        Uri.writeParam(key, output);\n        output = output.write(61/*'='*/);\n      }\n      Uri.writeQuery(query.value(), output);\n      query = query.tail();\n    }\n  }\n\n  abstract toString(): string;\n\n  private static _undefined: UriQuery;\n\n  private static _keyCache: HashGenCacheSet<string>;\n\n  static builder(): UriQueryBuilder {\n    return new Uri.QueryBuilder();\n  }\n\n  static undefined(): UriQuery {\n    if (UriQuery._undefined === void 0) {\n      UriQuery._undefined = new Uri.QueryUndefined();\n    }\n    return UriQuery._undefined;\n  }\n\n  static param(value: string, tail?: UriQuery): UriQuery;\n  static param(key: string | null, value: string, tail?: UriQuery): UriQuery;\n  static param(key: string | null, value?: UriQuery | string, tail?: UriQuery): UriQuery {\n    if (tail === void 0) {\n      tail = value as UriQuery | undefined;\n      value = key!;\n      key = null;\n    } else if (key !== null) {\n      key = this.cacheKey(key);\n    }\n    if (tail === void 0) {\n      tail = UriQuery.undefined();\n    }\n    return new Uri.QueryParam(key, value as string, tail);\n  }\n\n  static from(key: string | null, value: string): UriQuery;\n  static from(params: AnyUriQuery): UriQuery;\n  static from(key: AnyUriQuery | null, value?: string): UriQuery {\n    const builder = new Uri.QueryBuilder();\n    builder.add(key as any, value as any);\n    return builder.bind();\n  }\n\n  static fromAny(query: AnyUriQuery | null | undefined): UriQuery {\n    if (query === null || query === void 0) {\n      return UriQuery.undefined();\n    } else if (query instanceof UriQuery) {\n      return query;\n    } else if (typeof query === \"object\") {\n      const builder = new Uri.QueryBuilder();\n      builder.add(query);\n      return builder.bind();\n    } else if (typeof query === \"string\") {\n      return UriQuery.parse(query);\n    } else {\n      throw new TypeError(\"\" + query);\n    }\n  }\n\n  static parse(string: string): UriQuery {\n    return Uri.standardParser().parseQueryString(string);\n  }\n\n  /** @hidden */\n  static keyCache(): HashGenCacheSet<string> {\n    if (UriQuery._keyCache === void 0) {\n      const keyCacheSize = 64;\n      UriQuery._keyCache = new HashGenCacheSet<string>(keyCacheSize);\n    }\n    return UriQuery._keyCache;\n  }\n\n  /** @hidden */\n  static cacheKey(key: string): string {\n    if (key.length <= 32) {\n      return UriQuery.keyCache().put(key);\n    } else {\n      return key;\n    }\n  }\n}\nUri.Query = UriQuery;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriQuery} from \"./UriQuery\";\n\n/** @hidden */\nexport class UriQueryParam extends UriQuery {\n  /** @hidden */\n  readonly _key: string | null;\n  /** @hidden */\n  _value: string;\n  /** @hidden */\n  _tail: UriQuery;\n  /** @hidden */\n  _string?: string;\n\n  constructor(key: string | null, value: string, tail: UriQuery) {\n    super();\n    this._key = key;\n    this._value = value;\n    this._tail = tail;\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  head(): [string | null, string] {\n    return [this._key, this._value];\n  }\n\n  key(): string | null {\n    return this._key;\n  }\n\n  value(): string {\n    return this._value;\n  }\n\n  tail(): UriQuery {\n    return this._tail;\n  }\n\n  /** @hidden */\n  setTail(tail: UriQuery): void {\n    this._tail = tail;\n  }\n\n  /** @hidden */\n  dealias(): UriQuery {\n    return new UriQueryParam(this._key, this._value, this._tail);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriQuery\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/) .display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      super.display(output);\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n}\nUri.QueryParam = UriQueryParam;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriQuery, UriQuery} from \"./UriQuery\";\n\n/** @hidden */\nexport class UriQueryUndefined extends UriQuery {\n  isDefined(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  head(): [string | null, string] {\n    throw new Error(\"Undefined Query\");\n  }\n\n  key(): string | null {\n    throw new Error(\"Undefined Query\");\n  }\n\n  value(): string {\n    throw new Error(\"Undefined Query\");\n  }\n\n  tail(): UriQuery {\n    throw new Error(\"Undefined Query\");\n  }\n\n  /** @hidden */\n  setTail(tail: UriQuery): void {\n    throw new Error(\"Undefined Query\");\n  }\n\n  /** @hidden */\n  dealias(): UriQuery {\n    return this;\n  }\n\n  updated(key: string, value: string): UriQuery {\n    return UriQuery.param(key, value, this);\n  }\n\n  removed(key: string): UriQuery {\n    return this;\n  }\n\n  appended(key: string | null, value: string): UriQuery;\n  appended(params: AnyUriQuery): UriQuery;\n  appended(key: AnyUriQuery | null, value?: string): UriQuery {\n    return UriQuery.from(key as any, value as any);\n  }\n\n  prepended(key: string | null, value: string): UriQuery;\n  prepended(params: AnyUriQuery): UriQuery;\n  prepended(key: AnyUriQuery | null, value?: string): UriQuery {\n    return UriQuery.from(key as any, value as any);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriQuery\").write(46/*'.'*/).write(\"undefined\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    // nop\n  }\n\n  toString(): string {\n    return \"\";\n  }\n}\nUri.QueryUndefined = UriQueryUndefined;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PairBuilder} from \"@swim/util\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriQuery, UriQuery} from \"./UriQuery\";\n\nexport class UriQueryBuilder implements PairBuilder<string | null, string, UriQuery> {\n  /** @hidden */\n  _first: UriQuery;\n  /** @hidden */\n  _last: UriQuery | null;\n  /** @hidden */\n  _size: number;\n  /** @hidden */\n  _aliased: number;\n\n  constructor() {\n    this._first = Uri.Query.undefined();\n    this._last = null;\n    this._size = 0;\n    this._aliased = 0;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  add(key: string | null, value: string): void;\n  add(params: AnyUriQuery): void;\n  add(key: AnyUriQuery | null, value?: string): void {\n    if (value !== void 0) {\n      this.addParam(key as string | null, value);\n    } else if (typeof key === \"string\") {\n      this.addParam(null, key);\n    } else if (key instanceof Uri.Query) {\n      this.addQuery(key);\n    } else {\n      const params = key!;\n      for (const k in params) {\n        let key = k as string | null;\n        const value = params[k];\n        if (k.charCodeAt(0) === 36/*'$'*/) {\n          key = null;\n        }\n        this.addParam(key, value);\n      }\n    }\n  }\n\n  bind(): UriQuery {\n    this._aliased = 0;\n    return this._first;\n  }\n\n  addParam(value: string): void;\n  addParam(key: string | null, value: string): void;\n  addParam(key: string | null, value?: string): void {\n    if (value === void 0) {\n      value = key!;\n      key = null;\n    }\n    const tail = Uri.Query.param(key, value, Uri.Query.undefined());\n    const size = this._size;\n    if (size === 0) {\n      this._first = tail;\n    } else {\n      this.dealias(size - 1).setTail(tail);\n    }\n    this._last = tail;\n    this._size = size + 1;\n    this._aliased += 1;\n  }\n\n  addQuery(query: UriQuery): void {\n    if (!query.isEmpty()) {\n      let size = this._size;\n      if (size === 0) {\n        this._first = query;\n      } else {\n        this.dealias(size - 1).setTail(query);\n      }\n      size += 1;\n      do {\n        const tail = query.tail();\n        if (!tail.isEmpty()) {\n          query = tail;\n          size += 1;\n        } else {\n          break;\n        }\n      } while (true);\n      this._last = query;\n      this._size = size;\n    }\n  }\n\n  /** @hidden */\n  dealias(n: number): UriQuery {\n    let i = 0;\n    let xi = null as UriQuery | null;\n    let xs = this._first;\n    if (this._aliased <= n) {\n      while (i < this._aliased) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n      while (i <= n) {\n        const xn = xs.dealias();\n        if (i === 0) {\n          this._first = xn;\n        } else {\n          xi!.setTail(xn);\n        }\n        xi = xn;\n        xs = xs.tail();\n        i += 1;\n      }\n      if (i === this._size) {\n        this._last = xi;\n      }\n      this._aliased = i;\n    } else if (n === 0) {\n      xi = this._first;\n    } else if (n === this._size - 1) {\n      xi = this._last;\n    } else {\n      while (i <= n) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n    }\n    return xi!;\n  }\n}\nUri.QueryBuilder = UriQueryBuilder;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriFragment = UriFragment | string;\n\nexport class UriFragment implements Comparable<UriFragment>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _identifier: string | null;\n  /** @hidden */\n  _string?: string;\n\n  /** @hidden */\n  constructor(identifier: string | null) {\n    this._identifier = identifier;\n  }\n\n  isDefined(): boolean {\n    return this._identifier !== null;\n  }\n\n  identifier(): string | null {\n    return this._identifier;\n  }\n\n  toAny(): string | undefined {\n    return this._identifier !== null ? this._identifier : void 0;\n  }\n\n  compareTo(that: UriFragment): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriFragment) {\n      return this._identifier === that._identifier;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.hash(this._identifier);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriFragment\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else if (this._identifier !== null) {\n      Uri.writeFragment(this._identifier, output);\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n\n  private static _undefined?: UriFragment;\n\n  private static _cache?: HashGenCacheMap<string, UriFragment>;\n\n  static undefined(): UriFragment {\n    if (UriFragment._undefined === void 0) {\n      UriFragment._undefined = new UriFragment(null);\n    }\n    return UriFragment._undefined;\n  }\n\n  static from(identifier: string | null): UriFragment {\n    if (identifier !== null) {\n      const cache = UriFragment.cache();\n      const fragment = cache.get(identifier);\n      if (fragment !== void 0) {\n        return fragment;\n      } else {\n        return cache.put(identifier, new UriFragment(identifier));\n      }\n    } else {\n      return UriFragment.undefined();\n    }\n  }\n\n  static fromAny(fragment: AnyUriFragment | null | undefined): UriFragment {\n    if (fragment === null || fragment === void 0) {\n      return UriFragment.undefined();\n    } else if (fragment instanceof UriFragment) {\n      return fragment;\n    } else if (typeof fragment === \"string\") {\n      return UriFragment.parse(fragment);\n    } else {\n      throw new TypeError(\"\" + fragment);\n    }\n  }\n\n  static parse(string: string): UriFragment {\n    return Uri.standardParser().parseFragmentString(string);\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheMap<string, UriFragment> {\n    if (UriFragment._cache === void 0) {\n      const cacheSize = 32;\n      UriFragment._cache = new HashGenCacheMap<string, UriFragment>(cacheSize);\n    }\n    return UriFragment._cache;\n  }\n}\nUri.Fragment = UriFragment;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriScheme} from \"./UriScheme\";\nimport {UriAuthority} from \"./UriAuthority\";\nimport {UriUser} from \"./UriUser\";\nimport {UriHost} from \"./UriHost\";\nimport {UriPort} from \"./UriPort\";\nimport {UriPath} from \"./UriPath\";\nimport {UriPathBuilder} from \"./UriPathBuilder\";\nimport {UriQuery} from \"./UriQuery\";\nimport {UriQueryBuilder} from \"./UriQueryBuilder\";\nimport {UriFragment} from \"./UriFragment\";\nimport {UriAbsoluteParser} from \"./UriAbsoluteParser\";\nimport {UriSchemeParser} from \"./UriSchemeParser\";\nimport {UriAuthorityParser} from \"./UriAuthorityParser\";\nimport {UriUserParser} from \"./UriUserParser\";\nimport {UriHostParser} from \"./UriHostParser\";\nimport {UriHostAddressParser} from \"./UriHostAddressParser\";\nimport {UriHostLiteralParser} from \"./UriHostLiteralParser\";\nimport {UriPortParser} from \"./UriPortParser\";\nimport {UriPathParser} from \"./UriPathParser\";\nimport {UriQueryParser} from \"./UriQueryParser\";\nimport {UriFragmentParser} from \"./UriFragmentParser\";\n\nexport class UriParser {\n  absolute(scheme?: UriScheme, authority?: UriAuthority, path?: UriPath,\n           query?: UriQuery, fragment?: UriFragment): Uri {\n    return Uri.from(scheme, authority, path, query, fragment);\n  }\n\n  scheme(name: string): UriScheme {\n    return Uri.Scheme.from(name);\n  }\n\n  authority(user?: UriUser, host?: UriHost, port?: UriPort): UriAuthority {\n    return Uri.Authority.from(user, host, port);\n  }\n\n  user(username: string | null, password?: string | null): UriUser {\n    return Uri.User.from(username, password);\n  }\n\n  hostName(address: string): UriHost {\n    return Uri.Host.from(address);\n  }\n\n  hostIPv4(address: string): UriHost {\n    return Uri.Host.ipv4(address);\n  }\n\n  hostIPv6(address: string): UriHost {\n    return Uri.Host.ipv6(address);\n  }\n\n  port(number: number): UriPort {\n    return Uri.Port.from(number);\n  }\n\n  pathEmpty(): UriPath {\n    return Uri.Path.empty();\n  }\n\n  pathBuilder(): UriPathBuilder {\n    return new Uri.PathBuilder();\n  }\n\n  queryBuilder(): UriQueryBuilder {\n    return new Uri.QueryBuilder();\n  }\n\n  fragment(identifier: string | null): UriFragment {\n    return Uri.Fragment.from(identifier);\n  }\n\n  absoluteParser(): Parser<Uri> {\n    return new UriParser.AbsoluteParser(this);\n  }\n\n  parseAbsolute(input: Input): Parser<Uri> {\n    return UriParser.AbsoluteParser.parse(input, this);\n  }\n\n  parseAbsoluteString(string: string): Uri {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseAbsolute(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  schemeParser(): Parser<UriScheme> {\n    return new UriParser.SchemeParser(this);\n  }\n\n  parseScheme(input: Input): Parser<UriScheme> {\n    return UriParser.SchemeParser.parse(input, this);\n  }\n\n  parseSchemeString(string: string): UriScheme {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseScheme(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  authorityParser(): Parser<UriAuthority> {\n    return new UriParser.AuthorityParser(this);\n  }\n\n  parseAuthority(input: Input): Parser<UriAuthority> {\n    return UriParser.AuthorityParser.parse(input, this);\n  }\n\n  parseAuthorityString(string: string): UriAuthority {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseAuthority(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  userParser(): Parser<UriUser> {\n    return new UriParser.UserParser(this);\n  }\n\n  parseUser(input: Input): Parser<UriUser> {\n    return UriParser.UserParser.parse(input, this);\n  }\n\n  parseUserString(string: string): UriUser {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseUser(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  hostParser(): Parser<UriHost> {\n    return new UriParser.HostParser(this);\n  }\n\n  parseHost(input: Input): Parser<UriHost> {\n    return UriParser.HostParser.parse(input, this);\n  }\n\n  parseHostString(string: string): UriHost {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseHost(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  hostAddressParser(): Parser<UriHost> {\n    return new UriParser.HostAddressParser(this);\n  }\n\n  parseHostAddress(input: Input): Parser<UriHost> {\n    return UriParser.HostAddressParser.parse(input, this);\n  }\n\n  hostLiteralParser(): Parser<UriHost> {\n    return new UriParser.HostLiteralParser(this);\n  }\n\n  parseHostLiteral(input: Input): Parser<UriHost> {\n    return UriParser.HostLiteralParser.parse(input, this);\n  }\n\n  portParser(): Parser<UriPort> {\n    return new UriParser.PortParser(this);\n  }\n\n  parsePort(input: Input): Parser<UriPort> {\n    return UriParser.PortParser.parse(input, this);\n  }\n\n  parsePortString(string: string): UriPort {\n    const input = Unicode.stringInput(string);\n    let parser = this.parsePort(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  pathParser(builder?: UriPathBuilder): Parser<UriPath> {\n    return new UriParser.PathParser(this, builder);\n  }\n\n  parsePath(input: Input, builder?: UriPathBuilder): Parser<UriPath> {\n    return UriParser.PathParser.parse(input, this, builder);\n  }\n\n  parsePathString(string: string): UriPath {\n    const input = Unicode.stringInput(string);\n    let parser = this.parsePath(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  queryParser(builder?: UriQueryBuilder): Parser<UriQuery> {\n    return new UriParser.QueryParser(this, builder);\n  }\n\n  parseQuery(input: Input, builder?: UriQueryBuilder): Parser<UriQuery> {\n    return UriParser.QueryParser.parse(input, this, builder);\n  }\n\n  parseQueryString(string: string): UriQuery {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseQuery(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  fragmentParser(): Parser<UriFragment> {\n    return new UriParser.FragmentParser(this);\n  }\n\n  parseFragment(input: Input): Parser<UriFragment> {\n    return UriParser.FragmentParser.parse(input, this);\n  }\n\n  parseFragmentString(string: string): UriFragment {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseFragment(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static AbsoluteParser: typeof UriAbsoluteParser; // defined by UriAbsoluteParser\n  /** @hidden */\n  static SchemeParser: typeof UriSchemeParser; // defined by UriSchemeParser\n  /** @hidden */\n  static AuthorityParser: typeof UriAuthorityParser; // defined by UriAuthorityParser\n  /** @hidden */\n  static UserParser: typeof UriUserParser; // defined by UriUserParser\n  /** @hidden */\n  static HostParser: typeof UriHostParser; // defined by UriHostParser\n  /** @hidden */\n  static HostAddressParser: typeof UriHostAddressParser; // defined by UriHostAddressParser\n  /** @hidden */\n  static HostLiteralParser: typeof UriHostLiteralParser; // defined by UriHostLiteralParser\n  /** @hidden */\n  static PortParser: typeof UriPortParser; // defined by UriPortParser\n  /** @hidden */\n  static PathParser: typeof UriPathParser; // defined by UriPathParser\n  /** @hidden */\n  static QueryParser: typeof UriQueryParser; // defined by UriQueryParser\n  /** @hidden */\n  static FragmentParser: typeof UriFragmentParser; // defined by UriFragmentParser\n}\nUri.Parser = UriParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriScheme} from \"./UriScheme\";\nimport {UriAuthority} from \"./UriAuthority\";\nimport {UriPath} from \"./UriPath\";\nimport {UriQuery} from \"./UriQuery\";\nimport {UriFragment} from \"./UriFragment\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriAbsoluteParser extends Parser<Uri> {\n  private readonly uri: UriParser;\n  private readonly schemeParser: Parser<UriScheme> | undefined;\n  private readonly authorityParser: Parser<UriAuthority> | undefined;\n  private readonly pathParser: Parser<UriPath> | undefined;\n  private readonly queryParser: Parser<UriQuery> | undefined;\n  private readonly fragmentParser: Parser<UriFragment> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, schemeParser?: Parser<UriScheme>,\n              authorityParser?: Parser<UriAuthority>, pathParser?: Parser<UriPath>,\n              queryParser?: Parser<UriQuery>, fragmentParser?: Parser<UriFragment>, step?: number) {\n    super();\n    this.uri = uri;\n    this.schemeParser = schemeParser;\n    this.authorityParser = authorityParser;\n    this.pathParser = pathParser;\n    this.queryParser = queryParser;\n    this.fragmentParser = fragmentParser;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<Uri> {\n    return UriAbsoluteParser.parse(input, this.uri, this.schemeParser, this.authorityParser,\n                                   this.pathParser, this.queryParser, this.fragmentParser, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, schemeParser?: Parser<UriScheme>,\n               authorityParser?: Parser<UriAuthority>, pathParser?: Parser<UriPath>,\n               queryParser?: Parser<UriQuery>, fragmentParser?: Parser<UriFragment>,\n               step: number = 1): Parser<Uri> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        const look = input.clone();\n        while (look.isCont() && (c = look.head(), Uri.isSchemeChar(c))) {\n          look.step();\n        }\n        if (look.isCont() && c === 58/*':'*/) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (input.isDone()) {\n        step = 3;\n      }\n    }\n    if (step === 2) {\n      if (schemeParser === void 0) {\n        schemeParser = uri.parseScheme(input);\n      } else {\n        schemeParser = schemeParser.feed(input);\n      }\n      if (schemeParser.isDone()) {\n        if (input.isCont() && input.head() === 58/*':'*/) {\n          input = input.step();\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(58/*':'*/, input));\n        }\n      } else if (schemeParser.isError()) {\n        return schemeParser.asError();\n      }\n    }\n    if (step === 3) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 47/*'/'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c === 63/*'?'*/) {\n          input = input.step();\n          step = 7;\n        } else if (c === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else {\n          step = 6;\n        }\n      } else if (input.isDone()) {\n        return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && input.head() === 47/*'/'*/) {\n        input = input.step();\n        step = 5;\n      } else if (input.isCont()) {\n        const pathBuilder = uri.pathBuilder();\n        pathBuilder.addSlash();\n        pathParser = uri.parsePath(input, pathBuilder);\n        step = 6;\n      } else if (input.isDone()) {\n        return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                        void 0,\n                                        Uri.Path.slash()));\n      }\n    }\n    if (step === 5) {\n      if (authorityParser === void 0) {\n        authorityParser = uri.parseAuthority(input);\n      } else {\n        authorityParser = authorityParser.feed(input);\n      }\n      if (authorityParser.isDone()) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 63/*'?'*/) {\n            input = input.step();\n            step = 7;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 8;\n          } else {\n            step = 6;\n          }\n        } else if (input.isDone()) {\n          return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                          authorityParser !== void 0 ? authorityParser.bind() : void 0));\n        }\n      } else if (authorityParser.isError()) {\n        return authorityParser.asError();\n      }\n    }\n    if (step === 6) {\n      if (pathParser === void 0) {\n        pathParser = uri.parsePath(input);\n      } else {\n        pathParser = pathParser.feed(input);\n      }\n      if (pathParser.isDone()) {\n        if (input.isCont() && input.head() === 63/*'?'*/) {\n          input = input.step();\n          step = 7;\n        } else if (input.isCont() && input.head() === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                          authorityParser !== void 0 ? authorityParser.bind() : void 0,\n                                          pathParser.bind()));\n        }\n      } else if (pathParser.isError()) {\n        return pathParser.asError();\n      }\n    }\n    if (step === 7) {\n      if (queryParser === void 0) {\n        queryParser = uri.parseQuery(input);\n      } else {\n        queryParser = queryParser.feed(input);\n      }\n      if (queryParser.isDone()) {\n        if (input.isCont() && input.head() === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                          authorityParser !== void 0 ? authorityParser.bind() : void 0,\n                                          pathParser !== void 0 ? pathParser.bind() : void 0,\n                                          queryParser.bind()));\n        }\n      } else if (queryParser.isError()) {\n        return queryParser.asError();\n      }\n    }\n    if (step === 8) {\n      if (fragmentParser === void 0) {\n        fragmentParser = uri.parseFragment(input);\n      } else {\n        fragmentParser = fragmentParser.feed(input);\n      }\n      if (fragmentParser.isDone()) {\n        return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                        authorityParser !== void 0 ? authorityParser.bind() : void 0,\n                                        pathParser !== void 0 ? pathParser.bind() : void 0,\n                                        queryParser !== void 0 ? queryParser.bind() : void 0,\n                                        fragmentParser.bind()));\n      } else if (fragmentParser.isError()) {\n        return fragmentParser.asError();\n      }\n    }\n    return new UriAbsoluteParser(uri, schemeParser, authorityParser, pathParser,\n                                 queryParser, fragmentParser, step);\n  }\n}\nUriParser.AbsoluteParser = UriAbsoluteParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriScheme} from \"./UriScheme\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriSchemeParser extends Parser<UriScheme> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriScheme> {\n    return UriSchemeParser.parse(input, this.uri, this.output, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>, step: number = 1): Parser<UriScheme> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && (c = input.head(), Uri.isAlpha(c))) {\n        input = input.step();\n        output = output || Utf8.decodedString();\n        output = output.write(Uri.toLowerCase(c));\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"scheme\", input));\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Uri.isSchemeChar(c))) {\n        input = input.step();\n        output!.write(Uri.toLowerCase(c));\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(uri.scheme(output!.bind()));\n      }\n    }\n    return new UriSchemeParser(uri, output, step);\n  }\n}\nUriParser.SchemeParser = UriSchemeParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Diagnostic, Parser} from \"@swim/codec\";\nimport {UriAuthority} from \"./UriAuthority\";\nimport {UriUser} from \"./UriUser\";\nimport {UriHost} from \"./UriHost\";\nimport {UriPort} from \"./UriPort\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriAuthorityParser extends Parser<UriAuthority> {\n  private readonly uri: UriParser;\n  private readonly userParser: Parser<UriUser> | undefined;\n  private readonly hostParser: Parser<UriHost> | undefined;\n  private readonly portParser: Parser<UriPort> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, userParser?: Parser<UriUser>, hostParser?: Parser<UriHost>,\n              portParser?: Parser<UriPort>, step?: number) {\n    super();\n    this.uri = uri;\n    this.userParser = userParser;\n    this.hostParser = hostParser;\n    this.portParser = portParser;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriAuthority> {\n    return UriAuthorityParser.parse(input, this.uri, this.userParser, this.hostParser,\n                                    this.portParser, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, userParser?: Parser<UriUser>, hostParser?: Parser<UriHost>,\n               portParser?: Parser<UriPort>, step: number = 1): Parser<UriAuthority> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        const look = input.clone();\n        while (look.isCont() && (c = look.head(), c !== 64/*'@'*/ && c !== 47/*'/'*/)) {\n          look.step();\n        }\n        if (look.isCont() && c === 64/*'@'*/) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (input.isDone()) {\n        step = 3;\n      }\n    }\n    if (step === 2) {\n      if (userParser === void 0) {\n        userParser = uri.parseUser(input);\n      } else {\n        userParser = userParser.feed(input);\n      }\n      if (userParser.isDone()) {\n        if (input.isCont() && input.head() === 64/*'@'*/) {\n          input = input.step();\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(64/*'@'*/, input));\n        }\n      } else if (userParser.isError()) {\n        return userParser.asError();\n      }\n    }\n    if (step === 3) {\n      if (hostParser === void 0) {\n        hostParser = uri.parseHost(input);\n      } else {\n        hostParser = hostParser.feed(input);\n      }\n      if (hostParser.isDone()) {\n        if (input.isCont() && input.head() === 58/*':'*/) {\n          input = input.step();\n          step = 4;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.authority(userParser !== void 0 ? userParser.bind() : void 0,\n                                           hostParser.bind()));\n        }\n      } else if (hostParser.isError()) {\n        return hostParser.asError();\n      }\n    }\n    if (step === 4) {\n      if (portParser === void 0) {\n        portParser = uri.parsePort(input);\n      } else {\n        portParser = portParser.feed(input);\n      }\n      if (portParser.isDone()) {\n        return Parser.done(uri.authority(userParser !== void 0 ? userParser.bind() : void 0,\n                                         hostParser!.bind(),\n                                         portParser.bind()));\n      } else if (portParser.isError()) {\n        return portParser.asError();\n      }\n    }\n    return new UriAuthorityParser(uri, userParser, hostParser, portParser, step);\n  }\n}\nUriParser.AuthorityParser = UriAuthorityParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriUser} from \"./UriUser\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriUserParser extends Parser<UriUser> {\n  private readonly uri: UriParser;\n  private readonly usernameOutput: Output<string> | undefined;\n  private readonly passwordOutput: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, usernameOutput?: Output<string>,\n              passwordOutput?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.usernameOutput = usernameOutput;\n    this.passwordOutput = passwordOutput;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriUser> {\n    return UriUserParser.parse(input, this.uri, this.usernameOutput,\n                               this.passwordOutput, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, usernameOutput?: Output<string>,\n               passwordOutput?: Output<string>, c1: number = 0, step: number = 1): Parser<UriUser> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        usernameOutput = usernameOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isUserChar(c))) {\n          input = input.step();\n          usernameOutput!.write(c);\n        }\n        if (input.isCont() && c === 58/*':'*/) {\n          input = input.step();\n          step = 4;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.user(usernameOutput.bind()));\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          usernameOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 4) {\n        passwordOutput = passwordOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isUserInfoChar(c))) {\n          input = input.step();\n          passwordOutput.write(c);\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 5;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.user(usernameOutput!.bind(), passwordOutput.bind()));\n        }\n      }\n      if (step === 5) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          passwordOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 4;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriUserParser(uri, usernameOutput, passwordOutput, c1, step);\n  }\n}\nUriParser.UserParser = UriUserParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {UriHost} from \"./UriHost\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n\n  constructor(uri: UriParser) {\n    super();\n    this.uri = uri;\n  }\n\n  feed(input: Input): Parser<UriHost> {\n    return UriHostParser.parse(input, this.uri);\n  }\n\n  static parse(input: Input, uri: UriParser): Parser<UriHost> {\n    if (input.isCont()) {\n      const c = input.head();\n      if (c === 91/*'['*/) {\n        return uri.parseHostLiteral(input);\n      } else {\n        return uri.parseHostAddress(input);\n      }\n    } else if (input.isDone()) {\n      return Parser.done(uri.hostName(\"\"));\n    }\n    return new UriHostParser(uri);\n  }\n}\nUriParser.HostParser = UriHostParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base10, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostAddressParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly x: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, c1?: number, x?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.c1 = c1;\n    this.x = x;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriHost> {\n    return UriHostAddressParser.parse(input, this.uri, this.output, this.c1, this.x, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>,\n               c1: number = 0, x: number = 0, step: number = 1): Parser<UriHost> {\n    let c = 0;\n    output = output || Utf8.decodedString();\n    while (step <= 4) {\n      while (input.isCont() && (c = input.head(), Base10.isDigit(c))) {\n        input = input.step();\n        output = output.write(c);\n        x = 10 * x + Base10.decodeDigit(c);\n      }\n      if (input.isCont()) {\n        if (c === 46/*'.'*/ && step < 4 && x <= 255) {\n          input = input.step();\n          output = output.write(c);\n          x = 0;\n          step += 1;\n        } else if (!Uri.isHostChar(c) && c !== 37/*'%'*/ && step === 4 && x <= 255) {\n          return Parser.done(uri.hostIPv4(output.bind()));\n        } else {\n          x = 0;\n          step = 5;\n          break;\n        }\n      } else if (!input.isEmpty()) {\n        if (step === 4 && x <= 255) {\n          return Parser.done(uri.hostIPv4(output.bind()));\n        } else {\n          return Parser.done(uri.hostName(output.bind()));\n        }\n      } else {\n        break;\n      }\n    }\n    do {\n      if (step === 5) {\n        while (input.isCont() && (c = input.head(), Uri.isHostChar(c))) {\n          input = input.step();\n          output!.write(Uri.toLowerCase(c));\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.hostName(output!.bind()));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 7;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 7) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          output!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 5;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriHostAddressParser(uri, output, c1, x, step);\n  }\n}\nUriParser.HostAddressParser = UriHostAddressParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostLiteralParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriHost> {\n    return UriHostLiteralParser.parse(input, this.uri, this.output, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>, step: number = 1): Parser<UriHost> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 91/*'['*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(91/*'['*/, input));\n      }\n    }\n    if (step === 2) {\n      output = output || Utf8.decodedString();\n      while (input.isCont() && (c = input.head(), Uri.isHostChar(c) || c === 58/*':'*/)) {\n        input = input.step();\n        output = output.write(Uri.toLowerCase(c));\n      }\n      if (input.isCont() && c === 93/*']'*/) {\n        input = input.step();\n        return Parser.done(uri.hostIPv6(output.bind()));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(93/*']'*/, input));\n      }\n    }\n    return new UriHostLiteralParser(uri, output, step);\n  }\n}\nUriParser.HostLiteralParser = UriHostLiteralParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Base10} from \"@swim/codec\";\nimport {UriPort} from \"./UriPort\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriPortParser extends Parser<UriPort> {\n  private readonly uri: UriParser;\n  private readonly number: number | undefined;\n\n  constructor(uri: UriParser, number?: number) {\n    super();\n    this.uri = uri;\n    this.number = number;\n  }\n\n  feed(input: Input): Parser<UriPort> {\n    return UriPortParser.parse(input, this.uri, this.number);\n  }\n\n  static parse(input: Input, uri: UriParser, number: number = 0): Parser<UriPort> {\n    let c = 0;\n    while (input.isCont() && (c = input.head(), Base10.isDigit(c))) {\n      input = input.step();\n      number = 10 * number + Base10.decodeDigit(c);\n    }\n    if (!input.isEmpty()) {\n      return Parser.done(uri.port(number));\n    }\n    return new UriPortParser(uri, number);\n  }\n}\nUriParser.PortParser = UriPortParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriPath} from \"./UriPath\";\nimport {UriPathBuilder} from \"./UriPathBuilder\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriPathParser extends Parser<UriPath> {\n  private readonly uri: UriParser;\n  private readonly builder: UriPathBuilder | undefined;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, builder?: UriPathBuilder, output?: Output<string>,\n              c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.builder = builder;\n    this.output = output;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriPath> {\n    return UriPathParser.parse(input, this.uri, this.builder, this.output, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, builder?: UriPathBuilder, output?: Output<string>,\n               c1: number = 0, step: number = 1): Parser<UriPath> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Uri.isPathChar(c))) {\n          output = output || Utf8.decodedString();\n          input = input.step();\n          output = output.write(c);\n        }\n        if (input.isCont() && c === 47/*'/'*/) {\n          input = input.step();\n          builder = builder || uri.pathBuilder();\n          if (output !== void 0) {\n            builder.addSegment(output.bind());\n            output = void 0;\n          }\n          builder.addSlash();\n          continue;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          if (output !== void 0) {\n            builder = builder || uri.pathBuilder();\n            builder.addSegment(output.bind());\n          }\n          if (builder !== void 0) {\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(uri.pathEmpty());\n          }\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          output = output || Utf8.decodedString();\n          input = input.step();\n          output = output.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriPathParser(uri, builder, output, c1, step);\n  }\n}\nUriParser.PathParser = UriPathParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriQuery} from \"./UriQuery\";\nimport {UriQueryBuilder} from \"./UriQueryBuilder\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriQueryParser extends Parser<UriQuery> {\n  private readonly uri: UriParser;\n  private readonly builder: UriQueryBuilder | undefined;\n  private readonly keyOutput: Output<string> | undefined;\n  private readonly valueOutput: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, builder?: UriQueryBuilder, keyOutput?: Output<string>,\n              valueOutput?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.builder = builder;\n    this.keyOutput = keyOutput;\n    this.valueOutput = valueOutput;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriQuery> {\n    return UriQueryParser.parse(input, this.uri, this.builder, this.keyOutput,\n                                this.valueOutput, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, builder?: UriQueryBuilder, keyOutput?: Output<string>,\n               valueOutput?: Output<string>, c1: number = 0, step: number = 1): Parser<UriQuery> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        keyOutput = keyOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isParamChar(c))) {\n          input = input.step();\n          keyOutput.write(c);\n        }\n        if (input.isCont() && c === 61/*'='*/) {\n          input = input.step();\n          step = 4;\n        } else if (input.isCont() && c === 38/*'&'*/) {\n          input = input.step();\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput.bind());\n          keyOutput = void 0;\n          continue;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput.bind());\n          return Parser.done(builder.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          keyOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 4) {\n        valueOutput = valueOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isParamChar(c) || c === 61/*'='*/)) {\n          input = input.step();\n          valueOutput.write(c);\n        }\n        if (input.isCont() && c === 38/*'&'*/) {\n          input = input.step();\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput!.bind(), valueOutput.bind());\n          keyOutput = void 0;\n          valueOutput = void 0;\n          step = 1;\n          continue;\n        } else if (input.isCont() && c === 38/*'%'*/) {\n          input = input.step();\n          step = 5;\n        } else if (!input.isEmpty()) {\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput!.bind(), valueOutput.bind());\n          return Parser.done(builder.bind());\n        }\n      }\n      if (step === 5) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          valueOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 4;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriQueryParser(uri, builder, keyOutput, valueOutput, c1, step);\n  }\n}\nUriParser.QueryParser = UriQueryParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriFragment} from \"./UriFragment\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriFragmentParser extends Parser<UriFragment> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriFragment> {\n    return UriFragmentParser.parse(input, this.uri, this.output, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>,\n               c1: number = 0, step: number = 1): Parser<UriFragment> {\n    let c = 0;\n    output = output || Utf8.decodedString();\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Uri.isFragmentChar(c))) {\n          input = input.step();\n          output = output.write(c);\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.fragment(output.bind()));\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          output = output.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriFragmentParser(uri, output, c1, step);\n  }\n}\nUriParser.FragmentParser = UriFragmentParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Form} from \"@swim/structure\";\nimport {Uri} from \"./Uri\";\n\n/** @hidden */\nexport class UriForm extends Form<Uri> {\n  /** @hidden */\n  readonly _unit: Uri | undefined;\n\n  constructor(unit?: Uri ) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): Uri | undefined;\n  unit(unit: Uri | undefined): Form<Uri>;\n  unit(unit?: Uri | undefined): Uri | undefined | Form<Uri> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new UriForm(unit);\n    }\n  }\n\n  mold(object: Uri, item?: Item): Item {\n    if (item === void 0) {\n      return Text.from(object.toString());\n    } else {\n      return item.concat(Text.from(object.toString()));\n    }\n  }\n\n  cast(item: Item, object?: Uri): Uri | undefined {\n    const value = item.target();\n    try {\n      const string = value.stringValue();\n      if (typeof string === \"string\") {\n        return Uri.parse(string);\n      }\n    } catch (error) {\n      // swallow\n    }\n    return void 0;\n  }\n}\nUri.Form = UriForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashGenCacheMap} from \"@swim/util\";\nimport {AnyUri, Uri} from \"./Uri\";\n\nexport class UriCache {\n  /** @hidden */\n  _base: Uri;\n  /** @hidden */\n  _resolveCache: HashGenCacheMap<Uri, Uri>;\n  /** @hidden */\n  _unresolveCache: HashGenCacheMap<Uri, Uri>;\n\n  constructor(base: Uri, size: number = 32) {\n    this._base = base;\n    this._resolveCache = new HashGenCacheMap(size);\n    this._unresolveCache = new HashGenCacheMap(size);\n  }\n\n  resolve(relative: AnyUri): Uri {\n    relative = Uri.fromAny(relative);\n    let absolute = this._resolveCache.get(relative);\n    if (absolute === undefined) {\n      absolute = this._base.resolve(relative);\n      this._resolveCache.put(relative, absolute);\n    }\n    return absolute;\n  }\n\n  unresolve(absolute: AnyUri): Uri {\n    absolute = Uri.fromAny(absolute);\n    let relative = this._unresolveCache.get(absolute);\n    if (relative === undefined) {\n      relative = this._base.unresolve(absolute);\n      this._unresolveCache.put(absolute, relative);\n    }\n    return relative;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport interface FromAny<T, U = T> {\n  fromAny(value: T | U): T;\n}\n\n/** @hidden */\nexport const FromAny = {\n  is<T, U = T>(object: unknown): object is FromAny<T, U> {\n    if (typeof object === \"object\" && object !== null || typeof object === \"function\") {\n      return typeof (object as FromAny<T, U>).fromAny === \"function\";\n    }\n    return false;\n  },\n};\n\nexport interface ToAny<T> {\n  toAny(): T;\n}\n\n/** @hidden */\nexport const ToAny = {\n  is<T>(object: unknown): object is ToAny<T> {\n    if (typeof object === \"object\" && object !== null) {\n      return typeof (object as ToAny<T>).toAny === \"function\";\n    }\n    return false;\n  },\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {InletOptions} from \"./Inlet\";\nimport {StreamletClass, AbstractStreamlet} from \"./AbstractStreamlet\";\n\nexport function In(name: string): PropertyDecorator;\nexport function In(options: InletOptions): PropertyDecorator;\nexport function In(target: unknown, key: string): void;\nexport function In(target: unknown, key?: string): PropertyDecorator | void {\n  if (arguments.length === 1) {\n    if (typeof target === \"string\") {\n      target = {name: target} as InletOptions;\n    }\n    return AbstractStreamlet.decorateInlet.bind(void 0, target as InletOptions);\n  } else {\n    AbstractStreamlet.decorateInlet({}, target as StreamletClass, key!);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {InoutletOptions} from \"./Inoutlet\";\nimport {StreamletClass, AbstractStreamlet} from \"./AbstractStreamlet\";\n\nexport function Inout(name: string): PropertyDecorator;\nexport function Inout(options: InoutletOptions): PropertyDecorator;\nexport function Inout(target: unknown, key: string): void;\nexport function Inout(target: unknown, key?: string): PropertyDecorator | void {\n  if (arguments.length === 1) {\n    if (typeof target === \"string\") {\n      target = {name: target} as InoutletOptions;\n    }\n    return AbstractStreamlet.decorateInoutlet.bind(void 0, target as InoutletOptions);\n  } else {\n    AbstractStreamlet.decorateInoutlet({}, target as StreamletClass, key!);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutletOptions} from \"./Outlet\";\nimport {StreamletClass, AbstractStreamlet} from \"./AbstractStreamlet\";\n\nexport function Out(name: string): PropertyDecorator;\nexport function Out(options: OutletOptions): PropertyDecorator;\nexport function Out(target: unknown, key: string): void;\nexport function Out(target: unknown, key?: string): PropertyDecorator | void {\n  if (arguments.length === 1) {\n    if (typeof target === \"string\") {\n      target = {name: target} as OutletOptions;\n    }\n    return AbstractStreamlet.decorateOutlet.bind(void 0, target as OutletOptions);\n  } else {\n    AbstractStreamlet.decorateOutlet({}, target as StreamletClass, key!);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Inlet} from \"./Inlet\";\nimport {Outlet} from \"./Outlet\";\nimport {StreamletContext} from \"./StreamletContext\";\nimport {StreamletScope} from \"./StreamletScope\";\n\n/**\n * Stateful node in a dataflow graph that uses the state of its [[Inlet\n * inlets]] to compute the state of its [[Outlet Outlets]].\n */\nexport interface Streamlet<I = unknown, O = I> extends StreamletScope<O> {\n  /**\n   * Returns the lexically scoped parent of this `Streamlet`.  Returns `null`\n   * if this `Streamlet` has no lexical parent.\n   */\n  streamletScope(): StreamletScope<O> | null;\n\n  /**\n   * Sets the lexically scoped parent of this `Streamlet`.\n   */\n  setStreamletScope(scope: StreamletScope<O> | null): void;\n\n  /**\n   * Returns the environment in which this `Streamlet` operates.\n   */\n  streamletContext(): StreamletContext | null;\n\n  /**\n   * Sets the environment in which this `Streamlet` operates.\n   */\n  setStreamletContext(context: StreamletContext | null): void;\n\n  /**\n   * Returns the `Inlet` to this `Streamlet` identified by the given `key`;\n   * returns `null` if this `Streamlet` has no such `Inlet`.\n   */\n  inlet(key: string): Inlet<I> | null;\n\n  /**\n   * Connects the `Inlet` of this `Streamlet`, identified by the given `key` to\n   * the `input` from which the `Inlet` should acquire its state.  Delegates to\n   * [[Inlet.bindInput]] on the identified `Inlet`.\n   *\n   * @throws `Error` if this `Streamlet` has no `Inlet` with the given `key`.\n   */\n  bindInput(key: string, input: Outlet<I>): void;\n\n  /**\n   * Disconnects the `Inlet` of this `Streamlet`, identified by the given\n   * `key`, from its [[Inlet.input input]] `Outlet`, if connected.  Delegates\n   * to [[Inlet.unbindInput]] on the identified `Inlet`.\n   *\n   * @throws `Error` if this `Streamlet` has no `Inlet` with the given `key`.\n   */\n  unbindInput(key: string): void;\n\n  /**\n   * Returns the `Outlet` of this `Streamlet` identified by the given `key`;\n   * returns `null` if this `Streamlet` has no such `Outlet`.\n   */\n  outlet(key: string): Outlet<O> | null;\n\n  /**\n   * Disconnects all `Inlet`s dominated by this `Streamlet` in the dataflow\n   * dependency graph.  Used to recursively clean up chains of combinators\n   * terminating at this `Streamlet`.\n   */\n  disconnectInputs(): void;\n\n  /**\n   * Disconnects all `Inlets`s dominated by this `Streamlet` in the dataflow\n   * graph.  Used to recursively clean up chains of combinators originating\n   * from this `Streamlet`.\n   */\n  disconnectOutputs(): void;\n\n  /**\n   * Marks this `Streamlet`—and all of its outlets—as having decoherent state.\n   * Decohering a `Streamlet` will recursively decohere all streamlets that\n   * transitively depend on the state of this `Streamlet`.  Decohering a\n   * `Streamlet` does not cause its state to be recomputed.  A subsequent\n   * [[recohere]] call will eventually make the state of the `Streamlet`\n   * coherent again.\n   */\n  decohere(): void;\n\n  /**\n   * Updates the state of this `Streamlet` to make it consistent with the\n   * target `version`.  The `Streamlet` only needs to update if its current\n   * `version` differs from the target `version`.  To update its state, the\n   * `Streamlet` first invokes [[Inlet.recohereOutput]] on each of its inlets,\n   * to ensure that its input states are coherent.  It then recomputes its own\n   * state in an implementation defined manner.  Finally, it invokes\n   * [[Outlet.recohereInput]] on its outlets, causing all transitively\n   * dependent streamlets to make their own states coherent again.\n   */\n  recohere(version: number): void;\n}\n\n/** @hidden */\nexport const Streamlet = {\n  is<I, O>(object: unknown): object is Streamlet<I, O> {\n    if (typeof object === \"object\" && object !== null) {\n      const streamlet = object as Streamlet<I, O>;\n      return typeof streamlet.streamletScope === \"function\"\n          && typeof streamlet.setStreamletScope === \"function\"\n          && typeof streamlet.streamletContext === \"function\"\n          && typeof streamlet.setStreamletContext === \"function\";\n    }\n    return false;\n  },\n};\n"]}