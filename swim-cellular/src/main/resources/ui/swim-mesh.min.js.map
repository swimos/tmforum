{"version":3,"sources":["../../../warp/main/Envelope.ts","../../../../../node_modules/tslib/tslib.es6.js","../../../warp/main/HostAddressed.ts","../../../warp/main/LaneAddressed.ts","../../../warp/main/LinkAddressed.ts","../../../warp/main/EventMessage.ts","../../../warp/main/CommandMessage.ts","../../../warp/main/LinkRequest.ts","../../../warp/main/LinkedResponse.ts","../../../warp/main/SyncRequest.ts","../../../warp/main/SyncedResponse.ts","../../../warp/main/UnlinkRequest.ts","../../../warp/main/UnlinkedResponse.ts","../../../warp/main/AuthRequest.ts","../../../warp/main/AuthedResponse.ts","../../../warp/main/DeauthRequest.ts","../../../warp/main/DeauthedResponse.ts","../../../client/main/downlink/Downlink.ts","../../../client/main/host/Host.ts","../../../client/main/host/RemoteHost.ts","../../../client/main/host/WebSocketHost.ts","../../../client/main/downlink/DownlinkModel.ts","../../../client/main/downlink/EventDownlinkModel.ts","../../../client/main/downlink/EventDownlink.ts","../../../client/main/downlink/ListDownlinkModel.ts","../../../client/main/downlink/ListDownlink.ts","../../../client/main/downlink/MapDownlinkModel.ts","../../../client/main/downlink/MapDownlink.ts","../../../client/main/downlink/ValueDownlinkModel.ts","../../../client/main/downlink/ValueDownlink.ts","../../../client/main/downlink/DownlinkRecord.ts","../../../client/main/downlink/ListDownlinkRecord.ts","../../../client/main/downlink/MapDownlinkRecord.ts","../../../client/main/downlink/ValueDownlinkRecord.ts","../../../client/main/downlink/DownlinkReifier.ts","../../../client/main/downlink/DownlinkStreamlet.ts","../../../client/main/ref/BaseRef.ts","../../../client/main/ref/LaneRef.ts","../../../client/main/ref/NodeRef.ts","../../../client/main/ref/HostRef.ts","../../../client/main/WarpClient.ts","../../../client/main/index.ts"],"names":["Envelope","prototype","tag","this","constructor","prio","rate","toRecon","Recon","toString","toValue","Format","debug","fromValue","value","EventMessage","CommandMessage","LinkRequest","LinkedResponse","SyncRequest","SyncedResponse","UnlinkRequest","UnlinkedResponse","AuthRequest","AuthedResponse","DeauthRequest","DeauthedResponse","parseRecon","input","parse","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","HostAddressed","body","_this","_super","call","_body","node","Uri","empty","lane","Value","fromAny","copy","equals","that","hashCode","Murmur3","mash","mix","seed","output","write","name","isDefined","Attr","of","concat","E","header","LaneAddressed","_node","_lane","Record","slot","forEach","index","stringValue","LinkAddressed","_prio","_rate","undefined","hash","numberValue","absent","DownlinkFlags","RemoteHost","context","hostUri","options","_context","_hostUri","_options","_downlinks","BTree","_downlinkCount","_authenticated","_session","_uriCache","UriCache","_sendBuffer","_reconnectTimer","_reconnectTimeout","_idleTimer","credentials","unlinkDelay","maxReconnectTimeout","idleTimeout","sendBufferSize","isAuthenticated","session","isIdle","resolve","relative","unresolve","absolute","authenticate","isConnected","request","push","open","openDownlink","downlink","clearIdle","nodeUri","laneUri","nodeDownlinks","get","set","Error","openUp","hostDidConnect","unlinkDownlink","onUnlinkRequest","closeDownlink","delete","isEmpty","watchIdle","closeUp","command","message","onEnvelope","envelope","onEventMessage","onCommandMessage","onLinkRequest","onLinkedResponse","onSyncRequest","onSyncedResponse","onUnlinkedResponse","onAuthRequest","onAuthedResponse","onDeauthRequest","onDeauthedResponse","onUnknownEnvelope","resolvedMessage","response","resolvedResponse","hostDidAuthenticate","hostDidDeauthenticate","onConnect","onDisconnect","hostDidDisconnect","onError","error","hostDidFail","reconnect","Math","floor","random","min","setTimeout","bind","clearReconnect","clearTimeout","checkIdle","close","closeHost","Host","WebSocketHost","WebSocket","require","_socket","readyState","OPEN","WebSocket_1","schemeName","scheme","protocols","onopen","onWebSocketOpen","onmessage","onWebSocketMessage","onclose","onWebSocketClose","onerror","onWebSocketError","isOnline","text","send","shift","data","DownlinkModel","_nodeUri","_laneUri","_views","_host","_status","keepLinked","keepSynced","isLinked","isSynced","addDownlink","view","removeDownlink","splice","unlink","doUnlink","host","sync","link","views","Downlink","owner","init","flags","observers","observer","isArray","onEvent","onCommand","willLink","didLink","willSync","didSync","willUnlink","didUnlink","didConnect","didDisconnect","didClose","didFail","_owner","_flags","_model","_observers","observe","oldObservers","n","newObservers","unobserve","oldObserver","found","initForm","_initForm","DownlinkInitForm","mold","type","Item","extant","cast","item","form","Form","EventDownlinkModel","EventDownlink","endpoint","model","getDownlink","ListDownlinkModel","state","STree","_state","getEntry","newValue","lookup","RangeError","listWillUpdate","oldEntry","listDidUpdate","insert","newEntry","remove","listWillRemove","listDidRemove","attr","newValues","_i","pop","unshift","move","fromIndex","toIndex","entry","listWillMove","listDidMove","start","deleteCount","max","deleted","clear","listWillClear","listDidClear","callback","thisArg","tree","values","keys","entries","snapshot","clone","setState","event","head","onUpdateEvent","onInsertEvent","onMoveEvent","onRemoveEvent","onDropEvent","onTakeEvent","onClearEvent","oldValue","lower","listWillDrop","drop","listDidDrop","upper","listWillTake","take","listDidTake","ListDownlink","valueForm","state0","willUpdate","didUpdate","willMove","didMove","willRemove","didRemove","willDrop","didDrop","willTake","didTake","willClear","didClear","_valueForm","forValue","_state0","id","coerce","newObject","newObjects","apply","oldValues","_a","oldObjects","object","cursor","ValueCursor","ValueEntryCursor","newResult","oldObject","initialState","didAliasModel","MapDownlinkModel","size","has","mapWillUpdate","mapDidUpdate","mapWillRemove","mapDidRemove","mapWillDrop","mapDidDrop","mapWillTake","mapDidTake","mapWillClear","mapDidClear","MapDownlink","keyForm","_keyForm","_input","_effects","_outlets","_outputs","_version","keyObject","firstKey","unit","firstValue","firstEntry","lastKey","lastValue","lastEntry","nextKey","nextKeyObject","nextValue","nextObject","nextEntry","previousKey","previousKeyObject","previousValue","previousObject","previousEntry","decohereInputKey","recohereInput","keyIterator","bindInput","MapOutlet","is","TypeError","unbindOutput","bindOutput","unbindInput","disconnectInputs","outlet","KeyOutlet","updated","outputIterator","Cursor","array","oldOutputs","newOutputs","unbindOutputs","disconnectOutputs","outlets","keyOutlet","outputs","decohereOutputKey","effect","decohereKey","oldEffects","willDecohereKey","onDecohereKey","MapInlet","decohereOutput","decohereInput","didDecohereKey","decohere","willDecohere","onDecohere","didDecohere","recohereOutputKey","version","recohereKey","recohereInputKey","willRecohereKey","removed","onRecohereKey","didRecohereKey","recohereOutput","recohere","willRecohere","onRecohere","didRecohere","memoize","filter","func","combinator","FilterFieldsCombinator","map","MapValueCombinator","MapFieldValuesCombinator","reduce","identity","accumulator","combiner","ReduceFieldsCombinator","watch","WatchValueCombinator","WatchFieldsCombinator","ValueDownlinkModel","valueWillSet","valueDidSet","onSetEvent","ValueDownlink","willSet","didSet","DownlinkRecord","AbstractRecordOutlet","ListDownlinkRecord","_downlink","isObject","getAttr","getSlot","getItem","Num","setAttr","setSlot","setItem","newItem","newItems","MapDownlinkRecord","Slot","result","ValueDownlinkRecord","getField","DownlinkReifier","warp","reify","Field","reifyField","reifyValue","field","updatedValue","RecordModel","reifyModel","streamlet","DownlinkStreamlet","compile","Reifier","scope","inoutlet","bodyValue","getOutput","downlinkRecord","castInput","forString","forNumber","getInput","inputHostUri","inputNodeUri","inputLaneUri","inputPrio","inputRate","inputBody","inputType","client","downlinkMap","downlinkValue","reifier","_reifier","Inout","Out","AbstractRecordStreamlet","BaseRef","indexOf","openRef","closeRef","downlinks","didAuthenticate","didDeauthenticate","LaneRef","hostRef","HostRef","nodeRef","NodeRef","laneRef","downlinkList","WarpClient","keepOnline","_hosts","_refs","_online","onOnline","onOffline","watchOnline","online","window","addEventListener","removeEventListener","getHost","openHost","hostDownlinks","ref","refs","hosts"],"mappings":"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","file":"/Users/c9r/Swim/Code/swim-platform/swim-system-js/swim-mesh-js/@swim/mesh/dist/main/swim-mesh.min.js","sourcesContent":["// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Recon} from \"@swim/recon\";\nimport {EventMessage} from \"./EventMessage\";\nimport {CommandMessage} from \"./CommandMessage\";\nimport {LinkRequest} from \"./LinkRequest\";\nimport {LinkedResponse} from \"./LinkedResponse\";\nimport {SyncRequest} from \"./SyncRequest\";\nimport {SyncedResponse} from \"./SyncedResponse\";\nimport {UnlinkRequest} from \"./UnlinkRequest\";\nimport {UnlinkedResponse} from \"./UnlinkedResponse\";\nimport {AuthRequest} from \"./AuthRequest\";\nimport {AuthedResponse} from \"./AuthedResponse\";\nimport {DeauthRequest} from \"./DeauthRequest\";\nimport {DeauthedResponse} from \"./DeauthedResponse\";\n\nexport abstract class Envelope implements HashCode, Debug {\n  tag(): string {\n    return (this.constructor as typeof Envelope).tag();\n  }\n\n  abstract node(): Uri;\n  abstract node(node: AnyUri): this;\n\n  abstract lane(): Uri;\n  abstract lane(lane: AnyUri): this;\n\n  prio(): number;\n  prio(prio: number): this;\n  prio(prio?: number): number | this {\n    if (prio === void 0) {\n      return 0;\n    } else {\n      return this;\n    }\n  }\n\n  rate(): number;\n  rate(rate: number): this;\n  rate(rate?: number): number | this {\n    if (rate === void 0) {\n      return 0;\n    } else {\n      return this;\n    }\n  }\n\n  abstract body(): Value;\n  abstract body(body: AnyValue): this;\n\n  abstract toValue(): Value;\n\n  toRecon(): string {\n    return Recon.toString(this.toValue());\n  }\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  /** @hidden */\n  static tag(): string {\n    return void 0 as any;\n  }\n\n  static fromValue(value: Value): Envelope | undefined {\n    switch (value.tag()) {\n      case \"event\": return Envelope.EventMessage.fromValue(value);\n      case \"command\": return Envelope.CommandMessage.fromValue(value);\n      case \"link\": return Envelope.LinkRequest.fromValue(value);\n      case \"linked\": return Envelope.LinkedResponse.fromValue(value);\n      case \"sync\": return Envelope.SyncRequest.fromValue(value);\n      case \"synced\": return Envelope.SyncedResponse.fromValue(value);\n      case \"unlink\": return Envelope.UnlinkRequest.fromValue(value);\n      case \"unlinked\": return Envelope.UnlinkedResponse.fromValue(value);\n      case \"auth\": return Envelope.AuthRequest.fromValue(value);\n      case \"authed\": return Envelope.AuthedResponse.fromValue(value);\n      case \"deauth\": return Envelope.DeauthRequest.fromValue(value);\n      case \"deauthed\": return Envelope.DeauthedResponse.fromValue(value);\n      default: return void 0;\n    }\n  }\n\n  static parseRecon(input: string): Envelope | undefined {\n    return Envelope.fromValue(Recon.parse(input));\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static EventMessage: typeof EventMessage; // defined by EventMessage\n  /** @hidden */\n  static CommandMessage: typeof CommandMessage; // defined by CommandMessage\n  /** @hidden */\n  static LinkRequest: typeof LinkRequest; // defined by LinkRequest\n  /** @hidden */\n  static LinkedResponse: typeof LinkedResponse; // defined by LinkedResponse\n  /** @hidden */\n  static SyncRequest: typeof SyncRequest; // defined by SyncRequest\n  /** @hidden */\n  static SyncedResponse: typeof SyncedResponse; // defined by SyncedResponse\n  /** @hidden */\n  static UnlinkRequest: typeof UnlinkRequest; // defined by UnlinkRequest\n  /** @hidden */\n  static UnlinkedResponse: typeof UnlinkedResponse; // defined by UnlinkedResponse\n  /** @hidden */\n  static AuthRequest: typeof AuthRequest; // defined by AuthRequest\n  /** @hidden */\n  static AuthedResponse: typeof AuthedResponse; // defined by AuthedResponse\n  /** @hidden */\n  static DeauthRequest: typeof DeauthRequest; // defined by DeauthRequest\n  /** @hidden */\n  static DeauthedResponse: typeof DeauthedResponse; // defined by DeauthedResponse\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value, Attr} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\n\nexport abstract class HostAddressed extends Envelope {\n  /** @hidden */\n  readonly _body: Value;\n\n  constructor(body: Value) {\n    super();\n    this._body = body;\n  }\n\n  node(): Uri;\n  node(node: AnyUri): this;\n  node(node?: AnyUri): Uri | this {\n    if (node === void 0) {\n      return Uri.empty();\n    } else {\n      return this;\n    }\n  }\n\n  lane(): Uri;\n  lane(lane: AnyUri): this;\n  lane(lane?: AnyUri): Uri | this {\n    if (lane === void 0) {\n      return Uri.empty();\n    } else {\n      return this;\n    }\n  }\n\n  body(): Value;\n  body(body: AnyValue): this;\n  body(body?: AnyValue): Value | this {\n    if (body === void 0) {\n      return this._body;\n    } else {\n      body = Value.fromAny(body);\n      return this.copy(body);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof HostAddressed\n        && (this as any).__proto__.constructor === (that as any).__proto__.constructor) {\n      return this._body.equals(that._body);\n    }\n    return false;\n  }\n\n  hashCode() {\n    return Murmur3.mash(Murmur3.mix(Murmur3.seed((this as any).__proto__), this._body.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write((this as any).__proto__.constructor.name).write(46/*'.'*/).write(\"of\").write(40/*'('*/);\n    if (this._body.isDefined()) {\n      output = output.debug(this._body);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  protected abstract copy(body: Value): this;\n\n  toValue(): Value {\n    return Attr.of(this.tag()).concat(this._body);\n  }\n\n  static fromValue(value: Value,\n                   E?: {\n                     new(body: Value): HostAddressed;\n                     tag(): string;\n                   })\n                   : HostAddressed | undefined {\n    const header = value.header(E!.tag());\n    if (header.isDefined()) {\n      const body = value.body();\n      return new E!(body);\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {Item, Attr, AnyValue, Value, Record} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\n\nexport abstract class LaneAddressed extends Envelope {\n  /** @hidden */\n  readonly _node: Uri;\n  /** @hidden */\n  readonly _lane: Uri;\n  /** @hidden */\n  readonly _body: Value;\n\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super();\n    this._node = node;\n    this._lane = lane;\n    this._body = body;\n  }\n\n  node(): Uri;\n  node(node: AnyUri): this;\n  node(node?: AnyUri): Uri | this {\n    if (node === void 0) {\n      return this._node;\n    } else {\n      node = Uri.fromAny(node);\n      return this.copy(node, this._lane, this._body);\n    }\n  }\n\n  lane(): Uri;\n  lane(lane: AnyUri): this;\n  lane(lane?: AnyUri): Uri | this {\n    if (lane === void 0) {\n      return this._lane;\n    } else {\n      lane = Uri.fromAny(lane);\n      return this.copy(this._node, lane, this._body);\n    }\n  }\n\n  body(): Value;\n  body(body: AnyValue): this;\n  body(body?: AnyValue): Value | this {\n    if (body === void 0) {\n      return this._body;\n    } else {\n      body = Value.fromAny(body);\n      return this.copy(this._node, this._lane, body);\n    }\n  }\n\n  protected abstract copy(node: Uri, lane: Uri, body: Value): this;\n\n  toValue(): Value {\n    const header = Record.create(2)\n        .slot(\"node\", this._node.toString())\n        .slot(\"lane\", this._lane.toString());\n    return Attr.of(this.tag(), header).concat(this._body);\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LaneAddressed\n        && (this as any).__proto__.constructor === (that as any).__proto__.constructor) {\n      return this._node.equals(that._node) && this._lane.equals(that._lane)\n          && this._body.equals(that._body);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.seed((this as any).__proto__),\n        this._node.hashCode()), this._lane.hashCode()), this._body.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write((this as any).__proto__.constructor.name).write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this._node.toString()).write(\", \").debug(this._lane.toString());\n    if (this._body.isDefined()) {\n      output = output.write(\", \").debug(this._body);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  static fromValue(value: Value,\n                   E?: {\n                     new(node: Uri, lane: Uri, body: Value): LaneAddressed;\n                     tag(): string;\n                   }): LaneAddressed | undefined {\n    let node: Uri | undefined;\n    let lane: Uri | undefined;\n    const header = value.header(E!.tag());\n    header.forEach(function (header: Item, index: number) {\n      const key = header.key.stringValue(void 0);\n      if (key !== void 0) {\n        if (key === \"node\") {\n          node = Uri.parse(header.toValue().stringValue(\"\"));\n        } else if (key === \"lane\") {\n          lane = Uri.parse(header.toValue().stringValue(\"\"));\n        }\n      } else if (header instanceof Value) {\n        if (index === 0) {\n          node = Uri.parse(header.stringValue(\"\"));\n        } else if (index === 1) {\n          lane = Uri.parse(header.stringValue(\"\"));\n        }\n      }\n    });\n    if (node !== void 0 && lane !== void 0) {\n      const body = value.body();\n      return new E!(node, lane, body);\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {Item, Attr, AnyValue, Value, Record} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\n\nexport abstract class LinkAddressed extends Envelope {\n  /** @hidden */\n  readonly _node: Uri;\n  /** @hidden */\n  readonly _lane: Uri;\n  /** @hidden */\n  readonly _prio: number;\n  /** @hidden */\n  readonly _rate: number;\n  /** @hidden */\n  readonly _body: Value;\n\n  constructor(node: Uri, lane: Uri, prio: number, rate: number, body: Value) {\n    super();\n    this._node = node;\n    this._lane = lane;\n    this._prio = prio;\n    this._rate = rate;\n    this._body = body;\n  }\n\n  node(): Uri;\n  node(node: AnyUri): this;\n  node(node?: AnyUri): Uri | this {\n    if (node === undefined) {\n      return this._node;\n    } else {\n      node = Uri.fromAny(node);\n      return this.copy(node, this._lane, this._prio, this._rate, this._body);\n    }\n  }\n\n  lane(): Uri;\n  lane(lane: AnyUri): this;\n  lane(lane?: AnyUri): Uri | this {\n    if (lane === undefined) {\n      return this._lane;\n    } else {\n      lane = Uri.fromAny(lane);\n      return this.copy(this._node, lane, this._prio, this._rate, this._body);\n    }\n  }\n\n  prio(): number;\n  prio(prio: number): this;\n  prio(prio?: number): number | this {\n    if (prio === undefined) {\n      return this._prio;\n    } else {\n      return this.copy(this._node, this._lane, prio, this._rate, this._body);\n    }\n  }\n\n  rate(): number;\n  rate(rate: number): this;\n  rate(rate?: number): number | this {\n    if (rate === undefined) {\n      return this._rate;\n    } else {\n      return this.copy(this._node, this._lane, this._prio, rate, this._body);\n    }\n  }\n\n  body(): Value;\n  body(body: AnyValue): this;\n  body(body?: AnyValue): Value | this {\n    if (body === undefined) {\n      return this._body;\n    } else {\n      body = Value.fromAny(body);\n      return this.copy(this._node, this._lane, this._prio, this._rate, body);\n    }\n  }\n\n  protected abstract copy(node: Uri, lane: Uri, prio: number, rate: number, body: Value): this;\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LinkAddressed\n        && (this as any).__proto__.constructor === (that as any).__proto__.constructor) {\n      return this._node.equals(that._node) && this._lane.equals(that._lane)\n          && this._prio === that._prio && this._rate === that._rate\n          && this._body.equals(that._body);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Murmur3.seed((this as any).__proto__), this._node.hashCode()), this._lane.hashCode()),\n        Murmur3.hash(this._prio)), Murmur3.hash(this._rate)), this._body.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write((this as any).__proto__.constructor.name).write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this._node.toString()).write(\", \").debug(this._lane.toString());\n    if (this._prio !== 0 || this._rate !== 0) {\n      output = output.write(\", \").debug(this._prio).write(\", \").debug(this._rate);\n    }\n    if (this._body.isDefined()) {\n      output = output.write(\", \").debug(this._body);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  toValue(): Value {\n    const header = Record.create(4)\n        .slot(\"node\", this._node.toString())\n        .slot(\"lane\", this._lane.toString());\n    if (this._prio !== 0) {\n      header.slot(\"prio\", this._prio);\n    }\n    if (this._rate !== 0) {\n      header.slot(\"rate\", this._rate);\n    }\n    return Attr.of(this.tag(), header).concat(this._body);\n  }\n\n  static fromValue(value: Value,\n                   E?: {\n                     new(node: Uri, lane: Uri, prio: number, rate: number, body: Value): LinkAddressed;\n                     tag(): string;\n                   }): LinkAddressed | undefined {\n    let node: Uri | undefined;\n    let lane: Uri | undefined;\n    let prio = 0;\n    let rate = 0;\n    const header = value.header(E!.tag());\n    header.forEach(function (header: Item, index: number) {\n      const key = header.key.stringValue(void 0);\n      if (key !== void 0) {\n        if (key === \"node\") {\n          node = Uri.parse(header.toValue().stringValue(\"\"));\n        } else if (key === \"lane\") {\n          lane = Uri.parse(header.toValue().stringValue(\"\"));\n        } else if (key === \"prio\") {\n          prio = header.numberValue(prio);\n        } else if (key === \"rate\") {\n          rate = header.numberValue(rate);\n        }\n      } else if (header instanceof Value) {\n        if (index === 0) {\n          node = Uri.parse(header.stringValue(\"\"));\n        } else if (index === 1) {\n          lane = Uri.parse(header.stringValue(\"\"));\n        }\n      }\n    });\n    if (node !== void 0 && lane !== void 0) {\n      const body = value.body();\n      return new E!(node, lane, prio, rate, body);\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class EventMessage extends LaneAddressed {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected copy(node: Uri, lane: Uri, body: Value): this {\n    return new EventMessage(node, lane, body) as this;\n  }\n\n  static tag(): string {\n    return \"event\";\n  }\n\n  static fromValue(value: Value): EventMessage | undefined {\n    return LaneAddressed.fromValue(value, EventMessage) as EventMessage | undefined;\n  }\n\n  static of(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): EventMessage {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new EventMessage(node, lane, body);\n  }\n}\nEnvelope.EventMessage = EventMessage;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class CommandMessage extends LaneAddressed {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected copy(node: Uri, lane: Uri, body: Value): this {\n    return new CommandMessage(node, lane, body) as this;\n  }\n\n  static tag(): string {\n    return \"command\";\n  }\n\n  static fromValue(value: Value): CommandMessage | undefined {\n    return LaneAddressed.fromValue(value, CommandMessage) as CommandMessage | undefined;\n  }\n\n  static of(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): CommandMessage {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new CommandMessage(node, lane, body);\n  }\n}\nEnvelope.CommandMessage = CommandMessage;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {LinkAddressed} from \"./LinkAddressed\";\n\nexport class LinkRequest extends LinkAddressed {\n  constructor(node: Uri, lane: Uri, prio: number, rate: number, body: Value) {\n    super(node, lane, prio, rate, body);\n  }\n\n  protected copy(node: Uri, lane: Uri, prio: number, rate: number, body: Value): this {\n    return new LinkRequest(node, lane, prio, rate, body) as this;\n  }\n\n  static tag(): string {\n    return \"link\";\n  }\n\n  static fromValue(value: Value): LinkRequest | undefined {\n    return LinkAddressed.fromValue(value, LinkRequest) as LinkRequest | undefined;\n  }\n\n  static of(node: AnyUri, lane: AnyUri, prio: number = 0, rate: number = 0,\n            body: AnyValue = Value.absent()): LinkRequest {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new LinkRequest(node, lane, prio, rate, body);\n  }\n}\nEnvelope.LinkRequest = LinkRequest;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {LinkAddressed} from \"./LinkAddressed\";\n\nexport class LinkedResponse extends LinkAddressed {\n  constructor(node: Uri, lane: Uri, prio: number, rate: number, body: Value) {\n    super(node, lane, prio, rate, body);\n  }\n\n  protected copy(node: Uri, lane: Uri, prio: number, rate: number, body: Value): this {\n    return new LinkedResponse(node, lane, prio, rate, body) as this;\n  }\n\n  static tag(): string {\n    return \"linked\";\n  }\n\n  static fromValue(value: Value): LinkedResponse | undefined {\n    return LinkAddressed.fromValue(value, LinkedResponse) as LinkedResponse | undefined;\n  }\n\n  static of(node: AnyUri, lane: AnyUri, prio: number = 0, rate: number = 0,\n            body: AnyValue = Value.absent()): LinkedResponse {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new LinkedResponse(node, lane, prio, rate, body);\n  }\n}\nEnvelope.LinkedResponse = LinkedResponse;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {LinkAddressed} from \"./LinkAddressed\";\n\nexport class SyncRequest extends LinkAddressed {\n  constructor(node: Uri, lane: Uri, prio: number, rate: number, body: Value) {\n    super(node, lane, prio, rate, body);\n  }\n\n  protected copy(node: Uri, lane: Uri, prio: number, rate: number, body: Value): this {\n    return new SyncRequest(node, lane, prio, rate, body) as this;\n  }\n\n  static tag(): string {\n    return \"sync\";\n  }\n\n  static fromValue(value: Value): SyncRequest | undefined {\n    return LinkAddressed.fromValue(value, SyncRequest) as SyncRequest | undefined;\n  }\n\n  static of(node: AnyUri, lane: AnyUri, prio: number = 0, rate: number = 0,\n            body: AnyValue = Value.absent()): SyncRequest {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new SyncRequest(node, lane, prio, rate, body);\n  }\n}\nEnvelope.SyncRequest = SyncRequest;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class SyncedResponse extends LaneAddressed {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected copy(node: Uri, lane: Uri, body: Value): this {\n    return new SyncedResponse(node, lane, body) as this;\n  }\n\n  static tag(): string {\n    return \"synced\";\n  }\n\n  static fromValue(value: Value): SyncedResponse | undefined {\n    return LaneAddressed.fromValue(value, SyncedResponse) as SyncedResponse | undefined;\n  }\n\n  static of(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): SyncedResponse {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new SyncedResponse(node, lane, body);\n  }\n}\nEnvelope.SyncedResponse = SyncedResponse;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class UnlinkRequest extends LaneAddressed {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected copy(node: Uri, lane: Uri, body: Value): this {\n    return new UnlinkRequest(node, lane, body) as this;\n  }\n\n  static tag(): string {\n    return \"unlink\";\n  }\n\n  static fromValue(value: Value): UnlinkRequest | undefined {\n    return LaneAddressed.fromValue(value, UnlinkRequest) as UnlinkRequest | undefined;\n  }\n\n  static of(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): UnlinkRequest {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new UnlinkRequest(node, lane, body);\n  }\n}\nEnvelope.UnlinkRequest = UnlinkRequest;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class UnlinkedResponse extends LaneAddressed {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected copy(node: Uri, lane: Uri, body: Value): this {\n    return new UnlinkedResponse(node, lane, body) as this;\n  }\n\n  static tag(): string {\n    return \"unlinked\";\n  }\n\n  static fromValue(value: Value): UnlinkedResponse | undefined {\n    return LaneAddressed.fromValue(value, UnlinkedResponse) as UnlinkedResponse | undefined;\n  }\n\n  static of(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): UnlinkedResponse {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new UnlinkedResponse(node, lane, body);\n  }\n}\nEnvelope.UnlinkedResponse = UnlinkedResponse;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {HostAddressed} from \"./HostAddressed\";\n\nexport class AuthRequest extends HostAddressed {\n  constructor(body: Value) {\n    super(body);\n  }\n\n  protected copy(body: Value): this {\n    return new AuthRequest(body) as this;\n  }\n\n  static tag(): string {\n    return \"auth\";\n  }\n\n  static fromValue(value: Value): AuthRequest | undefined {\n    return HostAddressed.fromValue(value, AuthRequest) as AuthRequest | undefined;\n  }\n\n  static of(body: AnyValue = Value.absent()): AuthRequest {\n    body = Value.fromAny(body);\n    return new AuthRequest(body);\n  }\n}\nEnvelope.AuthRequest = AuthRequest;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {HostAddressed} from \"./HostAddressed\";\n\nexport class AuthedResponse extends HostAddressed {\n  constructor(body: Value) {\n    super(body);\n  }\n\n  protected copy(body: Value): this {\n    return new AuthedResponse(body) as this;\n  }\n\n  static tag(): string {\n    return \"authed\";\n  }\n\n  static fromValue(value: Value): AuthedResponse | undefined {\n    return HostAddressed.fromValue(value, AuthedResponse) as AuthedResponse | undefined;\n  }\n\n  static of(body: AnyValue = Value.absent()): AuthedResponse {\n    body = Value.fromAny(body);\n    return new AuthedResponse(body);\n  }\n}\nEnvelope.AuthedResponse = AuthedResponse;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {HostAddressed} from \"./HostAddressed\";\n\nexport class DeauthRequest extends HostAddressed {\n  constructor(body: Value) {\n    super(body);\n  }\n\n  protected copy(body: Value): this {\n    return new DeauthRequest(body) as this;\n  }\n\n  static tag(): string {\n    return \"deauth\";\n  }\n\n  static fromValue(value: Value): DeauthRequest | undefined {\n    return HostAddressed.fromValue(value, DeauthRequest) as DeauthRequest | undefined;\n  }\n\n  static of(body: AnyValue = Value.absent()): DeauthRequest {\n    body = Value.fromAny(body);\n    return new DeauthRequest(body);\n  }\n}\nEnvelope.DeauthRequest = DeauthRequest;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"./Envelope\";\nimport {HostAddressed} from \"./HostAddressed\";\n\nexport class DeauthedResponse extends HostAddressed {\n  constructor(body: Value) {\n    super(body);\n  }\n\n  protected copy(body: Value): this {\n    return new DeauthedResponse(body) as this;\n  }\n\n  static tag(): string {\n    return \"deauthed\";\n  }\n\n  static fromValue(value: Value): DeauthedResponse | undefined {\n    return HostAddressed.fromValue(value, DeauthedResponse) as DeauthedResponse | undefined;\n  }\n\n  static of(body: AnyValue = Value.absent()): DeauthedResponse {\n    body = Value.fromAny(body);\n    return new DeauthedResponse(body);\n  }\n}\nEnvelope.DeauthedResponse = DeauthedResponse;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {Item, Attr, AnyValue, Value, Record, Form} from \"@swim/structure\";\nimport {\n  EventMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n} from \"@swim/warp\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\n\nexport type DownlinkType = \"event\" | \"list\" | \"map\" | \"value\";\n\nexport type DownlinkOnEvent = (body: Value, downlink: Downlink) => void;\nexport type DownlinkOnCommand = (body: Value, downlink: Downlink) => void;\nexport type DownlinkWillLink = (downlink: Downlink) => void;\nexport type DownlinkDidLink = (downlink: Downlink) => void;\nexport type DownlinkWillSync = (downlink: Downlink) => void;\nexport type DownlinkDidSync = (downlink: Downlink) => void;\nexport type DownlinkWillUnlink = (downlink: Downlink) => void;\nexport type DownlinkDidUnlink = (downlink: Downlink) => void;\nexport type DownlinkDidConnect = (downlink: Downlink) => void;\nexport type DownlinkDidDisconnect = (downlink: Downlink) => void;\nexport type DownlinkDidClose = (downlink: Downlink) => void;\nexport type DownlinkDidFail = (error: unknown, downlink: Downlink) => void;\n\nexport interface DownlinkObserver {\n  onEvent?: DownlinkOnEvent;\n  onCommand?: DownlinkOnCommand;\n  willLink?: DownlinkWillLink;\n  didLink?: DownlinkDidLink;\n  willSync?: DownlinkWillSync;\n  didSync?: DownlinkDidSync;\n  willUnlink?: DownlinkWillUnlink;\n  didUnlink?: DownlinkDidUnlink;\n  didConnect?: DownlinkDidConnect;\n  didDisconnect?: DownlinkDidDisconnect;\n  didClose?: DownlinkDidClose;\n  didFail?: DownlinkDidFail;\n}\n\nexport interface DownlinkInit extends DownlinkObserver {\n  hostUri?: AnyUri;\n  nodeUri?: AnyUri;\n  laneUri?: AnyUri;\n  prio?: number;\n  rate?: number;\n  body?: AnyValue;\n  type?: DownlinkType;\n}\n\n/** @hidden */\nexport const enum DownlinkFlags {\n  KeepLinked = 1,\n  KeepSynced = 2,\n  KeepLinkedSynced = KeepLinked | KeepSynced,\n}\n\nexport abstract class Downlink {\n  /** @hidden */\n  readonly _context: DownlinkContext;\n  /** @hidden */\n  readonly _owner: DownlinkOwner | undefined;\n  /** @hidden */\n  readonly _hostUri: Uri;\n  /** @hidden */\n  readonly _nodeUri: Uri;\n  /** @hidden */\n  readonly _laneUri: Uri;\n  /** @hidden */\n  readonly _prio: number;\n  /** @hidden */\n  readonly _rate: number;\n  /** @hidden */\n  readonly _body: Value;\n  /** @hidden */\n  readonly _flags: number;\n  /** @hidden */\n  _model: DownlinkModel | null;\n  /** @hidden */\n  _observers: ReadonlyArray<DownlinkObserver> | null;\n\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: DownlinkInit,\n              hostUri: Uri = Uri.empty(), nodeUri: Uri = Uri.empty(), laneUri: Uri = Uri.empty(),\n              prio: number = 0, rate: number = 0, body: Value = Value.absent(),\n              flags: number = 0, observers: ReadonlyArray<DownlinkObserver> | DownlinkObserver | null = null) {\n    let observer: DownlinkObserver | undefined;\n    if (observers === null) {\n      observers = [];\n    } else if (!Array.isArray(observers)) {\n      observer = observers as DownlinkObserver;\n      observers = [observer];\n    }\n    if (init !== void 0) {\n      observer = observer || {};\n      observers = observers !== null ? observers.concat(observer) : [observer];\n      hostUri = init.hostUri !== void 0 ? Uri.fromAny(init.hostUri) : hostUri;\n      nodeUri = init.nodeUri !== void 0 ? Uri.fromAny(init.nodeUri) : nodeUri;\n      laneUri = init.laneUri !== void 0 ? Uri.fromAny(init.laneUri) : laneUri;\n      prio = init.prio !== void 0 ? init.prio : prio;\n      rate = init.rate !== void 0 ? init.rate : rate;\n      body = init.body !== void 0 ? Value.fromAny(init.body) : body;\n      observer.onEvent = init.onEvent || observer.onEvent;\n      observer.onCommand = init.onCommand || observer.onCommand;\n      observer.willLink = init.willLink || observer.willLink;\n      observer.didLink = init.didLink || observer.didLink;\n      observer.willSync = init.willSync || observer.willSync;\n      observer.didSync = init.didSync || observer.didSync;\n      observer.willUnlink = init.willUnlink || observer.willUnlink;\n      observer.didUnlink = init.didUnlink || observer.didUnlink;\n      observer.didConnect = init.didConnect || observer.didConnect;\n      observer.didDisconnect = init.didDisconnect || observer.didDisconnect;\n      observer.didClose = init.didClose || observer.didClose;\n      observer.didFail = init.didFail || observer.didFail;\n    }\n    this._context = context;\n    this._owner = owner;\n    this._hostUri = hostUri;\n    this._nodeUri = nodeUri;\n    this._laneUri = laneUri;\n    this._prio = prio;\n    this._rate = rate;\n    this._body = body;\n    this._flags = flags;\n    this._model = null;\n    this._observers = observers;\n  }\n\n  protected abstract copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                          hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                          body: Value, flags: number, observers: ReadonlyArray<DownlinkObserver> | null): this;\n\n  hostUri(): Uri;\n  hostUri(hostUri: AnyUri): this;\n  hostUri(hostUri?: AnyUri): Uri | this {\n    if (hostUri === void 0) {\n      return this._hostUri;\n    } else {\n      hostUri = Uri.fromAny(hostUri);\n      return this.copy(this._context, this._owner, hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  nodeUri(): Uri;\n  nodeUri(nodeUri: AnyUri): this;\n  nodeUri(nodeUri?: AnyUri): Uri | this {\n    if (nodeUri === void 0) {\n      return this._nodeUri;\n    } else {\n      nodeUri = Uri.fromAny(nodeUri);\n      return this.copy(this._context, this._owner, this._hostUri, nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  laneUri(): Uri;\n  laneUri(laneUri: AnyUri): this;\n  laneUri(laneUri?: AnyUri): Uri | this {\n    if (laneUri === void 0) {\n      return this._laneUri;\n    } else {\n      laneUri = Uri.fromAny(laneUri);\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  prio(): number;\n  prio(prio: number ): this;\n  prio(prio?: number): number | this {\n    if (prio === void 0) {\n      return this._prio;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       prio, this._rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  rate(): number;\n  rate(rate: number): this;\n  rate(rate?: number): number | this {\n    if (rate === void 0) {\n      return this._rate;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  body(): Value;\n  body(body: AnyValue): this;\n  body(body?: AnyValue): Value | this {\n    if (body === void 0) {\n      return this._body;\n    } else {\n      body = Value.fromAny(body);\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, body, this._flags, this._observers);\n    }\n  }\n\n  abstract type(): DownlinkType;\n\n  keepLinked(): boolean;\n  keepLinked(keepLinked: boolean): this;\n  keepLinked(keepLinked?: boolean): boolean | this {\n    if (keepLinked === void 0) {\n      return (this._flags & DownlinkFlags.KeepLinked) !== 0;\n    } else {\n      const flags = keepLinked ? this._flags | DownlinkFlags.KeepLinked : this._flags & ~DownlinkFlags.KeepLinked;\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, flags, this._observers);\n    }\n  }\n\n  keepSynced(): boolean;\n  keepSynced(keepSynced: boolean): this;\n  keepSynced(keepSynced?: boolean): boolean | this {\n    if (keepSynced === void 0) {\n      return (this._flags & DownlinkFlags.KeepSynced) !== 0;\n    } else {\n      const flags = keepSynced ? this._flags | DownlinkFlags.KeepSynced : this._flags & ~DownlinkFlags.KeepSynced;\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, flags, this._observers);\n    }\n  }\n\n  observe(observer: DownlinkObserver): this {\n    const oldObservers = this._observers;\n    const n = oldObservers !== null ? oldObservers.length : 0;\n    const newObservers = new Array<DownlinkObserver>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newObservers[i] = oldObservers![i];\n    }\n    newObservers[n] = observer;\n    this._observers = newObservers;\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this._observers;\n    const n = oldObservers !== null ? oldObservers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers![i] as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<DownlinkObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers![j];\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers![j];\n          }\n          this._observers = newObservers;\n        } else {\n          this._observers = null;\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  onEvent(onEvent: DownlinkOnEvent): this {\n    return this.observe({onEvent});\n  }\n\n  onCommand(onCommand: DownlinkOnCommand): this {\n    return this.observe({onCommand});\n  }\n\n  willLink(willLink: DownlinkWillLink): this {\n    return this.observe({willLink});\n  }\n\n  didLink(didLink: DownlinkDidLink): this {\n    return this.observe({didLink});\n  }\n\n  willSync(willSync: DownlinkWillSync): this {\n    return this.observe({willSync});\n  }\n\n  didSync(didSync: DownlinkDidSync): this {\n    return this.observe({didSync});\n  }\n\n  willUnlink(willUnlink: DownlinkWillUnlink): this {\n    return this.observe({willUnlink});\n  }\n\n  didUnlink(didUnlink: DownlinkDidUnlink): this {\n    return this.observe({didUnlink});\n  }\n\n  didConnect(didConnect: DownlinkDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didDisconnect(didDisconnect: DownlinkDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didClose(didClose: DownlinkDidClose): this {\n    return this.observe({didClose});\n  }\n\n  didFail(didFail: DownlinkDidFail): this {\n    return this.observe({didFail});\n  }\n\n  isConnected(): boolean {\n    return this._model !== null ? this._model.isConnected() : false;\n  }\n\n  isAuthenticated(): boolean {\n    return this._model !== null ? this._model.isAuthenticated() : false;\n  }\n\n  isLinked(): boolean {\n    return this._model !== null ? this._model.isLinked() : false;\n  }\n\n  isSynced(): boolean {\n    return this._model !== null ? this._model.isSynced() : false;\n  }\n\n  session(): Value {\n    return this._model !== null ? this._model.session() : Value.absent();\n  }\n\n  /** @hidden */\n  onEventMessage(message: EventMessage): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.onEvent !== void 0) {\n        observer.onEvent(message.body(), this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onCommandMessage(body: Value): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.onCommand !== void 0) {\n        observer.onCommand(body, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onLinkRequest(request?: LinkRequest): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willLink !== void 0) {\n        observer.willLink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onLinkedResponse(response?: LinkedResponse): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didLink !== void 0) {\n        observer.didLink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onSyncRequest(request?: SyncRequest): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willSync !== void 0) {\n        observer.willSync(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onSyncedResponse(response?: SyncedResponse): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didSync !== void 0) {\n        observer.didSync(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onUnlinkRequest(request?: UnlinkRequest): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willUnlink !== void 0) {\n        observer.willUnlink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onUnlinkedResponse(response?: UnlinkedResponse): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didUnlink !== void 0) {\n        observer.didUnlink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidConnect(): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didConnect !== void 0) {\n        observer.didConnect(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDisconnect !== void 0) {\n        observer.didDisconnect(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didFail !== void 0) {\n        observer.didFail(error, this);\n      }\n    }\n  }\n\n  command(body: AnyValue): void {\n    this._model!.command(body);\n  }\n\n  abstract open(): this;\n\n  close(): void {\n    if (this._owner !== void 0) {\n      this._owner.removeDownlink(this);\n    }\n    if (this._model !== null) {\n      this._model.removeDownlink(this);\n    }\n  }\n\n  /** @hidden */\n  openUp(host: Host): void {\n    // nop\n  }\n\n  /** @hidden */\n  closeUp(): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didClose !== void 0) {\n        observer.didClose(this);\n      }\n    }\n  }\n\n  private static _initForm?: Form<DownlinkInit | undefined>;\n\n  static initForm(): Form<DownlinkInit | undefined> {\n    if (Downlink._initForm === void 0) {\n      Downlink._initForm = new DownlinkInitForm();\n    }\n    return Downlink._initForm;\n  }\n}\n\n/** @hidden */\nclass DownlinkInitForm extends Form<DownlinkInit | undefined> {\n  tag(): string;\n  tag(tag: string | undefined): Form<DownlinkInit | undefined>;\n  tag(tag?: string | undefined): string | Form<DownlinkInit | undefined> {\n    if (arguments.length === 0) {\n      return \"link\";\n    } else if (tag !== void 0) {\n      return super.tag(tag);\n    } else {\n      return this;\n    }\n  }\n\n  mold(init: DownlinkInit | undefined): Item {\n    if (init !== void 0) {\n      const header = Record.create();\n      if (init.hostUri !== void 0) {\n        header.slot(\"host\", Uri.fromAny(init.hostUri).toString());\n      }\n      if (init.nodeUri !== void 0) {\n        header.slot(\"node\", Uri.fromAny(init.nodeUri).toString());\n      }\n      if (init.laneUri !== void 0) {\n        header.slot(\"lane\", Uri.fromAny(init.laneUri).toString());\n      }\n      if (init.prio !== void 0) {\n        header.slot(\"prio\", init.prio);\n      }\n      if (init.rate !== void 0) {\n        header.slot(\"rate\", init.rate);\n      }\n      if (init.body !== void 0) {\n        header.slot(\"body\", init.body);\n      }\n      if (init.type !== void 0) {\n        header.slot(\"type\", init.type);\n      }\n      return Record.of(Attr.of(\"link\", header));\n    } else {\n      return Item.extant();\n    }\n  }\n\n  cast(item: Item): DownlinkInit | undefined {\n    const value = item.toValue();\n    const header = value.get(\"link\");\n    if (header.isDefined()) {\n      const init = {} as DownlinkInit;\n      const host = header.get(\"host\");\n      if (host.isDefined()) {\n        init.hostUri = host.cast(Uri.form());\n      }\n      const node = header.get(\"node\");\n      if (node.isDefined()) {\n        init.nodeUri = node.cast(Uri.form());\n      }\n      const lane = header.get(\"lane\");\n      if (lane.isDefined()) {\n        init.laneUri = lane.cast(Uri.form());\n      }\n      const prio = header.get(\"prio\");\n      if (prio.isDefined()) {\n        init.prio = prio.numberValue();\n      }\n      const rate = header.get(\"rate\");\n      if (rate.isDefined()) {\n        init.rate = rate.numberValue();\n      }\n      const body = header.get(\"body\");\n      if (body.isDefined()) {\n        init.body = body;\n      }\n      const type = header.get(\"type\");\n      if (type.isDefined()) {\n        init.type = type.stringValue() as DownlinkType;\n      }\n      return init;\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"@swim/warp\";\nimport {HostDownlink} from \"./HostDownlink\";\n\nexport interface HostOptions {\n  credentials?: Value;\n  unlinkDelay?: number;\n  maxReconnectTimeout?: number;\n  idleTimeout?: number;\n  sendBufferSize?: number;\n}\n\n/** @hidden */\nexport abstract class Host {\n  abstract hostUri(): Uri;\n\n  abstract unlinkDelay(): number;\n\n  abstract isConnected(): boolean;\n\n  abstract isAuthenticated(): boolean;\n\n  abstract session(): Value;\n\n  abstract resolve(relative: AnyUri): Uri;\n\n  abstract unresolve(absolute: AnyUri): Uri;\n\n  abstract authenticate(credentials: AnyValue): void;\n\n  abstract openDownlink(downlink: HostDownlink): void;\n\n  abstract unlinkDownlink(downlink: HostDownlink): void;\n\n  abstract closeDownlink(downlink: HostDownlink): void;\n\n  abstract command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n\n  abstract open(): void;\n\n  abstract close(): void;\n\n  abstract closeUp(): void;\n\n  abstract push(envelope: Envelope): void;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {AnyUri, Uri, UriCache} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {\n  Envelope,\n  EventMessage,\n  CommandMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n  AuthRequest,\n  AuthedResponse,\n  DeauthRequest,\n  DeauthedResponse,\n} from \"@swim/warp\";\nimport {HostDownlink} from \"./HostDownlink\";\nimport {HostContext} from \"./HostContext\";\nimport {HostOptions, Host} from \"./Host\";\n\nconst UNLINK_DELAY = 0;\nconst MAX_RECONNECT_TIMEOUT = 30000;\nconst IDLE_TIMEOUT = 1000;\nconst SEND_BUFFER_SIZE = 1024;\n\n/** @hidden */\nexport abstract class RemoteHost extends Host {\n  /** @hidden */\n  readonly _context: HostContext;\n  /** @hidden */\n  readonly _hostUri: Uri;\n  /** @hidden */\n  readonly _options: HostOptions;\n  /** @hidden */\n  _downlinks: BTree<Uri, BTree<Uri, HostDownlink>>;\n  /** @hidden */\n  _downlinkCount: number;\n  /** @hidden */\n  _authenticated: boolean;\n  /** @hidden */\n  _session: Value;\n  /** @hidden */\n  _uriCache: UriCache;\n  /** @hidden */\n  _sendBuffer: Envelope[];\n  /** @hidden */\n  _reconnectTimer: number;\n  /** @hidden */\n  _reconnectTimeout: number;\n  /** @hidden */\n  _idleTimer: number;\n\n  constructor(context: HostContext, hostUri: Uri, options: HostOptions = {}) {\n    super();\n    this._context = context;\n    this._hostUri = hostUri;\n    this._options = options;\n    this._downlinks = new BTree();\n    this._downlinkCount = 0;\n    this._authenticated = false;\n    this._session = Value.absent();\n    this._uriCache = new UriCache(hostUri);\n    this._sendBuffer = [];\n    this._reconnectTimer = 0;\n    this._reconnectTimeout = 0;\n    this._idleTimer = 0;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  credentials(): Value {\n    return this._options.credentials || Value.absent();\n  }\n\n  unlinkDelay(): number {\n    const unlinkDelay = this._options.unlinkDelay;\n    return typeof unlinkDelay === \"number\" ? unlinkDelay : UNLINK_DELAY;\n  }\n\n  maxReconnectTimeout(): number {\n    return this._options.maxReconnectTimeout || MAX_RECONNECT_TIMEOUT;\n  }\n\n  idleTimeout(): number {\n    return this._options.idleTimeout || IDLE_TIMEOUT;\n  }\n\n  sendBufferSize(): number {\n    return this._options.sendBufferSize || SEND_BUFFER_SIZE;\n  }\n\n  abstract isConnected(): boolean;\n\n  isAuthenticated(): boolean {\n    return this._authenticated;\n  }\n\n  session(): Value {\n    return this._session;\n  }\n\n  isIdle(): boolean {\n    return !this._sendBuffer.length && !this._downlinkCount;\n  }\n\n  resolve(relative: AnyUri): Uri {\n    return this._uriCache.resolve(relative);\n  }\n\n  unresolve(absolute: AnyUri): Uri {\n    return this._uriCache.unresolve(absolute);\n  }\n\n  authenticate(credentials: AnyValue): void {\n    credentials = Value.fromAny(credentials);\n    if (!credentials.equals(this._options.credentials)) {\n      this._options.credentials = credentials;\n      if (this.isConnected()) {\n        const request = AuthRequest.of(credentials);\n        this.push(request);\n      } else {\n        this.open();\n      }\n    }\n  }\n\n  openDownlink(downlink: HostDownlink): void {\n    this.clearIdle();\n    const nodeUri = this.resolve(downlink.nodeUri());\n    const laneUri = downlink.laneUri();\n    if (this._downlinkCount === 0) {\n      this.open();\n    }\n    let nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks === void 0) {\n      nodeDownlinks = new BTree();\n      this._downlinks.set(nodeUri, nodeDownlinks);\n    }\n    if (nodeDownlinks.get(laneUri) !== void 0) {\n      throw new Error(\"duplicate downlink\");\n    }\n    nodeDownlinks.set(laneUri, downlink);\n    this._downlinkCount += 1;\n    downlink.openUp(this);\n    if (this.isConnected()) {\n      downlink.hostDidConnect(this);\n    }\n  }\n\n  unlinkDownlink(downlink: HostDownlink): void {\n    const nodeUri = this.resolve(downlink.nodeUri());\n    const laneUri = downlink.laneUri();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0 && nodeDownlinks.get(laneUri) && this.isConnected()) {\n      const request = UnlinkRequest.of(this.unresolve(nodeUri), laneUri);\n      downlink.onUnlinkRequest(request, this);\n      this.push(request);\n    }\n  }\n\n  closeDownlink(downlink: HostDownlink): void {\n    const nodeUri = this.resolve(downlink.nodeUri());\n    const laneUri = downlink.laneUri();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      if (nodeDownlinks.get(laneUri)) {\n        this._downlinkCount -= 1;\n        nodeDownlinks.delete(laneUri);\n        if (nodeDownlinks.isEmpty()) {\n          this._downlinks.delete(nodeUri);\n        }\n        if (this._downlinkCount === 0) {\n          this.watchIdle();\n        }\n        downlink.closeUp(this);\n      }\n    }\n  }\n\n  command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void {\n    nodeUri = Uri.fromAny(nodeUri);\n    nodeUri = this.resolve(nodeUri);\n    laneUri = Uri.fromAny(laneUri);\n    body = Value.fromAny(body);\n    const message = CommandMessage.of(this.unresolve(nodeUri), laneUri, body);\n    this.push(message);\n  }\n\n  protected onEnvelope(envelope: Envelope): void {\n    if (envelope instanceof EventMessage) {\n      this.onEventMessage(envelope);\n    } else if (envelope instanceof CommandMessage) {\n      this.onCommandMessage(envelope);\n    } else if (envelope instanceof LinkRequest) {\n      this.onLinkRequest(envelope);\n    } else if (envelope instanceof LinkedResponse) {\n      this.onLinkedResponse(envelope);\n    } else if (envelope instanceof SyncRequest) {\n      this.onSyncRequest(envelope);\n    } else if (envelope instanceof SyncedResponse) {\n      this.onSyncedResponse(envelope);\n    } else if (envelope instanceof UnlinkRequest) {\n      this.onUnlinkRequest(envelope);\n    } else if (envelope instanceof UnlinkedResponse) {\n      this.onUnlinkedResponse(envelope);\n    } else if (envelope instanceof AuthRequest) {\n      this.onAuthRequest(envelope);\n    } else if (envelope instanceof AuthedResponse) {\n      this.onAuthedResponse(envelope);\n    } else if (envelope instanceof DeauthRequest) {\n      this.onDeauthRequest(envelope);\n    } else if (envelope instanceof DeauthedResponse) {\n      this.onDeauthedResponse(envelope);\n    } else {\n      this.onUnknownEnvelope(envelope);\n    }\n  }\n\n  protected onEventMessage(message: EventMessage): void {\n    const nodeUri = this.resolve(message.node());\n    const laneUri = message.lane();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink !== void 0) {\n        const resolvedMessage = message.node(nodeUri);\n        downlink.onEventMessage(resolvedMessage, this);\n      }\n    }\n  }\n\n  protected onCommandMessage(message: CommandMessage): void {\n    // TODO: client agents\n  }\n\n  protected onLinkRequest(request: LinkRequest): void {\n    // TODO: client agents\n  }\n\n  protected onLinkedResponse(response: LinkedResponse): void {\n    const nodeUri = this.resolve(response.node());\n    const laneUri = response.lane();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink !== void 0) {\n        const resolvedResponse = response.node(nodeUri);\n        downlink.onLinkedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onSyncRequest(request: SyncRequest): void {\n    // TODO: client agents\n  }\n\n  protected onSyncedResponse(response: SyncedResponse): void {\n    const nodeUri = this.resolve(response.node());\n    const laneUri = response.lane();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink !== void 0) {\n        const resolvedResponse = response.node(nodeUri);\n        downlink.onSyncedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onUnlinkRequest(request: UnlinkRequest): void {\n    // TODO: client agents\n  }\n\n  protected onUnlinkedResponse(response: UnlinkedResponse): void {\n    const nodeUri = this.resolve(response.node());\n    const laneUri = response.lane();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink !== void 0) {\n        const resolvedResponse = response.node(nodeUri);\n        downlink.onUnlinkedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onAuthRequest(request: AuthRequest): void {\n    // TODO: client agents\n  }\n\n  protected onAuthedResponse(response: AuthedResponse): void {\n    this._authenticated = true;\n    this._session = response.body();\n    this._context.hostDidAuthenticate(response.body(), this);\n  }\n\n  protected onDeauthRequest(request: DeauthRequest): void {\n    // TODO: client agents\n  }\n\n  protected onDeauthedResponse(response: DeauthedResponse): void {\n    this._authenticated = false;\n    this._session = Value.absent();\n    this._context.hostDidDeauthenticate(response.body(), this);\n  }\n\n  protected onUnknownEnvelope(envelope: Envelope | string): void {\n    // nop\n  }\n\n  protected onConnect(): void {\n    this._reconnectTimeout = 0;\n    this._context.hostDidConnect(this);\n    this._downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidConnect(this);\n      }, this);\n    }, this);\n  }\n\n  protected onDisconnect(): void {\n    this._authenticated = false;\n    this._session = Value.absent();\n    this._context.hostDidDisconnect(this);\n    this._downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidDisconnect(this);\n      }, this);\n    }, this);\n  }\n\n  protected onError(error?: unknown): void {\n    this._context.hostDidFail(error, this);\n    this._downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidFail(error, this);\n      }, this);\n    }, this);\n  }\n\n  protected reconnect(): void {\n    if (this._reconnectTimer === 0) {\n      if (this._reconnectTimeout === 0) {\n        this._reconnectTimeout = Math.floor(500 + 1000 * Math.random());\n      } else {\n        this._reconnectTimeout = Math.min(Math.floor(1.8 * this._reconnectTimeout), this.maxReconnectTimeout());\n      }\n      this._reconnectTimer = setTimeout(this.open.bind(this), this._reconnectTimeout) as any;\n    }\n  }\n\n  protected clearReconnect(): void {\n    if (this._reconnectTimer !== 0) {\n      clearTimeout(this._reconnectTimer);\n      this._reconnectTimer = 0;\n    }\n  }\n\n  protected watchIdle(): void {\n    if (this._idleTimer === 0 && this.isConnected() && this.isIdle()) {\n      this._idleTimer = setTimeout(this.checkIdle.bind(this), this.idleTimeout()) as any;\n    }\n  }\n\n  protected clearIdle(): void {\n    if (this._idleTimer !== 0) {\n      clearTimeout(this._idleTimer);\n      this._idleTimer = 0;\n    }\n  }\n\n  protected checkIdle(): void {\n    if (this.isConnected() && this.isIdle()) {\n      this.close();\n    }\n  }\n\n  abstract open(): void;\n\n  close(): void {\n    this._context.closeHost(this);\n  }\n\n  closeUp(): void {\n    this._downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.closeUp(this);\n      }, this);\n    }, this);\n  }\n\n  abstract push(envelope: Envelope): void;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Uri} from \"@swim/uri\";\nimport {Envelope, CommandMessage, AuthRequest} from \"@swim/warp\";\nimport {HostContext} from \"./HostContext\";\nimport {HostOptions} from \"./Host\";\nimport {RemoteHost} from \"./RemoteHost\";\n\n/** @hidden */\nexport type WebSocketConstructor = {new(url: string, protocols?: string | string[]): WebSocket};\n\nexport interface WebSocketHostOptions extends HostOptions {\n  protocols?: string | string[];\n  WebSocket?: WebSocketConstructor;\n}\n\n/** @hidden */\nexport class WebSocketHost extends RemoteHost {\n  /** @hidden */\n  readonly _options: WebSocketHostOptions;\n  /** @hidden */\n  _socket: WebSocket | undefined;\n\n  constructor(context: HostContext, hostUri: Uri, options: WebSocketHostOptions = {}) {\n    super(context, hostUri, options);\n  }\n\n  get WebSocket(): WebSocketConstructor | undefined {\n    return this._options.WebSocket\n        || typeof WebSocket !== \"undefined\" && WebSocket\n        || typeof require === \"function\" && require(\"ws\") as WebSocketConstructor\n        || void 0;\n  }\n\n  isConnected(): boolean {\n    return this._socket !== void 0 ? this._socket.readyState === this._socket.OPEN : false;\n  }\n\n  open(): void {\n    this.clearReconnect();\n    if (this._socket === void 0) {\n      const WebSocket = this.WebSocket;\n      if (WebSocket === void 0) {\n        throw new Error(\"WebSocket undefined\");\n      }\n      let hostUri = this._hostUri;\n      const schemeName = hostUri.schemeName();\n      if (schemeName === \"warp\" || schemeName === \"swim\") {\n        hostUri = hostUri.scheme(\"ws\");\n      } else if (schemeName === \"warps\" || schemeName === \"swims\") {\n        hostUri = hostUri.scheme(\"wss\");\n      }\n      if (this._options.protocols !== void 0) {\n        this._socket = new WebSocket(hostUri.toString(), this._options.protocols);\n      } else {\n        this._socket = new WebSocket(hostUri.toString());\n      }\n      this._socket.onopen = this.onWebSocketOpen.bind(this);\n      this._socket.onmessage = this.onWebSocketMessage.bind(this);\n      this._socket.onclose = this.onWebSocketClose.bind(this);\n      this._socket.onerror = this.onWebSocketError.bind(this);\n    }\n  }\n\n  close(): void {\n    this.clearReconnect();\n    this.clearIdle();\n    if (this._socket !== void 0) {\n      this._socket.close();\n      if (!this._context.isOnline()) {\n        this.onWebSocketClose(); // force close event\n      }\n    } else {\n      super.close();\n    }\n  }\n\n  push(envelope: Envelope): void {\n    if (this.isConnected()) {\n      this.clearIdle();\n      const text = envelope.toRecon();\n      this._socket!.send(text);\n      this.watchIdle();\n    } else if (envelope instanceof CommandMessage) {\n      if (this._sendBuffer.length < this.sendBufferSize()) {\n        this._sendBuffer.push(envelope);\n      } else {\n        throw new Error(\"send buffer overflow\");\n      }\n      this.open();\n    }\n  }\n\n  protected onWebSocketOpen(): void {\n    if (this.isConnected()) {\n      const credentials = this.credentials();\n      if (credentials.isDefined()) {\n        const request = new AuthRequest(credentials);\n        this.push(request);\n      }\n      this.onConnect();\n      let envelope;\n      while ((envelope = this._sendBuffer.shift()) && this.isConnected()) {\n        this.push(envelope);\n      }\n      this.watchIdle();\n    } else {\n      this.close();\n    }\n  }\n\n  protected onWebSocketMessage(message: MessageEvent): void {\n    const data = message.data;\n    if (typeof data === \"string\") {\n      const envelope = Envelope.parseRecon(data);\n      if (envelope !== void 0) {\n        this.onEnvelope(envelope);\n      } else {\n        this.onUnknownEnvelope(data);\n      }\n    }\n  }\n\n  protected onWebSocketClose(): void {\n    if (this._socket !== void 0) {\n      this._socket.onopen = null;\n      this._socket.onmessage = null;\n      this._socket.onclose = null;\n      this._socket.onerror = null;\n      this._socket = void 0;\n    }\n    this.onDisconnect();\n    this.clearIdle();\n    if (!this.isIdle()) {\n      if (this._context.isOnline()) {\n        this.reconnect();\n      }\n    } else {\n      this.close();\n    }\n  }\n\n  protected onWebSocketError(): void {\n    if (this._socket !== void 0) {\n      this._socket.close();\n      if (!this._context.isOnline()) {\n        this.onWebSocketClose(); // force close event\n      } else {\n        this.onError();\n      }\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {\n  EventMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n} from \"@swim/warp\";\nimport {HostDownlink} from \"../host/HostDownlink\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkType, Downlink} from \"./Downlink\";\n\nconst LINKING = 1;\nconst LINKED = 2;\nconst SYNCING = 4;\nconst SYNCED = 8;\nconst UNLINKING = 16;\n\n/** @hidden */\nexport abstract class DownlinkModel implements HostDownlink {\n   /** @hidden */\n  readonly _context: DownlinkContext;\n   /** @hidden */\n  readonly _hostUri: Uri;\n   /** @hidden */\n  readonly _nodeUri: Uri;\n   /** @hidden */\n  readonly _laneUri: Uri;\n   /** @hidden */\n  readonly _prio: number;\n   /** @hidden */\n  readonly _rate: number;\n   /** @hidden */\n  readonly _body: Value;\n  /** @hidden */\n  _views: Downlink[];\n  /** @hidden */\n  _host: Host | null;\n  /** @hidden */\n  _status: number;\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio: number = 0, rate: number = 0, body: Value = Value.absent()) {\n    this._context = context;\n    this._hostUri = hostUri;\n    this._nodeUri = nodeUri;\n    this._laneUri = laneUri;\n    this._prio = prio;\n    this._rate = rate;\n    this._body = body;\n    this._views = [];\n    this._host = null;\n    this._status = 0;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  nodeUri(): Uri {\n    return this._nodeUri;\n  }\n\n  laneUri(): Uri {\n    return this._laneUri;\n  }\n\n  prio(): number {\n    return this._prio;\n  }\n\n  rate(): number {\n    return this._rate;\n  }\n\n  body(): Value {\n    return this._body;\n  }\n\n  abstract type(): DownlinkType;\n\n  keepLinked(): boolean {\n    for (let i = 0; i < this._views.length; i += 1) {\n      if (this._views[i].keepLinked()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  keepSynced(): boolean {\n    for (let i = 0; i < this._views.length; i += 1) {\n      if (this._views[i].keepSynced()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  unlinkDelay(): number {\n    return this._host !== null ? this._host.unlinkDelay() : 0;\n  }\n\n  isConnected(): boolean {\n    return this._host !== null ? this._host.isConnected() : false;\n  }\n\n  isAuthenticated(): boolean {\n    return this._host !== null ? this._host.isAuthenticated() : false;\n  }\n\n  isLinked(): boolean {\n    return (this._status & LINKED) !== 0;\n  }\n\n  isSynced(): boolean {\n    return (this._status & SYNCED) !== 0;\n  }\n\n  session(): Value {\n    return this._host !== null ? this._host.session() : Value.absent();\n  }\n\n  addDownlink(view: Downlink): void {\n    this._views.push(view);\n  }\n\n  removeDownlink(view: Downlink): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      if (this._views[i] === view) {\n        this._views.splice(i, 1);\n        view.closeUp();\n      }\n    }\n    if (this._views.length === 0) {\n      const unlinkDelay = this.unlinkDelay();\n      if (unlinkDelay < 0) {\n        this.unlink();\n      } else {\n        setTimeout(this.doUnlink.bind(this), unlinkDelay);\n      }\n    }\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onEventMessage(message);\n    }\n  }\n\n  onCommandMessage(body: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onCommandMessage(body);\n    }\n  }\n\n  onLinkRequest(request: LinkRequest): void {\n    this._status |= LINKING;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onLinkRequest(request);\n    }\n  }\n\n  onLinkedResponse(response: LinkedResponse, host: Host): void {\n    this._status = this._status & ~LINKING | LINKED;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onLinkedResponse(response);\n    }\n  }\n\n  onSyncRequest(request: SyncRequest): void {\n    this._status |= SYNCING;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onSyncRequest(request);\n    }\n  }\n\n  onSyncedResponse(response: SyncedResponse, host: Host): void {\n    this._status = this._status & ~SYNCING | SYNCED;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onSyncedResponse(response);\n    }\n  }\n\n  onUnlinkRequest(request: UnlinkRequest, host: Host): void {\n    this._status = this._status & ~(LINKING | SYNCING) | UNLINKING;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onUnlinkRequest(request);\n    }\n  }\n\n  onUnlinkedResponse(response: UnlinkedResponse, host: Host): void {\n    this._status &= ~UNLINKING;\n    if (this._views.length === 0 || this._status !== 0) {\n      for (let i = 0; i < this._views.length; i += 1) {\n        this._views[i].onUnlinkedResponse(response);\n      }\n      this.close();\n    } else { // concurrently relinked\n      if (this.keepSynced()) {\n        this.sync();\n      } else {\n        this.link();\n      }\n    }\n  }\n\n  hostDidConnect(host: Host): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].hostDidConnect();\n    }\n    if (this.keepSynced()) {\n      this.sync();\n    } else {\n      this.link();\n    }\n  }\n\n  hostDidDisconnect(host: Host): void {\n    this._status = 0;\n    let keepLinked = false;\n    for (let i = 0; i < this._views.length; i += 1) {\n      const view = this._views[i];\n      view.hostDidDisconnect();\n      keepLinked = keepLinked || view.keepLinked();\n    }\n    if (!keepLinked) {\n      this.close();\n    }\n  }\n\n  hostDidFail(error: unknown, host: Host): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].hostDidFail(error);\n    }\n  }\n\n  command(body: AnyValue): void {\n    body = Value.fromAny(body);\n    this.onCommandMessage(body);\n    this._host!.command(this._nodeUri, this._laneUri, body);\n  }\n\n  sync(): void {\n    const nodeUri = this._host!.unresolve(this._nodeUri);\n    const request = SyncRequest.of(nodeUri, this._laneUri, this._prio, this._rate, this._body);\n    this.onSyncRequest(request);\n    this._host!.push(request);\n  }\n\n  link(): void {\n    const nodeUri = this._host!.unresolve(this._nodeUri);\n    const request = LinkRequest.of(nodeUri, this._laneUri, this._prio, this._rate, this._body);\n    this.onLinkRequest(request);\n    this._host!.push(request);\n  }\n\n  unlink(): void {\n    this._status = UNLINKING;\n    this._context.unlinkDownlink(this);\n  }\n\n  protected doUnlink(): void {\n    if (this._views.length === 0) {\n      this.unlink();\n    }\n  }\n\n  close(): void {\n    this._context.closeDownlink(this);\n  }\n\n  openUp(host: Host): void {\n    this._host = host;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].openUp(host);\n    }\n  }\n\n  closeUp(): void {\n    const views = this._views;\n    this._views = [];\n    for (let i = 0; i < views.length; i += 1) {\n      views[i].closeUp();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport {DownlinkType} from \"./Downlink\";\nimport {EventDownlink} from \"./EventDownlink\";\n\n/** @hidden */\nexport class EventDownlinkModel extends DownlinkModel {\n  /** @hidden */\n  _views: EventDownlink[];\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n  }\n\n  type(): DownlinkType {\n    return \"event\";\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {EventDownlinkModel} from \"./EventDownlinkModel\";\n\nexport interface EventDownlinkObserver extends DownlinkObserver {\n}\n\nexport interface EventDownlinkInit extends EventDownlinkObserver, DownlinkInit {\n}\n\nexport class EventDownlink extends Downlink {\n  /** @hidden */\n  _observers: ReadonlyArray<EventDownlinkObserver> | null;\n  /** @hidden */\n  _model: EventDownlinkModel | null;\n\n  /** @hidden */\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: EventDownlinkInit,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number,\n              rate?: number, body?: Value, flags: number = DownlinkFlags.KeepLinked,\n              observers?: ReadonlyArray<EventDownlinkObserver> | EventDownlinkObserver | null) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n  }\n\n  protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                 body: Value, flags: number, observers: ReadonlyArray<EventDownlinkObserver> | null): this {\n    return new EventDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                             prio, rate, body, flags, observers) as this;\n  }\n\n  type(): DownlinkType {\n    return \"event\";\n  }\n\n  observe(observer: EventDownlinkObserver): this {\n    return super.observe(observer);\n  }\n\n  open(): this {\n    const laneUri = this._laneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this._nodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this._hostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this._context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model !== void 0) {\n      if (!(model instanceof EventDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n    } else {\n      model = new EventDownlinkModel(this._context, hostUri, nodeUri, laneUri,\n                                     this._prio, this._rate, this._body);\n      model.addDownlink(this);\n      this._context.openDownlink(model);\n    }\n    this._model = model as EventDownlinkModel;\n    if (this._owner !== void 0) {\n      this._owner.addDownlink(this);\n    }\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STree} from \"@swim/collections\";\nimport {Attr, Value, Record} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {EventMessage} from \"@swim/warp\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport {DownlinkType} from \"./Downlink\";\nimport {ListDownlink} from \"./ListDownlink\";\n\n/** @hidden */\nexport class ListDownlinkModel extends DownlinkModel {\n  /** @hidden */\n  _views: ListDownlink<unknown>[];\n  /** @hidden */\n  _state: STree<Value, Value>;\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: STree<Value, Value> = new STree()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    this._state = state;\n  }\n\n  type(): DownlinkType {\n    return \"list\";\n  }\n\n  isEmpty(): boolean {\n    return this._state.isEmpty();\n  }\n\n  get length(): number {\n    return this._state.length;\n  }\n\n  get(index: number, key?: Value): Value {\n    return this._state.get(index, key) || Value.absent();\n  }\n\n  getEntry(index: number, key?: Value): [Value, Value] | undefined {\n    return this._state.getEntry(index, key);\n  }\n\n  set(index: number, newValue: Value, key?: Value): this {\n    if (key !== void 0) {\n      index = this._state.lookup(key, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (index < 0 || index >= this._state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    newValue = this.listWillUpdate(index, newValue);\n    const oldEntry = this._state.getEntry(index)!;\n    this._state.set(index, newValue);\n    this.listDidUpdate(index, newValue, oldEntry[1]);\n    const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  insert(index: number, newValue: Value, key?: Value): this {\n    if (index < 0 || index > this._state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    newValue = this.listWillUpdate(index, newValue);\n    this._state.insert(index, newValue, key);\n    const newEntry = this._state.getEntry(index)!;\n    this.listDidUpdate(index, newValue, Value.absent());\n    const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  remove(index: number, key?: Value): this {\n    if (key !== void 0) {\n      index = this._state.lookup(key, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (index < 0 || index > this._state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    this.listWillRemove(index);\n    const oldEntry = this._state.getEntry(index)!;\n    this._state.remove(index);\n    this.listDidRemove(index, oldEntry[1]);\n    const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n    this.command(Record.create(1).attr(\"remove\", header));\n    return this;\n  }\n\n  push(...newValues: Value[]): number {\n    for (let i = 0; i < newValues.length; i += 1) {\n      const index = this._state.length + i;\n      const newValue = this.listWillUpdate(index, newValues[i]);\n      this._state.insert(index, newValue);\n      const newEntry = this._state.getEntry(index)!;\n      this.listDidUpdate(index, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return this._state.length;\n  }\n\n  pop(): Value {\n    const index = this._state.length - 1;\n    if (index >= 0) {\n      this.listWillRemove(index);\n      const oldEntry = this._state.getEntry(index)!;\n      this._state.remove(index);\n      this.listDidRemove(index, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return oldEntry[1];\n    } else {\n      return Value.absent();\n    }\n  }\n\n  unshift(...newValues: Value[]): number {\n    for (let i = newValues.length - 1; i >= 0; i -= 1) {\n      const newValue = this.listWillUpdate(0, newValues[i]);\n      this._state.insert(0, newValue);\n      const newEntry = this._state.getEntry(0)!;\n      this.listDidUpdate(0, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", 0);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return this._state.length;\n  }\n\n  shift(): Value {\n    if (this._state.length > 0) {\n      this.listWillRemove(0);\n      const oldEntry = this._state.getEntry(0)!;\n      this._state.remove(0);\n      this.listDidRemove(0, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", 0);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return oldEntry[1];\n    } else {\n      return Value.absent();\n    }\n  }\n\n  move(fromIndex: number, toIndex: number, key?: Value): this {\n    if (key !== void 0) {\n      fromIndex = this._state.lookup(key, fromIndex);\n      if (fromIndex < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (fromIndex < 0 || fromIndex >= this._state.length) {\n      throw new RangeError(\"\" + fromIndex);\n    }\n    if (toIndex < 0 || toIndex >= this._state.length) {\n      throw new RangeError(\"\" + toIndex);\n    }\n    if (fromIndex !== toIndex) {\n      const entry = this._state.getEntry(fromIndex)!;\n      this.listWillMove(fromIndex, toIndex, entry[1]);\n      this._state.remove(fromIndex).insert(toIndex, entry[1], entry[0]);\n      this.listDidMove(fromIndex, toIndex, entry[1]);\n      const header = Record.create(2).slot(\"key\", entry[0]).slot(\"from\", fromIndex).slot(\"to\", toIndex);\n      this.command(Record.create(1).attr(\"move\", header));\n    }\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newValues: Value[]): Value[] {\n    if (start < 0) {\n      start = this._state.length + start;\n    }\n    start = Math.min(Math.max(0, start), this._state.length);\n    if (deleteCount === void 0) {\n      deleteCount = this._state.length - start;\n    }\n    const deleted = [] as Value[];\n    for (let i = start, n = start + deleteCount; i < n; i += 1) {\n      this.listWillRemove(start);\n      const oldEntry = this._state.getEntry(start)!;\n      deleted.push(oldEntry[1]);\n      this._state.remove(start);\n      this.listDidRemove(start, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", start);\n      this.command(Record.create(1).attr(\"remove\", header));\n    }\n    for (let i = 0; i < newValues.length; i += 1) {\n      const index = start + i;\n      const newValue = this.listWillUpdate(index, newValues[i]);\n      this._state.insert(index, newValue);\n      const newEntry = this._state.getEntry(index)!;\n      this.listDidUpdate(index, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return deleted;\n  }\n\n  clear(): void {\n    this.listWillClear();\n    this._state.clear();\n    this.listDidClear();\n    this.command(Record.create(1).attr(\"clear\"));\n  }\n\n  forEach<T, S = unknown>(callback: (this: typeof thisArg,\n                                     value: Value,\n                                     index: number,\n                                     downlink: ListDownlinkModel,\n                                     key: Value) => T | void,\n                          thisArg?: S): T | undefined {\n    return this._state.forEach(function (value: Value, index: number, tree: STree<Value, Value>, key: Value): T | void {\n      return callback.call(thisArg, value, index, this, key);\n    }, this);\n  }\n\n  values(): Cursor<Value> {\n    return this._state.values();\n  }\n\n  keys(): Cursor<Value> {\n    return this._state.keys();\n  }\n\n  entries(): Cursor<[Value, Value]> {\n    return this._state.entries();\n  }\n\n  snapshot(): STree<Value, Value> {\n    return this._state.clone();\n  }\n\n  setState(state: STree<Value, Value>): void {\n    this._state = state;\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    const event = message.body();\n    const tag = event.tag();\n    if (tag === \"update\") {\n      const header = event.head().toValue();\n      const index = this._state.lookup(header.get(\"key\"), header.get(\"index\").numberValue());\n      if (index >= 0) {\n        this.onUpdateEvent(index, event.body(), header.get(\"key\"));\n      } else {\n        this.onInsertEvent(header.get(\"index\").numberValue(0), event.body(), header.get(\"key\"));\n      }\n    } else if (tag === \"move\") {\n      const header = event.head().toValue();\n      const index = this._state.lookup(header.get(\"key\"), header.get(\"from\").numberValue());\n      if (index >= 0) {\n        this.onMoveEvent(index, header.get(\"to\").numberValue(0), header.get(\"key\"));\n      }\n    } else if (tag === \"remove\") {\n      const header = event.head().toValue();\n      const index = this._state.lookup(header.get(\"key\"), header.get(\"index\").numberValue());\n      if (index >= 0) {\n        this.onRemoveEvent(index, header.get(\"key\"));\n      }\n    } else if (tag === \"drop\") {\n      const header = event.head();\n      this.onDropEvent(header.numberValue(0));\n    } else if (tag === \"take\") {\n      const header = event.head();\n      this.onTakeEvent(header.numberValue(0));\n    } else if (tag === \"clear\") {\n      this.onClearEvent();\n    }\n  }\n\n  protected onInsertEvent(index: number, newValue: Value, key: Value): void {\n    newValue = this.listWillUpdate(index, newValue);\n    this._state.insert(index, newValue, key);\n    this.listDidUpdate(index, newValue, Value.absent());\n  }\n\n  protected onUpdateEvent(index: number, newValue: Value, key: Value): void {\n    newValue = this.listWillUpdate(index, newValue);\n    const oldValue = this._state.get(index) || Value.absent();\n    this._state.set(index, newValue);\n    this.listDidUpdate(index, newValue, oldValue);\n  }\n\n  protected onMoveEvent(fromIndex: number, toIndex: number, key: Value): void {\n    toIndex = Math.min(Math.max(0, toIndex), this._state.length);\n    if (fromIndex !== toIndex) {\n      const value = this._state.get(fromIndex) || Value.absent();\n      this.listWillMove(fromIndex, toIndex, value);\n      this._state.remove(fromIndex).insert(toIndex, value, key);\n      this.listDidMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected onRemoveEvent(index: number, key: Value): void {\n    this.listWillRemove(index);\n    const oldValue = this._state.get(index) || Value.absent();\n    this._state.remove(index);\n    this.listDidRemove(index, oldValue);\n  }\n\n  protected onDropEvent(lower: number): void {\n    this.listWillDrop(lower);\n    this._state.drop(lower);\n    this.listDidDrop(lower);\n  }\n\n  protected onTakeEvent(upper: number): void {\n    this.listWillTake(upper);\n    this._state.take(upper);\n    this.listDidTake(upper);\n  }\n\n  protected onClearEvent(): void {\n    this.listWillClear();\n    this._state.clear();\n    this.listDidClear();\n  }\n\n  protected listWillUpdate(index: number, newValue: Value): Value {\n    for (let i = 0; i < this._views.length; i += 1) {\n      newValue = this._views[i].listWillUpdate(index, newValue);\n    }\n    return newValue;\n  }\n\n  protected listDidUpdate(index: number, newValue: Value, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidUpdate(index, newValue, oldValue);\n    }\n  }\n\n  protected listWillMove(fromIndex: number, toIndex: number, value: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected listDidMove(fromIndex: number, toIndex: number, value: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected listWillRemove(index: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillRemove(index);\n    }\n  }\n\n  protected listDidRemove(index: number, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidRemove(index, oldValue);\n    }\n  }\n\n  protected listWillDrop(lower: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillDrop(lower);\n    }\n  }\n\n  protected listDidDrop(lower: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidDrop(lower);\n    }\n  }\n\n  protected listWillTake(upper: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillTake(upper);\n    }\n  }\n\n  protected listDidTake(upper: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidTake(upper);\n    }\n  }\n\n  protected listWillClear() {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillClear();\n    }\n  }\n\n  protected listDidClear() {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidClear();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STree} from \"@swim/collections\";\nimport {Value, Form, ValueCursor, ValueEntryCursor} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {ListDownlinkModel} from \"./ListDownlinkModel\";\n\nexport type ListDownlinkWillUpdate<V extends VU, VU = V> = (index: number, newValue: V, downlink: ListDownlink<V, VU>) => V | void;\nexport type ListDownlinkDidUpdate<V extends VU, VU = V> = (index: number, newValue: V, oldValue: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillMove<V extends VU, VU = V> = (fromIndex: number, toIndex: number, value: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidMove<V extends VU, VU = V> = (fromIndex: number, toIndex: number, value: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillRemove<V extends VU, VU = V> = (index: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidRemove<V extends VU, VU = V> = (index: number, oldValue: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillDrop<V extends VU, VU = V> = (lower: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidDrop<V extends VU, VU = V> = (lower: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillTake<V extends VU, VU = V> = (upper: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidTake<V extends VU, VU = V> = (upper: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillClear<V extends VU, VU = V> = (downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidClear<V extends VU, VU = V> = (downlink: ListDownlink<V, VU>) => void;\n\nexport interface ListDownlinkObserver<V extends VU, VU = V> extends DownlinkObserver {\n  willUpdate?: ListDownlinkWillUpdate<V, VU>;\n  didUpdate?: ListDownlinkDidUpdate<V, VU>;\n  willMove?: ListDownlinkWillMove<V, VU>;\n  didMove?: ListDownlinkDidMove<V, VU>;\n  willRemove?: ListDownlinkWillRemove<V, VU>;\n  didRemove?: ListDownlinkDidRemove<V, VU>;\n  willDrop?: ListDownlinkWillDrop<V, VU>;\n  didDrop?: ListDownlinkDidDrop<V, VU>;\n  willTake?: ListDownlinkWillTake<V, VU>;\n  didTake?: ListDownlinkDidTake<V, VU>;\n  willClear?: ListDownlinkWillClear<V, VU>;\n  didClear?: ListDownlinkDidClear<V, VU>;\n}\n\nexport interface ListDownlinkInit<V extends VU, VU = V> extends ListDownlinkObserver<V, VU>, DownlinkInit {\n  valueForm?: Form<V, VU>;\n}\n\nexport class ListDownlink<V extends VU, VU = V> extends Downlink {\n  /** @hidden */\n  _observers: ReadonlyArray<ListDownlinkObserver<V, VU>> | null;\n  /** @hidden */\n  _model: ListDownlinkModel | null;\n  /** @hidden */\n  _valueForm: Form<V, VU>;\n  /** @hidden */\n  _state0: STree<Value, Value> | undefined;\n\n  /** @hidden */\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: ListDownlinkInit<V, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<ListDownlinkObserver<V, VU>> | ListDownlinkObserver<V, VU> | null,\n              valueForm?: Form<V, VU>, state0?: STree<Value, Value>) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init !== void 0) {\n      const observer = this._observers![this._observers!.length - 1];\n      observer.willUpdate = init.willUpdate || observer.willUpdate;\n      observer.didUpdate = init.didUpdate || observer.didUpdate;\n      observer.willMove = init.willMove || observer.willMove;\n      observer.didMove = init.didMove || observer.didMove;\n      observer.willRemove = init.willRemove || observer.willRemove;\n      observer.didRemove = init.didRemove || observer.didRemove;\n      observer.willDrop = init.willDrop || observer.willDrop;\n      observer.didDrop = init.didDrop || observer.didDrop;\n      observer.willTake = init.willTake || observer.willTake;\n      observer.didTake = init.didTake || observer.didTake;\n      observer.willClear = init.willClear || observer.willClear;\n      observer.didClear = init.didClear || observer.didClear;\n      valueForm = init.valueForm !== void 0 ? init.valueForm : valueForm;\n    }\n    this._valueForm = valueForm !== void 0 ? valueForm : Form.forValue() as any;\n    this._state0 = state0;\n  }\n\n  protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                 body: Value, flags: number, observers: ReadonlyArray<ListDownlinkObserver<V, VU>> | null,\n                 valueForm?: Form<V, VU>, state0?: STree<Value, Value>): this {\n    if (arguments.length === 10) {\n      valueForm = this._valueForm;\n      state0 = this._state0;\n    }\n    return new ListDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                            prio, rate, body, flags, observers, valueForm, state0) as this;\n  }\n\n  type(): DownlinkType {\n    return \"list\";\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm: Form<V2, V2U>): ListDownlink<V2, V2U>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm?: Form<V2, V2U>): Form<V, VU> | ListDownlink<V2, V2U> {\n    if (valueForm === void 0) {\n      return this._valueForm;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       valueForm as any, this._state0) as any;\n    }\n  }\n\n  isEmpty(): boolean {\n    return this._model!.isEmpty();\n  }\n\n  get length(): number {\n    return this._model!.length;\n  }\n\n  get(index: number, id?: Value): V {\n    const value = this._model!.get(index, id);\n    return value.coerce(this._valueForm);\n  }\n\n  getEntry(index: number, id?: Value): [V, Value] | undefined {\n    const entry = this._model!.getEntry(index, id);\n    if (entry !== void 0) {\n      return [entry[0].coerce(this._valueForm), entry[1]];\n    }\n    return void 0;\n  }\n\n  set(index: number, newObject: VU, id?: Value): this {\n    const newValue = this._valueForm.mold(newObject);\n    this._model!.set(index, newValue, id);\n    return this;\n  }\n\n  insert(index: number, newObject: VU, id?: Value): this {\n    const newValue = this._valueForm.mold(newObject);\n    this._model!.insert(index, newValue, id);\n    return this;\n  }\n\n  remove(index: number, id?: Value): this {\n    this._model!.remove(index, id);\n    return this;\n  }\n\n  push(...newObjects: VU[]): number {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this._valueForm.mold(newObjects[i]);\n    }\n    return this._model!.push.apply(this._model, newValues);\n  }\n\n  pop(): V {\n    const value = this._model!.pop();\n    return value.coerce(this._valueForm);\n  }\n\n  unshift(...newObjects: VU[]): number {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this._valueForm.mold(newObjects[i]);\n    }\n    return this._model!.unshift.apply(this._model, newValues);\n  }\n\n  shift(): V {\n    const value = this._model!.shift();\n    return value.coerce(this._valueForm);\n  }\n\n  move(fromIndex: number, toIndex: number, id?: Value): this {\n    this._model!.move(fromIndex, toIndex, id);\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newObjects: VU[]): V[] {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this._valueForm.mold(newObjects[i]);\n    }\n    const oldValues = this._model!.splice(start, deleteCount, ...newValues);\n    const oldObjects = new Array(oldValues.length);\n    for (let i = 0; i < oldValues.length; i += 1) {\n      oldObjects[i] = oldValues[i].coerce(this._valueForm);\n    }\n    return oldObjects;\n  }\n\n  clear(): void {\n    this._model!.clear();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     value: V,\n                                     index: number,\n                                     downlink: ListDownlink<V, VU>,\n                                     id: Value) => T | void,\n                          thisArg?: S): T | undefined {\n    if (this._valueForm as any === Form.forValue()) {\n      return this._model!._state.forEach(callback as any, thisArg);\n    } else {\n      return this._model!._state.forEach(function (value: Value, index: number, tree: STree<Value, Value>, id: Value): T | void {\n        const object = value.coerce(this._valueForm);\n        return callback.call(thisArg, object, index, this, id);\n      }, this);\n    }\n  }\n\n  values(): Cursor<V> {\n    const cursor = this._model!.values();\n    if (this._valueForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueCursor(cursor, this._valueForm);\n    }\n  }\n\n  keys(): Cursor<Value> {\n    return this._model!.keys();\n  }\n\n  entries(): Cursor<[Value, V]> {\n    const cursor = this._model!.entries();\n    if (this._valueForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueEntryCursor(cursor, Form.forValue(), this._valueForm);\n    }\n  }\n\n  snapshot(): STree<Value, Value> {\n    return this._model!.snapshot();\n  }\n\n  setState(state: STree<Value, Value>): void {\n    this._model!.setState(state);\n  }\n\n  observe(observer: ListDownlinkObserver<V, VU>): this {\n    return super.observe(observer);\n  }\n\n  willUpdate(willUpdate: ListDownlinkWillUpdate<V, VU>): this {\n    return this.observe({willUpdate});\n  }\n\n  didUpdate(didUpdate: ListDownlinkDidUpdate<V, VU>): this {\n    return this.observe({didUpdate});\n  }\n\n  willMove(willMove: ListDownlinkWillMove<V, VU>): this {\n    return this.observe({willMove});\n  }\n\n  didMove(didMove: ListDownlinkDidMove<V, VU>): this {\n    return this.observe({didMove});\n  }\n\n  willRemove(willRemove: ListDownlinkWillRemove<V, VU>): this {\n    return this.observe({willRemove});\n  }\n\n  didRemove(didRemove: ListDownlinkDidRemove<V, VU>): this {\n    return this.observe({didRemove});\n  }\n\n  willDrop(willDrop: ListDownlinkWillDrop<V, VU>): this {\n    return this.observe({willDrop});\n  }\n\n  didDrop(didDrop: ListDownlinkDidDrop<V, VU>): this {\n    return this.observe({didDrop});\n  }\n\n  willTake(willTake: ListDownlinkWillTake<V, VU>): this {\n    return this.observe({willTake});\n  }\n\n  didTake(didTake: ListDownlinkDidTake<V, VU>): this {\n    return this.observe({didTake});\n  }\n\n  willClear(willClear: ListDownlinkWillClear<V, VU>): this {\n    return this.observe({willClear});\n  }\n\n  didClear(didClear: ListDownlinkDidClear<V, VU>): this {\n    return this.observe({didClear});\n  }\n\n  /** @hidden */\n  listWillUpdate(index: number, newValue: Value): Value {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let newObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willUpdate !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        const newResult = observer.willUpdate(index, newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this._valueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  listDidUpdate(index: number, newValue: Value, oldValue: Value): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didUpdate !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didUpdate(index, newObject, oldObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillMove(fromIndex: number, toIndex: number, value: Value): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let object: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willMove !== void 0) {\n        if (object === void 0) {\n          object = value.coerce(this._valueForm);\n        }\n        observer.willMove(fromIndex, toIndex, object, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidMove(fromIndex: number, toIndex: number, value: Value): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let object: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didMove !== void 0) {\n        if (object === void 0) {\n          object = value.coerce(this._valueForm);\n        }\n        observer.didMove(fromIndex, toIndex, object, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillRemove(index: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willRemove !== void 0) {\n        observer.willRemove(index, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidRemove(index: number, oldValue: Value): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didRemove !== void 0) {\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didRemove(index, oldObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillDrop(lower: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willDrop !== void 0) {\n        observer.willDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidDrop(lower: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDrop !== void 0) {\n        observer.didDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillTake(upper: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willTake !== void 0) {\n        observer.willTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidTake(upper: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didTake !== void 0) {\n        observer.didTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillClear(): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willClear !== void 0) {\n        observer.willClear(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidClear(): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didClear !== void 0) {\n        observer.didClear(this);\n      }\n    }\n  }\n\n  initialState(): STree<Value, Value> | null;\n  initialState(state0: STree<Value, Value> | null): this;\n  initialState(state0?: STree<Value, Value> | null): STree<Value, Value> | null | this {\n    if (state0 === void 0) {\n      return this._state0 || null;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       this._valueForm, state0 || void 0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this._model!._state.forEach(function (value: Value, index: number) {\n      this.listDidUpdate(index, value, Value.absent());\n    }, this);\n    this.onSyncedResponse();\n  }\n\n  open(): this {\n    const laneUri = this._laneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this._nodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this._hostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this._context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model !== void 0) {\n      if (!(model instanceof ListDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      this._model = model as ListDownlinkModel;\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new ListDownlinkModel(this._context, hostUri, nodeUri, laneUri, this._prio,\n                                    this._rate, this._body, this._state0);\n      model.addDownlink(this);\n      this._context.openDownlink(model);\n      this._model = model as ListDownlinkModel;\n    }\n    if (this._owner !== void 0) {\n      this._owner.addDownlink(this);\n    }\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Attr, Value, Record} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {EventMessage} from \"@swim/warp\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport {DownlinkType} from \"./Downlink\";\nimport {MapDownlink} from \"./MapDownlink\";\n\n/** @hidden */\nexport class MapDownlinkModel extends DownlinkModel {\n  /** @hidden */\n  _views: MapDownlink<unknown, unknown>[];\n  /** @hidden */\n  _state: BTree<Value, Value>;\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: BTree<Value, Value> = new BTree()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    this._state = state;\n  }\n\n  type(): DownlinkType {\n    return \"map\";\n  }\n\n  get size(): number {\n    return this._state.size;\n  }\n\n  isEmpty(): boolean {\n    return this._state.isEmpty();\n  }\n\n  has(key: Value): boolean {\n    return this._state.has(key);\n  }\n\n  get(key: Value): Value {\n    return this._state.get(key) || Value.absent();\n  }\n\n  getEntry(index: number): [Value, Value] | undefined {\n    return this._state.getEntry(index);\n  }\n\n  set(key: Value, newValue: Value): this {\n    newValue = this.mapWillUpdate(key, newValue);\n    const oldValue = this._state.get(key) || Value.absent();\n    this._state.set(key, newValue);\n    this.mapDidUpdate(key, newValue, oldValue);\n    const header = Record.create(1).slot(\"key\", key);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  delete(key: Value): boolean {\n    if (this._state.has(key)) {\n      this.mapWillRemove(key);\n      const oldValue = this._state.get(key) || Value.absent();\n      this._state.delete(key);\n      this.mapDidRemove(key, oldValue);\n      const header = Record.create(1).slot(\"key\", key);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  drop(lower: number): this {\n    this.mapWillDrop(lower);\n    this._state.drop(lower);\n    this.mapDidDrop(lower);\n    this.command(Record.create(1).attr(\"drop\", lower));\n    return this;\n  }\n\n  take(upper: number): this {\n    this.mapWillTake(upper);\n    this._state.take(upper);\n    this.mapDidTake(upper);\n    this.command(Record.create(1).attr(\"take\", upper));\n    return this;\n  }\n\n  clear(): void {\n    this.mapWillClear();\n    this._state.clear();\n    this.mapDidClear();\n    this.command(Record.create(1).attr(\"clear\"));\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     key: Value,\n                                     value: Value,\n                                     downlink: MapDownlinkModel) => T | void,\n                          thisArg?: S): T | undefined {\n    return this._state.forEach(function (key: Value, value: Value): T | void {\n      return callback.call(thisArg, key, value, this);\n    }, this);\n  }\n\n  keys(): Cursor<Value> {\n    return this._state.keys();\n  }\n\n  values(): Cursor<Value> {\n    return this._state.values();\n  }\n\n  entries(): Cursor<[Value, Value]> {\n    return this._state.entries();\n  }\n\n  snapshot(): BTree<Value, Value> {\n    return this._state.clone();\n  }\n\n  setState(state: BTree<Value, Value>): void {\n    this._state = state;\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    const event = message.body();\n    const tag = event.tag();\n    if (tag === \"update\") {\n      const header = event.head().toValue();\n      this.onUpdateEvent(header.get(\"key\"), event.body());\n    } else if (tag === \"remove\") {\n      const header = event.head().toValue();\n      this.onRemoveEvent(header.get(\"key\"));\n    } else if (tag === \"drop\") {\n      const header = event.head().toValue();\n      this.onDropEvent(header.numberValue(0));\n    } else if (tag === \"take\") {\n      const header = event.head().toValue();\n      this.onTakeEvent(header.numberValue(0));\n    } else if (tag === \"clear\") {\n      this.onClearEvent();\n    }\n  }\n\n  protected onUpdateEvent(key: Value, newValue: Value): void {\n    newValue = this.mapWillUpdate(key, newValue);\n    const oldValue = this._state.get(key) || Value.absent();\n    this._state.set(key, newValue);\n    this.mapDidUpdate(key, newValue, oldValue);\n  }\n\n  protected onRemoveEvent(key: Value): void {\n    this.mapWillRemove(key);\n    const oldValue = this._state.get(key) || Value.absent();\n    this._state.delete(key);\n    this.mapDidRemove(key, oldValue);\n  }\n\n  protected onDropEvent(lower: number): void {\n    this.mapWillDrop(lower);\n    this._state.drop(lower);\n    this.mapDidDrop(lower);\n  }\n\n  protected onTakeEvent(upper: number): void {\n    this.mapWillTake(upper);\n    this._state.take(upper);\n    this.mapDidTake(upper);\n  }\n\n  protected onClearEvent(): void {\n    this.mapWillClear();\n    this._state.clear();\n    this.mapDidClear();\n  }\n\n  protected mapWillUpdate(key: Value, newValue: Value): Value {\n    for (let i = 0; i < this._views.length; i += 1) {\n      newValue = this._views[i].mapWillUpdate(key, newValue);\n    }\n    return newValue;\n  }\n\n  protected mapDidUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidUpdate(key, newValue, oldValue);\n    }\n  }\n\n  protected mapWillRemove(key: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapWillRemove(key);\n    }\n  }\n\n  protected mapDidRemove(key: Value, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidRemove(key, oldValue);\n    }\n  }\n\n  protected mapWillDrop(lower: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapWillDrop(lower);\n    }\n  }\n\n  protected mapDidDrop(lower: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidDrop(lower);\n    }\n  }\n\n  protected mapWillTake(upper: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapWillTake(upper);\n    }\n  }\n\n  protected mapDidTake(upper: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidTake(upper);\n    }\n  }\n\n  protected mapWillClear(): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapWillClear();\n    }\n  }\n\n  protected mapDidClear(): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidClear();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor, Map, OrderedMap} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Value, Form, ValueCursor, ValueEntryCursor} from \"@swim/structure\";\nimport {Inlet, Outlet, KeyEffect, MapInlet, MapOutlet, KeyOutlet} from \"@swim/streamlet\";\nimport {FilterFieldsFunction, FilterFieldsCombinator} from \"@swim/streamlet\";\nimport {MapValueFunction, MapValueCombinator} from \"@swim/streamlet\";\nimport {MapFieldValuesFunction, MapFieldValuesCombinator} from \"@swim/streamlet\";\nimport {ReduceFieldsCombinator} from \"@swim/streamlet\";\nimport {WatchValueFunction, WatchValueCombinator} from \"@swim/streamlet\";\nimport {WatchFieldsFunction, WatchFieldsCombinator} from \"@swim/streamlet\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {MapDownlinkModel} from \"./MapDownlinkModel\";\n\nexport type MapDownlinkWillUpdate<K extends KU, V extends VU, KU = K, VU = V> = (key: K, newValue: V, downlink: MapDownlink<K, V, KU, VU>) => V | void;\nexport type MapDownlinkDidUpdate<K extends KU, V extends VU, KU = K, VU = V> = (key: K, newValue: V, oldValue: V, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillRemove<K extends KU, V extends VU, KU = K, VU = V> = (key: K, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidRemove<K extends KU, V extends VU, KU = K, VU = V> = (key: K, oldValue: V, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillDrop<K extends KU, V extends VU, KU = K, VU = V> = (lower: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidDrop<K extends KU, V extends VU, KU = K, VU = V> = (lower: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillTake<K extends KU, V extends VU, KU = K, VU = V> = (upper: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidTake<K extends KU, V extends VU, KU = K, VU = V> = (upper: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillClear<K extends KU, V extends VU, KU = K, VU = V> = (downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidClear<K extends KU, V extends VU, KU = K, VU = V> = (downlink: MapDownlink<K, V, KU, VU>) => void;\n\nexport interface MapDownlinkObserver<K extends KU, V extends VU, KU = K, VU = V> extends DownlinkObserver {\n  willUpdate?: MapDownlinkWillUpdate<K, V, KU, VU>;\n  didUpdate?: MapDownlinkDidUpdate<K, V, KU, VU>;\n  willRemove?: MapDownlinkWillRemove<K, V, KU, VU>;\n  didRemove?: MapDownlinkDidRemove<K, V, KU, VU>;\n  willDrop?: MapDownlinkWillDrop<K, V, KU, VU>;\n  didDrop?: MapDownlinkDidDrop<K, V, KU, VU>;\n  willTake?: MapDownlinkWillTake<K, V, KU, VU>;\n  didTake?: MapDownlinkDidTake<K, V, KU, VU>;\n  willClear?: MapDownlinkWillClear<K, V, KU, VU>;\n  didClear?: MapDownlinkDidClear<K, V, KU, VU>;\n}\n\nexport interface MapDownlinkInit<K extends KU, V extends VU, KU = K, VU = V> extends MapDownlinkObserver<K, V, KU, VU>, DownlinkInit {\n  keyForm?: Form<K, KU>;\n  valueForm?: Form<V, VU>;\n}\n\nexport class MapDownlink<K extends KU, V extends VU, KU = K, VU = V> extends Downlink implements OrderedMap<K, V>, MapInlet<K, V, Map<K, V>>, MapOutlet<K, V, MapDownlink<K, V, KU, VU>> {\n  /** @hidden */\n  _observers: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>> | null;\n  /** @hidden */\n  _model: MapDownlinkModel | null;\n  /** @hidden */\n  _keyForm: Form<K, KU>;\n  /** @hidden */\n  _valueForm: Form<V, VU>;\n  /** @hidden */\n  _state0: BTree<Value, Value> | undefined;\n  /** @hidden */\n  protected _input: MapOutlet<K, V, Map<K, V>> | null;\n  /** @hidden */\n  protected _effects: BTree<K, KeyEffect>;\n  /** @hidden */\n  protected _outlets: BTree<K, KeyOutlet<K, V>>; // TODO: unify with observers\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<MapDownlink<K, V>>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  /** @hidden */\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: MapDownlinkInit<K, V, KU, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>> | MapDownlinkObserver<K, V, KU, VU> | null,\n              keyForm?: Form<K, KU>, valueForm?: Form<V, VU>, state0?: BTree<Value, Value>) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init !== void 0) {\n      const observer = this._observers![this._observers!.length - 1];\n      observer.willUpdate = init.willUpdate || observer.willUpdate;\n      observer.didUpdate = init.didUpdate || observer.didUpdate;\n      observer.willRemove = init.willRemove || observer.willRemove;\n      observer.didRemove = init.didRemove || observer.didRemove;\n      observer.willDrop = init.willDrop || observer.willDrop;\n      observer.didDrop = init.didDrop || observer.didDrop;\n      observer.willTake = init.willTake || observer.willTake;\n      observer.didTake = init.didTake || observer.didTake;\n      observer.willClear = init.willClear || observer.willClear;\n      observer.didClear = init.didClear || observer.didClear;\n      keyForm = init.keyForm !== void 0 ? init.keyForm : keyForm;\n      valueForm = init.valueForm !== void 0 ? init.valueForm : valueForm;\n    }\n    this._keyForm = keyForm !== void 0 ? keyForm : Form.forValue() as any;\n    this._valueForm = valueForm !== void 0 ? valueForm : Form.forValue() as any;\n    this._state0 = state0;\n    this._input = null;\n    this._effects = new BTree();\n    this._outlets = new BTree();\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                 body: Value, flags: number, observers: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>> | null,\n                 keyForm?: Form<K, KU>, valueForm?: Form<V, VU>, state0?: BTree<Value, Value>): this {\n    if (arguments.length === 10) {\n      state0 = this._state0;\n      keyForm = this._keyForm;\n      valueForm = this._valueForm;\n    }\n    return new MapDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                           prio, rate, body, flags, observers, keyForm, valueForm,\n                           state0) as this;\n  }\n\n  type(): DownlinkType {\n    return \"map\";\n  }\n\n  keyForm(): Form<K, KU>;\n  keyForm<K2 extends K2U, K2U = K2>(keyForm: Form<K2, K2U>): MapDownlink<K2, V, K2U, VU>;\n  keyForm<K2 extends K2U, K2U = K2>(keyForm?: Form<K2, K2U>): Form<K, KU> | MapDownlink<K2, V, K2U, VU> {\n    if (keyForm === void 0) {\n      return this._keyForm;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       keyForm as any, this._valueForm, this._state0) as any;\n    }\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm: Form<V2, V2U>): MapDownlink<K, V2, KU, V2U>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm?: Form<V2, V2U>): Form<V, VU> | MapDownlink<K, V2, KU, V2U> {\n    if (valueForm === void 0) {\n      return this._valueForm;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       this._keyForm, valueForm as any, this._state0) as any;\n    }\n  }\n\n  get size(): number {\n    return this._model!.size;\n  }\n\n  isEmpty(): boolean {\n    return this._model!.isEmpty();\n  }\n\n  has(key: KU): boolean {\n    const keyObject = this._keyForm.mold(key);\n    return this._model!.has(keyObject);\n  }\n\n  get(): MapDownlink<K, V, KU, VU>;\n  get(key: KU): V;\n  get(key?: KU): MapDownlink<K, V, KU, VU> | V {\n    if (key === void 0) {\n      return this;\n    } else {\n      const keyObject = this._keyForm.mold(key);\n      const value = this._model!.get(keyObject);\n      return value.coerce(this._valueForm);\n    }\n  }\n\n  getEntry(index: number): [K, V] | undefined {\n    const entry = this._model!.getEntry(index);\n    if (entry !== void 0) {\n      return [entry[0].coerce(this._keyForm), entry[1].coerce(this._valueForm)];\n    }\n    return void 0;\n  }\n\n  firstKey(): K | undefined {\n    const key = this._model!._state.firstKey();\n    if (key !== void 0) {\n      const keyObject = this._keyForm.cast(key);\n      if (keyObject !== void 0) {\n        return keyObject;\n      }\n    }\n    return this._keyForm.unit();\n  }\n\n  firstValue(): V | undefined {\n    const value = this._model!._state.firstValue();\n    if (value !== void 0) {\n      const object = this._valueForm.cast(value);\n      if (object !== void 0) {\n        return object;\n      }\n    }\n    return this._valueForm.unit();\n  }\n\n  firstEntry(): [K, V] | undefined {\n    const entry = this._model!._state.firstEntry();\n    if (entry !== void 0) {\n      const keyObject: K = this._keyForm.cast(entry[0])!;\n      const object: V = this._valueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  lastKey(): K | undefined {\n    const key = this._model!._state.lastKey();\n    if (key !== void 0) {\n      const keyObject = this._keyForm.cast(key);\n      if (keyObject !== void 0) {\n        return keyObject;\n      }\n    }\n    return this._keyForm.unit();\n  }\n\n  lastValue(): V | undefined {\n    const value = this._model!._state.lastValue();\n    if (value !== void 0) {\n      const object = this._valueForm.cast(value);\n      if (object !== void 0) {\n        return object;\n      }\n    }\n    return this._valueForm.unit();\n  }\n\n  lastEntry(): [K, V] | undefined {\n    const entry = this._model!._state.lastEntry();\n    if (entry !== void 0) {\n      const keyObject: K = this._keyForm.cast(entry[0])!;\n      const object: V = this._valueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  nextKey(keyObject: K): K | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const nextKey = this._model!._state.nextKey(key);\n    if (nextKey !== void 0) {\n      const nextKeyObject = this._keyForm.cast(nextKey);\n      if (nextKeyObject !== void 0) {\n        return nextKeyObject;\n      }\n    }\n    return this._keyForm.unit();\n  }\n\n  nextValue(keyObject: K): V | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const nextValue = this._model!._state.nextValue(key);\n    if (nextValue !== void 0) {\n      const nextObject = this._valueForm.cast(nextValue);\n      if (nextObject !== void 0) {\n        return nextObject;\n      }\n    }\n    return this._valueForm.unit();\n  }\n\n  nextEntry(keyObject: K): [K, V] | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const entry = this._model!._state.nextEntry(key);\n    if (entry !== void 0) {\n      const keyObject: K = this._keyForm.cast(entry[0])!;\n      const object: V = this._valueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  previousKey(keyObject: K): K | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const previousKey = this._model!._state.previousKey(key);\n    if (previousKey !== void 0) {\n      const previousKeyObject = this._keyForm.cast(previousKey);\n      if (previousKeyObject !== void 0) {\n        return previousKeyObject;\n      }\n    }\n    return this._keyForm.unit();\n  }\n\n  previousValue(keyObject: K): V | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const previousValue = this._model!._state.previousValue(key);\n    if (previousValue !== void 0) {\n      const previousObject = this._valueForm.cast(previousValue);\n      if (previousObject !== void 0) {\n        return previousObject;\n      }\n    }\n    return this._valueForm.unit();\n  }\n\n  previousEntry(keyObject: K): [K, V] | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const entry = this._model!._state.previousEntry(key);\n    if (entry !== void 0) {\n      const keyObject: K = this._keyForm.cast(entry[0])!;\n      const object: V = this._valueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  set(key: KU, newValue: VU): this {\n    const keyObject = this._keyForm.mold(key);\n    const newObject = this._valueForm.mold(newValue);\n    this._model!.set(keyObject, newObject);\n    return this;\n  }\n\n  delete(key: KU): boolean {\n    const keyObject = this._keyForm.mold(key);\n    return this._model!.delete(keyObject);\n  }\n\n  drop(lower: number): this {\n    this._model!.drop(lower);\n    return this;\n  }\n\n  take(upper: number): this {\n    this._model!.take(upper);\n    return this;\n  }\n\n  clear(): void {\n    this._model!.clear();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     key: K,\n                                     value: V,\n                                     downlink: MapDownlink<K, V, KU, VU>) => T | void,\n                          thisArg?: S): T | undefined {\n    if (this._keyForm as any === Form.forValue() && this._valueForm as any === Form.forValue()) {\n      return this._model!._state.forEach(callback as any, thisArg);\n    } else {\n      return this._model!._state.forEach(function (key: Value, value: Value): T | void {\n        const keyObject = key.coerce(this._keyForm);\n        const object = value.coerce(this._valueForm);\n        return callback.call(thisArg, keyObject, object, this);\n      }, this);\n    }\n  }\n\n  keys(): Cursor<K> {\n    const cursor = this._model!.keys();\n    if (this._keyForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueCursor(cursor, this._keyForm);\n    }\n  }\n\n  values(): Cursor<V> {\n    const cursor = this._model!.values();\n    if (this._valueForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueCursor(cursor, this._valueForm);\n    }\n  }\n\n  entries(): Cursor<[K, V]> {\n    const cursor = this._model!.entries();\n    if (this._keyForm as any === Form.forValue() && this._valueForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueEntryCursor(cursor, this._keyForm, this._valueForm);\n    }\n  }\n\n  snapshot(): BTree<Value, Value> {\n    return this._model!.snapshot();\n  }\n\n  setState(state: BTree<Value, Value>): void {\n    this._model!.setState(state);\n  }\n\n  observe(observer: MapDownlinkObserver<K, V, KU, VU>): this {\n    return super.observe(observer);\n  }\n\n  willUpdate(willUpdate: MapDownlinkWillUpdate<K, V, KU, VU>): this {\n    return this.observe({willUpdate});\n  }\n\n  didUpdate(didUpdate: MapDownlinkDidUpdate<K, V, KU, VU>): this {\n    return this.observe({didUpdate});\n  }\n\n  willRemove(willRemove: MapDownlinkWillRemove<K, V, KU, VU>): this {\n    return this.observe({willRemove});\n  }\n\n  didRemove(didRemove: MapDownlinkDidRemove<K, V, KU, VU>): this {\n    return this.observe({didRemove});\n  }\n\n  willDrop(willDrop: MapDownlinkWillDrop<K, V, KU, VU>): this {\n    return this.observe({willDrop});\n  }\n\n  didDrop(didDrop: MapDownlinkDidDrop<K, V, KU, VU>): this {\n    return this.observe({didDrop});\n  }\n\n  willTake(willTake: MapDownlinkWillTake<K, V, KU, VU>): this {\n    return this.observe({willTake});\n  }\n\n  didTake(didTake: MapDownlinkDidTake<K, V, KU, VU>): this {\n    return this.observe({didTake});\n  }\n\n  willClear(willClear: MapDownlinkWillClear<K, V, KU, VU>): this {\n    return this.observe({willClear});\n  }\n\n  didClear(didClear: MapDownlinkDidClear<K, V, KU, VU>): this {\n    return this.observe({didClear});\n  }\n\n  /** @hidden */\n  mapWillUpdate(key: Value, newValue: Value): Value {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let keyObject: K | undefined;\n    let newObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willUpdate !== void 0) {\n        if (keyObject === void 0) {\n          keyObject = key.coerce(this._keyForm);\n        }\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        const newResult = observer.willUpdate(keyObject, newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this._valueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  mapDidUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    const keyObject = key.coerce(this._keyForm);\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didUpdate !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didUpdate(keyObject, newObject, oldObject, this);\n      }\n    }\n    this.decohereInputKey(keyObject, KeyEffect.Update);\n    this.recohereInput(0); // TODO: debounce and track version\n  }\n\n  /** @hidden */\n  mapWillRemove(key: Value): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let keyObject: K | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willRemove !== void 0) {\n        if (keyObject === void 0) {\n          keyObject = key.coerce(this._keyForm);\n        }\n        observer.willRemove(keyObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidRemove(key: Value, oldValue: Value): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    const keyObject = key.coerce(this._keyForm);\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didRemove !== void 0) {\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didRemove(keyObject, oldObject, this);\n      }\n    }\n    this.decohereInputKey(keyObject, KeyEffect.Remove);\n    this.recohereInput(0); // TODO: debounce and track version\n  }\n\n  /** @hidden */\n  mapWillDrop(lower: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willDrop !== void 0) {\n        observer.willDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidDrop(lower: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDrop !== void 0) {\n        observer.didDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapWillTake(upper: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willTake !== void 0) {\n        observer.willTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidTake(upper: number): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didTake !== void 0) {\n        observer.didTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapWillClear(): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willClear !== void 0) {\n        observer.willClear(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidClear(): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didClear !== void 0) {\n        observer.didClear(this);\n      }\n    }\n  }\n\n  initialState(): BTree<Value, Value> | null;\n  initialState(state0: BTree<Value, Value> | null): this;\n  initialState(state0?: BTree<Value, Value> | null): BTree | null | this {\n    if (state0 === void 0) {\n      return this._state0 || null;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       this._keyForm, this._valueForm, state0 || void 0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this._model!._state.forEach(function (key: Value, value: Value): void {\n      this.mapDidUpdate(key, value, Value.absent());\n    }, this);\n    this.onSyncedResponse();\n  }\n\n  open(): this {\n    const laneUri = this._laneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this._nodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this._hostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this._context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model !== void 0) {\n      if (!(model instanceof MapDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      this._model = model as MapDownlinkModel;\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new MapDownlinkModel(this._context, hostUri, nodeUri, laneUri, this._prio,\n                                   this._rate, this._body, this._state0);\n      model.addDownlink(this);\n      this._context.openDownlink(model);\n      this._model = model as MapDownlinkModel;\n    }\n    if (this._owner !== void 0) {\n      this._owner.addDownlink(this);\n    }\n    return this;\n  }\n\n  keyIterator(): Cursor<K> {\n    return this.keys();\n  }\n\n  input(): MapOutlet<K, V, Map<K, V>> | null {\n    return this._input;\n  }\n\n  bindInput(input: MapOutlet<K, V, Map<K, V>>): void {\n    if (!MapOutlet.is(input)) {\n      throw new TypeError(\"\" + input);\n    }\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    const input = this._input;\n    if (input !== null) {\n      input.unbindOutput(this);\n      this._input = null;\n      input.disconnectInputs();\n    }\n  }\n\n  outlet(key: K): Outlet<V> {\n    let outlet = this._outlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet<K, V>(this, key);\n      this._outlets = this._outlets.updated(key, outlet);\n    }\n    return outlet;\n  }\n\n  outputIterator(): Cursor<Inlet<MapDownlink<K, V>>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<MapDownlink<K, V>>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<MapDownlink<K, V>>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<MapDownlink<K, V>>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<MapDownlink<K, V>>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const oldOutputs = this._outputs;\n    if (oldOutputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n        oldOutputs[i].unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    const outlets = this._outlets;\n    if (outlets.isEmpty()) {\n      this._outlets = new BTree();\n      outlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, V>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n        output.disconnectOutputs();\n      }\n    }\n  }\n\n  decohereOutputKey(key: K, effect: KeyEffect): void {\n    this.decohereKey(key, effect);\n  }\n\n  decohereInputKey(key: K, effect: KeyEffect): void {\n    this.decohereKey(key, effect);\n  }\n\n  decohereKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this._effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereKey(key, effect);\n      this._effects = oldEffects.updated(key, effect);\n      this._version = -1;\n      this.onDecohereKey(key, effect);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        const output = this._outputs![i];\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this._outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this._version >= 0) {\n      this.willDecohere();\n      this._version = -1;\n      this.onDecohere();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this._outlets.forEach(function (key: K, outlet: KeyOutlet<K, V>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohere();\n    }\n  }\n\n  recohereOutputKey(key: K, version: number): void {\n    this.recohereKey(key, version);\n  }\n\n  recohereInputKey(key: K, version: number): void {\n    this.recohereKey(key, version);\n  }\n\n  recohereKey(key: K, version: number): void {\n    if (this._version < 0) {\n      const oldEffects = this._effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereKey(key, effect, version);\n        this._effects = oldEffects.removed(key);\n        if (this._input !== null) {\n          this._input.recohereInputKey(key, version);\n        }\n        this.onRecohereKey(key, effect, version);\n        for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n          const output = this._outputs![i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this._outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this._version < 0) {\n      this.willRecohere(version);\n      this._effects.forEach(function (key: K): void {\n        this.recohereKey(key, version);\n      }, this);\n      this._version = version;\n      this.onRecohere(version);\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      if (this._input !== null) {\n        const value = this._input.get(key);\n        if (value !== void 0) {\n          this.set(key, value);\n        } else {\n          this.delete(key);\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this.delete(key);\n    }\n  }\n\n  protected didRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n\n  memoize(): MapOutlet<K, V, MapDownlink<K, V, KU, VU>> {\n    return this;\n  }\n\n  filter(func: FilterFieldsFunction<K, V>): MapOutlet<K, V, Map<K, V>> {\n    const combinator = new FilterFieldsCombinator<K, V, MapDownlink<K, V, KU, VU>>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  map<O2>(func: MapValueFunction<MapDownlink<K, V, KU, VU>, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<K, V, V2>): MapOutlet<K, V2, Map<K, V2>>;\n  map<V2>(func: MapValueFunction<MapDownlink<K, V, KU, VU>, V2> | MapFieldValuesFunction<K, V, V2>): Outlet<V2> | MapOutlet<K, V2, Map<K, V2>> {\n    if (func.length === 1) {\n      const combinator = new MapValueCombinator<MapDownlink<K, V, KU, VU>, V2>(func as MapValueFunction<MapDownlink<K, V, KU, VU>, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    } else {\n      const combinator = new MapFieldValuesCombinator<K, V, V2, MapDownlink<K, V, KU, VU>>(func as MapFieldValuesFunction<K, V, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    }\n  }\n\n  reduce<U>(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): Outlet<U> {\n    const combinator = new ReduceFieldsCombinator<K, V, MapDownlink<K, V, KU, VU>, U>(identity, accumulator, combiner);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<MapDownlink<K, V, KU, VU>>): this;\n  watch(func: WatchFieldsFunction<K, V>): this;\n  watch(func: WatchValueFunction<MapDownlink<K, V, KU, VU>> | WatchFieldsFunction<K, V>): this {\n    if (func.length === 1) {\n      const combinator = new WatchValueCombinator<MapDownlink<K, V, KU, VU>>(func as WatchValueFunction<MapDownlink<K, V, KU, VU>>);\n      combinator.bindInput(this);\n      return this;\n    } else {\n      const combinator = new WatchFieldsCombinator<K, V, MapDownlink<K, V, KU, VU>>(func as WatchFieldsFunction<K, V>);\n      combinator.bindInput(this);\n      return this;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {EventMessage} from \"@swim/warp\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport {DownlinkType} from \"./Downlink\";\nimport {ValueDownlink} from \"./ValueDownlink\";\n\n/** @hidden */\nexport class ValueDownlinkModel extends DownlinkModel {\n  /** @hidden */\n  _views: ValueDownlink<unknown>[];\n  /** @hidden */\n  _state: Value;\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: Value = Value.absent()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    this._state = state;\n  }\n\n  type(): DownlinkType {\n    return \"value\";\n  }\n\n  get(): Value {\n    return this._state;\n  }\n\n  set(newValue: Value): void {\n    newValue = this.valueWillSet(newValue);\n    const oldValue = this._state;\n    this.setState(newValue);\n    this.valueDidSet(newValue, oldValue);\n    this.command(newValue);\n  }\n\n  setState(state: Value): void {\n    this._state = state;\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    this.onSetEvent(message.body());\n  }\n\n  protected onSetEvent(newValue: Value): void {\n    newValue = this.valueWillSet(newValue);\n    const oldValue = this._state;\n    this.setState(newValue);\n    this.valueDidSet(newValue, oldValue);\n  }\n\n  protected valueWillSet(newValue: Value): Value {\n    for (let i = 0; i < this._views.length; i += 1) {\n      newValue = this._views[i].valueWillSet(newValue);\n    }\n    return newValue;\n  }\n\n  protected valueDidSet(newValue: Value, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].valueDidSet(newValue, oldValue);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Value, Form} from \"@swim/structure\";\nimport {Inlet, Outlet} from \"@swim/streamlet\";\nimport {MapValueFunction, MapValueCombinator} from \"@swim/streamlet\";\nimport {WatchValueFunction, WatchValueCombinator} from \"@swim/streamlet\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {ValueDownlinkModel} from \"./ValueDownlinkModel\";\n\nexport type ValueDownlinkWillSet<V extends VU, VU = V> = (newValue: V, downlink: ValueDownlink<V, VU>) => V | void;\nexport type VaueDownlinkDidSet<V extends VU, VU = V> = (newValue: V, oldValue: V, downlink: ValueDownlink<V, VU>) => void;\n\nexport interface ValueDownlinkObserver<V extends VU, VU = V> extends DownlinkObserver {\n  willSet?: ValueDownlinkWillSet<V, VU>;\n  didSet?: VaueDownlinkDidSet<V, VU>;\n}\n\nexport interface ValueDownlinkInit<V extends VU, VU = V> extends ValueDownlinkObserver<V, VU>, DownlinkInit {\n  valueForm?: Form<V, VU>;\n}\n\nexport class ValueDownlink<V extends VU, VU = V> extends Downlink implements Inlet<V>, Outlet<V> {\n  /** @hidden */\n  _observers: ReadonlyArray<ValueDownlinkObserver<V, VU>> | null;\n  /** @hidden */\n  _model: ValueDownlinkModel | null;\n  /** @hidden */\n  _valueForm: Form<V, VU>;\n  /** @hidden */\n  _state0: Value;\n  /** @hidden */\n  _input: Outlet<V> | null;\n  /** @hidden */\n  _outputs: ReadonlyArray<Inlet<V>> | null; // TODO: unify with observers\n  /** @hidden */\n  _version: number;\n\n  /** @hidden */\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: ValueDownlinkInit<V, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<ValueDownlinkObserver<V, VU>> | ValueDownlinkObserver<V, VU> | null,\n              valueForm?: Form<V, VU>, state0: Value = Value.absent()) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init !== void 0) {\n      const observer = this._observers![this._observers!.length - 1];\n      observer.willSet = init.willSet || observer.willSet;\n      observer.didSet = init.didSet || observer.didSet;\n      valueForm = init.valueForm !== void 0 ? init.valueForm : valueForm;\n    }\n    this._valueForm = valueForm !== void 0 ? valueForm : Form.forValue() as any;\n    this._state0 = state0;\n    this._input = null;\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                 body: Value, flags: number, observers: ReadonlyArray<ValueDownlinkObserver<V, VU>> | null,\n                 valueForm?: Form<V, VU>, state0?: Value): this {\n    if (arguments.length === 10) {\n      state0 = this._state0;\n      valueForm = this._valueForm;\n    }\n    return new ValueDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                             prio, rate, body, flags, observers, valueForm, state0) as this;\n  }\n\n  type(): DownlinkType {\n    return \"value\";\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm: Form<V2, V2U>): ValueDownlink<V2, V2U>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm?: Form<V2, V2U>): Form<V, VU> | ValueDownlink<V2, V2U> {\n    if (valueForm === void 0) {\n      return this._valueForm;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       valueForm as any, this._state0) as any;\n    }\n  }\n\n  get(): V {\n    const value = this._model!.get();\n    const object = value.coerce(this._valueForm);\n    return object;\n  }\n\n  set(newObject: VU): void {\n    const newValue = this._valueForm.mold(newObject);\n    this._model!.set(newValue);\n  }\n\n  setState(state: Value): void {\n    this._model!.setState(state);\n  }\n\n  observe(observer: ValueDownlinkObserver<V, VU>): this {\n    return super.observe(observer);\n  }\n\n  willSet(willSet: ValueDownlinkWillSet<V, VU>): this {\n    return this.observe({willSet});\n  }\n\n  didSet(didSet: VaueDownlinkDidSet<V, VU>): this {\n    return this.observe({didSet});\n  }\n\n  /** @hidden */\n  valueWillSet(newValue: Value): Value {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let newObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willSet !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        const newResult = observer.willSet(newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this._valueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  valueDidSet(newValue: Value, oldValue: Value) {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didSet !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didSet(newObject, oldObject, this);\n      }\n    }\n    this.decohere();\n    this.recohere(0); // TODO: debounce update; track version\n  }\n\n  initialState(): Value;\n  initialState(state0: Value): this;\n  initialState(state0?: Value): Value | this {\n    if (state0 === void 0) {\n      return this._state0;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       this._valueForm, state0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this.valueDidSet(this._model!.get(), Value.absent());\n    this.onSyncedResponse();\n  }\n\n  open(): this {\n    const laneUri = this._laneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this._nodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this._hostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this._context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model !== void 0) {\n      if (!(model instanceof ValueDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      this._model = model as ValueDownlinkModel;\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new ValueDownlinkModel(this._context, hostUri, nodeUri, laneUri, this._prio,\n                                     this._rate, this._body, this._state0);\n      model.addDownlink(this);\n      this._context.openDownlink(model);\n      this._model = model as ValueDownlinkModel;\n    }\n    if (this._owner !== void 0) {\n      this._owner.addDownlink(this);\n    }\n    return this;\n  }\n\n  input(): Outlet<V> | null {\n    return this._input;\n  }\n\n  bindInput(input: Outlet<V> | null): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    const input = this._input;\n    if (input !== null) {\n      input.unbindOutput(this);\n      this._input = null;\n      input.disconnectInputs();\n    }\n  }\n\n  outputIterator(): Cursor<Inlet<V>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<V>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<V>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<V>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<V>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const oldOutputs = this._outputs;\n    if (oldOutputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n        oldOutputs[i].unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n        output.disconnectOutputs();\n      }\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this._version >= 0) {\n      this.willDecohere();\n      this._version = -1;\n      this.onDecohere();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].decohereOutput();\n      }\n      this.didDecohere();\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this._version < 0) {\n      this.willRecohere(version);\n      this._version = version;\n      if (this._input !== null) {\n        this._input.recohereInput(version);\n      }\n      this.onRecohere(version);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    if (this._input !== null) {\n      const value = this._input.get();\n      if (value !== void 0) {\n        this.set(value);\n      }\n    }\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n\n  memoize(): Outlet<V> {\n    return this;\n  }\n\n  map<V2>(func: MapValueFunction<V, V2>): Outlet<V2> {\n    const combinator = new MapValueCombinator<V, V2>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<V>): this {\n    const combinator = new WatchValueCombinator<V>(func);\n    combinator.bindInput(this);\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractRecordOutlet} from \"@swim/dataflow\";\nimport {Downlink} from \"./Downlink\";\n\nexport abstract class DownlinkRecord extends AbstractRecordOutlet {\n  readonly downlink: Downlink;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, AnyValue, Value, Record, AnyText, AnyNum, Num} from \"@swim/structure\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport {ListDownlink} from \"./ListDownlink\";\n\nexport class ListDownlinkRecord extends DownlinkRecord {\n  /** @hidden */\n  readonly _downlink: ListDownlink<Value, AnyValue>;\n\n  constructor(downlink: ListDownlink<Value, AnyValue>) {\n    super();\n    this._downlink = downlink;\n  }\n\n  get downlink(): ListDownlink<Value, AnyValue> {\n    return this._downlink;\n  }\n\n  isEmpty(): boolean {\n    return this._downlink.isEmpty();\n  }\n\n  isArray(): boolean {\n    return true;\n  }\n\n  isObject(): boolean {\n    return this._downlink.isEmpty();\n  }\n\n  get length(): number {\n    return this._downlink.length;\n  }\n\n  get size(): number {\n    return this._downlink.length;\n  }\n\n  has(key: AnyValue): boolean {\n    return false;\n  }\n\n  get(): Record;\n  get(key: AnyValue): Value;\n  get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      return Value.absent();\n    }\n  }\n\n  getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  getSlot(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this._downlink.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      return this._downlink.get(index);\n    }\n    return Item.absent();\n  }\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setItem(index: AnyNum, newItem: AnyItem): this {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this._downlink.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      this._downlink.set(index, Value.fromAny(newItem));\n    }\n    return this;\n  }\n\n  push(...newItems: AnyItem[]): number {\n    return this._downlink.push.apply(this._downlink, arguments);\n  }\n\n  splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    return this._downlink.splice.apply(this._downlink, arguments);\n  }\n\n  delete(key: AnyValue): Item {\n    return Item.absent();\n  }\n\n  clear(): void {\n    this._downlink.clear();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    return this._downlink.forEach(function (value: Value, index: number): T | void {\n      return callback.call(thisArg, value, index);\n    });\n  }\n\n  keyIterator(): Cursor<Value> {\n    return Cursor.empty();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, Slot, AnyValue, Value, Record, AnyText, AnyNum, Num} from \"@swim/structure\";\nimport {KeyEffect} from \"@swim/streamlet\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport {MapDownlink} from \"./MapDownlink\";\n\nexport class MapDownlinkRecord extends DownlinkRecord {\n  /** @hidden */\n  readonly _downlink: MapDownlink<Value, Value, AnyValue, AnyValue>;\n\n  constructor(downlink: MapDownlink<Value, Value, AnyValue, AnyValue>) {\n    super();\n    this._downlink = downlink;\n    this._downlink.observe(this);\n  }\n\n  get downlink(): MapDownlink<Value, Value, AnyValue, AnyValue> {\n    return this._downlink;\n  }\n\n  isEmpty(): boolean {\n    return this._downlink.isEmpty();\n  }\n\n  isArray(): boolean {\n    return this._downlink.isEmpty();\n  }\n\n  isObject(): boolean {\n    return true;\n  }\n\n  get length(): number {\n    return this._downlink.size;\n  }\n\n  has(key: AnyValue): boolean {\n    return this._downlink.has(key);\n  }\n\n  get(): Record;\n  get(key: AnyValue): Value;\n  get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      return this._downlink.get(key);\n    }\n  }\n\n  getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  getSlot(key: AnyValue): Value {\n    return this.get(key);\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this._downlink.size;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      const entry = this._downlink.getEntry(index)!;\n      return Slot.of(entry[0], entry[1]);\n    }\n    return Item.absent();\n  }\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    this._downlink.set(key, newValue);\n    return this;\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    return this.set(key, newValue);\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    throw new Error(\"unsupported\");\n  }\n\n  push(...newItems: AnyItem[]): number {\n    throw new Error(\"unsupported\");\n  }\n\n  splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    throw new Error(\"unsupported\");\n  }\n\n  delete(key: AnyValue): Item {\n    key = Value.fromAny(key);\n    const oldValue = this._downlink.get(key);\n    if (this._downlink.delete(key)) {\n      return Slot.of(key, oldValue);\n    }\n    return Item.absent();\n  }\n\n  clear(): void {\n    this._downlink.clear();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    let index = 0;\n    return this._downlink.forEach(function (key: Value, value: Value): T | void {\n      const result = callback.call(thisArg, Slot.of(key, value), index);\n      index += 1;\n      return result;\n    });\n  }\n\n  keyIterator(): Cursor<Value> {\n    return this._downlink.keys();\n  }\n\n  didUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    this.decohereInputKey(key, KeyEffect.Update);\n    this.recohereInput(0); // TODO: debounce\n  }\n\n  didRemove(key: Value, oldValue: Value): void {\n    this.decohereInputKey(key, KeyEffect.Remove);\n    this.recohereInput(0); // TODO: debounce\n  }\n\n  didDrop(lower: number): void {\n    // TODO\n  }\n\n  didTake(upper: number): void {\n    // TODO\n  }\n\n  didClear(): void {\n    // TODO\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, Field, AnyValue, Value, Record, AnyText, AnyNum} from \"@swim/structure\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport {ValueDownlink} from \"./ValueDownlink\";\n\nexport class ValueDownlinkRecord extends DownlinkRecord {\n  /** @hidden */\n  readonly _downlink: ValueDownlink<Value, AnyValue>;\n\n  constructor(downlink: ValueDownlink<Value, AnyValue>) {\n    super();\n    this._downlink = downlink;\n    this._downlink.observe(this);\n  }\n\n  get downlink(): ValueDownlink<Value, AnyValue> {\n    return this._downlink;\n  }\n\n  isEmpty(): boolean {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.isEmpty();\n    } else {\n      return !value.isDefined();\n    }\n  }\n\n  isArray(): boolean {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.isArray();\n    } else {\n      return true;\n    }\n  }\n\n  isObject(): boolean {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.isObject();\n    } else {\n      return !value.isDefined();\n    }\n  }\n\n  get length(): number {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.length;\n    } else if (value.isDefined()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  has(key: AnyValue): boolean {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.has(key);\n    } else {\n      return false;\n    }\n  }\n\n  get(): Record;\n  get(key: AnyValue): Value;\n  get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      const value = this._downlink.get();\n      if (value instanceof Record) {\n        return value.get(key);\n      } else {\n        return Value.absent();\n      }\n    }\n  }\n\n  getAttr(key: AnyText): Value {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.getAttr(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  getSlot(key: AnyValue): Value {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.getSlot(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  getField(key: AnyValue): Field | undefined {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.getField(key);\n    } else {\n      return void 0;\n    }\n  }\n\n  getItem(index: AnyNum): Item {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.getItem(index);\n    } else {\n      return value;\n    }\n  }\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.set(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.setAttr(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.setSlot(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.setItem(index, newItem);\n    } else {\n      this._downlink.set(Item.fromAny(newItem).toValue());\n    }\n    return this;\n  }\n\n  push(...newItems: AnyItem[]): number {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.push.apply(value, arguments);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.splice.apply(value, arguments);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  delete(key: AnyValue): Item {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.delete(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  clear(): void {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.clear();\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    const value = this._downlink.get();\n    return value.forEach(callback, thisArg);\n  }\n\n  keyIterator(): Cursor<Value> {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      throw new Error(); // TODO\n    } else {\n      return Cursor.empty();\n    }\n  }\n\n  didSet(newValue: Value, oldValue: Value): void {\n    this.decohereInput();\n    this.recohereInput(0); // TODO: debounce\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Field, Value, Record} from \"@swim/structure\";\nimport {RecordModel, Reifier} from \"@swim/dataflow\";\nimport {DownlinkStreamlet} from \"./DownlinkStreamlet\";\nimport {WarpRef} from \"../WarpRef\";\n\n/** @hidden */\nexport class DownlinkReifier extends Reifier {\n  warp: WarpRef | undefined;\n\n  constructor(warp?: WarpRef) {\n    super();\n    this.warp = warp;\n  }\n\n  reify(item: Item): Item {\n    if (item instanceof Field) {\n      return this.reifyField(item);\n    } else {\n      return this.reifyValue(item);\n    }\n  }\n\n  /** @hidden */\n  reifyField(field: Field): Field {\n    const oldValue = field.value;\n    const newValue = this.reifyValue(oldValue);\n    if (oldValue !== newValue) {\n      return field.updatedValue(newValue);\n    } else {\n      return field;\n    }\n  }\n\n  /** @hidden */\n  reifyValue(value: Value): Value {\n    if (value instanceof RecordModel) {\n      return this.reifyModel(value);\n    } else {\n      return value;\n    }\n  }\n\n  /** @hidden */\n  reifyModel(model: RecordModel): Record {\n    if (model.tag() === \"link\") {\n      const streamlet = new DownlinkStreamlet(this.warp, model);\n      streamlet.compile();\n      return streamlet;\n    }\n    return model;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Map} from \"@swim/util\";\nimport {Value, Form} from \"@swim/structure\";\nimport {Outlet, Inoutlet, StreamletScope, Out, Inout} from \"@swim/streamlet\";\nimport {AbstractRecordStreamlet, Reifier} from \"@swim/dataflow\";\nimport {DownlinkType, Downlink} from \"./Downlink\";\nimport {ValueDownlink} from \"./ValueDownlink\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport {MapDownlinkRecord} from \"./MapDownlinkRecord\";\nimport {DownlinkReifier} from \"./DownlinkReifier\";\nimport {WarpRef} from \"../WarpRef\";\nimport {client} from \"..\";\n\nexport class DownlinkStreamlet extends AbstractRecordStreamlet {\n  warp: WarpRef | undefined;\n  downlink: Downlink | undefined;\n  /** @hidden */\n  downlinkRecord: DownlinkRecord | undefined;\n  /** @hidden */\n  inputHostUri: string | undefined;\n  /** @hidden */\n  inputNodeUri: string | undefined;\n  /** @hidden */\n  inputLaneUri: string | undefined;\n  /** @hidden */\n  inputPrio: number | undefined;\n  /** @hidden */\n  inputRate: number | undefined;\n  /** @hidden */\n  inputBody: Value | undefined;\n  /** @hidden */\n  inputType: DownlinkType | undefined;\n\n  constructor(warp?: WarpRef, scope?: StreamletScope<Value> | null) {\n    super(scope);\n    this.warp = warp;\n  }\n\n  @Inout\n  hostUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  nodeUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  laneUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  prio: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  rate: Inoutlet<Value> = this.inoutlet();\n\n  @Inout(\"body\")\n  bodyValue: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  type: Inoutlet<Value> = this.inoutlet();\n\n  @Out\n  state: Outlet<Value | Map<Value, Value>>;\n\n  getOutput(outlet: Outlet<Value> | string): Value | undefined {\n    outlet = this.outlet(outlet)!;\n    if (outlet === this.state) {\n      if (this.downlink instanceof ValueDownlink) {\n        return this.downlink.get();\n      } else if (this.downlinkRecord !== void 0) {\n        return this.downlinkRecord;\n      }\n    }\n    return void 0;\n  }\n\n  protected onRecohere(version: number): void {\n    const hostUri = this.castInput(this.hostUri, Form.forString());\n    const nodeUri = this.castInput(this.nodeUri, Form.forString());\n    const laneUri = this.castInput(this.laneUri, Form.forString());\n    const prio = this.castInput(this.prio, Form.forNumber(), 0);\n    const rate = this.castInput(this.rate, Form.forNumber(), 0);\n    const body = this.getInput(this.bodyValue);\n    const type = this.castInput(this.type, Form.forString(), void 0) as DownlinkType | undefined;\n    if (hostUri !== this.inputHostUri || nodeUri !== this.inputNodeUri || laneUri !== this.inputLaneUri\n        || prio !== this.inputPrio || rate !== this.inputRate\n        || (body === void 0 ? this.inputBody !== void 0 : !body.equals(this.inputBody))\n        || type !== this.inputType) {\n      if (this.downlink !== void 0) {\n        this.downlink.close();\n        this.downlink = void 0;\n        this.downlinkRecord = void 0;\n      }\n      this.inputHostUri = hostUri;\n      this.inputNodeUri = nodeUri;\n      this.inputLaneUri = laneUri;\n      this.inputPrio = prio;\n      this.inputRate = rate;\n      this.inputBody = body;\n      this.inputType = type;\n      const warp = this.warp || client;\n      if (type === \"map\") {\n        let downlink = warp.downlinkMap();\n        if (hostUri !== void 0) {\n          downlink = downlink.hostUri(hostUri);\n        }\n        if (nodeUri !== void 0) {\n          downlink = downlink.nodeUri(nodeUri);\n        }\n        if (laneUri !== void 0) {\n          downlink = downlink.laneUri(laneUri);\n        }\n        if (prio !== 0) {\n          downlink = downlink.prio(prio);\n        }\n        if (rate !== 0) {\n          downlink = downlink.rate(rate);\n        }\n        if (body !== void 0) {\n          downlink = downlink.body(body);\n        }\n        downlink = downlink.open();\n        this.state = downlink;\n        this.downlink = downlink;\n        this.downlinkRecord = new MapDownlinkRecord(downlink);\n      } else if (type === \"value\") {\n        let downlink = warp.downlinkValue();\n        if (hostUri !== void 0) {\n          downlink = downlink.hostUri(hostUri);\n        }\n        if (nodeUri !== void 0) {\n          downlink = downlink.nodeUri(nodeUri);\n        }\n        if (laneUri !== void 0) {\n          downlink = downlink.laneUri(laneUri);\n        }\n        if (prio !== void 0) {\n          downlink = downlink.prio(prio);\n        }\n        if (rate !== void 0) {\n          downlink = downlink.rate(rate);\n        }\n        if (body !== void 0) {\n          downlink = downlink.body(body);\n        }\n        downlink = downlink.open();\n        this.state = downlink;\n        this.downlink = downlink;\n      }\n    }\n  }\n\n  private static _reifier?: DownlinkReifier;\n\n  static reifier(warp?: WarpRef): Reifier {\n    if (warp === void 0) {\n      if (DownlinkStreamlet._reifier === void 0) {\n        DownlinkStreamlet._reifier = new DownlinkReifier();\n      }\n      return DownlinkStreamlet._reifier;\n    } else {\n      return new DownlinkReifier(warp);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkOwner} from \"../downlink/DownlinkOwner\";\nimport {Downlink} from \"../downlink/Downlink\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport {RefContext} from \"./RefContext\";\nimport {WarpRef} from \"../WarpRef\";\nimport {\n  WarpDidConnect,\n  WarpDidAuthenticate,\n  WarpDidDeauthenticate,\n  WarpDidDisconnect,\n  WarpDidFail,\n  WarpObserver,\n} from \"../WarpObserver\";\n\nexport abstract class BaseRef implements DownlinkOwner, WarpRef {\n  /** @hidden */\n  readonly _context: RefContext;\n  /** @hidden */\n  _host: Host | undefined;\n  /** @hidden */\n  _downlinks: Downlink[];\n  /** @hidden */\n  _downlinkCount: number;\n  /** @hidden */\n  _observers: ReadonlyArray<WarpObserver> | null;\n\n  constructor(context: RefContext) {\n    this._context = context;\n    this._host = void 0;\n    this._downlinks = [];\n    this._observers = null;\n  }\n\n  abstract hostUri(): Uri;\n\n  isConnected(): boolean {\n    return this._host !== void 0 ? this._host.isConnected() : false;\n  }\n\n  isAuthenticated(): boolean {\n    return this._host !== void 0 ? this._host.isAuthenticated() : false;\n  }\n\n  session(): Value {\n    return this._host !== void 0 ? this._host.session() : Value.absent();\n  }\n\n  authenticate(credentials: AnyValue): void {\n    this._context.authenticate(this.hostUri(), credentials);\n  }\n\n  abstract downlink(init?: EventDownlinkInit): EventDownlink;\n\n  abstract downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  abstract downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n\n  abstract downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  abstract downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n\n  abstract downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  abstract downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n\n  /** @hidden */\n  addDownlink(downlink: Downlink): void {\n    if (this._downlinks.length === 0) {\n      this.open();\n    }\n    this._downlinks.push(downlink);\n  }\n\n  /** @hidden */\n  removeDownlink(downlink: Downlink): void {\n    const i = this._downlinks.indexOf(downlink);\n    if (i >= 0) {\n      this._downlinks.splice(i, 1);\n      if (this._downlinks.length === 0) {\n        this.close();\n      }\n    }\n  }\n\n  open(): void {\n    this._context.openRef(this);\n  }\n\n  close(): void {\n    this._context.closeRef(this);\n  }\n\n  /** @hidden */\n  closeUp(): void {\n    const downlinks = this._downlinks;\n    this._downlinks = [];\n    for (let i = 0, n = downlinks.length; i < n; i += 1) {\n      downlinks[i].close();\n    }\n  }\n\n  observe(observer: WarpObserver): this {\n    const oldObservers = this._observers;\n    const n = oldObservers !== null ? oldObservers.length : 0;\n    const newObservers = new Array<WarpObserver>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newObservers[i] = oldObservers![i];\n    }\n    newObservers[n] = observer;\n    this._observers = newObservers;\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this._observers;\n    const n = oldObservers !== null ? oldObservers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers![i] as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<WarpObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers![j];\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers![j];\n          }\n          this._observers = newObservers;\n        } else {\n          this._observers = null;\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  didConnect(didConnect: WarpDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didAuthenticate(didAuthenticate: WarpDidAuthenticate): this {\n    return this.observe({didAuthenticate});\n  }\n\n  didDeauthenticate(didDeauthenticate: WarpDidDeauthenticate): this {\n    return this.observe({didDeauthenticate});\n  }\n\n  didDisconnect(didDisconnect: WarpDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didFail(didFail: WarpDidFail): this {\n    return this.observe({didFail});\n  }\n\n  /** @hidden */\n  hostDidConnect(host: Host): void {\n    this._host = host;\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didConnect !== void 0) {\n        observer.didConnect(host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidAuthenticate(body: Value, host: Host): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didAuthenticate !== void 0) {\n        observer.didAuthenticate(body, host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDeauthenticate(body: Value, host: Host): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDeauthenticate !== void 0) {\n        observer.didDeauthenticate(body, host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(host: Host): void {\n    this._host = void 0;\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDisconnect !== void 0) {\n        observer.didDisconnect(host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown, host: Host): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didFail !== void 0) {\n        observer.didFail(error, host, this);\n      }\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {HostRef} from \"./HostRef\";\nimport {NodeRef} from \"./NodeRef\";\n\nexport class LaneRef extends BaseRef {\n  /** @hidden */\n  readonly _hostUri: Uri;\n  /** @hidden */\n  readonly _nodeUri: Uri;\n  /** @hidden */\n  readonly _laneUri: Uri;\n\n  constructor(context: RefContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri) {\n    super(context);\n    this._hostUri = hostUri;\n    this._nodeUri = nodeUri;\n    this._laneUri = laneUri;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  nodeUri(): Uri {\n    return this._nodeUri;\n  }\n\n  laneUri(): Uri {\n    return this._laneUri;\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this._context, hostUri);\n  }\n\n  nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this._context, this._hostUri, nodeUri);\n  }\n\n  laneRef(laneUri: AnyUri): LaneRef {\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this._context, this._hostUri, this._nodeUri, laneUri);\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this._context, this, init, this._hostUri, this._nodeUri, this._laneUri);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this._context, this, init, this._hostUri, this._nodeUri, this._laneUri);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this._context, this, init, this._hostUri, this._nodeUri, this._laneUri);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this._context, this, init, this._hostUri, this._nodeUri, this._laneUri);\n  }\n\n  command(body: AnyValue): void {\n    this._context.command(this._hostUri, this._nodeUri, this._laneUri, body);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {HostRef} from \"./HostRef\";\nimport {LaneRef} from \"./LaneRef\";\n\nexport class NodeRef extends BaseRef {\n  /** @hidden */\n  readonly _hostUri: Uri;\n  /** @hidden */\n  readonly _nodeUri: Uri;\n\n  constructor(context: RefContext, hostUri: Uri, nodeUri: Uri) {\n    super(context);\n    this._hostUri = hostUri;\n    this._nodeUri = nodeUri;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  nodeUri(): Uri {\n    return this._nodeUri;\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this._context, hostUri);\n  }\n\n  nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this._context, this._hostUri, nodeUri);\n  }\n\n  laneRef(laneUri: AnyUri): LaneRef {\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this._context, this._hostUri, this._nodeUri, laneUri);\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this._context, this, init, this._hostUri, this._nodeUri);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this._context, this, init, this._hostUri, this._nodeUri);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this._context, this, init, this._hostUri, this._nodeUri);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this._context, this, init, this._hostUri, this._nodeUri);\n  }\n\n  command(laneUri: AnyUri, body: AnyValue): void {\n    this._context.command(this._hostUri, this._nodeUri, laneUri, body);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {NodeRef} from \"./NodeRef\";\nimport {LaneRef} from \"./LaneRef\";\n\nexport class HostRef extends BaseRef {\n  /** @hidden */\n  readonly _hostUri: Uri;\n\n  constructor(context: RefContext, hostUri: Uri) {\n    super(context);\n    this._hostUri = hostUri;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this._context, hostUri);\n  }\n\n  nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this._context, this._hostUri, nodeUri);\n  }\n\n  laneRef(nodeUri: AnyUri, laneUri: AnyUri): LaneRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this._context, this._hostUri, nodeUri, laneUri);\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this._context, this, init, this._hostUri);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this._context, this, init, this._hostUri);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this._context, this, init, this._hostUri);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this._context, this, init, this._hostUri);\n  }\n\n  command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void {\n    this._context.command(this._hostUri, nodeUri, laneUri, body);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {HostContext} from \"./host/HostContext\";\nimport {HostOptions, Host} from \"./host/Host\";\nimport {WebSocketHost} from \"./host/WebSocketHost\";\nimport {DownlinkModel} from \"./downlink/DownlinkModel\";\nimport {EventDownlinkInit, EventDownlink} from \"./downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"./downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"./downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"./downlink/ValueDownlink\";\nimport {WarpRef} from \"./WarpRef\";\nimport {\n  WarpDidConnect,\n  WarpDidAuthenticate,\n  WarpDidDeauthenticate,\n  WarpDidDisconnect,\n  WarpDidFail,\n  WarpObserver,\n} from \"./WarpObserver\";\nimport {RefContext} from \"./ref/RefContext\";\nimport {BaseRef} from \"./ref/BaseRef\";\nimport {HostRef} from \"./ref/HostRef\";\nimport {NodeRef} from \"./ref/NodeRef\";\nimport {LaneRef} from \"./ref/LaneRef\";\n\nexport interface WarpClientOptions extends HostOptions {\n  keepOnline?: boolean;\n}\n\nexport class WarpClient implements HostContext, RefContext, WarpRef {\n  /** @hidden */\n  readonly _options: WarpClientOptions;\n  /** @hidden */\n  _hosts: BTree<Uri, Host>;\n  /** @hidden */\n  _downlinks: BTree<Uri, BTree<Uri, BTree<Uri, DownlinkModel>>>;\n  /** @hidden */\n  _downlinkCount: number;\n  /** @hidden */\n  _refs: BaseRef[];\n  /** @hidden */\n  _online: boolean;\n  /** @hidden */\n  _observers: ReadonlyArray<WarpObserver> | null;\n\n  constructor(options: WarpClientOptions = {}) {\n    if (options.keepOnline === void 0) {\n      options.keepOnline = true;\n    }\n    this._options = options;\n    this._hosts = new BTree();\n    this._downlinks = new BTree();\n    this._downlinkCount = 0;\n    this._refs = [];\n    this._online = true;\n    this._observers = null;\n\n    this.onOnline = this.onOnline.bind(this);\n    this.onOffline = this.onOffline.bind(this);\n    this.watchOnline(!!options.keepOnline);\n  }\n\n  isOnline(): boolean;\n  isOnline(online: boolean): this;\n  isOnline(online?: boolean): boolean | this {\n    if (online === void 0) {\n      return this._online;\n    } else {\n      if (this._online !== online) {\n        this._online = online;\n        if (online) {\n          this._hosts.forEach(function (hostUri, host) {\n            host.open();\n          }, this);\n        }\n      }\n      return this;\n    }\n  }\n\n  keepOnline(): boolean;\n  keepOnline(keepOnline: boolean): this;\n  keepOnline(keepOnline?: boolean): boolean | this {\n    if (keepOnline === void 0) {\n      return !!this._options.keepOnline;\n    } else {\n      if (this._options.keepOnline !== keepOnline) {\n        this._options.keepOnline = keepOnline;\n        this.watchOnline(keepOnline);\n      }\n      return this;\n    }\n  }\n\n  protected watchOnline(keepOnline: boolean): void {\n    if (typeof window === \"object\") {\n      if (keepOnline) {\n        window.addEventListener(\"online\", this.onOnline);\n        window.addEventListener(\"offline\", this.onOffline);\n      } else {\n        window.removeEventListener(\"online\", this.onOnline);\n        window.removeEventListener(\"offline\", this.onOffline);\n      }\n    }\n  }\n\n  protected onOnline(event: Event): void {\n    this.isOnline(true);\n  }\n\n  protected onOffline(event: Event): void {\n    this.isOnline(false);\n  }\n\n  /** @hidden */\n  getHost(hostUri: AnyUri): Host | undefined {\n    hostUri = Uri.fromAny(hostUri);\n    return this._hosts.get(hostUri);\n  }\n\n  /** @hidden */\n  openHost(hostUri: AnyUri): Host {\n    hostUri = Uri.fromAny(hostUri);\n    let host = this._hosts.get(hostUri);\n    if (host === void 0) {\n      host = new WebSocketHost(this, hostUri, this._options);\n      this._hosts.set(hostUri, host);\n    }\n    return host;\n  }\n\n  /** @hidden */\n  closeHost(host: Host): void {\n    if (this._hosts.get(host.hostUri()) !== void 0) {\n      this._hosts.delete(host.hostUri());\n      host.closeUp();\n    }\n  }\n\n  /** @hidden */\n  getDownlink(hostUri: Uri, nodeUri: Uri, laneUri: Uri): DownlinkModel | undefined {\n    const hostDownlinks = this._downlinks.get(hostUri);\n    if (hostDownlinks !== void 0) {\n      const nodeDownlinks = hostDownlinks.get(nodeUri);\n      if (nodeDownlinks !== void 0) {\n        return nodeDownlinks.get(laneUri);\n      }\n    }\n    return void 0;\n  }\n\n  /** @hidden */\n  openDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri();\n    const nodeUri = downlink.nodeUri();\n    const laneUri = downlink.laneUri();\n    let hostDownlinks = this._downlinks.get(hostUri);\n    if (hostDownlinks === void 0) {\n      hostDownlinks = new BTree();\n      this._downlinks.set(hostUri, hostDownlinks);\n    }\n    let nodeDownlinks = hostDownlinks.get(nodeUri);\n    if (nodeDownlinks === void 0) {\n      nodeDownlinks = new BTree();\n      hostDownlinks.set(nodeUri, nodeDownlinks);\n    }\n    if (nodeDownlinks.has(laneUri)) {\n      throw new Error(\"duplicate downlink\");\n    }\n    nodeDownlinks.set(laneUri, downlink);\n    this._downlinkCount += 1;\n    const host = this.openHost(hostUri);\n    host.openDownlink(downlink);\n  }\n\n  /** @hidden */\n  unlinkDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri();\n    const host = this.getHost(hostUri);\n    if (host !== void 0) {\n      host.unlinkDownlink(downlink);\n    }\n  }\n\n  /** @hidden */\n  closeDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri();\n    const nodeUri = downlink.nodeUri();\n    const laneUri = downlink.laneUri();\n    const hostDownlinks = this._downlinks.get(hostUri);\n    if (hostDownlinks !== void 0) {\n      const nodeDownlinks = hostDownlinks.get(nodeUri);\n      if (nodeDownlinks !== void 0) {\n        if (nodeDownlinks.get(laneUri)) {\n          this._downlinkCount -= 1;\n          nodeDownlinks.delete(laneUri);\n          if (nodeDownlinks.isEmpty()) {\n            hostDownlinks.delete(nodeUri);\n            if (hostDownlinks.isEmpty()) {\n              this._downlinks.delete(hostUri);\n            }\n          }\n          const host = this.getHost(hostUri);\n          if (host !== void 0) {\n            host.closeDownlink(downlink);\n          }\n        }\n      }\n    }\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this, void 0, init);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this, void 0, init);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this, void 0, init);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this, void 0, init);\n  }\n\n  /** @hidden */\n  openRef(ref: BaseRef): void {\n    this._refs.push(ref);\n  }\n\n  /** @hidden */\n  closeRef(ref: BaseRef): void {\n    const index = this._refs.indexOf(ref);\n    if (index >= 0) {\n      this._refs.splice(index, 1);\n      ref.closeUp();\n    }\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this, hostUri);\n  }\n\n  nodeRef(hostUri: AnyUri, nodeUri: AnyUri): NodeRef;\n  nodeRef(nodeUri: AnyUri): NodeRef;\n  nodeRef(hostUri: AnyUri, nodeUri?: AnyUri): NodeRef {\n    hostUri = Uri.fromAny(hostUri);\n    if (nodeUri === void 0) {\n      nodeUri = hostUri;\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    } else {\n      nodeUri = Uri.fromAny(nodeUri);\n    }\n    return new NodeRef(this, hostUri, nodeUri);\n  }\n\n  laneRef(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri): LaneRef;\n  laneRef(nodeUri: AnyUri, laneUri: AnyUri): LaneRef;\n  laneRef(hostUri: AnyUri, nodeUri: AnyUri, laneUri?: AnyUri): LaneRef {\n    hostUri = Uri.fromAny(hostUri);\n    nodeUri = Uri.fromAny(nodeUri);\n    if (laneUri === void 0) {\n      laneUri = nodeUri;\n      nodeUri = hostUri;\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    } else {\n      laneUri = Uri.fromAny(laneUri);\n    }\n    return new LaneRef(this, hostUri, nodeUri, laneUri);\n  }\n\n  authenticate(hostUri: AnyUri, credentials: AnyValue): void {\n    hostUri = Uri.fromAny(hostUri);\n    credentials = Value.fromAny(credentials);\n    const host = this.openHost(hostUri);\n    host.authenticate(credentials);\n  }\n\n  command(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n  command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n  command(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri | AnyValue, body?: AnyValue): void {\n    hostUri = Uri.fromAny(hostUri);\n    nodeUri = Uri.fromAny(nodeUri);\n    if (arguments.length === 3) {\n      body = laneUri as Value;\n      laneUri = nodeUri;\n      nodeUri = hostUri;\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    } else {\n      laneUri = Uri.fromAny(laneUri as AnyUri);\n    }\n    body = Value.fromAny(body);\n    const host = this.openHost(hostUri);\n    host.command(nodeUri, laneUri, body);\n  }\n\n  close(): void {\n    const refs = this._refs;\n    this._refs = [];\n    for (let i = 0; i < refs.length; i += 1) {\n      refs[i].closeUp();\n    }\n    const downlinks = this._downlinks.clone();\n    this._downlinks.clear();\n    this._downlinkCount = 0;\n    downlinks.forEach(function (hostUri: Uri, hostDownlinks: BTree<Uri, BTree<Uri, DownlinkModel>>): void {\n      hostDownlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, DownlinkModel>): void {\n        nodeDownlinks.forEach(function (laneUri: Uri, downlink: DownlinkModel): void {\n          downlink.closeUp();\n          const host = this.getHost(hostUri);\n          if (host !== void 0) {\n            host.closeDownlink(downlink);\n          }\n        }, this);\n      }, this);\n    }, this);\n    const hosts = this._hosts.clone();\n    this._hosts.clear();\n    hosts.forEach(function (hostUri: Uri, host: Host): void {\n      host.closeUp();\n    }, this);\n  }\n\n  observe(observer: WarpObserver): this {\n    const oldObservers = this._observers;\n    const n = oldObservers !== null ? oldObservers.length : 0;\n    const newObservers = new Array<WarpObserver>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newObservers[i] = oldObservers![i];\n    }\n    newObservers[n] = observer;\n    this._observers = newObservers;\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this._observers;\n    const n = oldObservers !== null ? oldObservers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers![i] as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<WarpObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers![j];\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers![j];\n          }\n          this._observers = newObservers;\n        } else {\n          this._observers = null;\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  didConnect(didConnect: WarpDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didAuthenticate(didAuthenticate: WarpDidAuthenticate): this {\n    return this.observe({didAuthenticate});\n  }\n\n  didDeauthenticate(didDeauthenticate: WarpDidDeauthenticate): this {\n    return this.observe({didDeauthenticate});\n  }\n\n  didDisconnect(didDisconnect: WarpDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didFail(didFail: WarpDidFail): this {\n    return this.observe({didFail});\n  }\n\n  /** @hidden */\n  hostDidConnect(host: Host): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didConnect !== void 0) {\n        observer.didConnect(host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidConnect(host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidAuthenticate(body: Value, host: Host): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didAuthenticate !== void 0) {\n        observer.didAuthenticate(body, host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidAuthenticate(body, host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDeauthenticate(body: Value, host: Host): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDeauthenticate !== void 0) {\n        observer.didDeauthenticate(body, host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidDeauthenticate(body, host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(host: Host): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDisconnect !== void 0) {\n        observer.didDisconnect(host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidDisconnect(host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown, host: Host): void {\n    const observers = this._observers;\n    const n = observers !== null ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didFail !== void 0) {\n        observer.didFail(error, host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidFail(error, host);\n      }\n    }\n  }\n}\n\n/**\n * @deprecated\n */\nexport type SwimClientOptions = WarpClientOptions;\n\n/**\n * @deprecated\n */\nexport type SwimClient = WarpClient;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport * from \"./host\";\n\nexport * from \"./downlink\";\n\nexport * from \"./ref\";\n\nexport {WarpRef, SwimRef} from \"./WarpRef\";\nexport {WarpObserver, SwimObserver} from \"./WarpObserver\";\n\nexport {\n  WarpClientOptions, SwimClientOptions,\n  WarpClient, SwimClient,\n} from \"./WarpClient\";\n\nimport {WarpClient} from \"./WarpClient\";\nexport const client = new WarpClient();\nexport const isOnline = client.isOnline.bind(client);\nexport const keepOnline = client.keepOnline.bind(client);\nexport const downlink = client.downlink.bind(client);\nexport const downlinkList = client.downlinkList.bind(client);\nexport const downlinkMap = client.downlinkMap.bind(client);\nexport const downlinkValue = client.downlinkValue.bind(client);\nexport const hostRef = client.hostRef.bind(client);\nexport const nodeRef = client.nodeRef.bind(client);\nexport const laneRef = client.laneRef.bind(client);\nexport const authenticate = client.authenticate.bind(client);\nexport const command = client.command.bind(client);\n"]}