{"version":3,"sources":["../../../../swim-core-js/@swim/util/main/lang/Equals.ts","../../../../swim-core-js/@swim/util/main/lang/HashCode.ts","../../../../swim-core-js/@swim/util/main/lang/Equivalent.ts","../../../../swim-core-js/@swim/util/main/lang/Compare.ts","../../../../swim-core-js/@swim/util/main/lang/FromAny.ts","../../../../swim-core-js/@swim/util/main/lang/ToAny.ts","../../../../swim-core-js/@swim/util/main/lang/Lazy.ts","../../../../swim-core-js/@swim/util/main/runtime/String.ts","../../../../swim-core-js/@swim/util/main/runtime/Random.ts","../../../../swim-core-js/@swim/util/main/runtime/ByteOrder.ts","../../../../swim-core-js/@swim/util/main/runtime/Identity.ts","../../../../swim-core-js/@swim/util/main/runtime/Murmur3.ts","../../../../swim-core-js/@swim/util/main/runtime/Numbers.ts","../../../../swim-core-js/@swim/util/main/runtime/Booleans.ts","../../../../swim-core-js/@swim/util/main/runtime/Strings.ts","../../../../swim-core-js/@swim/util/main/runtime/Functions.ts","../../../../swim-core-js/@swim/util/main/runtime/Constructors.ts","../../../../swim-core-js/@swim/util/main/runtime/Objects.ts","../../../../swim-core-js/@swim/util/main/runtime/Values.ts","../../../../swim-core-js/@swim/util/main/runtime/Arrays.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../swim-core-js/@swim/util/main/collections/Cursor.ts","../../../../swim-core-js/@swim/util/main/collections/CursorEmpty.ts","../../../../swim-core-js/@swim/util/main/collections/CursorUnary.ts","../../../../swim-core-js/@swim/util/main/collections/CursorArray.ts","../../../../swim-core-js/@swim/util/main/assert/AssertException.ts","../../../../swim-core-js/@swim/util/main/assert/Assert.ts","../../../../swim-core-js/@swim/codec/main/format/Format.ts","../../../../swim-core-js/@swim/util/main/assert/Severity.ts","../../../../swim-core-js/@swim/util/main/cache/HashGenCacheMap.ts","../../../../swim-core-js/@swim/util/main/cache/HashGenCacheSet.ts","../../../../swim-core-js/@swim/codec/main/source/Tag.ts","../../../../swim-core-js/@swim/codec/main/source/Mark.ts","../../../../swim-core-js/@swim/codec/main/source/Span.ts","../../../../swim-core-js/@swim/codec/main/format/OutputStyle.ts","../../../../swim-core-js/@swim/codec/main/output/OutputException.ts","../../../../swim-core-js/@swim/codec/main/output/OutputSettings.ts","../../../../swim-core-js/@swim/codec/main/output/Output.ts","../../../../swim-core-js/@swim/codec/main/input/InputException.ts","../../../../swim-core-js/@swim/codec/main/input/InputSettings.ts","../../../../swim-core-js/@swim/codec/main/input/Input.ts","../../../../swim-core-js/@swim/codec/main/input/InputError.ts","../../../../swim-core-js/@swim/codec/main/unicode/StringInput.ts","../../../../swim-core-js/@swim/codec/main/unicode/StringOutput.ts","../../../../swim-core-js/@swim/codec/main/writer/WriterException.ts","../../../../swim-core-js/@swim/codec/main/writer/Writer.ts","../../../../swim-core-js/@swim/codec/main/unicode/StringWriter.ts","../../../../swim-core-js/@swim/codec/main/unicode/Unicode.ts","../../../../swim-core-js/@swim/codec/main/number/Base10.ts","../../../../swim-core-js/@swim/codec/main/source/Diagnostic.ts","../../../../swim-core-js/@swim/codec/main/input/InputEmpty.ts","../../../../swim-core-js/@swim/codec/main/input/InputDone.ts","../../../../swim-core-js/@swim/codec/main/input/InputBuffer.ts","../../../../swim-core-js/@swim/codec/main/input/InputBufferEmpty.ts","../../../../swim-core-js/@swim/codec/main/input/InputBufferDone.ts","../../../../swim-core-js/@swim/codec/main/input/InputBufferError.ts","../../../../swim-core-js/@swim/codec/main/output/OutputFull.ts","../../../../swim-core-js/@swim/codec/main/output/OutputDone.ts","../../../../swim-core-js/@swim/codec/main/output/OutputError.ts","../../../../swim-core-js/@swim/codec/main/output/OutputBuffer.ts","../../../../swim-core-js/@swim/codec/main/output/OutputBufferFull.ts","../../../../swim-core-js/@swim/codec/main/output/OutputBufferDone.ts","../../../../swim-core-js/@swim/codec/main/output/OutputBufferError.ts","../../../../swim-core-js/@swim/codec/main/parser/ParserException.ts","../../../../swim-core-js/@swim/codec/main/parser/Parser.ts","../../../../swim-core-js/@swim/codec/main/parser/ParserDone.ts","../../../../swim-core-js/@swim/codec/main/parser/ParserError.ts","../../../../swim-core-js/@swim/codec/main/writer/WriterEnd.ts","../../../../swim-core-js/@swim/codec/main/writer/WriterDone.ts","../../../../swim-core-js/@swim/codec/main/writer/WriterError.ts","../../../../swim-core-js/@swim/codec/main/writer/WriterSequence.ts","../../../../swim-core-js/@swim/codec/main/binary/ByteOutput.ts","../../../../swim-core-js/@swim/codec/main/binary/ByteOutputUint8Array.ts","../../../../swim-core-js/@swim/codec/main/binary/ByteOutputBuffer.ts","../../../../swim-core-js/@swim/codec/main/binary/Binary.ts","../../../../swim-core-js/@swim/codec/main/unicode/UtfErrorMode.ts","../../../../swim-core-js/@swim/codec/main/unicode/UtfErrorModeFatal.ts","../../../../swim-core-js/@swim/codec/main/unicode/UtfErrorModeReplacement.ts","../../../../swim-core-js/@swim/codec/main/number/Base16.ts","../../../../swim-core-js/@swim/codec/main/unicode/Utf8DecodedOutput.ts","../../../../swim-core-js/@swim/codec/main/unicode/Utf8EncodedOutput.ts","../../../../swim-core-js/@swim/codec/main/unicode/Utf8.ts","../../../../swim-core-js/@swim/codec/main/number/Base10NumberParser.ts","../../../../swim-core-js/@swim/codec/main/number/Base10IntegerWriter.ts","../../../../swim-core-js/@swim/codec/main/number/Base16Parser.ts","../../../../swim-core-js/@swim/codec/main/number/Base16Writer.ts","../../../../swim-core-js/@swim/codec/main/number/Base16IntegerWriter.ts","../../../../swim-core-js/@swim/codec/main/number/Base64.ts","../../../../swim-core-js/@swim/codec/main/number/Base64Parser.ts","../../../../swim-core-js/@swim/codec/main/number/Base64Writer.ts","../../../../swim-core-js/@swim/mapping/main/mapping/Mapping.ts","../../../../swim-core-js/@swim/mapping/main/mapping/Domain.ts","../../../../swim-core-js/@swim/mapping/main/mapping/Range.ts","../../../../swim-core-js/@swim/mapping/main/interpolate/Interpolate.ts","../../../../swim-core-js/@swim/mapping/main/interpolate/Interpolator.ts","../../../../swim-core-js/@swim/mapping/main/interpolate/InterpolatorMap.ts","../../../../swim-core-js/@swim/mapping/main/interpolate/IdentityInterpolator.ts","../../../../swim-core-js/@swim/mapping/main/interpolate/StepInterpolator.ts","../../../../swim-core-js/@swim/mapping/main/interpolate/NumberInterpolator.ts","../../../../swim-core-js/@swim/mapping/main/interpolate/ArrayInterpolator.ts","../../../../swim-core-js/@swim/mapping/main/interpolate/InterpolatorInterpolator.ts","../../../../swim-core-js/@swim/mapping/main/transition/Timing.ts","../../../../swim-core-js/@swim/mapping/main/transition/Easing.ts","../../../../swim-core-js/@swim/mapping/main/transition/Tweening.ts","../../../../swim-core-js/@swim/mapping/main/scale/LinearDomain.ts","../../../../swim-core-js/@swim/mapping/main/scale/LinearDomainInterpolator.ts","../../../../swim-core-js/@swim/mapping/main/scale/LinearRange.ts","../../../../swim-core-js/@swim/mapping/main/scale/LinearRangeInterpolator.ts","../../../../swim-core-js/@swim/mapping/main/scale/Scale.ts","../../../../swim-core-js/@swim/mapping/main/scale/ContinuousScale.ts","../../../../swim-core-js/@swim/mapping/main/scale/LinearScale.ts","../../../../swim-core-js/@swim/mapping/main/scale/LinearScaleInterpolator.ts","../../../../swim-core-js/@swim/collections/main/KeysCursor.ts","../../../../swim-core-js/@swim/collections/main/ValuesCursor.ts","../../../../swim-core-js/@swim/collections/main/NodeCursor.ts","../../../../swim-core-js/@swim/collections/main/BTreeContext.ts","../../../../swim-core-js/@swim/collections/main/BTree.ts","../../../../swim-core-js/@swim/collections/main/BTreePage.ts","../../../../swim-core-js/@swim/collections/main/BTreeLeaf.ts","../../../../swim-core-js/@swim/collections/main/BTreeNode.ts","../../../../swim-core-js/@swim/collections/main/BTreeNodeCursor.ts","../../../../swim-core-js/@swim/collections/main/STreeContext.ts","../../../../swim-core-js/@swim/collections/main/STree.ts","../../../../swim-core-js/@swim/collections/main/STreePage.ts","../../../../swim-core-js/@swim/collections/main/STreeLeaf.ts","../../../../swim-core-js/@swim/collections/main/STreeNode.ts","../../../../swim-core-js/@swim/collections/main/STreeNodeCursor.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintKey.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintMap.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintSymbol.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintExpression.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintSum.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintTerm.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintProduct.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintConstant.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintBinding.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintStrength.ts","../../../../swim-core-js/@swim/constraint/main/Constraint.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintGroup.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintRow.ts","../../../../swim-core-js/@swim/constraint/main/ConstraintSolver.ts","../../../../swim-core-js/@swim/structure/main/Item.ts","../../../../swim-core-js/@swim/structure/main/ItemInterpolator.ts","../../../../swim-core-js/@swim/structure/main/Field.ts","../../../../swim-core-js/@swim/structure/main/Slot.ts","../../../../swim-core-js/@swim/structure/main/FieldInterpolator.ts","../../../../swim-core-js/@swim/structure/main/Attr.ts","../../../../swim-core-js/@swim/structure/main/AttrInterpolator.ts","../../../../swim-core-js/@swim/structure/main/SlotInterpolator.ts","../../../../swim-core-js/@swim/structure/main/Value.ts","../../../../swim-core-js/@swim/structure/main/Record.ts","../../../../swim-core-js/@swim/structure/main/ValueBuilder.ts","../../../../swim-core-js/@swim/structure/main/RecordInterpolator.ts","../../../../swim-core-js/@swim/structure/main/RecordCursor.ts","../../../../swim-core-js/@swim/structure/main/RecordMap.ts","../../../../swim-core-js/@swim/structure/main/RecordMapView.ts","../../../../swim-core-js/@swim/structure/main/Data.ts","../../../../swim-core-js/@swim/structure/main/DataOutput.ts","../../../../swim-core-js/@swim/structure/main/Text.ts","../../../../swim-core-js/@swim/structure/main/TextOutput.ts","../../../../swim-core-js/@swim/structure/main/Num.ts","../../../../swim-core-js/@swim/structure/main/NumInterpolator.ts","../../../../swim-core-js/@swim/structure/main/Bool.ts","../../../../swim-core-js/@swim/structure/main/Extant.ts","../../../../swim-core-js/@swim/structure/main/Absent.ts","../../../../swim-core-js/@swim/structure/main/Expression.ts","../../../../swim-core-js/@swim/structure/main/operator/Operator.ts","../../../../swim-core-js/@swim/structure/main/operator/BinaryOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/BinaryOperatorInterpolator.ts","../../../../swim-core-js/@swim/structure/main/operator/UnaryOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/UnaryOperatorInterpolator.ts","../../../../swim-core-js/@swim/structure/main/operator/ConditionalOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/ConditionalOperatorInterpolator.ts","../../../../swim-core-js/@swim/structure/main/interpreter/InterpreterException.ts","../../../../swim-core-js/@swim/structure/main/interpreter/InterpreterSettings.ts","../../../../swim-core-js/@swim/structure/main/interpreter/Interpreter.ts","../../../../swim-core-js/@swim/structure/main/operator/OrOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/AndOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/BitwiseOrOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/BitwiseXorOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/BitwiseAndOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/LtOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/LeOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/EqOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/NeOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/GeOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/GtOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/PlusOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/MinusOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/TimesOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/DivideOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/ModuloOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/NotOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/BitwiseNotOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/NegativeOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/PositiveOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/InvokeOperator.ts","../../../../swim-core-js/@swim/structure/main/operator/InvokeOperatorInterpolator.ts","../../../../swim-core-js/@swim/structure/main/selector/Selector.ts","../../../../swim-core-js/@swim/structure/main/selector/IdentitySelector.ts","../../../../swim-core-js/@swim/structure/main/selector/GetSelector.ts","../../../../swim-core-js/@swim/structure/main/selector/GetAttrSelector.ts","../../../../swim-core-js/@swim/structure/main/selector/GetItemSelector.ts","../../../../swim-core-js/@swim/structure/main/selector/KeysSelector.ts","../../../../swim-core-js/@swim/structure/main/selector/ValuesSelector.ts","../../../../swim-core-js/@swim/structure/main/selector/ChildrenSelector.ts","../../../../swim-core-js/@swim/structure/main/selector/DescendantsSelector.ts","../../../../swim-core-js/@swim/structure/main/selector/FilterSelector.ts","../../../../swim-core-js/@swim/structure/main/selector/LiteralSelector.ts","../../../../swim-core-js/@swim/structure/main/func/Func.ts","../../../../swim-core-js/@swim/structure/main/func/LambdaFunc.ts","../../../../swim-core-js/@swim/structure/main/func/BridgeFunc.ts","../../../../swim-core-js/@swim/structure/main/func/MathModule.ts","../../../../swim-core-js/@swim/structure/main/form/FormException.ts","../../../../swim-core-js/@swim/structure/main/form/Form.ts","../../../../swim-core-js/@swim/structure/main/form/TagForm.ts","../../../../swim-core-js/@swim/structure/main/form/UnitForm.ts","../../../../swim-core-js/@swim/streamlet/main/KeyEffect.ts","../../../../swim-core-js/@swim/structure/main/form/StringForm.ts","../../../../swim-core-js/@swim/structure/main/form/NumberForm.ts","../../../../swim-core-js/@swim/structure/main/form/BooleanForm.ts","../../../../swim-core-js/@swim/structure/main/form/AnyForm.ts","../../../../swim-core-js/@swim/structure/main/form/ItemForm.ts","../../../../swim-core-js/@swim/structure/main/form/ValueForm.ts","../../../../swim-core-js/@swim/structure/main/collections/ValueCursor.ts","../../../../swim-core-js/@swim/structure/main/collections/ValueEntryCursor.ts","../../../../swim-core-js/@swim/streamlet/main/Inlet.ts","../../../../swim-core-js/@swim/streamlet/main/Outlet.ts","../../../../swim-core-js/@swim/streamlet/main/OutletCombinators.ts","../../../../swim-core-js/@swim/streamlet/main/MapInlet.ts","../../../../swim-core-js/@swim/streamlet/main/MapOutlet.ts","../../../../swim-core-js/@swim/streamlet/main/MapOutletCombinators.ts","../../../../swim-core-js/@swim/streamlet/main/StreamletException.ts","../../../../swim-core-js/@swim/streamlet/main/StreamletScope.ts","../../../../swim-core-js/@swim/streamlet/main/Streamlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractInlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractOutlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractInoutlet.ts","../../../../swim-core-js/@swim/streamlet/main/KeyOutlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractMapInlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractMapOutlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractMapInoutlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractMapInletOutlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractMapInletMapOutlet.ts","../../../../swim-core-js/@swim/streamlet/main/OutletInlet.ts","../../../../swim-core-js/@swim/streamlet/main/OutletMapInlet.ts","../../../../swim-core-js/@swim/streamlet/main/ValueInput.ts","../../../../swim-core-js/@swim/streamlet/main/ValueOutput.ts","../../../../swim-core-js/@swim/streamlet/main/MapInput.ts","../../../../swim-core-js/@swim/streamlet/main/MapOutput.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/MemoizeValueCombinator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/MemoizeMapCombinator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/FilterFieldsOperator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/FilterFieldsCombinator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/MapValueOperator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/MapValueCombinator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/MapFieldValuesOperator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/MapFieldValuesCombinator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/ReduceFieldsOperator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/ReduceFieldsCombinator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/WatchValueOperator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/WatchValueCombinator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/WatchFieldsOperator.ts","../../../../swim-core-js/@swim/streamlet/main/combinator/WatchFieldsCombinator.ts","../../../../swim-core-js/@swim/streamlet/main/StreamletInlet.ts","../../../../swim-core-js/@swim/streamlet/main/StreamletOutlet.ts","../../../../swim-core-js/@swim/streamlet/main/StreamletInoutlet.ts","../../../../swim-core-js/@swim/streamlet/main/AbstractStreamlet.ts","../../../../swim-core-js/@swim/streamlet/main/Out.ts","../../../../swim-core-js/@swim/streamlet/main/Inout.ts","../../../../swim-core-js/@swim/dataflow/main/RecordOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/AbstractRecordOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/RecordStreamlet.ts","../../../../swim-core-js/@swim/dataflow/main/AbstractRecordStreamlet.ts","../../../../swim-core-js/@swim/dataflow/main/RecordFieldUpdater.ts","../../../../swim-core-js/@swim/dataflow/main/RecordModel.ts","../../../../swim-core-js/@swim/dataflow/main/RecordScope.ts","../../../../swim-core-js/@swim/dataflow/main/Reifier.ts","../../../../swim-core-js/@swim/dataflow/main/selector/GetOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/BinaryOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/UnaryOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/ConditionalOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/OrOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/AndOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/BitwiseOrOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/BitwiseXorOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/BitwiseAndOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/LtOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/LeOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/EqOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/NeOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/GeOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/GtOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/PlusOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/MinusOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/TimesOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/DivideOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/ModuloOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/NotOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/BitwiseNotOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/NegativeOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/PositiveOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/operator/InvokeOutlet.ts","../../../../swim-core-js/@swim/dataflow/main/Dataflow.ts","../../../../swim-core-js/@swim/recon/main/Recon.ts","../../../../swim-core-js/@swim/recon/main/parser/BlockParser.ts","../../../../swim-core-js/@swim/recon/main/parser/AttrParser.ts","../../../../swim-core-js/@swim/recon/main/parser/BlockItemParser.ts","../../../../swim-core-js/@swim/recon/main/parser/InlineItemParser.ts","../../../../swim-core-js/@swim/recon/main/parser/RecordParser.ts","../../../../swim-core-js/@swim/recon/main/parser/MarkupParser.ts","../../../../swim-core-js/@swim/recon/main/parser/DataParser.ts","../../../../swim-core-js/@swim/recon/main/parser/IdentParser.ts","../../../../swim-core-js/@swim/recon/main/parser/StringParser.ts","../../../../swim-core-js/@swim/recon/main/parser/RawStringParser.ts","../../../../swim-core-js/@swim/recon/main/parser/NumberParser.ts","../../../../swim-core-js/@swim/recon/main/parser/LambdaFuncParser.ts","../../../../swim-core-js/@swim/recon/main/parser/ConditionalOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/OrOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/AndOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/BitwiseOrOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/BitwiseXorOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/BitwiseAndOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/ComparisonOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/AttrExpressionParser.ts","../../../../swim-core-js/@swim/recon/main/parser/AdditiveOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/MultiplicativeOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/PrefixOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/InvokeOperatorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/PrimaryParser.ts","../../../../swim-core-js/@swim/recon/main/parser/LiteralParser.ts","../../../../swim-core-js/@swim/recon/main/parser/SelectorParser.ts","../../../../swim-core-js/@swim/recon/main/parser/ReconParser.ts","../../../../swim-core-js/@swim/recon/main/parser/ReconStructureParser.ts","../../../../swim-core-js/@swim/recon/main/writer/AttrWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/SlotWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/BlockWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/PrimaryWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/MarkupTextWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/DataWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/IdentWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/StringWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/LambdaFuncWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/ConditionalOperatorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/InfixOperatorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/PrefixOperatorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/InvokeOperatorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/LiteralSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/GetSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/GetAttrSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/GetItemSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/KeysSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/ValuesSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/ChildrenSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/DescendantsSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/FilterSelectorWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/ReconWriter.ts","../../../../swim-core-js/@swim/recon/main/writer/ReconStructureWriter.ts","../../../../swim-core-js/@swim/uri/main/UriException.ts","../../../../swim-core-js/@swim/uri/main/Uri.ts","../../../../swim-core-js/@swim/uri/main/UriScheme.ts","../../../../swim-core-js/@swim/uri/main/UriAuthority.ts","../../../../swim-core-js/@swim/uri/main/UriUser.ts","../../../../swim-core-js/@swim/uri/main/UriHost.ts","../../../../swim-core-js/@swim/uri/main/UriHostName.ts","../../../../swim-core-js/@swim/uri/main/UriHostIPv4.ts","../../../../swim-core-js/@swim/uri/main/UriHostIPv6.ts","../../../../swim-core-js/@swim/uri/main/UriHostUndefined.ts","../../../../swim-core-js/@swim/uri/main/UriPort.ts","../../../../swim-core-js/@swim/uri/main/UriPath.ts","../../../../swim-core-js/@swim/uri/main/UriPathSegment.ts","../../../../swim-core-js/@swim/uri/main/UriPathSlash.ts","../../../../swim-core-js/@swim/uri/main/UriPathEmpty.ts","../../../../swim-core-js/@swim/uri/main/UriPathBuilder.ts","../../../../swim-core-js/@swim/uri/main/UriPathForm.ts","../../../../swim-core-js/@swim/uri/main/UriQuery.ts","../../../../swim-core-js/@swim/uri/main/UriQueryParam.ts","../../../../swim-core-js/@swim/uri/main/UriQueryUndefined.ts","../../../../swim-core-js/@swim/uri/main/UriQueryBuilder.ts","../../../../swim-core-js/@swim/uri/main/UriFragment.ts","../../../../swim-core-js/@swim/uri/main/UriForm.ts","../../../../swim-core-js/@swim/uri/main/UriCache.ts","../../../../swim-core-js/@swim/uri/main/parser/UriParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriAbsoluteParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriSchemeParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriAuthorityParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriUserParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriHostParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriHostAddressParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriHostLiteralParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriPortParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriPathParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriQueryParser.ts","../../../../swim-core-js/@swim/uri/main/parser/UriFragmentParser.ts","../../../../swim-core-js/@swim/math/main/length/LengthException.ts","../../../../swim-core-js/@swim/math/main/length/Length.ts","../../../../swim-core-js/@swim/math/main/length/PxLength.ts","../../../../swim-core-js/@swim/math/main/length/EmLength.ts","../../../../swim-core-js/@swim/math/main/length/RemLength.ts","../../../../swim-core-js/@swim/math/main/length/PctLength.ts","../../../../swim-core-js/@swim/math/main/length/UnitlessLength.ts","../../../../swim-core-js/@swim/math/main/length/LengthInterpolator.ts","../../../../swim-core-js/@swim/math/main/length/LengthForm.ts","../../../../swim-core-js/@swim/math/main/length/LengthParser.ts","../../../../swim-core-js/@swim/math/main/angle/Angle.ts","../../../../swim-core-js/@swim/math/main/angle/DegAngle.ts","../../../../swim-core-js/@swim/math/main/angle/RadAngle.ts","../../../../swim-core-js/@swim/math/main/angle/GradAngle.ts","../../../../swim-core-js/@swim/math/main/angle/TurnAngle.ts","../../../../swim-core-js/@swim/math/main/angle/AngleInterpolator.ts","../../../../swim-core-js/@swim/math/main/angle/AngleForm.ts","../../../../swim-core-js/@swim/math/main/angle/AngleParser.ts","../../../../swim-core-js/@swim/math/main/r2/R2Vector.ts","../../../../swim-core-js/@swim/math/main/r2/R2VectorInterpolator.ts","../../../../swim-core-js/@swim/math/main/r2/R2Shape.ts","../../../../swim-core-js/@swim/math/main/r2/R2Point.ts","../../../../swim-core-js/@swim/math/main/r2/R2PointInterpolator.ts","../../../../swim-core-js/@swim/math/main/r2/R2Curve.ts","../../../../swim-core-js/@swim/math/main/r2/R2CurveParser.ts","../../../../swim-core-js/@swim/math/main/r2/R2BezierCurve.ts","../../../../swim-core-js/@swim/math/main/r2/R2Segment.ts","../../../../swim-core-js/@swim/math/main/r2/R2SegmentInterpolator.ts","../../../../swim-core-js/@swim/math/main/r2/R2SegmentParser.ts","../../../../swim-core-js/@swim/math/main/r2/R2QuadraticCurve.ts","../../../../swim-core-js/@swim/math/main/r2/R2QuadraticCurveParser.ts","../../../../swim-core-js/@swim/math/main/r2/R2CubicCurve.ts","../../../../swim-core-js/@swim/math/main/r2/R2CubicCurveParser.ts","../../../../swim-core-js/@swim/math/main/r2/R2EllipticCurve.ts","../../../../swim-core-js/@swim/math/main/r2/R2EllipticCurveParser.ts","../../../../swim-core-js/@swim/math/main/r2/R2Spline.ts","../../../../swim-core-js/@swim/math/main/r2/R2SplineBuilder.ts","../../../../swim-core-js/@swim/math/main/r2/R2SplineParser.ts","../../../../swim-core-js/@swim/math/main/r2/R2Path.ts","../../../../swim-core-js/@swim/math/main/r2/R2PathBuilder.ts","../../../../swim-core-js/@swim/math/main/r2/R2PathParser.ts","../../../../swim-core-js/@swim/math/main/r2/R2Circle.ts","../../../../swim-core-js/@swim/math/main/r2/R2Box.ts","../../../../swim-core-js/@swim/math/main/r2/R2BoxInterpolator.ts","../../../../swim-core-js/@swim/math/main/r2/R2CircleInterpolator.ts","../../../../swim-core-js/@swim/math/main/r2/R2Group.ts","../../../../swim-core-js/@swim/math/main/transform/Transform.ts","../../../../swim-core-js/@swim/math/main/transform/TransformForm.ts","../../../../swim-core-js/@swim/math/main/transform/TransformParser.ts","../../../../swim-core-js/@swim/math/main/transform/IdentityTransform.ts","../../../../swim-core-js/@swim/math/main/transform/TranslateTransform.ts","../../../../swim-core-js/@swim/math/main/transform/TranslateTransformInterpolator.ts","../../../../swim-core-js/@swim/math/main/transform/TranslateTransformParser.ts","../../../../swim-core-js/@swim/math/main/transform/ScaleTransform.ts","../../../../swim-core-js/@swim/math/main/transform/ScaleTransformInterpolator.ts","../../../../swim-core-js/@swim/math/main/transform/ScaleTransformParser.ts","../../../../swim-core-js/@swim/math/main/transform/RotateTransform.ts","../../../../swim-core-js/@swim/math/main/transform/RotateTransformInterpolator.ts","../../../../swim-core-js/@swim/math/main/transform/RotateTransformParser.ts","../../../../swim-core-js/@swim/math/main/transform/SkewTransform.ts","../../../../swim-core-js/@swim/math/main/transform/SkewTransformInterpolator.ts","../../../../swim-core-js/@swim/math/main/transform/SkewTransformParser.ts","../../../../swim-core-js/@swim/math/main/transform/AffineTransform.ts","../../../../swim-core-js/@swim/math/main/transform/AffineTransformInterpolator.ts","../../../../swim-core-js/@swim/math/main/transform/AffineTransformParser.ts","../../../../swim-core-js/@swim/math/main/transform/TransformList.ts","../../../../swim-core-js/@swim/math/main/transform/TransformListInterpolator.ts","../../../../swim-core-js/@swim/math/main/transform/TransformListParser.ts","../../../../swim-core-js/@swim/geo/main/GeoProjection.ts","../../../../swim-core-js/@swim/geo/main/GeoShape.ts","../../../../swim-core-js/@swim/geo/main/GeoPoint.ts","../../../../swim-core-js/@swim/geo/main/GeoPointInterpolator.ts","../../../../swim-core-js/@swim/geo/main/GeoCurve.ts","../../../../swim-core-js/@swim/geo/main/GeoSegment.ts","../../../../swim-core-js/@swim/geo/main/GeoSegmentInterpolator.ts","../../../../swim-core-js/@swim/geo/main/GeoSpline.ts","../../../../swim-core-js/@swim/geo/main/GeoSplineBuilder.ts","../../../../swim-core-js/@swim/geo/main/GeoPath.ts","../../../../swim-core-js/@swim/geo/main/GeoPathBuilder.ts","../../../../swim-core-js/@swim/geo/main/GeoBox.ts","../../../../swim-core-js/@swim/geo/main/GeoTile.ts","../../../../swim-core-js/@swim/geo/main/GeoBoxInterpolator.ts","../../../../swim-core-js/@swim/geo/main/GeoGroup.ts","../../../../swim-core-js/@swim/geo/main/GeoJson.ts","../../../../swim-core-js/@swim/time/main/TimeZone.ts","../../../../swim-core-js/@swim/time/main/TimeZoneForm.ts","../../../../swim-core-js/@swim/time/main/DateTime.ts","../../../../swim-core-js/@swim/time/main/DateTimeInterpolator.ts","../../../../swim-core-js/@swim/time/main/DateTimeForm.ts","../../../../swim-core-js/@swim/time/main/DateTimeParser.ts","../../../../swim-core-js/@swim/time/main/format/DateTimeLocale.ts","../../../../swim-core-js/@swim/time/main/format/DateTimeSpecifiers.ts","../../../../swim-core-js/@swim/time/main/format/DateTimeFormat.ts","../../../../swim-core-js/@swim/time/main/format/YearFormat.ts","../../../../swim-core-js/@swim/time/main/format/MonthOfYearFormat.ts","../../../../swim-core-js/@swim/time/main/format/MonthFormat.ts","../../../../swim-core-js/@swim/time/main/format/ShortMonthFormat.ts","../../../../swim-core-js/@swim/time/main/format/DayOfMonthFormat.ts","../../../../swim-core-js/@swim/time/main/format/WeekdayFormat.ts","../../../../swim-core-js/@swim/time/main/format/ShortWeekdayFormat.ts","../../../../swim-core-js/@swim/time/main/format/Hour24Format.ts","../../../../swim-core-js/@swim/time/main/format/Hour12Format.ts","../../../../swim-core-js/@swim/time/main/format/PeriodFormat.ts","../../../../swim-core-js/@swim/time/main/format/MinuteFormat.ts","../../../../swim-core-js/@swim/time/main/format/SecondFormat.ts","../../../../swim-core-js/@swim/time/main/format/MillisecondFormat.ts","../../../../swim-core-js/@swim/time/main/format/PatternFormat.ts","../../../../swim-core-js/@swim/time/main/format/YearParser.ts","../../../../swim-core-js/@swim/time/main/format/MonthOfYearParser.ts","../../../../swim-core-js/@swim/time/main/format/MonthParser.ts","../../../../swim-core-js/@swim/time/main/format/ShortMonthParser.ts","../../../../swim-core-js/@swim/time/main/format/DayOfMonthParser.ts","../../../../swim-core-js/@swim/time/main/format/WeekdayParser.ts","../../../../swim-core-js/@swim/time/main/format/ShortWeekdayParser.ts","../../../../swim-core-js/@swim/time/main/format/Hour24Parser.ts","../../../../swim-core-js/@swim/time/main/format/Hour12Parser.ts","../../../../swim-core-js/@swim/time/main/format/PeriodParser.ts","../../../../swim-core-js/@swim/time/main/format/MinuteParser.ts","../../../../swim-core-js/@swim/time/main/format/SecondParser.ts","../../../../swim-core-js/@swim/time/main/format/MillisecondParser.ts","../../../../swim-core-js/@swim/time/main/format/PatternParser.ts","../../../../swim-core-js/@swim/time/main/interval/TimeInterval.ts","../../../../swim-core-js/@swim/time/main/interval/FilterTimeInterval.ts","../../../../swim-core-js/@swim/time/main/interval/YearInterval.ts","../../../../swim-core-js/@swim/time/main/interval/YearsInterval.ts","../../../../swim-core-js/@swim/time/main/interval/MonthInterval.ts","../../../../swim-core-js/@swim/time/main/interval/WeekInterval.ts","../../../../swim-core-js/@swim/time/main/interval/DayInterval.ts","../../../../swim-core-js/@swim/time/main/interval/HourInterval.ts","../../../../swim-core-js/@swim/time/main/interval/MinuteInterval.ts","../../../../swim-core-js/@swim/time/main/interval/SecondInterval.ts","../../../../swim-core-js/@swim/time/main/interval/MillisecondInterval.ts","../../../../swim-core-js/@swim/time/main/interval/MillisecondsInterval.ts","../../../../swim-core-js/@swim/time/main/scale/TimeDomain.ts","../../../../swim-core-js/@swim/time/main/scale/TimeDomainInterpolator.ts","../../../../swim-core-js/@swim/time/main/scale/TimeRange.ts","../../../../swim-core-js/@swim/time/main/scale/TimeRangeInterpolator.ts","../../../../swim-core-js/@swim/time/main/scale/TimeScale.ts","../../../../swim-core-js/@swim/time/main/scale/TimeScaleInterpolator.ts","../../../../swim-mesh-js/@swim/warp/main/Envelope.ts","../../../../swim-mesh-js/@swim/client/main/downlink/Downlink.ts","../../../../swim-mesh-js/@swim/warp/main/HostAddressed.ts","../../../../swim-mesh-js/@swim/warp/main/LaneAddressed.ts","../../../../swim-mesh-js/@swim/warp/main/LinkAddressed.ts","../../../../swim-mesh-js/@swim/warp/main/EventMessage.ts","../../../../swim-mesh-js/@swim/warp/main/CommandMessage.ts","../../../../swim-mesh-js/@swim/warp/main/LinkRequest.ts","../../../../swim-mesh-js/@swim/warp/main/LinkedResponse.ts","../../../../swim-mesh-js/@swim/warp/main/SyncRequest.ts","../../../../swim-mesh-js/@swim/warp/main/SyncedResponse.ts","../../../../swim-mesh-js/@swim/warp/main/UnlinkRequest.ts","../../../../swim-mesh-js/@swim/warp/main/UnlinkedResponse.ts","../../../../swim-mesh-js/@swim/warp/main/AuthRequest.ts","../../../../swim-mesh-js/@swim/warp/main/AuthedResponse.ts","../../../../swim-mesh-js/@swim/warp/main/DeauthRequest.ts","../../../../swim-mesh-js/@swim/warp/main/DeauthedResponse.ts","../../../../swim-mesh-js/@swim/client/main/host/Host.ts","../../../../swim-mesh-js/@swim/client/main/host/RemoteHost.ts","../../../../swim-mesh-js/@swim/client/main/host/WebSocketHost.ts","../../../../swim-mesh-js/@swim/client/main/downlink/DownlinkModel.ts","../../../../swim-mesh-js/@swim/client/main/downlink/EventDownlinkModel.ts","../../../../swim-mesh-js/@swim/client/main/downlink/EventDownlink.ts","../../../../swim-mesh-js/@swim/client/main/downlink/ListDownlinkModel.ts","../../../../swim-mesh-js/@swim/client/main/downlink/ListDownlink.ts","../../../../swim-mesh-js/@swim/client/main/downlink/MapDownlinkModel.ts","../../../../swim-mesh-js/@swim/client/main/downlink/MapDownlink.ts","../../../../swim-mesh-js/@swim/client/main/downlink/ValueDownlinkModel.ts","../../../../swim-mesh-js/@swim/client/main/downlink/ValueDownlink.ts","../../../../swim-mesh-js/@swim/client/main/downlink/DownlinkRecord.ts","../../../../swim-mesh-js/@swim/client/main/downlink/ListDownlinkRecord.ts","../../../../swim-mesh-js/@swim/client/main/downlink/MapDownlinkRecord.ts","../../../../swim-mesh-js/@swim/client/main/downlink/ValueDownlinkRecord.ts","../../../../swim-mesh-js/@swim/client/main/downlink/DownlinkReifier.ts","../../../../swim-mesh-js/@swim/client/main/downlink/DownlinkStreamlet.ts","../../../../swim-mesh-js/@swim/client/main/ref/BaseRef.ts","../../../../swim-mesh-js/@swim/client/main/ref/LaneRef.ts","../../../../swim-mesh-js/@swim/client/main/ref/NodeRef.ts","../../../../swim-mesh-js/@swim/client/main/ref/HostRef.ts","../../../../swim-mesh-js/@swim/client/main/WarpClient.ts","../../../../swim-mesh-js/@swim/client/main/client.ts","../../../../swim-core-js/@swim/streamlet/main/In.ts"],"names":["Equals","x","y","equals","is","object","HashCode","hashCode","Equivalent","epsilon","equivalentTo","Epsilon","Compare","compareTo","NaN","FromAny","fromAny","ToAny","toAny","Lazy","target","propertyKey","descriptor","writable","enumerable","configurable","get","get_1","value","call","this","Object","defineProperty","Error","method_1","String","prototype","codePointAt","index","size","length","Number","c1","charCodeAt","c2","offsetByCodePoints","count","Random","window","crypto","fillBytes","array","getRandomValues","msCrypto","Int8Array","i","Math","round","random","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","TypeError","ByteOrder","nativeEndian","bom","ArrayBuffer","b","BigEndian","LittleEndian","nextId","Murmur3","mix","code","rotl","mixUint8Array","NativeOrder","mixUint8ArrayBE","mixUInt8ArrayLE","offset","limit","word","mixString","string","mixStringBE","mixStringLE","k","n","utf8Length","c","mash","distance","Identity","compare","xh","hash","yh","_hashCode","hashArrayBuffer","hashFloat64Array","hashInt32Array","Booleans","Numbers","equal","isNaN","equivalent","abs","Float64Array","Strings","Functions","Constructors","name","Objects","xKeys","keys","yKeys","key","Values","p","q","min","order","xKey","yKey","hashValue","Date","getTime","Array","isArray","Arrays","freeze","inserted","newElement","oldArray","newArray","element","removed","oldElement","empty","extendStatics","d","setPrototypeOf","__proto__","hasOwnProperty","__extends","__","constructor","create","__decorate","decorators","desc","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__spreadArray","to","from","pack","ar","l","slice","concat","Cursor","set","newValue","delete","CursorEmpty","unary","CursorUnary","CursorArray","_super","isEmpty","head","step","skip","hasNext","nextIndex","next","done","hasPrevious","previousIndex","previous","_this","max","AssertException","message","assert","condition","ok","notOk","lhs","rhs","notEqual","identical","notIdentical","instanceOf","notInstanceOf","compareLessThan","compareNotLessThan","compareLessThanOrEqual","compareNotLessThanOrEqual","compareEqual","compareNotEqual","compareGreaterThanOrEqual","compareNotGreaterThanOrEqual","compareGreaterThan","compareNotGreaterThan","prefixes","Severity","level","label","isTrace","TRACE_LEVEL","isDebug","DEBUG_LEVEL","isInfo","INFO_LEVEL","isNote","NOTE_LEVEL","isWarning","WARNING_LEVEL","isError","ERROR_LEVEL","isAlert","ALERT_LEVEL","isFatal","FATAL_LEVEL","that","localeCompare","toString","trace","debug","info","note","warning","error","alert","fatal","_trace","_debug","_info","_note","_warning","_error","_alert","_fatal","HashGenCacheMap","buckets","gen4Hits","gen3Hits","gen2Hits","gen1Hits","misses","bucket","gen4Key","gen4Val","gen4Weight","gen3Key","gen3Val","gen3Weight","HashGenCacheMapBucket","gen2Key","gen2Val","gen2Weight","gen1Key","gen1Val","gen1Weight","put","remove","clear","hits","hitRatio","HashGenCacheSet","HashGenCacheSetBucket","Mark","line","column","withNote","at","union","Span","start","end","shift","mark","display","output","Format","displayNumber","write","debugNumber","debugString","Tag","tmp","OutputStyle","reset","settings","isStyled","bold","faint","black","red","green","yellow","blue","magenta","cyan","gray","blackBold","redBold","greenBold","yellowBold","blueBold","magentaBold","cyanBold","grayBold","OutputException","OutputSettings","lineSeparator","pretty","styled","precision","withLineSeparator","copy","isPretty","asPretty","asStyled","withPrecision","canEqual","standard","prettyStyled","fromInit","init","Output","writeln","flush","push","tokens","_i","trap","clone","full","OutputFull","OutputDone","OutputError","InputException","InputSettings","stripped","isStripped","asStripped","Input","InputEmpty","zero","InputDone","InputError","id","isCont","isDone","isPart","asPart","part","seek","withId","withMark","withSettings","StringInput","StringOutput","isFull","token","fromCharCode","u","bind","WriterException","Writer","feed","input","fork","asDone","asError","andThen","WriterSequence","WriterEnd","WriterDone","WriterError","StringWriter","pull","Unicode","stringInput","stringOutput","stringWriter","writeString","isAlpha","isDigit","isSpace","isNewline","isWhitespace","global","require","os","EOL","notOutput","isFinite","floor","digits","decimal","debugChar","character","encodeHex","prefix","exponential","toExponential","exponentIndex","indexOf","exponent","power","scaled","pow","s","trimTrailingZeros","toFixed","i1","i0","duration","millis","separator","SECOND","MINUTE","HOUR","DAY","WEEK","weeks","days","hours","minutes","seconds","Base10","decodeDigit","encodeDigit","countDigits","integerParser","Base10NumberParser","parseInteger","parse","decimalParser","parseDecimal","numberParser","parseNumber","integerWriter","Base10IntegerWriter","writeInteger","Diagnostic","tag","severity","cause","lineDigits","displayDiagnostic","source","unexpected","expected","contextLines","displayMessage","displayAnchor","displayContext","formatSeverity","displayLineLeadArrow","displayLineLead","displayCause","causeOrder","displayLineLeadEllipsis","displayLines","displayNote","startLine","endLine","consumeLineText","displayLine","displayLineComment","displaySingleLine","displayStartLine","displayEndLine","displayMidLine","displayLineLeadNumber","i_1","displayLineText","i_2","comment","displayLineLeadComment","padding","InputBuffer","InputBufferEmpty","InputBufferDone","InputBufferError","withIndex","withLimit","has","tokenOrString","OutputBuffer","OutputBufferFull","OutputBufferDone","OutputBufferError","ParserException","diagnostic","Parser","ParserDone","ParserError","tail","ByteOutput","expand","toUint8Array","cloneArray","ByteOutputUint8Array","ByteOutputBuffer","buffer","Binary","initialCapacity","outputBuffer","UtfErrorMode","isReplacement","UtfErrorModeFatal","fatalNonZero","replacement","UtfErrorModeReplacement","replacementNonZero","nonZero","isNonZero","asNonZero","replacementChar","Base16","alphabet","uint8ArrayWriter","Base16Writer","writeUint8Array","width","Base16IntegerWriter","writeIntegerLiteral","writeLiteral","writeQuantum","parser","Base16Parser","parseUint8Array","Utf8DecodedOutput","errorMode","c3","have","c4","invalid","base16","uppercase","Utf8EncodedOutput","Utf8","sizeOf","decodedOutput","encodedOutput","decodedString","sign","mode","Base10DecimalParser","Base64","z","w","Base64Parser","Base64Writer","Base64Standard","padded","standardPadded","standardUnpadded","Base64Url","url","urlPadded","urlUnpadded","isPadded","asPadded","base64","Mapping","domain","range","mapping","Domain","x0","x1","Range","unit","contains","LinearDomain","y0","y1","LinearRange","Interpolate","interpolateTo","Interpolator","interpolator","IdentityInterpolator","NumberInterpolator","ArrayInterpolator","StepInterpolator","map","transform","InterpolatorMap","InterpolatorInterpolator","interpolators","interpolatorCount","Timing","easing","t0","t1","timing","t","withDomain","withDuration","dt","overRange","Tweening","Easing","linear","type","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","expoIn","expoOut","expoInOut","circIn","circOut","circInOut","backIn","backOut","backInOut","elasticIn","elasticOut","elasticInOut","bounceIn","bounceOut","bounceInOut","v","sqrt","st","m","PI","asin","sin","st1","invert","tweening","dx","LinearDomainInterpolator","x00","x01","x10","x11","LinearRangeInterpolator","y00","y01","y10","y11","Scale","ContinuousScale","LinearScale","scale","inverse","clampDomain","xMin","xMax","zMin","zMax","dy","xSum","dz","solveDomain","x2","y2","reflect","y3","x3","LinearScaleInterpolator","s0","s1","KeysCursor","cursor","_a","ValuesCursor","NodeCursor","pages","childIndex","childCursor","pageCursor","page","pageSize","reversePageCursor","BTreeContext","pageSplitSize","pageShouldSplit","arity","pageShouldMerge","BTree","root","BTreePage","getEntry","firstKey","entry","firstEntry","firstValue","lastKey","lastEntry","lastValue","nextKey","nextEntry","nextValue","previousKey","previousEntry","previousValue","oldRoot","newRoot","updated","balanced","drop","lower","take","upper","cleared","reduced","identity","accumulator","combiner","fold","forEach","callback","thisArg","forEachKey","forEachValue","values","entries","reverseKeys","reverseValues","reverseEntries","tree","BTreeLeaf","slots","minKey","maxKey","lookup","updatedSlot","insertedSlot","oldSlots","newSlots","removedSlot","split","newPages","newLeftPage","splitLeft","newRightPage","splitRight","newKnots","BTreeNode","slot","result","lo","hi","mid","knots","xx","oldPage","newPage","updatedPageSplit","updatedPage","oldKnots","oldPages","updatedPageMerge","midPages","midKnots","replacedPage","removedPage","newSize","newArity","newNode","BTreeNodeCursor","STreeContext","identify","STree","STreePage","RangeError","insert","newValues","pop","oldValue","unshift","move","fromIndex","toIndex","splice","deleteCount","deleted","STreeLeaf","updatedItem","oldItems","oldSlot","insertedItem","STreeNode","subIndex","STreeNodeCursor","ConstraintKey","idCount","ConstraintMap","getField","item","last","newIndex","ConstraintSymbol","ConstraintSlack","isExternal","isDummy","isInvalid","addConstraintCondition","constraint","solver","removeConstraintCondition","updateConstraintSolution","ConstraintDummy","ConstraintError","ConstraintInvalid","ConstraintExpression","constant","sum","expressions","terms","expression","ConstraintTerm","variable","field","coefficient","subterms","j","ConstraintSum","product","ConstraintProduct","ConstraintConstant","isConstant","plus","negative","oldTerms","newTerms","minus","times","scalar","divide","ConstraintBinding","owner","state","strength","setState","newState","oldState","willSetState","onSetState","didSetState","isConstraining","setConstraintVariable","evaluateConstraintVariable","isConstrained","setConstraintFlags","constraintFlags","ConstrainedFlag","constrain","constrained","conditionCount","stopConstraining","startConstraining","updateConstraintVariable","oldConditionCount","newConditionCount","ConstrainingFlag","willStartConstraining","onStartConstraining","didStartConstraining","addConstraintVariable","willStopConstraining","onStopConstraining","didStopConstraining","removeConstraintVariable","ConstraintStrength","clip","Required","Strong","Medium","Weak","Constraint","scope","relation","hasConstraint","addConstraint","removeConstraint","ConstraintGroup","constraints","enableConstraints","disableConstraints","ConstraintRow","symbol","cells","setSymbol","invalidate","setConstant","add","insertSymbol","insertRow","removeSymbol","negate","solveFor","solveForEx","coefficientFor","substitute","row","ConstraintSolver","createRow","addConstraintRow","willAddConstraint","subject","chooseSubject","marker","addWithArtificialVariable","rows","optimize","objective","didAddConstraint","updateSolution","removeConstraintRow","willRemoveConstraint","removeConstraintEffects","leaving","getMarkerLeavingSymbol","didRemoveConstraint","constraintVariable","hasConstraintVariable","constraintVariables","willAddConstraintVariable","didAddConstraintVariable","binding","willRemoveConstraintVariable","didRemoveConstraintVariable","delta","willSetConstraintVariable","infeasible","dualOptimize","other","row_1","didSetConstraintVariable","invalidated","basic","slack","eplus","eminus","dummy","artificial","success","entering","anyPivotableSymbol","getEnteringSymbol","getLeavingSymbol","getDualEnteringSymbol","ratio","MAX_VALUE","coratio","found","r1","r2","first","second","third","removeMarkerEffects","Item","record","Record","updatedAttr","setAttr","setSlot","appended","items","apply","prepended","lt","Bool","absent","le","eq","ne","ge","gt","invoke","args","filter","predicate","selector","Selector","literal","evaluate","interpreter","cast","form","orElse","coerce","iterator","ItemInterpolator","extant","Extant","Absent","Value","globalScope","MathModule","commit","Field","isDefined","isDistinct","isDefinite","toValue","flattened","unflattened","of","header","headers","body","getAttr","getSlot","getItem","conditional","thenTerm","elseTerm","or","and","lambda","template","stringValue","numberValue","booleanValue","FieldInterpolator","Text","Attr","Slot","$key","$value","ImmutableFlag","flags","setValue","updatedValue","bitwiseOr","Expression","BitwiseOrOperator","bitwiseXor","BitwiseXorOperator","bitwiseAnd","BitwiseAndOperator","PlusOperator","MinusOperator","TimesOperator","DivideOperator","modulo","ModuloOperator","not","bitwiseNot","positive","Interpreter","isAliased","isMutable","alias","branch","SlotInterpolator","typeOrder","keyEquals","keyInterpolator","valueInterpolator","AttrInterpolator","LtOperator","LeOperator","EqOperator","NeOperator","GeOperator","GtOperator","LambdaFunc","builder","ValueBuilder","Num","Data","wrap","fromArray","fromObject","fieldCount","isObject","valueCount","member","modified","lastIndexOf","subRecord","attr","pushScope","changed","oldItem","newItem","popScope","recordString","itemString","toArray","toObject","RecordCursor","RecordInterpolator","xs","ys","RecordMap","AliasedFlag","pushField","pushValue","direction","setItem","table","RecordMapView","hashTable","setAliased","pushAliased","setMutable","updateMutable","pushMutable","field_1","setAttrAliased","setAttrMutable","updateAttrMutable","field_2","setSlotAliased","setSlotMutable","updateSlotMutable","field_3","setItemAliased","setItemMutable","newItems","spliceAliased","spliceMutable","deleteAliased","deleteMutable","itemCount","_b","clearAliased","clearMutable","getByte","setByte","setByteAliased","setByteMutable","addByte","addByteAliased","addByteMutable","addData","data","addUint8Array","addUint8ArrayAliased","addUint8ArrayMutable","asUint8Array","byteOffset","writeBase16","toBase16","writeBase64","toBase64","xn","yn","fromBase16","fromBase64","DataOutput","valueOf","text","cache","TextOutput","isInfinite","isUint32","Uint32Flag","isUint64","Uint64Flag","ceil","NumInterpolator","uint32","uint64","Infinity","negativeZero","one","negativeOne","nan","num","TypeMask","true","false","ConditionalOperator","OrOperator","AndOperator","NotOperator","BitwiseNotOperator","NegativeOperator","PositiveOperator","Operator","binary","operand1","operator","operand2","operand","BinaryOperator","BinaryOperatorInterpolator","operand1Interpolator","operand2Interpolator","UnaryOperator","UnaryOperatorInterpolator","operandInterpolator","ifTerm","willOperate","didOperate","ConditionalOperatorInterpolator","ifTermInterpolator","thenTermInterpolator","elseTermInterpolator","InterpreterException","InterpreterSettings","maxScopeDepth","withMaxScopeDepth","scopeStack","scopeDepth","peekScope","getScope","newScopeStack","oldScopeStack","swapScope","newScope","oldScope","willSelect","didSelect","willTransform","didTransform","objects","scopes","argument1","argument2","InvokeOperator","func","Func","InvokeOperatorInterpolator","funcInterpolator","argsInterpolator","selected","forSelected","GetSelector","GetAttrSelector","GetItemSelector","children","descendants","FilterSelector","debugThen","IdentitySelector","KeysSelector","ValuesSelector","ChildrenSelector","DescendantsSelector","LiteralSelector","mapSelected","then","oldField","child","oldKey","newKey","oldChild","newChild","filterSelected","precedence","bindings","params","arg","BridgeFunc","MaxFunc","MinFunc","AbsFunc","CeilFunc","FloorFunc","RoundFunc","SqrtFunc","PowFunc","RateFunc","RandomFunc","rate","period","v0","now","dv","FormException","Form","withTag","TagForm","withUnit","UnitForm","forString","StringForm","forNumber","NumberForm","forBoolean","BooleanForm","forAny","AnyForm","forItem","ItemForm","forValue","ValueForm","mold","KeyEffect","ValueCursor","ValueEntryCursor","keyForm","valueForm","pair","Inlet","inlet","bindInput","unbindInput","Outlet","outlet","outputIterator","bindOutput","unbindOutput","OutletCombinators","define","memoize","watch","combinator","MemoizeValueCombinator","MapValueCombinator","WatchValueCombinator","MapInlet","decohereOutputKey","recohereOutputKey","MapOutlet","keyIterator","MapOutletCombinators","reduce","MemoizeMapCombinator","FilterFieldsCombinator","MapFieldValuesCombinator","ReduceFieldsCombinator","WatchFieldsCombinator","StreamletException","StreamletScope","Streamlet","streamlet","setStreamletScope","setStreamletContext","AbstractInlet","newInput","oldInput","disconnectInputs","disconnectOutputs","decohereOutput","version","willDecohereOutput","onDecohereOutput","didDecohereOutput","recohereOutput","willRecohereOutput","recohereInput","onRecohereOutput","didRecohereOutput","AbstractOutlet","outputs","unbindOutputs","oldOutputs","decohereInput","willDecohereInput","onDecohereInput","didDecohereInput","willRecohereInput","onRecohereInput","didRecohereInput","AbstractInoutlet","decohere","willDecohere","onDecohere","didDecohere","recohere","willRecohere","onRecohere","didRecohere","KeyOutlet","AbstractMapInlet","effect","oldEffects","effects","willDecohereOutputKey","onDecohereOutputKey","didDecohereOutputKey","willRecohereOutputKey","recohereInputKey","onRecohereOutputKey","didRecohereOutputKey","AbstractMapOutlet","oldOutlets","outlets","keyOutlet","decohereInputKey","willDecohereInputKey","onDecohereInputKey","didDecohereInputKey","willRecohereInputKey","onRecohereInputKey","didRecohereInputKey","AbstractMapInoutlet","decohereKey","willDecohereKey","onDecohereKey","didDecohereKey","recohereKey","willRecohereKey","onRecohereKey","didRecohereKey","AbstractMapInletOutlet","AbstractMapInletMapOutlet","oldOutputEffects","outputEffects","oldInputEffects","inputEffects","oldEffect","newEffect","OutletInlet","OutletMapInlet","ValueInput","ValueOutput","MapInput","MapOutput","FilterFieldsOperator","key_1","MapValueOperator","MapFieldValuesOperator","ReduceFieldsOperator","accumulate","combine","WatchValueOperator","WatchFieldsOperator","StreamletInlet","willDecohereInlet","didDecohereInlet","willRecohereInlet","didRecohereInlet","StreamletOutlet","getOutput","willDecohereOutlet","didDecohereOutlet","willRecohereOutlet","didRecohereOutlet","StreamletInoutlet","InoutletDescriptor","AbstractStreamlet","context","reflectInletKey","getPrototypeOf","reflectOutletKey","inoutlet","onDecohereOutlets","onRecohereInlets","onRecohereOutlets","getInput","streamletPrototype","name_1","inlets","inletDescriptor","InletDescriptor","reflectInletField","reflectInoutletField","name_2","outletDescriptor","OutletDescriptor","reflectOutletField","decohereOutlets","name_3","recohereInlets","name_4","recohereOutlets","name_5","reflectEachInlet","name_6","reflectEachOutlet","name_7","reflectInletCount","_","reflectOutletCount","reflectInletIndex","name_8","reflectOutletIndex","name_9","reflectValueInletField","reflectMapInletField","reflectValueOutletField","reflectMapOutletField","inoutletDescriptor","reflectValueInoutletField","reflectMapInoutletField","inoutlets","decorateInlet","options","decorateOutlet","decorateInoutlet","Out","Inout","RecordOutlet","AbstractRecordOutlet","streamletScope","streamletContext","hasOwn","RecordStreamlet","compile","compileInlet","AbstractRecordStreamlet","castInput","coerceInput","RecordFieldUpdater","RecordModel","bindValue","expr","fieldUpdater","valueInput","Dataflow","fieldUpdaters","oldFieldUpdaters","materialize","materializeItem","materializeField","materializeValue","RecordScope","compileItem","compileField","compileValue","reify","reifier","Reifier","system","reifyItem","model","GetOutlet","keyInput","keyInlet","mapInput","mapInlet","BinaryOutlet","operand1Input","operand1Inlet","operand2Input","operand2Inlet","UnaryOutlet","operandInput","operandInlet","argument","ConditionalOutlet","ifInput","ifInlet","thenInput","thenInlet","elseInput","elseInlet","OrOutlet","AndOutlet","BitwiseOrOutlet","BitwiseXorOutlet","BitwiseAndOutlet","LtOutlet","LeOutlet","EqOutlet","NeOutlet","GeOutlet","GtOutlet","PlusOutlet","MinusOutlet","TimesOutlet","DivideOutlet","ModuloOutlet","NotOutlet","BitwiseNotOutlet","NegativeOutlet","PositiveOutlet","InvokeOutlet","funcInput","funcInlet","argsInput","argsInlet","compileSelector","compileOperator","compileIdentitySelector","compileGetSelector","compileGetAttrSelector","compileGetItemSelector","compileKeysSelector","compileValuesSelector","compileChildrenSelector","compileDescendantsSelector","compileFilterSelector","getOutlet","compileConditionalOperator","compileBinaryOperator","compileUnaryOperator","compileInvokeOperator","ifOutlet","thenOutlet","elseOutlet","compileOrOperator","compileAndOperator","compileBitwiseOrOperator","compileBitwiseXorOperator","compileBitwiseAndOperator","compileLtOperator","compileLeOperator","compileEqOperator","compileNeOperator","compileGeOperator","compileGtOperator","compilePlusOperator","compileMinusOperator","compileTimesOperator","compileDivideOperator","compileModuloOperator","compileBinaryOutlet","operand1Outlet","operand2Outlet","compileNotOperator","compileBitwiseNotOperator","compileNegativeOperator","compilePositiveOperator","compileUnaryOutlet","operandOutlet","invokeOutlet","funcOutlet","argsOutlet","Recon","structureParser","ReconStructureParser","structureWriter","ReconStructureWriter","recon","parseBlockString","blockParser","sizeOfItem","sizeOfBlock","sizeOfBlockItem","writeItem","writeBlock","writeBlockItem","toBlockString","toData","toBlockData","isIdentStartChar","isIdentChar","toRecon","toReconBlock","parseRecon","BlockParser","keyParser","valueParser","block","valueBuilder","parseBlockExpression","AttrParser","parseString","parseIdent","parseBlock","BlockItemParser","fieldParser","parseAttr","recordBuilder","parseRecord","parseMarkup","parseRawString","parseData","parseSelector","InlineItemParser","RecordParser","MarkupParser","textOutput","parseInlineItem","DataParser","base64Parser","dataOutput","IdentParser","ident","StringParser","quote","RawStringParser","NumberParser","DecimalParser","HexadecimalParser","LambdaFuncParser","bindingsParser","templateParser","parseConditionalOperator","ConditionalOperatorParser","ifParser","thenParser","elseParser","parseOrOperator","OrOperatorParser","lhsParser","rhsParser","parseAndOperator","AndOperatorParser","parseBitwiseOrOperator","BitwiseOrOperatorParser","parseBitwiseXorOperator","BitwiseXorOperatorParser","parseBitwiseAndOperator","BitwiseAndOperatorParser","parseComparisonOperator","ComparisonOperatorParser","parseAttrExpression","AttrExpressionParser","parseAdditiveOperator","AdditiveOperatorParser","parseMultiplicativeOperator","MultiplicativeOperatorParser","parsePrefixOperator","PrefixOperatorParser","operandParser","parseInvokeOperator","InvokeOperatorParser","exprParser","argsParser","parsePrimary","PrimaryParser","parseLiteral","LiteralParser","SelectorParser","ReconParser","parseBlockItem","parseLambdaFunc","bool","AttrWriter","sizeOfValue","isExtant","sizeOfBlockValue","writeValue","writeBlockValue","SlotWriter","BlockWriter","inBlock","inMarkup","inBraces","inBrackets","markupSafe","isExpression","isAttr","isText","sizeOfMarkupText","isRecord","isMarkupSafe","isField","isBool","isValue","isIdent","isNum","sizeOfSlot","writeMarkupText","writeSlot","PrimaryWriter","inParens","MarkupTextWriter","escape","DataWriter","IdentWriter","LambdaFuncWriter","sizeOfPrimary","writePrimary","ConditionalOperatorWriter","InfixOperatorWriter","PrefixOperatorWriter","InvokeOperatorWriter","LiteralSelectorWriter","sizeOfThen","writeThen","GetSelectorWriter","GetAttrSelectorWriter","GetItemSelectorWriter","KeysSelectorWriter","ValuesSelectorWriter","ChildrenSelectorWriter","DescendantsSelectorWriter","FilterSelectorWriter","ReconWriter","sizeOfAttr","writeAttr","isBlockSafe","sizeOfRecord","writeRecord","sizeOfData","writeData","sizeOfText","writeText","sizeOfNum","writeNum","sizeOfUint32","writeUint32","lowercase","sizeOfUint64","writeUint64","sizeOfBool","writeBool","sizeOfLambdaFunc","writeLambdaFunc","sizeOfConditionalOperator","writeConditionalOperator","sizeOfInfixOperator","writeInfixOperator","sizeOfPrefixOperator","writePrefixOperator","sizeOfInvokeOperator","writeInvokeOperator","sizeOfIdentitySelector","writeIdentitySelector","sizeOfThenIdentitySelector","writeThenIdentitySelector","sizeOfLiteralSelector","writeLiteralSelector","sizeOfThenLiteralSelector","writeThenLiteralSelector","sizeOfGetSelector","writeGetSelector","sizeOfThenGetSelector","writeThenGetSelector","sizeOfGetAttrSelector","writeGetAttrSelector","sizeOfThenGetAttrSelector","writeThenGetAttrSelector","sizeOfGetItemSelector","writeGetItemSelector","sizeOfThenGetItemSelector","writeThenGetItemSelector","sizeOfKeysSelector","writeKeysSelector","sizeOfThenKeysSelector","writeThenKeysSelector","sizeOfValuesSelector","writeValuesSelector","sizeOfThenValuesSelector","writeThenValuesSelector","sizeOfChildrenSelector","writeChildrenSelector","sizeOfThenChildrenSelector","writeThenChildrenSelector","sizeOfDescendantsSelector","writeDescendantsSelector","sizeOfThenDescendantsSelector","writeThenDescendantsSelector","sizeOfFilterSelector","writeFilterSelector","sizeOfThenFilterSelector","writeThenFilterSelector","sizeOfExtant","writeExtant","sizeOfAbsent","writeAbsent","isSlot","sizeOfSelector","sizeOfOperator","sizeOfFunc","writeSelector","writeOperator","writeFunc","UriException","Uri","scheme","authority","path","query","fragment","withScheme","UriScheme","withSchemePart","schemePart","withSchemeName","schemeName","withAuthority","UriAuthority","withAuthorityPart","authorityPart","user","withUser","userPart","withUserPart","username","withUsername","password","withPassword","host","withHost","hostPart","withHostPart","hostAddress","hostName","withHostName","hostIPv4","withHostIPv4","hostIPv6","withHostIPv6","port","withPort","portPart","withPortPart","portNumber","withPortNumber","withPath","components","UriPath","withPathPart","pathPart","withPathName","pathName","withName","parentPath","parent","basePath","base","appendedPath","appendedSlash","appendedSegment","segment","prependedPath","prependedSlash","prependedSegment","withQuery","UriQuery","withQueryPart","updatedQuery","removedQuery","appendedQuery","prependedQuery","withFragment","UriFragment","withFragmentPart","fragmentPart","identifier","withFragmentIdentifier","fragmentIdentifier","endpoint","resolve","relative","removeDotSegments","isAbsolute","merge","unresolve","absolute","undefined","unmerge","uri","queryPart","UriParser","standardParser","parseAbsoluteString","pathBuilder","UriPathBuilder","queryBuilder","UriQueryBuilder","UriForm","isUnreservedChar","isSubDelimChar","isSchemeChar","isUserInfoChar","isUserChar","isHostChar","isPathChar","isQueryChar","isParamChar","isFragmentChar","toLowerCase","writeScheme","writeUserInfo","userInfo","writeEncoded","writeUser","writeHost","address","writeHostLiteral","writePathSegment","writeQuery","writeParam","param","writeFragment","writePctEncoded","parseSchemeString","UriUser","UriHost","hostname","ipv4","ipv6","hostIPv5","UriPort","number","parseAuthorityString","parseUserString","UriHostUndefined","UriHostName","UriHostIPv4","UriHostIPv6","parseHostString","parsePortString","isRelative","addPath","addSegment","foot","isSubpathOf","a","addSlash","UriPathSlash","rest","slash","prev","UriPathEmpty","cacheSegment","UriPathSegment","parsePathString","pathForm","UriPathForm","segmentCache","setTail","dealias","aliased","component","xi","addParam","addQuery","UriQueryUndefined","cacheKey","UriQueryParam","parseQueryString","keyCache","value_1","parseFragmentString","UriCache","resolveCache","unresolveCache","pathEmpty","absoluteParser","UriAbsoluteParser","parseAbsolute","schemeParser","UriSchemeParser","parseScheme","authorityParser","UriAuthorityParser","parseAuthority","userParser","UriUserParser","parseUser","hostParser","UriHostParser","parseHost","hostAddressParser","UriHostAddressParser","parseHostAddress","hostLiteralParser","UriHostLiteralParser","parseHostLiteral","portParser","UriPortParser","parsePort","pathParser","UriPathParser","parsePath","queryParser","UriQueryParser","parseQuery","fragmentParser","UriFragmentParser","parseFragment","look","usernameOutput","passwordOutput","keyOutput","valueOutput","LengthException","Length","units","basis","emValue","pxValue","emUnit","remValue","remUnit","pctValue","pctUnit","px","em","rem","pct","LengthInterpolator","PxLength","EmLength","RemLength","PctLength","UnitlessLength","unitless","fromCssValue","CSSUnitValue","defaultUnits","fromValue","LengthParser","LengthForm","isAny","Node","node","Element","fontSize","getComputedStyle","parseFloat","parentNode","document","documentElement","toCssValue","l0","l1","e","unitsOutput","Angle","norm","total","deg","degValue","rad","radValue","grad","gradValue","turn","turnValue","AngleInterpolator","DegAngle","RadAngle","GradAngle","TurnAngle","AngleParser","AngleForm","a0","a1","angle","R2Vector","R2VectorInterpolator","isInit","v1","R2Shape","R2Box","yMin","yMax","R2Point","isTuple","fromTuple","R2Segment","R2Circle","vector","intersects","f","transformX","transformY","R2PointInterpolator","origin","p0","p1","R2Curve","draw","drawMove","drawRest","transformDraw","transformDrawMove","transformDrawRest","writePath","writeMove","writeRest","toPathString","outputSettings","quadratic","R2QuadraticCurve","cubic","R2CubicCurve","elliptic","cx","cy","rx","ry","phi","da","R2EllipticCurve","R2CurveParser","x0Parser","y0Parser","command","R2SegmentParser","R2QuadraticCurveParser","R2CubicCurveParser","R2EllipticCurveParser","parseRest","R2BezierCurve","interpolateX","interpolateY","interpolate","containsPoint","containsSegment","ax","ay","bx","by","intersectsPoint","intersectsSegment","py","qx","qy","sx","sy","pqx","pqy","pqr","rs","rr","sr","moveTo","lineTo","R2SegmentInterpolator","x1Parser","y1Parser","x12","y12","x02","y02","quadraticCurveTo","x2Parser","y2Parser","x23","y23","x13","y13","x03","y03","bezierCurveTo","x3Parser","y3Parser","cos","a0x","a0y","a1x","a1y","b0x","b0y","b1x","b1y","b0","atan2","b1","toEndpoints","ellipse","large","sweep","cosPhi","sinPhi","cosA0","sinA0","cosA1","sinA1","fromEndpoints","x0p","y0p","rx2","ry2","x0p2","y0p2","sp","cxp","cyp","ux","uy","vx","vy","uv","uu","vv","acos","rxParser","ryParser","phiParser","R2Spline","curves","closed","isClosed","bounds","c0","curves0","curves1","subdivide","oldCurves","newCurves","boundingBox","curve","closePath","pathString","open","R2SplineBuilder","R2SplineParser","arcTo","dx01","dy01","dx12","dy12","r0x","r0y","r1x","r1y","r0x0","r0y0","r0x1","r0y1","r1x1","r1y1","r1x2","r1y2","intersection","arc","ccw","rect","h","xParser","yParser","curveParser","prevCurve","R2Path","splines","splines0","splines1","oldSplines","newSplines","spline","toAttributeString","R2PathBuilder","R2PathParser","splineParser","containsBox","containsCircle","dx0","dy0","dx1","dy1","dxMin","dyMin","dxMax","dyMax","intersectsBox","intersectsCircle","unitX","unitY","dcx0","dcy0","dcx1","dcy1","uc","u0","u1","R2CircleInterpolator","hitY","hitX","d0","d1","R2BoxInterpolator","R2Group","shapes","oldShapes","newShapes","shape","Transform","translate","translateX","translateY","scaleX","scaleY","rotate","skew","skewX","skewY","toMatrix","toAffine","toCssTransformComponent","CSSTransformValue","AffineTransformInterpolator","IdentityTransform","TranslateTransform","ScaleTransform","RotateTransform","SkewTransform","affine","tx","ty","AffineTransform","list","transforms","TransformList","fromCssTransform","fromCssTransformComponent","CSSTranslate","CSSRotate","CSSScale","CSSSkew","CSSMatrixComponent","TransformListParser","TransformForm","TransformParser","identOutput","TranslateTransformParser","ScaleTransformParser","RotateTransformParser","SkewTransformParser","AffineTransformParser","CSSKeywordValue","conformsTo","TranslateTransformInterpolator","x_1","y_1","f0","f1","zParser","ScaleTransformInterpolator","cosA","sinA","RotateTransformInterpolator","angle_1","angleParser","tan","SkewTransformInterpolator","multiply","m00","m10","m01","m11","m02","m12","det","MIN_VALUE","DOMMatrix","fromMatrix","matrix","x0_1","y0_1","x1_1","y1_1","tx_1","ty_1","entryParser","yi","inverseTransforms","n_1","TransformListInterpolator","transforms0","transforms1","transformParser","GeoProjection","projection","project","unproject","GeoShape","GeoBox","lngMin","latMin","lngMax","latMax","GeoPoint","GeoSegment","GeoTile","lng","lat","normalized","oldLng","oldLat","newLng","normalizeLng","newLat","normalizeLat","GeoPointInterpolator","lng0","lat0","lng1","lat1","uw","ue","GeoCurve","interpolateLng","interpolateLat","lng01","lat01","forEachCoord","forEachCoordRest","GeoSegmentInterpolator","GeoSpline","fromPoints","points","p2","isPoints","GeoSplineBuilder","isAnySpline","GeoPath","centroid","lngSum","latSum","fromSplines","isSplines","GeoPathBuilder","isAnyPath","containsTile","intersectsTile","bottomLeft","topRight","GeoBoxInterpolator","globe","unprojectX","unprojectY","atan","exp","GeoGroup","GeoJson","GeoJsonGeometry","GeoJsonFeature","GeoJsonFeatureCollection","toShape","toShapes","coordinates","geometries","GeoJsonPoint","GeoJsonMultiPoint","GeoJsonLineString","GeoJsonMultiLineString","GeoJsonPolygon","GeoJsonMultiPolygon","GeoJsonGeometryCollection","position","positions","lineString","multiLineString","polygons","polygon","multiPolygon","o","geometry","properties","feature","features","TimeZone","isUTC","isLocal","getTimezoneOffset","forOffset","forName","utc","zone","TimeZoneForm","DateTime","time","toUTCLocalDate","getUTCFullYear","withYear","year","month","day","hour","minute","millisecond","date","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","fromUTCLocalDate","getUTCMonth","withMonth","getUTCDate","withDay","getUTCHours","withHour","getUTCMinutes","withMinute","getUTCSeconds","withSecond","getUTCMilliseconds","withMillisecond","getUTCDay","toDate","DateTimeInterpolator","format","DateTimeFormat","iso8601","writeDate","current","local","UTC","positional","DateTimeForm","DateTimeParser","dateParser","DateTimeLocale","periods","weekdays","shortWeekdays","months","shortMonths","Periods","Weekdays","ShortWeekdays","Months","ShortMonths","DateTimeSpecifiers","locale","specifiers","_standard","Y","monthOfYear","B","withLocale","shortMonth","dayOfMonth","A","weekday","shortWeekday","H","hour24","I","hour12","M","S","L","parseDate","parseDateTime","YearFormat","MonthOfYearFormat","MonthFormat","ShortMonthFormat","DayOfMonthFormat","WeekdayFormat","ShortWeekdayFormat","Hour24Format","Hour12Format","PeriodFormat","MinuteFormat","SecondFormat","MillisecondFormat","pattern","PatternFormat","parseDateNumber","factory","minDigits","maxDigits","cont","term","parseDateString","writeDateNumber2","writeDateNumber3","writeDateNumber4","YearParser","MonthOfYearParser","MonthParser","ShortMonthParser","DayOfMonthParser","WeekdayParser","ShortWeekdayParser","Hour24Parser","Hour12Parser","PeriodParser","MinuteParser","SecondParser","MillisecondParser","charAt","PatternParser","TimeInterval","ds","FilterTimeInterval","YearInterval","MonthInterval","WeekInterval","DayInterval","HourInterval","MinuteInterval","SecondInterval","MillisecondInterval","years","week","milliseconds","MillisPerSecond","MillisPerMinute","MillisPerHour","UnitTimeInterval","every","YearsInterval","stride","dtz","MillisecondsInterval","TimeDomain","TimeRange","TimeDomainInterpolator","TimeRangeInterpolator","TimeScale","tMin","tMax","tSum","t2","t3","TimeScaleInterpolator","Envelope","withPrio","prio","withRate","EventMessage","CommandMessage","LinkRequest","LinkedResponse","SyncRequest","SyncedResponse","UnlinkRequest","UnlinkedResponse","AuthRequest","AuthedResponse","DeauthRequest","DeauthedResponse","DownlinkFlags","HostAddressed","withNode","withLane","lane","withBody","LaneAddressed","LinkAddressed","RemoteHost","hostUri","reconnectTimer","reconnectTimeout","idleTimer","credentials","unlinkDelay","UnlinkDelay","maxReconnectTimeout","MaxReconnectTimeout","idleTimeout","IdleTimeout","sendBufferSize","SendBufferSize","isAuthenticated","authenticated","isIdle","sendBuffer","downlinkCount","uriCache","authenticate","isConnected","request","openDownlink","downlink","clearIdle","nodeUri","laneUri","nodeDownlinks","downlinks","openUp","hostDidConnect","unlinkDownlink","onUnlinkRequest","closeDownlink","watchIdle","closeUp","onEnvelope","envelope","onEventMessage","onCommandMessage","onLinkRequest","onLinkedResponse","onSyncRequest","onSyncedResponse","onUnlinkedResponse","onAuthRequest","onAuthedResponse","onDeauthRequest","onDeauthedResponse","onUnknownEnvelope","resolvedMessage","response","resolvedResponse","hostDidAuthenticate","hostDidDeauthenticate","onConnect","onDisconnect","hostDidDisconnect","onError","hostDidFail","reconnect","setTimeout","clearReconnect","clearTimeout","checkIdle","close","closeHost","Host","WebSocketHost","WebSocket","socket","readyState","OPEN","WebSocket_1","protocols","onopen","onWebSocketOpen","onmessage","onWebSocketMessage","onclose","onWebSocketClose","onerror","onWebSocketError","isOnline","send","DownlinkModel","keepLinked","views","keepSynced","isLinked","status","Linked","isSynced","Synced","session","addDownlink","view","removeDownlink","oldViews","newViews","unlink","doUnlink","Linking","Syncing","Unlinking","sync","link","Downlink","observers","observer","onEvent","onCommand","willLink","_c","didLink","_d","willSync","_e","didSync","_f","willUnlink","_g","didUnlink","_h","didConnect","_j","didDisconnect","_k","didClose","_l","didFail","_m","ownHostUri","ownNodeUri","ownLaneUri","ownPrio","ownRate","ownBody","observe","unobserve","oldObservers","oldObserver","newObservers","initForm","DownlinkInitForm","EventDownlinkModel","EventDownlink","getDownlink","ListDownlinkModel","listWillUpdate","oldEntry","listDidUpdate","newEntry","listWillRemove","listDidRemove","listWillMove","listDidMove","listWillClear","listDidClear","snapshot","event","onUpdateEvent","onInsertEvent","onMoveEvent","onRemoveEvent","onDropEvent","onTakeEvent","onClearEvent","listWillDrop","listDidDrop","listWillTake","listDidTake","ListDownlink","state0","willUpdate","didUpdate","willMove","didMove","willRemove","didRemove","willDrop","didDrop","willTake","didTake","willClear","didClear","ownValueForm","newObject","newObjects","oldValues","oldObjects","newResult","oldObject","initialState","didAliasModel","MapDownlinkModel","mapWillUpdate","mapDidUpdate","mapWillRemove","mapDidRemove","mapWillDrop","mapDidDrop","mapWillTake","mapDidTake","mapWillClear","mapDidClear","MapDownlink","ownKeyForm","keyObject","nextKeyObject","nextObject","previousKeyObject","previousObject","ValueDownlinkModel","valueWillSet","valueDidSet","onSetEvent","ValueDownlink","willSet","didSet","DownlinkRecord","ListDownlinkRecord","MapDownlinkRecord","ValueDownlinkRecord","DownlinkReifier","warp","reifyField","reifyValue","reifyModel","DownlinkStreamlet","bodyValue","downlinkRecord","inputHostUri","inputNodeUri","inputLaneUri","inputPrio","inputRate","inputBody","inputType","client","downlinkMap","downlinkValue","_reifier","BaseRef","openRef","closeRef","didAuthenticate","didDeauthenticate","LaneRef","hostRef","HostRef","nodeRef","NodeRef","laneRef","downlinkList","WarpClient","keepOnline","onOnline","onOffline","watchOnline","online","hosts","addEventListener","removeEventListener","getHost","openHost","hostDownlinks","ref","refs"],"mappings":"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","file":"/Users/c9r/Swim/Code/swim-continuum/swim-system-js/@swim/system/dist/main/swim-system.min.js","sourcesContent":["// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Type that implements a universal equality relation.\n */\nexport interface Equals {\n  /**\n   * Returns `true` if `this` is equal to `that`, otherwise returns `false`.\n   */\n  equals(that: unknown): boolean;\n}\n\nexport const Equals = function (x: unknown, y: unknown): boolean {\n  if (x === y) {\n    return true;\n  } else if (x !== void 0 && x !== null && typeof (x as Equals).equals === \"function\") {\n    return (x as Equals).equals(y);\n  }\n  return false;\n} as {\n  /**\n   * Returns `true` if `x` conforms to [[Equals]] and is [[Equals.equals\n   * equal]] to `y`, otherwise returns `x === y`.\n   */\n  (x: unknown, y: unknown): boolean;\n\n  /**\n   * Returns `true` if `object` conforms to the [[Equals]] interface.\n   */\n  is(object: unknown): object is Equals;\n};\n\nEquals.is = function (object: unknown): object is Equals {\n  return object !== void 0 && object !== null\n      && typeof (object as Equals).equals === \"function\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"./Equals\";\n\n/**\n * Type that is convertible to a hash value consistent with its universal\n * equality relation.\n */\nexport interface HashCode extends Equals {\n  /**\n   * Returns a 32-bit hash value for this object.\n   */\n  hashCode(): number;\n}\n\nexport const HashCode = function (x: HashCode | null | undefined): number {\n  if (x === void 0) {\n    return 0;\n  } else if (x === null) {\n    return 1;\n  } else {\n    return x.hashCode();\n  }\n} as {\n  /**\n   * Returns the [[HashCode.hashCode hash code]] of `x`, if `x` is an object;\n   * otherwise returns `0` or `1` if `x` is `undefined` or `null`, respectively.\n   */\n  (x: HashCode | null | undefined): number;\n\n  /**\n   * Returns `true` if `object` conforms to the [[HashCode]] interface.\n   */\n  is(object: unknown): object is HashCode;\n};\n\nHashCode.is = function (object: unknown): object is HashCode {\n  return object !== void 0 && object !== null\n      && typeof (object as HashCode).hashCode === \"function\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Type that implements a universal equivalence relation.\n */\nexport interface Equivalent {\n  /**\n   * Returns `true` if `this` is equivalent to `that` within some optionally\n   * specified error tolerance `epsilon`, otherwise returns `false`.\n   */\n  equivalentTo(that: unknown, epsilon?: number): boolean;\n}\n\nexport const Equivalent = function (x:unknown, y: unknown, epsilon?: number): boolean {\n  if (x === y) {\n    return true;\n  } else if (x !== void 0 && x !== null && typeof (x as Equivalent).equivalentTo === \"function\") {\n    return (x as Equivalent).equivalentTo(y, epsilon);\n  }\n  return false;\n} as {\n  /**\n   * Returns `true` if `x` conforms to [[Equivalent]] and is\n   * [[Equivalent.equivalentTo equivalent to]] `y`, otherwise returns `x === y`.\n   */\n  (x: unknown, y: unknown, epsilon?: number): boolean;\n\n  /**\n   * Returns `true` if `object` conforms to the [[Equivalent]] interface.\n   */\n  is(object: unknown): object is Equivalent;\n\n  /**\n   * Default equivalence tolerance.\n   */\n  Epsilon: number;\n};\n\nEquivalent.is = function (object: unknown): object is Equivalent {\n  return object !== void 0 && object !== null\n      && typeof (object as Equivalent).equivalentTo === \"function\";\n};\n\nEquivalent.Epsilon = 1.0e-8;\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Type that implements a universal partial order.\n */\nexport interface Compare {\n  /**\n   * Returns the relative order of `this` with respect to `that`.  Returns `-1`\n   * if `this` orders before `that`; returns `1` if `this` orders after `that`;\n   * returns `0` if `this` and `that` are equivalent; and returns `NaN` if\n   * `this` is not comparable to `that`.\n   */\n  compareTo(that: unknown): number;\n}\n\nexport const Compare = function (x: unknown, y: unknown): number {\n  if (x === void 0) {\n    if (y === void 0) {\n      return 0;\n    } else {\n      return 1;\n    }\n  } else if (x === null) {\n    if (y === void 0) {\n      return -1;\n    } else if (y === null) {\n      return 0;\n    } else {\n      return 1;\n    }\n  } else if (typeof (x as Compare).compareTo === \"function\") {\n    if (y === void 0 || y === null) {\n      return -1;\n    } else {\n      return (x as Compare).compareTo(y);\n    }\n  } else {\n    return NaN;\n  }\n} as {\n  /**\n   * Returns the relative order of `x` with respect to `y`. Returns `-1` if `x`\n   * orders before `y`; returns `1` if `x` orders after `y`; returns `0` if `x`\n   * and `y` are equivalent; and returns `NaN` if `x` is not comparable to `y`.\n   * Objects are [[Compare.compareTo compared to]] each other when both are\n   * defined, otherwise defined objects order before `null`, and `null` orders\n   * before `undefined`.\n   */\n  (x: unknown, y: unknown): number;\n\n  /**\n   * Returns `true` if `object` conforms to the [[Compare]] interface.\n   */\n  is(object: unknown): object is Compare;\n};\n\nCompare.is = function (object: unknown): object is Compare {\n  return object !== void 0 && object !== null\n      && typeof (object as Compare).compareTo === \"function\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport interface FromAny<T, U = never> {\n  fromAny(value: T | U): T;\n}\n\nexport const FromAny = {} as {\n  /**\n   * Returns `true` if `object` conforms to the [[FromAny]] interface.\n   */\n  is<T, U = never>(object: unknown): object is FromAny<T, U>;\n};\n\nFromAny.is = function <T, U = never>(object: unknown): object is FromAny<T, U> {\n  return object !== void 0 && object !== null\n      && typeof (object as FromAny<T, U>).fromAny === \"function\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport interface ToAny<T> {\n  toAny(): T;\n}\n\nexport const ToAny = {} as {\n  /**\n   * Returns `true` if `object` conforms to the [[ToAny]] interface.\n   */\n  is<T>(object: unknown): object is ToAny<T>;\n};\n\nToAny.is = function <T>(object: unknown): object is ToAny<T> {\n  return object !== void 0 && object !== null\n      && typeof (object as ToAny<T>).toAny === \"function\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Decorator that memoizes the computed value of a getter or nullary method.\n */\nexport const Lazy: MethodDecorator = function <T>(target: Object, propertyKey: string | symbol,\n                                                  descriptor: TypedPropertyDescriptor<T>): void {\n  const writable = descriptor.writable;\n  const enumerable = descriptor.enumerable;\n  const configurable = descriptor.configurable;\n  if (descriptor.get !== void 0) {\n    const get = descriptor.get;\n    descriptor.get = function (this: unknown): T {\n      const value = get.call(this);\n      Object.defineProperty(target, propertyKey, {\n        value,\n        writable,\n        enumerable,\n        configurable,\n      });\n      return value;\n    };\n  } else if (descriptor.value !== void 0) {\n    const method = descriptor.value as unknown as () => T;\n    descriptor.value = function (this: unknown): T {\n      const value = method.call(this);\n      Object.defineProperty(target, propertyKey, {\n        value: function (): T {\n          return value;\n        },\n        writable,\n        enumerable,\n        configurable,\n      });\n      return value;\n    } as unknown as T;\n  } else {\n    throw new Error(\"invalid lazy property descriptor\");\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nif (String.prototype.codePointAt === void 0) {\n  String.prototype.codePointAt = function (this: string, index: number): number | undefined {\n    const size = this.length;\n    index = index ? Number(index) : 0; // Coerce to number.\n    if (index !== index) { // Convert NaN to zero.\n      index = 0;\n    }\n    if (index >= 0 && index < size) {\n      const c1 = this.charCodeAt(index);\n      if (c1 <= 0xd7ff || c1 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n        return c1;\n      } else if (c1 <= 0xdbff && index + 1 < size) {\n        const c2 = this.charCodeAt(index + 1);\n        if (c2 >= 0xdc00 && c2 <= 0xdfff) { // U+10000..U+10FFFF\n          return ((c1 & 0x03ff) << 10 + c2 & 0x03ff) + 0x10000;\n        }\n      }\n    }\n    return void 0;\n  };\n}\n\nif (String.prototype.offsetByCodePoints === void 0) {\n  String.prototype.offsetByCodePoints = function (this: string, index: number, count: number): number {\n    if (count > 0) {\n      const size = this.length;\n      while (count > 0 && index < size) {\n        const c1 = this.charCodeAt(index);\n        if (c1 <= 0xd7ff || c1 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n          index += 1;\n        } else if (c1 <= 0xdbff && index + 1 < size) {\n          const c2 = this.charCodeAt(index + 1);\n          if (c2 >= 0xdc00 && c2 <= 0xdfff) { // U+10000..U+10FFFF\n            index += 2;\n          } else {\n            index += 1;\n          }\n        } else {\n          index += 1;\n        }\n        count -= 1;\n      }\n    } else if (count < 0) {\n      while (count < 0 && index > 0) {\n        const c2 = this.charCodeAt(index - 1);\n        if (c2 <= 0xd7ff || c2 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n          index -= 1;\n        } else if (c2 >= 0xdc00 && c2 <= 0xdfff && index - 1 > 0) {\n          const c1 = this.charCodeAt(index - 2);\n          if (c1 >= 0xd800 && c1 <= 0xdfff) { // U+10000..U+10FFFF\n            index -= 2;\n          } else {\n            index -= 1;\n          }\n        } else {\n          index -= 1;\n        }\n        count -= 1;\n      }\n    }\n    return index;\n  };\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const Random = {} as {\n  fillBytes(array: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array): void;\n};\n\nif (typeof window !== \"undefined\" && window.crypto !== void 0) {\n  Random.fillBytes = function (array: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array): void {\n    window.crypto.getRandomValues(array);\n  };\n} else if (typeof window !== \"undefined\" && (window as any).msCrypto !== void 0) {\n  Random.fillBytes = function (array: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array): void {\n    ((window as any).msCrypto as RandomSource).getRandomValues(array);\n  };\n} else {\n  Random.fillBytes = function (array: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array): void {\n    if (array instanceof Int8Array) {\n      for (let i = 0; i < array.length; i += 1) {\n        array[i] = 128 - Math.round(Math.random() * 256);\n      }\n    } else if (array instanceof Uint8Array) {\n      for (let i = 0; i < array.length; i += 1) {\n        array[i] = Math.round(Math.random() * 256);\n      }\n    } else if (array instanceof Int16Array) {\n      for (let i = 0; i < array.length; i += 1) {\n        array[i] = 32768 - Math.round(Math.random() * 65536);\n      }\n    } else if (array instanceof Uint16Array) {\n      for (let i = 0; i < array.length; i += 1) {\n        array[i] = Math.round(Math.random() * 65536);\n      }\n    } else if (array instanceof Int32Array) {\n      for (let i = 0; i < array.length; i += 1) {\n        array[i] = 2147483648 - Math.round(Math.random() * 4294967296);\n      }\n    } else if (array instanceof Uint32Array) {\n      for (let i = 0; i < array.length; i += 1) {\n        array[i] = Math.round(Math.random() * 4294967296);\n      }\n    } else {\n      throw new TypeError(\"\" + array);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Endianness of multi-byte words.\n */\nexport type ByteOrder = \"BE\" | \"LE\";\n\nexport const ByteOrder = {} as {\n  /**\n   * Most significant byte first.\n   */\n  readonly BigEndian: ByteOrder;\n\n  /**\n   * Least significant byte first.\n   */\n  readonly LittleEndian: ByteOrder;\n\n  /**\n   * `ByteOrder` of the host machine.\n   */\n  readonly NativeOrder: ByteOrder;\n};\n\nObject.defineProperty(ByteOrder, \"BigEndian\", {\n  value: \"BE\",\n  enumerable: true,\n});\n\nObject.defineProperty(ByteOrder, \"LittleEndian\", {\n  value: \"LE\",\n  enumerable: true,\n});\n\nObject.defineProperty(ByteOrder, \"NativeOrder\", {\n  get(): ByteOrder {\n    let nativeEndian: ByteOrder;\n    const bom = new ArrayBuffer(2);\n    new Uint16Array(bom)[0] = 0xfeff;\n    const b = new Uint8Array(bom);\n    if (b[0] === 0xfe && b[1] === 0xff) {\n      nativeEndian = ByteOrder.BigEndian;\n    } else if (b[0] === 0xff && b[1] === 0xfe) {\n      nativeEndian = ByteOrder.LittleEndian;\n    } else {\n      throw new Error();\n    }\n    Object.defineProperty(ByteOrder, \"NativeOrder\", {\n      value: nativeEndian,\n      enumerable: true,\n    });\n    return nativeEndian;\n  },\n  configurable: true,\n  enumerable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities for comparing and hashing object identities.\n */\nexport const Identity = {} as {\n  /**\n   * Returns the relative order of `x` with respect to `y`.  Returns `-1` if\n   * the hash code of object `x` is less than the hash code of object `y`;\n   * returns `1` if the hash code of object `x` is greater than the hash code\n   * of object `y`; and returns `0` if `x` and `y` are identical objects.\n   * If either `x` or `y` is `null` or `undefined`, then objects order before\n   * `null`, and `null` orders before `undefined`.\n   */\n  compare(x: object | null | undefined, y: object | null | undefined): number;\n\n  /**\n   * Returns a unique 32-bit hash value for a particular object instance.\n   */\n  hash(x: object | null | undefined): number;\n};\n\nIdentity.compare = function (x: object | null | undefined, y: object | null | undefined): number {\n  if (typeof x === \"object\" && x !== null) {\n    if (typeof y === \"object\" && y !== null) {\n      const xh = Identity.hash(x);\n      const yh = Identity.hash(y);\n      return xh < yh ? -1 : xh > yh ? 1 : 0;\n    } else {\n      return -1;\n    }\n  } else if (x === null) {\n    return y === void 0 ? -1 : y === null ? 0 : 1;\n  } else if (x === void 0) {\n    return y === void 0 ? 0 : 1;\n  } else {\n    return NaN;\n  }\n};\n\nIdentity.hash = (function () {\n  let nextId = -1;\n  return function (x: object | null | undefined): number {\n    if (typeof x === \"object\" && x !== null) {\n      let hashCode = (x as any)._hashCode as number | undefined;\n      if (hashCode === void 0) {\n        hashCode = ~~nextId;\n        nextId -= 1;\n        Object.defineProperty(x, \"_hashCode\", {\n          value: hashCode,\n          configurable: true,\n        });\n      }\n      return hashCode;\n    } else if (x === null) {\n      return 1;\n    } else if (x === void 0) {\n      return 0;\n    } else {\n      throw new TypeError(\"\" + x);\n    }\n  };\n})();\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ByteOrder} from \"./ByteOrder\";\n\n/**\n * 32-bit [MurmurHash](https://en.wikipedia.org/wiki/MurmurHash) algorithm,\n * version 3.\n */\nexport const Murmur3 = {} as {\n  /**\n   * Mixes a new hash `value` into the accumulated hash `code`,\n   * and returns the accumulated hash value.\n   */\n  mix(code: number, value: number): number;\n\n  /**\n   * Mixes each consecutive 4-byte word of `array` into `code`,\n   * and returns the accumulated hash value.\n   */\n  mixUint8Array(code: number, array: Uint8Array): number;\n\n  /** @hidden */\n  mixUint8ArrayBE(code: number, array: Uint8Array): number;\n\n  /** @hidden */\n  mixUInt8ArrayLE(code: number, array: Uint8Array): number;\n\n  /**\n   * Mixes each consecutive 4-byte word of the UTF-8 encoding of `string`\n   * into `code`, and returns the accumulated hash value.\n   */\n  mixString(code: number, string: string): number;\n\n  /** @hidden */\n  mixStringBE(code: number, string: string): number;\n\n  /** @hidden */\n  mixStringLE(code: number, string: string): number;\n\n  /**\n   * Finalizes a hash `code`.\n   */\n  mash(code: number): number;\n\n  /** @hidden */\n  rotl(value: number, distance: number): number;\n};\n\nMurmur3.mix = function (code: number, value: number): number {\n  value = ((value & 0xffff) * 0xcc9e2d51) + (((value >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n  value = Murmur3.rotl(value, 15);\n  value = ((value & 0xffff) * 0x1b873593) + (((value >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n  code ^= value;\n  code = Murmur3.rotl(code, 13);\n  code = ((code & 0xffff) * 5) + (((code >>> 16) * 5 & 0xffff) << 16) & 0xffffffff;\n  code = ((code & 0xffff) + 0x6b64) + (((code >>> 16) + 0xe654 & 0xffff) << 16);\n  return code;\n};\n\nMurmur3.mixUint8Array = function (code: number, array: Uint8Array): number {\n  if (ByteOrder.NativeOrder === ByteOrder.BigEndian) {\n    return Murmur3.mixUint8ArrayBE(code, array);\n  } else if (ByteOrder.NativeOrder === ByteOrder.LittleEndian) {\n    return Murmur3.mixUInt8ArrayLE(code, array);\n  } else {\n    throw new Error();\n  }\n};\n\nMurmur3.mixUint8ArrayBE = function (code: number, array: Uint8Array): number {\n  let offset = 0;\n  const limit = array.length;\n  while (offset + 3 < limit) {\n    const word = (array[offset    ]! & 0xff) << 24 | (array[offset + 1]! & 0xff) << 16\n               | (array[offset + 2]! & 0xff) <<  8 |  array[offset + 3]! & 0xff;\n    code = Murmur3.mix(code, word);\n    offset += 4;\n  }\n  if (offset < limit) {\n    let word = (array[offset]! & 0xff) << 24;\n    if (offset + 1 < limit) {\n      word |= (array[offset + 1]! & 0xff) << 16;\n      if (offset + 2 < limit) {\n        word |= (array[offset + 2]! & 0xff) << 8;\n        //assert offset + 3 === limit;\n      }\n    }\n    word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n    word = Murmur3.rotl(word, 15);\n    word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n    code ^= word;\n  }\n  return code ^ limit;\n};\n\nMurmur3.mixUInt8ArrayLE = function (code: number, array: Uint8Array): number {\n  let offset = 0;\n  const limit = array.length;\n  while (offset + 3 < limit) {\n    const word =  array[offset    ]! & 0xff        | (array[offset + 1]! & 0xff) <<  8\n               | (array[offset + 2]! & 0xff) << 16 | (array[offset + 3]! & 0xff) << 24;\n    code = Murmur3.mix(code, word);\n    offset += 4;\n  }\n  if (offset < limit) {\n    let word = array[offset]! & 0xff;\n    if (offset + 1 < limit) {\n      word |= (array[offset + 1]! & 0xff) << 8;\n      if (offset + 2 < limit) {\n        word |= (array[offset + 2]! & 0xff) << 16;\n        //assert offset + 3 === limit;\n      }\n    }\n    word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n    word = Murmur3.rotl(word, 15);\n    word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n    code ^= word;\n  }\n  return code ^ limit;\n};\n\nMurmur3.mixString = function (code: number, string: string): number {\n  if (ByteOrder.NativeOrder === ByteOrder.BigEndian) {\n    return Murmur3.mixStringBE(code, string);\n  } else if (ByteOrder.NativeOrder === ByteOrder.LittleEndian) {\n    return Murmur3.mixStringLE(code, string);\n  } else {\n    throw new Error();\n  }\n};\n\nMurmur3.mixStringBE = function (code: number, string: string): number {\n  let word = 0;\n  let k = 32;\n  let i = 0;\n  const n = string.length;\n  let utf8Length = 0;\n  while (i < n) {\n    let c = string.codePointAt(i);\n    if (c === void 0) {\n      c = string.charCodeAt(i);\n    }\n    if (c >= 0 && c <= 0x7f) { // U+0000..U+007F\n      k -= 8;\n      word |= c << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      utf8Length += 1;\n    } else if (c >= 0x80 && c <= 0x7ff) { // U+0080..U+07FF\n      k -= 8;\n      word |= (0xc0 | (c >>> 6)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      k -= 8;\n      word |= (0x80 | (c & 0x3f)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      utf8Length += 2;\n    } else if (c >= 0x0800 && c <= 0xffff || // U+0800..U+D7FF\n               c >= 0xe000 && c <= 0xffff) { // U+E000..U+FFFF\n      k -= 8;\n      word |= (0xe0 | (c  >>> 12)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      k -= 8;\n      word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      k -= 8;\n      word |= (0x80 | (c & 0x3f)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      utf8Length += 3;\n    } else if (c >= 0x10000 && c <= 0x10ffff) { // U+10000..U+10FFFF\n      k -= 8;\n      word |= (0xf0 | (c  >>> 18)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      k -= 8;\n      word |= (0x80 | ((c >>> 12) & 0x3f)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      k -= 8;\n      word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      k -= 8;\n      word |= (0x80 | (c & 0x3f)) << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      utf8Length += 4;\n    } else { // surrogate or invalid code point\n      k -= 8;\n      word |= 0xef << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      k -= 8;\n      word |= 0xbf << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      k -= 8;\n      word |= 0xbd << k;\n      if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n      utf8Length += 3;\n    }\n    i = string.offsetByCodePoints(i, 1);\n  }\n  if (k !== 32) {\n    word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n    word = Murmur3.rotl(word, 15);\n    word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n    code ^= word;\n  }\n  return code ^ utf8Length;\n};\n\nMurmur3.mixStringLE = function (code: number, string: string): number {\n  let word = 0;\n  let k = 0;\n  let i = 0;\n  const n = string.length;\n  let utf8Length = 0;\n  while (i < n) {\n    let c = string.codePointAt(i);\n    if (c === void 0) {\n      c = string.charCodeAt(i);\n    }\n    if (c >= 0 && c <= 0x7f) { // U+0000..U+007F\n      word |= c << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      utf8Length += 1;\n    } else if (c >= 0x80 && c <= 0x7ff) { // U+0080..U+07FF\n      word |= (0xc0 | (c >>> 6)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      word |= (0x80 | (c & 0x3f)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      utf8Length += 2;\n    } else if (c >= 0x0800 && c <= 0xffff || // U+0800..U+D7FF\n               c >= 0xe000 && c <= 0xffff) { // U+E000..U+FFFF\n      word |= (0xe0 | (c  >>> 12)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      word |= (0x80 | (c & 0x3f)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      utf8Length += 3;\n    } else if (c >= 0x10000 && c <= 0x10ffff) { // U+10000..U+10FFFF\n      word |= (0xf0 | (c  >>> 18)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      word |= (0x80 | ((c >>> 12) & 0x3f)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      word |= (0x80 | (c & 0x3f)) << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      utf8Length += 4;\n    } else { // surrogate or invalid code point\n      word |= 0xef << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      word |= 0xbf << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      word |= 0xbd << k;\n      k += 8;\n      if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n      utf8Length += 3;\n    }\n    i = string.offsetByCodePoints(i, 1);\n  }\n  if (k !== 32) {\n    word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n    word = Murmur3.rotl(word, 15);\n    word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n    code ^= word;\n  }\n  return code ^ utf8Length;\n};\n\nMurmur3.mash = function (code: number): number {\n  code ^= code >>> 16;\n  code = ((code & 0xffff) * 0x85ebca6b) + (((code >>> 16) * 0x85ebca6b & 0xffff) << 16) & 0xffffffff;\n  code ^= code >>> 13;\n  code = ((code & 0xffff) * 0xc2b2ae35) + (((code >>> 16) * 0xc2b2ae35 & 0xffff) << 16) & 0xffffffff;\n  code ^= code >>> 16;\n  return code >>> 0;\n};\n\nMurmur3.rotl = function (value: number, distance: number): number {\n  return (value << distance) | (value >>> (32 - distance));\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent} from \"../lang/Equivalent\";\n\n/**\n * Utilities for comparing and hashing numbers.\n */\nexport const Numbers = {} as {\n  /**\n   * Returns `true` if `x` and `y` are equal numbers, or if both are `NaN`;\n   * otherwise returns `x === y` if either `x` or `y` is not defined.\n   */\n  equal(x: number | null | undefined, y: number | null | undefined): boolean;\n\n  /**\n   * Returns `true` if `x` and `y` are both defined, and the difference between\n   * the two is less than `epsilon`, or if both are `NaN`; otherwise returns\n   * `x === y` if either `x` or `y` is not defined.\n   */\n  equivalent(x: number | null | undefined, y: number | null | undefined, epsilon?: number): boolean;\n\n  /**\n   * Returns the relative order of `x` with respect to `y`.  Returns `-1` if\n   * the number `x` less than the number `y`; returns `1` if the number `x` is\n   * greater than the number `y`; and returns `0` if `x` and `y` are equal\n   * numbers, or if both are `NaN`.  If either `x` or `y` is `NaN`, `null`,\n   * or `undefined`, then numbers order before `NaN`, `NaN` orders before\n   * `null`, and `null` orders before `undefined`.\n   */\n  compare(x: number | null | undefined, y: number | null | undefined): number;\n\n  /**\n   * Returns a 32-bit hash value for the number `x`, if defined; otherwise\n   * returns `0` or `1` if `x` is `undefined` or `null`, respectively.\n   */\n  hash(x: number | null | undefined): number;\n};\n\nNumbers.equal = function (x: number | null | undefined, y: number | null | undefined): boolean {\n  return x === y || typeof x === \"number\" && typeof y === \"number\" && isNaN(x) && isNaN(y);\n};\n\nNumbers.equivalent = function (x: number | null | undefined, y: number | null | undefined, epsilon?: number): boolean {\n  return x === y || typeof x === \"number\" && typeof y === \"number\" && (isNaN(x) && isNaN(y) || Math.abs(y - x) < (epsilon !== void 0 ? epsilon : Equivalent.Epsilon));\n};\n\nNumbers.compare = function (x: number | null | undefined, y: number | null | undefined): number {\n  if (typeof x === \"number\") {\n    return typeof y === \"number\" ? (x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0) : -1;\n  } else if (x === null) {\n    return y === void 0 ? -1 : y === null ? 0 : 1;\n  } else if (x === void 0) {\n    return y === void 0 ? 0 : 1;\n  } else {\n    return NaN;\n  }\n};\n\nNumbers.hash = (function () {\n  const hashArrayBuffer = new ArrayBuffer(8);\n  const hashFloat64Array = new Float64Array(hashArrayBuffer);\n  const hashInt32Array = new Int32Array(hashArrayBuffer);\n  return function (x: number | null | undefined): number {\n    if (typeof x === \"number\") {\n      if (x === ~~x) {\n        return ~~x;\n      } else {\n        hashFloat64Array[0] = x;\n        return hashInt32Array[0]! ^ hashInt32Array[1]!;\n      }\n    } else if (x === null) {\n      return 1;\n    } else if (x === void 0) {\n      return 0;\n    } else {\n      throw new TypeError(\"\" + x);\n    }\n  };\n})();\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities for comparing and hashing booleans.\n */\nexport const Booleans = {} as {\n  /**\n   * Returns the relative order of `x` with respect to `y`.  Returns `-1` if\n   * `x` is `true` and `y` is `false`; returns `1` if `x` is `false` and `y`\n   * is `true`; and returns `0` if `x` and `y` are equal booleans.  If either\n   * `x` or `y` is `null` or `undefined`, then booleans order before `null`,\n   * and `null` orders before `undefined`.\n   */\n  compare(x: boolean | null | undefined, y: boolean | null | undefined): number;\n\n  /**\n   * Returns a hash code for a number.\n   */\n  hash(x: boolean | null | undefined): number;\n};\n\nBooleans.compare = function (x: boolean | null | undefined, y: boolean | null | undefined): number {\n  if (typeof x === \"boolean\") {\n    return typeof y === \"boolean\" ? (x && !y ? -1 : !x && y ? 1 : 0) : -1;\n  } else if (x === null) {\n    return y === void 0 ? -1 : y === null ? 0 : 1;\n  } else if (x === void 0) {\n    return y === void 0 ? 0 : 1;\n  } else {\n    return NaN;\n  }\n};\n\nBooleans.hash = function (x: boolean | null | undefined): number {\n  if (x === true) {\n    return 3;\n  } else if (x === false) {\n    return 2;\n  } else if (x === null) {\n    return 1;\n  } else if (x === void 0) {\n    return 0;\n  } else {\n    throw new TypeError(\"\" + x);\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"./Murmur3\";\n\n/**\n * Utilities for comparing and hashing strings.\n */\nexport const Strings = {} as {\n  /**\n   * Returns the relative order of `x` with respect to `y`.  Returns `-1` if\n   * the string `x` lexicographically orders before the string `y`; returns `1`\n   * if the string `x` lexicographically orders after the string `y`; and\n   * returns `0` if `x` and `y` are equal strings.  If either `x` or `y` is\n   * `null` or `undefined`, then strings order before `null`, and `null` orders\n   * before `undefined`.\n   */\n  compare(x: string | null | undefined, y: string | null | undefined): number;\n\n  /**\n   * Returns a hash code for a string.\n   */\n  hash(x: string | null | undefined): number;\n};\n\nStrings.compare = function (x: string | null | undefined, y: string | null | undefined): number {\n  if (typeof x === \"string\") {\n    return typeof y === \"string\" ? (x < y ? -1 : x > y ? 1 : 0) : -1;\n  } else if (x === null) {\n    return y === void 0 ? -1 : y === null ? 0 : 1;\n  } else if (x === void 0) {\n    return y === void 0 ? 0 : 1;\n  } else {\n    return NaN;\n  }\n};\n\nStrings.hash = function (x: string | null | undefined): number {\n  if (typeof x === \"string\") {\n    return Murmur3.mash(Murmur3.mixString(0, x));\n  } else if (x === null) {\n    return 1;\n  } else if (x === void 0) {\n    return 0;\n  } else {\n    throw new TypeError(\"\" + x);\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities for comparing and hashing functions.\n */\nexport const Functions = {} as {\n  /**\n   * Returns the relative order of `x` with respect to `y`.  Returns `-1` if\n   * the hash code of function `x` is less than the hash code of function `y`;\n   * returns `1` if the hash code of function `x` is greater than the hash code\n   * of function `y`; and returns `0` if `x` and `y` are identical functions.\n   * If either `x` or `y` is `null` or `undefined`, then functions order before\n   * `null`, and `null` orders before `undefined`.\n   */\n  compare(x: Function | null | undefined, y: Function | null | undefined): number;\n\n  /**\n   * Returns a 32-bit hash value for a function.\n   */\n  hash(x: Function | null | undefined): number;\n};\n\nFunctions.compare = function (x: Function | null | undefined, y: Function | null | undefined): number {\n  if (typeof x === \"function\") {\n    if (typeof y === \"function\") {\n      const xh = Functions.hash(x);\n      const yh = Functions.hash(y);\n      return xh < yh ? -1 : xh > yh ? 1 : 0;\n    } else {\n      return -1;\n    }\n  } else if (x === null) {\n    return y === void 0 ? -1 : y === null ? 0 : 1;\n  } else if (x === void 0) {\n    return y === void 0 ? 0 : 1;\n  } else {\n    return NaN;\n  }\n};\n\nFunctions.hash = (function () {\n  let nextId = -1;\n  return function (x: Function | null | undefined): number {\n    if (typeof x === \"function\") {\n      let hashCode = (x as any)._hashCode as number | undefined;\n      if (hashCode === void 0) {\n        hashCode = ~~nextId;\n        nextId -= 1;\n        Object.defineProperty(x, \"_hashCode\", {\n          value: hashCode,\n          configurable: true,\n        });\n      }\n      return hashCode;\n    } else if (x === null) {\n      return 1;\n    } else if (x === void 0) {\n      return 0;\n    } else {\n      throw new TypeError(\"\" + x);\n    }\n  };\n})();\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"./Murmur3\";\n\n/**\n * Utilities for comparing and hashing constructors.\n */\nexport const Constructors = {} as {\n  /**\n   * Returns the relative order of `x` with respect to `y`.  Returns `-1` if\n   * the hash code of constructor `x` is less than the hash code of constructor\n   * `y`; returns `1` if the hash code of constructor `x` is greater than the\n   * hash code of constructor `y`; and returns `0` if `x` and `y` are identical\n   * constructors.  If either `x` or `y` is `null` or `undefined`, then\n   * constructors order before `null`, and `null` orders before `undefined`.\n   */\n  compare(x: Function | null | undefined, y: Function | null | undefined): number;\n\n  /**\n   * Returns a 32-bit hash value for a constructor.\n   */\n  hash(x: Function | null | undefined): number;\n};\n\nConstructors.compare = function (x: Function | null | undefined, y: Function | null | undefined): number {\n  if (typeof x === \"function\") {\n    if (typeof y === \"function\") {\n      const xh = Constructors.hash(x);\n      const yh = Constructors.hash(y);\n      return xh < yh ? -1 : xh > yh ? 1 : 0;\n    } else {\n      return -1;\n    }\n  } else if (x === null) {\n    return y === void 0 ? -1 : y === null ? 0 : 1;\n  } else if (x === void 0) {\n    return y === void 0 ? 0 : 1;\n  } else {\n    return NaN;\n  }\n};\n\nConstructors.hash = function (x: Function | null | undefined): number {\n  if (typeof x === \"function\") {\n    let hashCode = (x as any)._hashCode as number | undefined;\n    if (hashCode === void 0) {\n      hashCode = Murmur3.mash(Murmur3.mixString(0, x.name));\n      Object.defineProperty(x, \"_hashCode\", {\n        value: hashCode,\n        configurable: true,\n      });\n    }\n    return hashCode;\n  } else if (x === null) {\n    return 1;\n  } else if (x === void 0) {\n    return 0;\n  } else {\n    throw new TypeError(\"\" + x);\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"./Murmur3\";\nimport {Strings} from \"./Strings\";\nimport {Values} from \"./Values\";\n\n/**\n * Utilities for comparing and hashing structural objects.\n */\nexport const Objects = {} as {\n  /**\n   * Returns `true` if `x` and `y` are structurally equal objects; otherwise\n   * returns `x === y` if either `x` or `y` is not an object.\n   */\n  equal(x: object | null | undefined, y: object | null | undefined): boolean;\n\n  /**\n   * Returns `true` if `x` and `y` are structurally [[Equivalent.equivalentTo\n   * equivalent]] objects; otherwise returns `x === y` if either `x` or `y` is\n   * not an object.\n   */\n  equivalent(x: object | null | undefined, y: object | null | undefined, epsilon?: number): boolean;\n\n  /**\n   * Returns the relative order of `x` with respect to `y`.  Returns `-1` if\n   * the entries of object `x` order lexicographically before the entries of\n   * object `y`; returns `1` if the entries of object `x` order\n   * lexicographically after the entries of object `y`; and returns `0` if `x`\n   * and `y` are equal objects.  If either `x` or `y` is `null` or `undefined`,\n   * then objects order before `null`, and `null` orders before `undefined`.\n   */\n  compare(x: object | null | undefined, y: object | null | undefined): number;\n\n  /**\n   * Returns a 32-bit hash value for the entries of object `x`, if defined;\n   * otherwise returns `0` or `1` if `x` is `undefined` or `null`, respectively.\n   */\n  hash(x: object | null | undefined): number;\n};\n\nObjects.equal = function (x: object | null | undefined, y: object | null | undefined): boolean {\n  if (x === y) {\n    return true;\n  } else if (typeof x === \"object\" && x !== null && typeof y === \"object\" && y !== null) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    const n = xKeys.length;\n    if (n !== yKeys.length) {\n      return false;\n    }\n    for (let i = 0; i < n; i += 1) {\n      const key = xKeys[i]!;\n      if (key !== yKeys[i] || !Values.equal((x as any)[key], (y as any)[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\nObjects.equivalent = function (x: object | null | undefined, y: object | null | undefined, epsilon?: number): boolean {\n  if (x === y) {\n    return true;\n  } else if (typeof x === \"object\" && x !== null && typeof y === \"object\" && y !== null) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    const n = xKeys.length;\n    if (n !== yKeys.length) {\n      return false;\n    }\n    for (let i = 0; i < n; i += 1) {\n      const key = xKeys[i]!;\n      if (key !== yKeys[i] || !Values.equivalent((x as any)[key], (y as any)[key], epsilon)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\nObjects.compare = function (x: object | null | undefined, y: object | null | undefined): number {\n  if (typeof x === \"object\" && x !== null) {\n    if (typeof y === \"object\" && y !== null) {\n      if (x !== y) {\n        const xKeys = Object.keys(x);\n        const yKeys = Object.keys(y);\n        const p = xKeys.length;\n        const q = yKeys.length;\n        const n = Math.min(p, q);\n        let order = 0;\n        for (let i = 0; i < n && order === 0; i += 1) {\n          const xKey = xKeys[i]!;\n          const yKey = yKeys[i]!;\n          order = Strings.compare(xKey, yKey);\n          if (order === 0) {\n            order = Values.compare((x as any)[xKey], (y as any)[yKey]);\n          }\n        }\n        return order !== 0 ? order : p > q ? 1 : p < q ? -1 : 0;\n      } else {\n        return 0;\n      }\n    } else {\n      return -1;\n    }\n  } else if (x === null) {\n    return y === void 0 ? -1 : y === null ? 0 : 1;\n  } else if (x === void 0) {\n    return y === void 0 ? 0 : 1;\n  } else {\n    return NaN;\n  }\n};\n\nObjects.hash = function (x: object | null | undefined): number {\n  if (typeof x === \"object\" && x !== null) {\n    let hashValue = 0;\n    const keys = Object.keys(x);\n    for (let i = 0, n = keys.length; i < n; i += 1) {\n      const key = keys[i]!;\n      hashValue = Murmur3.mix(Murmur3.mix(hashValue, Strings.hash(key)), Values.hash((x as any)[key]));\n    }\n    return Murmur3.mash(hashValue);\n  } else if (x === null) {\n    return 1;\n  } else if (x === void 0) {\n    return 0;\n  } else {\n    throw new TypeError(\"\" + x);\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals} from \"../lang/Equals\";\nimport {HashCode} from \"../lang/HashCode\";\nimport {Equivalent} from \"../lang/Equivalent\";\nimport {Compare} from \"../lang/Compare\";\nimport {Numbers} from \"./Numbers\";\nimport {Strings} from \"./Strings\";\nimport {Functions} from \"./Functions\";\nimport {Arrays} from \"./Arrays\";\nimport {Objects} from \"./Objects\";\n\n/**\n * Utilities for comparing and hashing structural values.  A structural value\n * is typed by object structure, rather than by name.\n */\nexport const Values = {} as {\n  /**\n   * Returns `true` if `x` and `y` are structurally equal, otherwise returns `false`.\n   */\n  equal(x: unknown, y: unknown): boolean;\n\n  /**\n   * Returns a hash code for a structural value.\n   */\n  hash(x: unknown): number;\n\n  /**\n   * Returns `true` if `x` and `y` are structurally equivalent, otherwise returns `false`.\n   */\n  equivalent(x: unknown, y: unknown, epsilon?: number): boolean;\n\n  /**\n   * Returns `-1` if `x` orders before `y`; returns `1` if `x` orders after `y`;\n   * returns `0` if `x` and `y` are equivalent; and returns `NaN` if `x` is not\n   * comparable to `y`.\n   */\n  compare(x: unknown, y: unknown): number;\n};\n\nValues.equal = function (x: unknown, y: unknown): boolean {\n  if (x instanceof Date) {\n    x = x.getTime();\n  }\n  if (y instanceof Date) {\n    y = y.getTime();\n  }\n\n  if (x === y) {\n    return true;\n  } else if (typeof x === \"number\") {\n    if (typeof y === \"number\") {\n      return isNaN(x) && isNaN(y);\n    }\n  } else if (Equals.is(x)) {\n    return x.equals(y);\n  } else if (Array.isArray(x)) {\n    if (Array.isArray(y)) {\n      return Arrays.equal(x, y);\n    }\n  } else if (typeof x === \"object\" && x !== null) {\n    if (typeof y === \"object\" && y !== null) {\n      return Objects.equal(x, y);\n    }\n  }\n  return false;\n};\n\nValues.hash = function (x: unknown): number {\n  if (x === void 0) {\n    return 0;\n  } else if (x === null) {\n    return 1;\n  } else if (x === false) {\n    return 2;\n  } else if (x === true) {\n    return 3;\n  } else if (typeof x === \"number\") {\n    return Numbers.hash(x);\n  } else if (typeof x === \"string\") {\n    return Strings.hash(x);\n  } else if (HashCode.is(x)) {\n    return x.hashCode();\n  } else if (typeof x === \"function\") {\n    return Functions.hash(x);\n  } else if (Array.isArray(x)) {\n    return Arrays.hash(x);\n  } else if (typeof x === \"object\") {\n    return Objects.hash(x);\n  } else {\n    throw new TypeError(\"\" + x);\n  }\n};\n\nValues.equivalent = function (x: unknown, y: unknown, epsilon: number = Equivalent.Epsilon): boolean {\n  if (x instanceof Date) {\n    x = x.getTime();\n  }\n  if (y instanceof Date) {\n    y = y.getTime();\n  }\n\n  if (x === y) {\n    return true;\n  } else if (typeof x === \"number\") {\n    if (typeof y === \"number\") {\n      return isNaN(x) && isNaN(y) || Math.abs(y - x) < epsilon;\n    }\n  } else if (Equivalent.is(x)) {\n    return x.equivalentTo(y, epsilon);\n  } else if (Array.isArray(x)) {\n    if (Array.isArray(y)) {\n      return Arrays.equivalent(x, y, epsilon);\n    }\n  } else if (typeof x === \"object\" && x !== null) {\n    if (typeof y === \"object\" && y !== null) {\n      return Objects.equivalent(x, y, epsilon);\n    }\n  }\n  return false;\n};\n\nValues.compare = function (x: unknown, y: unknown): number {\n  if (x instanceof Date) {\n    x = x.getTime();\n  }\n  if (y instanceof Date) {\n    y = y.getTime();\n  }\n\n  if (x === void 0) {\n    if (y === void 0) {\n      return 0;\n    } else {\n      return 1;\n    }\n  } else if (x === null) {\n    if (y === void 0) {\n      return -1;\n    } else if (y === null) {\n      return 0;\n    } else {\n      return 1;\n    }\n  } else if (typeof x === \"boolean\") {\n    if (y === void 0 || y === null) {\n      return -1;\n    } else if (typeof y === \"boolean\") {\n      return x && !y ? -1 : !x && y ? 1 : 0;\n    } else {\n      return 1;\n    }\n  } else if (typeof x === \"number\") {\n    if (y === void 0 || y === null || typeof y === \"boolean\") {\n      return -1;\n    } else if (typeof y === \"number\") {\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    } else {\n      return 1;\n    }\n  } else if (typeof x === \"string\") {\n    if (y === void 0 || y === null || typeof y === \"boolean\" || typeof y === \"number\") {\n      return -1;\n    } else if (typeof y === \"string\") {\n      return x < y ? -1 : x > y ? 1 : 0;\n    } else {\n      return 1;\n    }\n  } else if (Compare.is(x)) {\n    return x.compareTo(y);\n  } else if (typeof x === \"function\") {\n    if (y === void 0 || y === null || typeof y === \"boolean\" || typeof y === \"number\" || typeof y === \"string\") {\n      return -1;\n    } else if (typeof y === \"function\") {\n      return Functions.compare(x, y);\n    } else {\n      return 1;\n    }\n  } else if (Array.isArray(x)) {\n    if (y === void 0 || y === null || typeof y === \"boolean\" || typeof y === \"number\" || typeof y === \"string\" || typeof y === \"function\") {\n      return -1;\n    } else if (Array.isArray(y)) {\n      return Arrays.compare(x, y);\n    } else {\n      return 1;\n    }\n  } else if (typeof x === \"object\") {\n    if (y === void 0 || y === null || typeof y === \"boolean\" || typeof y === \"number\" || typeof y === \"string\" || typeof y === \"function\" || Array.isArray(y)) {\n      return -1;\n    } else if (typeof y === \"object\") {\n      return Objects.compare(x, y);\n    } else {\n      return 1;\n    }\n  } else {\n    return NaN;\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"./Murmur3\";\nimport {Values} from \"./Values\";\n\n/**\n * Utilities for immutably updating, comparing, and hashing arrays.\n */\nexport const Arrays = {} as {\n  readonly empty: ReadonlyArray<never>;\n\n  /**\n   * Returns a copy of an array with the given element inserted, if the element\n   * is not already present in the arrary; otherwise returns the input array if\n   * it already containts the specified element.\n   */\n  inserted<T>(newElement: T, oldArray: ReadonlyArray<T> | null | undefined): ReadonlyArray<T>;\n\n  /**\n   * Returns a copy of an array with the given element removed; returns the\n   * input array if it does not contain the specified element.\n   */\n  removed<T>(oldElement: T, oldArray: ReadonlyArray<T> | null | undefined): ReadonlyArray<T>;\n\n  /**\n   * Returns `true` if `x` and `y` are structurally equal arrays; otherwise\n   * returns `x === y` if either `x` or `y` is not an array.\n   */\n  equal(x: ArrayLike<unknown> | null | undefined, y: ArrayLike<unknown> | null | undefined): boolean;\n\n  /**\n   * Returns `true` if `x` and `y` are structurally [[Equivalent.equivalentTo\n   * equivalent]] arrays; otherwise returns `x === y` if either `x` or `y` is\n   * not an array.\n   */\n  equivalent(x: ArrayLike<unknown> | null | undefined, y: ArrayLike<unknown> | null | undefined, epsilon?: number): boolean;\n\n  /**\n   * Returns the relative order of `x` with respect to `y`.  Returns `-1` if\n   * the elements of array `x` order lexicographically before the elements of\n   * array `y`; returns `1` if the elements of array `x` order lexicographically\n   * after the elements of array `y`; and returns `0` if `x` and `y` are equal\n   * arrays.  If either `x` or `y` is `null` or `undefined`, then arrays order\n   * before `null`, and `null` orders before `undefined`.\n   */\n  compare(x: ArrayLike<unknown> | null | undefined, y: ArrayLike<unknown> | null | undefined): number;\n\n  /**\n   * Returns a 32-bit hash value for the elements of array `x`, if defined;\n   * otherwise returns `0` or `1` if `x` is `undefined` or `null`, respectively.\n   */\n  hash(x: ArrayLike<unknown> | null | undefined): number;\n};\n\nObject.defineProperty(Arrays, \"empty\", {\n  value: Object.freeze([]),\n  enumerable: true,\n  configurable: true,\n});\n\nArrays.inserted = function <T>(newElement: T, oldArray: ReadonlyArray<T> | null | undefined): ReadonlyArray<T> {\n  const n = oldArray !== void 0 && oldArray !== null ? oldArray.length : 0;\n  const newArray = new Array<T>(n + 1);\n  for (let i = 0; i < n; i += 1) {\n    const element = oldArray![i]!;\n    if (element !== newElement) {\n      newArray[i] = element;\n    } else {\n      return oldArray!;\n    }\n  }\n  newArray[n] = newElement;\n  return newArray\n};\n\nArrays.removed = function <T>(oldElement: T, oldArray: ReadonlyArray<T> | null | undefined): ReadonlyArray<T> {\n  const n = oldArray !== void 0 && oldArray !== null ? oldArray.length : 0;\n  if (n === 0) {\n    return oldArray !== void 0 && oldArray !== null ? oldArray : Arrays.empty;\n  } else if (n === 1) {\n    return oldArray![0]! !== oldElement ? oldArray! : Arrays.empty;\n  } else {\n    const newArray = new Array<T>(n - 1);\n    let i = 0;\n    while (i < n) {\n      const element = oldArray![i]!;\n      if (element !== oldElement) {\n        newArray[i] = element;\n        i += 1;\n      } else {\n        i += 1;\n        while (i < n) {\n          newArray[i - 1] = oldArray![i]!;\n          i += 1\n        }\n        return newArray;\n      }\n    }\n    return oldArray!;\n  }\n};\n\nArrays.equal = function (x: ArrayLike<unknown> | null | undefined, y: ArrayLike<unknown> | null | undefined): boolean {\n  if (x === y) {\n    return true;\n  } else if (typeof x === \"object\" && x !== null && typeof y === \"object\" && y !== null) {\n    const n = x.length;\n    if (n !== y.length) {\n      return false;\n    }\n    for (let i = 0; i < n; i += 1) {\n      if (!Values.equal(x[i], y[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\nArrays.equivalent = function (x: ArrayLike<unknown> | null | undefined, y: ArrayLike<unknown> | null | undefined, epsilon?: number): boolean {\n  if (x === y) {\n    return true;\n  } else if (typeof x === \"object\" && x !== null && typeof y === \"object\" && y !== null) {\n    const n = x.length;\n    if (n !== y.length) {\n      return false;\n    }\n    for (let i = 0; i < n; i += 1) {\n      if (!Values.equivalent(x[i], y[i], epsilon)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\nArrays.compare = function (x: ArrayLike<unknown> | null | undefined, y: ArrayLike<unknown> | null | undefined): number {\n  if (typeof x === \"object\" && x !== null) {\n    if (typeof y === \"object\" && y !== null) {\n      if (x !== y) {\n        const p = x.length as number;\n        const q = y.length as number;\n        let order = 0;\n        for (let i = 0, n = Math.min(p, q); i < n && order === 0; i += 1) {\n          order = Values.compare(x[i], y[i]);\n        }\n        return order !== 0 ? order : p > q ? 1 : p < q ? -1 : 0;\n      } else {\n        return 0;\n      }\n    } else {\n      return -1;\n    }\n  } else if (x === null) {\n    return y === void 0 ? -1 : y === null ? 0 : 1;\n  } else if (x === void 0) {\n    return y === void 0 ? 0 : 1;\n  } else {\n    return NaN;\n  }\n};\n\nArrays.hash = function (x: ArrayLike<unknown> | null | undefined): number {\n  if (typeof x === \"object\" && x !== null) {\n    let hashValue = 0;\n    for (let i = 0, n = x.length; i < n; i += 1) {\n      hashValue = Murmur3.mix(hashValue, Values.hash(x[i]));\n    }\n    return Murmur3.mash(hashValue);\n  } else if (x === null) {\n    return 1;\n  } else if (x === void 0) {\n    return 0;\n  } else {\n    throw new TypeError(\"\" + x);\n  }\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"../lang/Lazy\";\nimport type {Iterator} from \"./Iterator\";\nimport {CursorEmpty} from \"../\"; // forward import\nimport {CursorUnary} from \"../\"; // forward import\nimport {CursorArray} from \"../\"; // forward import\n\nexport abstract class Cursor<T> implements Iterator<T> {\n  abstract isEmpty(): boolean;\n\n  abstract head(): T;\n\n  abstract step(): void;\n\n  abstract skip(count: number): void;\n\n  abstract hasNext(): boolean;\n\n  abstract nextIndex(): number;\n\n  abstract next(): {value?: T, done: boolean};\n\n  abstract hasPrevious(): boolean;\n\n  abstract previousIndex(): number;\n\n  abstract previous(): {value?: T, done: boolean};\n\n  set(newValue: T): void {\n    throw new Error(\"immutable\");\n  }\n\n  delete(): void {\n    throw new Error(\"immutable\");\n  }\n\n  @Lazy\n  static empty<T>(): Cursor<T> {\n    return new CursorEmpty();\n  }\n\n  static unary<T>(value: T): Cursor<T> {\n    return new CursorUnary<T>(value);\n  }\n\n  static array<T>(array: ReadonlyArray<T>, index?: number, limit?: number): Cursor<T> {\n    if (index === void 0) {\n      index = 0;\n    }\n    if (limit === void 0) {\n      limit = array.length;\n    }\n    return new CursorArray<T>(array, index, limit);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorEmpty<T> extends Cursor<T> {\n  override isEmpty(): boolean {\n    return true;\n  }\n\n  override head(): T {\n    throw new Error(\"empty\");\n  }\n\n  override step(): void {\n    throw new Error(\"empty\");\n  }\n\n  override skip(count: number): void {\n    // nop\n  }\n\n  override hasNext(): boolean {\n    return false;\n  }\n\n  override nextIndex(): number {\n    return 0;\n  }\n\n  override next(): {value?: T, done: boolean} {\n    return {done: true};\n  }\n\n  override hasPrevious(): boolean {\n    return false;\n  }\n\n  override previousIndex(): number {\n    return -1;\n  }\n\n  override previous(): {value?: T, done: boolean} {\n    return {done: true};\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorUnary<T> extends Cursor<T> {\n  /** @hidden */\n  readonly value!: T;\n  /** @hidden */\n  index!: number;\n\n  constructor(value: T) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: 0,\n      configurable: true,\n    });\n  }\n\n  override isEmpty(): boolean {\n    return this.index !== 0;\n  }\n\n  override head(): T {\n    if (this.index === 0) {\n      return this.value;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  override step(): void {\n    if (this.index === 0) {\n      Object.defineProperty(this, \"index\", {\n        value: 1,\n        configurable: true,\n      });\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  override skip(count: number): void {\n    this.index = Math.min(Math.max(0, this.index + count), 1);\n  }\n\n  override hasNext(): boolean {\n    return this.index === 0;\n  }\n\n  override nextIndex(): number {\n    return this.index;\n  }\n\n  override next(): {value?: T, done: boolean} {\n    if (this.index === 0) {\n      Object.defineProperty(this, \"index\", {\n        value: 1,\n        configurable: true,\n      });\n      return {value: this.value, done: true};\n    } else {\n      return {done: true};\n    }\n  }\n\n  override hasPrevious(): boolean {\n    return this.index === 1;\n  }\n\n  override previousIndex(): number {\n    return this.index - 1;\n  }\n\n  override previous(): {value?: T, done: boolean} {\n    if (this.index === 1) {\n      Object.defineProperty(this, \"index\", {\n        value: 0,\n        configurable: true,\n      });\n      return {value: this.value, done: true};\n    } else {\n      return {done: true};\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorArray<T> extends Cursor<T> {\n  /** @hidden */\n  readonly array!: ReadonlyArray<T>;\n  /** @hidden */\n  index!: number;\n  /** @hidden */\n  readonly limit!: number;\n\n  constructor(array: ReadonlyArray<T>, index: number, limit: number) {\n    super();\n    Object.defineProperty(this, \"array\", {\n      value: array,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"limit\", {\n      value: limit,\n    });\n  }\n\n  override isEmpty(): boolean {\n    return this.index >= this.limit;\n  }\n\n  override head(): T {\n    if (this.index < this.limit) {\n      return this.array[this.index]!;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  override step(): void {\n    const index = this.index;\n    if (index < this.limit) {\n      Object.defineProperty(this, \"index\", {\n        value: index + 1,\n        configurable: true,\n      });\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  override skip(count: number): void {\n    Object.defineProperty(this, \"index\", {\n      value: Math.min(this.index + count, this.limit),\n      configurable: true,\n    });\n  }\n\n  override hasNext(): boolean {\n    return this.index < this.limit;\n  }\n\n  override nextIndex(): number {\n    return this.index;\n  }\n\n  override next(): {value?: T, done: boolean} {\n    const index = this.index;\n    if (index < this.limit) {\n      Object.defineProperty(this, \"index\", {\n        value: index + 1,\n        configurable: true,\n      });\n      return {value: this.array[index]!, done: this.index === this.limit};\n    } else {\n      Object.defineProperty(this, \"index\", {\n        value: this.limit,\n        configurable: true,\n      });\n      return {done: true};\n    }\n  }\n\n  override hasPrevious(): boolean {\n    return this.index > 0;\n  }\n\n  override previousIndex(): number {\n    return this.index - 1;\n  }\n\n  override previous(): {value?: T, done: boolean} {\n    const index = this.index - 1;\n    if (index >= 0) {\n      Object.defineProperty(this, \"index\", {\n        value: index,\n        configurable: true,\n      });\n      return {value: this.array[index]!, done: index === 0};\n    } else {\n      Object.defineProperty(this, \"index\", {\n        value: 0,\n        configurable: true,\n      });\n      return {done: true};\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Exception thrown when an [[Assert]] fails.\n */\nexport class AssertException extends Error {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, AssertException.prototype);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values} from \"../runtime/Values\";\nimport {AssertException} from \"./AssertException\";\n\n/**\n * Callable assertion function.\n *\n * @throws [[AssertException]] if the assertion fails.\n */\nexport interface AssertFunction {\n  (condition: unknown, message?: string): void;\n}\n\n/**\n * Type that implements common assertion functions.\n */\nexport interface Assert {\n  /**\n   * Asserts that `condition` is truthy.\n   *\n   * @throws [[AssertException]] with `message` if `condition` is falsy.\n   */\n  ok(condition: unknown, message?: string): void;\n\n  /**\n   * Asserts that `condition` is falsy.\n   *\n   * @throws [[AssertException]] with `message` if `condition` is truthy.\n   */\n  notOk(condition: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is identical (`===`) to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is not identical (`!==`) to `rhs`.\n   */\n  identical(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is not identical (`!==`) to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is identical (`===`) to `rhs`.\n   */\n  notIdentical(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `object` has the prototype of `constructor` in its prototype chain.\n   *\n   * @throws [[AssertException]] with `message` if `object` does not have the prototype of `constructor` in its prototype chain.\n   */\n  instanceOf(object: unknown, constructor: Function, message?: string): void;\n\n  /**\n   * Asserts that `object` does not have the prototype of `constructor` in its prototype chain.\n   *\n   * @throws [[AssertException]] with `message` if `object` does have the prototype of `constructor` in its prototype chain.\n   */\n  notInstanceOf(object: unknown, constructor: Function, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is [[Values.equal structurally equal]] to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is not structurally equal to `rhs`.\n   */\n  equal(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is not [[Values.equal structurally equal]] to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is structurally equal to `rhs`.\n   */\n  notEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is [[Values.equivalent structurally equivalent]] to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is not structurally equivalent to `rhs`.\n   */\n  equivalent(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is not [[Values.equivalent structurally equivalent]] to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is structurally equivalent to `rhs`.\n   */\n  notEquivalent(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Values.compare structurally orders before]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before `rhs`.\n   */\n  compareLessThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Values.compare structurally order before]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before `rhs`.\n   */\n  compareNotLessThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Values.compare structurally orders before or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before or the same as `rhs`.\n   */\n  compareLessThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Values.compare structurally order before or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before or the same as `rhs`.\n   */\n  compareNotLessThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Values.compare structurally orders the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before or the same as `rhs`.\n   */\n  compareEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Values.compare structurally order the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before or the same as `rhs`.\n   */\n  compareNotEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Values.compare structurally orders after or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order after or the same as `rhs`.\n   */\n  compareGreaterThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Values.compare structurally order after or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order after or the same as `rhs`.\n   */\n  compareNotGreaterThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Values.compare structurally orders after]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order after `rhs`.\n   */\n  compareGreaterThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Values.compare structurally order after]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order after `rhs`.\n   */\n  compareNotGreaterThan(lhs: unknown, rhs: unknown, message?: string): void;\n}\n\n/**\n * General `Assert` implementation.  When called as a function, asserts that\n * `condition` is truthy.\n *\n * @throws [[AssertException]] with `message` if `condition` is falsy.\n */\nexport const assert = function (condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new AssertException(message);\n  }\n} as Assert & AssertFunction;\n\nassert.ok = function (condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notOk = function (condition: unknown, message?: string): void {\n  if (condition) {\n    throw new AssertException(message);\n  }\n};\n\nassert.equal = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!Values.equal(lhs, rhs)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Values.equal(lhs, rhs)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.identical = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (lhs !== rhs) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notIdentical = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (lhs === rhs) {\n    throw new AssertException(message);\n  }\n};\n\nassert.instanceOf = function (object: unknown, constructor: Function, message?: string): void {\n  if (!(object instanceof constructor)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notInstanceOf = function (object: unknown, constructor: Function, message?: string): void {\n  if (object instanceof constructor) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareLessThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Values.compare(lhs, rhs) < 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotLessThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Values.compare(lhs, rhs) < 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareLessThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Values.compare(lhs, rhs) <= 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotLessThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Values.compare(lhs, rhs) <= 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Values.compare(lhs, rhs) === 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Values.compare(lhs, rhs) === 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareGreaterThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Values.compare(lhs, rhs) >= 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotGreaterThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Values.compare(lhs, rhs) >= 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareGreaterThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Values.compare(lhs, rhs) > 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotGreaterThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Values.compare(lhs, rhs) > 0) {\n    throw new AssertException(message);\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyOutputSettings} from \"../output/OutputSettings\";\nimport {Output} from \"../output/Output\";\nimport type {Display} from \"./Display\";\nimport type {Debug} from \"./Debug\";\nimport {Unicode} from \"../unicode/Unicode\";\n\n/**\n * utility functions for formatting values.\n */\nexport const Format = {} as {\n  /**\n   * The operting system specific string used to separate lines of text.\n   */\n  readonly lineSeparator: string;\n\n  /**\n   * Writes the code points of the human-readable [[Display]] string for the\n   * given `object` to `output`.  Assumes `output` is a Unicode `Output` writer\n   * with sufficient capacity.  Delegates to [[Display.display]], if `object`\n   * implements `Display`; otherwise writes the result of `Object.toString`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full display string has been written.\n   */\n  display(object: unknown, output: Output): void;\n\n  /**\n   * Returns the human-readable [[Display]] string for the givem `object`,\n   * output using the given `settings`.  Delegates to [[Display.displa]],\n   * if `object` implements `Display`; otherwise returns the result of\n   * `Object.toString`.\n   */\n  display(object: unknown, settings?: AnyOutputSettings): string;\n\n  /**\n   * Writes the code points of the developer-readable [[Debug]] string for the\n   * given `object` to `output`.  Assumes `output` is a Unicode `Output` writer\n   * with sufficient capacity.  Delegates to [[Debug.debug]], if `object`\n   * implements `Debug`; writes a JavaScript string literal, if `object` is a\n   * `string`, and writes a JavaScript number literal, if `object` is a\n   * `number`; otherwise writes the result of `Object.toString`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full debug string has been written.\n   */\n  debug(object: unknown, output: Output): void;\n\n  /**\n   * Returns the developer-readable [[Debug]] string for the givem `object`,\n   * output using the given `settings`.  Delegates to [[Debug.debug]], if\n   * `object` implements `Debug`; returns a JavaScript string literal, if\n   * `object` is a `string`, and returns a JavaScript number literal, if\n   * `object` is a `number`; otherwise returns the result of `Object.toString`.\n   */\n  debug(object: unknown, settings?: AnyOutputSettings): string;\n\n  /**\n   * Writes the code points of the numeric string for the given `value`\n   * to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full numeric string has been written.\n   */\n  displayNumber(value: number, output: Output): void;\n\n  /**\n   * Writes the code points of the JavaScript numeric literal for the given\n   * `value` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full numeric literal has been written.\n   */\n  debugNumber(value: number, output: Output): void;\n\n  /**\n   * Writes the code points of the JavaScript character literal for the given\n   * `character` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full character literal has been written.\n   */\n  debugChar(character: number, output: Output): void;\n\n  /**\n   * Writes the code points of the JavaScript string literal for the given\n   * `string` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full string literal has been written.\n   */\n  debugString(string: string, output: Output): void;\n\n  /** @hidden */\n  encodeHex(x: number): number;\n\n  /**\n   * Returns a string representation of `value` scaled by its SI magnitude,\n   * keeping at most `precision` digits past the decimal place, appended with\n   * the appropriate SI prefix.\n   */\n  prefix(value: number, precision?: number): string;\n\n  decimal(value: number, precision?: number): string;\n\n  /** @hidden */\n  trimTrailingZeros(s: string): string;\n\n  /**\n   * Returns a string representation of the duration represented by the given\n   * number of milliseconds.\n   */\n  duration(millis: number, separator?: string): string;\n};\n\nObject.defineProperty(Format, \"lineSeparator\", {\n  get(): string {\n    let lineSeparator: string | undefined;\n    if (typeof global !== \"undefined\" && typeof global.require === \"function\") {\n      const os = global.require(\"os\");\n      if (typeof os === \"object\" && os !== null) {\n        lineSeparator = os.EOL;\n      }\n    }\n    if (lineSeparator === void 0) {\n      lineSeparator = \"\\n\";\n    }\n    Object.defineProperty(Format, \"lineSeparator\", {\n      value: lineSeparator,\n      enumerable: true,\n      configurable: true,\n    })\n    return lineSeparator;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nFormat.display = function (object: unknown, output?: Output | AnyOutputSettings): void | string {\n  const notOutput = !(output instanceof Output);\n  if (object === void 0) {\n    if (output === void 0) {\n      return \"undefined\";\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      output = output.write(\"undefined\");\n    }\n  } else if (object === null) {\n    if (output === void 0) {\n      return \"null\";\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      output = output.write(\"null\");\n    }\n  } else if (typeof object === \"number\") {\n    if (output === void 0) {\n      return \"\" + object;\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      Format.displayNumber(object, output);\n    }\n  } else if (typeof object === \"string\") {\n    if (output === void 0) {\n      return object;\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      output = output.write(object);\n    }\n  } else if (typeof (object as any).display === \"function\") {\n    if (!(output instanceof Output)) {\n      output = Unicode.stringOutput(output);\n    }\n    (object as Display).display(output);\n  } else {\n    if (output === void 0) {\n      return \"\" + object;\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      output = output.write(\"\" + object);\n    }\n  }\n  if (notOutput) {\n    return output.toString();\n  }\n} as typeof Format.display;\n\nFormat.debug = function (object: unknown, output?: Output | AnyOutputSettings): void | string {\n  const notOutput = !(output instanceof Output);\n  if (object === void 0) {\n    if (output === void 0) {\n      return \"undefined\";\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      output = output.write(\"undefined\");\n    }\n  } else if (object === null) {\n    if (output === void 0) {\n      return \"null\";\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      output = output.write(\"null\");\n    }\n  } else if (typeof object === \"number\") {\n    if (output === void 0) {\n      return \"\" + object;\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      Format.debugNumber(object, output);\n    }\n  } else if (typeof object === \"string\") {\n    if (!(output instanceof Output)) {\n      output = Unicode.stringOutput(output);\n    }\n    Format.debugString(object, output);\n  } else if (typeof (object as any).debug === \"function\") {\n    if (!(output instanceof Output)) {\n      output = Unicode.stringOutput(output);\n    }\n    (object as Debug).debug(output);\n  } else {\n    if (output === void 0) {\n      return \"\" + object;\n    } else {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      output = output.write(\"\" + object);\n    }\n  }\n  if (notOutput) {\n    return output.toString();\n  }\n} as typeof Format.debug;\n\nFormat.displayNumber = function (value: number, output: Output): void {\n  if (isFinite(value) && Math.floor(value) === value && Math.abs(value) < 2147483648) {\n    if (value < 0) {\n      output = output.write(45/*'-'*/);\n    }\n    if (value > -10 && value < 10) {\n      output = output.write(48/*'0'*/ + Math.abs(value));\n    } else {\n      const digits = new Array<number>(19);\n      let x = value;\n      let i = 18;\n      while (x !== 0) {\n        digits[i] = Math.abs((x % 10) | 0);\n        x = (x / 10) | 0;\n        i -= 1;\n      }\n      i += 1;\n      while (i < 19) {\n        output = output.write(48/*'0'*/ + digits[i]!);\n        i += 1;\n      }\n    }\n  } else {\n    output = output.write(Format.decimal(value, output.settings.precision));\n  }\n};\n\nFormat.debugNumber = function (value: number, output: Output): void {\n  Format.displayNumber(value, output);\n};\n\nFormat.debugChar = function (character: number, output: Output): void {\n  output = output.write(39/*'\\''*/);\n  switch (character) {\n      case 8/*'\\b'*/: output.write(92/*'\\\\'*/).write(98/*'b'*/); break;\n      case 9/*'\\t'*/: output.write(92/*'\\\\'*/).write(116/*'t'*/); break;\n      case 10/*'\\n'*/: output.write(92/*'\\\\'*/).write(110/*'n'*/); break;\n      case 12/*'\\f'*/: output.write(92/*'\\\\'*/).write(102/*'f'*/); break;\n      case 13/*'\\r'*/: output.write(92/*'\\\\'*/).write(114/*'r'*/); break;\n      case 34/*'\\\"'*/: output.write(92/*'\\\\'*/).write(34/*'\\\"'*/); break;\n      case 39/*'\\\"'*/: output.write(92/*'\\\\'*/).write(39/*'\\''*/); break;\n      case 92/*'\\\\'*/: output.write(92/*'\\\\'*/).write(92/*'\\\\'*/); break;\n    default:\n      if (character >= 0x0000 && character <= 0x001f\n          || character >= 0x007f && character <= 0x009f) {\n        output = output.write(92/*'\\\\'*/).write(117/*'u'*/)\n          .write(Format.encodeHex(character >>> 12 & 0xf))\n          .write(Format.encodeHex(character >>>  8 & 0xf))\n          .write(Format.encodeHex(character >>>  4 & 0xf))\n          .write(Format.encodeHex(character        & 0xf));\n      } else {\n        output = output.write(character);\n      }\n  }\n  output = output.write(39/*'\\''*/);\n};\n\nFormat.debugString = function (string: string, output: Output): void {\n  output = output.write(34/*'\\\"'*/);\n  let input = Unicode.stringInput(string);\n  while (input.isCont()) {\n    const c = input.head();\n    switch (c) {\n      case 8/*'\\b'*/: output.write(92/*'\\\\'*/).write(98/*'b'*/); break;\n      case 9/*'\\t'*/: output.write(92/*'\\\\'*/).write(116/*'t'*/); break;\n      case 10/*'\\n'*/: output.write(92/*'\\\\'*/).write(110/*'n'*/); break;\n      case 12/*'\\f'*/: output.write(92/*'\\\\'*/).write(102/*'f'*/); break;\n      case 13/*'\\r'*/: output.write(92/*'\\\\'*/).write(114/*'r'*/); break;\n      case 34/*'\\\"'*/: output.write(92/*'\\\\'*/).write(34/*'\\\"'*/); break;\n      case 92/*'\\\\'*/: output.write(92/*'\\\\'*/).write(92/*'\\\\'*/); break;\n      default:\n        if (c >= 0x0000 && c <= 0x001f || c >= 0x007f && c <= 0x009f) {\n          output = output.write(92/*'\\\\'*/).write(117/*'u'*/)\n            .write(Format.encodeHex(c >>> 12 & 0xf))\n            .write(Format.encodeHex(c >>>  8 & 0xf))\n            .write(Format.encodeHex(c >>>  4 & 0xf))\n            .write(Format.encodeHex(c        & 0xf));\n        } else {\n          output = output.write(c);\n        }\n    }\n    input = input.step();\n  }\n  output = output.write(34/*'\\\"'*/);\n};\n\nFormat.encodeHex = function (x: number): number {\n  if (x < 10) {\n    return 48/*'0'*/ + x;\n  } else {\n    return 65/*'A'*/ + (x - 10);\n  }\n};\n\nFormat.prefix = (function () {\n  const prefixes: ReadonlyArray<string> = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\",\" Z\", \"Y\"];\n  return function (value: number, precision: number = 1): string {\n    if (isFinite(value)) {\n      const exponential = Math.abs(value).toExponential();\n      const exponentIndex = exponential.indexOf(\"e\");\n      const exponent = exponentIndex >= 0 ? +exponential.slice(exponentIndex + 1) : NaN;\n      const power = Math.min(Math.max(-8, Math.floor(exponent / 3)), 8) * 3;\n      const scaled = Math.pow(10, -power) * value;\n      let s = Format.trimTrailingZeros(Math.abs(scaled).toFixed(precision));\n      if (scaled < 0 && +s !== 0) {\n        s = \"-\" + s;\n      }\n      s += prefixes[8 + power / 3];\n      return s;\n    } else {\n      return \"\" + value;\n    }\n  }\n})();\n\nFormat.decimal = function (value: number, precision: number = -1): string {\n  if (precision >= 0) {\n    let s = Format.trimTrailingZeros(Math.abs(value).toFixed(precision));\n    if (value < 0 && +s !== 0) {\n      s = \"-\" + s;\n    }\n    return s;\n  } else {\n    return \"\" + value;\n  }\n};\n\nFormat.trimTrailingZeros = function (s: string): string {\n  let i0 = -1;\n  let i1: number | undefined;\n  for (let i = 1, n = s.length; i < n; i += 1) {\n    const c = s.charCodeAt(i);\n    if (c === 46/*'.'*/) {\n      i0 = i; // candidate start of trailing zeros\n      i1 = i; // candidate end of trailing zeros\n    } else if (c === 48/*'0'*/) {\n      if (i0 === 0) { // if after decimal\n        i0 = i; // new candidate start of trailing zeros\n      }\n      i1 = i; // new candidate end of trailing zeros\n    } else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n      if (i0 > 0) { // if non-zero digit after decimal\n        i0 = 0; // no candidate start of trailing zeros\n      }\n    } else if (i0 > 0) { // if non-numeric character after decimal\n      break; // accept current range of trailing zeros\n    }\n  }\n  if (i0 > 0) {\n    s = s.slice(0, i0) + s.slice(i1! + 1); // cut out trailing zeros\n  }\n  return s;\n};\n\nFormat.duration = function (millis: number, separator: string = \" \"): string {\n  if (isFinite(millis)) {\n    const SECOND = 1000;\n    const MINUTE = 60 * SECOND;\n    const HOUR = 60 * MINUTE;\n    const DAY = 24 * HOUR;\n    const WEEK = 7 * DAY;\n    let weeks: number | undefined;\n    if (millis > WEEK) {\n      weeks = Math.floor(millis / WEEK);\n      millis %= WEEK;\n    }\n    let days: number | undefined;\n    if (millis > DAY) {\n      days = Math.floor(millis / DAY);\n      millis %= DAY;\n    }\n    let hours: number | undefined;\n    if (millis > HOUR) {\n      hours = Math.floor(millis / HOUR);\n      millis %= HOUR;\n    }\n    let minutes: number | undefined;\n    if (millis > MINUTE) {\n      minutes = Math.floor(millis / MINUTE);\n      millis %= MINUTE;\n    }\n    let seconds: number | undefined;\n    if (millis > SECOND) {\n      seconds = Math.floor(millis / SECOND);\n      millis %= SECOND;\n    }\n    let s = \"\";\n    if (weeks !== void 0) {\n      s += weeks + \"w\";\n    }\n    if (days !== void 0) {\n      s += (s.length !== 0 ? separator : \"\") + days + \"d\";\n    }\n    if (hours !== void 0) {\n      s += (s.length !== 0 ? separator : \"\") + hours + \"h\";\n    }\n    if (minutes !== void 0) {\n      s += (s.length !== 0 ? separator : \"\") + minutes + \"m\";\n    }\n    if (seconds !== void 0 || millis === 0) {\n      s += (s.length !== 0 ? separator : \"\") + (seconds !== void 0 ? seconds : 0) + \"s\";\n    }\n    if (millis !== 0 && s.length === 0) {\n      s += millis + \"ms\";\n    }\n    return s;\n  } else {\n    return \"\" + millis;\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"../runtime/Murmur3\";\nimport type {HashCode} from \"../lang/HashCode\";\nimport type {Compare} from \"../lang/Compare\";\nimport {Numbers} from \"../runtime/Numbers\";\nimport {Strings} from \"../runtime/Strings\";\nimport {Constructors} from \"../runtime/Constructors\";\n\n/**\n * Level of importance.  Used for log levels and diagnostic classifications.\n */\nexport class Severity implements HashCode, Compare {\n  private constructor(level: number, label: string) {\n    Object.defineProperty(this, \"level\", {\n      value: level,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"label\", {\n      value: label,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /**\n   * The integer level of importance of this `Severity`, with higher  levels\n   * signifying greater importance.  An integer between `0` and `7`, inclusive.\n   * One of `TRACE_LEVEL`, `DEBUG_LEVEL`, `INFO_LEVEL`, `NOTE_LEVEL`,\n   * `WARNING_LEVEL`, `ERROR_LEVEL`, `ALERT_LEVEL`, `FATAL_LEVEL`.\n   */\n  readonly level!: number;\n\n  /**\n   * A descriptive label for this `Severity`.\n   */\n  readonly label!: string;\n\n  /**\n   * Returns `true` if this `Severity` has `TRACE_LEVEL` of importance.\n   */\n  isTrace(): boolean {\n    return this.level === Severity.TRACE_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `DEBUG_LEVEL` of importance.\n   */\n  isDebug(): boolean {\n    return this.level === Severity.DEBUG_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `INFO_LEVEL` of importance.\n   */\n  isInfo(): boolean {\n    return this.level === Severity.INFO_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `NOTE_LEVEL` of importance.\n   */\n  isNote(): boolean {\n    return this.level === Severity.NOTE_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `WARNING_LEVEL` of importance.\n   */\n  isWarning(): boolean {\n    return this.level === Severity.WARNING_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `ERROR_LEVEL` of importance.\n   */\n  isError(): boolean {\n    return this.level === Severity.ERROR_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `ALERT_LEVEL` of importance.\n   */\n  isAlert(): boolean {\n    return this.level === Severity.ALERT_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `FATAL_LEVEL` of importance.\n   */\n  isFatal(): boolean {\n    return this.level === Severity.FATAL_LEVEL;\n  }\n\n  compareTo(that: unknown): number {\n    if (this === that) {\n      return 0;\n    } else if (that instanceof Severity) {\n      if (this.level < that.level) {\n        return -1;\n      } else if (this.level > that.level) {\n        return 1;\n      } else {\n        return this.label.localeCompare(that.label);\n      }\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Severity) {\n      return this.level === that.level && this.label === that.label;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Severity),\n        Numbers.hash(this.level)), Strings.hash(this.label)));\n  }\n\n  toString(): string {\n    return this.label;\n  }\n\n  static readonly TRACE_LEVEL: number = 0;\n  static readonly DEBUG_LEVEL: number = 1;\n  static readonly INFO_LEVEL: number = 2;\n  static readonly NOTE_LEVEL: number = 3;\n  static readonly WARNING_LEVEL: number = 4;\n  static readonly ERROR_LEVEL: number = 5;\n  static readonly ALERT_LEVEL: number = 6;\n  static readonly FATAL_LEVEL: number = 7;\n\n  private static _trace?: Severity;\n  private static _debug?: Severity;\n  private static _info?: Severity;\n  private static _note?: Severity;\n  private static _warning?: Severity;\n  private static _error?: Severity;\n  private static _alert?: Severity;\n  private static _fatal?: Severity;\n\n  /**\n   * Returns a `Severity` with the given importance `level`, and optional\n   * descriptive `label`.\n   *\n   * @throws `Error` if `level` is not a valid level of importance.\n   */\n  static create(level: number, label?: string): Severity {\n    switch (level) {\n      case Severity.TRACE_LEVEL: return Severity.trace(label);\n      case Severity.DEBUG_LEVEL: return Severity.debug(label);\n      case Severity.INFO_LEVEL: return Severity.info(label);\n      case Severity.NOTE_LEVEL: return Severity.note(label);\n      case Severity.WARNING_LEVEL: return Severity.warning(label);\n      case Severity.ERROR_LEVEL: return Severity.error(label);\n      case Severity.ALERT_LEVEL: return Severity.alert(label);\n      case Severity.FATAL_LEVEL: return Severity.fatal(label);\n      default: throw new Error(\"\" + level);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `TRACE_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static trace(label: string = \"trace\"): Severity {\n    if (label === \"trace\") {\n      if (Severity._trace === void 0) {\n        Severity._trace = new Severity(Severity.TRACE_LEVEL, label);\n      }\n      return Severity._trace;\n    } else {\n      return new Severity(Severity.TRACE_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `DEBUG_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static debug(label: string = \"debug\"): Severity {\n    if (label === \"debug\") {\n      if (Severity._debug === void 0) {\n        Severity._debug = new Severity(Severity.DEBUG_LEVEL, label);\n      }\n      return Severity._debug;\n    } else {\n      return new Severity(Severity.DEBUG_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `INFO_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static info(label: string = \"info\"): Severity {\n    if (label === \"info\") {\n      if (Severity._info === void 0) {\n        Severity._info = new Severity(Severity.INFO_LEVEL, label);\n      }\n      return Severity._info;\n    } else {\n      return new Severity(Severity.INFO_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `NOTE_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static note(label: string = \"note\"): Severity {\n    if (label === \"note\") {\n      if (Severity._note === void 0) {\n        Severity._note = new Severity(Severity.NOTE_LEVEL, label);\n      }\n      return Severity._note;\n    } else {\n      return new Severity(Severity.NOTE_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `WARNING_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static warning(label: string = \"warning\"): Severity {\n    if (label === \"warning\") {\n      if (Severity._warning === void 0) {\n        Severity._warning = new Severity(Severity.WARNING_LEVEL, label);\n      }\n      return Severity._warning;\n    } else {\n      return new Severity(Severity.WARNING_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `ERROR_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static error(label: string = \"error\"): Severity {\n    if (label === \"error\") {\n      if (Severity._error === void 0) {\n        Severity._error = new Severity(Severity.ERROR_LEVEL, label);\n      }\n      return Severity._error;\n    } else {\n      return new Severity(Severity.ERROR_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `ALERT_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static alert(label: string = \"alert\"): Severity {\n    if (label === \"alert\") {\n      if (Severity._alert === void 0) {\n        Severity._alert = new Severity(Severity.ALERT_LEVEL, label);\n      }\n      return Severity._alert;\n    } else {\n      return new Severity(Severity.ALERT_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `FATAL_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static fatal(label: string = \"fatal\"): Severity {\n    if (label === \"fatal\") {\n      if (Severity._fatal === void 0) {\n        Severity._fatal = new Severity(Severity.FATAL_LEVEL, label);\n      }\n      return Severity._fatal;\n    } else {\n      return new Severity(Severity.FATAL_LEVEL, label);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values} from \"../runtime/Values\";\n\n/**\n * A hashed generational cache map discards the least recently used value\n * with the worst hit rate per hash bucket.  HashGenCacheMap is a concurrent\n * and lock-free LRFU cache, with O(1) access time.\n *\n * Maintaining four \"generations\" of cached values per hash bucket, the cache\n * discards from the younger generations based on least recent usage, and\n * promotes younger generations to older generations based on most frequent\n * usage.  Cache misses count as negative usage of the older generations,\n * biasing the cache against least recently used values with poor hit rates.\n */\nexport class HashGenCacheMap<K, V> {\n  /** @hidden */\n  readonly buckets: Array<HashGenCacheMapBucket<K, V> | undefined>;\n  /** @hidden */\n  gen4Hits: number;\n  /** @hidden */\n  gen3Hits: number;\n  /** @hidden */\n  gen2Hits: number;\n  /** @hidden */\n  gen1Hits: number;\n  /** @hidden */\n  misses: number;\n\n  constructor(size: number) {\n    this.buckets = new Array(size);\n    this.gen4Hits = 0;\n    this.gen3Hits = 0;\n    this.gen2Hits = 0;\n    this.gen1Hits = 0;\n    this.misses = 0;\n  }\n\n  get(key: K): V | undefined {\n    if (this.buckets.length === 0) {\n      return void 0;\n    }\n    const index = Math.abs(Values.hash(key)) % this.buckets.length;\n    const bucket = this.buckets[index];\n    if (bucket === void 0) {\n      return void 0;\n    }\n\n    const gen4Key = bucket.gen4Key;\n    if (gen4Key !== void 0 && Values.equal(key, gen4Key)) {\n      const gen4Val = bucket.gen4Val;\n      if (gen4Val !== void 0) {\n        this.gen4Hits += 1;\n        bucket.gen4Weight++;\n        return gen4Val;\n      } else {\n        bucket.gen4Key = void 0;\n      }\n    }\n\n    const gen3Key = bucket.gen3Key;\n    if (gen3Key !== void 0 && Values.equal(key, gen3Key)) {\n      const gen3Val = bucket.gen3Val;\n      if (gen3Val !== void 0) {\n        this.gen3Hits += 1;\n        if (bucket.gen3Weight++ > bucket.gen4Weight) {\n          this.buckets[index] = new HashGenCacheMapBucket(\n              bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n              bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n              bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n              bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight);\n        }\n        return gen3Val;\n      } else {\n        bucket.gen3Key = void 0;\n      }\n    }\n\n    const gen2Key = bucket.gen2Key;\n    if (gen2Key !== void 0 && Values.equal(key, gen2Key)) {\n      const gen2Val = bucket.gen2Val;\n      if (gen2Val !== void 0) {\n        this.gen2Hits += 1;\n        if (bucket.gen2Weight++ > bucket.gen3Weight) {\n          this.buckets[index] = new HashGenCacheMapBucket(\n              bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n              bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n              bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n              bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight);\n        }\n        return gen2Val;\n      } else {\n        bucket.gen2Key = void 0;\n      }\n    }\n\n    const gen1Key = bucket.gen1Key;\n    if (gen1Key !== void 0 && Values.equal(key, gen1Key)) {\n      const gen1Val = bucket.gen1Val;\n      if (gen1Val !== void 0) {\n        this.gen1Hits += 1;\n        if (bucket.gen1Weight++ > bucket.gen2Weight) {\n          this.buckets[index] = new HashGenCacheMapBucket(\n              bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n              bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n              bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n              bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight);\n        }\n        return gen1Val;\n      } else {\n        bucket.gen1Key = void 0;\n      }\n    }\n\n    this.misses += 1;\n    return void 0;\n  }\n\n  put(key: K, value: V): V {\n    if (this.buckets.length === 0) {\n      return value;\n    }\n    const index = Math.abs(Values.hash(key)) % this.buckets.length;\n    const bucket = this.buckets[index] || new HashGenCacheMapBucket();\n\n    let gen4Key = bucket.gen4Key;\n    if (gen4Key !== void 0 && Values.equal(key, gen4Key)) {\n      const gen4Val = bucket.gen4Val;\n      if (gen4Val !== void 0) {\n        this.gen4Hits += 1;\n        bucket.gen4Weight++;\n        return gen4Val;\n      } else {\n        bucket.gen4Key = void 0;\n        gen4Key = void 0;\n      }\n    }\n\n    let gen3Key = bucket.gen3Key;\n    if (gen3Key !== void 0 && Values.equal(key, gen3Key)) {\n      const gen3Val = bucket.gen3Val;\n      if (gen3Val !== void 0) {\n        this.gen3Hits += 1;\n        if (bucket.gen3Weight++ > bucket.gen4Weight) {\n          this.buckets[index] = new HashGenCacheMapBucket(\n              bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n              bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n              bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n              bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight);\n        }\n        return gen3Val;\n      } else {\n        bucket.gen3Key = void 0;\n        gen3Key = void 0;\n      }\n    }\n\n    let gen2Key = bucket.gen2Key;\n    if (gen2Key !== void 0 && Values.equal(key, gen2Key)) {\n      const gen2Val = bucket.gen2Val;\n      if (gen2Val !== void 0) {\n        this.gen2Hits += 1;\n        if (bucket.gen2Weight++ > bucket.gen3Weight) {\n          this.buckets[index] = new HashGenCacheMapBucket(\n              bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n              bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n              bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n              bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight);\n        }\n        return gen2Val;\n      } else {\n        bucket.gen2Key = void 0;\n        gen2Key = void 0;\n      }\n    }\n\n    let gen1Key = bucket.gen1Key;\n    if (gen1Key !== void 0 && Values.equal(key, gen1Key)) {\n      const gen1Val = bucket.gen1Val;\n      if (gen1Val !== void 0) {\n        this.gen1Hits += 1;\n        if (bucket.gen1Weight++ > bucket.gen2Weight) {\n          this.buckets[index] = new HashGenCacheMapBucket(\n              bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n              bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n              bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n              bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight);\n        }\n        return gen1Val;\n      } else {\n        bucket.gen1Key = void 0;\n        gen1Key = void 0;\n      }\n    }\n\n    this.misses += 1;\n    if (gen4Key === void 0) {\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n          bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n          key, value, 1);\n    } else if (gen3Key === void 0) {\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n          bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n          key, value, 1);\n    } else if (gen2Key === void 0) {\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n          key, value, 1);\n    } else if (gen1Key === void 0) {\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n          key, value, 1);\n    } else {\n      // Penalize older gens for thrash. Promote gen1 to prevent nacent gens\n      // from flip-flopping. If sacrificed gen2 was worth keeping, it likely\n      // would have already been promoted.\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight - 1,\n          bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight - 1,\n          bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n          key, value, 1);\n    }\n\n    return value;\n  }\n\n  remove(key: K): V | undefined {\n    if (this.buckets.length === 0) {\n      return void 0;\n    }\n    const index = Math.abs(Values.hash(key)) % this.buckets.length;\n    const bucket = this.buckets[index];\n    if (bucket === void 0) {\n      return void 0;\n    }\n\n    const gen4Key = bucket.gen4Key;\n    if (gen4Key !== void 0 && Values.equal(key, gen4Key)) {\n      const gen4Val = bucket.gen4Val;\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n          bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n          void 0, void 0, 0);\n      return gen4Val;\n    }\n\n    const gen3Key = bucket.gen3Key;\n    if (gen3Key !== void 0 && Values.equal(key, gen3Key)) {\n      const gen3Val = bucket.gen3Val;\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n          bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n          void 0, void 0, 0);\n      return gen3Val;\n    }\n\n    const gen2Key = bucket.gen2Key;\n    if (gen2Key !== void 0 && Values.equal(key, gen2Key)) {\n      const gen2Val = bucket.gen2Val;\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen1Key, bucket.gen1Val, bucket.gen1Weight,\n          void 0, void 0, 0);\n      return gen2Val;\n    }\n\n    const gen1Key = bucket.gen1Key;\n    if (gen1Key !== void 0 && Values.equal(key, gen1Key)) {\n      const gen1Val = bucket.gen1Val;\n      this.buckets[index] = new HashGenCacheMapBucket(\n          bucket.gen4Key, bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen3Key, bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen2Key, bucket.gen2Val, bucket.gen2Weight,\n          void 0, void 0, 0);\n      return gen1Val;\n    }\n\n    return void 0;\n  }\n\n  clear(): void {\n    for (let i = 0; i < this.buckets.length; i += 1) {\n      this.buckets[i] = void 0;\n    }\n  }\n\n  /** @hidden */\n  hits(): number {\n    return this.gen4Hits + this.gen3Hits + this.gen2Hits + this.gen1Hits;\n  }\n\n  hitRatio(): number {\n    const hits = this.hits();\n    return hits / (hits + this.misses);\n  }\n}\n\n/** @hidden */\nexport class HashGenCacheMapBucket<K, V> {\n  /** @hidden */\n  gen4Key: K | undefined;\n  /** @hidden */\n  gen4Val: V | undefined;\n  /** @hidden */\n  gen4Weight: number;\n  /** @hidden */\n  gen3Key: K | undefined;\n  /** @hidden */\n  gen3Val: V | undefined;\n  /** @hidden */\n  gen3Weight: number;\n  /** @hidden */\n  gen2Key: K | undefined;\n  /** @hidden */\n  gen2Val: V | undefined;\n  /** @hidden */\n  gen2Weight: number;\n  /** @hidden */\n  gen1Key: K | undefined;\n  /** @hidden */\n  gen1Val: V | undefined;\n  /** @hidden */\n  gen1Weight: number;\n\n  constructor(gen4Key?: K, gen4Val?: V, gen4Weight: number = 0,\n              gen3Key?: K, gen3Val?: V, gen3Weight: number = 0,\n              gen2Key?: K, gen2Val?: V, gen2Weight: number = 0,\n              gen1Key?: K, gen1Val?: V, gen1Weight: number = 0) {\n    this.gen4Key = gen4Key;\n    this.gen4Val = gen4Val;\n    this.gen4Weight = gen4Weight;\n    this.gen3Key = gen3Key;\n    this.gen3Val = gen3Val;\n    this.gen3Weight = gen3Weight;\n    this.gen2Key = gen2Key;\n    this.gen2Val = gen2Val;\n    this.gen2Weight = gen2Weight;\n    this.gen1Key = gen1Key;\n    this.gen1Val = gen1Val;\n    this.gen1Weight = gen1Weight;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values} from \"../runtime/Values\";\n\n/**\n * A hashed generational cache set discards the least recently used value\n * with the worst hit rate per hash bucket.  HashGenCacheSet is a concurrent\n * and lock-free LRFU cache, with O(1) access time.\n *\n * Maintaining four \"generations\" of cached values per hash bucket, the cache\n * discards from the younger generations based on least recent usage, and\n * promotes younger generations to older generations based on most frequent\n * usage.  Cache misses count as negative usage of the older generations,\n * biasing the cache against least recently used values with poor hit rates.\n *\n * The cache soft references the older generations, and weak references the\n * younger generations; the garbage collector can reclaim the entire cache,\n * but will preferentially wipe the younger cache generations before the older\n * cache generations.\n */\nexport class HashGenCacheSet<T> {\n  readonly buckets: Array<HashGenCacheSetBucket<T> | undefined>;\n  gen4Hits: number;\n  gen3Hits: number;\n  gen2Hits: number;\n  gen1Hits: number;\n  misses: number;\n\n  constructor(size: number) {\n    this.buckets = new Array(size);\n    this.gen4Hits = 0;\n    this.gen3Hits = 0;\n    this.gen2Hits = 0;\n    this.gen1Hits = 0;\n    this.misses = 0;\n  }\n\n  put(value: T): T {\n    if (this.buckets.length === 0) {\n      return value;\n    }\n    const index = Math.abs(Values.hash(value)) % this.buckets.length;\n    const bucket = this.buckets[index] || new HashGenCacheSetBucket<T>();\n\n    const gen4Val = bucket.gen4Val;\n    if (gen4Val !== void 0 && Values.equal(value, gen4Val)) {\n      this.gen4Hits += 1;\n      bucket.gen4Weight++;\n      return gen4Val;\n    }\n\n    const gen3Val = bucket.gen3Val;\n    if (gen3Val !== void 0 && Values.equal(value, gen3Val)) {\n      this.gen3Hits += 1;\n      if (bucket.gen3Weight++ > bucket.gen4Weight) {\n        this.buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket.gen3Val, bucket.gen3Weight,\n            bucket.gen4Val, bucket.gen4Weight,\n            bucket.gen2Val, bucket.gen2Weight,\n            bucket.gen1Val, bucket.gen1Weight);\n      }\n      return gen3Val;\n    }\n\n    const gen2Val = bucket.gen2Val;\n    if (gen2Val !== void 0 && Values.equal(value, gen2Val)) {\n      this.gen2Hits += 1;\n      if (bucket.gen2Weight++ > bucket.gen3Weight) {\n        this.buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket.gen4Val, bucket.gen4Weight,\n            bucket.gen2Val, bucket.gen2Weight,\n            bucket.gen3Val, bucket.gen3Weight,\n            bucket.gen1Val, bucket.gen1Weight);\n      }\n      return gen2Val;\n    }\n\n    const gen1Val = bucket.gen1Val;\n    if (gen1Val !== void 0 && Values.equal(value, gen1Val)) {\n      this.gen1Hits += 1;\n      if (bucket.gen1Weight++ > bucket.gen2Weight) {\n        this.buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket.gen4Val, bucket.gen4Weight,\n            bucket.gen3Val, bucket.gen3Weight,\n            bucket.gen1Val, bucket.gen1Weight,\n            bucket.gen2Val, bucket.gen2Weight);\n      }\n      return gen1Val;\n    }\n\n    this.misses += 1;\n    if (gen4Val === void 0) {\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen2Val, bucket.gen2Weight,\n          bucket.gen1Val, bucket.gen1Weight,\n          value, 1);\n    } else if (gen3Val === void 0) {\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen2Val, bucket.gen2Weight,\n          bucket.gen1Val, bucket.gen1Weight,\n          value, 1);\n    } else if (gen2Val === void 0) {\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen1Val, bucket.gen1Weight,\n          value, 1);\n    } else if (gen1Val === void 0) {\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen2Val, bucket.gen2Weight,\n          value, 1);\n    } else {\n      // Penalize older gens for thrash. Promote gen1 to prevent nacent gens\n      // from flip-flopping. If sacrificed gen2 was worth keeping, it likely\n      // would have already been promoted.\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen4Val, bucket.gen4Weight - 1,\n          bucket.gen3Val, bucket.gen3Weight - 1,\n          bucket.gen1Val, bucket.gen1Weight,\n          value, 1);\n    }\n\n    return value;\n  }\n\n  remove(value: T): boolean {\n    if (this.buckets.length === 0) {\n      return false;\n    }\n    const index = Math.abs(Values.hash(value)) % this.buckets.length;\n    const bucket = this.buckets[index];\n    if (bucket === void 0) {\n      return false;\n    }\n\n    const gen4Val = bucket.gen4Val;\n    if (gen4Val !== void 0 && Values.equal(value, gen4Val)) {\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen2Val, bucket.gen2Weight,\n          bucket.gen1Val, bucket.gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen3Val = bucket.gen3Val;\n    if (gen3Val !== void 0 && Values.equal(value, gen3Val)) {\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen2Val, bucket.gen2Weight,\n          bucket.gen1Val, bucket.gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen2Val = bucket.gen2Val;\n    if (gen2Val !== void 0 && Values.equal(value, gen2Val)) {\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen1Val, bucket.gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen1Val = bucket.gen1Val;\n    if (gen1Val !== void 0 && Values.equal(value, gen1Val)) {\n      this.buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket.gen4Val, bucket.gen4Weight,\n          bucket.gen3Val, bucket.gen3Weight,\n          bucket.gen2Val, bucket.gen2Weight,\n          void 0, 0);\n      return true;\n    }\n\n    return false;\n  }\n\n  clear(): void {\n    for (let i = 0; i < this.buckets.length; i += 1) {\n      this.buckets[i] = void 0;\n    }\n  }\n\n  /** @hidden */\n  get hits(): number {\n    return this.gen4Hits + this.gen3Hits + this.gen2Hits + this.gen1Hits;\n  }\n\n  get hitRatio(): number {\n    const hits = this.hits;\n    return hits / (hits + this.misses);\n  }\n}\n\n/** @hidden */\nexport class HashGenCacheSetBucket<T> {\n  /** @hidden */\n  gen4Val: T | undefined;\n  /** @hidden */\n  gen4Weight: number;\n  /** @hidden */\n  gen3Val: T | undefined;\n  /** @hidden */\n  gen3Weight: number;\n  /** @hidden */\n  gen2Val: T | undefined;\n  /** @hidden */\n  gen2Weight: number;\n  /** @hidden */\n  gen1Val: T | undefined;\n  /** @hidden */\n  gen1Weight: number;\n\n  constructor(gen4Val?: T, gen4Weight: number = 0,\n              gen3Val?: T, gen3Weight: number = 0,\n              gen2Val?: T, gen2Weight: number = 0,\n              gen1Val?: T, gen1Weight: number = 0) {\n    this.gen4Val = gen4Val;\n    this.gen4Weight = gen4Weight;\n    this.gen3Val = gen3Val;\n    this.gen3Weight = gen3Weight;\n    this.gen2Val = gen2Val;\n    this.gen2Weight = gen2Weight;\n    this.gen1Val = gen1Val;\n    this.gen1Weight = gen1Weight;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {HashCode} from \"@swim/util\";\nimport type {Mark} from \"./Mark\";\nimport type {Output} from \"../output/Output\";\nimport type {Display} from \"../format/Display\";\nimport type {Debug} from \"../format/Debug\";\n\n/**\n * Description of a source location.  Tags are used to annotate input sources,\n * particularly for [[Diagnostic diagnostic]] purposes.  A [[Mark]] tag\n * annotates a source position.  A [[Span]] tag annotate a source range.\n *\n * @see [[Diagnostic]]\n */\nexport abstract class Tag implements HashCode, Display, Debug {\n  /**\n   * The first source position covered by this `Tag`.\n   */\n  abstract readonly start: Mark;\n\n  /**\n   * The last source position covered by this `Tag`.\n   */\n  abstract readonly end: Mark;\n\n  /**\n   * Returns a `Tag` that includes all source locations covered by\n   * both this tag, and `that` tag.\n   */\n  abstract union(that: Tag): Tag;\n\n  /**\n   * Returns the position of this `Tag` relative to the given `mark`.\n   */\n  abstract shift(mark: Mark): Tag;\n\n  abstract display(output: Output): void;\n\n  abstract debug(output: Output): void;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Strings, Constructors} from \"@swim/util\";\nimport {Tag} from \"./Tag\";\nimport {Span} from \"../\"; // forward import\nimport type {Output} from \"../output/Output\";\nimport {Format} from \"../\"; // forward import\n\n/**\n * Description of a source position, identified by byte offset, line, and\n * column number, with an optional note.\n */\nexport class Mark extends Tag {\n  /** @hidden */\n  constructor(offset: number, line: number, column: number, note: string | undefined) {\n    super();\n    Object.defineProperty(this, \"offset\", {\n      value: offset,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"line\", {\n      value: line,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"column\", {\n      value: column,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"note\", {\n      value: note,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /**\n   * The zero-based byte offset of this position.\n   */\n  readonly offset!: number;\n\n  /**\n   * The one-based line number of this position.\n   */\n  readonly line!: number;\n\n  /**\n   * The one-based column number of this position.\n   */\n  readonly column!: number;\n\n  /**\n   * The note attached to the marked position, or `null` if this position has\n   * no attached note.\n   */\n  readonly note!: string | undefined;\n\n  withNote(note: string | undefined): Mark {\n    if (this.note !== note) {\n      return Mark.at(this.offset, this.line, this.column, note);\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Returns this position, if its byte offset is less than or equal to\n   * `that` position; otherwise returns `that` position.\n   */\n  min(that: Mark): Mark {\n    return this.offset <= that.offset ? this : that;\n  }\n\n  /**\n   * Returns this position, if its byte offset is greater than or equal to\n   * `that` position; otherwise returns `that` position.\n   */\n  max(that: Mark): Mark {\n    return this.offset >= that.offset ? this : that;\n  }\n\n  override get start(): Mark {\n    return this;\n  }\n\n  override get end(): Mark {\n    return this;\n  }\n\n  override union(that: Tag): Tag {\n    if (that instanceof Mark) {\n      if (this.offset === that.offset && this.line === that.line\n          && this.column === that.column) {\n        return this;\n      } else {\n        return Span.from(this, that);\n      }\n    } else if (that instanceof Span) {\n      const start = this.min(that.start);\n      const end = this.max(that.end);\n      if (start === that.start && end === that.end) {\n        return that;\n      } else {\n        return Span.from(start, end);\n      }\n    }\n    throw new Error(that.toString());\n  }\n\n  override shift(mark: Mark): Mark {\n    const offset = this.offset + (this.offset - mark.offset);\n    const line = this.line + (this.line - mark.line);\n    let column = this.column;\n    if (line === 1) {\n      column += (this.column - mark.column);\n    }\n    if (offset === this.offset && line === this.line && column === this.column) {\n      return this;\n    } else {\n      return Mark.at(offset, line, column, this.note);\n    }\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Mark) {\n      return this.offset === that.offset && this.line === that.line\n          && this.column === that.column && this.note === that.note;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Constructors.hash(Mark),\n        Numbers.hash(this.offset)), Numbers.hash(this.line)), Numbers.hash(this.column)),\n        Strings.hash(this.note)));\n  }\n\n  override display(output: Output): void {\n    Format.displayNumber(this.line, output);\n    output = output.write(58/*':'*/);\n    Format.displayNumber(this.column, output);\n    if (this.note !== void 0) {\n      output = output.write(58/*':'*/).write(32/*' '*/).write(this.note);\n    }\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Mark\").write(\".\").write(\"at\").write(\"(\");\n    Format.debugNumber(this.offset, output);\n    output = output.write(\", \");\n    Format.debugNumber(this.line, output);\n    output = output.write(\", \");\n    Format.debugNumber(this.column, output);\n    if (this.note !== void 0) {\n      output = output.write(\", \");\n      Format.debugString(this.note, output);\n    }\n    output = output.write(\")\");\n  }\n\n  override toString(): string {\n    return Format.display(this);\n  }\n\n  /**\n   * Returns a `Mark` at byte offset `0`, line `1`, and column `1`, with no\n   * attached note.\n   */\n  @Lazy\n  static get zero(): Mark {\n    return new Mark(0, 1, 1, void 0);\n  }\n\n  /**\n   * Returns a new `Mark` at the given zero-based byte `offset`, one-based\n   * `line` number, and one-based `column` number, with an optionally attached\n   * `note`.\n   */\n  static at(offset: number, line: number, column: number, note?: string | undefined): Mark {\n    return new Mark(offset, line, column, note);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Constructors} from \"@swim/util\";\nimport {Tag} from \"./Tag\";\nimport {Mark} from \"./Mark\";\nimport type {Output} from \"../output/Output\";\nimport {Format} from \"../\"; // forward import\n\n/**\n * Description of a source range, identified by a closed interval between start\n * and end [[Mark marks]].\n */\nexport class Span extends Tag {\n  /** @hidden */\n  constructor(start: Mark, end: Mark) {\n    super();\n    Object.defineProperty(this, \"start\", {\n      value: start,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"end\", {\n      value: end,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly start!: Mark;\n\n  override readonly end!: Mark;\n\n  override union(that: Tag): Tag {\n    if (that instanceof Mark) {\n      const start = this.start.min(that);\n      const end = this.end.max(that);\n      if (start === this.start && end === this.end) {\n        return this;\n      } else {\n        return Span.from(start, end);\n      }\n    } else if (that instanceof Span) {\n      const start = this.start.min(that.start);\n      const end = this.end.max(that.end);\n      if (start === this.start && end === this.end) {\n        return this;\n      } else {\n        return Span.from(start, end);\n      }\n    }\n    throw new Error(that.toString());\n  }\n\n  override shift(mark: Mark): Span {\n    const start = this.start.shift(mark);\n    const end = this.end.shift(mark);\n    if (start === this.start && end === this.end) {\n      return this;\n    } else {\n      return Span.from(start, end);\n    }\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Span) {\n      return this.start.equals(that.start) && this.end.equals(that.end);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Span),\n        this.start.hashCode()), this.end.hashCode()));\n  }\n\n  override display(output: Output): void {\n    if (this.start.note !== void 0) {\n      output = output.write(this.start.note).write(58/*':'*/).write(32/*' '*/);\n    }\n    Format.displayNumber(this.start.line, output);\n    output = output.write(58/*':'*/);\n    Format.displayNumber(this.start.column, output);\n    output = output.write(45/*'-'*/);\n    Format.displayNumber(this.end.line, output);\n    output = output.write(58/*':'*/);\n    Format.displayNumber(this.end.column, output);\n    if (this.end.note !== void 0) {\n      output = output.write(58/*':'*/).write(32/*' '*/).write(this.end.note);\n    }\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Span\").write(\".\").write(\"from\").write(\"(\");\n    this.start.debug(output);\n    output = output.write(\", \");\n    this.end.debug(output);\n    output = output.write(\")\");\n  }\n\n  override toString(): string {\n    return Format.display(this);\n  }\n\n  /**\n   * Returns a new `Span` representing the closed interval between the given\n   * `start` and `end` marks.\n   */\n  static from(start: Mark, end: Mark): Span {\n    if (start.offset > end.offset) {\n      const tmp = start;\n      start = end;\n      end = tmp;\n    }\n    return new Span(start, end);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\n\n/**\n * Stylized text output utility functions.\n */\nexport const OutputStyle = {} as {\n  /**\n   * Writes the ASCII reset escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  reset(output: Output): void\n\n  /**\n   * Writes the ASCII bold (increased intensity) escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  bold(output: Output): void;\n\n  /**\n   * Writes the ASCII faint (decreased intensity) escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  faint(output: Output): void;\n\n  /**\n   * Writes the ASCII black foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  black(output: Output): void;\n\n  /**\n   * Writes the ASCII red foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  red(output: Output): void;\n\n  /**\n   * Writes the ASCII green foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  green(output: Output): void;\n\n  /**\n   * Writes the ASCII yellow foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  yellow(output: Output): void;\n\n  /**\n   * Writes the ASCII blue foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  blue(output: Output): void;\n\n  /**\n   * Writes the ASCII magenta foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  magenta(output: Output): void;\n\n  /**\n   * Writes the ASCII cyan foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  cyan(output: Output): void;\n\n  /**\n   * Writes the ASCII gray foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  gray(output: Output): void;\n\n  /**\n   * Writes the ASCII bold black foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  blackBold(output: Output): void;\n\n  /**\n   * Writes the ASCII bold red foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  redBold(output: Output): void;\n\n  /**\n   * Writes the ASCII bold green foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  greenBold(output: Output): void;\n\n  /**\n   * Writes the ASCII bold yellow foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  yellowBold(output: Output): void;\n\n  /**\n   * Writes the ASCII bold blue foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  blueBold(output: Output): void;\n\n  /**\n   * Writes the ASCII bold magenta foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  magentaBold(output: Output): void;\n\n  /**\n   * Writes the ASCII bold cyan foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  cyanBold(output: Output): void;\n\n  /**\n   * Writes the ASCII bold gray foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled `output.settings.isStyled()`]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  grayBold(output: Output): void;\n};\n\nOutputStyle.reset = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.bold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.faint = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(50/*'2'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.black = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(48/*'0'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.red = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(49/*'1'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.green = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(50/*'2'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.yellow = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(51/*'3'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.blue = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(52/*'4'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.magenta = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(53/*'5'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.cyan = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(54/*'6'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.gray = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(55/*'7'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.blackBold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(48/*'0'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.redBold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(49/*'1'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.greenBold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(50/*'2'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.yellowBold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(51/*'3'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.blueBold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(52/*'4'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.magentaBold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(53/*'5'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.cyanBold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(54/*'6'*/).write(109/*'m'*/);\n  }\n};\n\nOutputStyle.grayBold = function (output: Output): void {\n  if (output.settings.isStyled()) {\n    output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n        .write(51/*'3'*/).write(55/*'7'*/).write(109/*'m'*/);\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when writing invalid [[Output]].\n */\nexport class OutputException extends Error {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, OutputException.prototype);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, HashCode, Booleans, Numbers, Strings, Constructors} from \"@swim/util\";\nimport type {Output} from \"../output/Output\";\nimport type {Debug} from \"../format/Debug\";\nimport {Format} from \"../format/Format\";\n\n/**\n * Either an [[OutputSettings]] instance, or an [[OutputSettingsInit]] object\n * initializer.\n */\nexport type AnyOutputSettings = OutputSettings | OutputSettingsInit;\n\n/**\n * [[OutputSettings]] object initializer.\n */\nexport interface OutputSettingsInit {\n  lineSeparator?: string;\n  isPretty?: boolean;\n  isStyled?: boolean;\n  precision?: number;\n}\n\n/**\n * [[Output]] production parameters.  `OutputSettings` provide contextual\n * configuration parameters to output producers, such as [[Writer Writers]].\n * Uses include enabling pretty printing and styling generated output.\n * Subclasses can provide additional parameters understood by specialized\n * output producers.\n */\nexport class OutputSettings implements Debug, HashCode {\n  protected constructor(lineSeparator: string, pretty: boolean,\n                        styled: boolean, precision: number) {\n    Object.defineProperty(this, \"lineSeparator\", {\n      value: lineSeparator,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"pretty\", {\n      value: pretty,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"styled\", {\n      value: styled,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"precision\", {\n      value: precision,\n      enumerable: true,\n    });\n  }\n\n  /**\n   * The Unicode code point sequence used to separate lines of text.\n   * Defaults to the runtime operating system's line separator.\n   */\n  readonly lineSeparator!: string;\n\n  /**\n   * Returns a copy of these settings with the given `lineSeparator`.\n   */\n  withLineSeparator(lineSeparator: string | undefined): string | OutputSettings {\n    return this.copy(lineSeparator, this.pretty, this.styled, this.precision);\n  }\n\n  /** @hidden */\n  readonly pretty!: boolean;\n\n  /**\n   * Returns `true` if output producers should pretty print their output,\n   * when possible.\n   */\n  isPretty(): boolean {\n    return this.pretty;\n  }\n\n  /**\n   * Returns a copy of these settings with the given `pretty` flag.\n   */\n  asPretty(pretty: boolean): OutputSettings {\n    return this.copy(this.lineSeparator, pretty, this.styled, this.precision);\n  }\n\n  /** @hidden */\n  readonly styled!: boolean;\n\n  /**\n   * Returns `true` if output producers should style their output,\n   * when possible.\n   */\n  isStyled(): boolean {\n    return this.styled;\n  }\n\n  /**\n   * Returns a copy of these settings with the given `styled` flag.\n   */\n  asStyled(styled: boolean): OutputSettings {\n    return this.copy(this.lineSeparator, this.pretty, styled, this.precision);\n  }\n\n  /**\n   * Returns the numeric precision output producers should use\n   * when formatting numbers.\n   */\n  readonly precision!: number;\n\n  /**\n   * Returns a copy of these settings with the given numeric `precision`.\n   */\n  withPrecision(precision: number): OutputSettings {\n    return this.copy(this.lineSeparator, this.pretty, this.styled, precision);\n  }\n\n  protected copy(lineSeparator: string | undefined, pretty: boolean,\n                 styled: boolean, precision: number): OutputSettings {\n    return OutputSettings.create(lineSeparator, pretty, styled, precision);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof OutputSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof OutputSettings) {\n      return that.canEqual(this) && this.lineSeparator === that.lineSeparator\n          && this.pretty === that.pretty && this.styled === that.styled\n          && this.precision === that.precision;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Constructors.hash(OutputSettings), Strings.hash(this.lineSeparator)),\n        Booleans.hash(this.pretty)), Booleans.hash(this.styled)),\n        Numbers.hash(this.precision)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"OutputSettings\").write(46/*'.'*/);\n    if (!this.pretty && !this.styled) {\n      output = output.write(\"standard\");\n    } else if (this.pretty && !this.styled) {\n      output = output.write(\"pretty\");\n    } else if (!this.pretty && this.styled) {\n      output = output.write(\"styled\");\n    } else {\n      output = output.write(\"prettyStyled\");\n    }\n    output = output.write(40/*'('*/).write(41/*')'*/);\n    if (this.lineSeparator !== Format.lineSeparator) {\n      output = output.write(46/*'.'*/).write(\"lineSeparator\").write(40/*'('*/)\n          .display(this.lineSeparator).write(41/*')'*/);\n    }\n    if (this.precision !== -1) {\n      output = output.write(46/*'.'*/).write(\"precision\").write(40/*'('*/)\n          .display(this.precision).write(41/*')'*/);\n    }\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing disabled, and styling disabled.\n   */\n  @Lazy\n  static standard(): OutputSettings {\n    return new OutputSettings(Format.lineSeparator, false, false, -1);\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing enabled, and styling disabled.\n   */\n  @Lazy\n  static pretty(): OutputSettings {\n    return new OutputSettings(Format.lineSeparator, true, false, -1);\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing disabled, and styling enabled.\n   */\n  @Lazy\n  static styled(): OutputSettings {\n    return new OutputSettings(Format.lineSeparator, false, true, -1);\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing enabled, and styling enabled.\n   */\n  @Lazy\n  static prettyStyled(): OutputSettings {\n    return new OutputSettings(Format.lineSeparator, true, true, -1);\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the given `lineSeparator`, pretty\n   * rinting enabled if `isPretty` is `true`, styling enabled if `isStyled` is\n   * `true`, and with the given numeric `precision`.\n   */\n  static create(lineSeparator?: string, pretty?: boolean,\n                styled?: boolean, precision?: number): OutputSettings {\n    if (typeof lineSeparator !== \"string\") {\n      lineSeparator = Format.lineSeparator;\n    }\n    if (typeof pretty !== \"boolean\") {\n      pretty = false;\n    }\n    if (typeof styled !== \"boolean\") {\n      styled = false;\n    }\n    if (typeof precision !== \"number\") {\n      precision = -1;\n    }\n    if (lineSeparator === Format.lineSeparator && precision === -1) {\n      if (!pretty && !styled) {\n        return OutputSettings.standard();\n      } else if (pretty && !styled) {\n        return OutputSettings.pretty();\n      } else if (!pretty && styled) {\n        return OutputSettings.styled();\n      } else {\n        return OutputSettings.prettyStyled();\n      }\n    }\n    return new OutputSettings(lineSeparator, pretty, styled, precision);\n  }\n\n  /**\n   * Converts a settings `init` object to an instance of `OutputSettings`.\n   */\n  static fromInit(init: OutputSettingsInit): OutputSettings {\n    return OutputSettings.create(init.lineSeparator, init.isPretty,\n                                 init.isStyled, init.precision);\n  }\n\n  /**\n   * Converts a loosely typed settings `value` to an instance of `OutputSettings`.\n   */\n  static fromAny(value: AnyOutputSettings | undefined): OutputSettings {\n    if (value instanceof OutputSettings) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return OutputSettings.fromInit(value);\n    }\n    return OutputSettings.standard();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Builder} from \"@swim/util\";\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {OutputFull} from \"../\"; // forward import\nimport {OutputDone} from \"../\"; // forward import\nimport {OutputError} from \"../\"; // forward import\nimport {Format} from \"../\"; // forward import\n\n/**\n * Non-blocking token stream writer.  `Output` enables incremental,\n * interruptible writing of network protocols and data formats.\n *\n * ### Output tokens\n * Output tokens are modeled as primitive numbers, commonly representing\n * Unicode code points, or raw octets; each `Output` implementation specifies\n * the semantic type of its tokens.\n *\n * ### Output states\n * An `Output` writer is always in one of three states: _cont_​inue, _full_,\n * or _done_.  The _cont_ state indicates that the stream is ready to write a\n * single token; the _full_ state indicates that the stream is unable to write\n * additional tokens at this time, but that the stream may logically resume at\n * some point in the future; and the _done_ state indicates that the stream has\n * terminated, and that [[bind]] will return the output result.  [[isCont]]\n * returns `true` when in the _cont_ state; [[isFull]] returns `true` when in\n * the _full_ state; and [[isDone]] returns `true` when in the _done_ state.\n *\n * ### Output results\n * An `Output` writer yields a value of type `T`, obtained via the [[bind]]\n * method, representing some implementation defined result of writing the\n * output.  For example, an `Output<string>` implementation may–but is not\n * required to–yield a `string` containing all code points written to the\n * output.\n *\n * ### Non-blocking behavior\n * `Output` writers never block.  An `Output` writer that would otherwise block\n * writing additional output instead enters the _full_ state, signaling the\n * output generator to back off producing the output, but to remain prepared to\n * produce additional output in the future.  An `Output` writer enters the\n * _done_ state when it encounters the final end of its output, signaling to\n * the output generator to stop producing.\n *\n * ### Output settings\n * An output generator may alter the tokens it produces based on its `Output`\n * writer's [[settings]].  Uses include pretty printing and styling generated\n * output.  [[OutputSettings]] subclasses can provide additional parameters\n * understood by specialized output producers.\n *\n * ### Cloning\n * An `Output` writer may be [[clone cloned]] to branch the token stream in an\n * implementation specified manner.  Not all `Output` implementations support\n * cloning.\n *\n * @see [[OutputSettings]]\n * @see [[Writer]]\n */\nexport abstract class Output<T = unknown> implements Builder<number, T> {\n  /**\n   * Returns `true` when the next [[write write(number)]] will succeed.\n   * i.e. this `Output` is in the _cont_ state.\n   */\n  abstract isCont(): boolean;\n\n  /**\n   * Returns `true` when an immediate `write` will fail, but writes may succeed\n   * at some point in the future.  i.e. this `Output` is in the _full_ state.\n   */\n  abstract isFull(): boolean;\n\n  /**\n   * Returns `true` when no `write` will ever again suucced.\n   * i.e. this `Output` is in the _done_ state.\n   */\n  abstract isDone(): boolean;\n\n  /**\n   * Returns `true` when an immediate `write` will fail due to an\n   * error with the token stream. i.e. this `Output` is in the `error` state.\n   * When `true`, `trap()` will return the output error.\n   */\n  abstract isError(): boolean;\n\n  /**\n   * Returns `true` if this is a partial `Output` that will enter\n   * the `full` state when it is unable to write additional tokens.\n   */\n  abstract isPart(): boolean;\n\n  /**\n   * Returns a partial `Output` equivalent to this `Output`, if `part` is `true`;\n   * returns a final `Output` equivalent to this `Output` if `part` is `false`.\n   * The caller's reference to this `Output` should be replaced by the returned\n   * `Output`.\n   */\n  abstract asPart(part: boolean): Output<T>;\n\n  /**\n   * Writes a single `token` to the stream, if this `Output` is in the\n   * _cont_ state.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` is not in the _cont_ state.\n   */\n  abstract write(token: number): Output<T>;\n\n  /**\n   * Writes the code points of the given `string`.  Assumes this is a Unicode\n   * `Output` writer with sufficient capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full `string` has been written.\n   */\n  abstract write(string: string): Output<T>;\n\n  /**\n   * Writes the code points of the given `string`, followed by the code points\n   * of the `settings`' [[OutputSettings.lineSeparator line separator].\n   * Assumes this is a Unicode `Output` writer with sufficient capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full `string` and line separator has been written.\n   */\n  writeln(string?: string): Output<T> {\n    if (typeof string === \"string\") {\n      this.write(string);\n    }\n    return this.write(this.settings.lineSeparator);\n  }\n\n  /**\n   * Writes the code points of the human-readable [[Display]] string of the\n   * given `object`.  Assumes this is a Unicode `Output` writer with sufficient\n   * capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full display string has been written.\n   */\n  display(object: unknown): Output<T> {\n    Format.display(object, this);\n    return this;\n  }\n\n  /**\n   * Writes the code points of the developer-readable [[Debug]] string of the\n   * given `object`.  Assumes this is a Unicode `Output` writer with sufficient\n   * capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full debug string has been written.\n   */\n  debug(object: unknown): Output<T> {\n    Format.debug(object, this);\n    return this;\n  }\n\n  /**\n   * Writes any internally buffered state to the underlying output stream.\n   */\n  flush(): Output<T> {\n    return this;\n  }\n\n  push(...tokens: number[]): void {\n    const n = tokens.length;\n    for (let i = 0; i < n; i += 1) {\n      this.write(tokens[i]!);\n    }\n  }\n\n  /**\n   * The `OutputSettings` used to configure the behavior of output producers\n   * that write to this `Output`.\n   */\n  abstract readonly settings: OutputSettings;\n\n  /**\n   * Updates the `settings` associated with this `Output`.\n   *\n   * @return `this`\n   */\n  abstract withSettings(settings: AnyOutputSettings): Output<T>;\n\n  /**\n   * Returns the implementation-defined result of writing the output.\n   */\n  abstract bind(): T;\n\n  /**\n   * Returns the output error. Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws OutputException if this `Output` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new OutputException();\n  }\n\n  /**\n   * Returns an implementation-defined branch of the token stream.\n   *\n   * @throws `Error` if this `Output` writer cannot be cloned.\n   */\n  clone(): Output<T> {\n    throw new Error();\n  }\n\n  /**\n   * Return an `Output` in the _full_ state.\n   */\n  @Lazy\n  static full(): Output<never> {\n    return new OutputFull(OutputSettings.standard());\n  }\n\n  /**\n   * Returns an `Output` in the _done_ state.\n   */\n  @Lazy\n  static done(): Output<never> {\n    return new OutputDone(OutputSettings.standard());\n  }\n\n  /**\n   * Return an `Output` in the _error_ state that traps the given `error`.\n   */\n  static error(error: Error): Output<never> {\n    return new OutputError(error, OutputSettings.standard());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when reading invalid [[Input]].\n */\nexport class InputException extends Error {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, InputException.prototype);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, HashCode, Booleans, Constructors} from \"@swim/util\";\nimport type {Output} from \"../output/Output\";\nimport type {Debug} from \"../format/Debug\";\nimport {Format} from \"../format/Format\";\n\n/**\n * Either an [[InputSettings]] instance, or an [[InputSettingsInit]] object\n * initializer.\n */\nexport type AnyInputSettings = InputSettings | InputSettingsInit;\n\nexport interface InputSettingsInit {\n  isStripped?: boolean;\n}\n\n/**\n * [[Input]] consumption parameters.  `InputSettings` provide contextual\n * configuration parameters to input consumers, such as [[Parser Parsers]].\n */\nexport class InputSettings implements HashCode, Debug {\n  protected constructor(stripped: boolean) {\n    Object.defineProperty(this, \"stripped\", {\n      value: stripped,\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly stripped!: boolean;\n\n  /**\n   * Returns `true` if input consumers should not include diagnostic metadata\n   * in generated output.\n   */\n  isStripped(): boolean {\n    return this.stripped;\n  }\n\n  /**\n   * Returns a copy of these settings with the given `stripped` flag.\n   */\n  asStripped(stripped: boolean): InputSettings {\n    return this.copy(stripped);\n  }\n\n  protected copy(stripped: boolean): InputSettings {\n    return InputSettings.create(stripped);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof InputSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InputSettings) {\n      return that.canEqual(this) && this.stripped === that.stripped;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(InputSettings),\n        Booleans.hash(this.stripped)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"InputSettings\").write(46/*'.'*/);\n    if (!this.stripped) {\n      output = output.write(\"standard\");\n    } else {\n      output = output.write(\"stripped\");\n    }\n    output = output.write(40/*'('*/).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  /**\n   * Returns `InputSettings` configured to include diagnostic metadata in\n   * generated output.\n   */\n  @Lazy\n  static standard(): InputSettings {\n    return new InputSettings(false);\n  }\n\n  /**\n   * Returns `InputSettings` configured to omit diagnostic metadata in\n   * generated output.\n   */\n  @Lazy\n  static stripped(): InputSettings {\n    return new InputSettings(true);\n  }\n\n  /**\n   * Returns `InputSettings` configured to not include diagnostic metadata in\n   * generated output, if `isStripped` is `true`.\n   */\n  static create(isStripped?: boolean): InputSettings {\n    if (isStripped) {\n      return InputSettings.stripped();\n    }\n    return InputSettings.standard();\n  }\n\n  /**\n   * Converts the loosely typed `settings` to an instance of `InputSettings`.\n   */\n  static fromAny(settings: AnyInputSettings | undefined): InputSettings {\n    if (settings instanceof InputSettings) {\n      return settings;\n    } else if (typeof settings === \"object\" && settings !== null) {\n       return InputSettings.create(settings.isStripped);\n    } else {\n      return InputSettings.standard();\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {Mark} from \"../source/Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {InputEmpty} from \"../\"; // forward import\nimport {InputDone} from \"../\"; // forward import\nimport {InputError} from \"../\"; // forward import\n\n/**\n * Non-blocking token stream reader, with single token lookahead.\n * `Input` enables incremental, interruptible parsing of network protocols and\n * data formats.\n *\n * ### Input tokens\n * Input tokens are modeled as primitive numbers, commonly representing Unicode\n * code points, or raw octets; each `Input` implementation specifies the\n * semantic type of its tokens.  The [[head]]  method peeks at the lookahead\n * token, without consuming it, and the [[step]] method advances the input to\n * the next token.\n *\n * ### Input states\n * An `Input` reader is always in one of three states: _cont_​inue, _empty_, or\n * _done_.  The _cont_ state indicates that a lookahead token is immediately\n * available; the _empty_ state indicates that no additional tokens are\n * available at this time, but that the stream may logically resume at some\n * point in the future; and the _done_ state indicates that the stream has\n * terminated.  [[isCont]] returns `true` when in the _cont_ state; [[isEmpty]]\n * returns `true` when in the _empty_ state; and [[isDone]] returns `true` when\n * in the _done_ state.\n *\n * ### Non-blocking behavior\n * `Input` readers never block.  An `Input` reader that would otherwise block\n * awaiting additional input instead enters the _empty_ state, signaling the\n * input consumer to back off processing the input, but to remain prepared to\n * process additional input in the future.  An `Input` reader enters the _done_\n * state when it encounters the final end of its input, signaling the input\n * consumer to stop processing.  [[Input.empty]] returns an `Input` reader in\n * the _empty_ state.  [[Input.done]] returns an `Input` reader in the _done_\n * state.\n *\n * ### Position tracking\n * The logical position of the lookahead token is made available via the\n * [[mark]] method, with optimized callouts for the byte [[offset]], one-based\n * [[line]] number, and one-based [[column]] in the current line.  The [[id]]\n * method returns a diagnostic identifier for the token stream.\n *\n * ### Cloning\n * An `Input` reader may be [[clone cloned]] to provide an indepently mutable\n * position into a shared token stream.  Not all `Input` implementations\n * support cloning.\n *\n * @see [[InputSettings]]\n * @see [[Parser]]\n */\nexport abstract class Input {\n  /**\n   * Returns `true` when a [[head lookahead]] token is immediately available.\n   * i.e. this `Input` is in the _cont_ state.\n   */\n  abstract isCont(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available, but\n   * additional input may be available at some point in the future.  i.e. this\n   * `Input` is in the _empty_ state.\n   */\n  abstract isEmpty(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available, and no\n   * additional input will ever become available.  i.e. this `Input` is in\n   * the _done_ state.\n   */\n  abstract isDone(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available due to an\n   * error with the token stream. i.e. this `Input` is in the `error` state.\n   * When `true`, `trap()` will return the input error\n   */\n  abstract isError(): boolean;\n\n  /**\n   * Returns `true` if this is a partial `Input` will that enter the _empty_\n   * state after it consumes the last available input token.\n   */\n  abstract isPart(): boolean;\n\n   /**\n    * Returns a partial `Input` equivalent to this `Input`, if `part` is `true`;\n    * returns a final `Input` equivalent to this `Input` if `part` is `false`.\n    * The caller's reference to this `Input` should be replaced by the returned\n    * `Input`\n    */\n  abstract asPart(part: boolean): Input;\n\n  /**\n   * Returns the current lookahead token, if this `Input` is in the\n   * _cont_ state.\n   *\n   * @throws [[InputException]] if this `Input` is not in the _cont_ state.\n   */\n  abstract head(): number;\n\n  /**\n   * Advances to the next token, if this `Input` is in the _cont_ state.\n   *\n   * @throws `Error` if this `Input` is not in the _cont_ state.\n   */\n  abstract step(): Input;\n\n  /**\n   * Sets the position of this `Input` to the given `mark`.  Rewinds to the\n   * start of this `Input`, if `mark` is `undefined`.\n   *\n   * @throws [[InputException]] if this `Input` does not support seeking,\n   *         or is unable to reposition to the `mark`.\n   */\n  abstract seek(mark?: Mark): Input;\n\n  /**\n   * Returns the input error when in the _error_ state\n   *\n   * @throws InputException if the `Input` is not the _error_state\n   */\n  trap(): Error {\n    throw new InputException();\n  }\n\n  /**\n   * An informative identifier for this token stream, or `undefined` if this\n   * stream is unidentified.\n   */\n  abstract readonly id: string | undefined;\n\n  /**\n   * Returns an `Input` equivalent to this `Input`, but logically identified\n   * by the given–possibly `undefined`–`id`.  The caller's reference to this\n   * `Input` should be replaced by the returned `Input`.\n   */\n  abstract withId(id: string | undefined): Input;\n\n  /**\n   * The position of the current lookahead token, relative to the start\n   * of the stream.\n   */\n  abstract readonly mark: Mark;\n\n  /**\n   * Returns an `Input` equivalent to this `Input`, but logically positioned\n   * at the given `mark`.  The physical position in the input stream is not\n   * modified.  The caller's reference to this `Input` should be replaced by\n   * the returned `Input`.\n   */\n  abstract withMark(mark: Mark): Input;\n\n  /**\n   * The byte offset of the current lookahead token, relative to the start\n   * of the stream.\n   */\n  abstract readonly offset: number;\n\n  /**\n   * The one-based line number of the current lookahead token, relative to\n   * the start of the stream.\n   */\n  abstract readonly line: number;\n\n  /**\n   * The one-based column number of the current lookahead token, relative to\n   * the current line in the stream.\n   */\n  abstract readonly column: number;\n\n  /**\n   * The `InputSettings` used to configure the behavior of input consumers\n   * that read from this `Input`.\n   */\n  abstract readonly settings: InputSettings;\n\n  /**\n   * Returns a clone of this `Input` with the given `settings`.\n   *\n   * @throws `Error` if this `Input` reader cannot be cloned.\n   */\n  abstract withSettings(settings: AnyInputSettings): Input;\n\n  /**\n   * Returns an independently positioned view into the token stream,\n   * initialized with identical state to this `Input`.\n   *\n   * @throws `Error` if this `Input` reader cannot be cloned.\n   */\n  abstract clone(): Input;\n\n  /**\n   * Returns an `Input` reader in the _empty_ state.\n   */\n  @Lazy\n  static empty(): Input {\n    return new InputEmpty(void 0, Mark.zero, InputSettings.standard());\n  }\n\n  /**\n   * Returns an `Input` reader in the _done_ state.\n   */\n  @Lazy\n  static done(): Input {\n    return new InputDone(void 0, Mark.zero, InputSettings.standard());\n  }\n\n  /**\n   * Returns an `Input` in the _error_ state that traps the given `error`.\n   */\n  static error(error: Error): Input {\n    return new InputError(error, void 0, Mark.zero, InputSettings.standard());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mark} from \"../source/Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {Input} from \"./Input\";\n\n/** @hidden */\nexport class InputError extends Input {\n  /** @hidden */\n  readonly error!: Error;\n\n  constructor(error: Error, id: string | undefined, mark: Mark, settings: InputSettings) {\n    super();\n    Object.defineProperty(this, \"error\", {\n      value: error,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"id\", {\n      value: id,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mark\", {\n      value: mark,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isEmpty(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return true;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): Input {\n    return this;\n  }\n\n  override head(): number {\n    throw new InputException();\n  }\n\n  override step(): Input {\n    const error = new InputException(\"error step\");\n    return new InputError(error, this.id, this.mark, this.settings);\n  }\n\n  override trap(): Error {\n    return this.error;\n  }\n\n  override seek(mark?: Mark): Input {\n    const error = new InputException(\"error seek\");\n    return new InputError(error, this.id, this.mark, this.settings);\n  }\n\n  override readonly id!: string | undefined;\n\n  override withId(id: string | undefined): Input {\n    return new InputError(this.error, id, this.mark, this.settings);\n  }\n\n  override readonly mark!: Mark;\n\n  override withMark(mark: Mark): Input {\n    return new InputError(this.error, this.id, mark, this.settings);\n  }\n\n  override get offset(): number {\n    return this.mark.offset;\n  }\n\n  override get line(): number {\n    return this.mark.line;\n  }\n\n  override get column(): number {\n    return this.mark.column;\n  }\n\n  override readonly settings!: InputSettings;\n\n  override withSettings(settings: AnyInputSettings): Input {\n    settings = InputSettings.fromAny(settings);\n    return new InputError(this.error, this.id, this.mark, settings);\n  }\n\n  override clone(): Input {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mark} from \"../source/Mark\";\nimport {InputException} from \"../input/InputException\";\nimport {AnyInputSettings, InputSettings} from \"../input/InputSettings\";\nimport {Input} from \"../input/Input\";\nimport {InputError} from \"../input/InputError\";\n\n/** @hidden */\nexport class StringInput extends Input {\n  /** @hidden */\n  readonly string!: string;\n  /** @hidden */\n  readonly index!: number;\n  /** @hidden */\n  readonly part!: boolean;\n\n  constructor(string: string, id: string | undefined, offset: number,\n              line: number, column: number, settings: InputSettings,\n              index: number, part: boolean) {\n    super();\n    Object.defineProperty(this, \"string\", {\n      value: string,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"part\", {\n      value: part,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"id\", {\n      value: id,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"offset\", {\n      value: offset,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"line\", {\n      value: line,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"column\", {\n      value: column,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return this.index < this.string.length;\n  }\n\n  override isEmpty(): boolean {\n    return this.part && this.index >= this.string.length;\n  }\n\n  override isDone(): boolean {\n    return !this.part && this.index >= this.string.length;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return this.part;\n  }\n\n  override asPart(part: boolean): Input {\n    Object.defineProperty(this, \"part\", {\n      value: part,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override head(): number {\n    const string = this.string;\n    const index = this.index;\n    if (index < string.length) {\n      const c = string.codePointAt(index);\n      if (c !== void 0) {\n        return c;\n      } else {\n        return string.charCodeAt(index);\n      }\n    }\n    throw new InputException();\n  }\n\n  override step(): Input {\n    const string = this.string;\n    const index = this.index;\n    if (index < string.length) {\n      const c = string.codePointAt(index);\n      Object.defineProperty(this, \"index\", {\n        value: string.offsetByCodePoints(index, 1),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"offset\", {\n        value: this.offset + (this.index - index),\n        enumerable: true,\n        configurable: true,\n      });\n      if (c === 10/*'\\n'*/) {\n        Object.defineProperty(this, \"line\", {\n          value: this.line + 1,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"column\", {\n          value: 1,\n          enumerable: true,\n          configurable: true,\n        });\n      } else {\n        Object.defineProperty(this, \"column\", {\n          value: this.column + 1,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n      return this;\n    } else {\n      const error = new InputException(\"invalid step\");\n      return new InputError(error, this.id, this.mark, this.settings);\n    }\n  }\n\n  override seek(mark?: Mark): Input {\n    if (mark !== void 0) {\n      const index = this.index + (mark.offset - this.offset);\n      if (0 <= index && index <= this.string.length) {\n        Object.defineProperty(this, \"index\", {\n          value: index,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"offset\", {\n          value: mark.offset,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"line\", {\n          value: mark.line,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"column\", {\n          value: mark.column,\n          enumerable: true,\n          configurable: true,\n        });\n        return this;\n      } else {\n        const error = new InputException(\"invalid seek to \" + mark);\n        return new InputError(error, this.id, this.mark, this.settings);\n      }\n    } else {\n      Object.defineProperty(this, \"index\", {\n        value: 0,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"offset\", {\n        value: 0,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"line\", {\n        value: 1,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"column\", {\n        value: 1,\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    }\n  }\n\n  readonly id!: string | undefined;\n\n  override withId(id: string | undefined): Input {\n    Object.defineProperty(this, \"id\", {\n      value: id,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override get mark(): Mark {\n    return Mark.at(this.offset, this.line, this.column);\n  }\n\n  override withMark(mark: Mark): Input {\n    Object.defineProperty(this, \"offset\", {\n      value: mark.offset,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"line\", {\n      value: mark.line,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"column\", {\n      value: mark.column,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override readonly offset!: number;\n\n  override readonly line!: number;\n\n  override readonly column!: number;\n\n  override readonly settings!: InputSettings;\n\n  override withSettings(settings: AnyInputSettings): Input {\n    settings = InputSettings.fromAny(settings);\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override clone(): Input {\n    return new StringInput(this.string, this.id, this.offset, this.line,\n                           this.column, this.settings, this.index, this.part);\n  }\n\n  static create(string: string): Input {\n    return new StringInput(string, void 0, 0, 1, 1, InputSettings.standard(), 0, false);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"../output/OutputSettings\";\nimport {Output} from \"../output/Output\";\n\n/** @hidden */\nexport class StringOutput extends Output<string> {\n  /** @hidden */\n  readonly string!: string;\n\n  constructor(string: string, settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"string\", {\n      value: string,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return true;\n  }\n\n  override isFull(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): Output<string> {\n    return this;\n  }\n\n  override write(token: number | string): Output<string> {\n    if (typeof token === \"number\") {\n      if ((token >= 0x0000 && token <= 0xd7ff)\n          || (token >= 0xe000 && token <= 0xffff)) { // U+0000..U+D7FF | U+E000..U+FFFF\n        token = String.fromCharCode(token);\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        const u = token - 0x10000;\n        token = String.fromCharCode(0xd800 | (u >>> 10), 0xdc00 | (u & 0x3ff));\n      } else { // invalid code point\n        token = \"\\ufffd\";\n      }\n    }\n    Object.defineProperty(this, \"string\", {\n      value: this.string + token,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override writeln(string?: string): Output<string> {\n    if (string === void 0) {\n      Object.defineProperty(this, \"string\", {\n        value: this.string.concat(this.settings.lineSeparator),\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    } else {\n      Object.defineProperty(this, \"string\", {\n        value: this.string.concat(string).concat(this.settings.lineSeparator),\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    }\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): Output<string> {\n    settings = OutputSettings.fromAny(settings);\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override bind(): string {\n    return this.string;\n  }\n\n  override clone(): Output<string> {\n    return new StringOutput(this.string, this.settings);\n  }\n\n  override toString(): string {\n    return this.string;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when a [[Writer]] attempts to write invalid syntax.\n */\nexport class WriterException extends Error {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, WriterException.prototype);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Output} from \"../output/Output\";\nimport {WriterException} from \"./WriterException\";\nimport {WriterEnd} from \"../\"; // forward import\nimport {WriterDone} from \"../\"; // forward import\nimport {WriterError} from \"../\"; // forward import\nimport {WriterSequence} from \"../\"; // forward import\n\n/**\n * Continuation of how to write subsequent [[Output]] tokens to a stream.\n * `Writer` enables efficient, interruptible writing of network protocols and\n * data formats, without intermediate buffering.\n *\n * ### Output tokens\n * A `Writer` writes tokens to an `Output` writer.  Output tokens are modeled\n * as primitive numbers, commonly representing Unicode code points, or raw\n * octets.  Each `Writer` implementation specifies the semantic type of output\n * tokens it produces.\n *\n * ### Writer states\n * A `Writer` is always in one of three states: _cont_​inue, _done_, or _error_.\n * The _cont_ state indicates that [[pull]] is ready to produce `Output`; the\n * _done_ state indicates that writing terminated successfully, and that\n * [[bind]] will return the written result; the _error_ state indicates that\n * writing terminated in failure, and that [[trap]] will return the write error.\n * `Writer` subclasses default to the _cont_ state.\n *\n * ### Feeding input\n * The [[feed]] method returns a `Writer` that represents the continuation\n * of how to write the given input object to subsequent `Output` writers.\n * `feed` can be used to specify an initial object to write, or to change\n * the object to be written.\n *\n * ### Pulling output\n * The [[pull]] method incrementally writes as much `Output` as it can, before\n * returning another `Writer` that represents the continuation of how to write\n * additional `Output`.  The `Output` passed to `pull` is only guaranteed to be\n * valid for the duration of the method call; references to the provided\n * `Output` instance must not be stored.\n *\n * ### Writer results\n * A `Writer` produces a written result of type `O`, obtained via the [[bind]]\n * method.  `bind` is only guaranteed to return a result when in the _done_\n * state; though `bind` may optionally make available partial results in other\n * states.  A failed `Writer` provides a write error via the [[trap]] method.\n * `trap` is only guaranteed to return an error when in the _error_ state.\n *\n * ### Continuations\n * A `Writer` instance represents a continuation of how to write remaining\n * `Output`.  Rather than writing a complete output in one go, a `Writer` takes\n * an `Output` chunk and returns another `Writer` instance that knows how to\n * write subsequent `Output` chunks.  This enables non-blocking, incremental\n * writing that can be interrupted whenever an `Output` writer runs out of\n * space.  A `Writer` terminates by returning a continuation in either the\n * _done_ state, or the _error_ state.  [[Writer.done]] returns a `Writer` in\n * the _done_ state.  [[Writer.error]] returns a `Writer` in the _error_ state.\n *\n * ### Forking\n * The [[fork]] method passes an out-of-band condition to a `Writer`, yielding\n * a `Writer` continuation whose behavior may be altered by the given condition.\n * For example, a console `Writer` might support a `fork` condition that changes\n * the color and style of printed text.  The types of conditions accepted by\n * `fork`, and their intended semantics, are implementation defined.\n */\nexport abstract class Writer<I = unknown, O = unknown> {\n  /**\n   * Returns `true` when [[pull]] is able to produce `Output`.  i.e. this\n   * `Writer` is in the _cont_ state.\n   */\n  isCont(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` when writing has terminated successfully, and [[bind]] will\n   * return the written result.  i.e. this `Writer` is in the _done_ state.\n   */\n  isDone(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns `true` when writing has terminated in failure, and [[trap]] will\n   * return the write error.  i.e. this `Writer` is in the _error_ state.\n   */\n  isError(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns a `Writer` that represents the continuation of how to write the\n   * given `input` object.\n   *\n   * @throws `WriterException` if this `Writer` does not know how to write the\n   *         given `input` object.\n   */\n  feed(input: I): Writer<I, O> {\n    throw new WriterException();\n  }\n\n  /**\n   * Incrementally writes as much `output` as possible, and returns another\n   * `Writer` that represents the continuation of how to write additional\n   * `Output`.  If `output` enters the _done_ state, `pull` _must_ return a\n   * terminated `Writer`, i.e. a `Writer` in the _done_ state, or in the\n   * _error_ state.  The given `output` is only guaranteed to be valid for the\n   * duration of the method call; references to `output` must not be stored.\n   */\n  abstract pull(output: Output): Writer<I, O>;\n\n  /**\n   * Returns a `Writer` continuation whose behavior may be altered by the given\n   * out-of-band `condition`.\n   */\n  fork(condition: unknown): Writer<I, O> {\n    return this;\n  }\n\n  /**\n   * Returns the written result.  Only guaranteed to return a result when in\n   * the _done_ state.\n   *\n   * @throws `Error` if this `Writer` is not in the _done_ state.\n   */\n  bind(): O {\n    throw new WriterException();\n  }\n\n  /**\n   * Returns the write error.  Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws `Error` if this `Writer` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new WriterException();\n  }\n\n  /**\n   * Casts a done `Writer` to a different input type.  A `Writer` in the _done_\n   * state can have any input type.\n   *\n   * @throws `WriterException` if this `Writer` is not in the _done_ state.\n   */\n  asDone<I2>(): Writer<I2, O> {\n    throw new WriterException();\n  }\n\n  /**\n   * Casts an errored `Writer` to different input and output types.  A `Writer`\n   * in the _error_ state can have any input type, and any output type.\n   *\n   * @throws `WriterException` if this `Writer` is not in the _error_ state.\n   */\n  asError<I2, O2>(): Writer<I2, O2> {\n    throw new WriterException();\n  }\n\n  /**\n   * Returns a `Writer` that continues writing `that` `Writer`, after it\n   * finishes writing this `Writer`.\n   */\n  andThen<O2>(that: Writer<unknown, O2>): Writer<never, O2> {\n    return new WriterSequence(this, that);\n  }\n\n  /**\n   * Returns a `Writer` in the _done_ state that never binds a value.\n   */\n  @Lazy\n  static end<I>(): Writer<I, never> {\n    return new WriterEnd();\n  }\n\n  /**\n   * Returns a `Writer` in the _done_ state that binds the given written `value`.\n   */\n  static done<I, O>(value: O): Writer<I, O> {\n    return new WriterDone(value);\n  }\n\n  /**\n   * Returns a `Writer` in the _error_ state that traps the given write `error`.\n   */\n  static error<I, O>(error: Error): Writer<I, O> {\n    return new WriterError(error);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {WriterException} from \"../writer/WriterException\";\nimport {Writer} from \"../writer/Writer\";\n\n/** @hidden */\nexport class StringWriter extends Writer<unknown, unknown> {\n  /** @hidden */\n  readonly value!: unknown;\n  /** @hidden */\n  readonly input!: string;\n  /** @hidden */\n  readonly index!: number;\n\n  constructor(value: unknown, input: string, index: number = 0) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"input\", {\n      value: input,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      enumerable: true,\n    });\n  }\n\n  override feed(input: unknown): Writer<unknown, unknown> {\n    return new StringWriter(input, \"\" + input);\n  }\n\n  override pull(output: Output): Writer<unknown, unknown> {\n    return StringWriter.write(output, this.value, this.input, this.index);\n  }\n\n  static write(output: Output, value: unknown, input: string, index: number = 0): Writer<unknown, unknown> {\n    const length = input.length;\n    while (index < length && output.isCont()) {\n      let c = input.codePointAt(index);\n      if (c === void 0) {\n        c = input.charCodeAt(index);\n      }\n      output = output.write(c);\n      index = input.offsetByCodePoints(index, 1);\n    }\n    if (index === length) {\n      return Writer.done(value);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new StringWriter(value, input, index);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input} from \"../input/Input\";\nimport {AnyOutputSettings, OutputSettings} from \"../output/OutputSettings\";\nimport type {Output} from \"../output/Output\";\nimport type {Writer} from \"../writer/Writer\";\nimport {StringInput} from \"./StringInput\";\nimport {StringOutput} from \"./StringOutput\";\nimport {StringWriter} from \"./StringWriter\";\n\n/**\n * Unicode code point [[Input]]/[[Output]]/[[Writer]] factory.\n *\n * The `Unicode.stringInput(...)` function returns an `Input` that reads the\n * Unicode code points of a `string`.\n *\n * The `Unicode.stringOutput(...)` function returns an `Output` that writes\n * Unicode code points to an internal buffer, and [[Output.bind binds]] a\n * `string` containing all written code points.\n */\nexport const Unicode = {} as {\n  stringInput(string: string): Input;\n\n  /**\n   * Returns a new `Output` that appends Unicode code points to the given\n   * `string`, using the given output `settings`.  The returned `Output`\n   * accepts an unbounded number of code points, remaining permanently in the\n   * _cont_ state, and [[Output.bind binds]] a `string` containing the given\n   * `string`, and all appended code points.\n   */\n  stringOutput(string?: string, settings?: AnyOutputSettings): Output<string>;\n\n  /**\n   * Returns a new `Output` that buffers Unicode code points, using the given\n   * output `settings`.  The returned `Output` accepts an unbounded number of\n   * code points, remaining permanently in the _cont_ state, and [[Output.bind\n   * binds]] a `string` containing all written code points.\n   */\n  stringOutput(settings?: AnyOutputSettings): Output<string>;\n\n  stringWriter<I>(): Writer<I, unknown>;\n\n  stringWriter<I, O>(input: O): Writer<I, O>;\n\n  writeString<I>(input: unknown, output: Output): Writer<I, unknown>;\n\n  /** @hidden */\n  isAlpha(c: number): boolean;\n\n  /** @hidden */\n  isDigit(c: number): boolean;\n\n  /** @hidden */\n  isSpace(c: number): boolean;\n\n  /** @hidden */\n  isNewline(c: number): boolean;\n\n  /** @hidden */\n  isWhitespace(c: number): boolean;\n};\n\nUnicode.stringInput = function (string: string): Input {\n  return StringInput.create(string);\n};\n\nUnicode.stringOutput = function (string?: string | AnyOutputSettings, settings?: AnyOutputSettings): Output<string> {\n  if (settings === void 0 && typeof string !== \"string\") {\n    settings = string;\n    string = \"\";\n  } else if (typeof string !== \"string\") {\n    string = \"\";\n  }\n  settings = OutputSettings.fromAny(settings);\n  return new StringOutput(string, settings);\n};\n\nUnicode.stringWriter = function <I, O>(input?: O): Writer<I, unknown> {\n  if (input === void 0) {\n    return new StringWriter(void 0, \"\");\n  } else {\n    return new StringWriter(input, \"\" + input);\n  }\n};\n\nUnicode.writeString = function <I>(input: unknown, output: Output): Writer<I, unknown> {\n  return StringWriter.write(output, void 0, \"\" + input);\n};\n\nUnicode.isAlpha = function (c: number): boolean {\n  return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n      || c >= 97/*'a'*/ && c <= 122/*'z'*/;\n};\n\nUnicode.isDigit = function (c: number): boolean {\n  return c >= 48/*'0'*/ && c <= 57/*'9'*/;\n};\n\nUnicode.isSpace = function (c: number): boolean {\n  return c === 0x20 || c === 0x9;\n};\n\nUnicode.isNewline = function (c: number): boolean {\n  return c === 0xa || c === 0xd;\n};\n\nUnicode.isWhitespace = function (c: number): boolean {\n  return Unicode.isSpace(c) || Unicode.isNewline(c);\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input} from \"../input/Input\";\nimport type {Output} from \"../output/Output\";\nimport type {Parser} from \"../parser/Parser\";\nimport type {Writer} from \"../writer/Writer\";\nimport {Format} from \"../format/Format\";\nimport {Unicode} from \"../unicode/Unicode\";\nimport {Base10NumberParser} from \"../\"; // forward import\nimport {Base10IntegerWriter} from \"../\"; // forward import\n\n/**\n * Base-10 (decimal) encoding [[Parser]]/[[Writer]] factory.\n */\nexport const Base10 = {} as {\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-10 digit.\n   */\n  isDigit(c: number): boolean;\n\n  /**\n   * Returns the decimal quantity between `0` (inclusive) and `10` (exclusive)\n   * represented by the base-10 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-10 digit.\n   */\n  decodeDigit(c: number): number;\n\n  /**\n   * Returns the Unicode code point of the base-10 digit that encodes the given\n   * decimal quantity between `0` (inclusive) and `10` (exclusive).\n   */\n  encodeDigit(b: number): number;\n\n  /**\n   * Returns the number of whole decimal digits in the given absolute `value`.\n   */\n  countDigits(value: number): number;\n\n  integerParser(): Parser<number>;\n\n  parseInteger(input: Input): Parser<number>;\n\n  decimalParser(): Parser<number>;\n\n  parseDecimal(input: Input): Parser<number>;\n\n  numberParser(): Parser<number>;\n\n  parseNumber(input: Input): Parser<number>;\n\n  /**\n   * Returns a `Writer` that, when fed an input `number` value, returns a\n   * continuation that writes the base-10 (decimal) encoding of the input value.\n   */\n  integerWriter(): Writer<number, unknown>;\n\n  /**\n   * Returns a `Writer` continuation that writes the base-10 (decimal) encoding\n   * of the `input` value.\n   */\n  integerWriter(input: number): Writer<unknown, number>;\n\n  /**\n   * Writes the base-10 (decimal) encoding of the `input` value to the `output`,\n   * returning a `Writer` continuation that knows how to write any remaining\n   * output that couldn't be immediately generated.\n   */\n  writeInteger(input: number, output: Output): Writer;\n};\n\nBase10.isDigit = function (c: number): boolean {\n  return c >= 48/*'0'*/ && c <= 57/*'9'*/;\n};\n\nBase10.decodeDigit = function (c: number): number {\n  if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n    return c - 48/*'0'*/;\n  } else {\n    const message = Unicode.stringOutput();\n    message.write(\"Invalid base-10 digit: \");\n    Format.debugChar(c, message);\n    throw new Error(message.bind());\n  }\n};\n\nBase10.encodeDigit = function (b: number): number {\n  if (b >= 0 && b <= 9) {\n    return 48/*'0'*/ + b;\n  } else {\n    throw new Error(\"\" + b);\n  }\n};\n\nBase10.countDigits = function (value: number): number {\n  let size = 0;\n  do {\n    size += 1;\n    value = (value / 10) | 0;\n  } while (value !== 0);\n  return size;\n};\n\nBase10.integerParser = function (): Parser<number> {\n  return new Base10NumberParser(void 0, void 0, 0);\n};\n\nBase10.parseInteger = function (input: Input): Parser<number> {\n  return Base10NumberParser.parse(input, void 0, void 0, 0);\n};\n\nBase10.decimalParser = function (): Parser<number> {\n  return new Base10NumberParser(void 0, void 0, 1);\n};\n\nBase10.parseDecimal = function (input: Input): Parser<number> {\n  return Base10NumberParser.parse(input, void 0, void 0, 1);\n};\n\nBase10.numberParser = function (): Parser<number> {\n  return new Base10NumberParser();\n};\n\nBase10.parseNumber = function (input: Input): Parser<number> {\n  return Base10NumberParser.parse(input);\n};\n\nBase10.integerWriter = function (input?: number): Writer {\n  if (input === void 0) {\n    return new Base10IntegerWriter(void 0, 0);\n  } else {\n    return new Base10IntegerWriter(void 0, input);\n  }\n} as typeof Base10.integerWriter;\n\nBase10.writeInteger = function (input: number, output: Output): Writer {\n  return Base10IntegerWriter.write(output, void 0, input);\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values, Severity} from \"@swim/util\";\nimport type {Tag} from \"./Tag\";\nimport type {Mark} from \"./Mark\";\nimport type {Input} from \"../input/Input\";\nimport type {OutputSettings} from \"../output/OutputSettings\";\nimport type {Output} from \"../output/Output\";\nimport type {Display} from \"../format/Display\";\nimport {OutputStyle} from \"../format/OutputStyle\";\nimport {Format} from \"../format/Format\";\nimport {Unicode} from \"../unicode/Unicode\";\nimport {Base10} from \"../number/Base10\";\n\n/**\n * Informational message attached to an input location.\n */\nexport class Diagnostic implements Display {\n  constructor(input: Input, tag: Tag, severity: Severity, message: string | undefined,\n              note: string | undefined, cause: Diagnostic | null) {\n    Object.defineProperty(this, \"input\", {\n      value: input,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"tag\", {\n      value: tag,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"severity\", {\n      value: severity,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"message\", {\n      value: message,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"note\", {\n      value: note,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"cause\", {\n      value: cause,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly input!: Input;\n\n  /**\n   * The location in the `input` to which this diagnostic is attached.\n   */\n  readonly tag!: Tag;\n\n  /**\n   * The level of importance of this diagnostic.\n   */\n  readonly severity!: Severity;\n\n  /**\n   * The help message that describes this diagnostic.\n   */\n  readonly message!: string | undefined;\n\n  /**\n   * An informative comment on the source context to which this diagnostic is attached.\n   */\n  readonly note!: string | undefined;\n\n  /**\n   * The `Diagnostic` cause of this diagnostic, forming a linked chain of\n   * diagnostics, or `null` if this diagnostic has no cause.\n   */\n  readonly cause!: Diagnostic | null;\n\n  private lineDigits(): number {\n    let digits = Base10.countDigits(this.tag.end.line);\n    if (this.cause !== null) {\n      digits = Math.max(digits, this.cause.lineDigits());\n    }\n    return digits;\n  }\n\n  display(output: Output): void {\n    const input = this.input.clone();\n    const start = this.tag.start;\n    const end = this.tag.end;\n    const severity = this.severity;\n    const message = this.message;\n    const note = this.note;\n    const cause = this.cause;\n    const contextLines = 2;\n    const lineDigits = this.lineDigits();\n    Diagnostic.displayDiagnostic(input, start, end, severity, message, note,\n                                 cause, contextLines, lineDigits, output);\n  }\n\n  toString(settings?: OutputSettings): string {\n    return Format.display(this, settings);\n  }\n\n  static create(input: Input, tag: Tag, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static create(input: Input, tag: Tag, severity: Severity, message: string | undefined,\n                cause?: Diagnostic | null): Diagnostic;\n  static create(input: Input, tag: Tag, severity: Severity, message: string | undefined,\n                note: string | undefined, cause?: Diagnostic | null): Diagnostic;\n  static create(input: Input, tag: Tag, severity: Severity, message?: Diagnostic | null | string | undefined,\n                note?: Diagnostic | null | string | undefined, cause?: Diagnostic | null): Diagnostic {\n    if (arguments.length === 3) { // (input, tag, severity)\n      cause = null;\n      note = void 0;\n      message = void 0;\n    } else if (arguments.length === 4) {\n      if (message === null || message instanceof Diagnostic) { // (input, tag, severity, cause)\n        cause = message;\n        message = void 0;\n      } else { // (input, tag, severity, message)\n        cause = null;\n      }\n    } else if (arguments.length === 5) {\n      if (note === null || note instanceof Diagnostic) { // (input, tag, severity, message, cause)\n        cause = note;\n        note = void 0;\n      } else { // (input, tag, severity, message, note)\n        cause = null;\n      }\n    } else { // (input, tag, severity, message, note, cause)\n      if (cause === void 0) {\n        cause = null;\n      }\n    }\n    return new Diagnostic(input.clone(), tag, severity, message as string | undefined, note as string | undefined, cause);\n  }\n\n  static message(message: string, input: Input, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity?: Diagnostic | null | Severity | string | undefined,\n                 note?: Diagnostic | null | string | undefined, cause?: Diagnostic | null): Diagnostic {\n    if (arguments.length === 2) { // (message, input)\n      cause = null;\n      note = void 0;\n      severity = Severity.error();\n    } else if (arguments.length === 3) {\n      if (severity === null || severity instanceof Diagnostic) { // (message, input, cause)\n        cause = severity;\n        severity = Severity.error();\n      } else if (typeof severity === \"string\") { // (message, input, note)\n        cause = null;\n        note = severity;\n        severity = Severity.error();\n      } else { // (message, input, severity)\n        cause = null;\n      }\n    } else if (arguments.length === 4) {\n      if (typeof severity === \"string\") { // (message, input, note, cause)\n        cause = note as Diagnostic | null;\n        note = severity;\n        severity = Severity.error();\n      } else if (note === null || note instanceof Diagnostic) { // (message, input, severity, cause)\n        cause = note;\n        note = void 0;\n      } else { // (message, input, severity, note)\n        cause = null;\n      }\n    } else { // (message, input, severity, note, cause)\n      if (cause === void 0) {\n        cause = null;\n      }\n    }\n\n    const mark = input.mark;\n    const source = input.clone();\n    source.seek();\n    return new Diagnostic(source, mark, severity as Severity, message, note as string | undefined, cause);\n  }\n\n  static unexpected(input: Input, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity?: Diagnostic | null | Severity | string | undefined,\n                    note?: Diagnostic | null | string | undefined, cause?: Diagnostic | null): Diagnostic {\n    if (arguments.length === 1) { // (input)\n      cause = null;\n      severity = Severity.error();\n    } else if (arguments.length === 2) {\n      if (severity === null || severity instanceof Diagnostic) { // (input, cause)\n        cause = severity;\n        severity = Severity.error();\n      } else if (typeof severity === \"string\") { // (input, note)\n        cause = null;\n        note = severity;\n        severity = Severity.error();\n      } else { // (input, severity)\n        cause = null;\n      }\n    } else if (arguments.length === 3) {\n      if (typeof severity === \"string\") { // (input, note, cause)\n        cause = note as Diagnostic | null;\n        note = severity;\n        severity = Severity.error();\n      } else if (note === null || note instanceof Diagnostic) { // (input, severity, cause)\n        cause = note;\n        note = void 0;\n      } else { // (input, severity, note)\n        cause = null;\n      }\n    } else { // (input, severity, note, cause)\n      if (cause === void 0) {\n        cause = null;\n      }\n    }\n\n    let message;\n    if (input.isCont()) {\n      const output = Unicode.stringOutput().write(\"unexpected\").write(32/*' '*/);\n      Format.debugChar(input.head(), output);\n      message = output.bind();\n    } else {\n      message = \"unexpected end of input\";\n    }\n    const mark = input.mark;\n    const source = input.clone();\n    source.seek();\n    return new Diagnostic(source, mark, severity as Severity, message, note as string | undefined, cause);\n  }\n\n  static expected(expected: string | number, input: Input, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity?: Diagnostic | null | Severity | string | undefined,\n                  note?: Diagnostic | null | string | undefined, cause?: Diagnostic | null): Diagnostic {\n    if (arguments.length === 2) { // (excpected, input)\n      cause = null;\n      severity = Severity.error();\n    } else if (arguments.length === 3) {\n      if (severity === null || severity instanceof Diagnostic) { // (excpected, input, cause)\n        cause = severity;\n        severity = Severity.error();\n      } else if (typeof severity === \"string\") { // (excpected, input, note)\n        cause = null;\n        note = severity;\n        severity = Severity.error();\n      } else { // (expected, input, severity)\n        cause = null;\n      }\n    } else if (arguments.length === 4) {\n      if (typeof severity === \"string\") { // (excpected, input, note, cause)\n        cause = note as Diagnostic | null;\n        note = severity;\n        severity = Severity.error();\n      } else if (note === null || note instanceof Diagnostic) { // (excpected, input, severity, cause)\n        cause = note;\n        note = void 0;\n      } else { // (excpected, input, severity, note)\n        cause = null;\n      }\n    } else { // (excpected, input, severity, note, cause)\n      if (cause === void 0) {\n        cause = null;\n      }\n    }\n\n    let output = Unicode.stringOutput().write(\"expected\").write(32/*' '*/);\n    if (typeof expected === \"number\") {\n      Format.debugChar(expected, output);\n    } else {\n      output = output.write(expected);\n    }\n    output = output.write(44/*','*/).write(32/*' '*/).write(\"but found\").write(32/*' '*/);\n    if (input.isCont()) {\n      Format.debugChar(input.head(), output);\n    } else {\n      output = output.write(\"end of input\");\n    }\n    const message = output.bind();\n    const mark = input.mark;\n    const source = input.clone();\n    source.seek();\n    return new Diagnostic(source, mark, severity as Severity, message, note as string | undefined, cause);\n  }\n\n  private static displayDiagnostic(input: Input, start: Mark, end: Mark,\n                                   severity: Severity, message: string | undefined,\n                                   note: string | undefined, cause: Diagnostic | null,\n                                   contextLines: number, lineDigits: number,\n                                   output: Output): void {\n    do {\n      if (message !== void 0) {\n        Diagnostic.displayMessage(severity, message, output);\n        output = output.writeln();\n      }\n      Diagnostic.displayAnchor(input, start, lineDigits, output);\n      output = output.writeln();\n      const next = Diagnostic.displayContext(input, start, end, severity, note,\n                                             cause, contextLines, lineDigits, output);\n      if (next !== null) {\n        output = output.writeln();\n        input = next.input.clone();\n        start = next.tag.start;\n        end = next.tag.end;\n        severity = next.severity;\n        message = next.message;\n        note = next.note;\n        cause = next.cause;\n      } else {\n        break;\n      }\n    } while (true);\n  }\n\n  /** @hidden */\n  static displayMessage(severity: Severity, message: string | undefined, output: Output): void {\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(severity.label);\n    OutputStyle.reset(output);\n    OutputStyle.bold(output);\n    output = output.write(58/*':'*/);\n    if (message !== void 0) {\n      output = output.write(32/*' '*/).write(message);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayAnchor(input: Input, start: Mark, lineDigits: number,\n                               output: Output): void {\n    Diagnostic.displayLineLeadArrow(lineDigits, output);\n    output = output.write(32/*' '*/);\n    const id = input.id;\n    if (id !== void 0) {\n      Format.display(id, output);\n    }\n    output = output.write(58/*':'*/);\n    Format.displayNumber(start.line, output);\n    output = output.write(58/*':'*/);\n    Format.displayNumber(start.column, output);\n    output = output.writeln();\n\n    Diagnostic.displayLineLead(lineDigits, output);\n  }\n\n  private static displayCause(cause: Diagnostic, contextLines: number,\n                              lineDigits: number, output: Output): Diagnostic | null {\n    const input = cause.input.clone();\n    const start = cause.tag.start;\n    const end = cause.tag.end;\n    const severity = cause.severity;\n    const note = cause.note;\n    const next = cause.cause;\n    return Diagnostic.displayContext(input, start, end, severity, note, next,\n                                     contextLines, lineDigits, output);\n  }\n\n  private static displayContext(input: Input, start: Mark, end: Mark,\n                                severity: Severity, note: string | undefined,\n                                cause: Diagnostic | null, contextLines: number,\n                                lineDigits: number, output: Output): Diagnostic | null {\n    let next = cause;\n    const sameCause = cause !== null && cause.message === void 0\n                   && Values.equal(input.id, cause.input.id);\n    const causeOrder = sameCause ? (start.offset <= cause!.tag.start.offset ? -1 : 1) : 0;\n    if (causeOrder === 1) {\n      next = Diagnostic.displayCause(cause!, contextLines, lineDigits, output);\n      output = output.writeln();\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.writeln();\n    }\n    Diagnostic.displayLines(input, start, end, severity, contextLines, lineDigits, output);\n    if (note !== void 0) {\n      Diagnostic.displayNote(note, lineDigits, output);\n    }\n    if (causeOrder === -1) {\n      output = output.writeln();\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.writeln();\n      next = Diagnostic.displayCause(cause!, contextLines, lineDigits, output);\n    }\n    return next;\n  }\n\n  private static displayLines(input: Input, start: Mark, end: Mark,\n                              severity: Severity, contextLines: number,\n                              lineDigits: number, output: Output): void {\n    const startLine = start.line;\n    const endLine = end.line;\n    let line = input.line;\n\n    while (line < startLine) {\n      Diagnostic.consumeLineText(input, line);\n      line += 1;\n    }\n\n    if (endLine - startLine > 2 * contextLines + 2) {\n      while (line <= startLine + contextLines) {\n        Diagnostic.displayLine(input, start, end, severity, line, lineDigits, output);\n        line += 1;\n      }\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.write(32/*' '*/);\n      Diagnostic.formatSeverity(severity, output);\n      output = output.write(124/*'|'*/);\n      OutputStyle.reset(output);\n      output = output.writeln();\n      while (line < endLine - contextLines) {\n        Diagnostic.consumeLineText(input, line);\n        line += 1;\n      }\n    }\n\n    while (line <= endLine) {\n      Diagnostic.displayLine(input, start, end, severity, line, lineDigits, output);\n      line += 1;\n    }\n  }\n\n  private static displayNote(note: string | undefined, lineDigits: number, output: Output): void {\n    output = output.writeln();\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.writeln();\n    Diagnostic.displayLineComment('note', note, lineDigits, output);\n  }\n\n  private static displayLine(input: Input, start: Mark, end: Mark,\n                             severity: Severity, line: number,\n                             lineDigits: number, output: Output): void {\n    if (start.line === line && end.line === line) {\n      Diagnostic.displaySingleLine(input, start, end, severity, line, lineDigits, output);\n    } else if (start.line === line) {\n      Diagnostic.displayStartLine(input, start, severity, line, lineDigits, output);\n    } else if (end.line === line) {\n      Diagnostic.displayEndLine(input, end, severity, line, lineDigits, output);\n    } else {\n      Diagnostic.displayMidLine(input, severity, line, lineDigits, output);\n    }\n  }\n\n  private static displaySingleLine(input: Input, start: Mark, end: Mark,\n                                   severity: Severity, line: number,\n                                   lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    for (let i = 1; i < input.column; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/);\n    let i = 1;\n    while (i < start.column) {\n      output = output.write(32/*' '*/);\n      i += 1;\n    }\n    Diagnostic.formatSeverity(severity, output);\n    while (i <= end.column) {\n      output = output.write(94/*'^'*/);\n      i += 1;\n    }\n    if (end.note !== void 0) {\n      output = output.write(32/*' '*/).write(end.note);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayStartLine(input: Input, start: Mark,\n                                  severity: Severity, line: number,\n                                  lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/).write(32/*' '*/).write(32/*' '*/);\n    for (let i = 1; i < input.column; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/).write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(95/*'_'*/);\n    let i = 1;\n    while (i < start.column) {\n      output = output.write(95/*'_'*/);\n      i += 1;\n    }\n    output = output.write(94/*'^'*/);\n    if (start.note !== void 0) {\n      output = output.write(32/*' '*/).write(start.note);\n    }\n    OutputStyle.reset(output);\n    output = output.writeln();\n  }\n\n  private static displayEndLine(input: Input, end: Mark,\n                                severity: Severity, line: number,\n                                lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/);\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/).write(95/*'_'*/);\n    let i = 1;\n    while (i < end.column) {\n      output = output.write(95/*'_'*/);\n      i += 1;\n    }\n    output = output.write(94/*'^'*/);\n    if (end.note !== void 0) {\n      output = output.write(32/*' '*/).write(end.note);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayMidLine(input: Input, severity: Severity, line: number,\n                                lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/);\n    Diagnostic.displayLineText(input, line, output);\n  }\n\n  private static displayLineComment(label: string, comment: string | undefined,\n                                    lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadComment(lineDigits, output);\n    output = output.write(32/*' '*/);\n    OutputStyle.bold(output);\n    output = output.write(label).write(58/*':'*/);\n    OutputStyle.reset(output);\n    if (comment !== void 0) {\n      output = output.write(32/*' '*/).write(comment);\n    }\n  }\n\n  private static displayLineLead(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    const padding = 1 + lineDigits;\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadComment(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    const padding = 1 + lineDigits;\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    output = output.write(61/*'='*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadArrow(lineDigits: number, output: Output): void {\n    for (let i = 0; i < lineDigits; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    OutputStyle.blueBold(output);\n    output = output.write(45/*'-'*/).write(45/*'-'*/).write(62/*'>'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadEllipsis(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    for (let i = 0; i < lineDigits; i += 1) {\n      output = output.write(46/*'.'*/);\n    }\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/).write(32/*' '*/);\n  }\n\n  private static displayLineLeadNumber(line: number, lineDigits: number, output: Output): void {\n    const padding = lineDigits - Base10.countDigits(line);\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    OutputStyle.blueBold(output);\n    Format.displayNumber(line, output);\n    output = output.write(32/*' '*/).write(124/*'|'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineText(input: Input, line: number, output: Output): void {\n    while (input.isCont() && input.line === line) {\n      output = output.write(input.head());\n      input = input.step();\n    }\n    if (input.line === line) {\n      output = output.writeln();\n    }\n  }\n\n  private static consumeLineText(input: Input, line: number): void {\n    while (input.isCont() && input.line === line) {\n      input = input.step();\n    }\n  }\n\n  private static formatSeverity(severity: Severity, output: Output): void {\n    switch (severity.level) {\n      case Severity.FATAL_LEVEL:\n      case Severity.ALERT_LEVEL:\n      case Severity.ERROR_LEVEL:\n        OutputStyle.redBold(output);\n        break;\n      case Severity.WARNING_LEVEL:\n        OutputStyle.yellowBold(output);\n        break;\n      case Severity.NOTE_LEVEL:\n        OutputStyle.greenBold(output);\n        break;\n      case Severity.INFO_LEVEL:\n        OutputStyle.cyanBold(output);\n        break;\n      case Severity.DEBUG_LEVEL:\n      case Severity.TRACE_LEVEL:\n      default:\n        OutputStyle.magentaBold(output);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mark} from \"../source/Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {Input} from \"./Input\";\nimport {InputDone} from \"../\"; // forward import\nimport {InputError} from \"../\"; // forward import\n\n/** @hidden */\nexport class InputEmpty extends Input {\n  constructor(id: string | undefined, mark: Mark, settings: InputSettings) {\n    super();\n    Object.defineProperty(this, \"id\", {\n      value: id,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mark\", {\n      value: mark,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isEmpty(): boolean {\n    return true;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return true;\n  }\n\n  override asPart(part: boolean): Input {\n    return part ? this : new InputDone(this.id, this.mark, this.settings);\n  }\n\n  override head(): number {\n    throw new InputException();\n  }\n\n  override step(): Input {\n    const error = new InputException(\"empty step\");\n    return new InputError(error, this.id, this.mark, this.settings);\n  }\n\n  override seek(mark?: Mark): Input {\n    const error = new InputException(\"empty seek\");\n    return new InputError(error, this.id, this.mark, this.settings);\n  }\n\n  override readonly id!: string | undefined;\n\n  override withId(id: string | undefined): Input {\n    return new InputEmpty(id, this.mark, this.settings);\n  }\n\n  override readonly mark!: Mark;\n\n  override withMark(mark: Mark): Input {\n    return new InputEmpty(this.id, mark, this.settings);\n  }\n\n  override get offset(): number {\n    return this.mark.offset;\n  }\n\n  override get line(): number {\n    return this.mark.line;\n  }\n\n  override get column(): number {\n    return this.mark.column;\n  }\n\n  override readonly settings!: InputSettings;\n\n  override withSettings(settings: AnyInputSettings): Input {\n    settings = InputSettings.fromAny(settings);\n    return new InputEmpty(this.id, this.mark, settings);\n  }\n\n  override clone(): Input {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mark} from \"../source/Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {Input} from \"./Input\";\nimport {InputEmpty} from \"../\"; // forward import\nimport {InputError} from \"../\"; // forward import\n\n/** @hidden */\nexport class InputDone extends Input {\n  constructor(id: string | undefined, mark: Mark, settings: InputSettings) {\n    super();\n    Object.defineProperty(this, \"id\", {\n      value: id,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mark\", {\n      value: mark,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isEmpty(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return true;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): Input {\n    return part ? new InputEmpty(this.id, this.mark, this.settings) : this;\n  }\n\n  override head(): number {\n    throw new InputException();\n  }\n\n  override step(): Input {\n    const error = new InputException(\"done step\");\n    return new InputError(error, this.id, this.mark, this.settings);\n  }\n\n  override seek(mark?: Mark): Input {\n    const error = new InputException(\"empty seek\");\n    return new InputError(error, this.id, this.mark, this.settings);\n  }\n\n  override readonly id!: string | undefined;\n\n  override withId(id: string | undefined): Input {\n    return new InputDone(id, this.mark, this.settings);\n  }\n\n  override readonly mark!: Mark;\n\n  override withMark(mark: Mark): Input {\n    return new InputDone(this.id, mark, this.settings);\n  }\n\n  override get offset(): number {\n    return this.mark.offset;\n  }\n\n  override get line(): number {\n    return this.mark.line;\n  }\n\n  override get column(): number {\n    return this.mark.column;\n  }\n\n  override readonly settings!: InputSettings;\n\n  override withSettings(settings: AnyInputSettings): Input {\n    settings = InputSettings.fromAny(settings);\n    return new InputDone(this.id, this.mark, settings);\n  }\n\n  override clone(): Input {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {Mark} from \"../source/Mark\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {Input} from \"./Input\";\nimport {InputBufferEmpty} from \"../\"; // forward import\nimport {InputBufferDone} from \"../\"; // forward import\nimport {InputBufferError} from \"../\"; // forward import\n\n/**\n * Non-blocking token stream buffer.\n */\nexport abstract class InputBuffer extends Input {\n  abstract override asPart(part: boolean): InputBuffer;\n\n  abstract readonly index: number;\n\n  abstract withIndex(index: number): InputBuffer;\n\n  abstract readonly limit: number;\n\n  abstract withLimit(limit: number): InputBuffer;\n\n  abstract readonly capacity: number;\n\n  abstract readonly remaining: number;\n\n  abstract has(index: number): boolean;\n\n  abstract get(index: number): number;\n\n  abstract set(index: number, token: number): void;\n\n  abstract override step(offset?: number): InputBuffer;\n\n  abstract override seek(mark: Mark): InputBuffer;\n\n  abstract override withId(id: string | undefined): InputBuffer;\n\n  abstract override withMark(mark: Mark): InputBuffer;\n\n  abstract override withSettings(settings: AnyInputSettings): InputBuffer;\n\n  abstract override clone(): InputBuffer;\n\n  /**\n   * Returns an `InputBuffer` in the _empty_ state.\n   */\n  @Lazy\n  static override empty(): InputBuffer {\n    return new InputBufferEmpty(void 0, Mark.zero, InputSettings.standard());\n  }\n\n  /**\n   * Returns an `InputBuffer` in the _done_ state.\n   */\n  @Lazy\n  static override done(): InputBuffer {\n    return new InputBufferDone(void 0, Mark.zero, InputSettings.standard());\n  }\n\n  /**\n   * Returns an `InputBuffer` in the _error_ state that traps the given `error`.\n   */\n  static override error(error: Error): InputBuffer {\n    return new InputBufferError(error, void 0, Mark.zero, InputSettings.standard());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mark} from \"../source/Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {InputBuffer} from \"./InputBuffer\";\nimport {InputBufferDone} from \"../\"; // forward import\nimport {InputBufferError} from \"../\"; // forward import\n\n/** @hidden */\nexport class InputBufferEmpty extends InputBuffer {\n  constructor(id: string | undefined, mark: Mark, settings: InputSettings) {\n    super();\n    Object.defineProperty(this, \"id\", {\n      value: id,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mark\", {\n      value: mark,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isEmpty(): boolean {\n    return true;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return true;\n  }\n\n  override asPart(part: boolean): InputBuffer {\n    return part ? this : new InputBufferDone(this.id, this.mark, this.settings);\n  }\n\n  override get index(): number {\n    return 0;\n  }\n\n  override withIndex(index: number): InputBuffer {\n    if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return new InputBufferError(error, this.id, this.mark, this.settings);\n    }\n  }\n\n  override get limit(): number {\n    return 0;\n  }\n\n  override withLimit(limit: number): InputBuffer {\n    if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return new InputBufferError(error, this.id, this.mark, this.settings);\n    }\n  }\n\n  override get capacity(): number {\n    return 0;\n  }\n\n  override get remaining(): number {\n    return 0;\n  }\n\n  override has(index: number): boolean {\n    return false;\n  }\n\n  override get(index: number): number {\n    throw new InputException();\n  }\n\n  override set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  override head(): number {\n    throw new InputException();\n  }\n\n  override step(offset?: number): InputBuffer {\n    const error = new InputException(\"empty step\");\n    return new InputBufferError(error, this.id, this.mark, this.settings);\n  }\n\n  override seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"empty seek\");\n    return new InputBufferError(error, this.id, this.mark, this.settings);\n  }\n\n  override readonly id!: string | undefined;\n\n  override withId(id: string | undefined): InputBuffer {\n    return new InputBufferEmpty(id, this.mark, this.settings);\n  }\n\n  override readonly mark!: Mark;\n\n  override withMark(mark: Mark): InputBuffer {\n    return new InputBufferEmpty(this.id, mark, this.settings);\n  }\n\n  override get offset(): number {\n    return this.mark.offset;\n  }\n\n  override get line(): number {\n    return this.mark.line;\n  }\n\n  override get column(): number {\n    return this.mark.column;\n  }\n\n  override readonly settings!: InputSettings;\n\n  override withSettings(settings: AnyInputSettings): InputBuffer {\n    settings = InputSettings.fromAny(settings);\n    return new InputBufferEmpty(this.id, this.mark, settings);\n  }\n\n  override clone(): InputBuffer {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mark} from \"../source/Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {InputBuffer} from \"./InputBuffer\";\nimport {InputBufferEmpty} from \"../\"; // forward import\nimport {InputBufferError} from \"../\"; // forward import\n\n/** @hidden */\nexport class InputBufferDone extends InputBuffer {\n  constructor(id: string | undefined, mark: Mark, settings: InputSettings) {\n    super();\n    Object.defineProperty(this, \"id\", {\n      value: id,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mark\", {\n      value: mark,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isEmpty(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return true;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): InputBuffer {\n    return part ? new InputBufferEmpty(this.id, this.mark, this.settings) : this;\n  }\n\n  override get index(): number {\n    return 0;\n  }\n\n  override withIndex(index: number): InputBuffer {\n    if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return new InputBufferError(error, this.id, this.mark, this.settings);\n    }\n  }\n\n  override get limit(): number {\n    return 0;\n  }\n\n  override withLimit(limit: number): InputBuffer {\n    if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return new InputBufferError(error, this.id, this.mark, this.settings);\n    }\n  }\n\n  override get capacity(): number {\n    return 0;\n  }\n\n  override get remaining(): number {\n    return 0;\n  }\n\n  override has(index: number): boolean {\n    return false;\n  }\n\n  override get(index: number): number {\n    throw new InputException();\n  }\n\n  override set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  override head(): number {\n    throw new InputException();\n  }\n\n  override step(offset?: number): InputBuffer {\n    const error = new InputException(\"done step\");\n    return new InputBufferError(error, this.id, this.mark, this.settings);\n  }\n\n  override seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"done seek\");\n    return new InputBufferError(error, this.id, this.mark, this.settings);\n  }\n\n  override readonly id!: string | undefined;\n\n  override withId(id: string | undefined): InputBuffer {\n    return new InputBufferDone(id, this.mark, this.settings);\n  }\n\n  override readonly mark!: Mark;\n\n  override withMark(mark: Mark): InputBuffer {\n    return new InputBufferDone(this.id, mark, this.settings);\n  }\n\n  override get offset(): number {\n    return this.mark.offset;\n  }\n\n  override get line(): number {\n    return this.mark.line;\n  }\n\n  override get column(): number {\n    return this.mark.column;\n  }\n\n  override readonly settings!: InputSettings;\n\n  override withSettings(settings: AnyInputSettings): InputBuffer {\n    settings = InputSettings.fromAny(settings);\n    return new InputBufferDone(this.id, this.mark, settings);\n  }\n\n  override clone(): InputBuffer {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mark} from \"../source/Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {InputBuffer} from \"./InputBuffer\";\n\n/** @hidden */\nexport class InputBufferError extends InputBuffer {\n  /** @hidden */\n  readonly error!: Error;\n\n  constructor(error: Error, id: string | undefined, mark: Mark, settings: InputSettings) {\n    super();\n    Object.defineProperty(this, \"error\", {\n      value: error,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"id\", {\n      value: id,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mark\", {\n      value: mark,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isEmpty(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return true;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): InputBuffer {\n    return this;\n  }\n\n  override get index(): number {\n    return 0;\n  }\n\n  override withIndex(index: number): InputBuffer {\n    if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return new InputBufferError(error, this.id, this.mark, this.settings);\n    }\n  }\n\n  override get limit(): number {\n    return 0;\n  }\n\n  override withLimit(limit: number): InputBuffer {\n    if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return new InputBufferError(error, this.id, this.mark, this.settings);\n    }\n  }\n\n  override get capacity(): number {\n    return 0;\n  }\n\n  override get remaining(): number {\n    return 0;\n  }\n\n  override has(index: number): boolean {\n    return false;\n  }\n\n  override get(index: number): number {\n    throw new InputException();\n  }\n\n  override set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  override head(): number {\n    throw new InputException();\n  }\n\n  override step(offset?: number): InputBuffer {\n    const error = new InputException(\"error step\");\n    return new InputBufferError(error, this.id, this.mark, this.settings);\n  }\n\n  override trap(): Error {\n    return this.error;\n  }\n\n  override seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"error seek\");\n    return new InputBufferError(error, this.id, this.mark, this.settings);\n  }\n\n  override readonly id!: string | undefined;\n\n  withId(id: string | undefined): InputBuffer {\n    return new InputBufferError(this.error, id, this.mark, this.settings);\n  }\n\n  override readonly mark!: Mark;\n\n  override withMark(mark: Mark): InputBuffer {\n    return new InputBufferError(this.error, this.id, mark, this.settings);\n  }\n\n  override get offset(): number {\n    return this.mark.offset;\n  }\n\n  override get line(): number {\n    return this.mark.line;\n  }\n\n  override get column(): number {\n    return this.mark.column;\n  }\n\n  override readonly settings!: InputSettings;\n\n  override withSettings(settings: AnyInputSettings): InputBuffer {\n    settings = InputSettings.fromAny(settings);\n    return new InputBufferError(this.error, this.id, this.mark, settings);\n  }\n\n  override clone(): InputBuffer {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {OutputDone} from \"../\"; // forward import\nimport {OutputError} from \"../\"; // forward import\n\n/** @hidden */\nexport class OutputFull extends Output<never> {\n  constructor(settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isFull(): boolean {\n    return true;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return true;\n  }\n\n  override asPart(part: boolean): Output<never> {\n    return part ? this : new OutputDone(this.settings);\n  }\n\n  override write(token: number): Output<never>;\n  override write(string: string): Output<never>;\n  override write(tokenOrString: number | string): Output<never> {\n    return new OutputError(new OutputException(\"full\"), this.settings);\n  }\n\n  override writeln(string?: string): Output<never> {\n    return new OutputError(new OutputException(\"full\"), this.settings);\n  }\n\n  override bind(): never {\n    throw new OutputException();\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): Output<never> {\n    settings = OutputSettings.fromAny(settings);\n    return new OutputFull(settings);\n  }\n\n  override clone(): Output<never> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {OutputFull} from \"../\"; // forward import\nimport {OutputError} from \"../\"; // forward import\n\n/** @hidden */\nexport class OutputDone extends Output<never> {\n  constructor(settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isFull(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return true;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): Output<never> {\n    return part ? new OutputFull(this.settings) : this;\n  }\n\n  override write(token: number): Output<never>;\n  override write(string: string): Output<never>;\n  override write(tokenOrString: number | string): Output<never> {\n    return new OutputError(new OutputException(\"done\"), this.settings);\n  }\n\n  override writeln(string?: string): Output<never> {\n    return new OutputError(new OutputException(\"done\"), this.settings);\n  }\n\n  override bind(): never {\n    throw new OutputException();\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): Output<never> {\n    settings = OutputSettings.fromAny(settings);\n    return new OutputDone(settings);\n  }\n\n  override clone(): Output<never> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\n\n/** @hidden */\nexport class OutputError extends Output<never> {\n  /** @hidden */\n  readonly error!: Error;\n\n  constructor(error: Error, settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"error\", {\n      value: error,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isFull(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return true;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): Output<never> {\n    return this;\n  }\n\n  override write(token: number): Output<never>;\n  override write(string: string): Output<never>;\n  override write(tokenOrString: number | string): Output<never> {\n    return this;\n  }\n\n  override writeln(string?: string): Output<never> {\n    return this;\n  }\n\n  override bind(): never {\n    throw new OutputException();\n  }\n\n  override trap(): Error {\n    return this.error;\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): Output<never> {\n    settings = OutputSettings.fromAny(settings);\n    return new OutputError(this.error, settings);\n  }\n\n  override clone(): Output<never> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {OutputBufferFull} from \"../\"; // forward import\nimport {OutputBufferDone} from \"../\"; // forward import\nimport {OutputBufferError} from \"../\"; // forward import\nimport {Format} from \"../\"; // forward import\n\n/**\n * Non-blocking token stream buffer.\n */\nexport abstract class OutputBuffer<T = unknown> extends Output<T> {\n  abstract override asPart(part: boolean): OutputBuffer<T>;\n\n  abstract readonly index: number;\n\n  abstract withIndex(index: number): OutputBuffer<T>;\n\n  abstract readonly limit: number;\n\n  abstract withLimit(limit: number): OutputBuffer<T>;\n\n  abstract readonly capacity: number;\n\n  abstract readonly remaining: number;\n\n  abstract has(index: number): boolean;\n\n  abstract get(index: number): number;\n\n  abstract set(index: number, token: number): void;\n\n  abstract override write(token: number): OutputBuffer<T>;\n  abstract override write(string: string): OutputBuffer<T>;\n\n  override writeln(string?: string): OutputBuffer<T> {\n    if (typeof string === \"string\") {\n      this.write(string);\n    }\n    return this.write(this.settings.lineSeparator);\n  }\n\n  override display(object: unknown): OutputBuffer<T> {\n    Format.display(object, this);\n    return this;\n  }\n\n  override debug(object: unknown): OutputBuffer<T> {\n    Format.debug(object, this);\n    return this;\n  }\n\n  abstract step(offset?: number): OutputBuffer<T>;\n\n  override flush(): OutputBuffer<T> {\n    return this;\n  }\n\n  abstract override withSettings(settings: AnyOutputSettings): Output<T>;\n\n  override clone(): OutputBuffer<T> {\n    throw new Error();\n  }\n\n  /**\n   * Returns an `OutputBuffer` in the _full_ state.\n   */\n  @Lazy\n  static override full(): OutputBuffer<never> {\n    return new OutputBufferFull(OutputSettings.standard());\n  }\n\n  /**\n   * Returns an `OutputBuffer` in the _done_ state.\n   */\n  @Lazy\n  static override done(): OutputBuffer<never> {\n    return new OutputBufferDone(OutputSettings.standard());\n  }\n\n  /**\n   * Returns an `OutputBuffer` in the _error_ state that traps the given `error`.\n   */\n  static override error(error: Error): OutputBuffer<never> {\n    return new OutputBufferError(error, OutputSettings.standard());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {OutputBuffer} from \"./OutputBuffer\";\nimport {OutputBufferDone} from \"../\"; // forward import\nimport {OutputBufferError} from \"../\"; // forward import\n\n/** @hidden */\nexport class OutputBufferFull extends OutputBuffer<never> {\n  constructor(settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isFull(): boolean {\n    return true;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return true;\n  }\n\n  override asPart(part: boolean): OutputBuffer<never> {\n    return part ? this : new OutputBufferDone(this.settings);\n  }\n\n  override get index(): number {\n    return 0;\n  }\n\n  override withIndex(index: number): OutputBuffer<never> {\n    if (index === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid index\"), this.settings);\n    }\n  }\n\n  override get limit(): number {\n    return 0;\n  }\n\n  override withLimit(limit: number): OutputBuffer<never> {\n    if (limit === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid limit\"), this.settings);\n    }\n  }\n\n  override get capacity(): number {\n    return 0;\n  }\n\n  override get remaining(): number {\n    return 0;\n  }\n\n  override has(index: number): boolean {\n    return false;\n  }\n\n  override get(index: number): number {\n    throw new OutputException();\n  }\n\n  override set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  override write(token: number): OutputBuffer<never>;\n  override write(string: string): OutputBuffer<never>;\n  override write(tokenOrString: number | string): OutputBuffer<never> {\n    return new OutputBufferError(new OutputException(\"full\"), this.settings);\n  }\n\n  override writeln(string?: string): OutputBuffer<never> {\n    return new OutputBufferError(new OutputException(\"full\"), this.settings);\n  }\n\n  override step(offset: number = 1): OutputBuffer<never> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid step\"), this.settings);\n    }\n  }\n\n  override bind(): never {\n    throw new OutputException();\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): OutputBuffer<never> {\n    settings = OutputSettings.fromAny(settings);\n    return new OutputBufferFull(settings);\n  }\n\n  override clone(): OutputBuffer<never> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {OutputBuffer} from \"./OutputBuffer\";\nimport {OutputBufferFull} from \"../\"; // forward import\nimport {OutputBufferError} from \"../\"; // forward import\n\n/** @hidden */\nexport class OutputBufferDone extends OutputBuffer<never> {\n  constructor(settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isFull(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return true;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): OutputBuffer<never> {\n    return part ? new OutputBufferFull(this.settings) : this;\n  }\n\n  override get index(): number {\n    return 0;\n  }\n\n  override withIndex(index: number): OutputBuffer<never> {\n    if (index === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid index\"), this.settings);\n    }\n  }\n\n  override get limit(): number {\n    return 0;\n  }\n\n  override withLimit(limit: number): OutputBuffer<never> {\n    if (limit === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid limit\"), this.settings);\n    }\n  }\n\n  override get capacity(): number {\n    return 0;\n  }\n\n  override get remaining(): number {\n    return 0;\n  }\n\n  override has(index: number): boolean {\n    return false;\n  }\n\n  override get(index: number): number {\n    throw new OutputException();\n  }\n\n  override set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  override write(token: number): OutputBuffer<never>;\n  override write(string: string): OutputBuffer<never>;\n  override write(tokenOrString: number | string): OutputBuffer<never> {\n    return new OutputBufferError(new OutputException(\"done\"), this.settings);\n  }\n\n  override writeln(string?: string): OutputBuffer<never> {\n    return new OutputBufferError(new OutputException(\"done\"), this.settings);\n  }\n\n  override step(offset: number = 1): OutputBuffer<never> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid step\"), this.settings);\n    }\n  }\n\n  override bind(): never {\n    throw new OutputException();\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): OutputBuffer<never> {\n    settings = OutputSettings.fromAny(settings);\n    return new OutputBufferDone(settings);\n  }\n\n  override clone(): OutputBuffer<never> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {OutputBuffer} from \"./OutputBuffer\";\n\n/** @hidden */\nexport class OutputBufferError extends OutputBuffer<never> {\n  /** @hidden */\n  readonly error!: Error;\n\n  constructor(error: Error, settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"error\", {\n      value: error,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isFull(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return true;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): OutputBuffer<never> {\n    return this;\n  }\n\n  override get index(): number {\n    return 0;\n  }\n\n  override withIndex(index: number): OutputBuffer<never> {\n    if (index === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid index\"), this.settings);\n    }\n  }\n\n  override get limit(): number {\n    return 0;\n  }\n\n  override withLimit(limit: number): OutputBuffer<never> {\n    if (limit === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid limit\"), this.settings);\n    }\n  }\n\n  override get capacity(): number {\n    return 0;\n  }\n\n  override get remaining(): number {\n    return 0;\n  }\n\n  override has(index: number): boolean {\n    return false;\n  }\n\n  override get(index: number): number {\n    throw new OutputException();\n  }\n\n  override set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  override write(token: number): OutputBuffer<never>;\n  override write(string: string): OutputBuffer<never>;\n  override write(tokenOrString: number | string): OutputBuffer<never> {\n    return this;\n  }\n\n  override writeln(string?: string): OutputBuffer<never> {\n    return this;\n  }\n\n  override step(offset: number = 1): OutputBuffer<never> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid step\"), this.settings);\n    }\n  }\n\n  override bind(): never {\n    throw new OutputException();\n  }\n\n  override trap(): Error {\n    return this.error;\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): OutputBuffer<never> {\n    settings = OutputSettings.fromAny(settings);\n    return new OutputBufferError(this.error, settings);\n  }\n\n  override clone(): OutputBuffer<never> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when a [[Parser]] parses invalid syntax.\n */\nimport {Diagnostic} from \"../source/Diagnostic\";\n\nexport class ParserException extends Error {\n  readonly diagnostic!: Diagnostic | null;\n\n  constructor(message?: Diagnostic | string) {\n    super(message instanceof Diagnostic ? message.message : message);\n    Object.setPrototypeOf(this, ParserException.prototype);\n    Object.defineProperty(this, \"diagnostic\", {\n      value: message instanceof Diagnostic ? message : null,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override toString(): string {\n    if (this.diagnostic !== null) {\n      return this.diagnostic.toString();\n    } else {\n      return super.toString();\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Diagnostic} from \"../source/Diagnostic\";\nimport type {Input} from \"../input/Input\";\nimport {ParserException} from \"./ParserException\";\nimport {ParserDone} from \"../\"; // forward import\nimport {ParserError} from \"../\"; // forward import\n\n/**\n * Continuation of how to parse subsequent [[Input]] tokens from a stream.\n * `Parser` enables efficient, interruptible parsing of network protocols and\n * data formats, without intermediate buffering.\n *\n * ### Input tokens\n * A `Parser` reads tokens from an `Input` reader.  Input tokens are modeled as\n * primitive numbers, commonly representing Unicode code points, or raw octets.\n * Each `Parser` implementation specifies the semantic type of input tokens it\n * consumes.\n *\n * ### Parser states\n * A `Parser` is always in one of three states: _cont_​inue, _done_, or _error_.\n * The _cont_ state indicates that [[feed]] is ready to consume `Input`; the\n * _done_ state indicates that parsing terminated successfully, and that\n * [[bind]] will return the parsed result; the _error_ state indicates that\n * parsing terminated in failure, and that [[trap]] will return the parse error.\n * `Parser` subclasses default to the _cont_ state.\n *\n * ### Feeding input\n * The [[feed]] method incrementally parses as much `Input` as it can, before\n * returning another `Parser` that represents the continuation of how to parse\n * additional `Input`.  The `Input` passed to `feed` is only guaranteed to be\n * valid for the duration of the method call; references to the provided `Input`\n * instance must not be stored.\n *\n * ### Parser results\n * A `Parser` produces a parsed result of type `O`, obtained via the [[bind]]\n * method.  `bind` is only guaranteed to return a result when in the _done_\n * state; though `bind` may optionally make available partial results in other\n * states.  A failed `Parser` provides a parse error via the [[trap]] method.\n * `trap` is only guaranteed to return an error when in the _error_ state.\n *\n * ### Continuations\n * A `Parser` instance represents a continuation of how to parse remaining\n * `Input`.  Rather than parsing a complete input in one go, a `Parser` takes\n * an `Input` chunk and returns another `Parser` instance that knows how to\n * parse subsequent `Input` chunks.  This enables non-blocking, incremental\n * parsing that can be interrupted whenever an `Input` reader runs out of\n * immediately available data.  A `Parser` terminates by returning a\n * continuation in either the _done_ state, or the _error_ state.\n * [[Parser.done]] returns a `Parser` in the _done_ state.  [[Parser.error]]\n * returns a `Parser` in the _error_ state.\n *\n * ### Iteratees\n * `Parser` is an [Iteratee](https://en.wikipedia.org/wiki/Iteratee).  Though\n * unlike strictly functional iteratees, a `Parser` statefully iterates over\n * its `Input`, rather than allocating an object for each incremental input\n * continutaion.  This internal mutability minimizes garbage collector memory\n * pressure, without violating the functional Iteratee abstraction, provided\n * that `feed` logically takes exclusive ownership of its `Input` when invoked,\n * and logically returns ownership of the `Input` in a state that's consistent\n * with the returned `Parser` continuation.\n *\n * ### Immutability\n * A `Parser` should be immutable.  Specifically, an invocation of `feed`\n * should not alter the behavior of future calls to `feed` on the same `Parser`\n * instance.  A `Parser` should only mutate its internal state if it's essential\n * to do so, such as for critical path performance reasons.\n *\n * ### Backtracking\n * `feed` can internally [[Input.clone clone]] its `Input`, if it might need to\n * backtrack.  Keep in mind that, because `Input` is only valid for the duration\n * of a call to `feed`, input must be internally buffered if it needs to be\n * preserved between `feed` invocations.\n *\n * ### Forking\n * The [[fork]] method passes an out-of-band condition to a `Parser`, yielding\n * a `Parser` continuation whose behavior may be altered by the given condition.\n * For example, an HTML `Parser` might `fork` an inner text parser to directly\n * parse an embedded micro format out of an HTML element, based on some\n * out-of-band schema information.  The types of conditions accepted by `fork`,\n * and their intended semantics, are implementation defined.\n */\nexport abstract class Parser<O> {\n  /**\n   * Returns `true` when [[feed]] is able to consume `Input`.  i.e. this\n   * `Parser` is in the _cont_ state.\n   */\n  isCont(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` when parsing has terminated successfully, and [[bind]] will\n   * return the parsed result.  i.e. this `Parser` is in the _done_ state.\n   */\n  isDone(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns `true` when parsing has terminated in failure, and [[trap]] will\n   * return the parse error.  i.e. this `Parser` is in the _error_ state.\n   */\n  isError(): boolean {\n    return false;\n  }\n\n  /**\n   * Incrementally parses as much `input` as possible, and returns another\n   * `Parser` that represents the continuation of how to parse additional\n   * `Input`.  If `input` enters the _done_ state, `feed` _must_ return a\n   * terminated `Parser`, i.e. a `Parser` in the _done_ state, or in the\n   * _error_ state.  The given `input` is only guaranteed to be valid for the\n   * duration of the method call; references to `input` must not be stored.\n   */\n  abstract feed(input: Input): Parser<O>;\n\n  /**\n   * Returns a `Parser` continuation whose behavior may be altered by the\n   * given out-of-band `condition`.\n   */\n  fork(condition: unknown): Parser<O> {\n    return this;\n  }\n\n  /**\n   * Returns the parsed result.  Only guaranteed to return a result when in the\n   * _done_ state.\n   *\n   * @throws `Error` if this `Parser is not in the _done_ state.\n   */\n  bind(): O {\n    throw new ParserException();\n  }\n\n  /**\n   * Returns the parse error.  Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws `Error` if this `Parser` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new ParserException();\n  }\n\n  /**\n   * Casts an errored `Parser` to a different output type.  A `Parser` in the\n   * _error_ state can have any output type.\n   *\n   * @throws `ParserException` if this `Parser` is not in the _error_ state.\n   */\n  asError<O2>(): Parser<O2> {\n    throw new ParserException();\n  }\n\n  /**\n   * Returns a `Parser` in the _done_ state that binds the given parsed `value`.\n   */\n  static done<O>(value: O): Parser<O> {\n    return new ParserDone(value);\n  }\n\n  /**\n   * Returns a `Parser` in the _error_ state that `trap`s the given parse `error`.\n   */\n  static error<O>(error: Error | Diagnostic): Parser<O> {\n    if (error instanceof Error) {\n      return new ParserError(error);\n    } else {\n      return new ParserError(new ParserException(error));\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input} from \"../input/Input\";\nimport {Parser} from \"./Parser\";\n\n/** @hidden */\nexport class ParserDone<O> extends Parser<O> {\n  /** @hidden */\n  readonly value!: O;\n\n  constructor(value: O) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return true;\n  }\n\n  override feed(input: Input): Parser<O> {\n    return this;\n  }\n\n  override bind(): O {\n    return this.value;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input} from \"../input/Input\";\nimport {Parser} from \"./Parser\";\n\n/** @hidden */\nexport class ParserError extends Parser<never> {\n  /** @hidden */\n  readonly error!: Error;\n\n  constructor(error: Error) {\n    super();\n    Object.defineProperty(this, \"error\", {\n      value: error,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return true;\n  }\n\n  override feed(input: Input): Parser<never> {\n    return this;\n  }\n\n  override bind(): never {\n    throw this.error;\n  }\n\n  override trap(): Error {\n    return this.error;\n  }\n\n  override asError<O2>(): Parser<O2> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\n\n/** @hidden */\nexport class WriterEnd extends Writer<unknown, never> {\n  constructor() {\n    super();\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return true;\n  }\n\n  override pull(output: Output): Writer<unknown, never> {\n    return this;\n  }\n\n  override bind(): never {\n    throw new WriterException();\n  }\n\n  override asDone<I2>(): Writer<I2, never> {\n    return this;\n  }\n\n  override andThen<O2>(that: Writer<unknown, O2>): Writer<unknown, O2> {\n    return that;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {Writer} from \"./Writer\";\n\n/** @hidden */\nexport class WriterDone<O> extends Writer<unknown, O> {\n  /** @hidden */\n  readonly value!: O;\n\n  constructor(value: O) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return true;\n  }\n\n  override pull(output: Output): Writer<unknown, O> {\n    return this;\n  }\n\n  override bind(): O {\n    return this.value;\n  }\n\n  override asDone<I2>(): Writer<I2, O> {\n    return this;\n  }\n\n  override andThen<O2>(that: Writer<unknown, O2>): Writer<unknown, O2> {\n    return that;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {Writer} from \"./Writer\";\n\n/** @hidden */\nexport class WriterError extends Writer<never, never> {\n  /** @hidden */\n  readonly error!: Error;\n\n  constructor(error: Error) {\n    super();\n    Object.defineProperty(this, \"error\", {\n      value: error,\n      enumerable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return true;\n  }\n\n  override pull(output: Output): Writer<never, never> {\n    return this;\n  }\n\n  override bind(): never {\n    throw this.error;\n  }\n\n  override trap(): Error {\n    return this.error;\n  }\n\n  override asError<I2, O2>(): Writer<I2, O2> {\n    return this;\n  }\n\n  override andThen<O2>(that: Writer<never, O2>): Writer<never, O2> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {Writer} from \"./Writer\";\n\n/** @hidden */\nexport class WriterSequence<O> extends Writer<never, O> {\n  /** @hidden */\n  readonly head!: Writer<unknown, unknown>;\n  /** @hidden */\n  readonly tail!: Writer<unknown, O>;\n\n  constructor(head: Writer<unknown, unknown>, tail: Writer<unknown, O>) {\n    super();\n    Object.defineProperty(this, \"head\", {\n      value: head,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"tail\", {\n      value: tail,\n      enumerable: true,\n    });\n  }\n\n  override pull(output: Output): Writer<never, O> {\n    let head = this.head;\n    if (head.isCont()) {\n      head = head.pull(output);\n    }\n    if (head.isError()) {\n      return head.asError();\n    } else if (head.isDone()) {\n      return this.tail.pull(output);\n    } else {\n      return new WriterSequence(head, this.tail);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"../output/OutputSettings\";\nimport {Output} from \"../output/Output\";\n\n/** @hidden */\nexport abstract class ByteOutput<T> extends Output<T> {\n  /** @hidden */\n  readonly array!: Uint8Array | null;\n  /** @hidden */\n  readonly size!: number;\n\n  constructor(array: Uint8Array | null, size: number, settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"array\", {\n      value: array,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"size\", {\n      value: size,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return true;\n  }\n\n  override isFull(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): Output<T> {\n    return this;\n  }\n\n  override write(b: number | string): Output<T> {\n    if (typeof b === \"number\") {\n      const n = this.size;\n      const oldArray = this.array;\n      let newArray;\n      if (oldArray === null || n + 1 > oldArray.length) {\n        newArray = new Uint8Array(ByteOutput.expand(n + 1));\n        if (oldArray !== null) {\n          newArray.set(oldArray, 0);\n        }\n        Object.defineProperty(this, \"array\", {\n          value: newArray,\n          enumerable: true,\n          configurable: true,\n        });\n      } else {\n        newArray = oldArray;\n      }\n      newArray[n] = b;\n      Object.defineProperty(this, \"size\", {\n        value: n + 1,\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    } else {\n      throw new TypeError(\"\" + b);\n    }\n  }\n\n  override writeln(string?: string): Output<T> {\n    throw new TypeError(\"\" + string);\n  }\n\n  toUint8Array(): Uint8Array {\n    const n = this.size;\n    const oldArray = this.array;\n    if (oldArray !== null && n === oldArray.length) {\n      return oldArray;\n    } else {\n      const newArray = new Uint8Array(n);\n      if (oldArray !== null) {\n        newArray.set(oldArray.slice(0, n), 0);\n      }\n      Object.defineProperty(this, \"array\", {\n        value: newArray,\n        enumerable: true,\n        configurable: true,\n      });\n      return newArray;\n    }\n  }\n\n  cloneArray(): Uint8Array | null {\n    const oldArray = this.array;\n    if (oldArray !== null) {\n      return oldArray.slice(0, this.size);\n    } else {\n      return null;\n    }\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): Output<T> {\n    settings = OutputSettings.fromAny(settings);\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  /** @hidden */\n  static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {OutputSettings} from \"../output/OutputSettings\";\nimport type {Output} from \"../output/Output\";\nimport {ByteOutput} from \"./ByteOutput\";\n\n/** @hidden */\nexport class ByteOutputUint8Array extends ByteOutput<Uint8Array> {\n  constructor(array: Uint8Array | null, size: number, settings: OutputSettings) {\n    super(array, size, settings);\n  }\n\n  override bind(): Uint8Array {\n    return this.toUint8Array();\n  }\n\n  override clone(): Output<Uint8Array> {\n    return new ByteOutputUint8Array(this.cloneArray(), this.size, this.settings);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"../output/OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"../output/OutputSettings\";\nimport {OutputBuffer} from \"../output/OutputBuffer\";\nimport {OutputBufferError} from \"../output/OutputBufferError\";\n\n/** @hidden */\nexport class ByteOutputBuffer extends OutputBuffer<Uint8Array> {\n  /** @hidden */\n  readonly array!: Uint8Array;\n  /** @hidden */\n  readonly part!: boolean;\n\n  constructor(array: Uint8Array, index: number, limit: number,\n              part: boolean, settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"array\", {\n      value: array,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"limit\", {\n      value: limit,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"part\", {\n      value: part,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return this.index < this.limit;\n  }\n\n  override isFull(): boolean {\n    return this.part && this.index >= this.limit;\n  }\n\n  override isDone(): boolean {\n    return !this.part && this.index >= this.limit;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return this.part;\n  }\n\n  override asPart(part: boolean): OutputBuffer<Uint8Array> {\n    Object.defineProperty(this, \"part\", {\n      value: part,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  readonly index!: number;\n\n  override withIndex(index: number): OutputBuffer<Uint8Array> {\n    if (0 <= index && index <= this.limit) {\n      Object.defineProperty(this, \"index\", {\n        value: index,\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid index\"), this.settings);\n    }\n  }\n\n  readonly limit!: number;\n\n  override withLimit(limit: number): OutputBuffer<Uint8Array> {\n    if (0 <= limit && limit <= this.array.length) {\n      Object.defineProperty(this, \"limit\", {\n        value: limit,\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid limit\"), this.settings);\n    }\n  }\n\n  override get capacity(): number {\n    return this.array.length;\n  }\n\n  override get remaining(): number {\n    return this.limit - this.index;\n  }\n\n  override has(index: number): boolean {\n    return 0 <= index && index < this.limit;\n  }\n\n  override get(index: number): number {\n    if (0 <= index && index < this.limit) {\n      return this.array[index]!;\n    } else {\n      throw new OutputException();\n    }\n  }\n\n  override set(index: number, token: number): void {\n    if (0 <= index && index < this.limit) {\n      this.array[index] = token;\n    } else {\n      throw new OutputException();\n    }\n  }\n\n  override write(token: number | string): OutputBuffer<Uint8Array> {\n    if (typeof token === \"number\") {\n      const index = this.index;\n      if (index < this.limit) {\n        this.array[index] = token;\n        Object.defineProperty(this, \"index\", {\n          value: index + 1,\n          enumerable: true,\n          configurable: true,\n        });\n        return this;\n      } else {\n        return new OutputBufferError(new OutputException(\"full\"), this.settings);\n      }\n    } else {\n      return new OutputBufferError(new OutputException(\"binary output\"), this.settings);\n    }\n  }\n\n  override writeln(string?: string): OutputBuffer<Uint8Array> {\n    return new OutputBufferError(new OutputException(\"binary output\"), this.settings);\n  }\n\n  override step(offset: number): OutputBuffer<Uint8Array> {\n    const index = this.index + offset;\n    if (0 <= index && index <= this.limit) {\n      Object.defineProperty(this, \"index\", {\n        value: index,\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    } else {\n      return new OutputBufferError(new OutputException(\"invalid step\"), this.settings);\n    }\n  }\n\n  override bind(): Uint8Array {\n    return new Uint8Array(this.array.buffer, 0, this.index);\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): OutputBuffer<Uint8Array> {\n    settings = OutputSettings.fromAny(settings);\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override clone(): OutputBuffer<Uint8Array> {\n    return new ByteOutputBuffer(this.array, this.index, this.limit, this.part, this.settings);\n  }\n\n  static create(array: Uint8Array, offset?: number, length?: number): OutputBuffer<Uint8Array> {\n    if (offset === void 0) {\n      offset = 0;\n    }\n    if (length === void 0) {\n      length = array.length;\n    }\n    return new ByteOutputBuffer(array, offset, offset + length, false, OutputSettings.standard());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"../output/OutputSettings\";\nimport type {Output} from \"../output/Output\";\nimport type {OutputBuffer} from \"../output/OutputBuffer\";\nimport {ByteOutputBuffer} from \"./ByteOutputBuffer\";\nimport {ByteOutputUint8Array} from \"./ByteOutputUint8Array\";\n\n/**\n * Byte [[Input]]/[[Output]] factory.\n *\n * The `Binary.outputBuffer(...)` function returns an `Output` that writes\n * bytes to a growable array, and [[Output.bind binds]] a `Uint8Array`\n * containing all written bytes.\n */\nexport const Binary = {} as {\n  /**\n   * Returns a new `Output` that appends bytes to a growable array,\n   * pre-allocated with space for `initialCapacity` bytes, if `initialCapacity`\n   * is defined, using the given `settings`, if `settings` is defined.  The\n   * returned `Output` accepts an unbounded number of bytes, remaining\n   * permanently in the _cont_ state, and can [[Output.bind bind]] a\n   * `Uint8Array` with the current output state at any time.\n   */\n  output(initialCapacity?: number, settings?: AnyOutputSettings): Output<Uint8Array>;\n\n  /**\n   * Returns a new `Output` that appends bytes to a growable array, using the\n   * given `settings`.  The returned `Output` accepts an unbounded number of\n   * bytes, remaining permanently in the _cont_ state, and can [[Output.bind\n   * bind]] a `Uint8Array` array with the current output state at any time.\n   */\n  output(settings: AnyOutputSettings): Output<Uint8Array>;\n\n  outputBuffer(array: Uint8Array, offset?: number, length?: number): OutputBuffer<Uint8Array>;\n};\n\nBinary.output = function (initialCapacity?: number | AnyOutputSettings,\n                          settings?: AnyOutputSettings): Output<Uint8Array> {\n  if (settings === void 0 && typeof initialCapacity !== \"number\") {\n    settings = initialCapacity;\n    initialCapacity = void 0;\n  } else if (typeof initialCapacity !== \"number\") {\n    initialCapacity = void 0;\n  }\n  let array: Uint8Array | null;\n  if (typeof initialCapacity === \"number\") {\n    array = new Uint8Array(initialCapacity);\n  } else {\n    array = null;\n  }\n  settings = OutputSettings.fromAny(settings);\n  return new ByteOutputUint8Array(array, 0, settings);\n};\n\nBinary.outputBuffer = function (array: Uint8Array, offset?: number,\n                                length?: number): OutputBuffer<Uint8Array> {\n  return ByteOutputBuffer.create(array, offset, length);\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, HashCode} from \"@swim/util\";\nimport type {Output} from \"../output/Output\";\nimport type {Debug} from \"../format/Debug\";\nimport {Format} from \"../format/Format\";\nimport {UtfErrorModeFatal} from \"../\"; // forward import\nimport {UtfErrorModeReplacement} from \"../\"; // forward import\n\n/**\n * Unicode transformation format error handling mode.\n */\nexport abstract class UtfErrorMode implements HashCode, Debug {\n  /**\n   * Returns `true` if a Unicode decoding should abort with an error when an\n   * invalid code unit sequence is encountered.\n   */\n  isFatal(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns `true` if a Unicode decoding should substitute invalid code unit\n   * sequences with a replacement character.\n   */\n  isReplacement(): boolean {\n    return false;\n  }\n\n  /**\n   * The Unicode code point of the replacement character used to substitute\n   * for invalid code unit sequences.\n   */\n  abstract readonly replacementChar: number;\n\n  /**\n   * Returns `true` if Unicode decoding should abort with an error when a\n   * `NUL` byte is encountered.\n   */\n  abstract isNonZero(): boolean;\n\n  /**\n   * Returns a `UtfErrorMode` that, if `isNonZero` is `true`, aborts when\n   * Unicode decoding encounters a `NUL` byte.\n   */\n  abstract asNonZero(isNonZero: boolean): UtfErrorMode;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  /**\n   * Returns a `UtfErrorMode` that aborts Unicode decoding with an error when\n   * invalid code unit sequences are encountered.\n   */\n  @Lazy\n  static fatal(): UtfErrorMode {\n    return new UtfErrorModeFatal(false);\n  }\n\n  /**\n   * Returns a `UtfErrorMode` that aborts Unicode decoding with an error when\n   * invalid code unit sequences, and `NUL` bytes, are encountered.\n   */\n  @Lazy\n  static fatalNonZero(): UtfErrorMode {\n    return new UtfErrorModeFatal(true);\n  }\n\n  /**\n   * Returns a `UtfErrorMode` that substitutes invalid code unit sequences\n   * with the replacement character (`U+FFFD`).\n   */\n  @Lazy\n  static replacement(): UtfErrorMode {\n    return new UtfErrorModeReplacement(0xfffd, false);\n  }\n\n  /**\n   * Returns a `UtfErrorMode` that substitutes invalid code unit sequences\n   * with the replacement character (`U+FFFD`), and aborts decoding with an\n   * error when `NUL` bytes are encountered.\n   */\n  @Lazy\n  static replacementNonZero(): UtfErrorMode {\n    return new UtfErrorModeReplacement(0xfffd, true);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Booleans, Constructors} from \"@swim/util\";\nimport type {Output} from \"../output/Output\";\nimport {UtfErrorMode} from \"./UtfErrorMode\";\n\n/** @hidden */\nexport class UtfErrorModeFatal extends UtfErrorMode {\n  constructor(nonZero: boolean) {\n    super();\n    Object.defineProperty(this, \"nonZero\", {\n      value: nonZero,\n      enumerable: true,\n    });\n  }\n\n  override isFatal(): boolean {\n    return true;\n  }\n\n  override get replacementChar(): number {\n    return 0xfffd;\n  }\n\n  /** @hidden */\n  readonly nonZero!: boolean;\n\n  override isNonZero(): boolean {\n    return this.nonZero;\n  }\n\n  override asNonZero(nonZero: boolean): UtfErrorMode {\n    if (nonZero) {\n      return UtfErrorMode.fatalNonZero();\n    } else {\n      return UtfErrorMode.fatal();\n    }\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UtfErrorModeFatal) {\n      return this.nonZero === that.nonZero;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(UtfErrorModeFatal),\n        Booleans.hash(this.nonZero)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UtfErrorMode\").write(46/*'.'*/)\n        .write(this.nonZero ? \"fatalNonZero\" : \"fatal\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Booleans, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"../output/Output\";\nimport {UtfErrorMode} from \"./UtfErrorMode\";\n\n/** @hidden */\nexport class UtfErrorModeReplacement extends UtfErrorMode {\n  constructor(replacementChar: number, nonZero: boolean) {\n    super();\n    Object.defineProperty(this, \"replacementChar\", {\n      value: replacementChar,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"nonZero\", {\n      value: nonZero,\n      enumerable: true,\n    });\n  }\n\n  override isReplacement(): boolean {\n    return true;\n  }\n\n  override readonly replacementChar!: number;\n\n  /** @hidden */\n  readonly nonZero!: boolean;\n\n  override isNonZero(): boolean {\n    return this.nonZero;\n  }\n\n  override asNonZero(nonZero: boolean): UtfErrorMode {\n    if (this.replacementChar === 0xfffd) {\n      if (nonZero) {\n        return UtfErrorMode.replacementNonZero();\n      } else {\n        return UtfErrorMode.replacement();\n      }\n    } else {\n      return new UtfErrorModeReplacement(this.replacementChar, nonZero);\n    }\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UtfErrorModeReplacement) {\n      return this.replacementChar === that.replacementChar\n          && this.nonZero === that.nonZero;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(UtfErrorModeReplacement),\n        Numbers.hash(this.replacementChar)), Booleans.hash(this.nonZero)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UtfErrorMode\").write(46/*'.'*/)\n        .write(this.nonZero ? \"replacementNonZero\" : \"replacement\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Input} from \"../input/Input\";\nimport type {Output} from \"../output/Output\";\nimport type {Parser} from \"../parser/Parser\";\nimport type {Writer} from \"../writer/Writer\";\nimport {Format} from \"../format/Format\";\nimport {Binary} from \"../binary/Binary\";\nimport {Unicode} from \"../unicode/Unicode\";\nimport {Base16Parser} from \"../\"; // forward import\nimport {Base16Writer} from \"../\"; // forward import\nimport {Base16IntegerWriter} from \"../\"; // forward import\n\n/**\n * Base-16 (hexadecimal) encoding [[Parser]]/[[Writer]] factory.\n */\nexport class Base16 {\n  constructor(alphabet: string) {\n    Object.defineProperty(this, \"alphabet\", {\n      value: alphabet,\n      enumerable: true,\n    });\n  }\n\n  /**\n   * Returns a 16 character string, where the character at index `i` is the\n   * encoding of the base-16 digit `i`.\n   */\n  readonly alphabet!: string;\n\n  /**\n   * Returns the Unicode code point of the base-16 digit that encodes the given\n   * 4-bit quantity.\n   */\n  encodeDigit(b: number): number {\n    return this.alphabet.charCodeAt(b);\n  }\n\n  /**\n   * Returns a `Writer` that, when fed an input `Uint8Array`, returns a\n   * continuation that writes the base-16 (hexadecimal) encoding of the input\n   * byte array.\n   */\n  uint8ArrayWriter(): Writer<Uint8Array, unknown>;\n  /**\n   * Returns a `Writer` continuation that writes the base-16 (hexadecimal)\n   * encoding of the `input` `Uint8Array`.\n   */\n  uint8ArrayWriter(input: Uint8Array): Writer<unknown, Uint8Array>;\n  uint8ArrayWriter(input?: Uint8Array): Writer<unknown, unknown> {\n    if (input === void 0) {\n      return new Base16Writer(void 0, null, this);\n    } else {\n      return new Base16Writer(input, input, this);\n    }\n  }\n\n  /**\n   * Writes the base-16 (hexadecimal) encoding of the `input` `Uint8Array` to\n   * the `output`, returning a `Writer` continuation that knows how to write any\n   * remaining output that couldn't be immediately generated.\n   */\n  writeUint8Array(input: Uint8Array, output: Output): Writer<unknown, unknown> {\n    return Base16Writer.write(output, void 0, input, this);\n  }\n\n  writeInteger(input: number, output: Output, width: number = 0): Writer<unknown, unknown> {\n    return Base16IntegerWriter.write(output, void 0, input, width, this);\n  }\n\n  writeIntegerLiteral(input: number, output: Output, width: number = 0): Writer<unknown, unknown> {\n    return Base16IntegerWriter.writeLiteral(output, void 0, input, width, this);\n  }\n\n  /**\n   * Returns the `Base16` encoding with lowercase alphanumeric digits.\n   */\n  @Lazy\n  static get lowercase(): Base16 {\n    return new Base16(\"0123456789abcdef\");\n  }\n\n  /**\n   * Returns the `Base16` encoding with uppercase alphanumeric digits.\n   */\n  @Lazy\n  static get uppercase(): Base16 {\n    return new Base16(\"0123456789ABCDEF\");\n  }\n\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-16 digit.\n   */\n  static isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 70/*'F'*/\n        || c >= 97/*'a'*/ && c <= 102/*'f'*/;\n  }\n\n  /**\n   * Returns the 4-bit quantity represented by the base-16 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-16 digit.\n   */\n  static decodeDigit(c: number): number {\n    if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n      return c - 48/*'0'*/;\n    } else if (c >= 65/*'A'*/ && c <= 70/*'F'*/) {\n      return 10 + (c - 65/*'A'*/);\n    } else if (c >= 97/*'a'*/ && c <= 102/*'f'*/) {\n      return 10 + (c - 97/*'a'*/);\n    } else {\n      const message = Unicode.stringOutput();\n      message.write(\"Invalid base-16 digit: \");\n      Format.debugChar(c, message);\n      throw new Error(message.bind());\n    }\n  }\n\n  /**\n   * Decodes the base-16 digits `c1` and `c2`, and writes the 8-bit  quantity\n   * they represent to the given `output`.\n   */\n  static writeQuantum(c1: number, c2: number, output: Output): void {\n    const x = Base16.decodeDigit(c1);\n    const y = Base16.decodeDigit(c2);\n    output = output.write(x << 4 | y);\n  }\n\n  /**\n   * Returns a `Parser` that decodes base-16 (hexadecimal) encoded input, and\n   * writes the decoded bytes to `output`.\n   */\n  static parser<O>(output: Output<O>): Parser<O> {\n    return new Base16Parser<O>(output);\n  }\n\n  /**\n   * Parses the base-16 (hexadecimal) encoded `input`, and writes the decoded\n   * bytes to `output`, returning a `Parser` continuation that knows how to\n   * parse any additional input.\n   */\n  static parse<O>(input: Input, output: Output<O>): Parser<O> {\n    return Base16Parser.parse(input, output);\n  }\n\n  /**\n   * Parses the base-16 (hexadecimal) encoded `input`, and writes the decoded\n   * bytes to a growable array, returning a `Parser` continuation that knows\n   * how to parse any additional input.  The returned `Parser` [[Parser.bind\n   * binds]] a `Uint8Array` array containing all parsed base-16 data.\n   */\n  static parseUint8Array(input: Input): Parser<Uint8Array> {\n    return Base16Parser.parse(input, Binary.output());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"../output/OutputException\";\nimport type {AnyOutputSettings, OutputSettings} from \"../output/OutputSettings\";\nimport {Output} from \"../output/Output\";\nimport {Unicode} from \"./Unicode\";\nimport {UtfErrorMode} from \"./UtfErrorMode\";\nimport {Base16} from \"../number/Base16\";\n\n/** @hidden */\nexport class Utf8DecodedOutput<T> extends Output<T> {\n  /** @hidden */\n  readonly output!: Output<T>;\n  /** @hidden */\n  readonly errorMode!: UtfErrorMode;\n  /** @hidden */\n  c1: number;\n  /** @hidden */\n  c2: number;\n  /** @hidden */\n  c3: number;\n  /** @hidden */\n  have: number;\n\n  constructor(output: Output<T>, errorMode: UtfErrorMode,\n              c1: number, c2: number, c3: number, have: number) {\n    super();\n    Object.defineProperty(this, \"output\", {\n      value: output,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"errorMode\", {\n      value: errorMode,\n      enumerable: true,\n      configurable: true,\n    });\n    this.c1 = c1;\n    this.c2 = c2;\n    this.c3 = c3;\n    this.have = have;\n  }\n\n  override isCont(): boolean {\n    return this.output.isCont();\n  }\n\n  override isFull(): boolean {\n    return this.output.isFull();\n  }\n\n  override isDone(): boolean {\n    return this.output.isDone();\n  }\n\n  override isError(): boolean {\n    return this.output.isError();\n  }\n\n  override isPart(): boolean {\n    return this.output.isPart();\n  }\n\n  override asPart(part: boolean): Output<T> {\n    Object.defineProperty(this, \"output\", {\n      value: this.output.asPart(part),\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override write(token: number | string): Output<T> {\n    if (typeof token === \"number\") {\n      let c1 = this.c1;\n      let c2 = this.c2;\n      let c3 = this.c3;\n      let c4 = -1;\n      let have = this.have;\n\n      if (token >= 0) {\n        switch (have) {\n          case 0:\n            c1 = token & 0xff;\n            have = 1;\n            break;\n          case 1:\n            c2 = token & 0xff;\n            have = 2;\n            break;\n          case 2:\n            c3 = token & 0xff;\n            have = 3;\n            break;\n          case 3:\n            c4 = token & 0xff;\n            have = 4;\n            break;\n          default:\n            throw new Error(\"unreachable\");\n        }\n      }\n\n      if (c1 === 0 && this.errorMode.isNonZero()) { // invalid NUL byte\n        return Output.error(new OutputException(\"unexpected NUL byte\"));\n      } else if (c1 >= 0 && c1 <= 0x7f) { // U+0000..U+007F\n        Object.defineProperty(this, \"output\", {\n          value: this.output.write(c1),\n          enumerable: true,\n          configurable: true,\n        });\n        this.have = 0;\n      } else if (c1 >= 0xc2 && c1 <= 0xf4) {\n        if (c1 >= 0xc2 && c1 <= 0xdf && c2 >= 0x80 && c2 <= 0xbf) { // U+0080..U+07FF\n          Object.defineProperty(this, \"output\", {\n            value: this.output.write((c1 & 0x1f) << 6 | c2 & 0x3f),\n            enumerable: true,\n            configurable: true,\n          });\n          this.c1 = -1;\n          this.have = 0;\n        } else if (c1 === 0xe0 && c2 >= 0xa0 && c2 <= 0xbf // U+0800..U+0FFF\n                || c1 >= 0xe1 && c1 <= 0xec && c2 >= 0x80 && c2 <= 0xbf // U+1000..U+CFFF\n                || c1 === 0xed && c2 >= 0x80 && c2 <= 0x9f // U+D000..U+D7FF\n                || c1 >= 0xee && c1 <= 0xef && c2 >= 0x80 && c2 <= 0xbf) { // U+E000..U+FFFF\n          if (c3 >= 0x80 && c3 <= 0xbf) {\n            Object.defineProperty(this, \"output\", {\n              value: this.output.write((c1 & 0x0f) << 12 | (c2 & 0x3f) << 6 | c3 & 0x3f),\n              enumerable: true,\n              configurable: true,\n            });\n            this.c1 = -1;\n            this.c2 = -1;\n            this.have = 0;\n          } else if (c3 >= 0) { // invalid c3\n            if (this.errorMode.isFatal()) {\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            }\n            Object.defineProperty(this, \"output\", {\n              value: this.output.write(this.errorMode.replacementChar),\n              enumerable: true,\n              configurable: true,\n            });\n            this.c1 = c3;\n            this.c2 = -1;\n            this.have = 1;\n          } else if (token < 0 || this.output.isDone()) { // incomplete c3\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          } else { // awaiting c3\n            this.c2 = c2;\n            this.have = 2;\n          }\n        } else if (c1 === 0xf0 && c2 >= 0x90 && c2 <= 0xbf // U+10000..U+3FFFF\n                || c1 >= 0xf1 && c1 <= 0xf3 && c2 >= 0x80 && c2 <= 0xbf // U+40000..U+FFFFF\n                || c1 === 0xf4 && c2 >= 0x80 && c2 <= 0x8f) { // U+100000..U+10FFFF\n          if (c3 >= 0x80 && c3 <= 0xbf) {\n            if (c4 >= 0x80 && c4 <= 0xbf) {\n              this.have = 4;\n              Object.defineProperty(this, \"output\", {\n                value: this.output.write((c1 & 0x07) << 18 | (c2 & 0x3f) << 12 | (c3 & 0x3f) << 6 | c4 & 0x3f),\n                enumerable: true,\n                configurable: true,\n              });\n              this.c1 = -1;\n              this.c2 = -1;\n              this.c3 = -1;\n              this.have = 0;\n            } else if (c4 >= 0) { // invalid c4\n              if (this.errorMode.isFatal()) {\n                return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3, c4)));\n              }\n              Object.defineProperty(this, \"output\", {\n                value: this.output.write(this.errorMode.replacementChar),\n                enumerable: true,\n                configurable: true,\n              });\n              this.c1 = c4;\n              this.c2 = -1;\n              this.c3 = -1;\n              this.have = 1;\n            } else if (token < 0 || this.output.isDone()) { // incomplete c4\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            } else { // awaiting c4\n              this.c3 = c3;\n              this.have = 3;\n            }\n          } else if (c3 >= 0) { // invalid c3\n            if (this.errorMode.isFatal()) {\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            }\n            Object.defineProperty(this, \"output\", {\n              value: this.output.write(this.errorMode.replacementChar),\n              enumerable: true,\n              configurable: true,\n            });\n            this.c1 = c3;\n            this.c2 = -1;\n            this.have = 1;\n          } else if (token < 0 || this.output.isDone()) { // incomplete c3\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          } else { // awaiting c3\n            this.c2 = c2;\n            this.have = 2;\n          }\n        } else if (c2 >= 0) { // invalid c2\n          if (this.errorMode.isFatal()) {\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          }\n          Object.defineProperty(this, \"output\", {\n            value: this.output.write(this.errorMode.replacementChar),\n            enumerable: true,\n            configurable: true,\n          });\n          this.c1 = c2;\n          this.have = 1;\n        } else if (token < 0 || this.output.isDone()) { // incomplete c2\n          return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1)));\n        } else { // awaiting c2\n          this.c1 = c1;\n          this.have = 1;\n        }\n      } else if (c1 >= 0) { // invalid c1\n        if (this.errorMode.isFatal()) {\n          return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1)));\n        }\n        Object.defineProperty(this, \"output\", {\n          value: this.output.write(this.errorMode.replacementChar),\n          enumerable: true,\n          configurable: true,\n        });\n        this.have = 0;\n      }\n      if (this.output.isError()) {\n        return this.output;\n      }\n      return this;\n    } else if (typeof token === \"string\") {\n      Object.defineProperty(this, \"output\", {\n        value: this.output.write(token),\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    } else {\n      throw new TypeError(\"\" + token);\n    }\n  }\n\n  private static invalid(c1: number, c2?: number, c3?: number, c4?: number): string {\n    let output = Unicode.stringOutput();\n    output = output.write(\"invalid UTF-8 code unit sequence: \");\n    const base16 = Base16.uppercase;\n    base16.writeIntegerLiteral(c1, output, 2);\n    if (c2 !== void 0) {\n      output = output.write(' ');\n      base16.writeIntegerLiteral(c2, output, 2);\n      if (c3 !== void 0) {\n        output = output.write(' ');\n        base16.writeIntegerLiteral(c3, output, 2);\n        if (c4 !== void 0) {\n          output = output.write(' ');\n          base16.writeIntegerLiteral(c4, output, 2);\n        }\n      }\n    }\n    return output.bind();\n  }\n\n  override get settings(): OutputSettings {\n    return this.output.settings;\n  }\n\n  override withSettings(settings: AnyOutputSettings): Output<T> {\n    Object.defineProperty(this, \"output\", {\n      value: this.output.withSettings(settings),\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override bind(): T {\n    if (this.have === 0) {\n      return this.output.bind();\n    } else {\n      return this.write(-1).bind();\n    }\n  }\n\n  override trap(): Error {\n    return this.output.trap();\n  }\n\n  override clone(): Output<T> {\n    return new Utf8DecodedOutput(this.output.clone(), this.errorMode,\n                                 this.c1, this.c2, this.c3, this.have);\n  }\n\n  static create<T>(output: Output<T>, errorMode?: UtfErrorMode): Output<T> {\n    if (errorMode === void 0) {\n      errorMode = UtfErrorMode.fatal();\n    }\n    return new Utf8DecodedOutput(output, errorMode, -1, -1, -1, 0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"../output/OutputException\";\nimport type {AnyOutputSettings, OutputSettings} from \"../output/OutputSettings\";\nimport {Output} from \"../output/Output\";\nimport {UtfErrorMode} from \"./UtfErrorMode\";\n\n/** @hidden */\nexport class Utf8EncodedOutput<T> extends Output<T> {\n  /** @hidden */\n  readonly output!: Output<T>;\n  /** @hidden */\n  readonly errorMode!: UtfErrorMode;\n  /** @hidden */\n  c2: number;\n  /** @hidden */\n  c3: number;\n  /** @hidden */\n  c4: number;\n  /** @hidden */\n  index: number;\n\n  constructor(output: Output<T>, errorMode: UtfErrorMode, c2: number,\n              c3: number, c4: number, index: number) {\n    super();\n    Object.defineProperty(this, \"output\", {\n      value: output,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"errorMode\", {\n      value: errorMode,\n      enumerable: true,\n      configurable: true,\n    });\n    this.c2 = c2;\n    this.c3 = c3;\n    this.c4 = c4;\n    this.index = index;\n  }\n\n  override isCont(): boolean {\n    return this.output.isCont();\n  }\n\n  override isFull(): boolean {\n    return this.output.isFull();\n  }\n\n  override isDone(): boolean {\n    return this.output.isDone();\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return this.output.isPart();\n  }\n\n  override asPart(part: boolean): Output<T> {\n    Object.defineProperty(this, \"output\", {\n      value: this.output.asPart(part),\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override write(token: number | string): Output<T> {\n    if (typeof token === \"number\") {\n      let c1 = 0;\n      let c2 = this.c2;\n      let c3 = this.c3;\n      let c4 = this.c4;\n      let output = this.output;\n      let index = this.index;\n      while (index < 4) {\n        if (output.isCont()) {\n          switch (index) {\n            case 1: output = output.write(c2); this.c2 = 0; break;\n            case 2: output = output.write(c3); this.c3 = 0; break;\n            case 3: output = output.write(c4); this.c4 = 0; break;\n            default: throw new Error(\"unreachable\");\n          }\n          index += 1;\n        } else {\n          return Output.error(new OutputException(\"unable to flush buffered code units\"));\n        }\n      }\n      if (token >= 0 && token <= 0x7f) { // U+0000..U+007F\n        c4 = token;\n        index = 3;\n      } else if (token >= 0x80 && token <= 0x7ff) { // U+0080..U+07FF\n        c3 = 0xc0 | (token >>> 6);\n        c4 = 0x80 | (token & 0x3f);\n        index = 2;\n      } else if (token >= 0x0800 && token <= 0xffff || // U+0800..U+D7FF\n                 token >= 0xe000 && token <= 0xffff) { // U+E000..U+FFFF\n        c2 = 0xe0 | (token  >>> 12);\n        c3 = 0x80 | ((token >>>  6) & 0x3f);\n        c4 = 0x80 | (token & 0x3f);\n        index = 1;\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        c1 = 0xf0 | (token  >>> 18);\n        c2 = 0x80 | ((token >>> 12) & 0x3f);\n        c3 = 0x80 | ((token >>>  6) & 0x3f);\n        c4 = 0x80 | (token & 0x3f);\n        index = 0;\n      } else { // surrogate or invalid code point\n        if (this.errorMode.isFatal()) {\n          return Output.error(new OutputException(\"invalid code point: \" + token));\n        } else {\n          return this.write(this.errorMode.replacementChar);\n        }\n      }\n      do {\n        switch (index) {\n          case 0: output = output.write(c1); break;\n          case 1: output = output.write(c2); this.c2 = 0; break;\n          case 2: output = output.write(c3); this.c3 = 0; break;\n          case 3: output = output.write(c4); this.c4 = 0; break;\n          default: throw new Error(\"unreachable\");\n        }\n        Object.defineProperty(this, \"output\", {\n          value: output,\n          enumerable: true,\n          configurable: true,\n        });\n        index += 1;\n      } while (index < 4 && output.isCont());\n      if (index < 4) {\n        if (index < 3) {\n          if (index < 2) {\n            this.c2 = c2;\n          }\n          this.c3 = c3;\n        }\n        this.c4 = c4;\n      }\n      Object.defineProperty(this, \"output\", {\n        value: output,\n        enumerable: true,\n        configurable: true,\n      });\n      this.index = index;\n      return this;\n    } else if (typeof token === \"string\") {\n      Object.defineProperty(this, \"output\", {\n        value: this.output.write(token),\n        enumerable: true,\n        configurable: true,\n      });\n      return this;\n    } else {\n      throw new TypeError(\"\" + token);\n    }\n  }\n\n  override flush(): Output<T> {\n    let output = this.output;\n    let index = this.index;\n    while (index < 4) {\n      if (output.isCont()) {\n        switch (index) {\n          case 1: output = output.write(this.c2); this.c2 = 0; break;\n          case 2: output = output.write(this.c3); this.c3 = 0; break;\n          case 3: output = output.write(this.c4); this.c4 = 0; break;\n          default: throw new Error(\"unreachable\");\n        }\n        index += 1;\n      } else {\n        return Output.error(new OutputException(\"unable to flush buffered code units\"));\n      }\n    }\n    Object.defineProperty(this, \"output\", {\n      value: output,\n      enumerable: true,\n      configurable: true,\n    });\n    this.index = index;\n    return this;\n  }\n\n  override get settings(): OutputSettings {\n    return this.output.settings;\n  }\n\n  override withSettings(settings: AnyOutputSettings): Output<T> {\n    Object.defineProperty(this, \"output\", {\n      value: this.output.withSettings(settings),\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override bind(): T {\n    return this.output.bind();\n  }\n\n  override clone(): Output<T> {\n    return new Utf8EncodedOutput(this.output.clone(), this.errorMode,\n                                 this.c2, this.c3, this.c4, this.index);\n  }\n\n  static create<T>(output: Output<T>, errorMode?: UtfErrorMode): Output<T> {\n    if (errorMode === void 0) {\n      errorMode = UtfErrorMode.fatal();\n    }\n    return new Utf8EncodedOutput(output, errorMode, 0, 0, 0, 4);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {Unicode} from \"./Unicode\";\nimport type {UtfErrorMode} from \"./UtfErrorMode\";\nimport {Utf8DecodedOutput} from \"./Utf8DecodedOutput\";\nimport {Utf8EncodedOutput} from \"./Utf8EncodedOutput\";\n\n/**\n * UTF-8 [[Input]]/[[Output]] factory.\n */\nexport const Utf8 = {} as {\n  /**\n   * Returns the number of bytes in the UTF-8 encoding of the Unicode code\n   * point `c`, handling invalid code unit sequences according to the\n   * `errorMode` policy.  Returns the size of the\n   * [[UtfErrorMode.replacementChar]] for surrogates and invalid code points,\n   * if [[UtfErrorMode.isReplacement]] is `true`; otherwise returns `0` for\n   * surrogates and invalid code points.  Uses the two byte modified UTF-8\n   * encoding of the NUL character (`U+0000`), if [[UtfErrorMode.isNonZero]]\n   * is `true`.\n   */\n  sizeOf(c: number | undefined, errorMode?: UtfErrorMode): number;\n\n  /**\n   * Returns the number of bytes in the UTF-8 encoding of the Unicode code\n   * point `c`; returns the size of the Unicode replacement character (`U+FFFD`)\n   * for surrogates and invalid code points.\n   */\n  sizeOf(c: number | undefined): number;\n\n  /**\n   * Returns the number of bytes in the UTF-8 encoding the given `string`,\n   * handling invalid code unit sequences according to the `errorMode` policy.\n   */\n  sizeOf(string: string, errorMode?: UtfErrorMode): number;\n\n  /**\n   * Returns the number of bytes in the UTF-8 encoding the given `string`,\n   * assuming the Unicode replacement character (`U+FFFD`) replaces unpaired\n   * surrogates and invalid code points.\n   */\n  sizeOf(string: string): number;\n\n  /**\n   * Returns a new `Output` that accepts UTF-8 code unit sequences, and writes\n   * writes decoded Unicode code points to the composed `output`, handling\n   * invalid code unit sequences according to the `errorMode` policy.\n   */\n  decodedOutput<T>(output: Output<T>, errorMode?: UtfErrorMode): Output<T>;\n\n  /**\n   * Returns a new `Output` that accepts Unicode code points, and writes\n   * encoded UTF-8 code unit sequences to the composed `output`, handling\n   * invalid code unit sequences according to the `errorMode` policy.\n   */\n  encodedOutput<T>(output: Output<T>, errorMode?: UtfErrorMode): Output<T>;\n\n  /**\n   * Returns a new `Output` that accepts UTF-8 code unit sequences, and writes\n   * decoded Unicode code points to a growable `string`, handling invalid code\n   * unit sequences according to the [[UtfErrorMode.fatal]] policy.  The\n   * returned `Output` accepts an unbounded number of UTF-8 code units,\n   * remaining permanently in the _cont_ state, and [[Output.bind binds]] a\n   * `string` containing all decoded code points.\n   */\n  decodedString(): Output<string>;\n};\n\nUtf8.sizeOf = function (u: string | number | undefined, errorMode?: UtfErrorMode): number {\n  if (typeof u === \"number\" || u === void 0) {\n    if (typeof u === \"number\") {\n      if (u === 0x0000 && errorMode !== void 0 && errorMode.isNonZero()) { // Modified UTF-8\n        return 2; // U+0000 encoded as 0xC0, 0x80\n      } else if (u >= 0x0000 && u <= 0x007F) { // U+0000..U+007F\n        return 1;\n      } else if (u >= 0x0080 && u <= 0x07FF) { // U+0080..U+07FF\n        return 2;\n      } else if (u >= 0x0800 && u <= 0xFFFF || // U+0800..U+D7FF\n                 u >= 0xE000 && u <= 0xFFFF) { // U+E000..U+FFFF\n        return 3;\n      } else if (u >= 0x10000 && u <= 0x10FFFF) { // U+10000..U+10FFFF\n        return 4;\n      }\n    }\n    // surrogate or invalid code point\n    if (errorMode === void 0) {\n      return 3;\n    } else if (errorMode.isReplacement()) {\n      return Utf8.sizeOf(errorMode.replacementChar);\n    } else {\n      return 0;\n    }\n  } else if (typeof u === \"string\") {\n    let size = 0;\n    for (let i = 0, n = u.length; i < n; i = u.offsetByCodePoints(i, 1)) {\n      size += Utf8.sizeOf(u.charCodeAt(i), errorMode);\n    }\n    return size;\n  } else {\n    throw new TypeError(\"\" + u);\n  }\n};\n\nUtf8.decodedOutput = function <T>(output: Output<T>, errorMode?: UtfErrorMode): Output<T> {\n  return Utf8DecodedOutput.create(output, errorMode);\n};\n\nUtf8.encodedOutput = function <T>(output: Output<T>, errorMode?: UtfErrorMode): Output<T> {\n  return Utf8EncodedOutput.create(output, errorMode);\n};\n\nUtf8.decodedString = function (): Output<string> {\n  return Utf8.decodedOutput(Unicode.stringOutput());\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Diagnostic} from \"../source/Diagnostic\";\nimport type {Input} from \"../input/Input\";\nimport type {Output} from \"../output/Output\";\nimport {Parser} from \"../parser/Parser\";\nimport {Unicode} from \"../unicode/Unicode\";\n\n/** @hidden */\nexport class Base10NumberParser extends Parser<number> {\n  /** @hidden */\n  readonly sign!: number;\n  /** @hidden */\n  readonly value!: number;\n  /** @hidden */\n  readonly mode!: number;\n  /** @hidden */\n  readonly step!: number;\n\n  constructor(sign: number = 1, value: number = 0, mode: number = 2, step: number = 1) {\n    super();\n    Object.defineProperty(this, \"sign\", {\n      value: sign,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mode\", {\n      value: mode,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"step\", {\n      value: step,\n      enumerable: true,\n    });\n  }\n\n  override feed(input: Input): Parser<number> {\n    return Base10NumberParser.parse(input, this.sign, this.value, this.mode, this.step);\n  }\n\n  static parse(input: Input, sign: number = 1, value: number = 0,\n               mode: number = 2, step: number = 1): Parser<number> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 45/*'-'*/) {\n          input = input.step();\n          sign = -1;\n        } else if (c === 43/*'+'*/) {\n          input = input.step();\n          sign = 1;\n        }\n        step = 2;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"number\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 48/*'0'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          value = sign * (c - 48/*'0'*/);\n          step = 3;\n        } else if (mode > 0 && c === 46/*'.'*/) {\n          let output = Unicode.stringOutput();\n          if (sign < 0) {\n            output = output.write(45/*'-'*/);\n          }\n          return Base10DecimalParser.parse(input, output, mode);\n        } else {\n          return Parser.error(Diagnostic.expected(\"number\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"number\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          const newValue = 10 * value + sign * (c - 48/*'0'*/);\n          if (-9007199254740991 <= newValue && newValue <= 9007199254740992) {\n            value = newValue;\n            input = input.step();\n          } else {\n            return Parser.error(Diagnostic.message(\"integer overflow\", input));\n          }\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        step = 4;\n      } else if (input.isDone()) {\n        return Parser.done(value);\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        c = input.head();\n        if (mode > 0 && c === 46/*'.'*/ || mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          let output = Unicode.stringOutput();\n          if (sign < 0 && value === 0) {\n            output = output.write(45/*'-'*/).write(48/*'0'*/);\n          } else {\n            output = output.write(\"\" + value);\n          }\n          return Base10DecimalParser.parse(input, output, mode);\n        } else {\n          return Parser.done(value);\n        }\n      } else if (input.isDone()) {\n        return Parser.done(value);\n      }\n    }\n    return new Base10NumberParser(sign, value, mode, step);\n  }\n}\n\n/** @hidden */\nclass Base10DecimalParser extends Parser<number> {\n  /** @hidden */\n  readonly output!: Output<string>;\n  /** @hidden */\n  readonly mode!: number;\n  /** @hidden */\n  readonly step!: number;\n\n  constructor(output: Output<string>, mode: number = 2, step: number = 1) {\n    super();\n    Object.defineProperty(this, \"output\", {\n      value: output,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mode\", {\n      value: mode,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"step\", {\n      value: step,\n      enumerable: true,\n    });\n  }\n\n  override feed(input: Input): Parser<number> {\n    return Base10DecimalParser.parse(input, this.output, this.mode, this.step);\n  }\n\n  static parse(input: Input, output: Output<string>, mode: number = 2,\n               step: number = 1): Parser<number> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 46/*'.'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 2;\n        } else if (mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          input = input.step();\n          output = output.write(c);\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        if (mode > 1) {\n          step = 4;\n        } else {\n          return Parser.done(+output.bind());\n        }\n      } else if (input.isDone()) {\n        return Parser.done(+output.bind());\n      }\n    }\n    if (step === 4) {\n      c = input.head();\n      if (c === 69/*'E'*/ || c === 101/*'e'*/) {\n        input = input.step();\n        output = output.write(c);\n        step = 5;\n      } else {\n        return Parser.done(+output.bind());\n      }\n    }\n    if (step === 5) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n          input = input.step();\n          output = output.write(c);\n        }\n        step = 6;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 7;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 7) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(+output.bind());\n      }\n    }\n    return new Base10DecimalParser(output, mode, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {WriterException} from \"../writer/WriterException\";\nimport {Writer} from \"../writer/Writer\";\nimport {Base10} from \"./Base10\";\n\n/** @hidden */\nexport class Base10IntegerWriter extends Writer {\n  /** @hidden */\n  readonly value!: unknown;\n  /** @hidden */\n  readonly input!: number;\n  /** @hidden */\n  readonly index!: number;\n  /** @hidden */\n  readonly step!: number;\n\n  constructor(value: unknown, input: number, index: number = 0, step: number = 1) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"input\", {\n      value: input,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"step\", {\n      value: step,\n      enumerable: true,\n    });\n  }\n\n  override pull(output: Output): Writer {\n    return Base10IntegerWriter.write(output, this.value, this.input, this.index, this.step);\n  }\n\n  static write(output: Output, value: unknown, input: number, index: number = 0,\n               step: number = 1): Writer {\n    if (step === 0) {\n      return Writer.end();\n    }\n    if (step === 1) {\n      if (input < 0) {\n        if (output.isCont()) {\n          output = output.write(45/*'-'*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (input > -10 && input < 10) {\n        if (output.isCont()) {\n          output = output.write(Base10.encodeDigit(Math.abs(input | 0)));\n          return Writer.done(value);\n        }\n      } else {\n        const digits = new Array<number>(19);\n        let x = input;\n        let i = 18;\n        while (x !== 0) {\n          digits[i] = Math.abs((x % 10) | 0);\n          x = (x / 10) | 0;\n          i -= 1;\n        }\n        i += 1 + index;\n        while (i < 19 && output.isCont()) {\n          output = output.write(Base10.encodeDigit(digits[i]!));\n          index += 1;\n          i += 1;\n        }\n        if (i === 19) {\n          return Writer.done(value);\n        }\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base10IntegerWriter(value, input, index, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Diagnostic} from \"../source/Diagnostic\";\nimport type {Input} from \"../input/Input\";\nimport type {Output} from \"../output/Output\";\nimport {Parser} from \"../parser/Parser\";\nimport {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Base16Parser<O> extends Parser<O> {\n  /** @hidden */\n  readonly output!: Output<O>;\n  /** @hidden */\n  readonly p!: number;\n  /** @hidden */\n  readonly step!: number;\n\n  constructor(output: Output<O>, p: number = 0, step: number = 1) {\n    super();\n    Object.defineProperty(this, \"output\", {\n      value: output,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"p\", {\n      value: p,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"step\", {\n      value: step,\n      enumerable: true,\n    });\n  }\n\n  override feed(input: Input): Parser<O> {\n    return Base16Parser.parse(input, this.output.clone(), this.p, this.step);\n  }\n\n  static parse<O>(input: Input, output: Output<O>, p: number = 0, step: number = 1): Parser<O> {\n    let c = 0;\n    while (!input.isEmpty()) {\n      if (step === 1) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          p = c;\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(output.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          Base16.writeQuantum(p, c, output);\n          p = 0;\n          step = 1;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"base16 digit\", input));\n        }\n      }\n    }\n    return new Base16Parser<O>(output, p, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {WriterException} from \"../writer/WriterException\";\nimport {Writer} from \"../writer/Writer\";\nimport type {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Base16Writer extends Writer {\n  /** @hidden */\n  readonly value!: unknown;\n  /** @hidden */\n  readonly input!: Uint8Array | null;\n  /** @hidden */\n  readonly base16!: Base16;\n  /** @hidden */\n  readonly index!: number;\n  /** @hidden */\n  readonly step!: number;\n\n  constructor(value: unknown, input: Uint8Array | null, base16: Base16,\n              index: number = 0, step: number = 1) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"input\", {\n      value: input,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"base16\", {\n      value: base16,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"step\", {\n      value: step,\n      enumerable: true,\n    });\n  }\n\n  override feed(value: unknown): Writer {\n    if (value instanceof Uint8Array) {\n      return new Base16Writer(void 0, value, this.base16);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  override pull(output: Output): Writer {\n    if (this.input === null) {\n      throw new WriterException();\n    }\n    return Base16Writer.write(output, this.value, this.input, this.base16,\n                              this.index, this.step);\n  }\n\n  static write(output: Output, value: unknown, input: Uint8Array,\n               base16: Base16, index: number = 0, step: number = 1): Writer {\n    while (index < input.length) {\n      const x = input[index]!;\n      if (step === 1 && output.isCont()) {\n        output = output.write(base16.encodeDigit(x >>> 4));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base16.encodeDigit(x & 0x0f));\n        index += 1;\n        step = 1;\n      }\n    }\n    if (index === input.length) {\n      return Writer.done(value);\n    } else if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base16Writer(value, input, base16, index, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {WriterException} from \"../writer/WriterException\";\nimport {Writer} from \"../writer/Writer\";\nimport type {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Base16IntegerWriter extends Writer {\n  /** @hidden */\n  readonly value!: unknown;\n  /** @hidden */\n  readonly input!: number;\n  /** @hidden */\n  readonly width!: number;\n  /** @hidden */\n  readonly base16!: Base16;\n  /** @hidden */\n  readonly index!: number;\n  /** @hidden */\n  readonly step!: number;\n\n  constructor(value: unknown, input: number, width: number,\n              base16: Base16, index: number = 0, step: number = 3) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"input\", {\n      value: input,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"width\", {\n      value: width,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"base16\", {\n      value: base16,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"step\", {\n      value: step,\n      enumerable: true,\n    });\n  }\n\n  override pull(output: Output): Writer {\n    return Base16IntegerWriter.write(output, this.value, this.input, this.width,\n                                     this.base16, this.index, this.step);\n  }\n\n  static write(output: Output, value: unknown, input: number, width: number,\n               base16: Base16, index: number = 0, step: number = 3): Writer {\n    if (step <= 0) {\n      return Writer.end();\n    }\n    if (step === 1 && output.isCont()) {\n      output = output.write(48/*'0'*/);\n      step = 2;\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(120/*'x'*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (input >= 0 && input < 16 && width <= 1) {\n        if (output.isCont()) {\n          output = output.write(base16.encodeDigit(input));\n          return Writer.done(value);\n        }\n      } else {\n        let i = 15;\n        const digits = new Array<number>(16);\n        let x = input;\n        while (x !== 0 || i >= 16 - width) {\n          digits[i] = x & 0xf;\n          x >>>= 4;\n          i -= 1;\n        }\n        i += 1 + index;\n        while (i < 16 && output.isCont()) {\n          output = output.write(base16.encodeDigit(digits[i]!));\n          index += 1;\n          i += 1;\n        }\n        if (i === 16) {\n          return Writer.done(value);\n        }\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base16IntegerWriter(value, input, width, base16, index, step);\n  }\n\n  static writeLiteral(output: Output, value: unknown, input: number,\n                      width: number, base16: Base16): Writer {\n    return Base16IntegerWriter.write(output, value, input, width, base16, 0, 1);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Input} from \"../input/Input\";\nimport type {Output} from \"../output/Output\";\nimport type {Parser} from \"../parser/Parser\";\nimport type {Writer} from \"../writer/Writer\";\nimport {Format} from \"../format/Format\";\nimport {Binary} from \"../binary/Binary\";\nimport {Unicode} from \"../unicode/Unicode\";\nimport {Base64Parser} from \"../\"; // forward import\nimport {Base64Writer} from \"../\"; // forward import\n\n/**\n * Base-64 (7-bit ASCII) encoding [[Parser]]/[[Writer]] factory.\n */\nexport abstract class Base64 {\n  /**\n   * The 64 character string, where the character at index `i` is the encoding\n   * of the base-64 digit `i`.\n   */\n  abstract readonly alphabet: string;\n\n  /**\n   * Returns `true` if this base-64 encoding requires padding.\n   */\n  abstract isPadded(): boolean;\n\n  /**\n   * Returns this `Base64` encoding with required padding, if `padded` is `true`.\n   */\n  abstract asPadded(padded: boolean): Base64;\n\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-64 digit.\n   */\n  abstract isDigit(c: number): boolean;\n\n  /**\n   * Returns the 7-bit quantity represented by the base-64 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-64 digit.\n   */\n  decodeDigit(c: number): number {\n    if (c >= 65/*'A'*/ && c <= 90/*'Z'*/) {\n      return c - 65/*'A'*/;\n    } else if (c >= 97/*'a'*/ && c <= 122/*'z'*/) {\n      return c + (26 - 97/*'a'*/);\n    } else if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n      return c + (52 - 48/*'0'*/);\n    } else if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n      return 62;\n    } else if (c === 47/*'/'*/ || c === 95/*'_'*/) {\n      return 63;\n    } else {\n      const message = Unicode.stringOutput();\n      message.write(\"Invalid base-64 digit: \");\n      Format.debugChar(c, message);\n      throw new Error(message.bind());\n    }\n  }\n\n  /**\n   * Returns the Unicode code point of the base-64 digit that encodes the given\n   * 7-bit quantity.\n   */\n  encodeDigit(b: number): number {\n    return this.alphabet.charCodeAt(b);\n  }\n\n  /**\n   * Decodes the base-64 digits `c1`, `c2`, `c3`, and `c4`, and writes the 8 to\n   * 24 bit quantity they represent to the given `output`.\n   */\n  writeQuantum(c1: number, c2: number, c3: number, c4: number, output: Output): void {\n    const x = this.decodeDigit(c1);\n    const y = this.decodeDigit(c2);\n    if (c3 !== 61/*'='*/) {\n      const z = this.decodeDigit(c3);\n      if (c4 !== 61/*'='*/) {\n        const w = this.decodeDigit(c4);\n        output = output.write((x << 2) | (y >>> 4));\n        output = output.write((y << 4) | (z >>> 2));\n        output = output.write((z << 6) | w);\n      } else {\n        output = output.write((x << 2) | (y >>> 4));\n        output = output.write((y << 4) | (z >>> 2));\n      }\n    } else {\n      if (c4 !== 61/*'='*/) {\n        throw new Error(\"Improperly padded base-64\");\n      }\n      output = output.write((x << 2) | (y >>> 4));\n    }\n  }\n\n  /**\n   * Returns a `Parser` that decodes base-64 (7-bit ASCII) encoded input, and\n   * writes the decoded bytes to `output`.\n   */\n  parser<O>(output: Output<O>): Parser<O> {\n    return new Base64Parser<O>(output, this);\n  }\n\n  /**\n   * Parses the base-64 (7-bit ASCII) encoded `input`, and writes the decoded\n   * bytes to `output`, returning a `Parser` continuation that knows how to\n   * parse any additional input.\n   */\n  parse<O>(input: Input, output: Output<O>): Parser<O> {\n    return Base64Parser.parse(input, output, this);\n  }\n\n  /**\n   * Parses the base-64 (7-bit ASCII) encoded `input`, and writes the decoded\n   * bytes to a growable array, returning a `Parser` continuation that knows\n   * how to parse any additional input.  The returned `Parser` [[Parser.bind\n   * binds]] a `Uint8Array` array containing all parsed base-64 data.\n   */\n  parseUint8Array(input: Input): Parser<Uint8Array> {\n    return Base64Parser.parse(input, Binary.output(), this);\n  }\n\n  /**\n   * Returns a `Writer` that, when fed an input `Uint8Array`, returns a\n   * continuation that writes the base-64 (7-bit ASCII) encoding of the input\n   * `Uint8Array`.\n   */\n  uint8ArrayWriter(): Writer<Uint8Array, unknown>;\n  /**\n   * Returns a `Writer` continuation that writes the base-64 (7-bit ASCII)\n   * encoding of the `input` byte array.\n   */\n  uint8ArrayWriter(input: Uint8Array): Writer<unknown, Uint8Array>;\n  uint8ArrayWriter(input?: Uint8Array): Writer {\n    if (input === void 0) {\n      return new Base64Writer(void 0, null, this);\n    } else {\n      return new Base64Writer(input, input, this);\n    }\n  }\n\n  /**\n   * Writes the base-64 (7-bit ASCII) encoding of the `input` `Uint8Array` to\n   * the `output`, returning a `Writer` continuation that knows how to write\n   * any remaining output that couldn't be immediately generated.\n   */\n  writeUint8Array(input: Uint8Array, output: Output): Writer {\n    return Base64Writer.write(output, void 0, input, this);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get standardPadded(): Base64 {\n    return new Base64Standard(true);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get standardUnpadded(): Base64 {\n    return new Base64Standard(false);\n  }\n\n  /**\n   * Returns the `Base64` encoding with the standard alphabet, and required\n   * padding, if `isPadding` is `true`.\n   */\n  static standard(padded: boolean = true): Base64 {\n    if (padded) {\n      return Base64.standardPadded;\n    } else {\n      return Base64.standardUnpadded;\n    }\n  }\n\n  /** @hidden */\n  @Lazy\n  static get urlPadded(): Base64 {\n    return new Base64Url(true);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get urlUnpadded(): Base64 {\n    return new Base64Url(false);\n  }\n\n  /**\n   * Returns the `Base64` encoding with the url and filename safe alphabet,\n   * and required padding, if `padded` is `true`.\n   */\n  static url(padded: boolean = true): Base64 {\n    if (padded) {\n      return Base64.urlPadded;\n    } else {\n      return Base64.urlUnpadded;\n    }\n  }\n}\n\n/** @hidden */\nclass Base64Standard extends Base64 {\n  /** @hidden */\n  readonly padded!: boolean;\n\n  constructor(padded: boolean) {\n    super();\n    Object.defineProperty(this, \"padded\", {\n      value: padded,\n      enumerable: true,\n    });\n  }\n\n  get alphabet(): string {\n    return \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  }\n\n  isPadded(): boolean {\n    return this.padded;\n  }\n\n  asPadded(padded: boolean): Base64 {\n    if (padded === this.padded) {\n      return this;\n    } else {\n      return Base64.standard(padded);\n    }\n  }\n\n  isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c === 43/*'+'*/ || c === 47/*'/'*/;\n  }\n}\n\n/** @hidden */\nclass Base64Url extends Base64 {\n  /** @hidden */\n  readonly padded!: boolean;\n\n  constructor(padded: boolean) {\n    super();\n    Object.defineProperty(this, \"padded\", {\n      value: padded,\n      enumerable: true,\n    });\n  }\n\n  get alphabet(): string {\n    return \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n  }\n\n  isPadded(): boolean {\n    return this.padded;\n  }\n\n  asPadded(padded: boolean): Base64 {\n    if (padded === this.padded) {\n      return this;\n    } else {\n      return Base64.url(padded);\n    }\n  }\n\n  isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c === 45/*'-'*/ || c === 95/*'_'*/;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Diagnostic} from \"../source/Diagnostic\";\nimport type {Input} from \"../input/Input\";\nimport type {Output} from \"../output/Output\";\nimport {Parser} from \"../parser/Parser\";\nimport type {Base64} from \"./Base64\";\n\n/** @hidden */\nexport class Base64Parser<O> extends Parser<O> {\n  /** @hidden */\n  readonly output!: Output<O>;\n  /** @hidden */\n  readonly base64!: Base64;\n  /** @hidden */\n  readonly p!: number;\n  /** @hidden */\n  readonly q!: number;\n  /** @hidden */\n  readonly r!: number;\n  /** @hidden */\n  readonly step!: number;\n\n  constructor(output: Output<O>, base64: Base64, p: number = 0, q: number = 0,\n              r: number = 0, step: number = 1) {\n    super();\n    Object.defineProperty(this, \"output\", {\n      value: output,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"base64\", {\n      value: base64,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"p\", {\n      value: p,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"q\", {\n      value: q,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"r\", {\n      value: r,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"step\", {\n      value: step,\n      enumerable: true,\n    });\n  }\n\n  override feed(input: Input): Parser<O> {\n    return Base64Parser.parse(input, this.output.clone(), this.base64,\n                              this.p, this.q, this.r, this.step);\n  }\n\n  static parse<O>(input: Input, output: Output<O>, base64: Base64, p: number = 0,\n                  q: number = 0, r: number = 0, step: number = 1): Parser<O> {\n    let c = 0;\n    while (!input.isEmpty()) {\n      if (step === 1) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c))) {\n          input = input.step();\n          p = c;\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(output.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c))) {\n          input = input.step();\n          q = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"base64 digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c) || c === 61/*'='*/)) {\n          input = input.step();\n          r = c;\n          if (c !== 61/*'='*/) {\n            step = 4;\n          } else {\n            step = 5;\n          }\n        } else if (!input.isEmpty()) {\n          if (!base64.isPadded()) {\n            base64.writeQuantum(p, q, 61/*'='*/, 61/*'='*/, output);\n            return Parser.done(output.bind());\n          } else {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n        }\n      }\n      if (step === 4) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c) || c === 61/*'='*/)) {\n          input = input.step();\n          base64.writeQuantum(p, q, r, c, output);\n          r = 0;\n          q = 0;\n          p = 0;\n          if (c !== 61/*'='*/) {\n            step = 1;\n          } else {\n            return Parser.done(output.bind());\n          }\n        } else if (!input.isEmpty()) {\n          if (!base64.isPadded()) {\n            base64.writeQuantum(p, q, r, 61/*'='*/, output);\n            return Parser.done(output.bind());\n          } else {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n        }\n      } else if (step === 5) {\n        if (input.isCont() && (c = input.head(), c === 61/*'='*/)) {\n          input = input.step();\n          base64.writeQuantum(p, q, r, c, output);\n          r = 0;\n          q = 0;\n          p = 0;\n          return Parser.done(output.bind());\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(61/*'='*/, input));\n        }\n      }\n    }\n    return new Base64Parser<O>(output, base64, p, q, r, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"../output/Output\";\nimport {WriterException} from \"../writer/WriterException\";\nimport {Writer} from \"../writer/Writer\";\nimport type {Base64} from \"./Base64\";\n\n/** @hidden */\nexport class Base64Writer extends Writer {\n  /** @hidden */\n  readonly value!: unknown;\n  /** @hidden */\n  readonly input!: Uint8Array | null;\n  /** @hidden */\n  readonly base64!: Base64;\n  /** @hidden */\n  readonly index!: number;\n  /** @hidden */\n  readonly step!: number;\n\n  constructor(value: unknown, input: Uint8Array | null, base64: Base64,\n              index: number = 0, step: number = 1) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"input\", {\n      value: input,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"base64\", {\n      value: base64,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"step\", {\n      value: step,\n      enumerable: true,\n    });\n  }\n\n  override feed(value: unknown): Writer {\n    if (value instanceof Uint8Array) {\n      return new Base64Writer(null, value, this.base64);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  override pull(output: Output): Writer {\n    if (this.input === null) {\n      throw new WriterException();\n    }\n    return Base64Writer.write(output, this.value, this.input, this.base64,\n                              this.index, this.step);\n  }\n\n  static write(output: Output, value: unknown, input: Uint8Array, base64: Base64,\n               index: number = 0, step: number = 1): Writer {\n    while (index + 2 < input.length && output.isCont()) {\n      const x = input[index]!;\n      const y = input[index + 1]!;\n      const z = input[index + 2]!;\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((x << 4) | (y >>> 4)) & 0x3f));\n        step = 3;\n      }\n      if (step === 3 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((y << 2) | (z >>> 6)) & 0x3f));\n        step = 4;\n      }\n      if (step === 4 && output.isCont()) {\n        output = output.write(base64.encodeDigit(z & 0x3f));\n        index += 3;\n        step = 1;\n      }\n    }\n    if (index + 1 < input.length && output.isCont()) {\n      const x = input[index]!;\n      const y = input[index + 1]!;\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((x << 4) | (y >>> 4)) & 0x3f));\n        step = 3;\n      }\n      if (step === 3 && output.isCont()) {\n        output = output.write(base64.encodeDigit((y << 2) & 0x3f));\n        step = 4;\n      }\n      if (step === 4) {\n        if (!base64.isPadded()) {\n          index += 2;\n        } else if (output.isCont()) {\n          output = output.write(61/*'='*/);\n          index += 2;\n        }\n      }\n    } else if (index < input.length && output.isCont()) {\n      const x = input[index]!;\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit((x << 4) & 0x3f));\n        step = 3;\n      }\n      if (step === 3) {\n        if (!base64.isPadded()) {\n          index += 1;\n        } else if (output.isCont()) {\n          output = output.write(61/*'='*/);\n          step = 4;\n        }\n      }\n      if (step === 4 && output.isCont()) {\n        output = output.write(61/*'='*/);\n        index += 1;\n      }\n    }\n    if (index === input.length) {\n      return Writer.done(value);\n    } else if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base64Writer(value, input, base64, index, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals, Equivalent} from \"@swim/util\";\nimport type {Domain} from \"./Domain\";\nimport type {Range} from \"./Range\";\n \nexport interface Mapping<X, Y> extends Equals, Equivalent {\n  (x: X): Y;\n\n  readonly domain: Domain<X>;\n\n  readonly range: Range<Y>;\n\n  equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const Mapping = function <X, Y>(domain: Domain<X>, range: Range<Y>): Mapping<X, Y> {\n  const mapping = function (x: X): Y {\n    return mapping.range(mapping.domain(x));\n  } as Mapping<X, Y>;\n  Object.setPrototypeOf(mapping, Mapping.prototype);\n  Object.defineProperty(mapping, \"domain\", {\n    value: domain,\n    enumerable: true,\n  });\n  Object.defineProperty(mapping, \"range\", {\n    value: range,\n    enumerable: true,\n  });\n  return mapping;\n} as {\n  <X, Y>(domain: Domain<X>, range: Range<Y>): Mapping<X, Y>;\n\n  /** @hidden */\n  prototype: Mapping<any, any>;\n};\n\nMapping.prototype = Object.create(Object.prototype);\n\nMapping.prototype.equivalentTo = function (that: unknown, epsilon?: number): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Mapping) {\n    return this.domain.equivalentTo(that.domain, epsilon)\n        && this.range.equivalentTo(that.range, epsilon);\n  }\n  return false;\n};\n\nMapping.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof Mapping;\n};\n\nMapping.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Mapping) {\n    return that.canEqual(this)\n        && this.domain.equals(that.domain)\n        && this.range.equals(that.range);\n  }\n  return false;\n};\n\nMapping.prototype.toString = function (): string {\n  return \"Mapping(\" + this.domain + \", \" + this.range + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values} from \"@swim/util\";\nimport {Mapping} from \"./Mapping\";\nimport {Range} from \"../\"; // forward import\nimport {LinearDomain} from \"../\"; // forward import\nimport type {LinearRange} from \"../scale/LinearRange\";\n\nexport type AnyDomain<X> = Domain<X> | readonly [X, X];\n\nexport interface Domain<X> extends Mapping<X, number> {\n  readonly 0: X;\n\n  readonly 1: X;\n\n  readonly domain: this;\n\n  readonly range: LinearRange;\n\n  contains(x: X): boolean;\n\n  equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const Domain = function <X>(x0: X, x1: X): Domain<X> {\n  const domain = function (x: X): number {\n    return Values.equal(x, domain[1]) ? 1 : 0;\n  } as Domain<X>;\n  Object.setPrototypeOf(domain, Domain.prototype);\n  Object.defineProperty(domain, 0, {\n    value: x0,\n    enumerable: true,\n  });\n  Object.defineProperty(domain, 1, {\n    value: x1,\n    enumerable: true,\n  });\n  return domain;\n} as {\n  <X>(x0: X, x1: X): Domain<X>;\n\n  /** @hidden */\n  prototype: Domain<any>;\n\n  readonly unit: LinearDomain;\n};\n\nDomain.prototype = Object.create(Mapping.prototype);\n\nObject.defineProperty(Domain.prototype, \"domain\", {\n  get<X>(this: Domain<X>): Domain<X> {\n    return this;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(Domain.prototype, \"range\", {\n  get(): LinearRange {\n    return Range.unit;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nDomain.prototype.contains = function (x: unknown): boolean {\n  return Values.compare(this[0], x) <= 0 && Values.compare(x, this[1]) <= 0;\n};\n\nDomain.prototype.equivalentTo = function (that: unknown, epsilon?: number): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Domain) {\n    return Values.equivalent(this[0], that[0], epsilon)\n        && Values.equivalent(this[1], that[1], epsilon);\n  }\n  return false;\n};\n\nDomain.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof Domain;\n};\n\nDomain.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Domain) {\n    return that.canEqual(this)\n        && Values.equal(this[0], that[0])\n        && Values.equal(this[1], that[1]);\n  }\n  return false;\n};\n\nDomain.prototype.toString = function (): string {\n  return \"Domain(\" + this[0] + \", \" + this[1] + \")\";\n};\n\nObject.defineProperty(Domain, \"unit\", {\n  get(): Domain<number> {\n    const value = LinearDomain(0, 1);\n    Object.defineProperty(Domain, \"unit\", {\n      value: value,\n      enumerable: true,\n      configurable: true,\n    });\n    return value;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values} from \"@swim/util\";\nimport {Mapping} from \"./Mapping\";\nimport {Domain} from \"../\"; // forward import\nimport type {LinearDomain} from \"../scale/LinearDomain\";\nimport {LinearRange} from \"../\"; // forward import\n\nexport type AnyRange<Y> = Range<Y> | readonly [Y, Y];\n\nexport interface Range<Y> extends Mapping<number, Y> {\n  readonly 0: Y;\n\n  readonly 1: Y;\n\n  readonly domain: LinearDomain;\n\n  readonly range: this;\n\n  equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const Range = function <Y>(y0: Y, y1: Y): Range<Y> {\n  const range = function (u: number): Y {\n    return u < 1 ? range[0] : range[1];\n  } as Range<Y>;\n  Object.setPrototypeOf(range, Range.prototype);\n  Object.defineProperty(range, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(range, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return range;\n} as {\n  <Y>(y0: Y, y1: Y): Range<Y>;\n\n  /** @hidden */\n  prototype: Range<any>;\n\n  readonly unit: LinearRange;\n};\n\nRange.prototype = Object.create(Mapping.prototype);\n\nObject.defineProperty(Range.prototype, \"domain\", {\n  get(): LinearDomain {\n    return Domain.unit;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(Range.prototype, \"range\", {\n  get<Y>(this: Range<Y>): Range<Y> {\n    return this;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nRange.prototype.equivalentTo = function (that: unknown, epsilon?: number): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Range) {\n    return Values.equivalent(this[0], that[0], epsilon)\n        && Values.equivalent(this[1], that[1], epsilon);\n  }\n  return false;\n};\n\nRange.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof Range;\n};\n\nRange.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Range) {\n    return that.canEqual(this)\n        && Values.equal(this[0], that[0])\n        && Values.equal(this[1], that[1]);\n  }\n  return false;\n};\n\nRange.prototype.toString = function (): string {\n  return \"Range(\" + this[0] + \", \" + this[1] + \")\";\n};\n\nObject.defineProperty(Range, \"unit\", {\n  get(): LinearRange {\n    const value = LinearRange(0, 1);\n    Object.defineProperty(Range, \"unit\", {\n      value: value,\n      enumerable: true,\n      configurable: true,\n    });\n    return value;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Interpolator} from \"./Interpolator\";\n\n/**\n * Type that can be [[Interpolator interpolated]] to values of type `T`.\n */\nexport interface Interpolate<T = unknown> {\n  /**\n   * Returns an [[Interpolator]] function that blends between `this` value and\n   * `that` value, if possible; otherwise returns `null` if `this` is unable to\n   * construct an interpolator to `that`.\n   */\n  interpolateTo(that: unknown): Interpolator<T> | null;\n}\n\nexport const Interpolate = function (x: unknown, y: unknown): Interpolator | null {\n  if (x !== void 0 && x !== null && typeof (x as Interpolate).interpolateTo === \"function\") {\n    return (x as Interpolate).interpolateTo(y);\n  } else {\n    return null;\n  }\n} as {\n  /**\n   * Returns `x.interpolateTo(y)`, if `x` conforms to the [[Interpolate]]\n   * interface; otherwise returns `null`.\n   */\n  <T>(x: Interpolate<T> | null | undefined, y: unknown): Interpolator<T> | null;\n  (x: unknown, y: unknown): Interpolator | null;\n\n  /**\n   * Returns `true` if `object` conforms to the [[Interpolate]] interface.\n   */\n  is(object: unknown): object is Interpolate;\n};\n\nInterpolate.is = function (object: unknown): object is Interpolate {\n  return object !== void 0 && object !== null\n      && typeof (object as Interpolate).interpolateTo === \"function\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values} from \"@swim/util\";\nimport {Range} from \"../mapping/Range\";\nimport {Interpolate} from \"./Interpolate\";\nimport {InterpolatorMap} from \"../\"; // forward import\nimport {IdentityInterpolator} from \"../\"; // forward import\nimport {StepInterpolator} from \"../\"; // forward import\nimport {NumberInterpolator} from \"../\"; // forward import\nimport {ArrayInterpolator} from \"../\"; // forward import\nimport {InterpolatorInterpolator} from \"../\"; // forward import\n\nexport interface Interpolator<Y = unknown> extends Range<Y>, Interpolate<Interpolator<Y>> {\n  readonly 0: Y;\n\n  readonly 1: Y;\n\n  map<FY>(transform: (y: Y) => FY): Interpolator<FY>;\n\n  interpolateTo(that: Interpolator<Y>): Interpolator<Interpolator<Y>>;\n  interpolateTo(that: unknown): Interpolator<Interpolator<Y>> | null;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const Interpolator = function (y0: unknown, y1: unknown): Interpolator {\n  let interpolator: Interpolator | null;\n  if (y0 === y1) {\n    interpolator = IdentityInterpolator(y0);\n  } else if (typeof y0 === \"number\" && typeof y1 === \"number\") {\n    interpolator = NumberInterpolator(y0, y1);\n  } else if (Array.isArray(y0) && Array.isArray(y1)) {\n    interpolator = ArrayInterpolator(y0, y1);\n  } else {\n    interpolator = Interpolate(y0, y1);\n    if (interpolator === null) {\n      interpolator = StepInterpolator(y0, y1);\n    }\n  }\n  return interpolator;\n} as {\n  <Y>(y0: Y, y1: Y): Interpolator<Y>;\n  (y0: unknown, y1: unknown): Interpolator;\n\n  /** @hidden */\n  prototype: Interpolator<any>;\n};\n\nInterpolator.prototype = Object.create(Range.prototype);\n\nInterpolator.prototype.map = function <Y, FY>(this: Interpolator<Y>, transform: (y: Y) => FY): Interpolator<FY> {\n  return InterpolatorMap(this, transform);\n};\n\nInterpolator.prototype.interpolateTo = function <Y>(this: Interpolator<Y>, that: unknown): Interpolator<Interpolator<Y>> | null {\n  if (that instanceof Interpolator) {\n    return InterpolatorInterpolator(this, that);\n  }\n  return null;\n} as typeof Interpolator.prototype.interpolateTo;\n\nInterpolator.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof this.constructor;\n};\n\nInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Interpolator) {\n    return that.canEqual(this)\n        && Values.equal(this[0], that[0])\n        && Values.equal(this[1], that[1]);\n  }\n  return false;\n};\n\nInterpolator.prototype.toString = function (): string {\n  return \"Interpolator(\" + this[0] + \", \" + this[1] + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\n/** @hidden */\nexport interface InterpolatorMap<Y, FY> extends Interpolator<FY> {\n  /** @hidden */\n  readonly interpolator: Interpolator<Y>;\n\n  /** @hidden */\n  readonly transform: (y: Y) => FY;\n\n  readonly 0: FY;\n\n  readonly 1: FY;\n\n  equals(that: unknown): boolean;\n}\n\nexport const InterpolatorMap = function <Y, FY>(interpolator: Interpolator<Y>,\n                                                transform: (y: Y) => FY): InterpolatorMap<Y, FY> {\n  const map = function (u: number): FY {\n    return map.transform(map.interpolator(u));\n  } as InterpolatorMap<Y, FY>;\n  Object.setPrototypeOf(map, InterpolatorMap.prototype);\n  Object.defineProperty(map, \"interpolator\", {\n    value: interpolator,\n    enumerable: true,\n  });\n  Object.defineProperty(map, \"transform\", {\n    value: transform,\n    enumerable: true,\n  });\n  return map;\n} as {\n  <Y, FY>(interpolator: Interpolator<Y>, transform: (y: Y) => FY): InterpolatorMap<Y, FY>;\n\n  /** @hidden */\n  prototype: InterpolatorMap<any, any>;\n};\n\nInterpolatorMap.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(InterpolatorMap.prototype, 0, {\n  get<Y, FY>(this: InterpolatorMap<Y, FY>): FY {\n    return this.transform(this.interpolator[0]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(InterpolatorMap.prototype, 1, {\n  get<Y, FY>(this: InterpolatorMap<Y, FY>): FY {\n    return this.transform(this.interpolator[1]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nInterpolatorMap.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof InterpolatorMap) {\n    return this.interpolator.equals(that.interpolator)\n        && this.transform === that.transform;\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\n/** @hidden */\nexport interface IdentityInterpolator<Y> extends Interpolator<Y> {\n  /** @hidden */\n  readonly value: Y;\n\n  readonly 0: Y;\n\n  readonly 1: Y;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const IdentityInterpolator = function <Y>(value: Y): IdentityInterpolator<Y> {\n  const interpolator = function (u: number): Y {\n    return interpolator.value;\n  } as IdentityInterpolator<Y>;\n  Object.setPrototypeOf(interpolator, IdentityInterpolator.prototype);\n  Object.defineProperty(interpolator, \"value\", {\n    value: value,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  <Y>(value: Y): IdentityInterpolator<Y>;\n\n  /** @hidden */\n  prototype: IdentityInterpolator<any>;\n};\n\nIdentityInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(IdentityInterpolator.prototype, 0, {\n  get<Y>(this: IdentityInterpolator<Y>): Y {\n    return this.value;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(IdentityInterpolator.prototype, 1, {\n  get<Y>(this: IdentityInterpolator<Y>): Y {\n    return this.value;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nIdentityInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof IdentityInterpolator) {\n    return this.value === that.value;\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\n/** @hidden */\nexport const StepInterpolator = function <Y>(y0: Y, y1: Y): Interpolator<Y> {\n  const interpolator = function (u: number): Y {\n    return u < 1 ? interpolator[0] : interpolator[1];\n  } as Interpolator<Y>;\n  Object.setPrototypeOf(interpolator, StepInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  <Y>(y0: Y, y1: Y): Interpolator<Y>;\n\n  /** @hidden */\n  prototype: Interpolator<any>;\n};\n\nStepInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\n/** @hidden */\nexport const NumberInterpolator = function (y0: number, y1: number): Interpolator<number> {\n  const interpolator = function (u: number): number {\n    const y0 = interpolator[0];\n    const y1 = interpolator[1];\n    return y0 + u * (y1 - y0);\n  } as Interpolator<number>;\n  Object.setPrototypeOf(interpolator, NumberInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: number, y1: number): Interpolator<number>;\n\n  /** @hidden */\n  prototype: Interpolator<number>;\n};\n\nNumberInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\n/** @hidden */\nexport interface ArrayInterpolator<Y> extends Interpolator<ReadonlyArray<Y>> {\n  /** @hidden */\n  readonly interpolators: ReadonlyArray<Interpolator<Y>>;\n\n  readonly 0: ReadonlyArray<Y>;\n\n  readonly 1: ReadonlyArray<Y>;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const ArrayInterpolator = function <Y>(y0: ReadonlyArray<Y>, y1: ReadonlyArray<Y>): ArrayInterpolator<Y> {\n  const interpolator = function (u: number): ReadonlyArray<Y> {\n    const interpolators = interpolator.interpolators;\n    const interpolatorCount = interpolators.length;\n    const array = new Array<Y>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      array[i] = interpolators[i]!(u);\n    }\n    return array;\n  } as ArrayInterpolator<Y>;\n  Object.setPrototypeOf(interpolator, ArrayInterpolator.prototype);\n  const interpolatorCount = Math.min(y0.length, y1.length);\n  const interpolators = new Array<Interpolator<Y>>(interpolatorCount);\n  for (let i = 0; i < interpolatorCount; i += 1) {\n    interpolators[i] = Interpolator(y0[i]!, y1[i]!);\n  }\n  Object.defineProperty(interpolator, \"interpolators\", {\n    value: interpolators,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  <Y>(y0: ReadonlyArray<Y>, y1: ReadonlyArray<Y>): ArrayInterpolator<Y>;\n\n  /** @hidden */\n  prototype: ArrayInterpolator<any>;\n};\n\nArrayInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(ArrayInterpolator.prototype, 0, {\n  get<Y>(this: ArrayInterpolator<Y>): ReadonlyArray<Y> {\n    const interpolators = this.interpolators;\n    const interpolatorCount = interpolators.length;\n    const array = new Array<Y>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      array[i] = interpolators[i]![0];\n    }\n    return array;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(ArrayInterpolator.prototype, 1, {\n  get<Y>(this: ArrayInterpolator<Y>): ReadonlyArray<Y> {\n    const interpolators = this.interpolators;\n    const interpolatorCount = interpolators.length;\n    const array = new Array<Y>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      array[i] = interpolators[i]![1];\n    }\n    return array;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nArrayInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof ArrayInterpolator) {\n    const n = this.interpolators.length;\n    if (n === that.interpolators.length) {\n      for (let i = 0; i < n; i += 1) {\n        if (!this.interpolators[i]!.equals(that.interpolators[i]!)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"./Interpolator\";\n\n/** @hidden */\nexport const InterpolatorInterpolator = function <Y>(y0: Interpolator<Y>, y1: Interpolator<Y>): Interpolator<Interpolator<Y>> {\n  const interpolator = function (u: number): Interpolator<Y> {\n    if (u === 0) {\n      return interpolator[0];\n    } else if (u === 1) {\n      return interpolator[1];\n    } else {\n      return Interpolator(interpolator[0](u), interpolator[1](u));\n    }\n  } as Interpolator<Interpolator<Y>>;\n  Object.setPrototypeOf(interpolator, InterpolatorInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  <Y>(y0: Interpolator<Y>, y1: Interpolator<Y>): Interpolator<Interpolator<Y>>;\n\n  /** @hidden */\n  prototype: Interpolator<any>;\n};\n\nInterpolatorInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values} from \"@swim/util\";\nimport {Domain} from \"../mapping/Domain\";\nimport {Interpolator} from \"../interpolate/Interpolator\";\nimport {AnyEasing, Easing} from \"../\"; // forward import\nimport {Tweening} from \"../\"; // forward import\n\nexport type AnyTiming = Timing | TimingInit;\n\nexport interface TimingInit {\n  easing?: AnyEasing;\n  t0?: number;\n  t1?: number;\n  dt?: number;\n}\n\nexport interface Timing extends Domain<number> {\n  readonly 0: number;\n\n  readonly 1: number;\n\n  readonly duration: number;\n\n  readonly easing: Easing;\n\n  contains(t: number): boolean;\n\n  withDomain(t0: number, t1: number): Timing;\n\n  withDuration(dt: number): Timing;\n\n  overRange<Y>(range: Interpolator<Y>): Tweening<Y>;\n  overRange<Y>(y0: Y, y1: Y): Tweening<Y>;\n\n  equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const Timing = function (easing: Easing, t0: number, t1: number): Timing {\n  const timing = function (t: number): number {\n    const t0 = timing[0];\n    const t1 = timing[1];\n    return timing.easing(Math.min(Math.max(0, (t - t0) / (t1 - t0)), 1));\n  } as Timing;\n  Object.setPrototypeOf(timing, Timing.prototype);\n  Object.defineProperty(timing, \"easing\", {\n    value: easing,\n    enumerable: true,\n  });\n  Object.defineProperty(timing, 0, {\n    value: t0,\n    enumerable: true,\n  });\n  Object.defineProperty(timing, 1, {\n    value: t1,\n    enumerable: true,\n  });\n  return timing;\n} as {\n  (easing: Easing, t0: number, t1: number): Timing;\n\n  /** @hidden */\n  prototype: Timing;\n\n  fromInit(init: TimingInit): Timing;\n\n  fromAny(value: AnyTiming): Timing;\n  fromAny(value: AnyTiming | boolean | null | undefined): Timing | boolean;\n};\n\nTiming.prototype = Object.create(Domain.prototype);\n\nObject.defineProperty(Timing.prototype, \"duration\", {\n  get(this: Timing): number {\n    return this[1] - this[0];\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nTiming.prototype.contains = function (t: number): boolean {\n  return this[0] <= t && t <= this[1];\n};\n\nTiming.prototype.withDomain = function (t0: number, t1: number): Timing {\n  return Timing(this.easing, t0, t1);\n};\n\nTiming.prototype.withDuration = function (dt: number): Timing {\n  const t0 = this[0];\n  return Timing(this.easing, t0, t0 + dt);\n};\n\nTiming.prototype.overRange = function <Y>(this: Timing, y0: Interpolator<Y> | Y, y1: Y): Tweening<Y> {\n  let range: Interpolator<Y>;\n  if (arguments.length === 1) {\n    range = y0 as Interpolator<Y>;\n  } else {\n    range = Interpolator(y0 as Y, y1);\n  }\n  return Tweening(this, range);\n} as typeof Timing.prototype.overRange;\n\nTiming.prototype.equivalentTo = function (that: unknown, epsilon?: number): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Timing) {\n    return this.easing.equivalentTo(that.easing, epsilon)\n        && Values.equivalent(this[0], that[0], epsilon)\n        && Values.equivalent(this[1], that[1], epsilon);\n  }\n  return false;\n};\n\nTiming.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof Timing;\n};\n\nTiming.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Timing) {\n    return that.canEqual(this)\n        && this.easing.equals(that.easing)\n        && Values.equal(this[0], that[0])\n        && Values.equal(this[1], that[1]);\n  }\n  return false;\n};\n\nTiming.prototype.toString = function (): string {\n  return \"Timing(\" + this.easing + \", \" + this[0] + \", \" + this[1] + \")\";\n};\n\nTiming.fromInit = function (init: TimingInit): Timing {\n  let easing = init.easing;\n  if (easing === void 0) {\n    easing = Easing.linear;\n  } else if (typeof easing === \"string\") {\n    easing = Easing(easing);\n  }\n  let t0 = init.t0;\n  if (t0 === void 0) {\n    t0 = 0;\n  }\n  let t1 = init.t1;\n  if (t1 === void 0) {\n    const dt = init.dt;\n    if (dt !== void 0) {\n      t1 = t0 + dt;\n    } else {\n      t1 = t0;\n    }\n  }\n  return Timing(easing, t0, t1);\n};\n\nTiming.fromAny = function (value: AnyTiming | boolean | null | undefined): Timing | boolean {\n  if (value === void 0 || value === null) {\n    return false;\n  } else if (value instanceof Timing || typeof value === \"boolean\") {\n    return value;\n  } else if (typeof value === \"object\") {\n    return Timing.fromInit(value);\n  }\n  throw new TypeError(\"\" + value);\n} as typeof Timing.fromAny;\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Timing} from \"./Timing\";\n\nexport type AnyEasing = Easing | EasingType;\n\nexport type EasingType = \"linear\" | \"quad-in\" | \"quad-out\" | \"quad-in-out\"\n                       | \"cubic-in\" | \"cubic-out\" | \"cubic-in-out\"\n                       | \"quart-in\" | \"quart-out\" | \"quart-in-out\"\n                       | \"expo-in\" | \"expo-out\" | \"expo-in-out\"\n                       | \"circ-in\" | \"circ-out\" | \"circ-in-out\"\n                       | \"back-in\" | \"back-out\" | \"back-in-out\"\n                       | \"elastic-in\" | \"elastic-out\" | \"elastic-in-out\"\n                       | \"bounce-in\" | \"bounce-out\" | \"bounce-in-out\";\n\nexport interface Easing extends Timing {\n  readonly type: string;\n\n  readonly 0: 0;\n\n  readonly 1: 1;\n\n  readonly easing: this;\n\n  equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const Easing = function (type: string): Easing {\n  switch (type) {\n    case \"linear\": return Easing.linear;\n    case \"quad-in\": return Easing.quadIn;\n    case \"quad-out\": return Easing.quadOut;\n    case \"quad-in-out\": return Easing.quadInOut;\n    case \"cubic-in\": return Easing.cubicIn;\n    case \"cubic-out\": return Easing.cubicOut;\n    case \"cubic-in-out\": return Easing.cubicInOut;\n    case \"quart-in\": return Easing.quartIn;\n    case \"quart-out\": return Easing.quartOut;\n    case \"quart-in-out\": return Easing.quartInOut;\n    case \"expo-in\": return Easing.expoIn;\n    case \"expo-out\": return Easing.expoOut;\n    case \"expo-in-out\": return Easing.expoInOut;\n    case \"circ-in\": return Easing.circIn;\n    case \"circ-out\": return Easing.circOut;\n    case \"circ-in-out\": return Easing.circInOut;\n    case \"back-in\": return Easing.backIn;\n    case \"back-out\": return Easing.backOut;\n    case \"back-in-out\": return Easing.backInOut;\n    case \"elastic-in\": return Easing.elasticIn;\n    case \"elastic-out\": return Easing.elasticOut;\n    case \"elastic-in-out\": return Easing.elasticInOut;\n    case \"bounce-in\": return Easing.bounceIn;\n    case \"bounce-out\": return Easing.bounceOut;\n    case \"bounce-in-out\": return Easing.bounceInOut;\n    default: throw new Error(\"unknown easing: \" + type);\n  }\n} as {\n  (type: string): Easing;\n\n  /** @hidden */\n  prototype: Easing;\n\n  linear: Easing;\n  quadIn: Easing;\n  quadOut: Easing;\n  quadInOut: Easing;\n  cubicIn: Easing;\n  cubicOut: Easing;\n  cubicInOut: Easing;\n  quartIn: Easing;\n  quartOut: Easing;\n  quartInOut: Easing;\n  expoIn: Easing;\n  expoOut: Easing;\n  expoInOut: Easing;\n  circIn: Easing;\n  circOut: Easing;\n  circInOut: Easing;\n  backIn: Easing;\n  backOut: Easing;\n  backInOut: Easing;\n  elasticIn: Easing;\n  elasticOut: Easing;\n  elasticInOut: Easing;\n  bounceIn: Easing;\n  bounceOut: Easing;\n  bounceInOut: Easing;\n\n  fromAny(value: AnyEasing): Easing;\n};\n\nEasing.prototype = Object.create(Timing.prototype);\n\nObject.defineProperty(Easing.prototype, 0, {\n  value: 0,\n  enumerable: true,\n});\n\nObject.defineProperty(Easing.prototype, 1, {\n  value: 1,\n  enumerable: true,\n});\n\nObject.defineProperty(Easing.prototype, \"easing\", {\n  get(this: Easing): Easing {\n    return this;\n  },\n  enumerable: true,\n});\n\nEasing.prototype.equivalentTo = function (that: unknown, epsilon?: number): boolean {\n  return this === that;\n};\n\nEasing.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof Easing;\n};\n\nEasing.prototype.equals = function (that: unknown): boolean {\n  return this === that;\n};\n\nEasing.prototype.toString = function (): string {\n  return \"Easing(\\\"\" + this.type + \"\\\")\";\n};\n\nEasing.fromAny = function (value: AnyEasing): Easing {\n  if (value instanceof Easing) {\n    return value;\n  } else if (typeof value === \"string\") {\n    return Easing(value);\n  }\n  throw new TypeError(\"\" + value);\n};\n\nEasing.linear = function (u: number): number {\n  return u;\n} as unknown as Easing;\nObject.setPrototypeOf(Easing.linear, Easing.prototype);\nObject.defineProperty(Easing.linear, \"type\", {\n  value: \"linear\",\n  enumerable: true,\n});\n\nEasing.quadIn = function (u: number): number {\n  return u * u;\n} as Easing;\nObject.setPrototypeOf(Easing.quadIn, Easing.prototype);\nObject.defineProperty(Easing.quadIn, \"type\", {\n  value: \"quad-in\",\n  enumerable: true,\n});\n\nEasing.quadOut = function (u: number): number {\n  return u * (2 - u);\n} as Easing;\nObject.setPrototypeOf(Easing.quadOut, Easing.prototype);\nObject.defineProperty(Easing.quadOut, \"type\", {\n  value: \"quad-out\",\n  enumerable: true,\n});\n\nEasing.quadInOut = function (u: number): number {\n  u *= 2;\n  if (u <= 1) {\n    u = u * u;\n  } else {\n    u -= 1;\n    u = u * (2 - u);\n    u += 1;\n  }\n  u /= 2;\n  return u;\n} as Easing;\nObject.setPrototypeOf(Easing.quadInOut, Easing.prototype);\nObject.defineProperty(Easing.quadInOut, \"type\", {\n  value: \"quad-in-out\",\n  enumerable: true,\n});\n\nEasing.cubicIn = function (u: number): number {\n  return u * u * u;\n} as Easing;\nObject.setPrototypeOf(Easing.cubicIn, Easing.prototype);\nObject.defineProperty(Easing.cubicIn, \"type\", {\n  value: \"cubic-in\",\n  enumerable: true,\n});\n\nEasing.cubicOut = function (u: number): number {\n  u -= 1;\n  u = u * u * u;\n  u += 1;\n  return u;\n} as Easing;\nObject.setPrototypeOf(Easing.cubicOut, Easing.prototype);\nObject.defineProperty(Easing.cubicOut, \"type\", {\n  value: \"cubic-out\",\n  enumerable: true,\n});\n\nEasing.cubicInOut = function (u: number): number {\n  u *= 2;\n  if (u <= 1) {\n    u = u * u * u;\n  } else {\n    u -= 2;\n    u = u * u * u;\n    u += 2;\n  }\n  u /= 2;\n  return u;\n} as Easing;\nObject.setPrototypeOf(Easing.cubicInOut, Easing.prototype);\nObject.defineProperty(Easing.cubicInOut, \"type\", {\n  value: \"cubic-in-out\",\n  enumerable: true,\n});\n\nEasing.quartIn = function (u: number): number {\n  return u * u * u * u;\n} as Easing;\nObject.setPrototypeOf(Easing.quartIn, Easing.prototype);\nObject.defineProperty(Easing.quartIn, \"type\", {\n  value: \"quart-in\",\n  enumerable: true,\n});\n\nEasing.quartOut = function (u: number): number {\n  u -= 1;\n  return 1 - u * u * u * u;\n} as Easing;\nObject.setPrototypeOf(Easing.quartOut, Easing.prototype);\nObject.defineProperty(Easing.quartOut, \"type\", {\n  value: \"quart-out\",\n  enumerable: true,\n});\n\nEasing.quartInOut = function (u: number): number {\n  const v = u - 1;\n  return u < 0.5 ? 8 * u * u * u * u : 1 - 8 * v * v * v * v;\n} as Easing;\nObject.setPrototypeOf(Easing.quartInOut, Easing.prototype);\nObject.defineProperty(Easing.quartInOut, \"type\", {\n  value: \"quart-in-out\",\n  enumerable: true,\n});\n\nEasing.expoIn = function (u: number): number {\n  if (u === 0) {\n    return 0;\n  }\n  return Math.pow(2, 10 * (u - 1) );\n} as Easing;\nObject.setPrototypeOf(Easing.expoIn, Easing.prototype);\nObject.defineProperty(Easing.expoIn, \"type\", {\n  value: \"expo-in\",\n  enumerable: true,\n});\n\nEasing.expoOut = function (u: number): number {\n  if (u === 1) {\n    return 1;\n  }\n  return (-Math.pow(2, -10 * u) + 1);\n} as Easing;\nObject.setPrototypeOf(Easing.expoOut, Easing.prototype);\nObject.defineProperty(Easing.expoOut, \"type\", {\n  value: \"expo-out\",\n  enumerable: true,\n});\n\nEasing.expoInOut = function (u: number): number {\n  if (u === 1 || u === 0) {\n    return u;\n  }\n  u *= 2;\n  if (u < 1) {\n    return 0.5 * Math.pow(2, 10 * (u - 1));\n  }\n  return 0.5 * (-Math.pow(2, -10 * (u - 1)) + 2);\n} as Easing;\nObject.setPrototypeOf(Easing.expoInOut, Easing.prototype);\nObject.defineProperty(Easing.expoInOut, \"type\", {\n  value: \"expo-in-out\",\n  enumerable: true,\n});\n\nEasing.circIn = function (u: number): number {\n  return -1 * (Math.sqrt(1 - (u / 1) * u) - 1);\n} as Easing;\nObject.setPrototypeOf(Easing.circIn, Easing.prototype);\nObject.defineProperty(Easing.circIn, \"type\", {\n  value: \"circ-in\",\n  enumerable: true,\n});\n\nEasing.circOut = function (u: number): number {\n  u -= 1;\n  return Math.sqrt(1 - u * u);\n} as Easing;\nObject.setPrototypeOf(Easing.circOut, Easing.prototype);\nObject.defineProperty(Easing.circOut, \"type\", {\n  value: \"circ-out\",\n  enumerable: true,\n});\n\nEasing.circInOut = function (u: number): number {\n  u *= 2;\n  if (u < 1) {\n    return -0.5 * (Math.sqrt(1 - u * u) - 1);\n  }\n  const st = u - 2;\n  return 0.5 * (Math.sqrt(1 - st * st) + 1);\n} as Easing;\nObject.setPrototypeOf(Easing.circInOut, Easing.prototype);\nObject.defineProperty(Easing.circInOut, \"type\", {\n  value: \"circ-in-ou\",\n  enumerable: true,\n});\n\nEasing.backIn = function (u: number): number {\n  const m = 1.70158; // m - Magnitude\n  return u * u * (( m + 1) * u - m);\n} as Easing;\nObject.setPrototypeOf(Easing.backIn, Easing.prototype);\nObject.defineProperty(Easing.backIn, \"type\", {\n  value: \"back-in\",\n  enumerable: true,\n});\n\nEasing.backOut = function (u: number): number {\n  const m = 1.70158;\n  const st = (u / 1) - 1;\n  return (st * st * ((m + 1) * m + m)) + 1;\n} as Easing;\nObject.setPrototypeOf(Easing.backOut, Easing.prototype);\nObject.defineProperty(Easing.backOut, \"type\", {\n  value: \"back-out\",\n  enumerable: true,\n});\n\nEasing.backInOut = function (u: number): number {\n  const m = 1.70158;\n  const s = m * 1.525;\n  if ((u *= 2) < 1) {\n    return 0.5 * u * u * (((s + 1) * u) - s);\n  }\n  const st = u - 2;\n  return 0.5 * (st * st * ((s + 1) * st + s) + 2);\n} as Easing;\nObject.setPrototypeOf(Easing.backInOut, Easing.prototype);\nObject.defineProperty(Easing.backInOut, \"type\", {\n  value: \"back-in-out\",\n  enumerable: true,\n});\n\nEasing.elasticIn = function (u: number): number {\n  if (u === 0 || u === 1) {\n    return u;\n  }\n  const m = 0.7;\n  const st = (u / 1) - 1;\n  const s = (1 - m) / 2 * Math.PI * Math.asin(1);\n  return -(Math.pow(2, 10 * st) * Math.sin((st - s) * 2 * Math.PI / (1 - m)));\n} as Easing;\nObject.setPrototypeOf(Easing.elasticIn, Easing.prototype);\nObject.defineProperty(Easing.elasticIn, \"type\", {\n  value: \"elastic-in\",\n  enumerable: true,\n});\n\nEasing.elasticOut = function (u: number): number {\n  if (u === 0 || u === 1) {\n    return u;\n  }\n  const m = 0.7;\n  const s = (1 -  m) / (2 * Math.PI) * Math.asin(1);\n  u *= 2;\n  return (Math.pow(2, -10 * u) * Math.sin((u - s) * 2 * Math.PI / (1 - m))) + 1;\n} as Easing;\nObject.setPrototypeOf(Easing.elasticOut, Easing.prototype);\nObject.defineProperty(Easing.elasticOut, \"type\", {\n  value: \"elastic-out\",\n  enumerable: true,\n});\n\nEasing.elasticInOut = function (u: number): number {\n  if (u === 0 || u === 1) {\n    return u;\n  }\n  const m = 0.65;\n  const s = (1 - m) / (2 * Math.PI) * Math.asin(1);\n  const st = u * 2;\n  const st1 = st - 1;\n  if(st < 1) {\n    return -0.5 * (Math.pow(2, 10 * st1) * Math.sin((st1 - s) * 2 * Math.PI / (1 - m)));\n  }\n  return (Math.pow(2, -10 * st1) * Math.sin((st1 - s) * 2 * Math.PI / (1 - m)) * 0.5) + 1;\n} as Easing;\nObject.setPrototypeOf(Easing.elasticInOut, Easing.prototype);\nObject.defineProperty(Easing.elasticInOut, \"type\", {\n  value: \"elastic-in-out\",\n  enumerable: true,\n});\n\nEasing.bounceIn = function (u: number): number {\n  const p = 7.5625;\n  if ((u = 1 - u) < 1 / 2.75) {\n    return 1 - (p * u * u);\n  } else if (u < 2 / 2.75) {\n    return 1 - (p * (u -= 1.5 / 2.75) * u + 0.75);\n  } else if (u < 2.5 / 2.75) {\n    return 1 - (p * (u -= 2.25 / 2.75) * u + 0.9375);\n  }\n  return 1 - (p * (u -= 2.625 / 2.75) * u + 0.984375);\n} as Easing;\nObject.setPrototypeOf(Easing.bounceIn, Easing.prototype);\nObject.defineProperty(Easing.bounceIn, \"type\", {\n  value: \"bounce-in\",\n  enumerable: true,\n});\n\nEasing.bounceOut = function (u: number): number {\n  const p = 7.5625;\n  if (u < 1 / 2.75) {\n    return p * u * u;\n  } else if (u < 2 / 2.75) {\n    return p * (u -= 1.5 / 2.75) * u + 0.75;\n  } else if (u < 2.5 / 2.75) {\n    return p * (u -= 2.25 / 2.75) * u + 0.9375;\n  }\n  return p * (u -= 2.625 / 2.75) * u + 0.984375;\n} as Easing;\nObject.setPrototypeOf(Easing.bounceOut, Easing.prototype);\nObject.defineProperty(Easing.bounceOut, \"type\", {\n  value: \"bounce-out\",\n  enumerable: true,\n});\n\nEasing.bounceInOut = function (u: number): number {\n  const invert = u < 0.5;\n  u = invert ? 1 - (u * 2) : (u * 2) - 1;\n  const p = 7.5625;\n  if (u < 1 / 2.75) {\n    u = p * u * u;\n  } else if (u < 2 / 2.75) {\n    u = p * (u -= 1.5 / 2.75) * u + 0.75;\n  } else if (u < 2.5 / 2.75) {\n    u = p * (u -= 2.25 / 2.75) * u + 0.9375;\n  } else {\n    u = p * (u -= 2.625 / 2.75) * u + 0.984375;\n  }\n  return invert ? (1 - u) * 0.5 : u * 0.5 + 0.5;\n} as Easing;\nObject.setPrototypeOf(Easing.bounceInOut, Easing.prototype);\nObject.defineProperty(Easing.bounceInOut, \"type\", {\n  value: \"bounce-in-out\",\n  enumerable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mapping} from \"../mapping/Mapping\";\nimport type {Interpolator} from \"../interpolate/Interpolator\";\nimport type {Timing} from \"./Timing\";\n\nexport interface Tweening<Y> extends Mapping<number, Y> {\n  readonly domain: Timing;\n\n  readonly range: Interpolator<Y>;\n\n  withDomain(t0: number, t1: number): Tweening<Y>;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const Tweening = function <Y>(domain: Timing, range: Interpolator<Y>): Tweening<Y> {\n  const tweening = function (u: number): Y {\n    return tweening.range(tweening.domain(u));\n  } as Tweening<Y>;\n  Object.setPrototypeOf(tweening, Tweening.prototype);\n  Object.defineProperty(tweening, \"domain\", {\n    value: domain,\n    enumerable: true,\n  });\n  Object.defineProperty(tweening, \"range\", {\n    value: range,\n    enumerable: true,\n  });\n  return tweening;\n} as {\n  <Y>(domain: Timing, range: Interpolator<Y>): Tweening<Y>\n\n  /** @hidden */\n  prototype: Tweening<any>;\n};\n\nTweening.prototype = Object.create(Mapping.prototype);\n\nTweening.prototype.withDomain = function <Y>(this: Tweening<Y>, t0: number, t1: number): Tweening<Y> {\n  return this.domain.withDomain(t0, t1).overRange(this.range);\n};\n\nTweening.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof Tweening;\n};\n\nTweening.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Tweening) {\n    return this.domain.equals(that.domain) && this.range.equals(that.range);\n  }\n  return false;\n};\n\nTweening.prototype.toString = function (): string {\n  return \"Tweening(\" + this.domain + \", \" + this.range + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Domain} from \"../mapping/Domain\";\nimport type {Interpolate} from \"../interpolate/Interpolate\";\nimport type {Interpolator} from \"../interpolate/Interpolator\";\nimport {LinearDomainInterpolator} from \"../\"; // forward import\nimport {LinearRange} from \"../\"; // forward import\n\nexport interface LinearDomain extends Domain<number>, Interpolate<LinearDomain> {\n  readonly 0: number;\n\n  readonly 1: number;\n\n  readonly inverse: LinearRange;\n\n  contains(x: number): boolean;\n\n  interpolateTo(that: LinearDomain): Interpolator<LinearDomain>;\n  interpolateTo(that: unknown): Interpolator<LinearDomain> | null;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const LinearDomain = function (x0: number, x1: number): LinearDomain {\n  const domain = function (x: number): number {\n    const x0 = domain[0];\n    const x1 = domain[1];\n    const dx = x1 - x0;\n    return dx !== 0 ? (x - x0) / dx : 0;\n  } as LinearDomain;\n  Object.setPrototypeOf(domain, LinearDomain.prototype);\n  Object.defineProperty(domain, 0, {\n    value: x0,\n    enumerable: true,\n  });\n  Object.defineProperty(domain, 1, {\n    value: x1,\n    enumerable: true,\n  });\n  return domain;\n} as {\n  (x0: number, x1: number): LinearDomain;\n\n  /** @hidden */\n  prototype: LinearDomain;\n};\n\nLinearDomain.prototype = Object.create(Domain.prototype);\n\nObject.defineProperty(LinearDomain.prototype, \"inverse\", {\n  get(this: LinearDomain): LinearRange {\n    return LinearRange(this[0], this[1]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nLinearDomain.prototype.contains = function (x: number): boolean {\n  return this[0] <= x && x <= this[1];\n};\n\nLinearDomain.prototype.interpolateTo = function (this: LinearDomain, that: unknown): Interpolator<LinearDomain> | null {\n  if (that instanceof LinearDomain) {\n    return LinearDomainInterpolator(this, that);\n  }\n  return null;\n} as typeof LinearDomain.prototype.interpolateTo;\n\nLinearDomain.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof LinearDomain;\n};\n\nLinearDomain.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof LinearDomain) {\n    return that.canEqual(this) && this[0] === that[0] && this[1] === that[1];\n  }\n  return false;\n};\n\nLinearDomain.prototype.toString = function (): string {\n  return \"LinearDomain(\" + this[0] + \", \" + this[1] + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"../interpolate/Interpolator\";\nimport {LinearDomain} from \"./LinearDomain\";\n\n/** @hidden */\nexport const LinearDomainInterpolator = function (x0: LinearDomain, x1: LinearDomain): Interpolator<LinearDomain> {\n  const interpolator = function (u: number): LinearDomain {\n    const x0 = interpolator[0];\n    const x00 = x0[0];\n    const x01 = x0[1];\n    const x1 = interpolator[1];\n    const x10 = x1[0];\n    const x11 = x1[1];\n    return LinearDomain(x00 + u * (x10 - x00), x01 + u * (x11 - x01));\n  } as Interpolator<LinearDomain>;\n  Object.setPrototypeOf(interpolator, LinearDomainInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: x0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: x1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (x0: LinearDomain, x1: LinearDomain): Interpolator<LinearDomain>;\n\n  /** @hidden */\n  prototype: Interpolator<LinearDomain>;\n};\n\nLinearDomainInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Range} from \"../mapping/Range\";\nimport type {Interpolate} from \"../interpolate/Interpolate\";\nimport type {Interpolator} from \"../interpolate/Interpolator\";\nimport {LinearDomain} from \"../\"; // forward import\nimport {LinearRangeInterpolator} from \"../\"; // forward import\n\nexport interface LinearRange extends Range<number>, Interpolate<LinearRange> {\n  readonly 0: number;\n\n  readonly 1: number;\n\n  readonly inverse: LinearDomain;\n\n  interpolateTo(that: LinearRange): Interpolator<LinearRange>;\n  interpolateTo(that: unknown): Interpolator<LinearRange> | null;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const LinearRange = function (y0: number, y1: number): LinearRange {\n  const range = function (u: number): number {\n    const y0 = range[0];\n    const y1 = range[1];\n    return y0 + u * (y1 - y0);\n  } as LinearRange;\n  Object.setPrototypeOf(range, LinearRange.prototype);\n  Object.defineProperty(range, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(range, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return range;\n} as {\n  (y0: number, y1: number): LinearRange;\n\n  /** @hidden */\n  prototype: LinearRange;\n};\n\nLinearRange.prototype = Object.create(Range.prototype);\n\nObject.defineProperty(LinearRange.prototype, \"inverse\", {\n  get(this: LinearRange): LinearDomain {\n    return LinearDomain(this[0], this[1]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nLinearRange.prototype.interpolateTo = function (this: LinearRange, that: unknown): Interpolator<LinearRange> | null {\n  if (that instanceof LinearRange) {\n    return LinearRangeInterpolator(this, that);\n  }\n  return null;\n} as typeof LinearRange.prototype.interpolateTo;\n\nLinearRange.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof LinearRange;\n};\n\nLinearRange.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof LinearRange) {\n    return that.canEqual(this) && this[0] === that[0] && this[1] === that[1];\n  }\n  return false;\n};\n\nLinearRange.prototype.toString = function (): string {\n  return \"LinearRange(\" + this[0] + \", \" + this[1] + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"../interpolate/Interpolator\";\nimport {LinearRange} from \"./LinearRange\";\n\n/** @hidden */\nexport const LinearRangeInterpolator = function (y0: LinearRange, y1: LinearRange): Interpolator<LinearRange> {\n  const interpolator = function (u: number): LinearRange {\n    const y0 = interpolator[0];\n    const y00 = y0[0];\n    const y01 = y0[1];\n    const y1 = interpolator[1];\n    const y10 = y1[0];\n    const y11 = y1[1];\n    return LinearRange(y00 + u * (y10 - y00), y01 + u * (y11 - y01));\n  } as Interpolator<LinearRange>;\n  Object.setPrototypeOf(interpolator, LinearRangeInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: LinearRange, y1: LinearRange): Interpolator<LinearRange>;\n\n  /** @hidden */\n  prototype: Interpolator<LinearRange>;\n};\n\nLinearRangeInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mapping} from \"../mapping/Mapping\";\nimport type {Domain} from \"../mapping/Domain\";\nimport type {Range} from \"../mapping/Range\";\n\nexport interface Scale<X, Y> extends Mapping<X, Y> {\n  readonly inverse: Mapping<Y, X>;\n\n  withDomain(domain: Domain<X>): Scale<X, Y>;\n  withDomain(x0: X, x1: X): Scale<X, Y>;\n\n  overRange(range: Range<Y>): Scale<X, Y>;\n  overRange(y0: Y, y1: Y): Scale<X, Y>;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const Scale = function (): never {\n  throw new Error();\n} as {\n  /** @hidden */\n  (): never;\n\n  /** @hidden */\n  prototype: Scale<any, any>;\n};\n\nScale.prototype = Object.create(Mapping.prototype);\n\nScale.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof Scale;\n};\n\nScale.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof Scale) {\n    return this.domain.equals(that.domain) && this.range.equals(that.range);\n  }\n  return false;\n};\n\nScale.prototype.toString = function (): string {\n  return \"Scale(\" + this.domain + \", \" + this.range + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mapping} from \"../mapping/Mapping\";\nimport type {Domain} from \"../mapping/Domain\";\nimport type {Range} from \"../mapping/Range\";\nimport {Scale} from \"./Scale\";\n\nexport interface ContinuousScale<X, Y> extends Scale<X, Y> {\n  readonly inverse: Mapping<Y, X>;\n\n  withDomain(domain: Domain<X>): ContinuousScale<X, Y>;\n  withDomain(x0: X, x1: X): ContinuousScale<X, Y>;\n\n  overRange(range: Range<Y>): ContinuousScale<X, Y>;\n  overRange(y0: Y, y1: Y): ContinuousScale<X, Y>;\n\n  clampDomain(xMin: X | undefined, xMax: X | undefined,\n              zMin: number | undefined, zMax: number | undefined,\n              epsilon?: number): ContinuousScale<X, Y>;\n\n  solveDomain(x1: X, y1: Y, x2?: X, y2?: Y,\n              reflect?: boolean, epsilon?: number): ContinuousScale<X, Y>;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const ContinuousScale = function (): never {\n  throw new Error();\n} as {\n  /** @hidden */\n  (): never;\n\n  /** @hidden */\n  prototype: ContinuousScale<any, any>;\n};\n\nContinuousScale.prototype = Object.create(Scale.prototype);\n\nContinuousScale.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof ContinuousScale;\n};\n\nContinuousScale.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof ContinuousScale) {\n    return this.domain.equals(that.domain) && this.range.equals(that.range);\n  }\n  return false;\n};\n\nContinuousScale.prototype.toString = function (): string {\n  return \"ContinuousScale(\" + this.domain + \", \" + this.range + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"../interpolate/Interpolate\";\nimport type {Interpolator} from \"../interpolate/Interpolator\";\nimport {LinearDomain} from \"./LinearDomain\";\nimport {LinearRange} from \"./LinearRange\";\nimport {ContinuousScale} from \"./ContinuousScale\";\nimport {LinearScaleInterpolator} from \"./\"; // forward import\n\nexport interface LinearScale extends ContinuousScale<number, number>, Interpolate<LinearScale> {\n  readonly domain: LinearDomain;\n\n  readonly range: LinearRange;\n\n  readonly inverse: LinearScale;\n\n  withDomain(domain: LinearDomain): LinearScale;\n  withDomain(x0: number, x1: number): LinearScale;\n\n  overRange(range: LinearRange): LinearScale;\n  overRange(y0: number, y1: number): LinearScale;\n\n  clampDomain(xMin: number | undefined, xMax: number | undefined,\n              zMin: number | undefined, zMax: number | undefined,\n              epsilon?: number): LinearScale;\n\n  solveDomain(x1: number, y1: number, x2?: number, y2?: number,\n              reflect?: boolean, epsilon?: number): LinearScale;\n\n  interpolateTo(that: LinearScale): Interpolator<LinearScale>;\n  interpolateTo(that: unknown): Interpolator<LinearScale> | null;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const LinearScale = function (domain: LinearDomain, range: LinearRange): LinearScale {\n  const scale = function (x: number): number {\n    return scale.range(scale.domain(x));\n  } as LinearScale;\n  Object.setPrototypeOf(scale, LinearScale.prototype);\n  Object.defineProperty(scale, \"domain\", {\n    value: domain,\n    enumerable: true,\n  });\n  Object.defineProperty(scale, \"range\", {\n    value: range,\n    enumerable: true,\n  });\n  return scale;\n} as {\n  (domain: LinearDomain, range: LinearRange): LinearScale;\n\n  /** @hidden */\n  prototype: LinearScale;\n};\n\nLinearScale.prototype = Object.create(ContinuousScale.prototype);\n\nObject.defineProperty(LinearScale.prototype, \"inverse\", {\n  get(this: LinearScale): LinearScale {\n    return LinearScale(this.range.inverse, this.domain.inverse);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nLinearScale.prototype.withDomain = function (x0: LinearDomain | number, x1?: number): LinearScale {\n  let domain: LinearDomain;\n  if (arguments.length === 1) {\n    domain = x0 as LinearDomain;\n  } else {\n    domain = LinearDomain(x0 as number, x1!);\n  }\n  return LinearScale(domain, this.range);\n};\n\nLinearScale.prototype.overRange = function (y0: LinearRange | number, y1?: number): LinearScale {\n  let range: LinearRange;\n  if (arguments.length === 1) {\n    range = y0 as LinearRange;\n  } else {\n    range = LinearRange(y0 as number, y1!);\n  }\n  return LinearScale(this.domain, range);\n};\n\nLinearScale.prototype.clampDomain = function (xMin: number | undefined, xMax: number | undefined,\n                                              zMin: number | undefined, zMax: number | undefined,\n                                              epsilon?: number): LinearScale {\n  if (epsilon === void 0) {\n    epsilon = Equivalent.Epsilon;\n  }\n  let x0 = this.domain[0];\n  let x1 = this.domain[1];\n  if (xMin !== void 0 && xMax !== void 0 && Math.abs(x1 - x0) > xMax - xMin) {\n    if (x0 < x1) {\n      x0 = xMin;\n      x1 = xMax;\n    } else {\n      x1 = xMin;\n      x0 = xMax;\n    }\n  } else {\n    if (xMin !== void 0) {\n      if (x0 < x1 && x0 < xMin) {\n        x1 += xMin - x0;\n        x0 = xMin;\n      } else if (x1 < x0 && x1 < xMin) {\n        x0 += xMin - x1;\n        x1 = xMin;\n      }\n    }\n    if (xMax !== void 0) {\n      if (x0 < x1 && x1 > xMax) {\n        x0 -= x1 - xMax;\n        x1 = xMax;\n      } else if (x1 < x0 && x0 > xMax) {\n        x1 -= x0 - xMax;\n        x0 = xMax;\n      }\n    }\n  }\n\n  const y0 = this(x0);\n  const y1 = this(x1);\n  const dy = y0 < y1 ? y1 - y0 : y0 - y1;\n  const z = Math.abs(dy / (x1 - x0));\n  if (zMin !== void 0 && z < 1 / zMin) {\n    const dz = dy * zMin;\n    const xSum = x0 + x1;\n    x0 = (xSum - dz) / 2;\n    x1 = (xSum + dz) / 2;\n  } else if (zMax !== void 0 && z > 1 / zMax) {\n    const dz = dy * zMax;\n    const xSum = x0 + x1;\n    x0 = (xSum - dz) / 2;\n    x1 = (xSum + dz) / 2;\n  }\n\n  if (Math.abs(x0 - this.domain[0]) < epsilon && Math.abs(x1 - this.domain[1]) < epsilon) {\n    return this;\n  } else {\n    return LinearScale(LinearDomain(x0, x1), this.range);\n  }\n};\n\nLinearScale.prototype.solveDomain = function (x1: number, y1: number, x2?: number, y2?: number,\n                                              reflect?: boolean, epsilon?: number): LinearScale {\n  if (epsilon === void 0) {\n    epsilon = Equivalent.Epsilon;\n  }\n  const dx = this.domain[1] - this.domain[0];\n  const y0 = this.range[0];\n  const y3 = this.range[1];\n  let m: number;\n  if (x2 === void 0 || y2 === void 0 || Math.abs(x2 - x1) < epsilon || Math.abs(y2 - y1) < epsilon) {\n    m = (y3 - y0) / (dx !== 0 ? dx : epsilon);\n  } else {\n    m = (y2 - y1) / (x2 - x1);\n    if ((reflect === void 0 || !reflect) && (m < 0 !== (y3 - y0) / dx < 0)) {\n      m = -m;\n    }\n  }\n  const b = y1 - m * x1;\n  const x0 = (y0 - b) / m;\n  const x3 = (y3 - b) / m;\n\n  if (Math.abs(x0 - this.domain[0]) < epsilon && Math.abs(x3 - this.domain[1]) < epsilon) {\n    return this;\n  } else {\n    return LinearScale(LinearDomain(x0, x3), this.range);\n  }\n};\n\nLinearScale.prototype.interpolateTo = function (this: LinearScale, that: unknown): Interpolator<LinearScale> | null {\n  if (that instanceof LinearScale) {\n    return LinearScaleInterpolator(this, that);\n  }\n  return null;\n} as typeof LinearScale.prototype.interpolateTo;\n\nLinearScale.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof LinearScale;\n};\n\nLinearScale.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof LinearScale) {\n    return this.domain.equals(that.domain) && this.range.equals(that.range);\n  }\n  return false;\n};\n\nLinearScale.prototype.toString = function (): string {\n  return \"LinearScale(\" + this.domain + \", \" + this.range + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"../interpolate/Interpolator\";\nimport {LinearDomain} from \"./LinearDomain\";\nimport {LinearRange} from \"./LinearRange\";\nimport {LinearScale} from \"./LinearScale\";\n\n/** @hidden */\nexport const LinearScaleInterpolator = function (s0: LinearScale, s1: LinearScale): Interpolator<LinearScale> {\n  const interpolator = function (u: number): LinearScale {\n    const s0 = interpolator[0];\n    const s1 = interpolator[1];\n    const x0 = s0.domain;\n    const x00 = x0[0];\n    const x01 = x0[1];\n    const x1 = s1.domain;\n    const x10 = x1[0];\n    const x11 = x1[1];\n    const domain = LinearDomain(x00 + u * (x10 - x00), x01 + u * (x11 - x01));\n    const y0 = s0.range;\n    const y00 = y0[0];\n    const y01 = y0[1];\n    const y1 = s1.range;\n    const y10 = y1[0];\n    const y11 = y1[1];\n    const range = LinearRange(y00 + u * (y10 - y00), y01 + u * (y11 - y01));\n    return LinearScale(domain, range);\n  } as Interpolator<LinearScale>;\n  Object.setPrototypeOf(interpolator, LinearScaleInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: s0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: s1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (s0: LinearScale, s1: LinearScale): Interpolator<LinearScale>;\n\n  /** @hidden */\n  prototype: Interpolator<LinearScale>;\n};\n\nLinearScaleInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport class KeysCursor<K, V> extends Cursor<K> {\n  /** @hidden */\n  readonly cursor!: Cursor<[K, V]>;\n\n  constructor(cursor: Cursor<[K, V]>) {\n    super();\n    Object.defineProperty(this, \"cursor\", {\n      value: cursor,\n      enumerable: true,\n    });\n  }\n\n  override isEmpty(): boolean {\n    return this.cursor.isEmpty();\n  }\n\n  override head(): K {\n    return this.cursor.head()[0];\n  }\n\n  override step(): void {\n    this.cursor.step();\n  }\n\n  override skip(count: number): void {\n    this.cursor.skip(count);\n  }\n\n  override hasNext(): boolean {\n    return this.cursor.hasNext();\n  }\n\n  override nextIndex(): number {\n    return this.cursor.nextIndex();\n  }\n\n  override next(): {value?: K, done: boolean} {\n    const {value, done} = this.cursor.next();\n    return {value: value && value[0], done};\n  }\n\n  override hasPrevious(): boolean {\n    return this.cursor.hasPrevious();\n  }\n\n  override previousIndex(): number {\n    return this.cursor.previousIndex();\n  }\n\n  override previous(): {value?: K, done: boolean} {\n    const {value, done} = this.cursor.previous();\n    return {value: value && value[0], done};\n  }\n\n  override delete(): void {\n    this.cursor.delete();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport class ValuesCursor<K, V> extends Cursor<V> {\n  /** @hidden */\n  readonly cursor!: Cursor<[K, V]>;\n\n  constructor(cursor: Cursor<[K, V]>) {\n    super();\n    Object.defineProperty(this, \"cursor\", {\n      value: cursor,\n      enumerable: true,\n    });\n  }\n\n  override isEmpty(): boolean {\n    return this.cursor.isEmpty();\n  }\n\n  override head(): V {\n    return this.cursor.head()[1];\n  }\n\n  override step(): void {\n    this.cursor.step();\n  }\n\n  override skip(count: number): void {\n    this.cursor.skip(count);\n  }\n\n  override hasNext(): boolean {\n    return this.cursor.hasNext();\n  }\n\n  override nextIndex(): number {\n    return this.cursor.nextIndex();\n  }\n\n  override next(): {value?: V, done: boolean} {\n    const {value, done} = this.cursor.next();\n    return {value: value && value[1], done};\n  }\n\n  override hasPrevious(): boolean {\n    return this.cursor.hasPrevious();\n  }\n\n  override previousIndex(): number {\n    return this.cursor.previousIndex();\n  }\n\n  override previous(): {value?: V, done: boolean} {\n    const {value, done} = this.cursor.previous();\n    return {value: value && value[1], done};\n  }\n\n  override delete(): void {\n    this.cursor.delete();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport abstract class NodeCursor<T, P> extends Cursor<T> {\n  /** @hidden */\n  readonly pages!: ReadonlyArray<P>;\n  /** @hidden */\n  index: number;\n  /** @hidden */\n  childIndex: number;\n  /** @hidden */\n  childCursor: Cursor<T> | null;\n\n  constructor(pages: ReadonlyArray<P>, index: number,\n              childIndex: number, childCursor: Cursor<T> | null) {\n    super();\n    Object.defineProperty(this, \"pages\", {\n      value: pages,\n      enumerable: true,\n    });\n    this.index = index;\n    this.childIndex = childIndex;\n    this.childCursor = childCursor;\n  }\n\n  protected abstract pageSize(page: P): number;\n\n  protected abstract pageCursor(page: P): Cursor<T>;\n\n  protected abstract reversePageCursor(page: P): Cursor<T>;\n\n  override isEmpty(): boolean {\n    do {\n      if (this.childCursor !== null) {\n        if (!this.childCursor.isEmpty()) {\n          return false;\n        } else {\n          this.childCursor = null;\n        }\n      } else if (this.childIndex < this.pages.length) {\n        this.childCursor = this.pageCursor(this.pages[this.childIndex]!);\n        this.childIndex += 1;\n      } else {\n        this.childIndex = this.pages.length;\n        return true;\n      }\n    } while (true);\n  }\n\n  override head(): T {\n    do {\n      if (this.childCursor !== null) {\n        if (!this.childCursor.isEmpty()) {\n          return this.childCursor.head();\n        } else {\n          this.childCursor = null;\n        }\n      } else {\n        if (this.childIndex < this.pages.length) {\n          this.childCursor = this.pageCursor(this.pages[this.childIndex]!);\n          this.childIndex += 1;\n        } else {\n          this.childIndex = this.pages.length;\n          throw new Error(\"empty\");\n        }\n      }\n    } while (true);\n  }\n\n  override step(): void {\n    do {\n      if (this.childCursor !== null) {\n        if (!this.childCursor.isEmpty()) {\n          this.index += 1;\n          return;\n        } else {\n          this.childCursor = null;\n        }\n      } else {\n        if (this.childIndex < this.pages.length) {\n          this.childCursor = this.pageCursor(this.pages[this.childIndex]!);\n          this.childIndex += 1;\n        } else {\n          this.childIndex = this.pages.length;\n          throw new Error(\"empty\");\n        }\n      }\n    } while (true);\n  }\n\n  override skip(count: number): void {\n    while (count > 0) {\n      if (this.childCursor !== null) {\n        if (this.childCursor.hasNext()) {\n          this.index += 1;\n          count -= 1;\n          this.childCursor.next();\n        } else {\n          this.childCursor = null;\n        }\n      } else if (this.childIndex < this.pages.length) {\n        const page = this.pages[this.childIndex]!;\n        const pageSize = this.pageSize(page);\n        this.childIndex += 1;\n        if (pageSize < count) {\n          this.childCursor = this.pageCursor(page);\n          if (count > 0) {\n            this.index += count;\n            this.childCursor!.skip(count);\n            count = 0;\n          }\n          break;\n        } else {\n          this.index += pageSize;\n          count -= pageSize;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  override hasNext(): boolean {\n    do {\n      if (this.childCursor !== null) {\n        if (this.childCursor.hasNext()) {\n          return true;\n        } else {\n          this.childCursor = null;\n        }\n      } else if (this.childIndex < this.pages.length) {\n        this.childCursor = this.pageCursor(this.pages[this.childIndex]!);\n        this.childIndex += 1;\n      } else {\n        this.childIndex = this.pages.length;\n        return false;\n      }\n    } while (true);\n  }\n\n  override nextIndex(): number {\n    return this.index;\n  }\n\n  override next(): {value?: T, done: boolean} {\n    do {\n      if (this.childCursor !== null) {\n        if (this.childCursor.hasNext()) {\n          this.index += 1;\n          return this.childCursor.next();\n        } else {\n          this.childCursor = null;\n        }\n      } else {\n        if (this.childIndex < this.pages.length) {\n          this.childCursor = this.pageCursor(this.pages[this.childIndex]!);\n          this.childIndex += 1;\n        } else {\n          this.childIndex = this.pages.length;\n          return {done: true};\n        }\n      }\n    } while (true);\n  }\n\n  override hasPrevious(): boolean {\n    do {\n      if (this.childCursor !== null) {\n        if (this.childCursor.hasPrevious()) {\n          return true;\n        } else {\n          this.childCursor = null;\n        }\n      } else if (this.childIndex > 0) {\n        this.childCursor = this.reversePageCursor(this.pages[this.childIndex - 1]!);\n        this.childIndex -= 1;\n      } else {\n        this.childIndex = 0;\n        return false;\n      }\n    } while (true);\n  }\n\n  override previousIndex(): number {\n    return this.index - 1;\n  }\n\n  override previous(): {value?: T, done: boolean} {\n    do {\n      if (this.childCursor !== null) {\n        if (this.childCursor.hasPrevious()) {\n          this.index -= 1;\n          return this.childCursor.previous();\n        } else {\n          this.childCursor = null;\n        }\n      } else if (this.childIndex > 0) {\n        this.childCursor = this.reversePageCursor(this.pages[this.childIndex - 1]!);\n        this.childIndex -= 1;\n      } else {\n        this.childIndex = 0;\n        return {done: true};\n      }\n    } while (true);\n  }\n\n  override set(newValue: T): void {\n    this.childCursor!.set(newValue);\n  }\n\n  override delete(): void {\n    this.childCursor!.delete();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Values} from \"@swim/util\";\nimport type {BTreePage} from \"./BTreePage\";\n\n/** @hidden */\nexport abstract class BTreeContext<K, V> {\n  get pageSplitSize(): number {\n    return 32;\n  }\n\n  set pageSplitSize(pageSplitSize: number) {\n    Object.defineProperty(this, \"pageSplitSize\", {\n      value: pageSplitSize,\n      configurable: true,\n      enumerable: true,\n      writable: true,\n    });\n  }\n\n  compare(x: K, y: K): number {\n    return Values.compare(x, y);\n  }\n\n  pageShouldSplit(page: BTreePage<K, V, unknown>): boolean {\n    return page.arity > this.pageSplitSize;\n  }\n\n  pageShouldMerge(page: BTreePage<K, V, unknown>): boolean {\n    return page.arity < this.pageSplitSize >>> 1;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor, ReducedMap} from \"@swim/util\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTreePage} from \"./\"; // forward import\n\nexport class BTree<K = unknown, V = unknown, U = never> extends BTreeContext<K, V> implements ReducedMap<K, V, U> {\n  root: BTreePage<K, V, U>;\n\n  constructor(root?: BTreePage<K, V, U>) {\n    super();\n    if (root === void 0) {\n      root = BTreePage.empty();\n    }\n    this.root = root;\n  }\n\n  get size(): number {\n    return this.root.size;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  has(key: K): boolean {\n    return this.root.has(key, this);\n  }\n\n  get(key: K): V | undefined {\n    return this.root.get(key, this);\n  }\n\n  getEntry(index: number): [K, V] | undefined {\n    return this.root.getEntry(index);\n  }\n\n  firstKey(): K | undefined {\n    const entry = this.root.firstEntry();\n    if (entry !== void 0) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  firstValue(): V | undefined {\n    const entry = this.root.firstEntry();\n    if (entry !== void 0) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  firstEntry(): [K, V] | undefined {\n    return this.root.firstEntry();\n  }\n\n  lastKey(): K | undefined {\n    const entry = this.root.lastEntry();\n    if (entry !== void 0) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  lastValue(): V | undefined {\n    const entry = this.root.lastEntry();\n    if (entry !== void 0) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  lastEntry(): [K, V] | undefined {\n    return this.root.lastEntry();\n  }\n\n  nextKey(key: K): K | undefined {\n    const entry = this.root.nextEntry(key, this);\n    if (entry !== void 0) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  nextValue(key: K): V | undefined {\n    const entry = this.root.nextEntry(key, this);\n    if (entry !== void 0) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  nextEntry(key: K): [K, V] | undefined {\n    return this.root.nextEntry(key, this);\n  }\n\n  previousKey(key: K): K | undefined {\n    const entry = this.root.previousEntry(key, this);\n    if (entry !== void 0) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  previousValue(key: K): V | undefined {\n    const entry = this.root.previousEntry(key, this);\n    if (entry !== void 0) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  previousEntry(key: K): [K, V] | undefined {\n    return this.root.previousEntry(key, this);\n  }\n\n  set(key: K, newValue: V): this {\n    const oldRoot = this.root;\n    let newRoot = this.root.updated(key, newValue, this);\n    if (oldRoot !== newRoot) {\n      if (newRoot.size > oldRoot.size) {\n        newRoot = newRoot.balanced(this);\n      }\n      this.root = newRoot;\n    }\n    return this;\n  }\n\n  delete(key: K): boolean {\n    const oldRoot = this.root;\n    const newRoot = this.root.removed(key, this);\n    if (oldRoot !== newRoot) {\n      this.root = newRoot;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  drop(lower: number): this {\n    if (lower > 0 && this.root.size > 0) {\n      if (lower < this.root.size) {\n        this.root = this.root.drop(lower, this);\n      } else {\n        this.root = BTreePage.empty();\n      }\n    }\n    return this;\n  }\n\n  take(upper: number): this {\n    if (upper < this.root.size && this.root.size > 0) {\n      if (upper > 0) {\n        this.root = this.root.take(upper, this);\n      } else {\n        this.root = BTreePage.empty();\n      }\n    }\n    return this;\n  }\n\n  clear(): void {\n    this.root = BTreePage.empty();\n  }\n\n  updated(key: K, newValue: V): BTree<K, V, U> {\n    const oldRoot = this.root;\n    let newRoot = oldRoot.updated(key, newValue, this);\n    if (oldRoot !== newRoot) {\n      if (newRoot.size > oldRoot.size) {\n        newRoot = newRoot.balanced(this);\n      }\n      return this.copy(newRoot);\n    } else {\n      return this;\n    }\n  }\n\n  removed(key: K): BTree<K, V, U> {\n    const oldRoot = this.root;\n    const newRoot = oldRoot.removed(key, this);\n    if (oldRoot !== newRoot) {\n      return this.copy(newRoot);\n    } else {\n      return this;\n    }\n  }\n\n  cleared(): BTree<K, V, U> {\n    if (!this.root.isEmpty()) {\n      return this.copy(BTreePage.empty());\n    } else {\n      return this;\n    }\n  }\n\n  reduced(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): U {\n    const oldRoot = this.root;\n    const newRoot = oldRoot.reduced(identity, accumulator, combiner);\n    if (oldRoot !== newRoot) {\n      this.root = newRoot;\n    }\n    return newRoot.fold!;\n  }\n\n  forEach<T>(callback: (key: K, value: V) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, key: K, value: V) => T | void,\n                thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, key: K, value: V) => T | void,\n                thisArg?: S): T | undefined {\n    return this.root.forEach(callback, thisArg);\n  }\n\n  forEachKey<T>(callback: (key: K) => T | void): T | undefined;\n  forEachKey<T, S>(callback: (this: S, key: K) => T | void,\n                   thisArg: S): T | undefined;\n  forEachKey<T, S>(callback: (this: S | undefined, key: K) => T | void,\n                   thisArg?: S): T | undefined {\n    return this.root.forEachKey(callback, thisArg);\n  }\n\n  forEachValue<T>(callback: (value: V) => T | void): T | undefined;\n  forEachValue<T, S>(callback: (this: S, value: V) => T | void,\n                     thisArg: S): T | undefined;\n  forEachValue<T, S>(callback: (this: S | undefined, value: V) => T | void,\n                     thisArg?: S): T | undefined {\n    return this.root.forEachValue(callback, thisArg);\n  }\n\n  keys(): Cursor<K> {\n    return this.root.keys();\n  }\n\n  values(): Cursor<V> {\n    return this.root.values();\n  }\n\n  entries(): Cursor<[K, V]> {\n    return this.root.entries();\n  }\n\n  reverseKeys(): Cursor<K> {\n    return this.root.reverseKeys();\n  }\n\n  reverseValues(): Cursor<V> {\n    return this.root.reverseValues();\n  }\n\n  reverseEntries(): Cursor<[K, V]> {\n    return this.root.reverseEntries();\n  }\n\n  clone(): BTree<K, V, U> {\n    return this.copy(this.root);\n  }\n\n  protected copy(root: BTreePage<K, V, U>): BTree<K, V, U> {\n    const tree = new BTree(root);\n    if (tree.compare !== this.compare) {\n      tree.compare = this.compare;\n    }\n    if (tree.pageSplitSize !== this.pageSplitSize) {\n      tree.pageSplitSize = this.pageSplitSize;\n    }\n    return tree;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Cursor} from \"@swim/util\";\nimport {KeysCursor} from \"./KeysCursor\";\nimport {ValuesCursor} from \"./ValuesCursor\";\nimport type {BTreeContext} from \"./BTreeContext\";\nimport {BTreeLeaf} from \"./\"; // forward import\n\n/** @hidden */\nexport abstract class BTreePage<K, V, U> {\n  abstract readonly arity: number;\n\n  abstract readonly size: number;\n\n  abstract isEmpty(): boolean;\n\n  abstract readonly fold: U | undefined;\n\n  abstract minKey(): K;\n\n  abstract maxKey(): K;\n\n  abstract has(key: K, tree: BTreeContext<K, V>): boolean;\n\n  abstract get(key: K, tree: BTreeContext<K, V>): V | undefined;\n\n  abstract getEntry(index: number): [K, V] | undefined;\n\n  abstract firstEntry(): [K, V] | undefined;\n\n  abstract lastEntry(): [K, V] | undefined;\n\n  abstract nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined;\n\n  abstract previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined;\n\n  abstract updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract removed(key: K, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract drop(lower: number, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract take(upper: number, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract balanced(tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract split(index: number): BTreePage<K, V, U>;\n\n  abstract splitLeft(index: number): BTreePage<K, V, U>;\n\n  abstract splitRight(index: number): BTreePage<K, V, U>;\n\n  abstract reduced(identity: U, accumulator: (result: U, element: V) => U,\n                   combiner: (result: U, result2: U) => U): BTreePage<K, V, U>;\n\n  abstract forEach<T, S>(callback: (this: S, key: K, value: V) => T | void,\n                         thisArg: S): T | undefined;\n\n  abstract forEachKey<T, S>(callback: (this: S, key: K) => T | void,\n                            thisArg: S): T | undefined;\n\n  abstract forEachValue<T, S>(callback: (this: S, value: V) => T | void,\n                              thisArg: S): T | undefined;\n\n  keys(): Cursor<K> {\n    return new KeysCursor(this.entries());\n  }\n\n  values(): Cursor<V> {\n    return new ValuesCursor(this.entries());\n  }\n\n  abstract entries(): Cursor<[K, V]>;\n\n  reverseKeys(): Cursor<K> {\n    return new KeysCursor(this.reverseEntries());\n  }\n\n  reverseValues(): Cursor<V> {\n    return new ValuesCursor(this.reverseEntries());\n  }\n\n  abstract reverseEntries(): Cursor<[K, V]>;\n\n  @Lazy\n  static empty<K, V, U>(): BTreeLeaf<K, V, U> {\n    return new BTreeLeaf([], void 0 as U | undefined);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport type {BTreeContext} from \"./BTreeContext\";\nimport {BTreePage} from \"./BTreePage\";\nimport {BTreeNode} from \"./\"; // forward import\n\n/** @hidden */\nexport class BTreeLeaf<K, V, U> extends BTreePage<K, V, U> {\n  /** @hidden */\n  readonly slots!: ReadonlyArray<[K, V]>;\n\n  constructor(slots: ReadonlyArray<[K, V]>, fold: U | undefined) {\n    super();\n    Object.defineProperty(this, \"slots\", {\n      value: slots,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"fold\", {\n      value: fold,\n      enumerable: true,\n    });\n  }\n\n  override get arity(): number {\n    return this.slots.length;\n  }\n\n  override get size(): number {\n    return this.slots.length;\n  }\n\n  override isEmpty(): boolean {\n    return this.slots.length === 0;\n  }\n\n  override readonly fold!: U | undefined;\n\n  override minKey(): K {\n    return this.slots[0]![0];\n  }\n\n  override maxKey(): K {\n    return this.slots[this.slots.length - 1]![0];\n  }\n\n  override has(key: K, tree: BTreeContext<K, V>): boolean {\n    return this.lookup(key, tree) >= 0;\n  }\n\n  override get(key: K, tree: BTreeContext<K, V>): V | undefined {\n    const x = this.lookup(key, tree);\n    if (x >= 0) {\n      return this.slots[x]![1];\n    } else {\n      return void 0;\n    }\n  }\n\n  override getEntry(index: number): [K, V] | undefined {\n    return this.slots[index];\n  }\n\n  override firstEntry(): [K, V] | undefined {\n    const slots = this.slots;\n    if (slots.length !== 0) {\n      return slots[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  override lastEntry(): [K, V] | undefined {\n    const slots = this.slots;\n    if (slots.length !== 0) {\n      return slots[slots.length - 1];\n    } else {\n      return void 0;\n    }\n  }\n\n  override nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    return this.slots[x];\n  }\n\n  override previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x -= 1;\n    } else {\n      x = -(x + 2);\n    }\n    return this.slots[x];\n  }\n\n  override updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      return this.updatedSlot(x, key, newValue);\n    } else {\n      x = -(x + 1);\n      return this.insertedSlot(x, key, newValue);\n    }\n  }\n\n  /** @hidden */\n  updatedSlot(x: number, key: K, newValue: V): BTreeLeaf<K, V, U> {\n    const oldSlots = this.slots;\n    if (newValue !== oldSlots[x]![1]) {\n      const newSlots = oldSlots.slice(0);\n      newSlots[x] = [key, newValue];\n      return new BTreeLeaf(newSlots, void 0 as U | undefined);\n    } else {\n      return this;\n    }\n  }\n\n  /** @hidden */\n  insertedSlot(x: number, key: K, newValue: V): BTreeLeaf<K, V, U> {\n    const oldSlots = this.slots;\n    const n = oldSlots.length + 1;\n    const newSlots = new Array<[K, V]>(n);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i]!;\n    }\n    newSlots[x] = [key, newValue];\n    for (let i = x; i < n - 1; i += 1) {\n      newSlots[i + 1] = oldSlots[i]!;\n    }\n    return new BTreeLeaf(newSlots, void 0 as U | undefined);\n  }\n\n  override removed(key: K, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    const x = this.lookup(key, tree);\n    if (x >= 0) {\n      if (this.slots.length > 1) {\n        return this.removedSlot(x);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  /** @hidden */\n  removedSlot(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this.slots;\n    const newSlots = new Array<[K, V]>(oldSlots.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i]!;\n    }\n    for (let i = x; i < newSlots.length; i += 1) {\n      newSlots[i] = oldSlots[i + 1]!;\n    }\n    return new BTreeLeaf(newSlots, void 0 as U | undefined);\n  }\n\n  override drop(lower: number, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    if (lower > 0) {\n      const oldSlots = this.slots;\n      if (lower < oldSlots.length) {\n        const size = oldSlots.length - lower;\n        const newSlots = new Array<[K, V]>(size);\n        for (let i = 0; i < size; i += 1) {\n          newSlots[i] = oldSlots[i + lower]!;\n        }\n        return new BTreeLeaf(newSlots, void 0 as U | undefined);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override take(upper: number, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    const oldSlots = this.slots;\n    if (upper < oldSlots.length) {\n      if (upper > 0) {\n        const newSlots = new Array<[K, V]>(upper);\n        for (let i = 0; i < upper; i += 1) {\n          newSlots[i] = oldSlots[i]!;\n        }\n        return new BTreeLeaf(newSlots, void 0 as U | undefined);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override balanced(tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    const n = this.slots.length;\n    if (n > 1 && tree.pageShouldSplit(this)) {\n      const x = n >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  override split(x: number): BTreeNode<K, V, U> {\n    const newPages = new Array<BTreePage<K, V, U>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<K>(1);\n    newKnots[0] = newRightPage.minKey();\n\n    return new BTreeNode(newPages, newKnots, void 0, this.slots.length);\n  }\n\n  override splitLeft(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this.slots;\n    const newSlots = new Array<[K, V]>(x);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i]!;\n    }\n    return new BTreeLeaf(newSlots, void 0 as U | undefined);\n  }\n\n  override splitRight(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this.slots;\n    const y = oldSlots.length - x;\n    const newSlots = new Array<[K, V]>(y);\n    for (let i = 0; i < y; i += 1) {\n      newSlots[i] = oldSlots[i + x]!;\n    }\n    return new BTreeLeaf(newSlots, void 0 as U | undefined);\n  }\n\n  override reduced(identity: U, accumulator: (result: U, element: V) => U,\n                   combiner: (result: U, result2: U) => U): BTreeLeaf<K, V, U> {\n    if (this.fold === void 0) {\n      const slots = this.slots;\n      let fold = identity;\n      for (let i = 0, n = slots.length; i < n; i += 1) {\n        fold = accumulator(fold, slots[i]![1]);\n      }\n      return new BTreeLeaf(slots, fold);\n    } else {\n      return this;\n    }\n  }\n\n  override forEach<T, S>(callback: (this: S, key: K, value: V) => T | void,\n                         thisArg: S): T | undefined {\n    const slots = this.slots;\n    for (let i = 0, n = slots.length; i < n; i += 1) {\n      const slot = slots[i]!;\n      const result = callback.call(thisArg, slot[0], slot[1]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  override forEachKey<T, S>(callback: (this: S, key: K) => T | void,\n                            thisArg: S): T | undefined {\n    const slots = this.slots;\n    for (let i = 0, n = slots.length; i < n; i += 1) {\n      const slot = slots[i]!;\n      const result = callback.call(thisArg, slot[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  override forEachValue<T, S>(callback: (this: S, value: V) => T | void,\n                              thisArg: S): T | undefined {\n    const slots = this.slots;\n    for (let i = 0, n = slots.length; i < n; i += 1) {\n      const slot = slots[i]!;\n      const result = callback.call(thisArg, slot[1]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  override entries(): Cursor<[K, V]> {\n    return Cursor.array(this.slots);\n  }\n\n  override reverseEntries(): Cursor<[K, V]> {\n    return Cursor.array(this.slots, this.slots.length);\n  }\n\n  /** @hidden */\n  lookup(key: K, tree: BTreeContext<K, V>): number {\n    let lo = 0;\n    let hi = this.slots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      const order = tree.compare(key, this.slots[mid]![0]);\n      if (order > 0) {\n        lo = mid + 1;\n      } else if (order < 0) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport type {BTreeContext} from \"./BTreeContext\";\nimport {BTreePage} from \"./BTreePage\";\nimport {BTreeNodeCursor} from \"./\"; // forward import\n\n/** @hidden */\nexport class BTreeNode<K, V, U> extends BTreePage<K, V, U> {\n  /** @hidden */\n  readonly pages!: ReadonlyArray<BTreePage<K, V, U>>;\n  /** @hidden */\n  readonly knots!: ReadonlyArray<K>;\n\n  constructor(pages: ReadonlyArray<BTreePage<K, V, U>>, knots: ReadonlyArray<K>,\n              fold: U | undefined, size: number) {\n    super();\n    Object.defineProperty(this, \"pages\", {\n      value: pages,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"knots\", {\n      value: knots,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"fold\", {\n      value: fold,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"size\", {\n      value: size,\n      enumerable: true,\n    });\n  }\n\n  override get arity(): number {\n    return this.pages.length;\n  }\n\n  override readonly size!: number;\n\n  override isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  override readonly fold!: U | undefined;\n\n  override minKey(): K {\n    return this.pages[0]!.minKey();\n  }\n\n  override maxKey(): K {\n    return this.pages[this.pages.length - 1]!.maxKey();\n  }\n\n  override has(key: K, tree: BTreeContext<K, V>): boolean {\n    let xx = this.lookup(key, tree);\n    if (xx > 0) {\n      xx += 1;\n    } else if (xx < 0) {\n      xx = -(xx + 1);\n    } else {\n      return true;\n    }\n    return this.pages[xx]!.has(key, tree);\n  }\n\n  override get(key: K, tree: BTreeContext<K, V>): V | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    return this.pages[x]!.get(key, tree);\n  }\n\n  override getEntry(x: number): [K, V] | undefined {\n    const pages = this.pages;\n    for (let i = 0, n = pages.length; i < n; i += 1) {\n      const page = pages[i]!;\n      if (x < page.size) {\n        return page.getEntry(x);\n      } else {\n        x -= page.size;\n      }\n    }\n    return void 0;\n  }\n\n  override firstEntry(): [K, V] | undefined {\n    const pages = this.pages;\n    if (pages.length !== 0) {\n      return pages[0]!.firstEntry();\n    } else {\n      return void 0;\n    }\n  }\n\n  override lastEntry(): [K, V] | undefined {\n    const pages = this.pages;\n    if (pages.length !== 0) {\n      return pages[pages.length - 1]!.lastEntry();\n    } else {\n      return void 0;\n    }\n  }\n\n  override nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const pages = this.pages;\n    let entry = pages[x]!.nextEntry(key, tree);\n    if (entry === void 0 && x + 1 < pages.length) {\n      entry = pages[x + 1]!.nextEntry(key, tree);\n    }\n    return entry;\n  }\n\n  override previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const pages = this.pages;\n    let entry = pages[x]!.previousEntry(key, tree);\n    if (entry === void 0 && x > 0) {\n      entry = pages[x - 1]!.previousEntry(key, tree);\n    }\n    return entry;\n  }\n\n  override updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreeNode<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const oldPage = this.pages[x]!;\n    const newPage = oldPage.updated(key, newValue, tree);\n    if (oldPage !== newPage) {\n      if (oldPage.size !== newPage.size && tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  /** @hidden */\n  updatedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this.pages;\n    const newPages = oldPages.slice(0);\n    newPages[x] = newPage;\n\n    const oldKnots = this.knots;\n    let newKnots: K[];\n    if (oldKnots.length > 0) {\n      newKnots = oldKnots.slice(0);\n      if (x > 0) {\n        newKnots[x - 1] = newPage.minKey();\n      }\n    } else {\n      newKnots = [];\n    }\n\n    const newSize = this.size - oldPage.size + newPage.size;\n    return new BTreeNode(newPages, newKnots, void 0, newSize);\n  }\n\n  /** @hidden */\n  updatedPageSplit(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this.pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length + 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i]!;\n    }\n\n    const newLeftPage = newPage.splitLeft(newPage.arity >>> 1);\n    const newRightPage = newPage.splitRight(newPage.arity >>> 1);\n    newPages[x] = newLeftPage;\n    newPages[x + 1] = newRightPage;\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + 1] = oldPages[i]!;\n    }\n\n    const oldKnots = this.knots;\n    const newKnots = new Array<K>(oldPages.length);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i]!;\n      }\n      newKnots[x - 1] = newLeftPage.minKey();\n      newKnots[x] = newRightPage.minKey();\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i + 1] = oldKnots[i]!;\n      }\n    } else {\n      newKnots[0] = newRightPage.minKey();\n      for (let i = 0; i < oldKnots.length; i += 1) {\n        newKnots[i + 1] = oldKnots[i]!;\n      }\n    }\n\n    const newSize = this.size - oldPage.size + newPage.size;\n    return new BTreeNode(newPages, newKnots, void 0, newSize);\n  }\n\n  /** @hidden */\n  updatedPageMerge(x: number, newPage: BTreeNode<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this.pages;\n    const midPages = newPage.pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length + midPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i]!;\n    }\n    for (let i = 0; i < midPages.length; i += 1) {\n      newPages[i + x] = midPages[i]!;\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + midPages.length - 1] = oldPages[i]!;\n    }\n\n    const oldKnots = this.knots;\n    const midKnots = newPage.knots;\n    const newKnots = new Array<K>(newPages.length - 1);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i]!;\n      }\n      newKnots[x - 1] = midPages[0]!.minKey();\n      for (let i = 0; i < midKnots.length; i += 1) {\n        newKnots[i + x] = midKnots[i]!;\n      }\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i + midKnots.length] = oldKnots[i]!;\n      }\n    } else {\n      for (let i = 0; i < midKnots.length; i += 1) {\n        newKnots[i] = midKnots[i]!;\n      }\n      newKnots[midKnots.length] = oldPages[1]!.minKey();\n      for (let i = 1; i < oldKnots.length; i += 1) {\n        newKnots[i + midKnots.length] = oldKnots[i]!;\n      }\n    }\n\n    const newSize = this.size - oldPage.size + newPage.size;\n    return new BTreeNode(newPages, newKnots, void 0, newSize);\n  }\n\n  override removed(key: K, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const oldPage = this.pages[x]!;\n    const newPage = oldPage.removed(key, tree);\n    if (oldPage !== newPage) {\n      return this.replacedPage(x, newPage, oldPage, tree);\n    } else {\n      return this;\n    }\n  }\n\n  /** @hidden */\n  replacedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>,\n               tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (!newPage.isEmpty()) {\n      if (newPage instanceof BTreeNode && tree.pageShouldMerge(newPage)) {\n        return this.updatedPageMerge(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else if (this.pages.length > 2) {\n      return this.removedPage(x, newPage, oldPage);\n    } else if (this.pages.length > 1) {\n      if (x === 0) {\n        return this.pages[1]!;\n      } else {\n        return this.pages[0]!;\n      }\n    } else {\n      return BTreePage.empty();\n    }\n  }\n\n  /** @hidden */\n  removedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this.pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i]!;\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i - 1] = oldPages[i]!;\n    }\n\n    const oldKnots = this.knots;\n    const newKnots = new Array<K>(oldKnots.length - 1);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i]!;\n      }\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i - 1] = oldKnots[i]!;\n      }\n    } else {\n      for (let i = 1; i < oldKnots.length; i += 1) {\n        newKnots[i - 1] = oldKnots[i]!;\n      }\n    }\n\n    const newSize = this.size - oldPage.size;\n    return new BTreeNode(newPages, newKnots, void 0, newSize);\n  }\n\n  override drop(lower: number, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (lower > 0) {\n      let newSize = this.size;\n      if (lower < newSize) {\n        const oldPages = this.pages;\n        let x = 0;\n        while (x < oldPages.length) {\n          const size = oldPages[x]!.size;\n          if (size <= lower) {\n            newSize -= size;\n            lower -= size;\n            x += 1;\n          } else {\n            break;\n          }\n        }\n        const newArity = oldPages.length - x;\n        if (newArity > 1) {\n          let newNode: BTreeNode<K, V, U>;\n          if (x > 0) {\n            const newPages = new Array<BTreePage<K, V, U>>(newArity);\n            for (let i = 0; i < newArity; i += 1) {\n              newPages[i] = oldPages[i + x]!;\n            }\n            const newKnots = new Array<K>(newArity - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this.knots[i + x]!;\n            }\n            newNode = new BTreeNode(newPages, newKnots, void 0, newSize);\n          } else {\n            newNode = this;\n          }\n          if (lower > 0) {\n            const oldPage = oldPages[x]!;\n            const newPage = oldPage.drop(lower, tree);\n            return newNode.replacedPage(0, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else {\n          return oldPages[x]!.drop(lower, tree);\n        }\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override take(upper: number, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (upper < this.size) {\n      if (upper > 0) {\n        const oldPages = this.pages;\n        let x = 0;\n        let newSize = 0;\n        while (x < oldPages.length && upper > 0) {\n          const size = oldPages[x]!.size;\n          newSize += size;\n          x += 1;\n          if (size <= upper) {\n            upper -= size;\n          } else {\n            break;\n          }\n        }\n        const newArity = upper === 0 ? x : x + 1;\n        if (newArity > 1) {\n          let newNode: BTreeNode<K, V, U>;\n          if (x < oldPages.length) {\n            const newPages = new Array<BTreePage<K, V, U>>(newArity);\n            for (let i = 0; i < newArity; i += 1) {\n              newPages[i] = oldPages[i]!;\n            }\n            const newKnots = new Array<K>(newArity - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this.knots[i]!;\n            }\n            newNode = new BTreeNode(newPages, newKnots, void 0, newSize);\n          } else {\n            newNode = this;\n          }\n          if (upper > 0) {\n            const oldPage = oldPages[x - 1]!;\n            const newPage = oldPage.take(upper, tree);\n            return newNode.replacedPage(x - 1, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else if (upper > 0) {\n          return oldPages[0]!.take(upper, tree);\n        } else {\n          return oldPages[0]!;\n        }\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override balanced(tree: BTreeContext<K, V>): BTreeNode<K, V, U> {\n    if (this.pages.length > 1 && tree.pageShouldSplit(this)) {\n      const x = this.knots.length >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  override split(x: number): BTreeNode<K, V, U> {\n    const newPages = new Array<BTreePage<K, V, U>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<K>(1);\n    newKnots[0] = newRightPage.minKey();\n\n    return new BTreeNode(newPages, newKnots, void 0, this.size);\n  }\n\n  override splitLeft(x: number): BTreeNode<K, V, U> {\n    const oldPages = this.pages;\n    const newPages = new Array<BTreePage<K, V, U>>(x + 1);\n    for (let i = 0; i < x + 1; i += 1) {\n      newPages[i] = oldPages[i]!;\n    }\n\n    const oldKnots = this.knots;\n    const newKnots = new Array<K>(x);\n    for (let i = 0; i < x; i += 1) {\n      newKnots[i] = oldKnots[i]!;\n    }\n\n    let newSize = 0;\n    for (let i = 0; i <= x; i += 1) {\n      newSize += newPages[i]!.size;\n    }\n\n    return new BTreeNode(newPages, newKnots, void 0, newSize);\n  }\n\n  override splitRight(x: number): BTreeNode<K, V, U> {\n    const oldPages = this.pages;\n    const newArity = oldPages.length - (x + 1);\n    const newPages = new Array<BTreePage<K, V, U>>(newArity);\n    for (let i = 0; i < newArity; i += 1) {\n      newPages[i] = oldPages[i + (x + 1)]!;\n    }\n\n    const oldKnots = this.knots;\n    const newKnots = new Array<K>(newArity - 1);\n    for (let i = 0; i < newKnots.length; i += 1) {\n      newKnots[i] = oldKnots[i + (x + 1)]!;\n    }\n\n    let newSize = 0;\n    for (let i = 0; i < newArity; i += 1) {\n      newSize += newPages[i]!.size;\n    }\n\n    return new BTreeNode(newPages, newKnots, void 0, newSize);\n  }\n\n  override reduced(identity: U, accumulator: (result: U, element: V) => U,\n                   combiner: (result: U, result2: U) => U): BTreeNode<K, V, U> {\n    if (this.fold === void 0) {\n      const oldPages = this.pages;\n      const n = oldPages.length;\n      const newPages = new Array<BTreePage<K, V, U>>(n);\n      for (let i = 0; i < n; i += 1) {\n        newPages[i] = oldPages[i]!.reduced(identity, accumulator, combiner);\n      }\n      // assert n > 0;\n      let fold: U = newPages[0]!.fold!;\n      for (let i = 1; i < n; i += 1) {\n        fold = combiner(fold, newPages[i]!.fold!);\n      }\n      return new BTreeNode(newPages, this.knots, fold, this.size);\n    } else {\n      return this;\n    }\n  }\n\n  override forEach<T, S>(callback: (this: S, key: K, value: V) => T | void,\n                         thisArg: S): T | undefined {\n    const pages = this.pages;\n    for (let i = 0, n = pages.length; i < n; i += 1) {\n      const result = pages[i]!.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  override forEachKey<T, S>(callback: (this: S, key: K) => T | void,\n                            thisArg: S): T | undefined {\n    const pages = this.pages;\n    for (let i = 0, n = pages.length; i < n; i += 1) {\n      const result = pages[i]!.forEachKey(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  override forEachValue<T, S>(callback: (this: S, value: V) => T | void,\n                              thisArg: S): T | undefined {\n    const pages = this.pages;\n    for (let i = 0, n = pages.length; i < n; i += 1) {\n      const result = pages[i]!.forEachValue(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  override entries(): Cursor<[K, V]> {\n    return new BTreeNodeCursor(this.pages);\n  }\n\n  override reverseEntries(): Cursor<[K, V]> {\n    return new BTreeNodeCursor(this.pages, this.size, this.pages.length);\n  }\n\n  /** @hidden */\n  lookup(key: K, tree: BTreeContext<K, V>): number {\n    let lo = 0;\n    let hi = this.knots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      const order = tree.compare(key, this.knots[mid]!);\n      if (order > 0) {\n        lo = mid + 1;\n      } else if (order < 0) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {NodeCursor} from \"./NodeCursor\";\nimport type {BTreePage} from \"./BTreePage\";\n\n/** @hidden */\nexport class BTreeNodeCursor<K, V, U> extends NodeCursor<[K, V], BTreePage<K, V, U>> {\n  constructor(pages: ReadonlyArray<BTreePage<K, V, U>>, index: number = 0,\n              childIndex: number = 0, childCursor: Cursor<[K, V]> | null = null) {\n    super(pages, index, childIndex, childCursor);\n  }\n\n  protected override pageSize(page: BTreePage<K, V, U>): number {\n    return page.size;\n  }\n\n  protected override pageCursor(page: BTreePage<K, V, U>): Cursor<[K, V]> {\n    return page.entries();\n  }\n\n  protected override reversePageCursor(page: BTreePage<K, V, U>): Cursor<[K, V]> {\n    return page.reverseEntries();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Random, Values} from \"@swim/util\";\nimport type {STreePage} from \"./STreePage\";\n\n/** @hidden */\nexport abstract class STreeContext<V, I> {\n  get pageSplitSize(): number {\n    return 32;\n  }\n\n  set pageSplitSize(pageSplitSize: number) {\n    Object.defineProperty(this, \"pageSplitSize\", {\n      value: pageSplitSize,\n      configurable: true,\n      enumerable: true,\n      writable: true,\n    });\n  }\n\n  identify(value: V): I {\n    const id = new Uint8Array(6);\n    Random.fillBytes(id);\n    return id as unknown as I;\n  }\n\n  compare(x: I, y: I): number {\n    return Values.compare(x, y);\n  }\n\n  pageShouldSplit(page: STreePage<V, I>): boolean {\n    return page.arity > this.pageSplitSize;\n  }\n\n  pageShouldMerge(page: STreePage<V, I>): boolean {\n    return page.arity < this.pageSplitSize >>> 1;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STreePage} from \"./\"; // forward import\n\nexport class STree<V = unknown, I = unknown> extends STreeContext<V, I> {\n  root: STreePage<V, I>;\n\n  constructor(root?: STreePage<V, I>) {\n    super();\n    if (root === void 0) {\n      root = STreePage.empty();\n    }\n    this.root = root;\n  }\n\n  get length(): number {\n    return this.root.size;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  get(index: number, id?: I): V | undefined {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        return void 0;\n      }\n    }\n    return this.root.get(index);\n  }\n\n  getEntry(index: number, id?: I): [I, V] | undefined {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        return void 0;\n      }\n    }\n    return this.root.getEntry(index);\n  }\n\n  set(index: number, newValue: V, id?: I): this {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (index < 0 || index >= oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.updated(index, newValue, this);\n    return this;\n  }\n\n  insert(index: number, newValue: V, id?: I): this {\n    const oldRoot = this.root;\n    if (index < 0 || index > oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.inserted(index, newValue, id, this).balanced(this);\n    return this;\n  }\n\n  remove(index: number, id?: I): this {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (index < 0 || index > oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.removed(index, this);\n    return this;\n  }\n\n  push(...newValues: V[]): number {\n    let newRoot = this.root;\n    for (let i = 0; i < newValues.length; i += 1) {\n      newRoot = newRoot.inserted(newRoot.size, newValues[i]!, void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return newRoot.size;\n  }\n\n  pop(): V | undefined {\n    const oldRoot = this.root;\n    const index = oldRoot.size - 1;\n    if (index >= 0) {\n      const oldValue = oldRoot.get(index);\n      this.root = oldRoot.removed(index, this);\n      return oldValue;\n    } else {\n      return void 0;\n    }\n  }\n\n  unshift(...newValues: V[]): number {\n    let newRoot = this.root;\n    for (let i = newValues.length - 1; i >= 0; i -= 1) {\n      newRoot = newRoot.inserted(0, newValues[i]!, void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return newRoot.size;\n  }\n\n  shift(): V | undefined {\n    const oldRoot = this.root;\n    if (oldRoot.size > 0) {\n      const oldValue = oldRoot.get(0);\n      this.root = oldRoot.removed(0, this);\n      return oldValue;\n    } else {\n      return void 0;\n    }\n  }\n\n  move(fromIndex: number, toIndex: number, id?: I): this {\n    if (id !== void 0) {\n      fromIndex = this.lookup(id, fromIndex);\n      if (fromIndex < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (fromIndex < 0 || fromIndex >= oldRoot.size) {\n      throw new RangeError(\"\" + fromIndex);\n    }\n    if (toIndex < 0 || toIndex >= oldRoot.size) {\n      throw new RangeError(\"\" + toIndex);\n    }\n    if (fromIndex !== toIndex) {\n      const entry = oldRoot.getEntry(fromIndex)!;\n      this.root = oldRoot.removed(fromIndex, this)\n                         .inserted(toIndex, entry[1], entry[0], this)\n                         .balanced(this);\n    }\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newValues: V[]): V[] {\n    let newRoot = this.root;\n    if (start < 0) {\n      start = newRoot.size + start;\n    }\n    start = Math.min(Math.max(0, start), newRoot.size);\n    if (deleteCount === void 0) {\n      deleteCount = newRoot.size - start;\n    }\n    const deleted = [] as V[];\n    for (let i = start, n = start + deleteCount; i < n; i += 1) {\n      deleted.push(newRoot.get(start)!);\n      newRoot = newRoot.removed(start, this);\n    }\n    for (let i = 0; i < newValues.length; i += 1) {\n      newRoot = newRoot.inserted(start + i, newValues[i]!, void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return deleted;\n  }\n\n  drop(lower: number): this {\n    const oldRoot = this.root;\n    if (lower > 0 && oldRoot.size > 0) {\n      if (lower < oldRoot.size) {\n        this.root = oldRoot.drop(lower, this);\n      } else {\n        this.root = STreePage.empty();\n      }\n    }\n    return this;\n  }\n\n  take(upper: number): this {\n    const oldRoot = this.root;\n    if (upper < oldRoot.size && oldRoot.size > 0) {\n      if (upper > 0) {\n        this.root = oldRoot.take(upper, this);\n      } else {\n        this.root = STreePage.empty();\n      }\n    }\n    return this;\n  }\n\n  clear(): void {\n    this.root = STreePage.empty();\n  }\n\n  forEach<T>(callback: (value: V, index: number, id: I) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, value: V, index: number, id: I) => T | void,\n                thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, value: V, index: number, id: I) => T | void,\n                thisArg?: S): T | undefined {\n    return this.root.forEach(callback, thisArg, 0);\n  }\n\n  keys(): Cursor<I> {\n    return this.root.keys();\n  }\n\n  values(): Cursor<V> {\n    return this.root.values();\n  }\n\n  entries(): Cursor<[I, V]> {\n    return this.root.entries();\n  }\n\n  reverseKeys(): Cursor<I> {\n    return this.root.reverseKeys();\n  }\n\n  reverseValues(): Cursor<V> {\n    return this.root.reverseValues();\n  }\n\n  reverseEntries(): Cursor<[I, V]> {\n    return this.root.reverseEntries();\n  }\n\n  clone(): STree<V, I> {\n    return this.copy(this.root);\n  }\n\n  protected copy(root: STreePage<V, I>): STree<V, I> {\n    const tree = new STree(root);\n    if (tree.identify !== this.identify) {\n      tree.identify = this.identify;\n    }\n    if (tree.compare !== this.compare) {\n      tree.compare = this.compare;\n    }\n    if (tree.pageSplitSize !== this.pageSplitSize) {\n      tree.pageSplitSize = this.pageSplitSize;\n    }\n    return tree;\n  }\n\n  lookup(id: I, start: number = 0): number {\n    const root = this.root;\n    start = Math.min(Math.max(0, start), root.size - 1);\n    let index = start;\n    do {\n      const entry = root.getEntry(index);\n      if (entry !== void 0 && this.compare(entry[0], id) === 0) {\n        return index;\n      }\n      index = (index + 1) % root.size;\n    } while (isFinite(index) && index !== start);\n    return -1;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Cursor} from \"@swim/util\";\nimport {KeysCursor} from \"./KeysCursor\";\nimport {ValuesCursor} from \"./ValuesCursor\";\nimport type {STreeContext} from \"./STreeContext\";\nimport {STreeLeaf} from \"./\"; // forward import\n\n/** @hidden */\nexport abstract class STreePage<V = unknown, I = unknown> {\n  abstract readonly arity: number;\n\n  abstract readonly size: number;\n\n  abstract isEmpty(): boolean;\n\n  abstract get(index: number): V | undefined;\n\n  abstract getEntry(index: number): [I, V] | undefined;\n\n  abstract updated(index: number, newValue: V, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract removed(index: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract drop(lower: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract take(upper: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract balanced(tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract split(index: number): STreePage<V, I>;\n\n  abstract splitLeft(index: number): STreePage<V, I>;\n\n  abstract splitRight(index: number): STreePage<V, I>;\n\n  abstract forEach<T, S>(callback: (this: S, value: V, index: number, id: I) => T | void,\n                         thisArg: S, offset: number): T | undefined;\n\n  keys(): Cursor<I> {\n    return new KeysCursor(this.entries());\n  }\n\n  values(): Cursor<V> {\n    return new ValuesCursor(this.entries());\n  }\n\n  abstract entries(): Cursor<[I, V]>;\n\n  reverseKeys(): Cursor<I> {\n    return new KeysCursor(this.reverseEntries());\n  }\n\n  reverseValues(): Cursor<V> {\n    return new ValuesCursor(this.reverseEntries());\n  }\n\n  abstract reverseEntries(): Cursor<[I, V]>;\n\n  @Lazy\n  static empty<V, I>(): STreeLeaf<V, I> {\n    return new STreeLeaf([]);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport type {STreeContext} from \"./STreeContext\";\nimport {STreePage} from \"./STreePage\";\nimport {STreeNode} from \"./\"; // forward import\n\n/** @hidden */\nexport class STreeLeaf<V, I> extends STreePage<V, I> {\n  /** @hidden */\n  readonly slots!: ReadonlyArray<[I, V]>;\n\n  constructor(slots: ReadonlyArray<[I, V]>) {\n    super();\n    Object.defineProperty(this, \"slots\", {\n      value: slots,\n      enumerable: true,\n    });\n  }\n\n  override get arity(): number {\n    return this.slots.length;\n  }\n\n  override get size(): number {\n    return this.slots.length;\n  }\n\n  override isEmpty(): boolean {\n    return this.slots.length === 0;\n  }\n\n  override get(index: number): V | undefined {\n    const slot = this.slots[index];\n    if (slot !== void 0) {\n      return slot[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  override getEntry(index: number): [I, V] | undefined {\n    return this.slots[index];\n  }\n\n  override updated(index: number, newValue: V, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index >= this.slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    return this.updatedItem(index, newValue);\n  }\n\n  /** @hidden */\n  updatedItem(index: number, newValue: V): STreeLeaf<V, I> {\n    const oldItems = this.slots;\n    const oldSlot = oldItems[index];\n    if (oldSlot !== void 0 && newValue !== oldSlot[1]) {\n      const newValues = oldItems.slice(0);\n      newValues[index] = [oldSlot[0], newValue];\n      return new STreeLeaf(newValues);\n    } else {\n      return this;\n    }\n  }\n\n  override inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index > this.slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    return this.insertedItem(index, newValue, id, tree);\n  }\n\n  /** @hidden */\n  insertedItem(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (id === void 0) {\n      id = tree.identify(newValue);\n    }\n    const oldSlots = this.slots;\n    const newSlots = new Array<[I, V]>(oldSlots.length + 1);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i]!;\n    }\n    newSlots[index] = [id, newValue];\n    for (let i = index; i < oldSlots.length; i += 1) {\n      newSlots[i + 1] = oldSlots[i]!;\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  override removed(index: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index >= this.slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    if (this.slots.length > 1) {\n      return this.removedSlot(index);\n    } else {\n      return STreePage.empty();\n    }\n  }\n\n  /** @hidden */\n  removedSlot(index: number): STreeLeaf<V, I> {\n    const oldSlots = this.slots;\n    const newSlots = new Array<[I, V]>(oldSlots.length - 1);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i]!;\n    }\n    for (let i = index; i < newSlots.length; i += 1) {\n      newSlots[i] = oldSlots[i + 1]!;\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  override drop(lower: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    const oldSlots = this.slots;\n    if (lower > 0 && oldSlots.length > 0) {\n      if (lower < oldSlots.length) {\n        const size = oldSlots.length - lower;\n        const newSlots = new Array<[I, V]>(size);\n        for (let i = 0; i < size; i += 1) {\n          newSlots[i] = oldSlots[i + lower]!;\n        }\n        return new STreeLeaf(newSlots);\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override take(upper: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    const oldSlots = this.slots;\n    if (upper < oldSlots.length && oldSlots.length > 0) {\n      if (upper > 0) {\n        const newSlots = new Array<[I, V]>(upper);\n        for (let i = 0; i < upper; i += 1) {\n          newSlots[i] = oldSlots[i]!;\n        }\n        return new STreeLeaf(newSlots);\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override balanced(tree: STreeContext<V, I>): STreePage<V, I> {\n    const size = this.slots.length;\n    if (size > 1 && tree.pageShouldSplit(this)) {\n      return this.split(size >>> 1);\n    } else {\n      return this;\n    }\n  }\n\n  override split(index: number): STreeNode<V, I> {\n    const newPages = new Array<STreePage<V, I>>(2);\n    const newLeftPage = this.splitLeft(index);\n    const newRightPage = this.splitRight(index);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<number>(1);\n    newKnots[0] = index;\n\n    return new STreeNode(newPages, newKnots, this.slots.length);\n  }\n\n  override splitLeft(index: number): STreeLeaf<V, I> {\n    const oldSlots = this.slots;\n    const newSlots = new Array<[I, V]>(index);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i]!;\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  override splitRight(index: number): STreeLeaf<V, I> {\n    const oldSlots = this.slots;\n    const newSize = oldSlots.length - index;\n    const newSlots = new Array<[I, V]>(newSize);\n    for (let i = 0; i < newSize; i += 1) {\n      newSlots[i] = oldSlots[i + index]!;\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  override forEach<T, S>(callback: (this: S, value: V, index: number, id: I) => T | void,\n                         thisArg: S, offset: number): T | undefined {\n    for (let i = 0; i < this.slots.length; i += 1) {\n      const slot = this.slots[i]!;\n      const result = callback.call(thisArg, slot[1], offset + i, slot[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  override entries(): Cursor<[I, V]> {\n    return Cursor.array(this.slots);\n  }\n\n  override reverseEntries(): Cursor<[I, V]> {\n    return Cursor.array(this.slots, this.slots.length);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport type {STreeContext} from \"./STreeContext\";\nimport {STreePage} from \"./STreePage\";\nimport {STreeNodeCursor} from \"./\"; // forward import\n\n/** @hidden */\nexport class STreeNode<V, I> extends STreePage<V, I> {\n  /** @hidden */\n  readonly pages!: ReadonlyArray<STreePage<V, I>>;\n  /** @hidden */\n  readonly knots!: ReadonlyArray<number>;\n\n  constructor(pages: ReadonlyArray<STreePage<V, I>>, knots: ReadonlyArray<number>, size: number) {\n    super();\n    Object.defineProperty(this, \"pages\", {\n      value: pages,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"knots\", {\n      value: knots,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"size\", {\n      value: size,\n      enumerable: true,\n    });\n  }\n\n  override get arity(): number {\n    return this.pages.length;\n  }\n\n  override readonly size!: number;\n\n  override isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  override get(index: number): V | undefined {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this.knots[x - 1]!;\n    return this.pages[x]!.get(i);\n  }\n\n  override getEntry(index: number): [I, V] | undefined {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this.knots[x - 1]!;\n    return this.pages[x]!.getEntry(i);\n  }\n\n  override updated(index: number, newValue: V, tree: STreeContext<V, I>): STreeNode<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this.knots[x - 1]!;\n    const oldPage = this.pages[x]!;\n    const newPage = oldPage.updated(i, newValue, tree);\n    if (oldPage !== newPage) {\n      if (oldPage.size !== newPage.size && tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  /** @hidden */\n  updatedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this.pages;\n    const newPages = oldPages.slice(0);\n    newPages[x] = newPage;\n\n    const oldKnots = this.knots;\n    let newKnots: number[];\n    let newSize: number;\n    if (oldPages.length - 1 > 0) {\n      newKnots = oldKnots.slice(0);\n      if (x > 0) {\n        newSize = oldKnots[x - 1]!;\n      } else {\n        newSize = 0;\n      }\n      for (let i = x; i < newKnots.length; i += 1) {\n        newSize += newPages[i]!.size;\n        newKnots[i] = newSize;\n      }\n      newSize += newPages[newKnots.length]!.size;\n    } else {\n      newKnots = [];\n      newSize = 0;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  /** @hidden */\n  updatedPageSplit(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this.pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length + 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i]!;\n    }\n\n    const newLeftPage = newPage.splitLeft(newPage.arity >>> 1);\n    const newRightPage = newPage.splitRight(newPage.arity >>> 1);\n    newPages[x] = newLeftPage;\n    newPages[x + 1] = newRightPage;\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + 1] = oldPages[i]!;\n    }\n\n    return STreeNode.create(newPages);\n  }\n\n  /** @hidden */\n  updatedPageMerge(x: number, newPage: STreeNode<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this.pages;\n    const midPages = newPage.pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length + midPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i]!;\n    }\n    for (let i = 0; i < midPages.length; i += 1) {\n      newPages[i + x] = midPages[i]!;\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + midPages.length - 1] = oldPages[i]!;\n    }\n\n    return STreeNode.create(newPages);\n  }\n\n  override inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeNode<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const subIndex = x === 0 ? index : index - this.knots[x - 1]!;\n    const oldPage = this.pages[x]!;\n    const newPage = oldPage.inserted(subIndex, newValue, id, tree);\n    if (oldPage !== newPage) {\n      if (tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override removed(index: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const subIndex = x === 0 ? index : index - this.knots[x - 1]!;\n    const oldPage = this.pages[x]!;\n    const newPage = oldPage.removed(subIndex, tree);\n    if (oldPage !== newPage) {\n      return this.replacedPage(x, newPage, oldPage, tree);\n    } else {\n      return this;\n    }\n  }\n\n  /** @hidden */\n  replacedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>,\n               tree: STreeContext<V, I>): STreePage<V, I> {\n    if (!newPage.isEmpty()) {\n      if (newPage instanceof STreeNode && tree.pageShouldMerge(newPage)) {\n        return this.updatedPageMerge(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else if (this.pages.length > 2) {\n      return this.removedPage(x, newPage, oldPage);\n    } else if (this.pages.length > 1) {\n      if (x === 0) {\n        return this.pages[1]!;\n      } else {\n        return this.pages[0]!;\n      }\n    } else {\n      return STreePage.empty();\n    }\n  }\n\n  /** @hidden */\n  removedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this.pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i]!;\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i - 1] = oldPages[i]!;\n    }\n\n    const oldKnots = this.knots;\n    const newKnots = new Array<number>(oldKnots.length - 1);\n    let newSize: number;\n    if (x > 0) {\n      for (let i = 0; i < x; i += 1) {\n        newKnots[i] = oldKnots[i]!;\n      }\n      newSize = oldKnots[x - 1]!;\n    } else {\n      newSize = 0;\n    }\n    for (let i = x; i < newKnots.length; i += 1) {\n      newSize += newPages[i]!.size;\n      newKnots[i] = newSize;\n    }\n    newSize += newPages[newKnots.length]!.size;\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  override drop(lower: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    if (lower > 0) {\n      if (lower < this.size) {\n        let x = this.lookup(lower);\n        if (x >= 0) {\n          x += 1;\n        } else {\n          x = -(x + 1);\n        }\n        lower = x === 0 ? lower : lower - this.knots[x - 1]!;\n        const oldPages = this.pages;\n        const n = oldPages.length - x;\n        if (n > 1) {\n          let newNode: STreeNode<V, I>;\n          if (x > 0) {\n            const newPages = new Array<STreePage<V, I>>(n);\n            for (let i = 0; i < n; i += 1) {\n              newPages[i] = oldPages[i + x]!;\n            }\n            newNode = STreeNode.create(newPages);\n          } else {\n            newNode = this;\n          }\n          if (lower > 0) {\n            const oldPage = oldPages[x]!;\n            const newPage = oldPage.drop(lower, tree);\n            return newNode.replacedPage(0, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else {\n          return oldPages[x]!.drop(lower, tree);\n        }\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override take(upper: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    if (upper < this.size) {\n      if (upper > 0) {\n        let x = this.lookup(upper);\n        if (x >= 0) {\n          x += 1;\n        } else {\n          x = -(x + 1);\n        }\n        upper = x === 0 ? upper : upper - this.knots[x - 1]!;\n        const oldPages = this.pages;\n        const n = upper === 0 ? x : x + 1;\n        if (n > 1) {\n          let newNode: STreeNode<V, I>;\n          if (x < oldPages.length) {\n            const newPages = new Array<STreePage<V, I>>(n);\n            for (let i = 0; i < n; i += 1) {\n              newPages[i] = oldPages[i]!;\n            }\n            const newKnots = new Array<number>(n - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this.knots[i]!;\n            }\n            const newSize = newKnots[n - 2]! + newPages[n - 1]!.size;\n            newNode = new STreeNode(newPages, newKnots, newSize);\n          } else {\n            newNode = this;\n          }\n          if (upper > 0) {\n            const oldPage = oldPages[x]!;\n            const newPage = oldPage.take(upper, tree);\n            return newNode.replacedPage(x, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else if (upper > 0) {\n          return oldPages[0]!.take(upper, tree);\n        } else {\n          return oldPages[0]!;\n        }\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  override balanced(tree: STreeContext<V, I>): STreeNode<V, I> {\n    if (this.pages.length > 1 && tree.pageShouldSplit(this)) {\n      const x = this.knots.length >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  override split(x: number): STreeNode<V, I> {\n    const newPages = new Array<STreePage<V, I>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<number>(1);\n    newKnots[0] = newLeftPage.size;\n\n    return new STreeNode(newPages, newKnots, this.size);\n  }\n\n  override splitLeft(x: number): STreeNode<V, I> {\n    const oldPages = this.pages;\n    const newPages = new Array<STreePage<V, I>>(x + 1);\n    for (let i = 0; i < x + 1; i += 1) {\n      newPages[i] = oldPages[i]!;\n    }\n\n    const oldKnots = this.knots;\n    const newKnots = new Array<number>(x);\n    for (let i = 0; i < x; i += 1) {\n      newKnots[i] = oldKnots[i]!;\n    }\n\n    let newSize = 0;\n    for (let i = 0; i <= x; i += 1) {\n      newSize += newPages[i]!.size;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  override splitRight(x: number): STreeNode<V, I> {\n    const oldPages = this.pages;\n    const y = oldPages.length - (x + 1);\n    const newPages = new Array<STreePage<V, I>>(y);\n    for (let i = 0; i < y; i += 1) {\n      newPages[i] = oldPages[i + (x + 1)]!;\n    }\n\n    const newKnots = new Array<number>(y - 1);\n    let newSize;\n    if (y > 0) {\n      newSize = newPages[0]!.size;\n      for (let i = 1; i < y; i += 1) {\n        newKnots[i - 1] = newSize;\n        newSize += newPages[i]!.size;\n      }\n    } else {\n      newSize = 0;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  override forEach<T, S>(callback: (this: S, value: V, index: number, id: I) => T | void,\n                         thisArg: S, offset: number): T | undefined {\n    for (let i = 0; i < this.pages.length; i += 1) {\n      const page = this.pages[i]!;\n      const result = page.forEach(callback, thisArg, offset);\n      if (result !== void 0) {\n        return result;\n      }\n      offset += page.size;\n    }\n    return void 0;\n  }\n\n  override entries(): Cursor<[I, V]> {\n    return new STreeNodeCursor(this.pages);\n  }\n\n  override reverseEntries(): Cursor<[I, V]> {\n    return new STreeNodeCursor(this.pages, this.size, this.pages.length);\n  }\n\n  /** @hidden */\n  lookup(index: number): number {\n    let lo = 0;\n    let hi = this.knots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      if (index > this.knots[mid]!) {\n        lo = mid + 1;\n      } else if (index < this.knots[mid]!) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n\n  static create<V, I>(pages: ReadonlyArray<STreePage<V, I>>): STreeNode<V, I> {\n    const knots = new Array<number>(pages.length - 1);\n    let size = 0;\n    for (let i = 0, n  = knots.length; i < n; i += 1) {\n      size += pages[i]!.size;\n      knots[i] = size;\n    }\n    size += pages[knots.length]!.size;\n    return new STreeNode(pages, knots, size);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {NodeCursor} from \"./NodeCursor\";\nimport type {STreePage} from \"./STreePage\";\n\n/** @hidden */\nexport class STreeNodeCursor<V, I> extends NodeCursor<[I, V], STreePage<V, I>> {\n  constructor(pages: ReadonlyArray<STreePage<V, I>>, index: number = 0,\n              childIndex: number = 0, childCursor: Cursor<[I, V]> | null = null) {\n    super(pages, index, childIndex, childCursor);\n  }\n\n  protected override pageSize(page: STreePage<V, I>): number {\n    return page.size;\n  }\n\n  protected override pageCursor(page: STreePage<V, I>): Cursor<[I, V]> {\n    return page.entries();\n  }\n\n  protected override reversePageCursor(page: STreePage<V, I>): Cursor<[I, V]> {\n    return page.reverseEntries();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport interface ConstraintKey {\n  readonly id: number;\n}\n\nexport const ConstraintKey = {} as {\n  /** @hidden */\n  idCount: number;\n\n  nextId(): number;\n};\n\nObject.defineProperty(ConstraintKey, \"idCount\", {\n  value: 0,\n  enumerable: true,\n  configurable: true,\n});\n\nConstraintKey.nextId = function (): number {\n  const nextId = ConstraintKey.idCount + 1;\n  Object.defineProperty(ConstraintKey, \"idCount\", {\n    value: nextId,\n    enumerable: true,\n    configurable: true,\n  });\n  return nextId;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {ConstraintKey} from \"./ConstraintKey\";\n\n/** @hidden */\nexport class ConstraintMap<K extends ConstraintKey, V> {\n  constructor(index?: {[id: number]: number | undefined}, array?: Array<[K, V]>) {\n    Object.defineProperty(this, \"index\", {\n      value: index !== void 0 ? index : {},\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"array\", {\n      value: array !== void 0 ? array : [],\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly index!: {[id: number]: number | undefined};\n\n  /** @hidden */\n  readonly array!: Array<[K, V]>;\n\n  get size(): number {\n    return this.array.length;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  has(key: K): boolean {\n    return this.index[key.id] !== void 0;\n  }\n\n  get(key: K): V | undefined {\n    const k = this.index[key.id];\n    return k !== void 0 ? this.array[k]![1] : void 0;\n  }\n\n  getField(key: K): [K, V] | undefined {\n    const k = this.index[key.id];\n    return k !== void 0 ? this.array[k] : void 0;\n  }\n\n  getEntry(k: number): [K, V] | undefined {\n    return this.array[k];\n  }\n\n  set(key: K, newValue: V): V | undefined {\n    const k = this.index[key.id];\n    if (k !== void 0) {\n      const entry = this.array[k]!;\n      const oldValue = entry[1];\n      entry[1] = newValue;\n      return oldValue;\n    } else {\n      this.index[key.id] = this.array.length;\n      this.array.push([key, newValue]);\n      return void 0;\n    }\n  }\n\n  delete(key: K): boolean {\n    const k = this.index[key.id];\n    if (k !== void 0) {\n      delete this.index[key.id];\n      const item = this.array[k];\n      const last = this.array.pop()!;\n      if (item !== last) {\n        this.array[k] = last;\n        this.index[last[0].id] = k;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  remove(key: K): V | undefined {\n    const k = this.index[key.id];\n    if (k !== void 0) {\n      delete this.index[key.id];\n      const item = this.array[k]!;\n      const last = this.array.pop()!;\n      if (item !== last) {\n        this.array[k] = last;\n        this.index[last[0].id] = k;\n      }\n      return item[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  clear(): void {\n    Object.defineProperty(this, \"index\", {\n      value: {},\n      enumerable: true,\n      configurable: true,\n    });\n    this.array.length = 0;\n  }\n\n  forEach<T>(callback: (key: K, value: V) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, key: K, value: V) => T | void,\n                thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, key: K, value: V) => T | void,\n                thisArg?: S): T | undefined {\n    const array = this.array;\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const item = array[i]!;\n      const result = callback.call(thisArg, item[0], item[1]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  clone(): ConstraintMap<K, V> {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newIndex = {} as {[id: number]: number | undefined};\n    const newArray = new Array<[K, V]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [key, value] = oldArray[i]!;\n      newArray[i] = [key, value];\n      newIndex[key.id] = i;\n    }\n    return new ConstraintMap(newIndex, newArray);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ConstraintKey} from \"./ConstraintKey\";\nimport type {Constraint} from \"./Constraint\";\nimport type {ConstraintSolver} from \"./ConstraintSolver\";\n\n/** @hidden */\nexport interface ConstraintSymbol extends ConstraintKey {\n  /** @hidden */\n  isExternal(): boolean;\n\n  /** @hidden */\n  isDummy(): boolean;\n\n  /** @hidden */\n  isInvalid(): boolean;\n\n  /** @hidden */\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @hidden */\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  updateConstraintSolution(value: number): void;\n}\n\n/** @hidden */\nexport const ConstraintSymbol = {} as {\n  readonly invalid: ConstraintInvalid; // defined by ConstraintInvalid\n};\n\n/** @hidden */\nexport class ConstraintSlack implements ConstraintSymbol {\n  constructor() {\n    Object.defineProperty(this, \"id\", {\n      value: ConstraintKey.nextId(),\n      enumerable: true,\n    });\n  }\n\n  readonly id!: number;\n\n  isExternal(): boolean {\n    return false;\n  }\n\n  isDummy(): boolean {\n    return false;\n  }\n\n  isInvalid(): boolean {\n    return false;\n  }\n\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    // nop\n  }\n\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    // nop\n  }\n\n  updateConstraintSolution(value: number): void {\n    // nop\n  }\n}\n\n/** @hidden */\nexport class ConstraintDummy implements ConstraintSymbol {\n  constructor() {\n    Object.defineProperty(this, \"id\", {\n      value: ConstraintKey.nextId(),\n      enumerable: true,\n    });\n  }\n\n  readonly id!: number;\n\n  isExternal(): boolean {\n    return false;\n  }\n\n  isDummy(): boolean {\n    return true;\n  }\n\n  isInvalid(): boolean {\n    return false;\n  }\n\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    // nop\n  }\n\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    // nop\n  }\n\n  updateConstraintSolution(value: number): void {\n    // nop\n  }\n}\n\n/** @hidden */\nexport class ConstraintError implements ConstraintSymbol {\n  constructor() {\n    Object.defineProperty(this, \"id\", {\n      value: ConstraintKey.nextId(),\n      enumerable: true,\n    });\n  }\n\n  readonly id!: number;\n\n  isExternal(): boolean {\n    return false;\n  }\n\n  isDummy(): boolean {\n    return false;\n  }\n\n  isInvalid(): boolean {\n    return false;\n  }\n\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    // nop\n  }\n\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    // nop\n  }\n\n  updateConstraintSolution(value: number): void {\n    // nop\n  }\n}\n\n/** @hidden */\nexport class ConstraintInvalid implements ConstraintSymbol {\n  get id(): number {\n    return -1;\n  }\n\n  isExternal(): boolean {\n    return false;\n  }\n\n  isDummy(): boolean {\n    return false;\n  }\n\n  isInvalid(): boolean {\n    return true;\n  }\n\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    // nop\n  }\n\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    // nop\n  }\n\n  updateConstraintSolution(value: number): void {\n    // nop\n  }\n}\nObject.defineProperty(ConstraintSymbol, \"invalid\", {\n  value: new ConstraintInvalid(),\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ConstraintMap} from \"./ConstraintMap\";\nimport type {ConstraintVariable} from \"./ConstraintVariable\";\nimport {ConstraintSum} from \"./\"; // forward import\nimport {ConstraintTerm} from \"./\"; // forward import\nimport {ConstraintProduct} from \"./\"; // forward import\nimport {ConstraintConstant} from \"./\"; // forward import\n\nexport type AnyConstraintExpression = ConstraintExpression | number;\n\nexport interface ConstraintExpression {\n  readonly terms: ConstraintMap<ConstraintVariable, number>;\n\n  readonly constant: number;\n\n  isConstant(): boolean;\n\n  plus(that: AnyConstraintExpression): ConstraintExpression;\n\n  negative(): ConstraintExpression;\n\n  minus(that: AnyConstraintExpression): ConstraintExpression;\n\n  times(scalar: number): ConstraintExpression;\n\n  divide(scalar: number): ConstraintExpression;\n}\n\nexport const ConstraintExpression = {} as {\n  fromAny(value: AnyConstraintExpression): ConstraintExpression;\n\n  sum(...expressions: AnyConstraintExpression[]): ConstraintSum;\n\n  product(coefficient: number, variable: ConstraintVariable): ConstraintProduct;\n\n  constant(value: number): ConstraintConstant;\n\n  readonly zero: ConstraintConstant; // defined by ConstraintConstant\n};\n\nConstraintExpression.fromAny = function (value: AnyConstraintExpression): ConstraintExpression {\n  if (typeof value === \"number\") {\n    return ConstraintExpression.constant(value);\n  } else {\n    return value;\n  }\n};\n\nConstraintExpression.sum = function (...expressions: AnyConstraintExpression[]): ConstraintSum {\n  const terms = new ConstraintMap<ConstraintVariable, number>();\n  let constant = 0;\n  for (let i = 0, n = expressions.length; i < n; i += 1) {\n    const expression = expressions[i]!;\n    if (typeof expression === \"number\") {\n      constant += expression;\n    } else if (ConstraintTerm.is(expression)) {\n      const variable = expression.variable;\n      if (variable !== null) {\n        const field = terms.getField(variable);\n        if (field !== void 0) {\n          field[1] += expression.coefficient;\n        } else {\n          terms.set(variable, expression.coefficient);\n        }\n      } else {\n        constant += expression.constant;\n      }\n    } else {\n      const subterms = expression.terms;\n      for (let j = 0, k = subterms.size; j < k; j += 1) {\n        const [variable, coefficient] = subterms.getEntry(j)!;\n        const field = terms.getField(variable);\n        if (field !== void 0) {\n          field[1] += coefficient;\n        } else {\n          terms.set(variable, coefficient);\n        }\n      }\n      constant += expression.constant;\n    }\n  }\n  return new ConstraintSum(terms, constant);\n};\n\nConstraintExpression.product = function (coefficient: number, variable: ConstraintVariable): ConstraintProduct {\n  return new ConstraintProduct(coefficient, variable);\n};\n\nConstraintExpression.constant = function (value: number): ConstraintConstant {\n  if (value === 0) {\n    return ConstraintExpression.zero;\n  } else {\n    return new ConstraintConstant(value);\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {ConstraintMap} from \"./ConstraintMap\";\nimport {AnyConstraintExpression, ConstraintExpression} from \"./ConstraintExpression\";\nimport type {ConstraintVariable} from \"./ConstraintVariable\";\n\n/** @hidden */\nexport class ConstraintSum implements ConstraintExpression, Debug {\n  constructor(terms: ConstraintMap<ConstraintVariable, number>, constant: number) {\n    Object.defineProperty(this, \"terms\", {\n      value: terms,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"constant\", {\n      value: constant,\n      enumerable: true,\n    });\n  }\n\n  isConstant(): boolean {\n    return this.terms.isEmpty();\n  }\n\n  readonly terms!: ConstraintMap<ConstraintVariable, number>;\n\n  readonly constant!: number;\n\n  plus(that: AnyConstraintExpression): ConstraintExpression {\n    return ConstraintExpression.sum(this, that);\n  }\n\n  negative(): ConstraintExpression {\n    const oldTerms = this.terms;\n    const newTerms = new ConstraintMap<ConstraintVariable, number>();\n    for (let i = 0, n = oldTerms.size; i < n; i += 1) {\n      const [variable, coefficient] = oldTerms.getEntry(i)!;\n      newTerms.set(variable, -coefficient);\n    }\n    return new ConstraintSum(newTerms, -this.constant);\n  }\n\n  minus(that: AnyConstraintExpression): ConstraintExpression {\n    if (typeof that === \"number\") {\n      that = ConstraintExpression.constant(that);\n    } else {\n      that = that.negative();\n    }\n    return ConstraintExpression.sum(this, that);\n  }\n\n  times(scalar: number): ConstraintExpression {\n    const oldTerms = this.terms;\n    const newTerms = new ConstraintMap<ConstraintVariable, number>();\n    for (let i = 0, n = oldTerms.size; i < n; i += 1) {\n      const [variable, coefficient] = oldTerms.getEntry(i)!;\n      newTerms.set(variable, coefficient * scalar);\n    }\n    return new ConstraintSum(newTerms, this.constant * scalar);\n  }\n\n  divide(scalar: number): ConstraintExpression {\n    const oldTerms = this.terms;\n    const newTerms = new ConstraintMap<ConstraintVariable, number>();\n    for (let i = 0, n = oldTerms.size; i < n; i += 1) {\n      const [variable, coefficient] = oldTerms.getEntry(i)!;\n      newTerms.set(variable, coefficient / scalar);\n    }\n    return new ConstraintSum(newTerms, this.constant / scalar);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"ConstraintExpression\").write(46/*'.'*/).write(\"sum\").write(40/*'('*/);\n    const n = this.terms.size;\n    for (let i = 0; i < n; i += 1) {\n      const [variable, coefficient] = this.terms.getEntry(i)!;\n      if (i > 0) {\n        output = output.write(\", \");\n      }\n      if (coefficient === 1) {\n        output = output.debug(variable);\n      } else {\n        output = output.debug(ConstraintExpression.product(coefficient, variable));\n      }\n    }\n    if (this.constant !== 0) {\n      if (n > 0) {\n        output = output.write(\", \");\n      }\n      output = output.debug(this.constant);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {ConstraintExpression} from \"./ConstraintExpression\";\nimport type {ConstraintVariable} from \"./ConstraintVariable\";\n\n/** @hidden */\nexport interface ConstraintTerm extends ConstraintExpression {\n  readonly coefficient: number;\n\n  readonly variable: ConstraintVariable | null;\n\n  negative(): ConstraintTerm;\n}\n\n/** @hidden */\nexport const ConstraintTerm = {} as {\n  is(value: unknown): value is ConstraintTerm;\n};\n\nConstraintTerm.is = function (value: unknown): value is ConstraintTerm {\n  if (typeof value !== void 0 && value !== null) {\n    const term = value as ConstraintTerm;\n    return \"coefficient\" in term && \"variable\" in term;\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {ConstraintMap} from \"./ConstraintMap\";\nimport {AnyConstraintExpression, ConstraintExpression} from \"./ConstraintExpression\";\nimport type {ConstraintTerm} from \"./ConstraintTerm\";\nimport type {ConstraintVariable} from \"./ConstraintVariable\";\n\n/** @hidden */\nexport class ConstraintProduct implements ConstraintTerm, Debug {\n  constructor(coefficient: number, variable: ConstraintVariable) {\n    Object.defineProperty(this, \"coefficient\", {\n      value: coefficient,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"variable\", {\n      value: variable,\n      enumerable: true,\n    });\n  }\n\n  isConstant(): boolean {\n    return false;\n  }\n\n  readonly coefficient!: number;\n\n  readonly variable!: ConstraintVariable;\n\n  get terms(): ConstraintMap<ConstraintVariable, number> {\n    const terms = new ConstraintMap<ConstraintVariable, number>();\n    terms.set(this.variable, this.coefficient);\n    return terms;\n  }\n\n  get constant(): number {\n    return 0;\n  }\n\n  plus(that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (that instanceof ConstraintProduct && this.variable === that.variable) {\n      return ConstraintExpression.product(this.coefficient + that.coefficient, this.variable);\n    } else if (this.variable === that) {\n      return ConstraintExpression.product(this.coefficient + 1, this.variable);\n    } else {\n      return ConstraintExpression.sum(this, that);\n    }\n  }\n\n  negative(): ConstraintTerm {\n    return ConstraintExpression.product(-this.coefficient, this.variable);\n  }\n\n  minus(that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (that instanceof ConstraintProduct && this.variable === that.variable) {\n      return ConstraintExpression.product(this.coefficient - that.coefficient, this.variable);\n    } else if (this.variable === that) {\n      return ConstraintExpression.product(this.coefficient - 1, this.variable);\n    } else {\n      return ConstraintExpression.sum(this, that.negative());\n    }\n  }\n\n  times(scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(this.coefficient * scalar, this.variable);\n  }\n\n  divide(scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(this.coefficient / scalar, this.variable);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"ConstraintExpression\").write(46/*'.'*/).write(\"product\").write(40/*'('*/)\n        .debug(this.coefficient).write(\", \").debug(this.variable).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {ConstraintMap} from \"./ConstraintMap\";\nimport {AnyConstraintExpression, ConstraintExpression} from \"./ConstraintExpression\";\nimport type {ConstraintTerm} from \"./ConstraintTerm\";\nimport type {ConstraintVariable} from \"./ConstraintVariable\";\n\n/** @hidden */\nexport class ConstraintConstant implements ConstraintTerm, Debug {\n  constructor(constant: number) {\n    Object.defineProperty(this, \"constant\", {\n      value: constant,\n      enumerable: true,\n    });\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get coefficient(): number {\n    return 0;\n  }\n\n  get variable(): ConstraintVariable | null {\n    return null;\n  }\n\n  get terms(): ConstraintMap<ConstraintVariable, number> {\n    return new ConstraintMap<ConstraintVariable, number>();\n  }\n\n  readonly constant!: number;\n\n  plus(that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (that instanceof ConstraintConstant) {\n      return ConstraintExpression.constant(this.constant + that.constant);\n    } else {\n      return ConstraintExpression.sum(this, that);\n    }\n  }\n\n  negative(): ConstraintTerm {\n    return ConstraintExpression.constant(-this.constant);\n  }\n\n  minus(that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (that instanceof ConstraintConstant) {\n      return ConstraintExpression.constant(this.constant - that.constant);\n    } else {\n      return ConstraintExpression.sum(this, that.negative());\n    }\n  }\n\n  times(scalar: number): ConstraintExpression {\n    return ConstraintExpression.constant(this.constant * scalar);\n  }\n\n  divide(scalar: number): ConstraintExpression {\n    return ConstraintExpression.constant(this.constant / scalar);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"ConstraintExpression\").write(46/*'.'*/)\n    if (this.constant === 0) {\n      output = output.write(\"zero\");\n    } else {\n      output = output.write(\"constant\").write(40/*'('*/).debug(this.constant).write(41/*')'*/);\n    }\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n}\n\nObject.defineProperty(ConstraintExpression, \"zero\", {\n  value: new ConstraintConstant(0),\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {ConstraintKey} from \"./ConstraintKey\";\nimport {ConstraintMap} from \"./ConstraintMap\";\nimport {AnyConstraintExpression, ConstraintExpression} from \"./ConstraintExpression\";\nimport type {ConstraintTerm} from \"./ConstraintTerm\";\nimport type {ConstraintVariable} from \"./ConstraintVariable\";\nimport type {ConstraintStrength} from \"./ConstraintStrength\";\nimport type {Constraint} from \"./Constraint\";\nimport type {ConstraintScope} from \"./ConstraintScope\";\nimport type {ConstraintSolver} from \"./ConstraintSolver\";\n\nexport class ConstraintBinding implements ConstraintVariable, Debug {\n  constructor(owner: ConstraintScope, name: string, state: number, strength: ConstraintStrength) {\n    Object.defineProperty(this, \"id\", {\n      value: ConstraintKey.nextId(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"owner\", {\n      value: owner,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"name\", {\n      value: name,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"strength\", {\n      value: strength,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"constraintFlags\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"conditionCount\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly id!: number;\n\n  readonly owner!: ConstraintScope;\n\n  readonly name!: string;\n\n  /** @hidden */\n  isExternal(): boolean {\n    return true;\n  }\n\n  /** @hidden */\n  isDummy(): boolean {\n    return false;\n  }\n\n  /** @hidden */\n  isInvalid(): boolean {\n    return false;\n  }\n\n  isConstant(): boolean {\n    return false;\n  }\n\n  readonly state!: number;\n\n  setState(newState: number): void {\n    const oldState = this.state;\n    if (oldState !== newState) {\n      this.willSetState(newState, oldState);\n      Object.defineProperty(this, \"state\", {\n        value: newState,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onSetState(newState, oldState);\n      this.didSetState(newState, oldState);\n    }\n  }\n\n  protected willSetState(newState: number, oldState: number): void {\n    // hook\n  }\n\n  protected onSetState(newState: number, oldState: number): void {\n    if (this.isConstraining()) {\n      this.owner.setConstraintVariable(this, newState);\n    }\n  }\n\n  protected didSetState(newState: number, oldState: number): void {\n    // hook\n  }\n\n  evaluateConstraintVariable(): void {\n    // nop\n  }\n\n  updateConstraintSolution(newState: number): void {\n    if (this.isConstrained()) {\n      this.setState(newState);\n    }\n  }\n\n  readonly strength!: ConstraintStrength;\n\n  get coefficient(): number {\n    return 1;\n  }\n\n  get variable(): ConstraintVariable {\n    return this;\n  }\n\n  get terms(): ConstraintMap<ConstraintVariable, number> {\n    const terms = new ConstraintMap<ConstraintVariable, number>();\n    terms.set(this, 1);\n    return terms;\n  }\n\n  get constant(): number {\n    return 0;\n  }\n\n  plus(that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (this === that) {\n      return ConstraintExpression.product(2, this);\n    } else {\n      return ConstraintExpression.sum(this, that);\n    }\n  }\n\n  negative(): ConstraintTerm {\n    return ConstraintExpression.product(-1, this);\n  }\n\n  minus(that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (this === that) {\n      return ConstraintExpression.zero;\n    } else {\n      return ConstraintExpression.sum(this, that.negative());\n    }\n  }\n\n  times(scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(scalar, this);\n  }\n\n  divide(scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(1 / scalar, this);\n  }\n\n  /** @hidden */\n  readonly constraintFlags!: number;\n\n  /** @hidden */\n  setConstraintFlags(constraintFlags: number): void {\n    Object.defineProperty(this, \"constraintFlags\", {\n      value: constraintFlags,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  isConstrained(): boolean {\n    return (this.constraintFlags & ConstraintBinding.ConstrainedFlag) !== 0;\n  }\n\n  constrain(constrained: boolean = true): this {\n    const constraintFlags = this.constraintFlags;\n    if (constrained && (constraintFlags & ConstraintBinding.ConstrainedFlag) === 0) {\n      this.setConstraintFlags(constraintFlags | ConstraintBinding.ConstrainedFlag);\n      if (this.conditionCount !== 0) {\n        this.stopConstraining();\n      }\n    } else if (!constrained && (constraintFlags & ConstraintBinding.ConstrainedFlag) !== 0) {\n      this.setConstraintFlags(constraintFlags & ~ConstraintBinding.ConstrainedFlag);\n      if (this.conditionCount !== 0) {\n        this.startConstraining();\n        this.updateConstraintVariable();\n      }\n    }\n    return this;\n  }\n\n  /** @hidden */\n  readonly conditionCount!: number;\n\n  /** @hidden */\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    const oldConditionCount = this.conditionCount;\n    const newConditionCount = oldConditionCount + 1;\n    Object.defineProperty(this, \"conditionCount\", {\n      value: newConditionCount,\n      enumerable: true,\n      configurable: true,\n    });\n    if (!this.isConstrained() && oldConditionCount === 0) {\n      this.startConstraining();\n      this.updateConstraintVariable();\n    }\n  }\n\n  /** @hidden */\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void {\n    const oldConditionCount = this.conditionCount;\n    const newConditionCount = oldConditionCount - 1;\n    Object.defineProperty(this, \"conditionCount\", {\n      value: newConditionCount,\n      enumerable: true,\n      configurable: true,\n    });\n    if (!this.isConstrained() && newConditionCount === 0) {\n      this.stopConstraining();\n    }\n  }\n\n  /** @hidden */\n  isConstraining(): boolean {\n    return (this.constraintFlags & ConstraintBinding.ConstrainingFlag) !== 0;\n  }\n\n  /** @hidden */\n  startConstraining(): void {\n    if ((this.constraintFlags & ConstraintBinding.ConstrainingFlag) === 0) {\n      this.willStartConstraining();\n      this.setConstraintFlags(this.constraintFlags | ConstraintBinding.ConstrainingFlag);\n      this.onStartConstraining();\n      this.didStartConstraining();\n    }\n  }\n\n  /** @hidden */\n  willStartConstraining(): void {\n    // hook\n  }\n\n  /** @hidden */\n  onStartConstraining(): void {\n    this.owner.addConstraintVariable(this);\n  }\n\n  /** @hidden */\n  didStartConstraining(): void {\n    // hook\n  }\n\n  /** @hidden */\n  stopConstraining(): void {\n    if ((this.constraintFlags & ConstraintBinding.ConstrainingFlag) !== 0) {\n      this.willStopConstraining();\n      this.setConstraintFlags(this.constraintFlags & ~ConstraintBinding.ConstrainingFlag);\n      this.onStopConstraining();\n      this.didStopConstraining();\n    }\n  }\n\n  /** @hidden */\n  willStopConstraining(): void {\n    // hook\n  }\n\n  /** @hidden */\n  onStopConstraining(): void {\n    this.owner.removeConstraintVariable(this);\n  }\n\n  /** @hidden */\n  didStopConstraining(): void {\n    // hook\n  }\n\n  updateConstraintVariable(): void {\n    const state = this.state;\n    if (state !== void 0) {\n      this.owner.setConstraintVariable(this, this.state);\n    }\n  }\n\n  debug(output: Output): void {\n    output = output.debug(this.owner).write(46/*'.'*/).write(\"constraintVariable\")\n        .write(40/*'('*/).debug(this.name).write(\", \").debug(this.state).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  /** @hidden */\n  static readonly ConstrainedFlag: number = 1 << 0;\n  /** @hidden */\n  static readonly ConstrainingFlag: number = 1 << 1;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport type AnyConstraintStrength = ConstraintStrength | ConstraintStrengthInit;\n\nexport type ConstraintStrengthInit = \"required\" | \"strong\" | \"medium\" | \"weak\";\n\nexport type ConstraintStrength = number;\n\nexport const ConstraintStrength = {} as {\n  readonly Required: number;\n  readonly Strong: number;\n  readonly Medium: number;\n  readonly Weak: number;\n  readonly Unbound: number;\n\n  clip(strength: ConstraintStrength): ConstraintStrength;\n\n  fromAny(strength: AnyConstraintStrength): ConstraintStrength;\n};\n\nObject.defineProperty(ConstraintStrength, \"Required\", {\n  value: 1001001000,\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(ConstraintStrength, \"Strong\", {\n  value: 1000000,\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(ConstraintStrength, \"Medium\", {\n  value: 1000,\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(ConstraintStrength, \"Weak\", {\n  value: 1,\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(ConstraintStrength, \"Unbound\", {\n  value: -1,\n  enumerable: true,\n  configurable: true,\n});\n\nConstraintStrength.clip = function (strength: ConstraintStrength): ConstraintStrength {\n  return Math.min(Math.max(0, strength), ConstraintStrength.Required);\n};\n\nConstraintStrength.fromAny = function (strength: AnyConstraintStrength): ConstraintStrength {\n  if (typeof strength === \"number\") {\n    return ConstraintStrength.clip(strength);\n  } else if (strength === \"required\") {\n    return ConstraintStrength.Required;\n  } else if (strength === \"strong\") {\n    return ConstraintStrength.Strong;\n  } else if (strength === \"medium\") {\n    return ConstraintStrength.Medium;\n  } else if (strength === \"weak\") {\n    return ConstraintStrength.Weak;\n  }\n  throw new TypeError(\"\" + strength);\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {ConstraintKey} from \"./ConstraintKey\";\nimport type {ConstraintExpression} from \"./ConstraintExpression\";\nimport type {ConstraintRelation} from \"./ConstraintRelation\";\nimport {ConstraintStrength} from \"./ConstraintStrength\";\nimport type {ConstraintScope} from \"./ConstraintScope\";\n\nexport class Constraint implements ConstraintKey, Debug {\n  constructor(scope: ConstraintScope, expression: ConstraintExpression,\n              relation: ConstraintRelation, strength: ConstraintStrength) {\n    Object.defineProperty(this, \"id\", {\n      value: ConstraintKey.nextId(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"scope\", {\n      value: scope,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"expression\", {\n      value: expression,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"relation\", {\n      value: relation,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"strength\", {\n      value: strength,\n      enumerable: true,\n    });\n  }\n\n  readonly id!: number;\n\n  readonly scope!: ConstraintScope;\n\n  readonly expression!: ConstraintExpression;\n\n  readonly relation!: ConstraintRelation;\n\n  readonly strength!: ConstraintStrength;\n\n  isConstrained(): boolean {\n    return this.scope.hasConstraint(this);\n  }\n\n  constrain(constrained: boolean = true): this {\n    if (constrained) {\n      this.scope.addConstraint(this);\n    } else {\n      this.scope.removeConstraint(this);\n    }\n    return this;\n  }\n\n  debug(output: Output): void {\n    output = output.debug(this.scope).write(46/*'.'*/).write(\"constraint\").write(40/*'('*/)\n        .debug(this.expression).write(\", \").debug(this.relation).write(\", \").debug(void 0).write(\", \");\n    if (this.strength === ConstraintStrength.Required) {\n      output = output.debug(\"required\");\n    } else if (this.strength === ConstraintStrength.Strong) {\n      output = output.debug(\"strong\");\n    } else if (this.strength === ConstraintStrength.Medium) {\n      output = output.debug(\"medium\");\n    } else if (this.strength === ConstraintStrength.Weak) {\n      output = output.debug(\"weak\");\n    } else {\n      output = output.debug(this.strength);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyConstraintExpression, ConstraintExpression} from \"./ConstraintExpression\";\nimport type {ConstraintRelation} from \"./ConstraintRelation\";\nimport {AnyConstraintStrength, ConstraintStrength} from \"./ConstraintStrength\";\nimport {Constraint} from \"./Constraint\";\nimport type {ConstraintScope} from \"./ConstraintScope\";\n\nexport class ConstraintGroup {\n  constructor(scope: ConstraintScope) {\n    Object.defineProperty(this, \"scope\", {\n      value: scope,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"constraints\", {\n      value: [],\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"constrained\", {\n      value: false,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly scope!: ConstraintScope;\n\n  constraint(lhs: AnyConstraintExpression, relation: ConstraintRelation,\n             rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint {\n    lhs = ConstraintExpression.fromAny(lhs);\n    if (rhs !== void 0) {\n      rhs = ConstraintExpression.fromAny(rhs);\n    }\n    const expression = rhs !== void 0 ? lhs.minus(rhs) : lhs;\n    if (strength === void 0) {\n      strength = ConstraintStrength.Required;\n    } else {\n      strength = ConstraintStrength.fromAny(strength);\n    }\n    const constraint = new Constraint(this.scope, expression, relation, strength);\n    this.addConstraint(constraint);\n    return constraint;\n  }\n\n  readonly constraints!: ReadonlyArray<Constraint>;\n\n  hasConstraint(constraint: Constraint): boolean {\n    const constraints = this.constraints;\n    return constraints.indexOf(constraint) >= 0;\n  }\n\n  addConstraint(constraint: Constraint): void {\n    const constraints = this.constraints as Constraint[];\n    if (constraints.indexOf(constraint) < 0) {\n      constraints.push(constraint);\n      constraint.constrain(this.constrained);\n    }\n  }\n\n  removeConstraint(constraint: Constraint): void {\n    const constraints = this.constraints as Constraint[];\n    if (constraints !== void 0) {\n      const index = constraints.indexOf(constraint);\n      if (index >= 0) {\n        constraints.splice(index, 1);\n        constraint.constrain(false);\n      }\n    }\n  }\n\n  /** @hidden */\n  enableConstraints(): void {\n    const constraints = this.constraints;\n    for (let i = 0, n = constraints.length ; i < n; i += 1) {\n      constraints[i]!.constrain(true);\n    }\n  }\n\n  /** @hidden */\n  disableConstraints(): void {\n    const constraints = this.constraints;\n    for (let i = 0, n = constraints.length ; i < n; i += 1) {\n      constraints[i]!.constrain(false);\n    }\n  }\n\n  /** @hidden */\n  readonly constrained!: boolean;\n\n  isConstrained(): boolean {\n    return this.constrained;\n  }\n\n  constrain(constrained: boolean = true): this {\n    if (constrained && !this.constrained) {\n      Object.defineProperty(this, \"constrained\", {\n        value: true,\n        enumerable: true,\n        configurable: true,\n      });\n      this.enableConstraints();\n    } else if (!constrained && this.constrained) {\n      Object.defineProperty(this, \"constrained\", {\n        value: false,\n        enumerable: true,\n        configurable: true,\n      });\n      this.disableConstraints();\n    }\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent} from \"@swim/util\";\nimport type {ConstraintMap} from \"./ConstraintMap\";\nimport {ConstraintSymbol, ConstraintDummy} from \"./ConstraintSymbol\";\nimport type {ConstraintSolver} from \"./ConstraintSolver\";\n\n/** @hidden */\nexport class ConstraintRow {\n  constructor(solver: ConstraintSolver, symbol: ConstraintSymbol | null,\n              cells: ConstraintMap<ConstraintSymbol, number>, constant: number) {\n    Object.defineProperty(this, \"solver\", {\n      value: solver,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"symbol\", {\n      value: symbol,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"cells\", {\n      value: cells,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"constant\", {\n      value: constant,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly solver!: ConstraintSolver;\n\n  readonly symbol!: ConstraintSymbol | null;\n\n  /** @hidden */\n  setSymbol(symbol: ConstraintSymbol | null): void {\n    Object.defineProperty(this, \"symbol\", {\n      value: symbol,\n      enumerable: true,\n      configurable: true,\n    });\n    this.invalidate();\n  }\n\n  readonly cells!: ConstraintMap<ConstraintSymbol, number>;\n\n  readonly constant!: number;\n\n  /** @hidden */\n  setConstant(constant: number): void {\n    if (this.constant !== constant) {\n      Object.defineProperty(this, \"constant\", {\n        value: constant,\n        enumerable: true,\n        configurable: true,\n      });\n      this.invalidate();\n    }\n  }\n\n  isConstant(): boolean {\n    return this.cells.isEmpty();\n  }\n\n  isDummy(): boolean {\n    for (let i = 0, n = this.cells.size; i < n; i += 1) {\n      const symbol = this.cells.getEntry(i)![0];\n      if (!(symbol instanceof ConstraintDummy)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  clone(): ConstraintRow {\n    return new ConstraintRow(this.solver, this.symbol, this.cells.clone(), this.constant);\n  }\n\n  add(value: number): number {\n    const sum = this.constant + value;\n    this.setConstant(sum);\n    return sum;\n  }\n\n  insertSymbol(symbol: ConstraintSymbol, coefficient: number = 1): void {\n    coefficient += this.cells.get(symbol) ?? 0;\n    if (Math.abs(coefficient) < Equivalent.Epsilon) {\n      this.cells.remove(symbol);\n    } else {\n      this.cells.set(symbol, coefficient);\n    }\n  }\n\n  insertRow(that: ConstraintRow, coefficient: number): void {\n    this.setConstant(this.constant + that.constant * coefficient);\n    for (let i = 0, n = that.cells.size; i < n; i += 1) {\n      const [symbol, value] = that.cells.getEntry(i)!;\n      this.insertSymbol(symbol, value * coefficient);\n    }\n  }\n\n  removeSymbol(symbol: ConstraintSymbol): void {\n    this.cells.remove(symbol);\n  }\n\n  negate(): void {\n    this.setConstant(-this.constant);\n    for (let i = 0, n = this.cells.size; i < n; i += 1) {\n      const entry = this.cells.getEntry(i)!;\n      entry[1] = -entry[1];\n    }\n  }\n\n  solveFor(symbol: ConstraintSymbol): void {\n    const value = this.cells.remove(symbol);\n    if (value !== void 0) {\n      const coefficient = -1 / value;\n      this.setConstant(this.constant * coefficient);\n      for (let i = 0, n = this.cells.size; i < n; i += 1) {\n        const entry = this.cells.getEntry(i)!;\n        entry[1] *= coefficient;\n      }\n    }\n  }\n\n  solveForEx(lhs: ConstraintSymbol, rhs: ConstraintSymbol): void {\n    this.insertSymbol(lhs, -1.0);\n    this.solveFor(rhs);\n  }\n\n  coefficientFor(symbol: ConstraintSymbol): number {\n    const value = this.cells.get(symbol);\n    return value !== void 0 ? value : 0;\n  }\n\n  substitute(symbol: ConstraintSymbol, row: ConstraintRow): void {\n    const value = this.cells.remove(symbol);\n    if (value !== void 0) {\n      this.insertRow(row, value);\n    }\n  }\n\n  invalidate(): void {\n    const symbol = this.symbol;\n    if (symbol !== null) {\n      this.solver.invalidate(symbol, this);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent} from \"@swim/util\";\nimport {ConstraintMap} from \"./ConstraintMap\";\nimport {ConstraintSymbol, ConstraintSlack, ConstraintError, ConstraintDummy} from \"./ConstraintSymbol\";\nimport {AnyConstraintExpression, ConstraintExpression} from \"./ConstraintExpression\";\nimport type {ConstraintVariable} from \"./ConstraintVariable\";\nimport {ConstraintBinding} from \"./ConstraintBinding\";\nimport type {ConstraintRelation} from \"./ConstraintRelation\";\nimport {AnyConstraintStrength, ConstraintStrength} from \"./ConstraintStrength\";\nimport {Constraint} from \"./Constraint\";\nimport type {ConstraintScope} from \"./ConstraintScope\";\nimport {ConstraintRow} from \"./ConstraintRow\";\n\n/** @hidden */\nexport interface ConstraintTag {\n  readonly marker: ConstraintSymbol;\n  readonly other: ConstraintSymbol;\n}\n\n/** @hidden */\nexport interface ConstraintVariableBinding {\n  readonly constraint: Constraint;\n  readonly tag: ConstraintTag;\n  state: number;\n}\n\nexport class ConstraintSolver implements ConstraintScope {\n  constructor() {\n    Object.defineProperty(this, \"constraints\", {\n      value: new ConstraintMap(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"constraintVariables\", {\n      value: new ConstraintMap(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"rows\", {\n      value: new ConstraintMap(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"infeasible\", {\n      value: [],\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"objective\", {\n      value: new ConstraintRow(this, null, new ConstraintMap(), 0),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"artificial\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"invalidated\", {\n      value: new ConstraintMap(),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly constraints!: ConstraintMap<Constraint, ConstraintTag>;\n\n  /** @hidden */\n  readonly constraintVariables!: ConstraintMap<ConstraintVariable, ConstraintVariableBinding>;\n\n  /** @hidden */\n  readonly rows!: ConstraintMap<ConstraintSymbol, ConstraintRow>;\n\n  /** @hidden */\n  readonly infeasible!: ConstraintSymbol[];\n\n  /** @hidden */\n  readonly objective!: ConstraintRow;\n\n  /** @hidden */\n  readonly artificial!: ConstraintRow | null;\n\n  /** @hidden */\n  readonly invalidated!: ConstraintMap<ConstraintSymbol, ConstraintRow | null>;\n\n  constraint(lhs: AnyConstraintExpression, relation: ConstraintRelation,\n             rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint {\n    lhs = ConstraintExpression.fromAny(lhs);\n    if (rhs !== void 0) {\n      rhs = ConstraintExpression.fromAny(rhs);\n    }\n    const expression = rhs !== void 0 ? lhs.minus(rhs) : lhs;\n    if (strength === void 0) {\n      strength = ConstraintStrength.Required;\n    } else {\n      strength = ConstraintStrength.fromAny(strength);\n    }\n    const constraint = new Constraint(this, expression, relation, strength);\n    this.addConstraint(constraint);\n    return constraint;\n  }\n\n  hasConstraint(constraint: Constraint): boolean {\n    return this.constraints.has(constraint);\n  }\n\n  addConstraint(constraint: Constraint): void {\n    if (this.constraints.has(constraint)) {\n      return;\n    }\n\n    const terms = constraint.expression.terms;\n    for (let i = 0, n = terms.size; i < n; i += 1) {\n      const variable = terms.getEntry(i)![0];\n      variable.addConstraintCondition(constraint, this);\n    }\n\n    // Creating a row causes symbols to be reserved for the variables in the constraint.\n    const {row, tag} = this.createRow(constraint);\n\n    this.addConstraintRow(constraint, row, tag);\n  }\n\n  /** @hidden */\n  protected addConstraintRow(constraint: Constraint, row: ConstraintRow, tag: ConstraintTag): void {\n    this.willAddConstraint(constraint);\n\n    let subject = this.chooseSubject(row, tag);\n\n    // If chooseSubject couldn't find a valid entering symbol, one last option\n    // is available if the entire row is composed of dummy variables. If the\n    // constant of the row is zero, then this represents redundant constraints\n    // and the new dummy marker can enter the basis. If the constant is\n    // non-zero, then it represents an unsatisfiable constraint.\n    if (subject.isInvalid() && row.isDummy()) {\n      if (Math.abs(row.constant) < Equivalent.Epsilon) {\n        subject = tag.marker;\n      } else {\n        throw new Error(\"unsatisfiable constraint\");\n      }\n    }\n\n    // If an entering symbol still isn't found, then the row must be added\n    // using an artificial variable. If that fails, then the row represents\n    // an unsatisfiable constraint.\n    if (subject.isInvalid()) {\n      if (!this.addWithArtificialVariable(row)) {\n        throw new Error(\"unsatisfiable constraint\");\n      }\n    } else {\n      row.setSymbol(subject);\n      row.solveFor(subject);\n      this.substitute(subject, row);\n      this.rows.set(subject, row);\n    }\n\n    this.constraints.set(constraint, tag);\n\n    // Optimizing after each constraint is added performs less aggregate work\n    // due to a smaller average system size. It also ensures the solver remains\n    // in a consistent state.\n    this.optimize(this.objective);\n\n    this.didAddConstraint(constraint);\n\n    this.updateSolution();\n  }\n\n  protected willAddConstraint(constraint: Constraint): void {\n    // hook\n  }\n\n  protected didAddConstraint(constraint: Constraint): void {\n    // hook\n  }\n\n  removeConstraint(constraint: Constraint): void {\n    const tag = this.constraints.get(constraint);\n    if (tag === void 0) {\n      return;\n    }\n\n    this.removeConstraintRow(constraint);\n\n    const terms = constraint.expression.terms;\n    for (let i = 0, n = terms.size; i < n; i += 1) {\n      const variable = terms.getEntry(i)![0];\n      variable.removeConstraintCondition(constraint, this);\n    }\n  }\n\n  /** @hidden */\n  protected removeConstraintRow(constraint: Constraint): void {\n    const tag = this.constraints.get(constraint);\n    if (tag === void 0) {\n      return;\n    }\n\n    this.willRemoveConstraint(constraint);\n\n    this.constraints.remove(constraint);\n\n    // Remove the error effects from the objective function *before* pivoting,\n    // or substitutions into the objective will lead to incorrect solver results.\n    this.removeConstraintEffects(constraint, tag);\n\n    // If the marker is basic, simply drop the row. Otherwise pivot the marker\n    // into the basis and then drop the row.\n    const marker = tag.marker;\n    if (this.rows.remove(marker) === void 0) {\n      const leaving = this.getMarkerLeavingSymbol(marker);\n      if (leaving.isInvalid()) {\n        throw new Error(\"failed to find leaving row\");\n      }\n      const row = this.rows.remove(leaving)!;\n      row.solveForEx(leaving, marker);\n      this.substitute(marker, row);\n    }\n\n    // Optimizing after each constraint is removed ensures that the solver\n    // remains consistent. It makes the solver API easier to use at a small\n    // tradeoff for speed.\n    this.optimize(this.objective);\n\n    this.didRemoveConstraint(constraint);\n\n    this.updateSolution();\n  }\n\n  protected willRemoveConstraint(constraint: Constraint): void {\n    // hook\n  }\n\n  protected didRemoveConstraint(constraint: Constraint): void {\n    // hook\n  }\n\n  constraintVariable(name: string, value?: number, strength?: AnyConstraintStrength): ConstraintBinding {\n    if (value === void 0) {\n      value = 0;\n    }\n    if (strength === void 0) {\n      strength = ConstraintStrength.Strong;\n    } else {\n      strength = ConstraintStrength.fromAny(strength);\n    }\n    return new ConstraintBinding(this, name, value, strength);\n  }\n\n  hasConstraintVariable(variable: ConstraintVariable): boolean {\n    return this.constraintVariables.has(variable);\n  }\n\n  addConstraintVariable(variable: ConstraintVariable): void {\n    if (this.constraintVariables.has(variable)) {\n      return;\n    }\n\n    const strength = ConstraintStrength.clip(variable.strength);\n    if (strength === ConstraintStrength.Required) {\n      throw new Error(\"invalid variable strength\");\n    }\n\n    this.willAddConstraintVariable(variable);\n\n    const constraint = new Constraint(this, variable, \"eq\", strength);\n    const {row, tag} = this.createRow(constraint);\n    this.constraintVariables.set(variable, {constraint, tag, state: 0});\n\n    this.addConstraintRow(constraint, row, tag);\n\n    this.didAddConstraintVariable(variable);\n  }\n\n  protected willAddConstraintVariable(variable: ConstraintVariable): void {\n    // hook\n  }\n\n  protected didAddConstraintVariable(variable: ConstraintVariable): void {\n    // hook\n  }\n\n  removeConstraintVariable(variable: ConstraintVariable): void {\n    const binding = this.constraintVariables.get(variable);\n    if (binding === void 0) {\n      return;\n    }\n\n    this.willRemoveConstraintVariable(variable);\n\n    this.constraintVariables.remove(variable);\n    this.removeConstraintRow(binding.constraint);\n\n    this.didRemoveConstraintVariable(variable);\n  }\n\n  protected willRemoveConstraintVariable(variable: ConstraintVariable): void {\n    // hook\n  }\n\n  protected didRemoveConstraintVariable(variable: ConstraintVariable): void {\n    // hook\n  }\n\n  setConstraintVariable(variable: ConstraintVariable, newState: number): void {\n    const binding = this.constraintVariables.get(variable);\n    if (binding === void 0) {\n      throw new Error(\"unbound variable\");\n    }\n\n    const oldState = binding.state;\n    if (oldState !== newState) {\n      binding.state = newState;\n      const delta = newState - oldState;\n\n      this.willSetConstraintVariable(variable, newState, oldState);\n\n      // Check first if the positive error variable is basic.\n      const marker = binding.tag.marker;\n      let row = this.rows.get(marker);\n      if (row !== void 0) {\n        if (row.add(-delta) < 0) {\n          this.infeasible.push(marker);\n        }\n        this.dualOptimize();\n        return;\n      }\n\n      // Check next if the negative error variable is basic.\n      const other = binding.tag.other;\n      row = this.rows.get(other);\n      if (row !== void 0) {\n        if (row.add(delta) < 0) {\n          this.infeasible.push(other);\n        }\n        this.dualOptimize();\n        return;\n      }\n\n      // Otherwise update each row where the error variables exist.\n      for (let i = 0, n = this.rows.size; i < n; i += 1) {\n        const [symbol, row] = this.rows.getEntry(i)!;\n        const coefficient = row.coefficientFor(marker);\n        if (coefficient !== 0 && row.add(delta * coefficient) < 0 && !symbol.isExternal()) {\n          this.infeasible.push(symbol);\n        }\n      }\n      this.dualOptimize();\n\n      this.didSetConstraintVariable(variable, newState, oldState);\n\n      this.updateSolution();\n    }\n  }\n\n  protected willSetConstraintVariable(variable: ConstraintVariable, newState: number, oldState: number): void {\n    // hook\n  }\n\n  protected didSetConstraintVariable(variable: ConstraintVariable, newState: number, oldState: number): void {\n    // hook\n  }\n\n  /** @hidden */\n  invalidate(symbol: ConstraintSymbol, row: ConstraintRow | null = null): void {\n    if (symbol.isExternal()) {\n      this.invalidated.set(symbol, row);\n    }\n  }\n\n  /** @hidden */\n  updateSolution(): void {\n    const invalidated = this.invalidated;\n    if (!invalidated.isEmpty()) {\n      Object.defineProperty(this, \"invalidated\", {\n        value: new ConstraintMap(),\n        enumerable: true,\n        configurable: true,\n      });\n      for (let i = 0, n = invalidated.size; i < n; i += 1) {\n        const symbol = invalidated.getEntry(i)![0];\n        const row = this.rows.get(symbol);\n        if (row !== void 0) {\n          symbol.updateConstraintSolution(row.constant);\n        }\n      }\n    }\n  }\n\n  // Returns a new row for the given constraint.\n  //\n  // The terms in the constraint will be converted to cells in the row.\n  // Any term in the constraint with a coefficient of zero is ignored.\n  // If the symbol for a given cell variable is basic, the cell variable\n  // will be substituted with the basic row.\n  //\n  // The necessary slack and error variables will be added to the row.\n  // If the constant for the row is negative, the sign for the row will\n  // be inverted so the constant becomes positive.\n  private createRow(constraint: Constraint): {row: ConstraintRow, tag: ConstraintTag} {\n    const expression = constraint.expression;\n    const row = new ConstraintRow(this, null, new ConstraintMap(), expression.constant);\n\n    // Substitute the current basic variables into the row.\n    const terms = expression.terms;\n    for (let i = 0, n = terms.size; i < n; i += 1) {\n      const [variable, coefficient] = terms.getEntry(i)!;\n      if (Math.abs(coefficient) >= Equivalent.Epsilon) {\n        const basic = this.rows.get(variable);\n        if (basic !== void 0) {\n          row.insertRow(basic, coefficient);\n        } else {\n          row.insertSymbol(variable, coefficient);\n        }\n      }\n    }\n\n    // Add the necessary slack, error, and dummy variables.\n    const objective = this.objective;\n    const relation = constraint.relation;\n    const strength = constraint.strength;\n    const tag = {marker: ConstraintSymbol.invalid, other: ConstraintSymbol.invalid};\n    if (relation === \"le\" || relation === \"ge\") {\n      const coefficient = relation === \"le\" ? 1 : -1;\n      const slack = new ConstraintSlack();\n      tag.marker = slack;\n      row.insertSymbol(slack, coefficient);\n      if (strength < ConstraintStrength.Required) {\n        const error = new ConstraintError();\n        tag.other = error;\n        row.insertSymbol(error, -coefficient);\n        objective.insertSymbol(error, strength);\n      }\n    } else {\n      if (strength < ConstraintStrength.Required) {\n        const eplus = new ConstraintError();\n        const eminus = new ConstraintError();\n        tag.marker = eplus;\n        tag.other = eminus;\n        row.insertSymbol(eplus, -1); // v = eplus - eminus\n        row.insertSymbol(eminus, 1); // v - eplus + eminus = 0\n        objective.insertSymbol(eplus, strength);\n        objective.insertSymbol(eminus, strength);\n      } else {\n        const dummy = new ConstraintDummy();\n        tag.marker = dummy;\n        row.insertSymbol(dummy);\n      }\n    }\n\n    // Ensure the row has a positive constant.\n    if (row.constant < 0) {\n      row.negate();\n    }\n\n    return {row, tag};\n  }\n\n  // Returns the symbol to use for solving for the row.\n  //\n  // This method will choose the best subject to use as the solve target for\n  // the row. An invalid symbol will be returned if there is no valid target.\n  //\n  // The symbols are chosen according to the following precedence:\n  //\n  // 1) The first symbol representing an external variable.\n  // 2) A negative slack or error tag variable.\n  //\n  // If a subject cannot be found, an invalid symbol will be returned.\n  private chooseSubject(row: ConstraintRow, tag: ConstraintTag): ConstraintSymbol {\n    for (let i = 0, n = row.cells.size; i < n; i += 1) {\n      const symbol = row.cells.getEntry(i)![0];\n      if (symbol.isExternal()) {\n        return symbol;\n      }\n    }\n    if (tag.marker instanceof ConstraintSlack || tag.marker instanceof ConstraintError) {\n      if (row.coefficientFor(tag.marker) < 0) {\n        return tag.marker;\n      }\n    }\n    if (tag.other instanceof ConstraintSlack || tag.other instanceof ConstraintError) {\n      if (row.coefficientFor(tag.other) < 0) {\n        return tag.other;\n      }\n    }\n    return ConstraintSymbol.invalid;\n  }\n\n  // Adds the row to the tableau using an artificial variable; returns `false`\n  // if the constraint cannot be satisfied.\n  private addWithArtificialVariable(row: ConstraintRow): boolean {\n    // Create and add the artificial variable to the tableau.\n    const artificial = new ConstraintSlack();\n    this.rows.set(artificial, row.clone());\n    Object.defineProperty(this, \"artificial\", {\n      value: row.clone(),\n      enumerable: true,\n      configurable: true,\n    });\n\n    // Optimize the artificial objective. This is successful\n    // only if the artificial objective is optimized to zero.\n    this.optimize(this.artificial!);\n    const success = Math.abs(this.artificial!.constant) < Equivalent.Epsilon;\n    Object.defineProperty(this, \"artificial\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n\n    // If the artificial variable is basic, pivot the row so that\n    // it becomes non-basic. If the row is constant, exit early.\n    const basic = this.rows.remove(artificial);\n    if (basic !== void 0) {\n      if (basic.isConstant()) {\n        return success;\n      }\n      const entering = this.anyPivotableSymbol(basic);\n      if (entering.isInvalid()) {\n        return false; // unsatisfiable (will this ever happen?)\n      }\n      basic.setSymbol(entering);\n      basic.solveForEx(artificial, entering);\n      this.substitute(entering, basic);\n      this.rows.set(entering, basic);\n    }\n\n    // Remove the artificial variable from the tableau.\n    for (let i = 0, n = this.rows.size; i < n; i += 1) {\n      this.rows.getEntry(i)![1].removeSymbol(artificial);\n    }\n    this.objective.removeSymbol(artificial);\n    return success;\n  }\n\n  // Substitutues all instances of the parametric symbol in the tableau\n  // and the objective function with the given row.\n  private substitute(symbol: ConstraintSymbol, row: ConstraintRow): void {\n    for (let i = 0, n = this.rows.size; i < n; i += 1) {\n      const [key, value] = this.rows.getEntry(i)!;\n      value.substitute(symbol, row);\n      if (value.constant < 0 && !key.isExternal()) {\n        this.infeasible.push(key);\n      }\n    }\n    this.objective.substitute(symbol, row);\n    if (this.artificial !== null) {\n      this.artificial.substitute(symbol, row);\n    }\n  }\n\n  // Optimizes the system for the given objective function.\n  //\n  // Performs iterations of Phase 2 of the simplex method until the objective\n  // function reaches a minimum.\n  private optimize(objective: ConstraintRow): void {\n    do {\n      const entering = this.getEnteringSymbol(objective);\n      if (entering.isInvalid()) {\n        return;\n      }\n      const leaving = this.getLeavingSymbol(entering);\n      if (leaving.isInvalid()) {\n        throw new Error(\"objective is unbounded\");\n      }\n      // Pivot the entering symbol into the basis.\n      const row = this.rows.remove(leaving)!;\n      row.setSymbol(entering);\n      row.solveForEx(leaving, entering);\n      this.substitute(entering, row);\n      this.rows.set(entering, row);\n    } while (true);\n  }\n\n  // Optimizes the system using the dual of the simplex method.\n  //\n  // The current state of the system should be such that the objective\n  // function is optimal, but not feasible. This method will perform\n  // an iteration of the dual simplex method to make the solution both\n  // optimal and feasible.\n  private dualOptimize(): void {\n    let leaving: ConstraintSymbol | undefined;\n    while ((leaving = this.infeasible.pop(), leaving !== void 0)) {\n      const row = this.rows.get(leaving);\n      if (row !== void 0 && row.constant < 0) {\n        const entering = this.getDualEnteringSymbol(row);\n        if (entering.isInvalid()) {\n          throw new Error(\"dual optimize failed\");\n        }\n        // Pivot the entering symbol into the basis.\n        this.rows.remove(leaving);\n        row.setSymbol(entering);\n        row.solveForEx(leaving, entering);\n        this.substitute(entering, row);\n        this.rows.set(entering, row);\n      }\n    }\n  }\n\n  // Returns the entering variable for a pivot operation.\n  //\n  // Returns the first symbol in the objective function which is non-dummy and\n  // has a coefficient less than zero. If no symbol meets the criteria then the\n  // objective function is at a minimum, and an invalid symbol is returned.\n  private getEnteringSymbol(objective: ConstraintRow): ConstraintSymbol {\n    for (let i = 0, n = objective.cells.size; i < n; i += 1) {\n      const [symbol, value] = objective.cells.getEntry(i)!;\n      if (value < 0 && !symbol.isDummy()) {\n        return symbol;\n      }\n    }\n    return ConstraintSymbol.invalid;\n  }\n\n  // Returns the entering symbol for the dual optimize operation.\n  //\n  // Returns the symbol in the row which has a positive coefficient and yields\n  // the minimum ratio for its respective symbol in the objective function.\n  // The provided row *must* be infeasible. If no symbol is found which meets\n  // the criteria, an invalid symbol is returned.\n  private getDualEnteringSymbol(row: ConstraintRow): ConstraintSymbol {\n    let ratio = Number.MAX_VALUE;\n    let entering = ConstraintSymbol.invalid;\n    for (let i = 0, n = row.cells.size; i < n; i += 1) {\n      const [symbol, value] = row.cells.getEntry(i)!;\n      if (value > 0 && !symbol.isDummy()) {\n        const coefficient = this.objective.coefficientFor(symbol);\n        const coratio = coefficient / value;\n        if (coratio < ratio) {\n          ratio = coratio;\n          entering = symbol;\n        }\n      }\n    }\n    return entering;\n  }\n\n  // Returns the symbol for the pivot exit row. If no appropriate exit symbol\n  // is found, an invalid symbol will be returned, indicating that the\n  // objective function is unbounded.\n  private getLeavingSymbol(entering: ConstraintSymbol): ConstraintSymbol {\n    let ratio = Number.MAX_VALUE;\n    let found = ConstraintSymbol.invalid;\n    for (let i = 0, n = this.rows.size; i < n; i += 1) {\n      const [symbol, row] = this.rows.getEntry(i)!;\n      if (!symbol.isExternal()) {\n        const coefficient = row.coefficientFor(entering);\n        if (coefficient < 0) {\n          const coratio = -row.constant / coefficient;\n          if (coratio < ratio) {\n            ratio = coratio;\n            found = symbol;\n          }\n        }\n      }\n    }\n    return found;\n  }\n\n  // Returns a symbol corresponding to a basic row which holds the given marker\n  // variable. The row will be chosen according to the following precedence:\n  //\n  // 1) The row with a restricted basic varible and a negative coefficient\n  //    for the marker with the smallest ratio of `-constant / coefficient`.\n  // 2) The row with a restricted basic variable and the smallest ratio of\n  //    `constant / coefficient`.\n  // 3) The last unrestricted row which contains the marker.\n  //\n  // If the marker does not exist in any row, an invalid symbol will be\n  // returned, indicating an internal solver error since the marker *should*\n  // exist somewhere in the tableau.\n  private getMarkerLeavingSymbol(marker: ConstraintSymbol): ConstraintSymbol {\n    let r1 = Number.MAX_VALUE;\n    let r2 = Number.MAX_VALUE;\n    let first = ConstraintSymbol.invalid;\n    let second = ConstraintSymbol.invalid;\n    let third = ConstraintSymbol.invalid;\n    for (let i = 0, n = this.rows.size; i < n; i += 1) {\n      const [symbol, row] = this.rows.getEntry(i)!;\n      const coefficient = row.coefficientFor(marker);\n      if (coefficient === 0) {\n        continue;\n      }\n      if (symbol.isExternal()) {\n        third = symbol;\n      } else if (coefficient < 0) {\n        const ratio = -row.constant / coefficient;\n        if (ratio < r1) {\n          r1 = ratio;\n          first = symbol;\n        }\n      } else {\n        const ratio = row.constant / coefficient;\n        if (ratio < r2) {\n          r2 = ratio;\n          second = symbol;\n        }\n      }\n    }\n    if (!first.isInvalid()) {\n      return first;\n    } else if (!second.isInvalid()) {\n      return second;\n    } else {\n      return third;\n    }\n  }\n\n  // Removes the effects of a constraint on the objective function.\n  private removeConstraintEffects(constraint: Constraint, tag: ConstraintTag): void {\n    if (tag.marker instanceof ConstraintError) {\n      this.removeMarkerEffects(tag.marker, constraint.strength);\n    }\n    if (tag.other instanceof ConstraintError) {\n      this.removeMarkerEffects(tag.other, constraint.strength);\n    }\n  }\n\n  // Removes the effects of an error marker on the objective function.\n  private removeMarkerEffects(marker: ConstraintSymbol, strength: ConstraintStrength): void {\n    const row = this.rows.get(marker);\n    if (row !== void 0) {\n      this.objective.insertRow(row, -strength);\n    } else {\n      this.objective.insertSymbol(marker, -strength);\n    }\n  }\n\n  // Returns the first Slack or Error symbol in the row. If no such symbol\n  // is present, an invalid symbol will be returned.\n  private anyPivotableSymbol(row: ConstraintRow): ConstraintSymbol {\n    for (let i = 0, n = row.cells.size; i < n; i += 1) {\n      const symbol = row.cells.getEntry(i)![0];\n      if (symbol instanceof ConstraintSlack || symbol instanceof ConstraintError) {\n        return symbol;\n      }\n    }\n    return ConstraintSymbol.invalid;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, HashCode, Equivalent, Compare, Cursor} from \"@swim/util\";\nimport {Debug, Display, Format, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport {ItemInterpolator} from \"./\"; // forward import\nimport type {Field} from \"./Field\";\nimport {AnyValue, Value} from \"./\"; // forward import\nimport {Record} from \"./\"; // forward import\nimport type {AnyText} from \"./Text\";\nimport type {AnyNum} from \"./Num\";\nimport {Bool} from \"./\"; // forward import\nimport {Extant} from \"./\"; // forward import\nimport {Absent} from \"./\"; // forward import\nimport {Selector} from \"./\"; // forward import\nimport {MathModule} from \"./\"; // forward import\nimport type {AnyInterpreter} from \"./interpreter/Interpreter\";\nimport type {Form} from \"./form/Form\";\n\nexport type AnyItem = Item\n                    | {readonly $key: AnyValue, readonly $value: AnyValue}\n                    | {readonly [key: string]: AnyValue}\n                    | ReadonlyArray<AnyItem>\n                    | Uint8Array\n                    | string\n                    | number\n                    | boolean\n                    | null\n                    | undefined;\n\nexport abstract class Item implements Interpolate<Item>, HashCode, Equivalent, Compare, Debug, Display {\n  /** @hidden */\n  constructor() {\n    // stub\n  }\n\n  /**\n   * Returns `true` if this `Item` is not [[Absent]].\n   */\n  abstract isDefined(): boolean;\n\n  /**\n   * Returns `true` if this `Item` is neither [[Extant]] nor [[Absent]].\n   */\n  abstract isDistinct(): boolean;\n\n  /**\n   * Returns `true` if this `Item` is not one of: an empty `Record`, `False`,\n   * `Extant`, or `Absent`.\n   */\n  abstract isDefinite(): boolean;\n\n  /**\n   * Returns `true` if this `Item` always [[Item.evaluate evaluates]] to the\n   * same `Item`.\n   */\n  abstract isConstant(): boolean;\n\n  /**\n   * Returns the key component of this `Item`, if this `Item is a [[Field]];\n   * otherwise returns [[Absent]] if this `Item` is a `Value`.\n   */\n  abstract readonly key: Value;\n\n  /**\n   * Returns the value component of this `Item`, if this `Item` is a [[Field]];\n   * otherwise returns `this` if this `Item is a `Value`.\n   */\n  abstract toValue(): Value;\n\n  /**\n   * Returns the `key` string of the first member of this `Item`, if this `Item`\n   * is a [[Record]], and its first member is an [[Attr]]; otherwise returns\n   * `undefined` if this `Item` is not a `Record`, or if this `Item` is a\n   * `Record` whose first member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  abstract readonly tag: string | undefined;\n\n  /**\n   * Returns the [[Item.flattened flattened]] members of this `Item` after all\n   * attributes have been removed, if this `Item` is a [[Record]]; otherwise\n   * returns `this` if this `Item` is a non-`Record` `Value`, or returns\n   * the value component if this `Item` is a `Field`.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  abstract readonly target: Value;\n\n  /**\n   * Returns the sole member of this `Item`, if this `Item` is a [[Record]]\n   * with exactly one member, and its member is a `Value`; returns [[Extant]]\n   * if this `Item` is an empty `Record`; returns [[Absent]] if this `Item` is\n   * a `Field`; otherwise returns `this` if this `Item` is a `Record` with more\n   * than one member, or if this `Item` is a non-`Record` `Value`.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  abstract flattened(): Value;\n\n  /**\n   * Returns `this` if this `Item` is a [[Record]]; returns a `Record`\n   * containing just this `Item`, if this `Item` is [[Item.isDistinct\n   * distinct]]; otherwise returns an empty `Record` if this `Item` is\n   * [[Extant]] or [[Absent]].  Facilitates writing code that treats a bare\n   * `Value` equivalently to a unary `Record`.\n   */\n  abstract unflattened(): Record;\n\n  /**\n   * Returns the value of the first member of this `Item`, if this `Item` is a\n   * [[Record]], and its first member is an [[Attr]] whose `key` string is\n   * equal to `tag`; otherwise returns [[Absent]] if this `Item` is not a\n   * `Record`, or if this `Item` is a `Record` whose first member is not an\n   * `Attr`, or if this `Item` is a `Record` whose first member is an `Attr`\n   * whose `key` does not equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  abstract header(tag: string): Value;\n\n  /**\n   * Returns the [[Item.unflattened unflattened]] [[Item.header header]] of\n   * this `Item`, if this `Item` is a [[Record]], and its first member is an\n   * [[Attr]] whose `key` string is equal to `tag`; otherwise returns\n   * `undefined`.\n   *\n   * The `headers` of the `tag` attribute of a structure are like the\n   * attributes of an XML element tag; through unlike an XML element, `tag`\n   * attribute headers are not limited to string keys and values.\n   */\n  abstract headers(tag: string): Record | undefined;\n\n  /**\n   * Returns the first member of this `Item`, if this `Item` is a non-empty\n   * [[Record]]; otherwise returns [[Absent]].\n   */\n  abstract head(): Item;\n\n  /**\n   * Returns a view of all but the first member of this `Item`, if this `Item`\n   * is a non-empty [[Record]]; otherwise returns an empty `Record` if this\n   * `Item` is not a `Record`, or if this `Item` is itself an empty `Record`.\n   */\n  abstract tail(): Record;\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Item.tail tail]] of this\n   * `Item`.  Used to recursively deconstruct a structure, terminating with its\n   * last `Value`, rather than a unary `Record` containing its last value, if\n   * the structure ends with a `Value` member.\n   */\n  abstract body(): Value;\n\n  /**\n   * Returns the number of members contained in this `Item`, if this `Item` is\n   * a [[Record]]; otherwise returns `0` if this `Item` is not a `Record`.\n   */\n  abstract readonly length: number;\n\n  /**\n   * Returns `true` if this `Item` is a [[Record]] that has a [[Field]] member\n   * with a key that is equal to the given `key`; otherwise returns `false` if\n   * this `Item` is not a `Record`, or if this `Item` is a `Record`, but has no\n   * `Field` member with a key equal to the given `key`.\n   */\n  abstract has(key: AnyValue): boolean;\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Field` member\n   * with a key equal to the given `key`.\n   */\n  abstract get(key: AnyValue): Value;\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Attr` member\n   * with a key equal to the given `key`.\n   */\n  abstract getAttr(key: AnyText): Value;\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Slot` member\n   * with a key equal to the given `key`.\n   */\n  abstract getSlot(key: AnyValue): Value;\n\n  /**\n   * Returns the last [[Field]] member of this `Item` whose key is equal to the\n   * given `key`; returns `undefined` if this `Item` is not a [[Record]], or if\n   * this `Item` is a `Record`, but has no `Field` member with a `key` equal to\n   * the given `key`.\n   */\n  abstract getField(key: AnyValue): Field | undefined;\n\n  /**\n   * Returns the member of this `Item` at the given `index`, if this `Item` is\n   * a [[Record]], and the `index` is greater than or equal to zero, and less\n   * than the [[Record.length length]] of the `Record`; otherwise returns\n   * [[Absent]] if this `Item` is not a `Record`, or if this `Item` is a\n   * `Record`, but the `index` is out of bounds.\n   */\n  abstract getItem(index: AnyNum): Item;\n\n  updated(key: AnyValue, value: AnyValue): Record {\n    const record = Record.create(2);\n    record.push(this);\n    record.set(key, value);\n    return record;\n  }\n\n  updatedAttr(key: AnyText, value: AnyValue): Record {\n    const record = Record.create(2);\n    record.push(this);\n    record.setAttr(key, value);\n    return record;\n  }\n\n  updatedSlot(key: AnyValue, value: AnyValue): Record {\n    const record = Record.create(2);\n    record.push(this);\n    record.setSlot(key, value);\n    return record;\n  }\n\n  appended(...items: AnyItem[]): Record {\n    const record = Record.create(1 + arguments.length);\n    record.push(this);\n    record.push(...items);\n    return record;\n  }\n\n  prepended(...items: AnyItem[]): Record {\n    const record = Record.create(arguments.length + 1);\n    record.push(...items);\n    record.push(this);\n    return record;\n  }\n\n  abstract deleted(key: AnyValue): Item;\n\n  concat(...items: AnyItem[]): Record {\n    const record = Record.create();\n    record.push(this);\n    for (let i = 0, n = items.length; i < n; i += 1) {\n      Item.fromAny(items[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  abstract conditional(thenTerm: Item, elseTerm: Item): Item;\n\n  abstract or(that: Item): Item;\n\n  abstract and(that: Item): Item;\n\n  abstract bitwiseOr(that: AnyItem): Item;\n\n  abstract bitwiseXor(that: AnyItem): Item;\n\n  abstract bitwiseAnd(that: AnyItem): Item;\n\n  lt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) < 0 ? Bool.from(true) : Item.absent();\n  }\n\n  le(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) <= 0 ? Bool.from(true) : Item.absent();\n  }\n\n  eq(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.equals(that) ? Bool.from(true) : Item.absent();\n  }\n\n  ne(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return !this.equals(that) ? Bool.from(true) : Item.absent();\n  }\n\n  ge(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) >= 0 ? Bool.from(true) : Item.absent();\n  }\n\n  gt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) > 0 ? Bool.from(true) : Item.absent();\n  }\n\n  abstract plus(that: AnyItem): Item;\n\n  abstract minus(that: AnyItem): Item;\n\n  abstract times(that: AnyItem): Item;\n\n  abstract divide(that: AnyItem): Item;\n\n  abstract modulo(that: AnyItem): Item;\n\n  abstract not(): Item;\n\n  abstract bitwiseNot(): Item;\n\n  abstract negative(): Item;\n\n  abstract positive(): Item;\n\n  abstract inverse(): Item;\n\n  invoke(args: Value): Item {\n    return Item.absent();\n  }\n\n  abstract lambda(template: Value): Value;\n\n  filter(predicate?: AnyItem): Selector {\n    const selector = Selector.literal(this);\n    if (arguments.length === 0) {\n      return selector.filter();\n    } else {\n      return selector.filter(predicate);\n    }\n  }\n\n  max(that: Item): Item {\n    return this.compareTo(that) >= 0 ? this : that;\n  }\n\n  min(that: Item): Item {\n    return this.compareTo(that) <= 0 ? this : that;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    return this;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    return this;\n  }\n\n  /**\n   * Converts this `Item` into a `string` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `string` value.\n   */\n  abstract stringValue(): string | undefined;\n\n  /**\n   * Converts this `Item` into a `string` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `string` value.\n   */\n  abstract stringValue<T>(orElse: T): string | T;\n\n  /**\n   * Converts this `Item` into a `number` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `number` value.\n   */\n  abstract numberValue(): number | undefined;\n\n  /**\n   * Converts this `Item` into a `number` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `number` value.\n   */\n  abstract numberValue<T>(orElse: T): number | T;\n\n  /**\n   * Converts this `Item` into a `boolean` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `boolean` value.\n   */\n  abstract booleanValue(): boolean | undefined;\n\n  /**\n   * Converts this `Item` into a `boolean` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `boolean` value.\n   */\n  abstract booleanValue<T>(orElse: T): boolean | T;\n\n  cast<T>(form: Form<T, unknown>): T | undefined;\n\n  cast<T, E = T>(form: Form<T, unknown>, orElse: E): T | E;\n\n  cast<T, E = T>(form: Form<T, unknown>, orElse?: E): T | E | undefined {\n    let object: T | E | undefined = form.cast(this);\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  coerce<T>(form: Form<T, unknown>): T;\n\n  coerce<T, E = T>(form: Form<T, unknown>, orElse: E): T | E;\n\n  coerce<T, E = T>(form: Form<T, unknown>, orElse?: E): T | E {\n    let object: T | E | undefined = form.cast(this);\n    if (object === void 0) {\n      object = form.unit;\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object!;\n  }\n\n  abstract toAny(): AnyItem;\n\n  abstract isAliased(): boolean;\n\n  abstract isMutable(): boolean;\n\n  abstract alias(): void;\n\n  abstract branch(): Item;\n\n  abstract clone(): Item;\n\n  abstract commit(): this;\n\n  /** @hidden */\n  get precedence(): number {\n    return 11;\n  }\n\n  forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, item: Item, index: number) => T | undefined,\n                thisArg?: S): T | undefined {\n    return callback.call(thisArg, this, 0);\n  }\n\n  iterator(): Cursor<Item> {\n    return Cursor.unary(this);\n  }\n\n  interpolateTo(that: Item): Interpolator<Item>;\n  interpolateTo(that: unknown): Interpolator<Item> | null;\n  interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof Item) {\n      return ItemInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Returns the heterogeneous sort order of this `Item`.  Used to impose a\n   * total order on the set of all items.  When comparing two items of\n   * different types, the items order according to their `typeOrder`.\n   */\n  abstract readonly typeOrder: number;\n\n  abstract compareTo(that: unknown): number;\n\n  abstract equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  abstract keyEquals(key: unknown): boolean;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static empty(): Item {\n    return Record.empty();\n  }\n\n  static extant(): Item {\n    return Extant.extant();\n  }\n\n  static absent(): Item {\n    return Absent.absent();\n  }\n\n  static fromAny(item: AnyItem): Item {\n    if (item instanceof Item) {\n      return item;\n    } else {\n      return Value.fromAny(item);\n    }\n  }\n\n  @Lazy\n  static globalScope(): Item {\n    return Record.create(1)\n        .slot(\"math\", MathModule.scope)\n        .commit();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport type {Item} from \"./Item\";\n\n/** @hidden */\nexport const ItemInterpolator = function <Y extends Item>(y0: Y, y1: Y): Interpolator<Y> {\n  const interpolator = function (u: number): Y {\n    return u < 1 ? interpolator[0] : interpolator[1];\n  } as Interpolator<Y>;\n  Object.setPrototypeOf(interpolator, ItemInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: y0.commit(),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: y1.commit(),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  <Y extends Item>(y0: Y, y1: Y): Interpolator<Y>;\n\n  /** @hidden */\n  prototype: Interpolator<any>;\n};\n\nItemInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Interpolator} from \"@swim/mapping\";\nimport {AnyItem, Item} from \"./Item\";\nimport {FieldInterpolator} from \"./\"; // forward import\nimport {Attr} from \"./\"; // forward import\nimport {Slot} from \"./\" // forward import\nimport {AnyValue, Value} from \"./\"; // forward import\nimport {Record} from \"./\"; // forward import\nimport {AnyText, Text} from \"./\"; // forward import\nimport type {AnyNum} from \"./Num\";\n\nexport type AnyField = Field\n                     | {readonly $key: AnyValue, readonly $value: AnyValue}\n                     | {[key: string]: AnyValue};\n\nexport abstract class Field extends Item {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `true` because a `Field` can never be [[Absent]].\n   */\n  override isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns `true` because a `Field` can be neither [[Extant]] nor\n   * [[Absent]].\n   */\n  override isDistinct(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns `true` because a `Field` cannot be one of:\n   * an empty `Record`, `False`, `Extant`, or `Absent`.\n   */\n  override isDefinite(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns the key component of this `Field`.\n   */\n  abstract override readonly key: Value;\n\n  /**\n   * Returns the value component of this `Field`.\n   */\n  abstract readonly value: Value;\n\n  /**\n   * Sets the value of this `Field` to the new `value`, returning the old value.\n   *\n   * @throws `Error` if this `Field` is immutable.\n   */\n  abstract setValue(value: AnyValue): Value;\n\n  /**\n   * Returns a copy of this `Field` with the updated `value`.\n   */\n  abstract updatedValue(value: AnyValue): Field;\n\n  /**\n   * Returns the value component of this `Field`.\n   */\n  override toValue(): Value {\n    return this.value;\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a first member `Attr` whose key string could be returned.\n   */\n  override get tag(): string | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns the value component of this `Field`.\n   */\n  override get target(): Value {\n    return this.value;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be flattened into a\n   * `Value`.\n   */\n  override flattened(): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns a `Record` containing just this `Field`.\n   */\n  override unflattened(): Record {\n    return Record.of(this);\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a head `Attr` whose value could be returned if its key were\n   * equal to the `tag`.\n   */\n  override header(tag: string): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a head `Attr` whose value could be returned as a `Record` if\n   * its key were equal to the `tag`.\n   */\n  override headers(tag: string): Record | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a first member.\n   */\n  override head(): Item {\n    return Item.absent();\n  }\n\n  /**\n   * Always returns an empty `Record` because a `Field` can't itself be a\n   * `Record`, so it can't have any non-first members.\n   */\n  override tail(): Record {\n    return Record.empty();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have any non-first members to flatten, and because a `Field` isn't\n   * a distinct `Value`, so it can't return `Extant`.\n   */\n  override body(): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns `0` because a `Field` can't be a `Record`, so it can't\n   * contain any members.\n   */\n  override get length(): number {\n    return 0;\n  }\n\n  /**\n   * Always returns `false` because a `Field` can't be a `Record`, so it can't\n   * have a `Field` member whose key is equal to the given `key`.\n   */\n  override has(key: AnyValue): boolean {\n    return false;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a `Field` member whose key is equal to the given `key`.\n   */\n  override get(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have an `Attr` member whose key is equal to the given `key`.\n   */\n  override getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a `Slot` member whose key is equal to the given `key`.\n   */\n  override getSlot(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a `Field` member whose key is equal to the given `key`.\n   */\n  override getField(key: AnyValue): Field | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a member at the given `index`.\n   */\n  override getItem(index: AnyNum): Item {\n    return Item.absent();\n  }\n\n  override deleted(key: AnyValue): Field {\n    return this;\n  }\n\n  override conditional(thenTerm: Field, elseTerm: Field): Field;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    return thenTerm;\n  }\n\n  override or(that: Field): Field;\n  override or(that: AnyItem): Item;\n  override or(that: AnyItem): Item {\n    return this;\n  }\n\n  override and(that: Field): Field;\n  override and(that: AnyItem): Item;\n  override and(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return that;\n  }\n\n  override lambda(template: Value): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Converts the value of this `Field` into a `string` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `string` value.\n   */\n  override stringValue(): string | undefined;\n  /**\n   * Converts the value of this `Field` into a `string` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `string` value.\n   */\n  override stringValue<T>(orElse: T): string | T;\n  override stringValue<T>(orElse?: T): string | T | undefined {\n    return this.value.stringValue(orElse);\n  }\n\n  /**\n   * Converts the value of this `Field` into a `number` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `number` value.\n   */\n  override numberValue(): number | undefined;\n  /**\n   * Converts the value of this `Field` into a `number` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `number` value.\n   */\n  override numberValue<T>(orElse: T): number | T;\n  override numberValue<T>(orElse?: T): number | T | undefined {\n    return this.value.numberValue(orElse);\n  }\n\n  /**\n   * Converts the value of this `Field` into a `boolean` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `boolean` value.\n   */\n  override booleanValue(): boolean | undefined;\n  /**\n   * Converts the value of this `Field` into a `boolean` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `boolean` value.\n   */\n  override booleanValue<T>(orElse: T): boolean | T;\n  override booleanValue<T>(orElse?: T): boolean | T | undefined {\n    return this.value.booleanValue(orElse);\n  }\n\n  abstract override toAny(): AnyField;\n\n  abstract override branch(): Field;\n\n  abstract override clone(): Field;\n\n  abstract override commit(): this;\n\n  override interpolateTo(that: Field): Interpolator<Field>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof Field) {\n      return FieldInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  /** @hidden */\n  static readonly ImmutableFlag: number = 1 << 0;\n\n  static of(key: AnyValue, value?: AnyValue): Field {\n    let name: string | undefined;\n    if (typeof key === \"string\") {\n      name = key;\n    } else if (key instanceof Text) {\n      name = key.value;\n    }\n    if (name !== void 0 && name.charCodeAt(0) === 64/*'@'*/) {\n      name = name.slice(1);\n      if (arguments.length === 1) {\n        return Attr.of(name);\n      } else {\n        return Attr.of(name, value);\n      }\n    } else {\n      if (arguments.length === 1) {\n        return Slot.of(key);\n      } else {\n        return Slot.of(key, value);\n      }\n    }\n  }\n\n  static override fromAny(field: AnyField): Field {\n    if (field instanceof Field) {\n      return field;\n    } else if (typeof field === \"object\" && field !== null) {\n      if ((field as any).$key !== void 0) {\n        return Field.of((field as any).$key, (field as any).$value);\n      } else {\n        for (const key in field) {\n          return Field.of(key, (field as any)[key]);\n        }\n      }\n    }\n    throw new TypeError(\"\" + field);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyField, Field} from \"./Field\";\nimport {SlotInterpolator} from \"./\"; // forward import\nimport {AnyValue, Value} from \"./\"; // forward import\nimport {Text} from \"./\"; // forward import\nimport {Extant} from \"./\" // forward import\nimport {Expression} from \"./\"; // forward import\nimport {BitwiseOrOperator} from \"./\"; // forward import\nimport {BitwiseXorOperator} from \"./\"; // forward import\nimport {BitwiseAndOperator} from \"./\"; // forward import\nimport {PlusOperator} from \"./\"; // forward import\nimport {MinusOperator} from \"./\"; // forward import\nimport {TimesOperator} from \"./\"; // forward import\nimport {DivideOperator} from \"./\"; // forward import\nimport {ModuloOperator} from \"./\"; // forward import\nimport {AnyInterpreter, Interpreter} from \"./\"; // forward import\n\nexport class Slot extends Field {\n  constructor(key: Value, value: Value, flags?: number) {\n    super();\n    Object.defineProperty(this, \"key\", {\n      value: key.commit(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: flags !== void 0 ? flags : 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly key!: Value;\n\n  override readonly value!: Value;\n\n  /** @hidden */\n  readonly flags!: number;\n\n  override isConstant(): boolean {\n    return this.key.isConstant() && this.value.isConstant();\n  }\n\n  override setValue(newValue: Value): Value {\n    if ((this.flags & Field.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const oldValue = this.value;\n    Object.defineProperty(this, \"value\", {\n      value: newValue,\n      enumerable: true,\n      configurable: true,\n    });\n    return oldValue;\n  }\n\n  override updatedValue(value: Value): Slot {\n    return new Slot(this.key, value);\n  }\n\n  override bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseOrOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this.key.equals(that.key)) {\n      newValue = this.value.bitwiseOr(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.bitwiseOr(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseXorOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this.key.equals(that.key)) {\n      newValue = this.value.bitwiseXor(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.bitwiseXor(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseAndOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this.key.equals(that.key)) {\n      newValue = this.value.bitwiseAnd(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.bitwiseAnd(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new PlusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this.key.equals(that.key)) {\n      newValue = this.value.plus(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.plus(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new MinusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this.key.equals(that.key)) {\n      newValue = this.value.minus(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.minus(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new TimesOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this.key.equals(that.key)) {\n      newValue = this.value.times(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.times(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new DivideOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this.key.equals(that.key)) {\n      newValue = this.value.divide(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.divide(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new ModuloOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this.key.equals(that.key)) {\n      newValue = this.value.modulo(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.modulo(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override not(): Item {\n    const newValue = this.value.not();\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override bitwiseNot(): Item {\n    const newValue = this.value.bitwiseNot();\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override negative(): Item {\n    const newValue = this.value.negative();\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override positive(): Item {\n    const newValue = this.value.positive();\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override inverse(): Item {\n    const newValue = this.value.inverse();\n    if (newValue.isDefined()) {\n      return new Slot(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this.key.evaluate(interpreter).toValue();\n    const value = this.value.evaluate(interpreter).toValue();\n    if (key === this.key && value === this.value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      return new Slot(key, value);\n    }\n    return Item.absent();\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this.key.substitute(interpreter).toValue();\n    const value = this.value.substitute(interpreter).toValue();\n    if (key === this.key && value === this.value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      return new Slot(key, value);\n    }\n    return Item.absent();\n  }\n\n  override toAny(): AnyField {\n    const field = {} as {[key: string]: AnyValue};\n    if (this.key instanceof Text) {\n      field[this.key.value] = this.value.toAny();\n    } else {\n      field.$key = this.key.toAny();\n      field.$value = this.value.toAny();\n    }\n    return field;\n  }\n\n  override isAliased(): boolean {\n    return false;\n  }\n\n  override isMutable(): boolean {\n    return (this.flags & Field.ImmutableFlag) === 0;\n  }\n\n  override alias(): void {\n    if ((this.flags & Field.ImmutableFlag) === 0) {\n      Object.defineProperty(this, \"flags\", {\n        value: this.flags | Field.ImmutableFlag,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"value\", {\n        value: this.value,\n        enumerable: true,\n      });\n    }\n  }\n\n  override branch(): Slot {\n    if ((this.flags & Field.ImmutableFlag) !== 0) {\n      return new Slot(this.key, this.value, this.flags & ~Field.ImmutableFlag);\n    } else {\n      return this;\n    }\n  }\n\n  override clone(): Slot {\n    return new Slot(this.key.clone(), this.value.clone());\n  }\n\n  override commit(): this {\n    if ((this.flags & Field.ImmutableFlag) === 0) {\n      Object.defineProperty(this, \"flags\", {\n        value: this.flags | Field.ImmutableFlag,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"value\", {\n        value: this.value,\n        enumerable: true,\n      });\n    }\n    this.value.commit();\n    return this;\n  }\n\n  override interpolateTo(that: Slot): Interpolator<Slot>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof Slot) {\n      return SlotInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override get typeOrder(): number {\n    return 2;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Slot) {\n      let order = this.key.compareTo(that.key);\n      if (order === 0) {\n        order = this.value.compareTo(that.value);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Slot) {\n      return this.key.equals(that.key) && this.value.equivalentTo(that.value, epsilon);\n    }\n    return false;\n  }\n\n  override keyEquals(key: unknown): boolean {\n    if (typeof key === \"string\" && this.key instanceof Text) {\n      return this.key.value === key;\n    } else if (key instanceof Field) {\n      return this.key.equals(key.key);\n    } else {\n      return this.key.equals(key);\n    }\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Slot) {\n      return this.key.equals(that.key) && this.value.equals(that.value);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Slot),\n        this.key.hashCode()), this.value.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Slot\").write(46/*'.'*/).write(\"of\").write(40/*'('*/).display(this.key);\n    if (!(this.value instanceof Extant)) {\n      output = output.write(44/*','*/).write(32/*' '*/).display(this.value);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    this.debug(output);\n  }\n\n  static override of(key: AnyValue, value?: AnyValue): Slot {\n    key = Value.fromAny(key);\n    if (arguments.length === 1) {\n      value = Value.extant();\n    } else {\n      value = Value.fromAny(value);\n    }\n    return new Slot(key, value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport type {Field} from \"./Field\";\nimport {Slot} from \"./Slot\";\nimport type {Value} from \"./Value\";\n\n/** @hidden */\nexport interface FieldInterpolator extends Interpolator<Field> {\n  /** @hidden */\n  readonly keyInterpolator: Interpolator<Value>;\n  /** @hidden */\n  readonly valueInterpolator: Interpolator<Value>;\n\n  readonly 0: Field;\n\n  readonly 1: Field;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const FieldInterpolator = function (y0: Field, y1: Field): FieldInterpolator {\n  const interpolator = function (u: number): Field {\n    const key = interpolator.keyInterpolator(u);\n    const value = interpolator.valueInterpolator(u);\n    return Slot.of(key, value);\n  } as FieldInterpolator;\n  Object.setPrototypeOf(interpolator, FieldInterpolator.prototype);\n  Object.defineProperty(interpolator, \"keyInterpolator\", {\n    value: y0.key.interpolateTo(y1.key),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"valueInterpolator\", {\n    value: y0.value.interpolateTo(y1.value),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: Field, y1: Field): FieldInterpolator;\n\n  /** @hidden */\n  prototype: FieldInterpolator;\n};\n\nFieldInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(FieldInterpolator.prototype, 0, {\n  get(this: FieldInterpolator): Field {\n    return Slot.of(this.keyInterpolator[0], this.valueInterpolator[0]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(FieldInterpolator.prototype, 1, {\n  get(this: FieldInterpolator): Field {\n    return Slot.of(this.keyInterpolator[1], this.valueInterpolator[1]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nFieldInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof FieldInterpolator) {\n    return this.keyInterpolator.equals(that.keyInterpolator)\n        && this.valueInterpolator.equals(that.valueInterpolator);\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyField, Field} from \"./Field\";\nimport {AttrInterpolator} from \"./\"; // forward import\nimport {Slot} from \"./\"; // forward import\nimport {AnyValue, Value} from \"./\"; // forward import\nimport {AnyText, Text} from \"./\"; // forward import\nimport {Extant} from \"./\" // forward import\nimport {Expression} from \"./\"; // forward import\nimport {BitwiseOrOperator} from \"./\"; // forward import\nimport {BitwiseXorOperator} from \"./\"; // forward import\nimport {BitwiseAndOperator} from \"./\"; // forward import\nimport {PlusOperator} from \"./\"; // forward import\nimport {MinusOperator} from \"./\"; // forward import\nimport {TimesOperator} from \"./\"; // forward import\nimport {DivideOperator} from \"./\"; // forward import\nimport {ModuloOperator} from \"./\"; // forward import\nimport {AnyInterpreter, Interpreter} from \"./\"; // forward import\n\nexport class Attr extends Field {\n  constructor(key: Text, value: Value, flags?: number) {\n    super();\n    Object.defineProperty(this, \"key\", {\n      value: key,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: flags !== void 0 ? flags : 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isConstant(): boolean {\n    return this.key.isConstant() && this.value.isConstant();\n  }\n\n  get name(): string {\n    return this.key.value;\n  }\n\n  override readonly key!: Text;\n\n  override readonly value!: Value;\n\n  /** @hidden */\n  readonly flags!: number;\n\n  override setValue(newValue: Value): Value {\n    if ((this.flags & Field.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const oldValue = this.value;\n    Object.defineProperty(this, \"value\", {\n      value: newValue,\n      enumerable: true,\n      configurable: true,\n    });\n    return oldValue;\n  }\n\n  override updatedValue(value: Value): Attr {\n    return new Attr(this.key, value);\n  }\n\n  override bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseOrOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this.key.equals(that.key)) {\n      newValue = this.value.bitwiseOr(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.bitwiseOr(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseXorOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this.key.equals(that.key)) {\n      newValue = this.value.bitwiseXor(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.bitwiseXor(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseAndOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this.key.equals(that.key)) {\n      newValue = this.value.bitwiseAnd(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.bitwiseAnd(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new PlusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this.key.equals(that.key)) {\n      newValue = this.value.plus(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.plus(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new MinusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this.key.equals(that.key)) {\n      newValue = this.value.minus(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.minus(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new TimesOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this.key.equals(that.key)) {\n      newValue = this.value.times(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.times(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new DivideOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this.key.equals(that.key)) {\n      newValue = this.value.divide(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.divide(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new ModuloOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this.key.equals(that.key)) {\n      newValue = this.value.modulo(that.value);\n    } else if (that instanceof Value) {\n      newValue = this.value.modulo(that);\n    } else {\n      newValue = Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override not(): Item {\n    const newValue = this.value.not();\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override bitwiseNot(): Item {\n    const newValue = this.value.bitwiseNot();\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override negative(): Item {\n    const newValue = this.value.negative();\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override positive(): Item {\n    const newValue = this.value.positive();\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override inverse(): Item {\n    const newValue = this.value.inverse();\n    if (newValue.isDefined()) {\n      return new Attr(this.key, newValue);\n    }\n    return Item.absent();\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this.key.evaluate(interpreter).toValue();\n    const value = this.value.evaluate(interpreter).toValue();\n    if (key === this.key && value === this.value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      if (key instanceof Text) {\n        return new Attr(key, value);\n      } else {\n        return new Slot(key, value);\n      }\n    }\n    return Item.absent();\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this.key.substitute(interpreter).toValue();\n    const value = this.value.substitute(interpreter).toValue();\n    if (key === this.key && value === this.value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      if (key instanceof Text) {\n        return new Attr(key, value);\n      } else {\n        return new Slot(key, value);\n      }\n    }\n    return Item.absent();\n  }\n\n  override toAny(): AnyField {\n    const field = {} as {[key: string]: AnyValue};\n    field[\"@\" + this.key.value] = this.value.toAny();\n    return field;\n  }\n\n  override isAliased(): boolean {\n    return false;\n  }\n\n  override isMutable(): boolean {\n    return (this.flags & Field.ImmutableFlag) === 0;\n  }\n\n  override alias(): void {\n    if ((this.flags & Field.ImmutableFlag) === 0) {\n      Object.defineProperty(this, \"flags\", {\n        value: this.flags | Field.ImmutableFlag,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"value\", {\n        value: this.value,\n        enumerable: true,\n      });\n    }\n  }\n\n  override branch(): Attr {\n    if ((this.flags & Field.ImmutableFlag) !== 0) {\n      return new Attr(this.key, this.value, this.flags & ~Field.ImmutableFlag);\n    } else {\n      return this;\n    }\n  }\n\n  override clone(): Attr {\n    return new Attr(this.key.clone(), this.value.clone());\n  }\n\n  override commit(): this {\n    if ((this.flags & Field.ImmutableFlag) === 0) {\n      Object.defineProperty(this, \"flags\", {\n        value: this.flags | Field.ImmutableFlag,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"value\", {\n        value: this.value,\n        enumerable: true,\n      });\n    }\n    this.value.commit();\n    return this;\n  }\n\n  override interpolateTo(that: Attr): Interpolator<Attr>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof Attr) {\n      return AttrInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override get typeOrder(): number {\n    return 1;\n  }\n\n  override compareTo(that: Item): number {\n    if (that instanceof Attr) {\n      let order = this.key.compareTo(that.key);\n      if (order === 0) {\n        order = this.value.compareTo(that.value);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Attr) {\n      return this.key.equals(that.key) && this.value.equivalentTo(that.value, epsilon);\n    }\n    return false;\n  }\n\n  override keyEquals(key: unknown): boolean {\n    if (typeof key === \"string\") {\n      return this.key.value === key;\n    } else if (key instanceof Field) {\n      return this.key.equals(key.key);\n    } else {\n      return this.key.equals(key);\n    }\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Attr) {\n      return this.key.equals(that.key) && this.value.equals(that.value);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Attr),\n        this.key.hashCode()), this.value.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Attr\").write(46/*'.'*/).write(\"of\").write(40/*'('*/).display(this.key);\n    if (!(this.value instanceof Extant)) {\n      output = output.write(44/*','*/).write(32/*' '*/).display(this.value);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    this.debug(output);\n  }\n\n  static override of(key: AnyText, value?: AnyValue): Attr {\n    key = Text.fromAny(key);\n    if (arguments.length === 1) {\n      value = Value.extant();\n    } else {\n      value = Value.fromAny(value);\n    }\n    return new Attr(key, value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {Attr} from \"./Attr\";\nimport type {Value} from \"./Value\";\nimport type {Text} from \"./Text\";\n\n/** @hidden */\nexport interface AttrInterpolator extends Interpolator<Attr> {\n  /** @hidden */\n  readonly keyInterpolator: Interpolator<Text>;\n  /** @hidden */\n  readonly valueInterpolator: Interpolator<Value>;\n\n  readonly 0: Attr;\n\n  readonly 1: Attr;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const AttrInterpolator = function (y0: Attr, y1: Attr): AttrInterpolator {\n  const interpolator = function (u: number): Attr {\n    const key = interpolator.keyInterpolator(u);\n    const value = interpolator.valueInterpolator(u);\n    return Attr.of(key, value);\n  } as AttrInterpolator;\n  Object.setPrototypeOf(interpolator, AttrInterpolator.prototype);\n  Object.defineProperty(interpolator, \"keyInterpolator\", {\n    value: y0.key.interpolateTo(y1.key),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"valueInterpolator\", {\n    value: y0.value.interpolateTo(y1.value),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: Attr, y1: Attr): AttrInterpolator;\n\n  /** @hidden */\n  prototype: AttrInterpolator;\n};\n\nAttrInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(AttrInterpolator.prototype, 0, {\n  get(this: AttrInterpolator): Attr {\n    return Attr.of(this.keyInterpolator[0], this.valueInterpolator[0]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(AttrInterpolator.prototype, 1, {\n  get(this: AttrInterpolator): Attr {\n    return Attr.of(this.keyInterpolator[1], this.valueInterpolator[1]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nAttrInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof AttrInterpolator) {\n    return this.keyInterpolator.equals(that.keyInterpolator)\n        && this.valueInterpolator.equals(that.valueInterpolator);\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {Slot} from \"./Slot\";\nimport type {Value} from \"./Value\";\n\n/** @hidden */\nexport interface SlotInterpolator extends Interpolator<Slot> {\n  /** @hidden */\n  readonly keyInterpolator: Interpolator<Value>;\n  /** @hidden */\n  readonly valueInterpolator: Interpolator<Value>;\n\n  readonly 0: Slot;\n\n  readonly 1: Slot;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const SlotInterpolator = function (y0: Slot, y1: Slot): SlotInterpolator {\n  const interpolator = function (u: number): Slot {\n    const key = interpolator.keyInterpolator(u);\n    const value = interpolator.valueInterpolator(u);\n    return Slot.of(key, value);\n  } as SlotInterpolator;\n  Object.setPrototypeOf(interpolator, SlotInterpolator.prototype);\n  Object.defineProperty(interpolator, \"keyInterpolator\", {\n    value: y0.key.interpolateTo(y1.key),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"valueInterpolator\", {\n    value: y0.value.interpolateTo(y1.value),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: Slot, y1: Slot): SlotInterpolator;\n\n  /** @hidden */\n  prototype: SlotInterpolator;\n};\n\nSlotInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(SlotInterpolator.prototype, 0, {\n  get(this: SlotInterpolator): Slot {\n    return Slot.of(this.keyInterpolator[0], this.valueInterpolator[0]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(SlotInterpolator.prototype, 1, {\n  get(this: SlotInterpolator): Slot {\n    return Slot.of(this.keyInterpolator[1], this.valueInterpolator[1]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nSlotInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof SlotInterpolator) {\n    return this.keyInterpolator.equals(that.keyInterpolator)\n        && this.valueInterpolator.equals(that.valueInterpolator);\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport type {Builder} from \"@swim/util\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport type {Field} from \"./Field\";\nimport {Attr} from \"./Attr\";\nimport {Slot} from \"./Slot\";\nimport {ValueBuilder} from \"./\"; // forward import\nimport {Record} from \"./\"; // forward import\nimport {Data} from \"./\"; // forward import\nimport {AnyText, Text} from \"./\"; // forward import\nimport {AnyNum, Num} from \"./\"; // forward import\nimport {Bool} from \"./\"; // forward import\nimport {Extant} from \"./\"; // forward import\nimport {Absent} from \"./\"; // forward import\nimport {Expression} from \"./\"; // forward import\nimport {BitwiseOrOperator} from \"./\"; // forward import\nimport {BitwiseXorOperator} from \"./\"; // forward import\nimport {BitwiseAndOperator} from \"./\"; // forward import\nimport {LtOperator} from \"./\"; // forward import\nimport {LeOperator} from \"./\"; // forward import\nimport {EqOperator} from \"./\"; // forward import\nimport {NeOperator} from \"./\"; // forward import\nimport {GeOperator} from \"./\"; // forward import\nimport {GtOperator} from \"./\"; // forward import\nimport {PlusOperator} from \"./\"; // forward import\nimport {MinusOperator} from \"./\"; // forward import\nimport {TimesOperator} from \"./\"; // forward import\nimport {DivideOperator} from \"./\"; // forward import\nimport {ModuloOperator} from \"./\"; // forward import\nimport {LambdaFunc} from \"./\"; // forward import\n\nexport type AnyValue = Value\n                     | {readonly [key: string]: AnyValue}\n                     | ReadonlyArray<AnyItem>\n                     | Uint8Array\n                     | string\n                     | number\n                     | boolean\n                     | null\n                     | undefined;\n\nexport abstract class Value extends Item {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Returns `true` if this `Value` is not [[Absent]].\n   */\n  override isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` if this `Value` is neither [[Extant]] nor [[Absent]].\n   */\n  override isDistinct(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` if this `Value` is not one of: an empty `Record`, `False`,\n   * `Extant`, or `Absent`.\n   */\n  override isDefinite(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Value` can't be a `Field`, so it\n   * can't have a key component.\n   */\n  override get key(): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns `this` because every `Value` is its own value component.\n   */\n  override toValue(): Value {\n    return this;\n  }\n\n  /**\n   * Returns the `key` string of the first member of this `Value`, if this\n   * `Value` is a [[Record]], and its first member is an [[Attr]]; otherwise\n   * returns `undefined` if this `Value` is not a `Record`, or if this `Value`\n   * is a `Record` whose first member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  override get tag(): string | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the [[Value.flattened flattened]] members of this `Value` after\n   * all attributes have been removed, if this `Value` is a [[Record]];\n   * otherwise returns `this` if this `Value` is not a `Record`.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  override get target(): Value {\n    return this;\n  }\n\n  /**\n   * Returns the sole member of this `Value`, if this `Value` is a [[Record]]\n   * with exactly one member, and its member is a `Value`; returns [[Extant]]\n   * if this `Value` is an empty `Record`; otherwise returns `this` if this\n   * `Value` is a `Record` with more than one member, or if this `Value` is a\n   * not a `Record`.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  override flattened(): Value {\n    return this;\n  }\n\n  /**\n   * Returns `this` if this `Value` is a [[Record]]; returns a `Record`\n   * containing just this `Value`, if this `Value` is [[Value.isDistinct\n   * distinct]]; otherwise returns an empty `Record` if this `Value` is\n   * [[Extant]] or [[Absent]].  Facilitates writing code that treats a bare\n   * `Value` equivalently to a unary `Record`.\n   */\n  override unflattened(): Record {\n    return Record.of(this);\n  }\n\n  /**\n   * Returns the value of the first member of this `Value`, if this `Value` is\n   * a `Record`, and its first member is an [[Attr]] whose `key` string is\n   * equal to `tag`; otherwise returns [[Absent]] if this `Value` is not a\n   * `Record`, or if this `Value` is a `Record` whose first member is not an\n   * `Attr`, or if this `Value` is a `Record` whose first member is an `Attr`\n   * whose `key` does not equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  override header(tag: string): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the [[Value.unflattened unflattened]] [[Value.header header]] of\n   * this `Value`, if this `Value` is a [[Record]], and its first member is an\n   * [[Attr]] whose `key` string is equal to `tag`; otherwise returns\n   * `undefined`.\n   *\n   * The `headers` of the `tag` attribute of a structure are like the\n   * attributes of an XML element tag; through unlike an XML element, `tag`\n   * attribute headers are not limited to string keys and values.\n   */\n  override headers(tag: string): Record | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the first member of this `Value`, if this `Value` is a non-empty\n   * [[Record]]; otherwise returns [[Absent]].\n   */\n  override head(): Item {\n    return Item.absent();\n  }\n\n  /**\n   * Returns a view of all but the first member of this `Value`, if this\n   * `Value` is a non-empty [[Record]]; otherwise returns an empty `Record`\n   * if this `Value` is not a `Record`, of if this `Value` is itself an\n   * empty `Record`.\n   */\n  override tail(): Record {\n    return Record.empty();\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Value.tail tail]] of this\n   * `Value`.  Used to recursively deconstruct a structure, terminating with\n   * its last `Value`, rather than a unary `Record` containing its last value,\n   * if the structure ends with a `Value` member.\n   */\n  override body(): Value {\n    return Value.extant();\n  }\n\n  /**\n   * Returns the number of members contained in this `Value`, if this `Value`\n   * is a [[Record]]; otherwise returns `0` if this `Value` is not a `Record`.\n   */\n  override get length(): number {\n    return 0;\n  }\n\n  /**\n   * Returns `true` if this `Value` is a [[Record]] that has a [[Field]] member\n   * with a key that is equal to the given `key`; otherwise returns `false` if\n   * this `Value` is not a `Record`, or if this `Value` is a `Record`, but has\n   * no `Field` member with a key equal to the given `key`.\n   */\n  override has(key: AnyValue): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Field` member\n   * with a key equal to the given `key`.\n   */\n  override get(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Attr` member\n   * with a key equal to the given `key`.\n   */\n  override getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Slot` member\n   * with a key equal to the given `key`.\n   */\n  override getSlot(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the last [[Field]] member of this `Value` whose key is equal to\n   * the given `key`; returns `undefined` if this `Value` is not a [[Record]],\n   * or if this `Value` is a `Record`, but has no `Field` member with a `key`\n   * equal to the given `key`.\n   */\n  override getField(key: AnyValue): Field | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the member of this `Value` at the given `index`, if this `Value`\n   * is a [[Record]], and the `index` is greater than or equal to zero, and\n   * less than the [[Record.length length]] of the `Record`; otherwise returns\n   * [[Absent]] if this `Value` is not a `Record`, or if this `Value` is a\n   * `Record`, but the `index` is out of bounds.\n   */\n  override getItem(index: AnyNum): Item {\n    return Item.absent();\n  }\n\n  override deleted(key: AnyValue): Value {\n    return this;\n  }\n\n  override conditional(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    return thenTerm;\n  }\n\n  override or(that: AnyValue): Value;\n  override or(that: AnyItem): Item;\n  override or(that: AnyItem): Item {\n    return this;\n  }\n\n  override and(that: AnyValue): Value;\n  override and(that: AnyItem): Item;\n  override and(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return that;\n  }\n\n  override bitwiseOr(that: AnyValue): Value;\n  override bitwiseOr(that: AnyItem): Item;\n  override bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseOrOperator(this, that);\n    } else if (that instanceof Attr) {\n      const newValue = this.bitwiseOr(that.value);\n      if (newValue.isDefined()) {\n        return new Attr(that.key, newValue);\n      }\n    } else if (that instanceof Slot) {\n      const newValue = this.bitwiseOr(that.value);\n      if (newValue.isDefined()) {\n        return new Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  override bitwiseXor(that: AnyValue): Value;\n  override bitwiseXor(that: AnyItem): Item;\n  override bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseXorOperator(this, that);\n    } else if (that instanceof Attr) {\n      const newValue = this.bitwiseXor(that.value);\n      if (newValue.isDefined()) {\n        return new Attr(that.key, newValue);\n      }\n    } else if (that instanceof Slot) {\n      const newValue = this.bitwiseXor(that.value);\n      if (newValue.isDefined()) {\n        return new Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  override bitwiseAnd(that: AnyValue): Value;\n  override bitwiseAnd(that: AnyItem): Item;\n  override bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new BitwiseAndOperator(this, that);\n    } else if (that instanceof Attr) {\n      const newValue = this.bitwiseAnd(that.value);\n      if (newValue.isDefined()) {\n        return new Attr(that.key, newValue);\n      }\n    } else if (that instanceof Slot) {\n      const newValue = this.bitwiseAnd(that.value);\n      if (newValue.isDefined()) {\n        return new Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  override lt(that: AnyValue): Value;\n  override lt(that: AnyItem): Item;\n  override lt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new LtOperator(this, that);\n    }\n    return super.lt(that);\n  }\n\n  override le(that: AnyValue): Value;\n  override le(that: AnyItem): Item;\n  override le(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new LeOperator(this, that);\n    }\n    return super.le(that);\n  }\n\n  override eq(that: AnyValue): Value;\n  override eq(that: AnyItem): Item;\n  override eq(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new EqOperator(this, that);\n    }\n    return super.eq(that);\n  }\n\n  override ne(that: AnyValue): Value;\n  override ne(that: AnyItem): Item;\n  override ne(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new NeOperator(this, that);\n    }\n    return super.ne(that);\n  }\n\n  override ge(that: AnyValue): Value;\n  override ge(that: AnyItem): Item;\n  override ge(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new GeOperator(this, that);\n    }\n    return super.ge(that);\n  }\n\n  override gt(that: AnyValue): Value;\n  override gt(that: AnyItem): Item;\n  override gt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new GtOperator(this, that);\n    }\n    return super.gt(that);\n  }\n\n  override plus(that: AnyValue): Value;\n  override plus(that: AnyItem): Item;\n  override plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new PlusOperator(this, that);\n    } else if (that instanceof Attr) {\n      const newValue = this.plus(that.value);\n      if (newValue.isDefined()) {\n        return new Attr(that.key, newValue);\n      }\n    } else if (that instanceof Slot) {\n      const newValue = this.plus(that.value);\n      if (newValue.isDefined()) {\n        return new Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  override minus(that: AnyValue): Value;\n  override minus(that: AnyItem): Item;\n  override minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new MinusOperator(this, that);\n    } else if (that instanceof Attr) {\n      const newValue = this.minus(that.value);\n      if (newValue.isDefined()) {\n        return new Attr(that.key, newValue);\n      }\n    } else if (that instanceof Slot) {\n      const newValue = this.minus(that.value);\n      if (newValue.isDefined()) {\n        return new Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  override times(that: AnyValue): Value;\n  override times(that: AnyItem): Item;\n  override times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new TimesOperator(this, that);\n    } else if (that instanceof Attr) {\n      const newValue = this.times(that.value);\n      if (newValue.isDefined()) {\n        return new Attr(that.key, newValue);\n      }\n    } else if (that instanceof Slot) {\n      const newValue = this.times(that.value);\n      if (newValue.isDefined()) {\n        return new Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  override divide(that: AnyValue): Value;\n  override divide(that: AnyItem): Item;\n  override divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new DivideOperator(this, that);\n    } else if (that instanceof Attr) {\n      const newValue = this.divide(that.value);\n      if (newValue.isDefined()) {\n        return new Attr(that.key, newValue);\n      }\n    } else if (that instanceof Slot) {\n      const newValue = this.divide(that.value);\n      if (newValue.isDefined()) {\n        return new Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  override modulo(that: AnyValue): Value;\n  override modulo(that: AnyItem): Item;\n  override modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Expression) {\n      return new ModuloOperator(this, that);\n    } else if (that instanceof Attr) {\n      const newValue = this.modulo(that.value);\n      if (newValue.isDefined()) {\n        return new Attr(that.key, newValue);\n      }\n    } else if (that instanceof Slot) {\n      const newValue = this.modulo(that.value);\n      if (newValue.isDefined()) {\n        return new Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  override not(): Value {\n    return Value.absent();\n  }\n\n  override bitwiseNot(): Value {\n    return Value.absent();\n  }\n\n  override negative(): Value {\n    return Value.absent();\n  }\n\n  override positive(): Value {\n    return Value.absent();\n  }\n\n  override inverse(): Value {\n    return Value.absent();\n  }\n\n  override lambda(template: Value): Value {\n    return new LambdaFunc(this, template);\n  }\n\n  /**\n   * Converts this `Value` into a `string` value, if possible; otherwise returns\n   * `undefined` if this `Value` can't be converted into a `string` value.\n   */\n  override stringValue(): string | undefined;\n  /**\n   * Converts this `Value` into a `string` value, if possible; otherwise returns\n   * `orElse` if this `Value` can't be converted into a `string` value.\n   */\n  override stringValue<T>(orElse: T): string | T;\n  override stringValue<T>(orElse?: T): string | T | undefined {\n    return orElse;\n  }\n\n  /**\n   * Converts this `Value` into a `number` value, if possible; otherwise returns\n   * `undefined` if this `Value` can't be converted into a `number` value.\n   */\n  override numberValue(): number | undefined;\n  /**\n   * Converts this `Value` into a `number` value, if possible; otherwise returns\n   * `orElse` if this `Value` can't be converted into a `number` value.\n   */\n  override numberValue<T>(orElse: T): number | T;\n  override numberValue<T>(orElse?: T): number | T | undefined {\n    return orElse;\n  }\n\n  /**\n   * Converts this `Value` into a `boolean` value, if possible; otherwise\n   * returns `undefined` if this `Value` can't be converted into a `boolean`\n   * value.\n   */\n  override booleanValue(): boolean | undefined;\n  /**\n   * Converts this `Value` into a `boolean` value, if possible; otherwise\n   * returns `orElse` if this `Value` can't be converted into a `boolean` value.\n   */\n  override booleanValue<T>(orElse: T): boolean | T;\n  override booleanValue<T>(orElse?: T): boolean | T | undefined {\n    return orElse;\n  }\n\n  abstract override toAny(): AnyValue;\n\n  override isAliased(): boolean {\n    return false;\n  }\n\n  override isMutable(): boolean {\n    return false;\n  }\n\n  override alias(): void {\n    // nop\n  }\n\n  override branch(): Value {\n    return this;\n  }\n\n  override clone(): Value {\n    return this;\n  }\n\n  override commit(): this {\n    return this;\n  }\n\n  override interpolateTo(that: Value): Interpolator<Value>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    return super.interpolateTo(that);\n  }\n\n  override keyEquals(key: unknown): boolean {\n    return false;\n  }\n\n  static builder(): Builder<Item, Value> {\n    return new ValueBuilder();\n  }\n\n  static override empty(): Value {\n    return Record.empty();\n  }\n\n  static override extant(): Value {\n    return Extant.extant();\n  }\n\n  static override absent(): Value {\n    return Absent.absent();\n  }\n\n  static override fromAny(value: AnyValue): Value {\n    if (value instanceof Value) {\n      return value;\n    } else if (value === void 0) {\n      return Absent.absent();\n    } else if (value === null) {\n      return Extant.extant();\n    } else if (typeof value === \"boolean\") {\n      return Bool.from(value);\n    } else if (typeof value === \"number\") {\n      return Num.from(value);\n    } else if (typeof value === \"string\") {\n      return Text.from(value);\n    } else if (value instanceof Uint8Array) {\n      return Data.wrap(value);\n    } else if (Array.isArray(value)) {\n      return Record.fromArray(value);\n    } else if (typeof value === \"object\") {\n      return Record.fromObject(value as {[key: string]: AnyValue});\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors, Cursor, Builder} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {Attr} from \"./Attr\";\nimport {Slot} from \"./Slot\";\nimport {AnyValue, Value} from \"./Value\";\nimport {RecordInterpolator} from \"./\"; // forward import\nimport {RecordCursor} from \"./\"; // forward import\nimport {RecordMap} from \"./\"; // forward import\nimport {AnyText, Text} from \"./\"; // forward import\nimport type {AnyNum} from \"./Num\";\nimport {AnyInterpreter, Interpreter} from \"./\"; // forward import\n\nexport type AnyRecord = Record\n                      | {readonly [key: string]: AnyValue}\n                      | ReadonlyArray<AnyItem>;\n\nexport abstract class Record extends Value implements Builder<Item, Record> {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  override isDefinite(): boolean {\n    return !this.isEmpty();\n  }\n\n  /**\n   * Returns `true` if this `Record` has no members.\n   */\n  abstract isEmpty(): boolean;\n\n  /**\n   * Returns `true` if this `Record` has only [[Value]] members–no `Field`\n   * members.\n   */\n  isArray(): boolean {\n    return this.fieldCount === 0;\n  }\n\n  /**\n   * Returns `true` if this `Record` has only [[Field]] members–no `Value`\n   * members.\n   */\n  isObject(): boolean {\n    return this.valueCount === 0;\n  }\n\n  /**\n   * Returns the number of members contained in this `Record`.\n   */\n  abstract override get length(): number;\n\n  /**\n   * Returns the number of [[Field]] members contained in this `Record`.\n   */\n  declare readonly fieldCount: number; // getter defined below to work around useDefineForClassFields lunacy\n\n  /**\n   * Returns the number of [[Value]] members contained in this `Record`.\n   */\n  get valueCount(): number {\n    let count = 0;\n    this.forEach(function (member: Item): void {\n      if (member instanceof Value) {\n        count += 1;\n      }\n    }, this);\n    return count;\n  }\n\n  override isConstant(): boolean {\n    return this.forEach(function (member: Item): boolean | undefined {\n      return member.isConstant() ? void 0 : false;\n    }, this) === void 0;\n  }\n\n  /**\n   * Returns the `key` string of the first member of this `Record`, if the\n   * first member is an [[Attr]]; otherwise returns `undefined` if the first\n   * member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  override get tag(): string | undefined {\n    const item = this.head();\n    if (item instanceof Attr) {\n      return item.key.value;\n    }\n    return void 0;\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] members of this `Record` after\n   * all attributes have been removed.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  override get target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    this.forEach(function (item: Item): void {\n      if (item instanceof Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }, this);\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Returns the sole member of this `Record`, if this `Record` has exactly one\n   * member, and its member is a `Value`; returns [[Extant]] if this `Record`\n   * is empty; otherwise returns `this` if this `Record` has more than one\n   * member.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  override flattened(): Value {\n    if (this.isEmpty()) {\n      return Value.extant();\n    } else {\n      const items = this.iterator();\n      const head = items.head();\n      items.step();\n      if (items.isEmpty() && head instanceof Value) {\n        return head;\n      } else {\n        return this.branch();\n      }\n    }\n  }\n\n  /**\n   * Returns this `Record`.\n   */\n  override unflattened(): Record {\n    return this;\n  }\n\n  /**\n   * Returns the value of the first member of this `Record`, if the first\n   * member is an [[Attr]] whose `key` string is equal to `tag`; otherwise\n   * returns [[Absent]] if the first member of this `Record` is not an `Attr`,\n   * or if the first member of this `Record` is an `Attr` whose `key` does not\n   * equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  override header(tag: string): Value {\n    const head = this.head();\n    if (head instanceof Attr && head.key.value === tag) {\n      return head.value;\n    } else {\n      return Value.absent();\n    }\n  }\n\n  /**\n   * Returns the [[Record.unflattened unflattened]] [[Record.header header]] of\n   * this `Record`.  The `headers` of the `tag` attribute of a structure are\n   * like the attributes of an XML element tag; through unlike an XML element,\n   * `tag` attribute headers are not limited to string keys and values.\n   */\n  override headers(tag: string): Record | undefined {\n    const head = this.head();\n    if (head instanceof Attr && head.key.value === tag) {\n      const header = head.value;\n      if (header instanceof Record) {\n        return header;\n      } else {\n        return Record.of(header);\n      }\n    }\n    return void 0;\n  }\n\n  /**\n   * Returns the first member of this `Record`, if this `Record` is non-empty;\n   * otherwise returns [[Absent]].\n   */\n  override head(): Item {\n    return this.forEach(function (item: Item): Item {\n      return item;\n    }, this) || Item.absent();\n  }\n\n  /**\n   * Returns a view of all but the first member of this `Record`, if this\n   * `Record` is non-empty; otherwise returns an empty `Record`, if this\n   * `Record` is itself empty.\n   */\n  override tail(): Record {\n    const tail = Record.create();\n    this.forEach(function (item: Item, index: number): void {\n      if (index > 0) {\n        tail.push(item);\n      }\n    }, this);\n    return tail;\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Record.tail tail]] of this\n   * `Record`.  Used to recursively deconstruct a structure, terminating\n   * with its last `Value`, rather than a unary `Record` containing its last\n   * value, if the structure ends with a `Value` member.\n   */\n  override body(): Value {\n    const tail = this.tail();\n    if (!tail.isEmpty()) {\n      return tail.flattened();\n    } else {\n      return Value.absent();\n    }\n  }\n\n  /**\n   * Returns `true` if this `Record` has a [[Field]] member with a key that is\n   * equal to the given `key`; otherwise returns `false` if this `Record` has\n   * no `Field` member with a key equal to the given `key`.\n   */\n  override has(key: AnyValue): boolean {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): boolean | undefined {\n      return item instanceof Field && item.key.equals(key) ? true : void 0;\n    }, this) || false;\n  }\n\n  indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    if (index < 0) {\n      index = Math.max(0, this.length + index);\n    }\n    const i = this.forEach(function (member: Item, i: number): number | undefined {\n      return i >= index && (item as Item).equals(member) ? i : void 0;\n    }, this);\n    return i !== void 0 ? i : -1;\n  }\n\n  lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const n = this.length;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(index, n - 1);\n    while (index >= 0) {\n      if (item.equals(this.getItem(index))) {\n        return index;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Field` member with a key equal to the given `key`.\n   */\n  override get(key: AnyValue): Value {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Field && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Attr` member with a key equal to the given `key`.\n   */\n  override getAttr(key: AnyText): Value {\n    key = Text.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Attr && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Slot` member with a key equal to the given `key`.\n   */\n  override getSlot(key: AnyValue): Value {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Slot && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the last [[Field]] member of this `Record` whose key is equal to\n   * the given `key`; returns `undefined` if this `Record` has no `Field` member\n   * with a `key` equal to the given `key`.\n   */\n  override getField(key: AnyValue): Field | undefined {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Field | undefined {\n      return item instanceof Field && item.key.equals(key) ? item : void 0;\n    }, this);\n  }\n\n  /**\n   * Returns the member of this `Record` at the given `index`, if the `index`\n   * is greater than or equal to zero, and less than the [[Record.length\n   * length]] of this `Record`; otherwise returns [[Absent]] if the `index` is\n   * out of bounds.\n   */\n  abstract override getItem(index: AnyNum): Item;\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Field && item.key.equals(key)) {\n        if (item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(item.updatedValue(newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Slot(key, newValue));\n    return this;\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    key = Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Field && item.key.equals(key)) {\n        if (item instanceof Attr && item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(new Attr(key, newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Attr(key, newValue));\n    return this;\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Field && item.key.equals(key)) {\n        if (item instanceof Slot && item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(new Slot(key, newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Slot(key, newValue));\n    return this;\n  }\n\n  /**\n   * Replaces the member of this `Record` at the given `index` with a new\n   * `item`, returning {@code this} {@code Record}, if the {@code index} is\n   * greater than or equal to zero, and less than the [[Record.length length]]\n   * of this {@code Record}.\n   *\n   * @throws `Error` if this is an immutable `Record`.\n   * @throws `RangeError` if the `index` is out of bounds.\n   */\n  abstract setItem(index: number, item: AnyItem): this;\n\n  override updated(key: AnyValue, value: AnyValue): Record {\n    key = Value.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Field && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Slot(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Slot(key, value));\n    return record;\n  }\n\n  override updatedAttr(key: AnyText, value: AnyValue): Record {\n    key = Text.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Attr && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Attr(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Attr(key, value));\n    return record;\n  }\n\n  override updatedSlot(key: AnyValue, value: AnyValue): Record {\n    key = Value.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Slot && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Slot(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Slot(key, value));\n    return record;\n  }\n\n  abstract push(...items: AnyItem[]): number;\n\n  abstract splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[];\n\n  abstract delete(key: AnyValue): Item;\n\n  abstract clear(): void;\n\n  override appended(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.push(...items);\n    return record;\n  }\n\n  override prepended(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.splice(0, 0, ...items);\n    return record;\n  }\n\n  override deleted(key: AnyValue): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.delete(key);\n    return record;\n  }\n\n  override concat(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    for (let i = 0, n = items.length; i < n; i += 1) {\n      Item.fromAny(items[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  slice(lower?: number, upper?: number): Record {\n    return this.subRecord(lower, upper).branch();\n  }\n\n  attr(key: AnyText, value?: AnyValue): this {\n    let field: Field;\n    if (arguments.length === 1) {\n      field = Attr.of(key);\n    } else {\n      field = Attr.of(key, value);\n    }\n    this.push(field);\n    return this;\n  }\n\n  slot(key: AnyValue, value?: AnyValue): this {\n    let field: Field;\n    if (arguments.length === 1) {\n      field = Slot.of(key);\n    } else {\n      field = Slot.of(key, value);\n    }\n    this.push(field);\n    return this;\n  }\n\n  item(item: AnyItem): this {\n    this.push(item);\n    return this;\n  }\n\n  items(...items: AnyItem[]): this {\n    this.push(this, ...items);\n    return this;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const scope = Record.create();\n    interpreter.pushScope(scope);\n    let changed = false;\n    this.forEach(function (oldItem: Item): void {\n      const newItem = oldItem.evaluate(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }, this);\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const scope = Record.create();\n    interpreter.pushScope(scope);\n    let changed = false;\n    this.forEach(function (oldItem: Item) {\n      const newItem = oldItem.substitute(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }, this);\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  override stringValue(): string | undefined;\n  override stringValue<T>(orElse: T): string | T;\n  override stringValue<T>(orElse?: T): string | T | undefined {\n    let recordString = \"\";\n    const defined = this.forEach(function (item: Item): null | void {\n      if (item instanceof Value) {\n        const itemString = item.stringValue();\n        if (itemString !== void 0) {\n          recordString += itemString;\n          return;\n        }\n      }\n      return null; // break\n    }, this) === void 0;\n    return defined ? recordString : void 0;\n  }\n\n  override toAny(): AnyValue {\n    if (!this.isEmpty() && this.isArray()) {\n      return this.toArray();\n    } else {\n      return this.toObject();\n    }\n  }\n\n  toArray(): AnyItem[] {\n    const array = new Array<AnyItem>(this.length);\n    this.forEach(function (item: Item, index: number): void {\n      if (item instanceof Value) {\n        array[index] = item.toAny();\n      } else if (item instanceof Field) {\n        array[index] = {\n          $key: item.key.toAny(),\n          $value: item.value.toAny(),\n        };\n      }\n    }, this);\n    return array;\n  }\n\n  toObject(): {[key: string]: AnyValue} {\n    const object = {} as {[key: string]: AnyValue};\n    this.forEach(function (item: Item, index: number): void {\n      if (item instanceof Attr) {\n        object[\"@\" + item.key.value] = item.value.toAny();\n      } else if (item instanceof Slot) {\n        if (item.key instanceof Text) {\n          object[item.key.value] = item.value.toAny();\n        } else {\n          object[\"$\" + index] = {\n            $key: item.key.toAny(),\n            $value: item.value.toAny(),\n          };\n        }\n      } else if (item instanceof Value) {\n        object[\"$\" + index] = item.toAny();\n      }\n    }, this);\n    return object;\n  }\n\n  override isAliased(): boolean {\n    return false;\n  }\n\n  override isMutable(): boolean {\n    return true;\n  }\n\n  override alias(): void {\n    // nop\n  }\n\n  override branch(): Record {\n    const branch = Record.create();\n    this.forEach(function (item: Item): void {\n      branch.push(item);\n    }, this);\n    return branch;\n  }\n\n  override clone(): Record {\n    const clone = Record.create();\n    this.forEach(function (item: Item): void {\n      clone.push(item.clone());\n    }, this);\n    return clone;\n  }\n\n  override commit(): this {\n    return this;\n  }\n\n  bind(): Record {\n    return this;\n  }\n\n  subRecord(lower?: number, upper?: number): Record {\n    const n = this.length;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    lower = Math.min(Math.max(0, lower), n);\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    const record = Record.create();\n    this.forEach(function (item: Item, index: number): null | void {\n      if (index < lower!) {\n        return;\n      } else if (index < upper!) {\n        record.push(item);\n        return;\n      } else {\n        return null;\n      }\n    }, this);\n    return record;\n  }\n\n  abstract override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  abstract override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                                  thisArg: S): T | undefined;\n\n  override iterator(): Cursor<Item> {\n    return new RecordCursor(this);\n  }\n\n  override interpolateTo(that: Record): Interpolator<Record>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof Record) {\n      return RecordInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override get typeOrder(): number {\n    return 3;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Record) {\n      const xs = this.iterator();\n      const ys = that.iterator();\n      let order = 0;\n      do {\n        if (!xs.isEmpty() && !ys.isEmpty()) {\n          order = xs.head().compareTo(ys.head());\n          xs.step();\n          ys.step();\n        } else {\n          break;\n        }\n      } while (order === 0);\n      if (order !== 0) {\n        return order;\n      } else if (xs.isEmpty() && !ys.isEmpty()) {\n        return -1;\n      } else if (!xs.isEmpty() && ys.isEmpty()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Record) {\n      const xs = this.iterator();\n      const ys = that.iterator();\n      while (!xs.isEmpty() && !ys.isEmpty()) {\n        if (!xs.head().equivalentTo(ys.head(), epsilon)) {\n          return false;\n        }\n        xs.step();\n        ys.step();\n      }\n      return xs.isEmpty() && ys.isEmpty();\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Record) {\n      const xs = this.iterator();\n      const ys = that.iterator();\n      while (!xs.isEmpty() && !ys.isEmpty()) {\n        if (!xs.head().equals(ys.head())) {\n          return false;\n        }\n        xs.step();\n        ys.step();\n      }\n      return xs.isEmpty() && ys.isEmpty();\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    let hashValue = Constructors.hash(Record);\n    this.forEach(function (item: Item): void {\n      hashValue = Murmur3.mix(hashValue, item.hashCode());\n    }, this);\n    return hashValue;\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Record\").write(46/*'.'*/);\n    if (this.isEmpty()) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"of\").write(40/*'('*/);\n      this.forEach(function (item: Item, index: number): void {\n        if (index !== 0) {\n          output = output.write(44/*','*/).write(32/*' '*/);\n        }\n        output.display(item);\n      }, this);\n      output = output.write(41/*')'*/);\n    }\n  }\n\n  override display(output: Output): void {\n    this.debug(output);\n  }\n\n  /** @hidden */\n  static readonly AliasedFlag: number = 1;\n  /** @hidden */\n  static readonly ImmutableFlag: number = 2;\n\n  static override empty(): Record {\n    return RecordMap.empty();\n  }\n\n  static create(initialCapacity?: number): Record {\n    return RecordMap.create(initialCapacity);\n  }\n\n  static of(...items: AnyItem[]): Record {\n    return RecordMap.of(...items);\n  }\n\n  static override fromAny(value: AnyRecord): Record {\n    if (value instanceof Record) {\n      return value;\n    } else if (Array.isArray(value)) {\n      return Record.fromArray(value);\n    } else if (typeof value === \"object\" && value !== null) {\n      return Record.fromObject(value as {[key: string]: AnyValue});\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static fromArray(array: {[index: number]: AnyItem, length?: number}): Record {\n    const n = array.length || 0;\n    const record = Record.create(n);\n    for (let i = 0; i < n; i += 1) {\n      record.push(Item.fromAny(array[i]));\n    }\n    return record;\n  }\n\n  static fromObject(object: {[key: string]: AnyValue}): Record {\n    const record = Record.create();\n    for (const key in object) {\n      const value = object[key];\n      if (key.charCodeAt(0) === 36/*'$'*/) {\n        if (!value || typeof value !== \"object\" || !Object.prototype.hasOwnProperty.call(value, \"$key\")) {\n          record.push(Value.fromAny(value));\n        } else {\n          record.push(Field.of((value as any).$key, (value as any).$value));\n        }\n      } else {\n        record.push(Field.of(key, value));\n      }\n    }\n    return record;\n  }\n\n  /** @hidden */\n  static expand(n: number): number {\n    n = Math.max(8, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\nObject.defineProperty(Record.prototype, \"fieldCount\", {\n  get(this: Record): number {\n    let count = 0;\n    this.forEach(function (member: Item): void {\n      if (member instanceof Field) {\n        count += 1;\n      }\n    }, this);\n    return count;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport type {Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {Value} from \"./Value\";\nimport {Record} from \"./Record\";\n\n/** @hidden */\nexport class ValueBuilder implements Builder<Item, Value> {\n  /** @hidden */\n  record: Record | null;\n  /** @hidden */\n  value: Value | null;\n\n  constructor() {\n    this.record = null;\n    this.value = null;\n  }\n\n  push(...items: Item[]): void {\n    for (let i = 0, n = items.length; i < n; i += 1) {\n      const item = items[i]!;\n      if (item instanceof Field) {\n        return this.pushField(item);\n      } else if (item instanceof Value) {\n        return this.pushValue(item);\n      } else {\n        throw new TypeError(\"\" + item);\n      }\n    }\n  }\n\n  /** @hidden */\n  pushField(item: Field): void {\n    if (this.record === null) {\n      this.record = Record.create();\n      if (this.value !== null) {\n        this.record.push(this.value);\n        this.value = null;\n      }\n    }\n    this.record.push(item);\n  }\n\n  /** @hidden */\n  pushValue(item: Value): void {\n    if (this.record !== null) {\n      this.record.push(item);\n    } else if (this.value === null) {\n      this.value = item;\n    } else {\n      this.record = Record.create();\n      this.record.push(this.value);\n      this.value = null;\n      this.record.push(item);\n    }\n  }\n\n  bind(): Value {\n    if (this.record !== null) {\n      return this.record;\n    } else if (this.value !== null) {\n      return this.value;\n    } else {\n      return Value.absent();\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport type {Item} from \"./Item\";\nimport {Record} from \"./Record\";\n\n/** @hidden */\nexport interface RecordInterpolator extends Interpolator<Record> {\n  /** @hidden */\n  readonly interpolators: ReadonlyArray<Interpolator<Item>>;\n\n  readonly 0: Record;\n\n  readonly 1: Record;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const RecordInterpolator = function (y0: Record, y1: Record): RecordInterpolator {\n  const interpolator = function (u: number): Record {\n    const interpolators = interpolator.interpolators;\n    const interpolatorCount = interpolators.length;\n    const record = Record.create(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      record.push(interpolators[i]!(u));\n    }\n    return record;\n  } as RecordInterpolator;\n  Object.setPrototypeOf(interpolator, RecordInterpolator.prototype);\n  const interpolatorCount = Math.min(y0.length, y1.length);\n  const interpolators = new Array<Interpolator<Item>>(interpolatorCount);\n  for (let i = 0; i < interpolatorCount; i += 1) {\n    interpolators[i] = y0.getItem(i)!.interpolateTo(y1.getItem(i)!);\n  }\n  Object.defineProperty(interpolator, \"interpolators\", {\n    value: interpolators,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: Record, y1: Record): RecordInterpolator;\n\n  /** @hidden */\n  prototype: RecordInterpolator;\n};\n\nRecordInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(RecordInterpolator.prototype, 0, {\n  get(this: RecordInterpolator): Record {\n    const interpolators = this.interpolators;\n    const interpolatorCount = interpolators.length;\n    const record = Record.create(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      record.push(interpolators[i]![0]);\n    }\n    return record;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(RecordInterpolator.prototype, 1, {\n  get(this: RecordInterpolator): Record {\n    const interpolators = this.interpolators;\n    const interpolatorCount = interpolators.length;\n    const record = Record.create(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      record.push(interpolators[i]![1]);\n    }\n    return record;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nRecordInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof RecordInterpolator) {\n    const n = this.interpolators.length;\n    if (n === that.interpolators.length) {\n      for (let i = 0; i < n; i += 1) {\n        if (!this.interpolators[i]!.equals(that.interpolators[i]!)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport type {Item} from \"./Item\";\nimport type {Record} from \"./Record\";\n\n/** @hidden */\nexport class RecordCursor extends Cursor<Item> {\n  /** @hidden */\n  readonly record!: Record;\n  /** @hidden */\n  readonly lower!: number;\n  /** @hidden */\n  readonly upper!: number;\n  /** @hidden */\n  readonly index!: number;\n  /** @hidden */\n  readonly direction!: number;\n\n  constructor(record: Record, lower?: number, upper?: number, index?: number) {\n    super();\n    if (lower === void 0) {\n      lower = 0;\n    }\n    if (upper === void 0) {\n      upper = record.length;\n    }\n    if (index === void 0) {\n      index = lower;\n    }\n    Object.defineProperty(this, \"record\", {\n      value: record,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lower\", {\n      value: lower,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"upper\", {\n      value: upper,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"index\", {\n      value: index,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"direction\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isEmpty(): boolean {\n    return this.index >= this.upper;\n  }\n\n  override head(): Item {\n    Object.defineProperty(this, \"direction\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    if (this.index < this.upper) {\n      return this.record.getItem(this.index);\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  override step(): void {\n    Object.defineProperty(this, \"direction\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    if (this.index < this.upper) {\n      Object.defineProperty(this, \"index\", {\n        value: this.index + 1,\n        enumerable: true,\n        configurable: true,\n      });\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  override skip(count: number): void {\n    Object.defineProperty(this, \"index\", {\n      value: Math.min(Math.max(this.lower, this.index + count, this.upper)),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override hasNext(): boolean {\n    return this.index < this.upper;\n  }\n\n  override nextIndex(): number {\n    return this.index - this.lower;\n  }\n\n  override next(): {value?: Item, done: boolean} {\n    Object.defineProperty(this, \"direction\", {\n      value: 1,\n      enumerable: true,\n      configurable: true,\n    });\n    const index = this.index;\n    if (index < this.upper) {\n      Object.defineProperty(this, \"index\", {\n        value: index + 1,\n        enumerable: true,\n        configurable: true,\n      });\n      return {value: this.record.getItem(index), done: this.index === this.upper};\n    } else {\n      Object.defineProperty(this, \"index\", {\n        value: this.upper,\n        enumerable: true,\n        configurable: true,\n      });\n      return {done: true};\n    }\n  }\n\n  override hasPrevious(): boolean {\n    return this.index > this.lower;\n  }\n\n  override previousIndex(): number {\n    return this.index - this.lower - 1;\n  }\n\n  override previous(): {value?: Item, done: boolean} {\n    Object.defineProperty(this, \"direction\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n    const index = this.index - 1;\n    if (index >= this.lower) {\n      Object.defineProperty(this, \"index\", {\n        value: index,\n        enumerable: true,\n        configurable: true,\n      });\n      return {value: this.record.getItem(index), done: index === this.lower};\n    } else {\n      Object.defineProperty(this, \"index\", {\n        value: 0,\n        enumerable: true,\n        configurable: true,\n      });\n      return {done: true};\n    }\n  }\n\n  override set(newItem: Item): void {\n    if (this.direction > 0) {\n      this.record.setItem(this.index - 1, newItem);\n    } else {\n      this.record.setItem(this.index, newItem);\n    }\n  }\n\n  override delete(): void {\n    if (this.direction > 0) {\n      Object.defineProperty(this, \"index\", {\n        value: this.index - 1,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    this.record.splice(this.index, 1);\n    Object.defineProperty(this, \"direction\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {Attr} from \"./Attr\";\nimport {Slot} from \"./Slot\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {RecordMapView} from \"./\"; // forward import\nimport {AnyText, Text} from \"./\"; // forward import\nimport {AnyNum, Num} from \"./\"; // forward import\nimport {AnyInterpreter, Interpreter} from \"./\"; // forward import\n\n/** @hidden */\nexport class RecordMap extends Record {\n  constructor(array: Array<Item> | null, table: Array<Field> | null,\n              length: number, fieldCount: number, flags: number) {\n    super();\n    Object.defineProperty(this, \"array\", {\n      value: array,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"table\", {\n      value: table,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: length,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: fieldCount,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: flags,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly array!: Array<Item> | null;\n\n  /** @hidden */\n  readonly table!: Array<Field> | null;\n\n  override isEmpty(): boolean {\n    return this.length === 0;\n  }\n\n  override readonly length!: number;\n\n  override readonly fieldCount!: number;\n\n  override get valueCount(): number {\n    return this.length - this.fieldCount;\n  }\n\n  /** @hidden */\n  readonly flags!: number;\n\n  override isConstant(): boolean {\n    const array = this.array;\n    for (let i = 0, n = this.length; i < n; i += 1) {\n      if (!array![i]!.isConstant()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  override get tag(): string | undefined {\n    if (this.fieldCount > 0) {\n      const head = this.array![0];\n      if (head instanceof Attr) {\n        return head.key.value;\n      }\n    }\n    return void 0;\n  }\n\n  override get target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    const array = this.array!;\n    for (let i = 0, n = this.length; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  override head(): Item {\n    if (this.length > 0) {\n      return this.array![0]!;\n    }\n    return Item.absent();\n  }\n\n  override tail(): Record {\n    const n = this.length;\n    if (n > 0) {\n      return new RecordMapView(this, 1, n);\n    } else {\n      return Record.empty();\n    }\n  }\n\n  override body(): Value {\n    const n = this.length;\n    if (n > 2) {\n      return new RecordMapView(this, 1, n).branch();\n    } else if (n === 2) {\n      const item = this.array![1];\n      if (item instanceof Value) {\n        return item;\n      } else {\n        return Record.of(item);\n      }\n    }\n    return Value.absent();\n  }\n\n  override has(key: AnyValue): boolean {\n    if (this.fieldCount !== 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return true;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return false;\n  }\n\n  override indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    const array = this.array!;\n    const n = this.length;\n    if (index < 0) {\n      index = Math.max(0, n + index);\n    }\n    while (index < n) {\n      if (item.equals(array[index])) {\n        return index;\n      }\n      index += 1;\n    }\n    return -1;\n  }\n\n  override lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const array = this.array!;\n    const n = this.length;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(index, n - 1);\n    while (index >= 0) {\n      if (item.equals(array[index])) {\n        return index;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  override get(key: AnyValue): Value {\n    if (this.fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  override getAttr(key: AnyText): Value {\n    if (this.fieldCount > 0) {\n      key = Text.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field instanceof Attr && field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  override getSlot(key: AnyValue): Value {\n    if (this.fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field instanceof Slot && field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  override getField(key: AnyValue): Field | undefined {\n    if (this.fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return field;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return void 0;\n  }\n\n  override getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index >= 0 && index < n) {\n      return this.array![index]!;\n    } else {\n      return Item.absent();\n    }\n  }\n\n  override set(key: AnyValue, newValue: Value): this {\n    if ((this.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this.flags & Record.AliasedFlag) !== 0) {\n      if (this.fieldCount > 0) {\n        this.setAliased(key, newValue);\n      } else {\n        this.pushAliased(new Slot(key, newValue));\n      }\n    } else {\n      if (this.fieldCount > 0) {\n        if (this.table !== null) {\n          this.setMutable(key, newValue);\n        } else {\n          this.updateMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Slot(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  /** @hidden */\n  setAliased(key: Value, newValue: Value): void {\n    const n = this.length;\n    const oldArray = this.array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Field && item.key.equals(key)) {\n        newArray[i] = item.updatedValue(newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        Object.defineProperty(this, \"array\", {\n          value: newArray,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"flags\", {\n          value: this.flags & ~Record.AliasedFlag,\n          enumerable: true,\n          configurable: true,\n        });\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Slot(key, newValue);\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: n + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: this.fieldCount + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  setMutable(key: Value, newValue: Value): void {\n    const table = this.table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field.isMutable()) {\n            field.setValue(newValue);\n            return;\n          } else {\n            this.updateMutable(key, newValue);\n            return;\n          }\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Slot(key, newValue);\n    this.pushMutable(field);\n    RecordMap.put(table, field);\n  }\n\n  /** @hidden */\n  updateMutable(key: Value, newValue: Value): void {\n    const array = this.array!;\n    for (let i = 0, n = this.length; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Field && item.key.equals(key)) {\n        array[i] = item.updatedValue(newValue);\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        return;\n      }\n    }\n    const field = new Slot(key, newValue);\n    this.pushMutable(field);\n    RecordMap.put(this.table, field);\n  }\n\n  override setAttr(key: AnyText, newValue: Value): this {\n    if ((this.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this.flags & Record.AliasedFlag) !== 0) {\n      if (this.fieldCount > 0) {\n        this.setAttrAliased(key, newValue);\n      } else {\n        this.pushAliased(new Attr(key, newValue));\n      }\n    } else {\n      if (this.fieldCount > 0) {\n        if (this.table !== null) {\n          this.setAttrMutable(key, newValue);\n        } else {\n          this.updateAttrMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Attr(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  /** @hidden */\n  setAttrAliased(key: Text, newValue: Value): void {\n    const n = this.length;\n    const oldArray = this.array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Field && item.key.equals(key)) {\n        newArray[i] = new Attr(key, newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        Object.defineProperty(this, \"array\", {\n          value: newArray,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"flags\", {\n          value: this.flags & ~Record.AliasedFlag,\n          enumerable: true,\n          configurable: true,\n        });\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Attr(key, newValue);\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: n + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: this.fieldCount + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  setAttrMutable(key: Text, newValue: Value): void {\n    const table = this.table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field instanceof Attr && field.isMutable()) {\n            field.setValue(newValue);\n          } else {\n            this.updateAttrMutable(key, newValue);\n          }\n          return;\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Attr(key, newValue);\n    this.push(field);\n    RecordMap.put(table, field);\n  }\n\n  /** @hidden */\n  updateAttrMutable(key: Text, newValue: Value): void {\n    const array = this.array!;\n    for (let i = 0, n = this.length; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Field && item.key.equals(key)) {\n        array[i] = new Attr(key, newValue);\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        return;\n      }\n    }\n    const field = new Attr(key, newValue);\n    this.push(field);\n    RecordMap.put(this.table, field);\n  }\n\n  override setSlot(key: AnyValue, newValue: Value): this {\n    if ((this.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this.flags & Record.AliasedFlag) !== 0) {\n      if (this.fieldCount > 0) {\n        this.setSlotAliased(key, newValue);\n      } else {\n        this.pushAliased(new Slot(key, newValue));\n      }\n    } else {\n      if (this.fieldCount > 0) {\n        if (this.table !== null) {\n          this.setSlotMutable(key, newValue);\n        } else {\n          this.updateSlotMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Slot(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  /** @hidden */\n  setSlotAliased(key: Value, newValue: Value): void {\n    const n = this.length;\n    const oldArray = this.array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Field && item.key.equals(key)) {\n        newArray[i] = new Slot(key, newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        Object.defineProperty(this, \"array\", {\n          value: newArray,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"flags\", {\n          value: this.flags & ~Record.AliasedFlag,\n          enumerable: true,\n          configurable: true,\n        });\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Slot(key, newValue);\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: n + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: this.fieldCount + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  setSlotMutable(key: Value, newValue: Value): void {\n    const table = this.table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field instanceof Slot && field.isMutable()) {\n            field.setValue(newValue);\n          } else {\n            this.updateSlotMutable(key, newValue);\n          }\n          return;\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Slot(key, newValue);\n    this.push(field);\n    RecordMap.put(table, field);\n  }\n\n  /** @hidden */\n  updateSlotMutable(key: Value, newValue: Value): void {\n    const array = this.array!;\n    for (let i = 0, n = this.length; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Field && item.key.equals(key)) {\n        array[i] = new Slot(key, newValue);\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        return;\n      }\n    }\n    const field = new Slot(key, newValue);\n    this.push(field);\n    RecordMap.put(this.table, field);\n  }\n\n  override setItem(index: number, newItem: AnyItem): this {\n    if ((this.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    newItem = Item.fromAny(newItem);\n    const n = this.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index < 0 || index > n) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((this.flags & Record.AliasedFlag) !== 0) {\n      this.setItemAliased(index, newItem);\n    } else {\n      this.setItemMutable(index, newItem);\n    }\n    return this;\n  }\n\n  /** @hidden */\n  setItemAliased(index: number, newItem: Item): void {\n    const n = this.length;\n    const oldArray = this.array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      newArray[i] = oldArray[i];\n    }\n    const oldItem = oldArray[index];\n    newArray[index] = newItem;\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    if (newItem instanceof Field) {\n      if (!(oldItem instanceof Field)) {\n        Object.defineProperty(this, \"fieldCount\", {\n          value: this.fieldCount + 1,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    } else if (oldItem instanceof Field) {\n      Object.defineProperty(this, \"fieldCount\", {\n        value: this.fieldCount - 1,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  setItemMutable(index: number, newItem: Item): void {\n    const array = this.array!;\n    const oldItem = array[index];\n    array[index] = newItem;\n    if (newItem instanceof Field) {\n      Object.defineProperty(this, \"table\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      if (!(oldItem instanceof Field)) {\n        Object.defineProperty(this, \"fieldCount\", {\n          value: this.fieldCount + 1,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    } else if (oldItem instanceof Field) {\n      Object.defineProperty(this, \"table\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"fieldCount\", {\n        value: this.fieldCount - 1,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  override updated(key: AnyValue, newValue: AnyValue): Record {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this.flags & Record.ImmutableFlag) === 0 ? this : this.branch();\n    if ((record.flags & Record.AliasedFlag) !== 0) {\n      if (record.fieldCount > 0) {\n        record.setAliased(key, newValue);\n      } else {\n        record.pushAliased(new Slot(key, newValue));\n      }\n    } else {\n      if (record.fieldCount > 0) {\n        if (record.table !== null) {\n          record.setMutable(key, newValue);\n        } else {\n          record.updateMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Slot(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  override updatedAttr(key: AnyText, newValue: AnyValue): Record {\n    key = Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this.flags & Record.ImmutableFlag) === 0 ? this : this.branch();\n    if ((record.flags & Record.AliasedFlag) !== 0) {\n      if (record.fieldCount > 0) {\n        record.setAttrAliased(key, newValue);\n      } else {\n        record.pushAliased(new Attr(key, newValue));\n      }\n    } else {\n      if (record.fieldCount > 0) {\n        if (record.table !== null) {\n          record.setAttrMutable(key, newValue);\n        } else {\n          record.updateAttrMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Attr(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  override updatedSlot(key: AnyValue, newValue: AnyValue): Record {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this.flags & Record.ImmutableFlag) === 0 ? this : this.branch();\n    if ((record.flags & Record.AliasedFlag) !== 0) {\n      if (record.fieldCount > 0) {\n        record.setSlotAliased(key, newValue);\n      } else {\n        record.pushAliased(new Slot(key, newValue));\n      }\n    } else {\n      if (record.fieldCount > 0) {\n        if (record.table !== null) {\n          record.setSlotMutable(key, newValue);\n        } else {\n          record.updateSlotMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Slot(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  override push(...newItems: AnyItem[]): number {\n    if ((this.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this.flags & Record.AliasedFlag) !== 0) {\n      this.pushAliased(...newItems);\n    } else {\n      this.pushMutable(...newItems);\n    }\n    return this.length;\n  }\n\n  /** @hidden */\n  pushAliased(...newItems: AnyItem[]): void {\n    const k = newItems.length;\n    let m = this.length;\n    let n = this.fieldCount;\n    const oldArray = this.array;\n    const newArray = new Array(Record.expand(m + k));\n    if (oldArray !== null) {\n      for (let i = 0; i < m; i += 1) {\n        newArray[i] = oldArray[i];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[m] = newItem;\n      m += 1;\n      if (newItem instanceof Field) {\n        n += 1;\n      }\n    }\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: m,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: n,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  pushMutable(...newItems: AnyItem[]): void {\n    const k = newItems.length;\n    let m = this.length;\n    let n = this.fieldCount;\n    const oldArray = this.array;\n    let newArray;\n    if (oldArray === null || m + k > oldArray.length) {\n      newArray = new Array(Record.expand(m + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < m; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[m] = newItem;\n      m += 1;\n      if (newItem instanceof Field) {\n        n += 1;\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    }\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: m,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: n,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  splice(start: number, deleteCount: number = 0, ...newItems: AnyItem[]): Item[] {\n    if ((this.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const n = this.length;\n    if (start < 0) {\n      start = n + start;\n    }\n    start = Math.min(Math.max(0, start), n);\n    deleteCount = Math.min(Math.max(0, deleteCount), n - start);\n    if ((this.flags & Record.AliasedFlag) !== 0) {\n      return this.spliceAliased(start, deleteCount, ...newItems);\n    } else {\n      return this.spliceMutable(start, deleteCount, ...newItems);\n    }\n  }\n\n  /** @hidden */\n  spliceAliased(start: number, deleteCount: number, ...newItems: AnyItem[]): Item[] {\n    const k = newItems.length;\n    let m = this.length;\n    let n = this.fieldCount;\n    const oldArray = this.array!;\n    const newArray = new Array(Record.expand(m - deleteCount + k));\n    for (let i = 0; i < start; i += 1) {\n      newArray[i] = oldArray[i];\n    }\n    const oldItems: Item[] = [];\n    for (let i = start; i < start + deleteCount; i += 1) {\n      const oldItem = oldArray[i]!;\n      oldItems.push(oldItem);\n      m -= 1;\n      if (oldItem instanceof Field) {\n        n -= 1;\n      }\n    }\n    for (let i = start; i < m; i += 1) {\n      newArray[i + k] = oldArray[i + deleteCount];\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + start] = newItem;\n      m += 1;\n      if (newItem instanceof Field) {\n        n += 1;\n      }\n    }\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: m,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: n,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    return oldItems;\n  }\n\n  /** @hidden */\n  spliceMutable(start: number, deleteCount: number, ...newItems: AnyItem[]): Item[] {\n    const k = newItems.length;\n    let m = this.length;\n    let n = this.fieldCount;\n    const oldArray = this.array!;\n    let newArray;\n    if (oldArray === null || m - deleteCount + k > oldArray.length) {\n      newArray = new Array(Record.expand(m - deleteCount + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < start; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    const oldItems: Item[] = [];\n    for (let i = start; i < start + deleteCount; i += 1) {\n      const oldItem = oldArray[i]!;\n      oldItems.push(oldItem);\n      m -= 1;\n      if (oldItem instanceof Field) {\n        n -= 1;\n      }\n    }\n    if (k > deleteCount) {\n      for (let i = m - 1; i >= start; i -= 1) {\n        newArray[i + k] = oldArray[i + deleteCount];\n      }\n    } else {\n      for (let i = start; i < m; i += 1) {\n        newArray[i + k] = oldArray[i + deleteCount];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + start] = newItem;\n      m += 1;\n      if (newItem instanceof Field) {\n        n += 1;\n      }\n    }\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: m,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: n,\n      enumerable: true,\n      configurable: true,\n    });\n    return oldItems;\n  }\n\n  override delete(key: AnyValue): Item {\n    if ((this.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    if ((this.flags & Record.AliasedFlag) !== 0) {\n      return this.deleteAliased(key);\n    } else {\n      return this.deleteMutable(key);\n    }\n  }\n\n  /** @hidden */\n  deleteAliased(key: Value): Item {\n    const n = this.length;\n    const oldArray = this.array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          newArray[i] = oldArray[j];\n        }\n        Object.defineProperty(this, \"array\", {\n          value: newArray,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"length\", {\n          value: n - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"fieldCount\", {\n          value: this.fieldCount - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"flags\", {\n          value: this.flags & ~Record.AliasedFlag,\n          enumerable: true,\n          configurable: true,\n        });\n        return item;\n      }\n      newArray[i] = item;\n    }\n    return Item.absent();\n  }\n\n  /** @hidden */\n  deleteMutable(key: Value): Item {\n    const n = this.length;\n    const array = this.array!;\n    for (let i = 0; i < n; i += 1) {\n      const item = array[i]!;\n      if (item instanceof Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          array[i] = array[j]!;\n        }\n        array[n - 1] = void 0 as any;\n        Object.defineProperty(this, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"length\", {\n          value: n - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"fieldCount\", {\n          value: this.fieldCount - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        return item;\n      }\n    }\n    return Item.absent();\n  }\n\n  override clear(): void {\n    if ((this.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    Object.defineProperty(this, \"array\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"length\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldCount\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isAliased(): boolean {\n    return (this.flags & Record.AliasedFlag) !== 0;\n  }\n\n  override isMutable(): boolean {\n    return (this.flags & Record.ImmutableFlag) === 0;\n  }\n\n  override alias(): void {\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags | Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override branch(): RecordMap {\n    if ((this.flags & (Record.AliasedFlag | Record.ImmutableFlag)) === 0) {\n      const array = this.array!;\n      for (let i = 0, n = this.length; i < n; i += 1) {\n        array[i]!.alias();\n      }\n    }\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags | Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    return new RecordMap(this.array, this.table, this.length, this.fieldCount, Record.AliasedFlag);\n  }\n\n  override clone(): RecordMap {\n    const itemCount = this.length;\n    const oldArray = this.array!;\n    const newArray = new Array(itemCount);\n    for (let i = 0; i < itemCount; i += 1) {\n      newArray[i] = oldArray[i]!.clone();\n    }\n    return new RecordMap(newArray, null, itemCount, this.fieldCount, 0);\n  }\n\n  override commit(): this {\n    if ((this.flags & Record.ImmutableFlag) === 0) {\n      Object.defineProperty(this, \"flags\", {\n        value: this.flags | Record.ImmutableFlag,\n        enumerable: true,\n        configurable: true,\n      });\n      const array = this.array!;\n      for (let i = 0, n = this.length; i < n; i += 1) {\n        array[i]!.commit();\n      }\n    }\n    return this;\n  }\n\n  hashTable(): Array<Field> | null {\n    const n = this.fieldCount;\n    let table = this.table;\n    if (n !== 0 && table === null) {\n      table = new Array(Record.expand(Math.max(n, n * 10 / 7)));\n      const array = this.array!;\n      for (let i = 0, m = this.length; i < m; i += 1) {\n        const item = array[i];\n        if (item instanceof Field) {\n          RecordMap.put(table, item);\n        }\n      }\n      Object.defineProperty(this, \"table\", {\n        value: table,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return table;\n  }\n\n  /** @hidden */\n  static put(table: Field[] | null, field: Field): void {\n    if (table !== null) {\n      const n = table.length;\n      const x = Math.abs(field.key.hashCode() % n);\n      let i = x;\n      do {\n        const item = table[i];\n        if (item !== void 0) {\n          if (field.key.equals(item.key)) {\n            table[i] = field;\n            return;\n          }\n        } else {\n          table[i] = field;\n          return;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n      throw new Error();\n    }\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const array = this.array!;\n    const n = this.length;\n    const scope = Record.create(n);\n    interpreter.pushScope(scope);\n    let changed = false;\n    for (let i = 0; i < n; i += 1) {\n      const oldItem = array[i]!;\n      const newItem = oldItem.evaluate(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const array = this.array!;\n    const n = this.length;\n    const scope = Record.create(n);\n    interpreter.pushScope(scope);\n    let changed = false;\n    for (let i = 0; i < n; i += 1) {\n      const oldItem = array[i]!;\n      const newItem = oldItem.substitute(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  override subRecord(lower?: number, upper?: number): Record {\n    const n = this.length;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    if (lower < 0 || upper > n || lower > upper) {\n      throw new RangeError(lower + \", \" + upper);\n    }\n    return new RecordMapView(this, lower, upper);\n  }\n\n  override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                         thisArg: S): T | undefined;\n  override forEach<T, S>(callback: (this: S | undefined, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined {\n    const array = this.array!;\n    for (let i = 0, n = this.length; i < n; i += 1) {\n      const result = callback.call(thisArg, array[i]!, i);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  @Lazy\n  static override empty(): RecordMap {\n    return new RecordMap(null, null, 0, 0, Record.AliasedFlag | Record.ImmutableFlag);\n  }\n\n  static override create(initialCapacity?: number): RecordMap {\n    if (initialCapacity === void 0) {\n      return new RecordMap(null, null, 0, 0, Record.AliasedFlag);\n    } else {\n      return new RecordMap(new Array(initialCapacity), null, 0, 0, 0);\n    }\n  }\n\n  static override of(...items: AnyItem[]): RecordMap {\n    const n = items.length;\n    if (n === 0) {\n      return new RecordMap(null, null, 0, 0, Record.AliasedFlag);\n    } else {\n      const array = new Array(n);\n      let itemCount = 0;\n      let fieldCount = 0;\n      for (let i = 0; i < n; i += 1) {\n        const item = Item.fromAny(items[i]);\n        array[i] = item;\n        itemCount += 1;\n        if (item instanceof Field) {\n          fieldCount += 1;\n        }\n      }\n      return new RecordMap(array, null, itemCount, fieldCount, 0);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {Attr} from \"./Attr\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {RecordMap} from \"./RecordMap\";\nimport {AnyNum, Num} from \"./\"; // forward import\n\n/** @hidden */\nexport class RecordMapView extends Record {\n  constructor(record: RecordMap, lower: number, upper: number) {\n    super();\n    Object.defineProperty(this, \"record\", {\n      value: record,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lower\", {\n      value: lower,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"upper\", {\n      value: upper,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly record!: RecordMap;\n\n  /** @hidden */\n  readonly lower!: number;\n\n  /** @hidden */\n  readonly upper!: number;\n\n  override isEmpty(): boolean {\n    return this.lower === this.upper;\n  }\n\n  override isArray(): boolean {\n    const array = this.record.array;\n    for (let i = this.lower, n = this.upper; i < n; i += 1) {\n      if (array![i] instanceof Field) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  override isObject(): boolean {\n    const array = this.record.array;\n    for (let i = this.lower, n = this.upper; i < n; i += 1) {\n      if (array![i] instanceof Value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  override get length(): number {\n    return this.upper - this.lower;\n  }\n\n  declare readonly fieldCount: number; // getter defined below to work around useDefineForClassFields lunacy\n\n  override get valueCount(): number {\n    let k = 0;\n    const array = this.record.array;\n    for (let i = this.lower, n = this.upper; i < n; i += 1) {\n      if (array![i] instanceof Value) {\n        k += 1;\n      }\n    }\n    return k;\n  }\n\n  override isConstant(): boolean {\n    const array = this.record.array;\n    for (let i = this.lower, n = this.upper; i < n; i += 1) {\n      if (!array![i]!.isConstant()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  override get tag(): string | undefined {\n    if (this.length > 0) {\n      const item = this.record.array![this.lower];\n      if (item instanceof Attr) {\n        return item.key.value;\n      }\n    }\n    return void 0;\n  }\n\n  override get target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    const array = this.record.array;\n    for (let i = this.lower, n = this.upper; i < n; i += 1) {\n      const item = array![i];\n      if (item instanceof Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  override head(): Item {\n    if (this.length > 0) {\n      return this.record.array![this.lower]!;\n    } else {\n      return Item.absent();\n    }\n  }\n\n  override tail(): Record {\n    if (this.length > 0) {\n      return new RecordMapView(this.record, this.lower + 1, this.upper);\n    } else {\n      return Record.empty();\n    }\n  }\n\n  override body(): Value {\n    const n = this.length;\n    if (n > 2) {\n      return new RecordMapView(this.record, this.lower + 1, this.upper).branch();\n    } else if (n === 2) {\n      const item = this.record.array![this.lower + 1];\n      if (item instanceof Value) {\n        return item;\n      } else {\n        return Record.of(item);\n      }\n    } else {\n      return Value.absent();\n    }\n  }\n\n  override indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    const array = this.record.array;\n    const n = this.length;\n    if (index < 0) {\n      index = Math.max(0, n + index);\n    }\n    index = this.lower + index;\n    while (index < this.upper) {\n      if (item.equals(array![index])) {\n        return index - this.lower;\n      }\n      index += 1;\n    }\n    return -1;\n  }\n\n  override lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const array = this.record.array;\n    const n = this.length;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = this.lower + Math.min(index, n - 1);\n    while (index >= this.lower) {\n      if (item.equals(array![index])) {\n        return index - this.lower;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  override getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index >= 0 && index < n) {\n      return this.record.array![this.lower + index]!;\n    } else {\n      return Item.absent();\n    }\n  }\n\n  override setItem(index: number, newItem: AnyItem): this {\n    if ((this.record.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    newItem = Item.fromAny(newItem);\n    const n = this.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index < 0 || index > n) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((this.record.flags & Record.AliasedFlag) !== 0) {\n      this.setItemAliased(index, newItem);\n    } else {\n      this.setItemMutable(index, newItem);\n    }\n    return this;\n  }\n\n  /** @hidden */\n  setItemAliased(index: number, newItem: Item): void {\n    const record = this.record;\n    const n = record.length;\n    const oldArray = record.array;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      newArray[i] = oldArray![i];\n    }\n    const oldItem = oldArray !== null ? oldArray[this.lower + index] : null;\n    newArray[this.lower + index] = newItem;\n    Object.defineProperty(record, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    if (newItem instanceof Field) {\n      if (!(oldItem instanceof Field)) {\n        Object.defineProperty(record, \"fieldCount\", {\n          value: record.fieldCount + 1,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    } else if (oldItem instanceof Field) {\n      Object.defineProperty(record, \"fieldCount\", {\n        value: record.fieldCount - 1,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    Object.defineProperty(record, \"flags\", {\n      value: record.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  setItemMutable(index: number, newItem: Item): void {\n    const record = this.record;\n    const array = record.array!;\n    const oldItem = array[this.lower + index];\n    array[this.lower + index] = newItem;\n    if (newItem instanceof Field) {\n      Object.defineProperty(record, \"table\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      if (!(oldItem instanceof Field)) {\n        Object.defineProperty(record, \"fieldCount\", {\n          value: record.fieldCount + 1,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    } else if (oldItem instanceof Field) {\n      Object.defineProperty(record, \"table\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(record, \"fieldCount\", {\n        value: record.fieldCount - 1,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  override push(...newItems: AnyItem[]): number {\n    if ((this.record.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this.record.flags & Record.AliasedFlag) !== 0) {\n      this.pushAliased(...newItems);\n    } else {\n      this.pushMutable(...newItems);\n    }\n    return this.length;\n  }\n\n  /** @hidden */\n  pushAliased(...newItems: AnyItem[]): void {\n    const record = this.record;\n    const k = newItems.length;\n    let m = record.length;\n    let n = record.fieldCount;\n    const oldArray = record.array;\n    const newArray = new Array(Record.expand(m + k));\n    if (oldArray !== null) {\n      for (let i = 0; i < this.upper; i += 1) {\n        newArray[i] = oldArray[i];\n      }\n      for (let i = this.upper; i < m; i += 1) {\n        newArray[i + k] = oldArray[i];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + this.upper] = newItem;\n      m += 1;\n      if (newItem instanceof Field) {\n        n += 1;\n      }\n    }\n    Object.defineProperty(record, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"length\", {\n      value: m,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"fieldCount\", {\n      value: n,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"flags\", {\n      value: record.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"upper\", {\n      value: this.upper + k,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  pushMutable(...newItems: AnyItem[]): void {\n    const record = this.record;\n    const k = newItems.length;\n    let m = record.length;\n    let n = record.fieldCount;\n    const oldArray = record.array!;\n    let newArray;\n    if (oldArray === null || m + k > oldArray.length) {\n      newArray = new Array(Record.expand(m + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < this.upper; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    for (let i = m - 1; i >= this.upper; i -= 1) {\n      newArray[i + k] = oldArray[i];\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + this.upper] = newItem;\n      m += 1;\n      if (newItem instanceof Field) {\n        n += 1;\n        Object.defineProperty(record, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    }\n    Object.defineProperty(record, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"length\", {\n      value: m,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"fieldCount\", {\n      value: n,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"upper\", {\n      value: this.upper + k,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override splice(start: number, deleteCount: number = 0, ...newItems: AnyItem[]): Item[] {\n    if ((this.record.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const n = this.length;\n    if (start < 0) {\n      start = n + start;\n    }\n    start = Math.min(Math.max(0, start), n);\n    deleteCount = Math.min(Math.max(0, deleteCount), n - start);\n    let deleted;\n    if ((this.record.flags & Record.AliasedFlag) !== 0) {\n      deleted = this.record.spliceAliased(this.lower + start, deleteCount, ...newItems);\n    } else {\n      deleted = this.record.spliceMutable(this.lower + start, deleteCount, ...newItems);\n    }\n    Object.defineProperty(this, \"upper\", {\n      value: this.upper + newItems.length - deleted.length,\n      enumerable: true,\n      configurable: true,\n    });\n    return deleted;\n  }\n\n  override delete(key: AnyValue): Item {\n    if ((this.record.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    if ((this.record.flags & Record.AliasedFlag) !== 0) {\n      return this.deleteAliased(key);\n    } else {\n      return this.deleteMutable(key);\n    }\n  }\n\n  /** @hidden */\n  deleteAliased(key: Value): Item {\n    const record = this.record;\n    const n = record.length;\n    const oldArray = record.array;\n    const newArray = new Array(Record.expand(n));\n    for (let i = this.lower; i < this.upper; i += 1) {\n      const item = oldArray![i];\n      if (item instanceof Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          newArray[i] = oldArray![j];\n        }\n        Object.defineProperty(record, \"array\", {\n          value: newArray,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(record, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(record, \"length\", {\n          value: n - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(record, \"fieldCount\", {\n          value: record.fieldCount - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(record, \"flags\", {\n          value: record.flags & ~Record.AliasedFlag,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"upper\", {\n          value: this.upper - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        return item;\n      }\n      newArray[i] = item;\n    }\n    return Item.absent();\n  }\n\n  /** @hidden */\n  deleteMutable(key: Value): Item {\n    const record = this.record;\n    const n = record.length;\n    const array = record.array;\n    for (let i = this.lower; i < this.upper; i += 1) {\n      const item = array![i]!;\n      if (item instanceof Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          array![i] = array![j]!;\n        }\n        array![n - 1] = void 0 as any;\n        Object.defineProperty(record, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(record, \"length\", {\n          value: n - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(record, \"fieldCount\", {\n          value: record.fieldCount - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        Object.defineProperty(this, \"upper\", {\n          value: this.upper - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        return item;\n      }\n    }\n    return Item.absent();\n  }\n\n  override clear(): void {\n    if ((this.record.flags & Record.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this.record.flags & Record.AliasedFlag) !== 0) {\n      this.clearAliased();\n    } else {\n      this.clearMutable();\n    }\n  }\n\n  /** @hidden */\n  clearAliased(): void {\n    const record = this.record;\n    const m = record.length;\n    let n = record.fieldCount;\n    const l = m - this.length;\n    const oldArray = record.array;\n    const newArray = new Array(Record.expand(l));\n    let i = 0;\n    while (i < this.lower) {\n      newArray[i] = oldArray![i];\n      i += 1;\n    }\n    while (i < this.upper) {\n      if (oldArray![i] instanceof Field) {\n        n -= 1;\n      }\n      i += 1;\n    }\n    i = this.lower;\n    let j = this.upper;\n    while (j < m) {\n      newArray[i] = oldArray![j];\n      i += 1;\n      j += 1;\n    }\n    Object.defineProperty(record, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"table\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"length\", {\n      value: l,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"fieldCount\", {\n      value: n,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"flags\", {\n      value: record.flags & ~Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"upper\", {\n      value: this.lower,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  clearMutable(): void {\n    const record = this.record;\n    const m = record.length;\n    let n = record.fieldCount;\n    const array = record.array;\n    let i = this.lower;\n    while (i < this.upper) {\n      if (array![i] instanceof Field) {\n        n -= 1;\n      }\n      i += 1;\n    }\n    i = this.lower;\n    let j = this.upper;\n    while (j < m) {\n      const item = array![j]!;\n      if (item instanceof Field) {\n        Object.defineProperty(record, \"table\", {\n          value: null,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n      array![i] = item;\n      i += 1;\n      j += 1;\n    }\n    Object.defineProperty(record, \"length\", {\n      value: i,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(record, \"fieldCount\", {\n      value: n,\n      enumerable: true,\n      configurable: true,\n    });\n    while (i < m) {\n      array![i] = void 0 as any;\n      i += 1;\n    }\n    Object.defineProperty(this, \"upper\", {\n      value: this.lower,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isAliased(): boolean {\n    return (this.record.flags & Record.AliasedFlag) !== 0;\n  }\n\n  override isMutable(): boolean {\n    return (this.record.flags & Record.ImmutableFlag) === 0;\n  }\n\n  override alias(): void {\n    Object.defineProperty(this.record, \"flags\", {\n      value: this.record.flags | Record.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override branch(): RecordMap {\n    const m = this.length;\n    let n = 0;\n    const oldArray = this.record.array;\n    const newArray = new Array(Record.expand(m));\n    let i = this.lower;\n    let j = 0;\n    while (j < m) {\n      const item = oldArray![i];\n      newArray[j] = item;\n      if (item instanceof Field) {\n        n += 1;\n      }\n      i += 1;\n      j += 1;\n    }\n    return new RecordMap(newArray, null, m, n, 0);\n  }\n\n  override clone(): RecordMap {\n    const m = this.length;\n    let n = 0;\n    const oldArray = this.record.array;\n    const newArray = new Array(Record.expand(m));\n    let i = this.lower;\n    let j = 0;\n    while (j < m) {\n      const item = oldArray![i]!;\n      newArray[j] = item.clone();\n      if (item instanceof Field) {\n        n += 1;\n      }\n      i += 1;\n      j += 1;\n    }\n    return new RecordMap(newArray, null, m, n, 0);\n  }\n\n  override commit(): this {\n    this.record.commit();\n    return this;\n  }\n\n  override subRecord(lower?: number, upper?: number): Record {\n    const n = this.length;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    if (lower < 0 || upper > n || lower > upper) {\n      throw new RangeError(lower + \", \" + upper);\n    }\n    return new RecordMapView(this.record, this.lower + lower, this.upper + upper);\n  }\n\n  override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined;\n  override forEach<T, S>(callback: (this: S | undefined, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined {\n    const array = this.record.array;\n    for (let i = this.lower, n = this.upper; i < n; i += 1) {\n      const result = callback.call(thisArg, array![i]!, i);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n}\nObject.defineProperty(RecordMapView.prototype, \"fieldCount\", {\n  get(this: RecordMapView): number {\n    const array = this.record.array;\n    let k = 0;\n    for (let i = this.lower, n = this.upper; i < n; i += 1) {\n      if (array![i] instanceof Field) {\n        k += 1;\n      }\n    }\n    return k;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Random, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Input, OutputSettings, Output, Writer, Unicode, Base16, Base64} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item} from \"./Item\";\nimport {Value} from \"./Value\";\nimport {DataOutput} from \"./\"; // forward import\n\nexport type AnyData = Data | Uint8Array;\n\nexport class Data extends Value {\n  constructor(array: Uint8Array | null, size: number, flags: number) {\n    super();\n    Object.defineProperty(this, \"array\", {\n      value: array,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"size\", {\n      value: size,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: flags,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly array!: Uint8Array | null;\n\n  override isConstant(): boolean {\n    return true;\n  }\n\n  readonly size!: number;\n\n  /** @hidden */\n  readonly flags!: number;\n\n  getByte(index: number): number {\n    if (index < 0 || index >= this.size) {\n      throw new RangeError(\"\" + index);\n    }\n    return this.array![index]!;\n  }\n\n  setByte(index: number, value: number): Data {\n    const flags = this.flags;\n    if ((flags & Data.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    } else if (index < 0 || index >= this.size) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((flags & Data.AliasedFlag) !== 0) {\n      return this.setByteAliased(index, value);\n    } else {\n      return this.setByteMutable(index, value);\n    }\n  }\n\n  /** @hidden */\n  setByteAliased(index: number, value: number): Data {\n    const n = this.size;\n    const oldArray = this.array!;\n    const newArray = new Uint8Array(Data.expand(n));\n    newArray.set(oldArray, 0);\n    newArray[index] = value;\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Data.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  /** @hidden */\n  setByteMutable(index: number, value: number): Data {\n    this.array![index] = value;\n    return this;\n  }\n\n  addByte(value: number): Data {\n    const flags = this.flags;\n    if ((flags & Data.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((flags & Data.AliasedFlag) !== 0) {\n      return this.addByteAliased(value);\n    } else {\n      return this.addByteMutable(value);\n    }\n  }\n\n  /** @hidden */\n  addByteAliased(value: number): Data {\n    const n = this.size;\n    const oldArray = this.array;\n    const newArray = new Uint8Array(Data.expand(n + 1));\n    if (oldArray !== null) {\n      newArray.set(oldArray, 0);\n    }\n    newArray[n] = value;\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"size\", {\n      value: n + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Data.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  /** @hidden */\n  addByteMutable(value: number): Data {\n    const n = this.size;\n    const oldArray = this.array;\n    let newArray;\n    if (oldArray === null || n + 1 > oldArray.length) {\n      newArray = new Uint8Array(Data.expand(n + 1));\n      if (oldArray !== null) {\n        newArray.set(oldArray, 0);\n      }\n      Object.defineProperty(this, \"array\", {\n        value: newArray,\n        enumerable: true,\n        configurable: true,\n      });\n    } else {\n      newArray = oldArray;\n    }\n    newArray[n] = value;\n    Object.defineProperty(this, \"size\", {\n      value: n + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  addData(data: Data): Data {\n    let array = data.array;\n    if (array !== null) {\n      const size = data.size;\n      if (array.length > size) {\n        array = array.slice(0, size);\n      }\n      return this.addUint8Array(array);\n    } else {\n      return this;\n    }\n  }\n\n  addUint8Array(array: Uint8Array): Data {\n    const flags = this.flags;\n    if ((flags & Data.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((flags & Data.AliasedFlag) !== 0) {\n      return this.addUint8ArrayAliased(array);\n    } else {\n      return this.addUint8ArrayMutable(array);\n    }\n  }\n\n  /** @hidden */\n  addUint8ArrayAliased(array: Uint8Array): Data {\n    const size = array.length;\n    if (size === 0) {\n      return this;\n    }\n    const n = this.size;\n    const oldArray = this.array;\n    const newArray = new Uint8Array(Data.expand(n + size));\n    if (oldArray !== null) {\n      newArray.set(oldArray, 0);\n    }\n    newArray.set(array, n);\n    Object.defineProperty(this, \"array\", {\n      value: newArray,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"size\", {\n      value: n + size,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags & ~Data.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  /** @hidden */\n  addUint8ArrayMutable(array: Uint8Array): Data {\n    const size = array.length;\n    if (size === 0) {\n      return this;\n    }\n    const n = this.size;\n    const oldArray = this.array;\n    let newArray;\n    if (oldArray === null || n + size > oldArray.length) {\n      newArray = new Uint8Array(Data.expand(n + size));\n      if (oldArray !== null) {\n        newArray.set(oldArray, 0);\n      }\n      Object.defineProperty(this, \"array\", {\n        value: newArray,\n        enumerable: true,\n        configurable: true,\n      });\n    } else {\n      newArray = oldArray;\n    }\n    newArray.set(array, n);\n    Object.defineProperty(this, \"size\", {\n      value: n + size,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  clear(): void {\n    if ((this.flags & Data.ImmutableFlag) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    Object.defineProperty(this, \"array\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"size\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: Data.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  toUint8Array(): Uint8Array {\n    const oldArray = this.array;\n    const flags = this.flags;\n    if ((flags & Data.ImmutableFlag) !== 0) {\n      return oldArray !== null ? oldArray.slice(0) : new Uint8Array(0);\n    } else if ((flags & Data.AliasedFlag) !== 0 || this.size !== oldArray!.length) {\n      const newArray = oldArray !== null ? oldArray.slice(0) : new Uint8Array(0);\n      Object.defineProperty(this, \"array\", {\n        value: newArray,\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"flags\", {\n        value: this.flags & ~Data.AliasedFlag,\n        enumerable: true,\n        configurable: true,\n      });\n      return newArray;\n    } else {\n      return oldArray!;\n    }\n  }\n\n  asUint8Array(): Uint8Array | undefined {\n    let array: Uint8Array | undefined;\n    if (this.array !== null && this.size > 0) {\n      array = this.array;\n      if (array.length !== this.size) {\n        array = new Uint8Array(array.buffer, array.byteOffset, this.size);\n      }\n    } else {\n      array = void 0;\n    }\n    return array;\n  }\n\n  override toAny(): AnyData {\n    return this.toUint8Array();\n  }\n\n  override isAliased(): boolean {\n    return (this.flags & Data.AliasedFlag) !== 0;\n  }\n\n  override isMutable(): boolean {\n    return (this.flags & Data.ImmutableFlag) === 0;\n  }\n\n  override branch(): Data {\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags | Data.AliasedFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    return new Data(this.array, this.size, Data.AliasedFlag);\n  }\n\n  override clone(): Data {\n    return this.branch();\n  }\n\n  override commit(): this {\n    Object.defineProperty(this, \"flags\", {\n      value: this.flags | Data.ImmutableFlag,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  writeBase16(output: Output, base16: Base16 = Base16.uppercase): Writer<unknown, unknown> {\n    let array = this.array;\n    const size = this.size;\n    if (array !== null && size !== 0) {\n      if (array.length !== size) {\n        array = array.slice(0, size);\n      }\n      return base16.writeUint8Array(array, output);\n    } else {\n      return Writer.end();\n    }\n  }\n\n  toBase16(base16: Base16 = Base16.uppercase): string {\n    const output = Unicode.stringOutput();\n    this.writeBase16(output, base16);\n    return output.bind();\n  }\n\n  writeBase64(output: Output, base64: Base64 = Base64.standard()): Writer<unknown, unknown> {\n    let array = this.array;\n    const size = this.size;\n    if (array !== null && size !== 0) {\n      if (array.length !== size) {\n        array = array.slice(0, size);\n      }\n      return base64.writeUint8Array(array, output);\n    } else {\n      return Writer.end();\n    }\n  }\n\n  toBase64(base64: Base64 = Base64.standard()): string {\n    const output = Unicode.stringOutput();\n    this.writeBase64(output, base64);\n    return output.bind();\n  }\n\n  override interpolateTo(that: Data): Interpolator<Data>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    return super.interpolateTo(that);\n  }\n\n  override get typeOrder(): number {\n    return 4;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Data) {\n      const xs = this.array!;\n      const ys = that.array!;\n      const xn = this.size;\n      const yn = that.size;\n      let order = 0;\n      let i = 0;\n      do {\n        if (i < xn && i < yn) {\n          order = xs[i]! - ys[i]!;\n          i += 1;\n        } else {\n          break;\n        }\n      } while (order === 0);\n      if (order > 0) {\n        return 1;\n      } else if (order < 0) {\n        return -1;\n      } else if (xn > yn) {\n        return 1;\n      } else if (xn < yn) {\n        return -1;\n      } else {\n        return 0;\n      }\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: Item): boolean {\n    return this.equals(that);\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Data) {\n      const xs = this.array!;\n      const ys = that.array!;\n      const xn = this.size;\n      if (xn !== that.size) {\n        return false;\n      }\n      for (let i = 0; i < xn; i += 1) {\n        if (xs[i] !== ys[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mixUint8Array(Constructors.hash(Data),\n        this.array !== null ? this.array : new Uint8Array(0)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Data\").write(46/*'.'*/);\n    if (this.size === 0) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"base16\").write(40/*'('*/).write(34/*'\"'*/);\n      this.writeBase16(output);\n      output = output.write(34/*'\"'*/).write(41/*')'*/);\n    }\n  }\n\n  override display(output: Output): void {\n    this.debug(output);\n  }\n\n  /** @hidden */\n  static readonly AliasedFlag: number = 1 << 0;\n  /** @hidden */\n  static readonly ImmutableFlag: number = 1 << 1;\n\n  @Lazy\n  static override empty(): Data {\n    return new Data(null, 0, Data.AliasedFlag | Data.ImmutableFlag);\n  }\n\n  static create(initialCapacity?: number): Data {\n    if (initialCapacity === void 0) {\n      return new Data(null, 0, Data.AliasedFlag);\n    } else {\n      return new Data(new Uint8Array(initialCapacity), 0, 0);\n    }\n  }\n\n  static wrap(value: Uint8Array): Data {\n    return new Data(value, value.length, Data.AliasedFlag);\n  }\n\n  static fromBase16(input: Input | string): Data {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    return Base16.parse(input, Data.output()).bind();\n  }\n\n  static fromBase64(input: Input | string, base64: Base64 = Base64.standard()): Data {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    return base64.parse(input, Data.output()).bind();\n  }\n\n  static override fromAny(value: AnyData): Data {\n    if (value instanceof Data) {\n      return value;\n    } else if (value instanceof Uint8Array) {\n      return Data.wrap(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static random(size: number): Data {\n    const array = new Uint8Array(size);\n    Random.fillBytes(array);\n    return Data.wrap(array);\n  }\n\n  static output(): Output<Data>;\n  static output(initialCapacity: number): Output<Data>;\n  static output(data: Data): Output<Data>;\n  static output(data?: number | Data): Output<Data> {\n    if (!(data instanceof Data)) {\n      data = Data.create(data);\n    }\n    return new DataOutput(data, OutputSettings.standard());\n  }\n\n  /** @hidden */\n  static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings, Output} from \"@swim/codec\";\nimport type {Data} from \"./Data\";\n\n/** @hidden */\nexport class DataOutput extends Output<Data> {\n  /** @hidden */\n  readonly data!: Data;\n\n  constructor(data: Data, settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"data\", {\n      value: data,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return true;\n  }\n\n  override isFull(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): Output<Data> {\n    return this;\n  }\n\n  override write(b: number | string): Output<Data> {\n    if (typeof b === \"number\") {\n      this.data.addByte(b);\n      return this;\n    } else {\n      throw new TypeError(\"\" + b);\n    }\n  }\n\n  override writeln(string?: string): Output<Data> {\n    throw new TypeError(\"\" + string);\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): Output<Data> {\n    settings = OutputSettings.fromAny(settings);\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override bind(): Data {\n    return this.data;\n  }\n\n  override clone(): Output<Data> {\n    return new DataOutput(this.data.branch(), this.settings);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Numbers, Strings, HashGenCacheSet} from \"@swim/util\";\nimport {OutputSettings, Output, Format} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Num} from \"./\"; // forward import\nimport {TextOutput} from \"./\"; // forward import\n\nexport type AnyText = Text | string;\n\nexport class Text extends Value {\n  private constructor(value: string) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"hashValue\", {\n      value: void 0,\n      configurable: true,\n    });\n  }\n\n  override isConstant(): boolean {\n    return true;\n  }\n\n  readonly value!: string;\n\n  get size(): number {\n    return this.value.length;\n  }\n\n  override stringValue(): string;\n  override stringValue<T>(orElse: T): string;\n  override stringValue<T>(orElse?: T): string {\n    return this.value;\n  }\n\n  override numberValue(): number | undefined;\n  override numberValue<T>(orElse: T): number | T;\n  override numberValue<T>(orElse?: T): number | T | undefined {\n    try {\n      return Num.parse(this.value).numberValue();\n    } catch (error) {\n      return orElse;\n    }\n  }\n\n  override booleanValue(): boolean | undefined;\n  override booleanValue<T>(orElse: T): boolean | T;\n  override booleanValue<T>(orElse?: T): boolean | T | undefined {\n    if (this.value === \"true\") {\n      return true;\n    } else if (this.value === \"false\") {\n      return false;\n    } else {\n      return orElse;\n    }\n  }\n\n  override toAny(): AnyText {\n    return this.value;\n  }\n\n  override valueOf(): string {\n    return this.value;\n  }\n\n  override plus(that: AnyValue): Value;\n  override plus(that: AnyItem): Item;\n  override plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Text) {\n      return Text.from(this.value + that.value);\n    }\n    return super.plus(that);\n  }\n\n  override branch(): Text {\n    return this;\n  }\n\n  override clone(): Text {\n    return this;\n  }\n\n  override commit(): this {\n    return this;\n  }\n\n  override interpolateTo(that: Text): Interpolator<Text>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    return super.interpolateTo(that);\n  }\n\n  override get typeOrder(): number {\n    return 5;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Text) {\n      return this.value.localeCompare(that.value);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown): boolean {\n    return this.equals(that);\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Text) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  /** @hidden */\n  readonly hashValue!: number | undefined;\n\n  override hashCode(): number {\n    let hashValue = this.hashValue;\n    if (hashValue === void 0) {\n      hashValue = Strings.hash(this.value);\n      Object.defineProperty(this, \"hashValue\", {\n        value: hashValue,\n      });\n    }\n    return hashValue;\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Text\").write(46/*'.'*/);\n    if (this.value.length === 0) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"from\").write(40/*'('*/).debug(this.value).write(41/*')'*/);\n    }\n  }\n\n  override display(output: Output): void {\n    Format.debug(this.value, output);\n  }\n\n  override toString(): string {\n    return this.value;\n  }\n\n  @Lazy\n  static override empty(): Text {\n    return new Text(\"\");\n  }\n\n  static from(value: string): Text {\n    const n = value.length;\n    if (n === 0) {\n      return Text.empty();\n    } else {\n      let text = new Text(value);\n      if (n <= 64) {\n        text = Text.cache.put(text);\n      }\n      return text;\n    }\n  }\n\n  static override fromAny(value: AnyText): Text {\n    if (value instanceof Text) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return Text.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static output(settings?: OutputSettings): Output<Text> {\n    if (settings === void 0) {\n      settings = OutputSettings.standard();\n    }\n    return new TextOutput(\"\", settings);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get cache(): HashGenCacheSet<Text> {\n    const cacheSize = 128;\n    return new HashGenCacheSet<Text>(cacheSize);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings, Output} from \"@swim/codec\";\nimport {Text} from \"./Text\";\n\n/** @hidden */\nexport class TextOutput extends Output<Text> {\n  /** @hidden */\n  readonly string!: string;\n\n  constructor(string: string, settings: OutputSettings) {\n    super();\n    Object.defineProperty(this, \"string\", {\n      value: string,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isCont(): boolean {\n    return true;\n  }\n\n  override isFull(): boolean {\n    return false;\n  }\n\n  override isDone(): boolean {\n    return false;\n  }\n\n  override isError(): boolean {\n    return false;\n  }\n\n  override isPart(): boolean {\n    return false;\n  }\n\n  override asPart(part: boolean): Output<Text> {\n    return this;\n  }\n\n  override write(token: number | string): Output<Text> {\n    if (typeof token === \"number\") {\n      if ((token >= 0x0000 && token <= 0xd7ff)\n          || (token >= 0xe000 && token <= 0xffff)) { // U+0000..U+D7FF | U+E000..U+FFFF\n        token = String.fromCharCode(token);\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        const u = token - 0x10000;\n        token = String.fromCharCode(0xd800 | (u >>> 10), 0xdc00 | (u & 0x3ff));\n      } else { // invalid code point\n        token = \"\\ufffd\";\n      }\n    }\n    Object.defineProperty(this, \"string\", {\n      value: this.string + token,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override readonly settings!: OutputSettings;\n\n  override withSettings(settings: AnyOutputSettings): Output<Text> {\n    settings = OutputSettings.fromAny(settings);\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  override bind(): Text {\n    return Text.from(this.string);\n  }\n\n  override clone(): Output<Text> {\n    return new TextOutput(this.string, this.settings);\n  }\n\n  override toString(): string {\n    return this.string;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, Lazy, Numbers, HashGenCacheSet} from \"@swim/util\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Output, Format} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {NumInterpolator} from \"./\"; // forward import\n\nexport type AnyNum = Num | number;\n\nexport class Num extends Value {\n  private constructor(value: number, flags?: number ) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: flags !== void 0 ? flags : 0,\n      enumerable: true,\n    });\n  }\n\n  override isConstant(): boolean {\n    return true;\n  }\n\n  readonly value!: number;\n\n  /** @hidden */\n  readonly flags!: number;\n\n  isNaN(): boolean {\n    return isNaN(this.value);\n  }\n\n  isInfinite(): boolean {\n    return !isNaN(this.value) && !isFinite(this.value);\n  }\n\n  isUint32(): boolean {\n    return (this.flags & Num.Uint32Flag) !== 0;\n  }\n\n  isUint64(): boolean {\n    return (this.flags & Num.Uint64Flag) !== 0;\n  }\n\n  override stringValue(): string;\n  override stringValue<T>(orElse: T): string;\n  override stringValue<T>(orElse?: T): string {\n    return \"\" + this.value;\n  }\n\n  override numberValue(): number;\n  override numberValue<T>(orElse: T): number;\n  override numberValue<T>(orElse?: T): number {\n    return this.value;\n  }\n\n  override booleanValue(): boolean;\n  override booleanValue<T>(orElse: T): boolean;\n  override booleanValue<T>(orElse?: T): boolean {\n    return !!this.value;\n  }\n\n  override toAny(): AnyNum {\n    return this.value;\n  }\n\n  override valueOf(): number {\n    return this.value;\n  }\n\n  override bitwiseOr(that: AnyValue): Value;\n  override bitwiseOr(that: AnyItem): Item;\n  override bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this.value | that.value) >>> 0);\n    }\n    return super.bitwiseOr(that);\n  }\n\n  override bitwiseXor(that: AnyValue): Value;\n  override bitwiseXor(that: AnyItem): Item;\n  override bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this.value ^ that.value) >>> 0);\n    }\n    return super.bitwiseXor(that);\n  }\n\n  override bitwiseAnd(that: AnyValue): Value;\n  override bitwiseAnd(that: AnyItem): Item;\n  override bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this.value & that.value) >>> 0);\n    }\n    return super.bitwiseAnd(that);\n  }\n\n  override plus(that: AnyValue): Value;\n  override plus(that: AnyItem): Item;\n  override plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this.value + that.value);\n    }\n    return super.plus(that);\n  }\n\n  override minus(that: AnyValue): Value;\n  override minus(that: AnyItem): Item;\n  override minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this.value - that.value);\n    }\n    return super.minus(that);\n  }\n\n  override times(that: AnyValue): Value;\n  override times(that: AnyItem): Item;\n  override times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this.value * that.value);\n    }\n    return super.times(that);\n  }\n\n  override divide(that: AnyValue): Value;\n  override divide(that: AnyItem): Item;\n  override divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this.value / that.value);\n    }\n    return super.divide(that);\n  }\n\n  override modulo(that: AnyValue): Value;\n  override modulo(that: AnyItem): Item;\n  override modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this.value % that.value);\n    }\n    return super.modulo(that);\n  }\n\n  override bitwiseNot(): Value {\n    return Num.from(~this.value >>> 0);\n  }\n\n  override negative(): Value {\n    return Num.from(-this.value);\n  }\n\n  override positive(): Value {\n    return this;\n  }\n\n  override inverse(): Value {\n    return Num.from(1 / this.value);\n  }\n\n  abs(): Num {\n    return Num.from(Math.abs(this.value));\n  }\n\n  ceil(): Num {\n    return Num.from(Math.ceil(this.value));\n  }\n\n  floor(): Num {\n    return Num.from(Math.floor(this.value));\n  }\n\n  round(): Num {\n    return Num.from(Math.round(this.value));\n  }\n\n  sqrt(): Num {\n    return Num.from(Math.sqrt(this.value));\n  }\n\n  pow(that: AnyNum): Num {\n    that = Num.fromAny(that);\n    return Num.from(Math.pow(this.value, that.value));\n  }\n\n  override max(that: Num): Num;\n  override max(that: Item): Item;\n  override max(that: Item): Item {\n    return this.compareTo(that) >= 0 ? this : that;\n  }\n\n  override min(that: Num): Num;\n  override min(that: Item): Item;\n  override min(that: Item): Item {\n    return this.compareTo(that) <= 0 ? this : that;\n  }\n\n  override interpolateTo(that: Num): Interpolator<Num>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof Num) {\n      return NumInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override get typeOrder(): number {\n    return 6;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Num) {\n      const x = this.value;\n      const y = that.value;\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Num) {\n      const x = this.value;\n      const y = that.value;\n      return x === y || isNaN(x) && isNaN(y) || Math.abs(y - x) < (epsilon !== void 0 ? epsilon : Equivalent.Epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Num) {\n      const x = this.value;\n      const y = that.value;\n      return x === y || isNaN(x) && isNaN(y);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Numbers.hash(this.value);\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Num\").write(46/*'.'*/).write(\"from\")\n        .write(40/*'('*/).display(this).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    Format.displayNumber(this.value, output);\n  }\n\n  /** @hidden */\n  static readonly Uint32Flag: number = 1;\n  /** @hidden */\n  static readonly Uint64Flag: number = 2;\n  /** @hidden */\n  static readonly TypeMask = 0x3;\n\n  @Lazy\n  static get zero(): Num {\n    return new Num(0);\n  }\n\n  @Lazy\n  static get negativeZero(): Num {\n    return new Num(-0);\n  }\n\n  @Lazy\n  static get one(): Num {\n    return new Num(1);\n  }\n\n  @Lazy\n  static get negativeOne(): Num {\n    return new Num(-1);\n  }\n\n  @Lazy\n  static get nan(): Num {\n    return new Num(NaN);\n  }\n\n  static uint32(value: number): Num {\n    return new Num(value, Num.Uint32Flag);\n  }\n\n  static uint64(value: number): Num {\n    return new Num(value, Num.Uint64Flag);\n  }\n\n  static from(value: number): Num {\n    if (value === 0) {\n      if (1 / value === -Infinity) {\n        return Num.negativeZero;\n      } else {\n        return Num.zero;\n      }\n    } else if (value === 1) {\n      return Num.one;\n    } else if (value === -1) {\n      return Num.negativeOne;\n    } else if (isNaN(value)) {\n      return Num.nan;\n    } else {\n      return Num.cache.put(new Num(value));\n    }\n  }\n\n  static override fromAny(value: AnyNum): Num {\n    if (value instanceof Num) {\n      return value;\n    } else if (typeof value === \"number\") {\n      return Num.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static parse(value: string): Num {\n    if (value === \"NaN\") {\n      return Num.nan;\n    } else {\n      const num = +value;\n      if (isFinite(num)) {\n        return Num.from(num);\n      }\n    }\n    throw new Error(value);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get cache(): HashGenCacheSet<Num> {\n    const cacheSize = 128;\n    return new HashGenCacheSet<Num>(cacheSize);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {Num} from \"./Num\";\n\n/** @hidden */\nexport const NumInterpolator = function (y0: Num, y1: Num): Interpolator<Num> {\n  const interpolator = function (u: number): Num {\n    const y0 = interpolator[0].value;\n    const y1 = interpolator[1].value;\n    return Num.from(y0 + u * (y1 - y0));\n  } as Interpolator<Num>;\n  Object.setPrototypeOf(interpolator, NumInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: Num, y1: Num): Interpolator<Num>;\n\n  /** @hidden */\n  prototype: Interpolator<Num>;\n};\n\nNumInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Numbers, Strings} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\n\nexport type AnyBool = Bool | boolean;\n\nexport class Bool extends Value {\n  private constructor(value: boolean) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"hashValue\", {\n      value: Strings.hash(value ? \"true\" : \"false\"),\n    });\n  }\n\n  override isDefinite(): boolean {\n    return this.value;\n  }\n\n  override isConstant(): boolean {\n    return true;\n  }\n\n  readonly value!: boolean;\n\n  override stringValue(): string;\n  override stringValue<T>(orElse: T): string;\n  override stringValue<T>(orElse?: T): string {\n    return this.value ? \"true\" : \"false\";\n  }\n\n  override booleanValue(): boolean;\n  override booleanValue<T>(orElse: T): boolean;\n  override booleanValue<T>(orElse?: T): boolean {\n    return this.value;\n  }\n\n  override toAny(): AnyBool {\n    return this.value;\n  }\n\n  override valueOf(): boolean {\n    return this.value;\n  }\n\n  override conditional(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    return this.value ? Item.fromAny(thenTerm) : Item.fromAny(elseTerm);\n  }\n\n  override or(that: AnyValue): Value;\n  override or(that: AnyItem): Item;\n  override or(that: AnyItem): Item {\n    return this.value ? this : Item.fromAny(that);\n  }\n\n  override and(that: AnyValue): Value;\n  override and(that: AnyItem): Item;\n  override and(that: AnyItem): Item {\n    return this.value ? Item.fromAny(that) : this;\n  }\n\n  override not(): Value {\n    return Bool.from(!this.value);\n  }\n\n  override get typeOrder(): number {\n    return 7;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Bool) {\n      if (this.value && !that.value) {\n        return -1;\n      } else if (!this.value && that.value) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown): boolean {\n    return this.equals(that);\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Bool) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  /** @hidden */\n  readonly hashValue!: number;\n\n  override hashCode(): number {\n    return this.hashValue;\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Bool\").write(46/*'.'*/).write(\"from\")\n        .write(40/*'('*/).write(this.value ? \"true\" : \"false\").write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    output = output.write(this.value ? \"true\" : \"false\");\n  }\n\n  @Lazy\n  static get true(): Bool {\n    return new Bool(true);\n  }\n\n  @Lazy\n  static get false(): Bool {\n    return new Bool(false);\n  }\n\n  static from(value: boolean): Bool {\n    return value ? Bool.true : Bool.false;\n  }\n\n  static override fromAny(value: AnyBool): Bool {\n    if (value instanceof Bool) {\n      return value;\n    } else if (typeof value === \"boolean\") {\n      return Bool.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item} from \"./Item\";\nimport {Value} from \"./Value\";\nimport {Record} from \"./Record\";\n\nexport type AnyExtant = Extant | null;\n\nexport class Extant extends Value {\n  /** @hidden */\n  private constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `true` because `Extant` is a defined value.\n   */\n  override isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns `false` because `Extant` is not a distinct value.\n   */\n  override isDistinct(): boolean {\n    return false;\n  }\n\n  /**\n   * Always returns `false` because `Extant` is not a definite value.\n   */\n  override isDefinite(): boolean {\n    return false;\n  }\n\n  override isConstant(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns an empty `Record` because `Extant` is not a distinct value.\n   */\n  override unflattened(): Record {\n    return Record.empty();\n  }\n\n  override not(): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns the empty `string` because `Extant` behaves like an empty\n   * `Record`, which converts to a `string` by concatenating the string values\n   * of all its members, if all its members convert to string values.\n   */\n  override stringValue(): string;\n  /**\n   * Always returns the empty `string` because `Extant` behaves like an empty\n   * `Record`, which converts to a `string` by concatenating the string values\n   * of all its members, if all its members convert to string values.\n   */\n  override stringValue<T>(orElse: T): string;\n  override stringValue<T>(orElse?: T): string {\n    return \"\";\n  }\n\n  /**\n   * Always returns `true` because `Extant` behaves like a truthy value.\n   */\n  override booleanValue(): boolean;\n  /**\n   * Always returns `true` because `Extant` behaves like a truthy value.\n   */\n  override booleanValue<T>(orElse: T): boolean;\n  override booleanValue<T>(orElse?: T): boolean {\n    return true;\n  }\n\n  override toAny(): AnyExtant {\n    return null;\n  }\n\n  override interpolateTo(that: Extant): Interpolator<Extant>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    return super.interpolateTo(that);\n  }\n\n  override get typeOrder(): number {\n    return 98;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown): boolean {\n    return this === that;\n  }\n\n  override equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  override hashCode(): number {\n    return Constructors.hash(Extant);\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Value\").write(46/*'.'*/).write(\"extant\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    output = output.write(\"null\");\n  }\n\n  @Lazy\n  static override extant(): Extant {\n    return new Extant();\n  }\n\n  static override fromAny(value: AnyExtant): Extant {\n    if (value instanceof Extant) {\n      return value;\n    } else if (value === null) {\n      return Extant.extant();\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Numbers, Constructors, Cursor} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Attr} from \"./Attr\";\nimport {Slot} from \"./Slot\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport type {AnyText} from \"./Text\";\n\nexport type AnyAbsent = Absent | undefined;\n\nexport class Absent extends Value {\n  /** @hidden */\n  private constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `false` because `Absent` represents an undefined value.\n   */\n  override isDefined(): boolean {\n    return false;\n  }\n\n  /**\n   * Always returns `false` because `Absent` is not a distinct value.\n   */\n  override isDistinct(): boolean {\n    return false;\n  }\n\n  /**\n   * Always returns `false` because `Absent` is not a definite value.\n   */\n  override isDefinite(): boolean {\n    return false;\n  }\n\n  override isConstant(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns an empty `Record` because `Absent` is not a distinct value.\n   */\n  override unflattened(): Record {\n    return Record.empty();\n  }\n\n  override updated(key: AnyValue, value: AnyValue): Record {\n    return Record.of(Slot.of(key, value));\n  }\n\n  override updatedAttr(key: AnyText, value: AnyValue): Record {\n    return Record.of(Attr.of(key, value));\n  }\n\n  override updatedSlot(key: AnyValue, value: AnyValue): Record {\n    return Record.of(Slot.of(key, value));\n  }\n\n  override appended(...items: AnyItem[]): Record {\n    return Record.of(items);\n  }\n\n  override prepended(...items: AnyItem[]): Record {\n    return Record.of(items);\n  }\n\n  override concat(...items: AnyItem[]): Record {\n    const record = Record.create();\n    for (let i = 0, n = items.length; i < n; i += 1) {\n      Item.fromAny(items[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  override conditional(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    return Item.fromAny(elseTerm);\n  }\n\n  override or(that: AnyValue): Value;\n  override or(that: AnyItem): Item;\n  override or(that: AnyItem): Item {\n    return Item.fromAny(that);\n  }\n\n  override and(that: AnyValue): Value;\n  override and(that: AnyItem): Item;\n  override and(that: AnyItem): Item {\n    return this;\n  }\n\n  override not(): Value {\n    return Value.extant();\n  }\n\n  /**\n   * Always returns `false` because `Absent` behaves like a falsey value.\n   */\n  override booleanValue(): boolean;\n  /**\n   * Always returns `false` because `Absent` behaves like a falsey value.\n   */\n  override booleanValue<T>(orElse: T): boolean;\n  override booleanValue<T>(orElse?: T): boolean {\n    return false;\n  }\n\n  override toAny(): AnyAbsent {\n    return void 0;\n  }\n\n  override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                         thisArg: S): T | undefined;\n  override forEach<T, S>(callback: (this: S | undefined, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined {\n    return void 0;\n  }\n\n  override iterator(): Cursor<Item> {\n    return Cursor.empty();\n  }\n\n  override interpolateTo(that: Absent): Interpolator<Absent>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    return super.interpolateTo(that);\n  }\n\n  override get typeOrder(): number {\n    return 99;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown): boolean {\n    return this === that;\n  }\n\n  override equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  override hashCode(): number {\n    return Constructors.hash(Absent);\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Value\").write(46/*'.'*/).write(\"absent\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    output = output.write(\"undefined\");\n  }\n\n  @Lazy\n  static override absent(): Absent {\n    return new Absent();\n  }\n\n  static override fromAny(value: AnyAbsent): Absent {\n    if (value instanceof Absent) {\n      return value;\n    } else if (value === void 0) {\n      return Absent.absent();\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Num} from \"./Num\";\nimport type {Operator} from \"./operator/Operator\";\nimport {ConditionalOperator} from \"./\"; // forward import\nimport {OrOperator} from \"./\"; // forward import\nimport {AndOperator} from \"./\"; // forward import\nimport {BitwiseOrOperator} from \"./\"; // forward import\nimport {BitwiseXorOperator} from \"./\"; // forward import\nimport {BitwiseAndOperator} from \"./\"; // forward import\nimport {LtOperator} from \"./\"; // forward import\nimport {LeOperator} from \"./\"; // forward import\nimport {EqOperator} from \"./\"; // forward import\nimport {NeOperator} from \"./\"; // forward import\nimport {GeOperator} from \"./\"; // forward import\nimport {GtOperator} from \"./\"; // forward import\nimport {PlusOperator} from \"./\"; // forward import\nimport {MinusOperator} from \"./\"; // forward import\nimport {TimesOperator} from \"./\"; // forward import\nimport {DivideOperator} from \"./\"; // forward import\nimport {ModuloOperator} from \"./\"; // forward import\nimport {NotOperator} from \"./\"; // forward import\nimport {BitwiseNotOperator} from \"./\"; // forward import\nimport {NegativeOperator} from \"./\"; // forward import\nimport {PositiveOperator} from \"./\"; // forward import\n\nexport abstract class Expression extends Value {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  override conditional(thenTerm: Value, elseTerm: Value): Value;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  override conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    elseTerm = Item.fromAny(elseTerm);\n    return new ConditionalOperator(this, thenTerm, elseTerm);\n  }\n\n  override or(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new OrOperator(this, that);\n  }\n\n  override and(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new AndOperator(this, that);\n  }\n\n  override bitwiseOr(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new BitwiseOrOperator(this, that);\n  }\n\n  override bitwiseXor(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new BitwiseXorOperator(this, that);\n  }\n\n  override bitwiseAnd(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new BitwiseAndOperator(this, that);\n  }\n\n  override lt(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new LtOperator(this, that);\n  }\n\n  override le(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new LeOperator(this, that);\n  }\n\n  override eq(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new EqOperator(this, that);\n  }\n\n  override ne(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new NeOperator(this, that);\n  }\n\n  override ge(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new GeOperator(this, that);\n  }\n\n  override gt(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new GtOperator(this, that);\n  }\n\n  override plus(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new PlusOperator(this, that);\n  }\n\n  override minus(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new MinusOperator(this, that);\n  }\n\n  override times(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new TimesOperator(this, that);\n  }\n\n  override divide(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new DivideOperator(this, that);\n  }\n\n  override modulo(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new ModuloOperator(this, that);\n  }\n\n  override not(): Operator {\n    return new NotOperator(this);\n  }\n\n  override bitwiseNot(): Operator {\n    return new BitwiseNotOperator(this);\n  }\n\n  override negative(): Operator {\n    return new NegativeOperator(this);\n  }\n\n  override positive(): Operator {\n    return new PositiveOperator(this);\n  }\n\n  override inverse(): Operator {\n    return new DivideOperator(Num.one, this);\n  }\n\n  override toAny(): AnyValue {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"../Item\";\nimport {Expression} from \"../Expression\";\nimport type {BinaryOperator} from \"./BinaryOperator\";\nimport type {UnaryOperator} from \"./UnaryOperator\";\nimport {OrOperator} from \"../\"; // forward import\nimport {AndOperator} from \"../\"; // forward import\nimport {BitwiseOrOperator} from \"../\"; // forward import\nimport {BitwiseXorOperator} from \"../\"; // forward import\nimport {BitwiseAndOperator} from \"../\"; // forward import\nimport {LtOperator} from \"../\"; // forward import\nimport {LeOperator} from \"../\"; // forward import\nimport {EqOperator} from \"../\"; // forward import\nimport {NeOperator} from \"../\"; // forward import\nimport {GeOperator} from \"../\"; // forward import\nimport {GtOperator} from \"../\"; // forward import\nimport {PlusOperator} from \"../\"; // forward import\nimport {MinusOperator} from \"../\"; // forward import\nimport {TimesOperator} from \"../\"; // forward import\nimport {DivideOperator} from \"../\"; // forward import\nimport {ModuloOperator} from \"../\"; // forward import\nimport {NotOperator} from \"../\"; // forward import\nimport {BitwiseNotOperator} from \"../\"; // forward import\nimport {NegativeOperator} from \"../\"; // forward import\nimport {PositiveOperator} from \"../\"; // forward import\n\nexport abstract class Operator extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  static binary(operand1: Item, operator: string, operand2: Item): BinaryOperator {\n    switch (operator) {\n      case \"||\": return new OrOperator(operand1, operand2);\n      case \"&&\": return new AndOperator(operand1, operand2);\n      case \"|\": return new BitwiseOrOperator(operand1, operand2);\n      case \"^\": return new BitwiseXorOperator(operand1, operand2);\n      case \"&\": return new BitwiseAndOperator(operand1, operand2);\n      case \"<\": return new LtOperator(operand1, operand2);\n      case \"<=\": return new LeOperator(operand1, operand2);\n      case \"==\": return new EqOperator(operand1, operand2);\n      case \"!=\": return new NeOperator(operand1, operand2);\n      case \">=\": return new GeOperator(operand1, operand2);\n      case \">\": return new GtOperator(operand1, operand2);\n      case \"+\": return new PlusOperator(operand1, operand2);\n      case \"-\": return new MinusOperator(operand1, operand2);\n      case \"*\": return new TimesOperator(operand1, operand2);\n      case \"/\": return new DivideOperator(operand1, operand2);\n      case \"%\": return new ModuloOperator(operand1, operand2);\n      default: throw new Error(operator);\n    }\n  }\n\n  static unary(operator: string, operand: Item): UnaryOperator {\n    switch (operator) {\n      case \"!\": return new NotOperator(operand);\n      case \"~\": return new BitwiseNotOperator(operand);\n      case \"-\": return new NegativeOperator(operand);\n      case \"+\": return new PositiveOperator(operand);\n      default: throw new Error(operator);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Interpolator} from \"@swim/mapping\";\nimport type {Item} from \"../Item\";\nimport {Operator} from \"./Operator\";\nimport {BinaryOperatorInterpolator} from \"../\"; // forward import\n\nexport abstract class BinaryOperator extends Operator {\n  constructor(operand1: Item, operand2: Item) {\n    super();\n    Object.defineProperty(this, \"operand1\", {\n      value: operand1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"operand2\", {\n      value: operand2,\n      enumerable: true,\n    });\n  }\n\n  readonly operand1!: Item;\n\n  abstract readonly operator: string;\n\n  readonly operand2!: Item;\n\n  override isConstant(): boolean {\n    return this.operand1.isConstant() && this.operand2.isConstant();\n  }\n\n  override interpolateTo(that: BinaryOperator): Interpolator<BinaryOperator>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof BinaryOperator && this.operator === that.operator) {\n      return BinaryOperatorInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport type {Item} from \"../Item\";\nimport {Operator} from \"./Operator\";\nimport type {BinaryOperator} from \"./BinaryOperator\";\n\n/** @hidden */\nexport interface BinaryOperatorInterpolator extends Interpolator<BinaryOperator> {\n  /** @hidden */\n  readonly operand1Interpolator: Interpolator<Item>;\n  /** @hidden */\n  readonly operator: string;\n  /** @hidden */\n  readonly operand2Interpolator: Interpolator<Item>;\n\n  readonly 0: BinaryOperator;\n\n  readonly 1: BinaryOperator;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const BinaryOperatorInterpolator = function (y0: BinaryOperator, y1: BinaryOperator): BinaryOperatorInterpolator {\n  const operator = y0.operator;\n  if (operator !== y1.operator) {\n    throw new Error();\n  }\n  const interpolator = function (u: number): BinaryOperator {\n    const operand1 = interpolator.operand1Interpolator(u);\n    const operand2 = interpolator.operand2Interpolator(u);\n    return Operator.binary(operand1, interpolator.operator, operand2);\n  } as BinaryOperatorInterpolator;\n  Object.setPrototypeOf(interpolator, BinaryOperatorInterpolator.prototype);\n  Object.defineProperty(interpolator, \"operand1Interpolator\", {\n    value: y0.operand1.interpolateTo(y1.operand1),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"operator\", {\n    value: operator,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"operand2Interpolator\", {\n    value: y0.operand2.interpolateTo(y1.operand2),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: BinaryOperator, y1: BinaryOperator): BinaryOperatorInterpolator;\n\n  /** @hidden */\n  prototype: BinaryOperatorInterpolator;\n};\n\nBinaryOperatorInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(BinaryOperatorInterpolator.prototype, 0, {\n  get(this: BinaryOperatorInterpolator): BinaryOperator {\n    const operand1 = this.operand1Interpolator[0];\n    const operand2 = this.operand2Interpolator[0];\n    return Operator.binary(operand1, this.operator, operand2);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(BinaryOperatorInterpolator.prototype, 1, {\n  get(this: BinaryOperatorInterpolator): BinaryOperator {\n    const operand1 = this.operand1Interpolator[1];\n    const operand2 = this.operand2Interpolator[1];\n    return Operator.binary(operand1, this.operator, operand2);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nBinaryOperatorInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof BinaryOperatorInterpolator) {\n    return this.operator === that.operator\n        && this.operand1Interpolator.equals(that.operand1Interpolator)\n        && this.operand2Interpolator.equals(that.operand2Interpolator);\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Interpolator} from \"@swim/mapping\";\nimport type {Item} from \"../Item\";\nimport {Operator} from \"./Operator\";\nimport {UnaryOperatorInterpolator} from \"../\"; // forward import\n\nexport abstract class UnaryOperator extends Operator {\n  constructor(operand: Item) {\n    super();\n    Object.defineProperty(this, \"operand\", {\n      value: operand,\n      enumerable: true,\n    });\n  }\n\n  readonly operand!: Item;\n\n  abstract readonly operator: string;\n\n  override isConstant(): boolean {\n    return this.operand.isConstant();\n  }\n\n  override interpolateTo(that: UnaryOperator): Interpolator<UnaryOperator>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof UnaryOperator && this.operator === that.operator) {\n      return UnaryOperatorInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport type {Item} from \"../Item\";\nimport {Operator} from \"./Operator\";\nimport type {UnaryOperator} from \"./UnaryOperator\";\n\n/** @hidden */\nexport interface UnaryOperatorInterpolator extends Interpolator<UnaryOperator> {\n  /** @hidden */\n  readonly operator: string;\n  /** @hidden */\n  readonly operandInterpolator: Interpolator<Item>;\n\n  readonly 0: UnaryOperator;\n\n  readonly 1: UnaryOperator;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const UnaryOperatorInterpolator = function (y0: UnaryOperator, y1: UnaryOperator): UnaryOperatorInterpolator {\n  const operator = y0.operator;\n  if (operator !== y1.operator) {\n    throw new Error();\n  }\n  const interpolator = function (u: number): UnaryOperator {\n    const operand = interpolator.operandInterpolator(u);\n    return Operator.unary(interpolator.operator, operand);\n  } as UnaryOperatorInterpolator;\n  Object.setPrototypeOf(interpolator, UnaryOperatorInterpolator.prototype);\n  Object.defineProperty(interpolator, \"operator\", {\n    value: operator,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"operandInterpolator\", {\n    value: y0.operand.interpolateTo(y1.operand),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: UnaryOperator, y1: UnaryOperator): UnaryOperatorInterpolator;\n\n  /** @hidden */\n  prototype: UnaryOperatorInterpolator;\n};\n\nUnaryOperatorInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(UnaryOperatorInterpolator.prototype, 0, {\n  get(this: UnaryOperatorInterpolator): UnaryOperator {\n    const operand = this.operandInterpolator[0];\n    return Operator.unary(this.operator, operand);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(UnaryOperatorInterpolator.prototype, 1, {\n  get(this: UnaryOperatorInterpolator): UnaryOperator {\n    const operand = this.operandInterpolator[1];\n    return Operator.unary(this.operator, operand);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nUnaryOperatorInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof UnaryOperatorInterpolator) {\n    return this.operator === that.operator\n        && this.operandInterpolator.equals(that.operandInterpolator);\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item} from \"../Item\";\nimport {Operator} from \"./Operator\";\nimport {ConditionalOperatorInterpolator} from \"../\"; // forward import\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class ConditionalOperator extends Operator {\n  constructor(ifTerm: Item, thenTerm: Item, elseTerm: Item) {\n    super();\n    Object.defineProperty(this, \"ifTerm\", {\n      value: ifTerm.commit(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"thenTerm\", {\n      value: thenTerm.commit(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"elseTerm\", {\n      value: elseTerm.commit(),\n      enumerable: true,\n    });\n  }\n\n  readonly ifTerm!: Item;\n\n  readonly thenTerm!: Item;\n\n  readonly elseTerm!: Item;\n\n  override isConstant(): boolean {\n    return this.ifTerm.isConstant() && this.thenTerm.isConstant()\n        && this.elseTerm.isConstant();\n  }\n\n  override get precedence(): number {\n    return 2;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result;\n    const ifTerm = this.ifTerm.evaluate(interpreter);\n    if (ifTerm.isDefinite()) {\n      const theTerm = this.thenTerm.evaluate(interpreter);\n      result = theTerm;\n    } else {\n      const elseTerm = this.elseTerm.evaluate(interpreter);\n      result = elseTerm;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const ifTerm = this.ifTerm.substitute(interpreter);\n    const thenTerm = this.thenTerm.substitute(interpreter);\n    const elseTerm = this.elseTerm.substitute(interpreter);\n    return new ConditionalOperator(ifTerm, thenTerm, elseTerm);\n  }\n\n  override interpolateTo(that: ConditionalOperator): Interpolator<ConditionalOperator>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof ConditionalOperator) {\n      return ConditionalOperatorInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override get typeOrder(): number {\n    return 20;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof ConditionalOperator) {\n      let order = this.ifTerm.compareTo(that.ifTerm);\n      if (order === 0) {\n        order = this.thenTerm.compareTo(that.thenTerm);\n        if (order === 0) {\n          order = this.elseTerm.compareTo(that.elseTerm);\n        }\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ConditionalOperator) {\n      return this.ifTerm.equivalentTo(that.ifTerm, epsilon)\n          && this.thenTerm.equivalentTo(that.thenTerm, epsilon)\n          && this.elseTerm.equivalentTo(that.elseTerm, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ConditionalOperator) {\n      return this.ifTerm.equals(that.ifTerm) && this.thenTerm.equals(that.thenTerm)\n          && this.elseTerm.equals(that.elseTerm);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Constructors.hash(ConditionalOperator),\n        this.ifTerm.hashCode()), this.thenTerm.hashCode()), this.elseTerm.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.ifTerm).write(46/*'.'*/).write(\"conditional\").write(40/*'('*/)\n        .debug(this.thenTerm).write(44/*','*/).write(32/*' '*/)\n        .debug(this.elseTerm).write(41/*')'*/);\n  }\n\n  override clone(): ConditionalOperator {\n    return new ConditionalOperator(this.ifTerm.clone(), this.thenTerm.clone(), this.elseTerm.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport type {Item} from \"../Item\";\nimport {ConditionalOperator} from \"./ConditionalOperator\";\n\n/** @hidden */\nexport interface ConditionalOperatorInterpolator extends Interpolator<ConditionalOperator> {\n  /** @hidden */\n  readonly ifTermInterpolator: Interpolator<Item>;\n  /** @hidden */\n  readonly thenTermInterpolator: Interpolator<Item>;\n  /** @hidden */\n  readonly elseTermInterpolator: Interpolator<Item>;\n\n  readonly 0: ConditionalOperator;\n\n  readonly 1: ConditionalOperator;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const ConditionalOperatorInterpolator = function (y0: ConditionalOperator, y1: ConditionalOperator): ConditionalOperatorInterpolator {\n  const interpolator = function (u: number): ConditionalOperator {\n    const ifTerm = interpolator.ifTermInterpolator(u);\n    const thenTerm = interpolator.thenTermInterpolator(u);\n    const elseTerm = interpolator.elseTermInterpolator(u);\n    return new ConditionalOperator(ifTerm, thenTerm, elseTerm);\n  } as ConditionalOperatorInterpolator;\n  Object.setPrototypeOf(interpolator, ConditionalOperatorInterpolator.prototype);\n  Object.defineProperty(interpolator, \"ifTermInterpolator\", {\n    value: y0.ifTerm.interpolateTo(y1.ifTerm),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"thenTermInterpolator\", {\n    value: y0.thenTerm.interpolateTo(y1.thenTerm),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"elseTermInterpolator\", {\n    value: y0.elseTerm.interpolateTo(y1.elseTerm),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: ConditionalOperator, y1: ConditionalOperator): ConditionalOperatorInterpolator;\n\n  /** @hidden */\n  prototype: ConditionalOperatorInterpolator;\n};\n\nConditionalOperatorInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(ConditionalOperatorInterpolator.prototype, 0, {\n  get(this: ConditionalOperatorInterpolator): ConditionalOperator {\n    const ifTerm = this.ifTermInterpolator[0];\n    const thenTerm = this.thenTermInterpolator[0];\n    const elseTerm = this.elseTermInterpolator[0];\n    return new ConditionalOperator(ifTerm, thenTerm, elseTerm);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(ConditionalOperatorInterpolator.prototype, 1, {\n  get(this: ConditionalOperatorInterpolator): ConditionalOperator {\n    const ifTerm = this.ifTermInterpolator[1];\n    const thenTerm = this.thenTermInterpolator[1];\n    const elseTerm = this.elseTermInterpolator[1];\n    return new ConditionalOperator(ifTerm, thenTerm, elseTerm);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nConditionalOperatorInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof ConditionalOperatorInterpolator) {\n    return this.ifTermInterpolator.equals(that.ifTermInterpolator)\n        && this.thenTermInterpolator.equals(that.thenTermInterpolator)\n        && this.elseTermInterpolator.equals(that.elseTermInterpolator);\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class InterpreterException extends Error {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, InterpreterException.prototype);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, HashCode, Numbers, Constructors} from \"@swim/util\";\nimport {Output, Format, Debug} from \"@swim/codec\";\n\n/**\n * Either an [[InterpreterSettings]] instance, or an [[InterpreterSettingsInit]]\n * object initializer.\n */\nexport type AnyInterpreterSettings = InterpreterSettings | InterpreterSettingsInit;\n\n/**\n * [[InterpreterSettings]] object initializer.\n */\nexport interface InterpreterSettingsInit {\n  maxScopeDepth?: number;\n}\n\nexport class InterpreterSettings implements Debug, HashCode {\n  constructor(maxScopeDepth: number) {\n    Object.defineProperty(this, \"maxScopeDepth\", {\n      value: maxScopeDepth,\n      enumerable: true,\n    });\n  }\n\n  readonly maxScopeDepth!: number;\n\n  withMaxScopeDepth(maxScopeDepth: number): InterpreterSettings {\n    return this.copy(maxScopeDepth);\n  }\n\n  protected copy(maxScopeDepth: number): InterpreterSettings {\n    return new InterpreterSettings(maxScopeDepth);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof InterpreterSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InterpreterSettings) {\n      return that.canEqual(this) && this.maxScopeDepth === that.maxScopeDepth;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(InterpreterSettings),\n        Numbers.hash(this.maxScopeDepth)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"new\").write(32/*' '*/).write(\"InterpreterSettings\")\n        .write(40/*'('*/).debug(this.maxScopeDepth).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static standard(): InterpreterSettings {\n    const maxScopeDepth = 1024;\n    return new InterpreterSettings(maxScopeDepth);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {InterpreterException} from \"./InterpreterException\";\nimport {InterpreterSettings} from \"./InterpreterSettings\";\nimport {AnyItem, Item} from \"../Item\";\nimport type {Operator} from \"../operator/Operator\";\nimport type {Selector} from \"../selector/Selector\";\n\nexport type AnyInterpreter = Interpreter | AnyItem;\n\nexport class Interpreter {\n  constructor(settings?: InterpreterSettings, scopeStack?: Item[] | null, scopeDepth?: number) {\n    Object.defineProperty(this, \"settings\", {\n      value: settings !== void 0 ? settings : InterpreterSettings.standard(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"scopeStack\", {\n      value: scopeStack !== void 0 ? scopeStack : null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"scopeDepth\", {\n      value: scopeDepth !== void 0 ? scopeDepth : 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly settings!: InterpreterSettings;\n\n  withSettings(settings: InterpreterSettings): this {\n    Object.defineProperty(this, \"settings\", {\n      value: settings,\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  /** @hidden */\n  readonly scopeStack!: Item[] | null;\n\n  readonly scopeDepth!: number;\n\n  peekScope(): Item {\n    const scopeDepth = this.scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    return this.scopeStack![scopeDepth - 1]!;\n  }\n\n  getScope(index: number): Item {\n    if (index < 0 || index >= this.scopeDepth) {\n      throw new RangeError(\"\" + index);\n    }\n    return this.scopeStack![index]!;\n  }\n\n  pushScope(scope: Item): void {\n    const scopeDepth = this.scopeDepth;\n    if (scopeDepth >= this.settings.maxScopeDepth) {\n      throw new InterpreterException(\"scope stack overflow\");\n    }\n    const oldScopeStack = this.scopeStack;\n    let newScopeStack;\n    if (oldScopeStack === null || scopeDepth + 1 > oldScopeStack.length) {\n      newScopeStack = new Array<Item>(Interpreter.expand(scopeDepth + 1));\n      if (oldScopeStack !== null) {\n        for (let i = 0; i < scopeDepth; i += 1) {\n          newScopeStack[i] = oldScopeStack[i]!;\n        }\n      }\n      Object.defineProperty(this, \"scopeStack\", {\n        value: newScopeStack,\n        enumerable: true,\n        configurable: true,\n      });\n    } else {\n      newScopeStack = oldScopeStack;\n    }\n    newScopeStack[scopeDepth] = scope;\n    Object.defineProperty(this, \"scopeDepth\", {\n      value: scopeDepth + 1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  popScope(): Item {\n    const scopeDepth = this.scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    const scopeStack = this.scopeStack!;\n    const scope = scopeStack[scopeDepth - 1]!;\n    scopeStack[scopeDepth - 1] = void 0 as any;\n    Object.defineProperty(this, \"scopeDepth\", {\n      value: scopeDepth - 1,\n      enumerable: true,\n      configurable: true,\n    });\n    return scope;\n  }\n\n  swapScope(newScope: Item): Item {\n    const scopeDepth = this.scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    const scopeStack = this.scopeStack!;\n    const oldScope = scopeStack[scopeDepth - 1]!;\n    scopeStack[scopeDepth - 1] = newScope;\n    return oldScope;\n  }\n\n  willOperate(operator: Operator): void {\n    // stub\n  }\n\n  didOperate(operator: Operator, result: Item): void {\n    // stub\n  }\n\n  willSelect(selector: Selector): void {\n    // stub\n  }\n\n  didSelect(selector: Selector, result: unknown): void {\n    // stub\n  }\n\n  willTransform(selector: Selector): void {\n    // stub\n  }\n\n  didTransform(selector: Selector, result: Item): void {\n    // stub\n  }\n\n  static of(...objects: AnyItem[]): Interpreter {\n    const n = objects.length;\n    const scopes = new Array(Interpreter.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      const scope = Item.fromAny(objects[i]);\n      scopes[i] = scope;\n    }\n    return new Interpreter(InterpreterSettings.standard(), scopes, n);\n  }\n\n  static fromAny(interpreter: AnyInterpreter, globalScope: Item = Item.globalScope()): Interpreter {\n    if (!(interpreter instanceof Interpreter)) {\n      const scope = interpreter;\n      interpreter = new Interpreter();\n      if (globalScope !== void 0) {\n        interpreter.pushScope(globalScope);\n      }\n      if (scope !== void 0) {\n        interpreter.pushScope(Item.fromAny(scope));\n      }\n    }\n    return interpreter;\n  }\n\n  private static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class OrOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"||\";\n  }\n\n  override get precedence(): number {\n    return 3;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result: Item;\n    const argument1 = this.operand1.evaluate(interpreter);\n    if (argument1.isDefinite()) {\n      result = argument1;\n    } else {\n      const argument2 = this.operand2.evaluate(interpreter);\n      result = argument2;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.or(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 21;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof OrOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof OrOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof OrOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(OrOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"or\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): OrOperator {\n    return new OrOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class AndOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"&&\";\n  }\n\n  override get precedence(): number {\n    return 4;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result: Item;\n    const argument1 = this.operand1.evaluate(interpreter);\n    if (argument1.isDefinite()) {\n      const argument2 = this.operand2.evaluate(interpreter);\n      result = argument2;\n    } else {\n      result = argument1;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.and(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 22;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof AndOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof AndOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof AndOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(AndOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"and\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): AndOperator {\n    return new AndOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class BitwiseOrOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"|\";\n  }\n\n  override get precedence(): number {\n    return 5;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.bitwiseOr(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.bitwiseOr(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 23;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof BitwiseOrOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseOrOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseOrOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(BitwiseOrOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"bitwiseOr\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): BitwiseOrOperator {\n    return new BitwiseOrOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class BitwiseXorOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"^\";\n  }\n\n  override get precedence(): number {\n    return 6;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.bitwiseXor(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.bitwiseXor(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 24;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof BitwiseXorOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseXorOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseXorOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(BitwiseXorOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"bitwiseXor\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): BitwiseXorOperator {\n    return new BitwiseXorOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class BitwiseAndOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"&\";\n  }\n\n  override get precedence(): number {\n    return 7;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.bitwiseAnd(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.bitwiseAnd(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 25;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof BitwiseAndOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseAndOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseAndOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(BitwiseAndOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"bitwiseAnd\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): BitwiseAndOperator {\n    return new BitwiseAndOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class LtOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"<\";\n  }\n\n  override get precedence(): number {\n    return 0;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.lt(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.lt(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 26;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof LtOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LtOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LtOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(LtOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"lt\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): LtOperator {\n    return new LtOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class LeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"<=\";\n  }\n\n  override get precedence(): number {\n    return 0;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.le(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.le(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 27;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof LeOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LeOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LeOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(LeOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"le\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): LeOperator {\n    return new LeOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class EqOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"==\";\n  }\n\n  override get precedence(): number {\n    return 0;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.eq(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.eq(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 28;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof EqOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EqOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EqOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(EqOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"eq\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): EqOperator {\n    return new EqOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class NeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"!=\";\n  }\n\n  override get precedence(): number {\n    return 0;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.ne(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.ne(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 29;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof NeOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NeOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NeOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(NeOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"ne\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): NeOperator {\n    return new NeOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class GeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \">=\";\n  }\n\n  override get precedence(): number {\n    return 0;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.ge(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.ge(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 30;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof GeOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(GeOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"ge\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): GeOperator {\n    return new GeOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class GtOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \">\";\n  }\n\n  override get precedence(): number {\n    return 0;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.gt(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.gt(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 31;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof GtOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GtOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GtOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(GtOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"gt\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): GtOperator {\n    return new GtOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class PlusOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"+\";\n  }\n\n  override get precedence(): number {\n    return 8;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.plus(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.plus(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 32;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof PlusOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PlusOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PlusOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(PlusOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"plus\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): PlusOperator {\n    return new PlusOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class MinusOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"-\";\n  }\n\n  override get precedence(): number {\n    return 8;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.minus(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.minus(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 33;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof MinusOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MinusOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MinusOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(MinusOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"minus\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): MinusOperator {\n    return new MinusOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class TimesOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"*\";\n  }\n\n  override get precedence(): number {\n    return 9;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.times(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.times(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 34;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof TimesOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TimesOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TimesOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(TimesOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"times\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): TimesOperator {\n    return new TimesOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class DivideOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"/\";\n  }\n\n  override get precedence(): number {\n    return 9;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.divide(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.divide(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 35;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof DivideOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DivideOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DivideOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(DivideOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"divide\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): DivideOperator {\n    return new DivideOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class ModuloOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  override get operator(): string {\n    return \"%\";\n  }\n\n  override get precedence(): number {\n    return 9;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this.operand1.evaluate(interpreter);\n    const argument2 = this.operand2.evaluate(interpreter);\n    const result = argument1.modulo(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this.operand1.substitute(interpreter);\n    const argument2 = this.operand2.substitute(interpreter);\n    return argument1.modulo(argument2);\n  }\n\n  override get typeOrder(): number {\n    return 36;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof ModuloOperator) {\n      let order = this.operand1.compareTo(that.operand1);\n      if (order === 0) {\n        order = this.operand2.compareTo(that.operand2);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ModuloOperator) {\n      return this.operand1.equivalentTo(that.operand1, epsilon)\n          && this.operand2.equivalentTo(that.operand2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ModuloOperator) {\n      return this.operand1.equals(that.operand1) && this.operand2.equals(that.operand2);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(ModuloOperator),\n        this.operand1.hashCode()), this.operand2.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand1).write(46/*'.'*/).write(\"modulo\").write(40/*'('*/)\n        .debug(this.operand2).write(41/*')'*/);\n  }\n\n  override clone(): ModuloOperator {\n    return new ModuloOperator(this.operand1.clone(), this.operand2.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class NotOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  override get operator(): string {\n    return \"!\";\n  }\n\n  override get precedence(): number {\n    return 10;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this.operand.evaluate(interpreter);\n    return argument.not();\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this.operand.substitute(interpreter);\n    return argument.not();\n  }\n\n  override get typeOrder(): number {\n    return 37;\n  }\n\n  override compareTo(that: Item): number {\n    return Numbers.compare(this.typeOrder, that.typeOrder);\n  }\n\n  override equivalentTo(that: Item, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NotOperator) {\n      return this.operand.equivalentTo(that.operand, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NotOperator) {\n      return this.operand.equals(that.operand);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(NotOperator), this.operand.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand).write(46/*'.'*/).write(\"not\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override clone(): NotOperator {\n    return new NotOperator(this.operand.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class BitwiseNotOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  override get operator(): string {\n    return \"~\";\n  }\n\n  override get precedence(): number {\n    return 10;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this.operand.evaluate(interpreter);\n    return argument.bitwiseNot();\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this.operand.substitute(interpreter);\n    return argument.bitwiseNot();\n  }\n\n  override get typeOrder(): number {\n    return 38;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof BitwiseNotOperator) {\n      return this.operand.compareTo(that.operand);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseNotOperator) {\n      return this.operand.equivalentTo(that.operand, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseNotOperator) {\n      return this.operand.equals(that.operand);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(BitwiseNotOperator), this.operand.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand).write(46/*'.'*/).write(\"bitwiseNot\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override clone(): BitwiseNotOperator {\n    return new BitwiseNotOperator(this.operand.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class NegativeOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  override get operator(): string {\n    return \"-\";\n  }\n\n  override get precedence(): number {\n    return 10;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this.operand.evaluate(interpreter);\n    return argument.negative();\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this.operand.substitute(interpreter);\n    return argument.negative();\n  }\n\n  override get typeOrder(): number {\n    return 39;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof NegativeOperator) {\n      return this.operand.compareTo(that.operand);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NegativeOperator) {\n      return this.operand.equivalentTo(that.operand, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NegativeOperator) {\n      return this.operand.equals(that.operand);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(NegativeOperator), this.operand.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand).write(46/*'.'*/).write(\"negative\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override clone(): NegativeOperator {\n    return new NegativeOperator(this.operand.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../interpreter/Interpreter\";\n\nexport class PositiveOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  override get operator(): string {\n    return \"+\";\n  }\n\n  override get precedence(): number {\n    return 10;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this.operand.evaluate(interpreter);\n    return argument.positive();\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this.operand.substitute(interpreter);\n    return argument.positive();\n  }\n\n  override get typeOrder(): number {\n    return 40;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof PositiveOperator) {\n      return this.operand.compareTo(that.operand);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PositiveOperator) {\n      return this.operand.equivalentTo(that.operand, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PositiveOperator) {\n      return this.operand.equals(that.operand);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(PositiveOperator), this.operand.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.operand).write(46/*'.'*/).write(\"positive\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override clone(): PositiveOperator {\n    return new PositiveOperator(this.operand.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item} from \"../Item\";\nimport type {Value} from \"../Value\";\nimport {Operator} from \"./Operator\";\nimport {InvokeOperatorInterpolator} from \"../\"; // forward import\nimport {Func} from \"../\"; // forward import\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class InvokeOperator extends Operator {\n  constructor(func: Value, args: Value) {\n    super();\n    Object.defineProperty(this, \"func\", {\n      value: func,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"args\", {\n      value: args.commit(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"state\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly func!: Value;\n\n  readonly args!: Value;\n\n  readonly state!: unknown;\n\n  setState(state: unknown): void {\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override isConstant(): boolean {\n    return this.func.isConstant() && this.args.isConstant();\n  }\n\n  override get precedence(): number {\n    return 11;\n  }\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const func = this.func.evaluate(interpreter);\n    if (func instanceof Func) {\n      return func.invoke(this.args, interpreter, this);\n    }\n    return Item.absent();\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const func = this.func.evaluate(interpreter);\n    if (func instanceof Func) {\n      const result = func.expand(this.args, interpreter, this);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    const args = this.args.substitute(interpreter).toValue();\n    return new InvokeOperator(this.func, args);\n  }\n\n  override interpolateTo(that: InvokeOperator): Interpolator<InvokeOperator>;\n  override interpolateTo(that: Item): Interpolator<Item>;\n  override interpolateTo(that: unknown): Interpolator<Item> | null;\n  override interpolateTo(that: unknown): Interpolator<Item> | null {\n    if (that instanceof InvokeOperator) {\n      return InvokeOperatorInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override get typeOrder(): number {\n    return 41;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof InvokeOperator) {\n      let order = this.func.compareTo(that.func);\n      if (order === 0) {\n        order = this.args.compareTo(that.args);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InvokeOperator) {\n      return this.func.equals(that.func)\n          && this.args.equivalentTo(that.args, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InvokeOperator) {\n      return this.func.equals(that.func) && this.args.equals(that.args);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(InvokeOperator),\n        this.func.hashCode()), this.args.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.func).write(46/*'.'*/).write(\"invoke\").write(40/*'('*/)\n        .debug(this.args).write(41/*')'*/);\n  }\n\n  override clone(): InvokeOperator {\n    return new InvokeOperator(this.func.clone(), this.args.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport type {Item} from \"../Item\";\nimport {InvokeOperator} from \"./InvokeOperator\";\n\n/** @hidden */\nexport interface InvokeOperatorInterpolator extends Interpolator<InvokeOperator> {\n  /** @hidden */\n  readonly funcInterpolator: Interpolator<Item>;\n  /** @hidden */\n  readonly argsInterpolator: Interpolator<Item>;\n\n  readonly 0: InvokeOperator;\n\n  readonly 1: InvokeOperator;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const InvokeOperatorInterpolator = function (y0: InvokeOperator, y1: InvokeOperator): InvokeOperatorInterpolator {\n  const interpolator = function (u: number): InvokeOperator {\n    const func = interpolator.funcInterpolator(u);\n    const args = interpolator.argsInterpolator(u);\n    return new InvokeOperator(func, args);\n  } as InvokeOperatorInterpolator;\n  Object.setPrototypeOf(interpolator, InvokeOperatorInterpolator.prototype);\n  Object.defineProperty(interpolator, \"funcInterpolator\", {\n    value: y0.func.interpolateTo(y1.func),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, \"argsInterpolator\", {\n    value: y0.args.interpolateTo(y1.args),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: InvokeOperator, y1: InvokeOperator): InvokeOperatorInterpolator;\n\n  /** @hidden */\n  prototype: InvokeOperatorInterpolator;\n};\n\nInvokeOperatorInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(InvokeOperatorInterpolator.prototype, 0, {\n  get(this: InvokeOperatorInterpolator): InvokeOperator {\n    const func = this.funcInterpolator[0];\n    const args = this.argsInterpolator[0];\n    return new InvokeOperator(func, args);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(InvokeOperatorInterpolator.prototype, 1, {\n  get(this: InvokeOperatorInterpolator): InvokeOperator {\n    const func = this.funcInterpolator[1];\n    const args = this.argsInterpolator[1];\n    return new InvokeOperator(func, args);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nInvokeOperatorInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof InvokeOperatorInterpolator) {\n    return this.funcInterpolator.equals(that.funcInterpolator)\n        && this.argsInterpolator.equals(that.argsInterpolator);\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"../Item\";\nimport {AnyValue, Value} from \"../Value\";\nimport {Record} from \"../Record\";\nimport {AnyText, Text} from \"../Text\";\nimport {AnyNum, Num} from \"../Num\";\nimport {Expression} from \"../Expression\";\nimport type {Operator} from \"../operator/Operator\";\nimport {InvokeOperator} from \"../operator/InvokeOperator\";\nimport {IdentitySelector} from \"../\"; // forward import\nimport {GetSelector} from \"../\"; // forward import\nimport {GetAttrSelector} from \"../\"; // forward import\nimport {GetItemSelector} from \"../\"; // forward import\nimport {KeysSelector} from \"../\"; // forward import\nimport {ValuesSelector} from \"../\"; // forward import\nimport {ChildrenSelector} from \"../\"; // forward import\nimport {DescendantsSelector} from \"../\"; // forward import\nimport {FilterSelector} from \"../\"; // forward import\nimport {LiteralSelector} from \"../\"; // forward import\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport abstract class Selector extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  override isConstant(): boolean {\n    return false;\n  }\n\n  /**\n   * The `Selector` that this `Selector` uses to match sub-selections.\n   */\n  abstract readonly then: Selector;\n\n  abstract forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  abstract forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n\n  abstract mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  abstract mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n\n  override evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const selected = Record.create();\n    this.forSelected(interpreter, function (interpreter: Interpreter): void {\n      const scope = interpreter.peekScope();\n      if (scope !== void 0) {\n        selected.push(scope);\n      }\n    }, this);\n    return selected.isEmpty() ? Item.absent() : selected.flattened();\n  }\n\n  abstract override substitute(interpreter: AnyInterpreter): Item;\n\n  abstract andThen(then: Selector): Selector;\n\n  override get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return this.andThen(new GetSelector(key, Selector.identity()));\n  }\n\n  override getAttr(key: AnyText): Selector {\n    key = Text.fromAny(key);\n    return this.andThen(new GetAttrSelector(key, Selector.identity()));\n  }\n\n  override getItem(index: AnyNum): Selector {\n    index = Num.fromAny(index);\n    return this.andThen(new GetItemSelector(index, Selector.identity()));\n  }\n\n  keys(): Selector {\n    return this.andThen(Selector.keys());\n  }\n\n  values(): Selector {\n    return this.andThen(Selector.values());\n  }\n\n  children(): Selector {\n    return this.andThen(Selector.children());\n  }\n\n  descendants(): Selector {\n    return this.andThen(Selector.descendants());\n  }\n\n  override filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return new FilterSelector(this, Selector.identity());\n    } else {\n      predicate = Item.fromAny(predicate);\n      return this.andThen(predicate.filter());\n    }\n  }\n\n  override invoke(args: Value): Operator {\n    return new InvokeOperator(this, args);\n  }\n\n  override get precedence(): number {\n    return 11;\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Selector\").write(46/*'.'*/).write(\"identity\").write(40/*'('*/).write(41/*')'*/);\n    this.debugThen(output);\n  }\n\n  abstract debugThen(output: Output): void;\n\n  abstract override clone(): Selector;\n\n  @Lazy\n  static identity(): Selector {\n    return new IdentitySelector();\n  }\n\n  static get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return new GetSelector(key, Selector.identity());\n  }\n\n  static getAttr(key: AnyText): Selector {\n    key = Text.fromAny(key);\n    return new GetAttrSelector(key, Selector.identity());\n  }\n\n  static getItem(index: AnyNum): Selector {\n    index = Num.fromAny(index);\n    return new GetItemSelector(index, Selector.identity());\n  }\n\n  @Lazy\n  static keys(): Selector {\n    return new KeysSelector(Selector.identity());\n  }\n\n  @Lazy\n  static values(): Selector {\n    return new ValuesSelector(Selector.identity());\n  }\n\n  @Lazy\n  static children(): Selector {\n    return new ChildrenSelector(Selector.identity());\n  }\n\n  @Lazy\n  static descendants(): Selector {\n    return new DescendantsSelector(Selector.identity());\n  }\n\n  static literal(item: AnyItem): Selector {\n    item = Item.fromAny(item);\n    if (!(item instanceof Selector)) {\n      item = new LiteralSelector(item, Selector.identity());\n    }\n    return item as Selector;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"../Item\";\nimport {AnyValue, Value} from \"../Value\";\nimport {AnyText, Text} from \"../Text\";\nimport {AnyNum, Num} from \"../Num\";\nimport {Selector} from \"./Selector\";\nimport {GetSelector} from \"../\"; // forward import\nimport {GetAttrSelector} from \"../\"; // forward import\nimport {GetItemSelector} from \"../\"; // forward import\nimport {FilterSelector} from \"../\"; // forward import\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class IdentitySelector extends Selector {\n  override get then(): Selector {\n    return this;\n  }\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const oldScope = interpreter.popScope();\n      // Evaluate the current selection.\n      const newScope = oldScope.evaluate(interpreter);\n      // Push the evaluated selection onto the scope stack.\n      interpreter.pushScope(newScope);\n      // Visit the evaluated selection.\n      selected = callback.call(thisArg, interpreter);\n      // Restore the original selection to the top of the scope stack.\n      interpreter.swapScope(oldScope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    return transform.call(thisArg, interpreter);\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    return interpreter.peekScope().substitute(interpreter);\n  }\n\n  override get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return new GetSelector(key, this);\n  }\n\n  override getAttr(key: AnyText): Selector {\n    key = Text.fromAny(key);\n    return new GetAttrSelector(key, this);\n  }\n\n  override getItem(index: AnyNum): Selector {\n    index = Num.fromAny(index);\n    return new GetItemSelector(index, this);\n  }\n\n  override andThen(then: Selector): Selector {\n    return then;\n  }\n\n  override keys(): Selector {\n    return Selector.keys();\n  }\n\n  override values(): Selector {\n    return Selector.values();\n  }\n\n  override children(): Selector {\n    return Selector.children();\n  }\n\n  override descendants(): Selector {\n    return Selector.descendants();\n  }\n\n  override filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return new FilterSelector(this, this);\n    } else {\n      predicate = Item.fromAny(predicate);\n      return predicate.filter();\n    }\n  }\n\n  override get typeOrder(): number {\n    return 10;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown): boolean {\n    return this === that;\n  }\n\n  override equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  override hashCode(): number {\n    return Constructors.hash(IdentitySelector);\n  }\n\n  override debugThen(output: Output): void {\n    // nop\n  }\n\n  override clone(): Selector {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport type {Value} from \"../Value\";\nimport {Record} from \"../Record\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class GetSelector extends Selector {\n  constructor(key: Value, then: Selector) {\n    super();\n    Object.defineProperty(this, \"item\", {\n      value: key.commit(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  readonly item!: Value;\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    interpreter.willSelect(this);\n    // Evaluate the key, in case it's dynamic.\n    const key = this.item.evaluate(interpreter).toValue();\n    const selected = GetSelector.forSelected(key, this.then, interpreter, callback, thisArg);\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  /** @hidden */\n  static forSelected<T, S>(key: Value, then: Selector, interpreter: Interpreter,\n                           callback: (this: S | undefined, interpreter: Interpreter) => T,\n                           thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Record) {\n        field = scope.getField(key);\n        if (field !== void 0) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(field.toValue());\n          // Subselect the field value.\n          selected = then.forSelected(interpreter, callback, thisArg);\n          // Pop the field value off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetSelector.forSelected(key, then, interpreter, callback, thisArg);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    // Evaluate the key, if it's dynamic.\n    const key = this.item.evaluate(interpreter).toValue();\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have members.\n      if (scope instanceof Record) {\n        const oldField = scope.getField(key);\n        if (oldField !== void 0) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(oldField.toValue());\n          // Transform the field value.\n          const newItem = this.then.mapSelected(interpreter, transform, thisArg);\n          // Pop the field value off the scope stack.\n          interpreter.popScope();\n          if (newItem instanceof Field) {\n            // Replace the original field with the transformed field.\n            if (key.equals(newItem.key)) {\n              scope.set(key, newItem.toValue());\n            } else {\n              scope.delete(key);\n              scope.push(newItem);\n            }\n          } else if (newItem.isDefined()) {\n            // Update the field with the transformed value.\n            scope.set(key, newItem.toValue());\n          } else {\n            // Remove the field.\n            scope.delete(key);\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    // Evaluate the key, in case it's dynamic.\n    const key = this.item.evaluate(interpreter).toValue();\n    const value = GetSelector.substitute(key, this.then, interpreter);\n    if (value !== void 0) {\n      return value;\n    }\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new GetSelector(this.item, then as Selector);\n  }\n\n  /** @hidden */\n  static substitute(key: Value, then: Selector, interpreter: Interpreter): Item | undefined {\n    let selected: Item | undefined;\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Record) {\n        field = scope.getField(key);\n        if (field !== void 0) {\n          // Substitute the field value.\n          selected = field.toValue().substitute(interpreter);\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetSelector.substitute(key, then, interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  override andThen(then: Selector): Selector {\n    return new GetSelector(this.item, this.then.andThen(then));\n  }\n\n  override get typeOrder(): number {\n    return 12;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof GetSelector) {\n      let order = this.item.compareTo(that.item);\n      if (order === 0) {\n        order = this.then.compareTo(that.then);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetSelector) {\n      return this.item.equals(that.item) && this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetSelector) {\n      return this.item.equals(that.item) && this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(GetSelector),\n        this.item.hashCode()), this.then.hashCode()));\n  }\n\n  override debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"get\").write(40/*'('*/).debug(this.item).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override clone(): Selector {\n    return new GetSelector(this.item.clone(), this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Attr} from \"../Attr\";\nimport {Record} from \"../Record\";\nimport type {Text} from \"../Text\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class GetAttrSelector extends Selector {\n  constructor(key: Text, then: Selector) {\n    super();\n    Object.defineProperty(this, \"item\", {\n      value: key,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  readonly item!: Text;\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    interpreter.willSelect(this);\n    const key = this.item;\n    const selected = GetAttrSelector.forSelected(key, this.then, interpreter, callback);\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  /** @hidden */\n  static forSelected<T, S>(key: Text, then: Selector, interpreter: Interpreter,\n                           callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                           thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Record) {\n        field = scope.getField(key);\n        if (field instanceof Attr) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(field.toValue());\n          // Subselect the field value.\n          selected = then.forSelected(interpreter, callback, thisArg);\n          // Pop the field value off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetAttrSelector.forSelected(key, then, interpreter, callback, thisArg);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    const key = this.item;\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have members.\n      if (scope instanceof Record) {\n        const oldField = scope.getField(key);\n        if (oldField instanceof Attr) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(oldField.toValue());\n          // Transform the field value.\n          const newItem = this.then.mapSelected(interpreter, transform, thisArg);\n          // Pop the field value off the scope stack.\n          interpreter.popScope();\n          if (newItem instanceof Field) {\n            // Replace the original field with the transformed field.\n            if (key.equals(newItem.key)) {\n              scope.setAttr(key, newItem.toValue());\n            } else {\n              scope.delete(key);\n              scope.push(newItem);\n            }\n          } else if (newItem.isDefined()) {\n            // Update the field with the transformed value.\n            scope.setAttr(key, newItem.toValue());\n          } else {\n            // Remove the field.\n            scope.delete(key);\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this.item;\n    const value = GetAttrSelector.substitute(key, this.then, interpreter);\n    if (value !== void 0) {\n      return value;\n    }\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new GetAttrSelector(this.item, then as Selector);\n  }\n\n  /** @hidden */\n  static substitute(key: Text, then: Selector, interpreter: Interpreter): Item | undefined {\n    let selected: Item | undefined;\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Record) {\n        field = scope.getField(key);\n        if (field instanceof Attr) {\n          // Substitute the field value.\n          selected = field.toValue().substitute(interpreter);\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetAttrSelector.substitute(key, then, interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  override andThen(then: Selector): Selector {\n    return new GetAttrSelector(this.item, this.then.andThen(then));\n  }\n\n  override get typeOrder(): number {\n    return 13;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof GetAttrSelector) {\n      let order = this.item.compareTo(that.item);\n      if (order === 0) {\n        order = this.then.compareTo(that.then);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetAttrSelector) {\n      return this.item.equals(that.item) && this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetAttrSelector) {\n      return this.item.equals(that.item) && this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(GetAttrSelector),\n        this.item.hashCode()), this.then.hashCode()));\n  }\n\n  override debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"getAttr\").write(40/*'('*/)\n        .debug(this.item).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override clone(): Selector {\n    return new GetAttrSelector(this.item.clone(), this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Record} from \"../Record\";\nimport type {Num} from \"../Num\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class GetItemSelector extends Selector {\n  constructor(index: Num, then: Selector) {\n    super();\n    Object.defineProperty(this, \"item\", {\n      value: index,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  readonly item!: Num;\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    const index = this.item.numberValue();\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      if (scope instanceof Record && index < scope.length) {\n        const item = scope.getItem(index);\n        // Push the item onto the scope stack.\n        interpreter.pushScope(item);\n        // Subselect the item.\n        selected = this.then.forSelected(interpreter, callback, thisArg);\n        // Pop the item off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      const index = this.item.numberValue();\n      if (scope instanceof Record && index < scope.length) {\n        const oldItem = scope.getItem(index);\n        // Push the item onto the scope stack.\n        interpreter.pushScope(oldItem);\n        // Transform the item.\n        const newItem = this.then.mapSelected(interpreter, transform, thisArg);\n        // Pop the item off the scope stack.\n        interpreter.popScope();\n        if (newItem.isDefined()) {\n          scope.setItem(index, newItem);\n        } else {\n          scope.splice(index, 1);\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const index = this.item.numberValue();\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let selected: Item | undefined;\n      if (scope instanceof Record && index < scope.length) {\n        const item = scope.getItem(index);\n        // Substitute the item.\n        selected = item.substitute(interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n      if (selected !== void 0) {\n        return selected;\n      }\n    }\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new GetItemSelector(this.item, then as Selector);\n  }\n\n  override andThen(then: Selector): Selector {\n    return new GetItemSelector(this.item, this.then.andThen(then));\n  }\n\n  override get typeOrder(): number {\n    return 14;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof GetItemSelector) {\n      let order = this.item.compareTo(that.item);\n      if (order === 0) {\n        order = this.then.compareTo(that.then);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetItemSelector) {\n      return this.item.equals(that.item) && this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetItemSelector) {\n      return this.item.equals(that.item) && this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(GetItemSelector),\n        this.item.hashCode()), this.then.hashCode()));\n  }\n\n  override debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"getItem\").write(40/*'('*/)\n      .debug(this.item).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override clone(): Selector {\n    return new GetItemSelector(this.item, this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Attr} from \"../Attr\";\nimport {Slot} from \"../Slot\";\nimport {Record} from \"../Record\";\nimport {Text} from \"../Text\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class KeysSelector extends Selector {\n  constructor(then: Selector) {\n    super();\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope();\n      if (scope instanceof Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Only fields can have keys.\n          if (child instanceof Field) {\n            // Push the child key onto the scope stack.\n            interpreter.pushScope(child.key);\n            // Subselect the child key.\n            selected = this.then.forSelected(interpreter, callback, thisArg);\n            // Pop the child key off of the scope stack.\n            interpreter.popScope();\n          }\n        }\n      } else if (scope instanceof Field) {\n        // Push the key onto the scope stack.\n        interpreter.pushScope(scope.key);\n        // Subselect the key.\n        selected = this.then.forSelected(interpreter, callback, thisArg);\n        // Pop the key off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      let scope = interpreter.popScope();\n      if (scope instanceof Record) {\n        const children = scope.iterator();\n        while (children.hasNext()) {\n          const child = children.next().value!;\n          if (child instanceof Field) {\n            const oldKey = child.key;\n            // Push the key onto the scope stack.\n            interpreter.pushScope(oldKey);\n            // Subselect the key.\n            const newKey = this.then.mapSelected(interpreter, transform, thisArg).toValue();\n            // Pop the key off of the scope stack.\n            interpreter.popScope();\n            if (newKey.isDefined()) {\n              if (oldKey !== newKey) {\n                if (scope instanceof Attr && newKey instanceof Text) {\n                  children.set(Attr.of(newKey, scope.toValue()));\n                } else {\n                  children.set(Slot.of(newKey, scope.toValue()));\n                }\n              }\n            } else {\n              children.delete();\n            }\n          }\n        }\n      } else if (scope instanceof Field) {\n        const oldKey = scope.key;\n        // Push the key onto the scope stack.\n        interpreter.pushScope(oldKey);\n        // Subselect the key.\n        const newKey = this.then.mapSelected(interpreter, transform, thisArg).toValue();\n        // Pop the key off of the scope stack.\n        interpreter.popScope();\n        if (newKey.isDefined()) {\n          if (oldKey !== newKey) {\n            if (scope instanceof Attr && newKey instanceof Text) {\n              scope = Attr.of(newKey, scope.toValue());\n            } else {\n              scope = Slot.of(newKey, scope.toValue());\n            }\n          }\n        } else {\n          scope = Item.absent();\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new KeysSelector(then as Selector);\n  }\n\n  override andThen(then: Selector): Selector {\n    return new KeysSelector(this.then.andThen(then));\n  }\n\n  override get typeOrder(): number {\n    return 15;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof KeysSelector) {\n      return this.then.compareTo(that.then);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof KeysSelector) {\n      return this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof KeysSelector) {\n      return this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(KeysSelector), this.then.hashCode()));\n  }\n\n  override debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"keys\").write(40/*'('*/).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override clone(): Selector {\n    return new KeysSelector(this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Record} from \"../Record\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class ValuesSelector extends Selector {\n  constructor(then: Selector) {\n    super();\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope();\n      if (scope instanceof Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child value onto the scope stack.\n          interpreter.pushScope(child.toValue());\n          // Subselect the child value.\n          selected = this.then.forSelected(interpreter, callback, thisArg);\n          // Pop the child value off of the scope stack.\n          interpreter.popScope();\n        }\n      } else {\n        // Push the value onto the scope stack.\n        interpreter.pushScope(scope.toValue());\n        // Subselect the value.\n        selected = this.then.forSelected(interpreter, callback, thisArg);\n        // Pop the value off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      let scope = interpreter.popScope();\n      if (scope instanceof Record) {\n        const children = scope.iterator();\n        while (children.hasNext()) {\n          const child = children.next().value!;\n          if (child instanceof Field) {\n            const oldValue = child.toValue();\n            // Push the child value onto the scope stack.\n            interpreter.pushScope(oldValue);\n            // Transform the child value.\n            const newItem = this.then.mapSelected(interpreter, transform, thisArg);\n            // Pop the child value off of the scope stack.\n            interpreter.popScope();\n            if (newItem.isDefined()) {\n              if (newItem instanceof Field) {\n                children.set(newItem);\n              } else if (newItem !== oldValue) {\n                children.set(child.updatedValue(newItem.toValue()));\n              }\n            } else {\n              children.delete();\n            }\n          } else {\n            // Push the child onto the scope stack.\n            interpreter.pushScope(child.toValue());\n            // Transform the child.\n            const newItem = this.then.mapSelected(interpreter, transform, thisArg);\n            // Pop the child off of the scope stack.\n            interpreter.popScope();\n            if (newItem.isDefined()) {\n              if (child !== newItem) {\n                children.set(newItem);\n              }\n            } else {\n              children.delete();\n            }\n          }\n        }\n      } else if (scope instanceof Field) {\n        const oldValue = scope.toValue();\n        // Push the field value onto the scope stack.\n        interpreter.pushScope(oldValue);\n        // Transform the field value.\n        const newItem = this.then.mapSelected(interpreter, transform, thisArg);\n        // Pop the field value off of the scope stack.\n        interpreter.popScope();\n        if (newItem.isDefined()) {\n          if (newItem instanceof Field) {\n            scope = newItem;\n          } else if (newItem !== oldValue) {\n            scope = scope.updatedValue(newItem.toValue());\n          }\n        } else {\n          scope = Item.absent();\n        }\n      } else {\n        // Push the value onto the scope stack.\n        interpreter.pushScope(scope);\n        // Transform the value.\n        scope = this.then.mapSelected(interpreter, transform, thisArg);\n        // Pop the value off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new ValuesSelector(then as Selector);\n  }\n\n  override andThen(then: Selector): Selector {\n    return new ValuesSelector(this.then.andThen(then));\n  }\n\n  override get typeOrder(): number {\n    return 16;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof ValuesSelector) {\n      return this.then.compareTo(that.then);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ValuesSelector) {\n      return this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ValuesSelector) {\n      return this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(ValuesSelector), this.then.hashCode()));\n  }\n\n  override debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"values\").write(40/*'('*/).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override clone(): Selector {\n    return new ValuesSelector(this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Record} from \"../Record\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class ChildrenSelector extends Selector {\n  constructor(then: Selector) {\n    super();\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have children.\n      if (scope instanceof Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(child);\n          // Subselect the child.\n          selected = this.then.forSelected(interpreter, callback, thisArg);\n          // Pop the child off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have children.\n      if (scope instanceof Record) {\n        const children = scope.iterator();\n        // For each child:\n        while (children.hasNext()) {\n          const oldChild = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(oldChild);\n          // Transform the child.\n          const newChild = this.then.mapSelected(interpreter, transform);\n          // Pop the child off the scope stack.\n          interpreter.popScope();\n          if (newChild.isDefined()) {\n            // Update the child, if its identity changed.\n            if (newChild !== oldChild) {\n              children.set(newChild);\n            }\n          } else {\n            // Remove the child, if it transformed to Absent.\n            children.delete();\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new ChildrenSelector(then as Selector);\n  }\n\n  override andThen(then: Selector): Selector {\n    return new ChildrenSelector(this.then.andThen(then));\n  }\n\n  override get typeOrder(): number {\n    return 17;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof ChildrenSelector) {\n      return this.then.compareTo(that.then);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ChildrenSelector) {\n      return this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ChildrenSelector) {\n      return this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(ChildrenSelector), this.then.hashCode()));\n  }\n\n  override debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"children\").write(40/*'('*/).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override clone(): Selector {\n    return new ChildrenSelector(this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Record} from \"../Record\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class DescendantsSelector extends Selector {\n  constructor(then: Selector) {\n    super();\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have descendants.\n      if (scope instanceof Record) {\n        const children = scope.iterator();\n        // For each child, while none have selected a result:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(child);\n          // Subselect the child.\n          selected = this.then.forSelected(interpreter, callback, thisArg);\n          // If the child was not selected:\n          if (selected === void 0) {\n            // Recursively select the child's children.\n            this.forSelected(interpreter, callback, thisArg);\n          }\n          // Pop the child off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have descendants.\n      if (scope instanceof Record) {\n        const children = scope.iterator();\n        // For each child:\n        while (children.hasNext()) {\n          const oldChild = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(oldChild);\n          // Transform the child.\n          let newChild = this.then.mapSelected(interpreter, transform, thisArg);\n          // If the child was not removed:\n          if (newChild.isDefined()) {\n            // Recursively transform the child's children.\n            newChild = this.mapSelected(interpreter, transform, thisArg);\n          }\n          // Pop the child off the scope stack.\n          interpreter.popScope();\n          if (newChild.isDefined()) {\n            // Update the child, if its identity changed.\n            if (newChild !== oldChild) {\n              children.set(newChild);\n            }\n          } else {\n            // Remove the child, if it transformed to Absent.\n            children.delete();\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new DescendantsSelector(then as Selector);\n  }\n\n  override andThen(then: Selector): Selector {\n    return new DescendantsSelector(this.then.andThen(then));\n  }\n\n  override get typeOrder(): number {\n    return 18;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof DescendantsSelector) {\n      return this.then.compareTo(that.then);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DescendantsSelector) {\n      return this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DescendantsSelector) {\n      return this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(DescendantsSelector), this.then.hashCode()));\n  }\n\n  override debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"descendants\").write(40/*'('*/).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override clone(): Selector {\n    return new DescendantsSelector(this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"../Item\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class FilterSelector extends Selector {\n  constructor(predicate: Selector, then: Selector) {\n    super();\n    Object.defineProperty(this, \"predicate\", {\n      value: predicate,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  readonly predicate!: Selector;\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth !== 0) {\n      // If the filter matches the selection scope:\n      if (this.filterSelected(interpreter)) {\n        // Then subselect the selection scope.\n        selected = this.then.forSelected(interpreter, callback, thisArg);\n      }\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth !== 0) {\n      // If the filter matches the selection scope:\n      if (this.filterSelected(interpreter)) {\n        // Then transform the selection scope.\n        result = this.then.mapSelected(interpreter, transform, thisArg);\n      } else {\n        result = interpreter.peekScope().toValue();\n      }\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let predicate = this.predicate.substitute(interpreter);\n    if (!(predicate instanceof Selector)) {\n      predicate = this.predicate;\n    }\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new FilterSelector(predicate as Selector, then as Selector);\n  }\n\n  protected filterSelected(interpreter: Interpreter): boolean {\n    return this.predicate.forSelected(interpreter, this.selected, this) !== void 0;\n  }\n\n  protected selected(interpreter: Interpreter): null {\n    return null;\n  }\n\n  override andThen(then: Selector): Selector {\n    return new FilterSelector(this.predicate, this.then.andThen(then));\n  }\n\n  override filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return this;\n    } else {\n      predicate = Item.fromAny(predicate);\n      return this.andThen(predicate.filter());\n    }\n  }\n\n  override get typeOrder(): number {\n    return 19;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof FilterSelector) {\n      let order = this.predicate.compareTo(that.predicate);\n      if (order === 0) {\n        order = this.then.compareTo(that.then);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FilterSelector) {\n      return this.predicate.equivalentTo(that.predicate, epsilon)\n          && this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FilterSelector) {\n      return this.predicate.equals(that.predicate) && this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(FilterSelector),\n        this.predicate.hashCode()), this.then.hashCode()));\n  }\n\n  override debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"filter\").write(40/*'('*/)\n        .debug(this.predicate).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override clone(): Selector {\n    return new FilterSelector(this.predicate.clone(), this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"./Selector\";\nimport {AnyInterpreter, Interpreter} from \"../\"; // forward import\n\nexport class LiteralSelector extends Selector {\n  constructor(item: Item, then: Selector) {\n    super();\n    Object.defineProperty(this, \"item\", {\n      value: item.commit(),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"then\", {\n      value: then,\n      enumerable: true,\n    });\n  }\n\n  readonly item!: Item;\n\n  override readonly then!: Selector;\n\n  override forSelected<T>(interpreter: Interpreter,\n                          callback: (interpreter: Interpreter) => T | undefined): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S, interpreter: Interpreter) => T | undefined,\n                             thisArg: S): T | undefined;\n  override forSelected<T, S>(interpreter: Interpreter,\n                             callback: (this: S | undefined, interpreter: Interpreter) => T | undefined,\n                             thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth !== 0) {\n      const literal = this.item.evaluate(interpreter);\n      if (literal.isDefined()) {\n        // Push the literal onto the scope stack.\n        interpreter.pushScope(literal);\n        // Subselect the literal.\n        selected = this.then.forSelected(interpreter, callback, thisArg);\n        // Pop the literal off of the scope stack.\n        interpreter.popScope();\n      }\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  override mapSelected(interpreter: Interpreter,\n                       transform: (interpreter: Interpreter) => Item): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S, interpreter: Interpreter) => Item,\n                          thisArg: S): Item;\n  override mapSelected<S>(interpreter: Interpreter,\n                          transform: (this: S | undefined, interpreter: Interpreter) => Item,\n                          thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth !== 0) {\n      let literal = this.item.evaluate(interpreter);\n      if (literal.isDefined()) {\n        // Push the literal onto the scope stack.\n        interpreter.pushScope(literal);\n        // Transform the literal.\n        literal = this.then.mapSelected(interpreter, transform, thisArg);\n        // Pop the literal off of the scope stack.\n        interpreter.popScope();\n      }\n      result = literal;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  override substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const item = this.item.substitute(interpreter);\n    let then = this.then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this.then;\n    }\n    return new LiteralSelector(item, then as Selector);\n  }\n\n  override andThen(then: Selector): Selector {\n    return new LiteralSelector(this.item, this.then.andThen(then));\n  }\n\n  override get precedence(): number {\n    return this.item.precedence;\n  }\n\n  override get typeOrder(): number {\n    return 11;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof LiteralSelector) {\n      let order = this.item.compareTo(that.item);\n      if (order === 0) {\n        order = this.then.compareTo(that.then);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LiteralSelector) {\n      return this.item.equivalentTo(that.item, epsilon)\n          && this.then.equivalentTo(that.then, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LiteralSelector) {\n      return this.item.equals(that.item) && this.then.equals(that.then);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(LiteralSelector),\n        this.item.hashCode()), this.then.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Selector\").write(46/*'.'*/).write(\"literal\").write(40/*'('*/)\n        .debug(this.item).write(41/*')'*/);\n    this.then.debugThen(output);\n  }\n\n  override debugThen(output: Output): void {\n    // nop\n  }\n\n  override clone(): Selector {\n    return new LiteralSelector(this.item.clone(), this.then.clone());\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"../Item\";\nimport type {Value} from \"../Value\";\nimport {Expression} from \"../Expression\";\nimport type {InvokeOperator} from \"../operator/InvokeOperator\";\nimport type {Interpreter} from \"../interpreter/Interpreter\";\n\nexport abstract class Func extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  override isConstant(): boolean {\n    return false;\n  }\n\n  abstract override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item;\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    return void 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Slot} from \"../Slot\";\nimport {Value} from \"../Value\";\nimport {Record} from \"../Record\";\nimport {Text} from \"../Text\";\nimport type {InvokeOperator} from \"../operator/InvokeOperator\";\nimport {Func} from \"./Func\";\nimport {Interpreter} from \"../\"; // forward import\n\nexport class LambdaFunc extends Func {\n  constructor(bindings: Value, template: Value) {\n    super();\n    Object.defineProperty(this, \"bindings\", {\n      value: bindings,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"template\", {\n      value: template,\n      enumerable: true,\n    });\n  }\n\n  readonly bindings!: Value;\n\n  readonly template!: Value;\n\n  override get precedence(): number {\n    return 1;\n  }\n\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const bindings = this.bindings;\n    const arity = Math.max(1, bindings.length);\n    const params = Record.create(arity);\n    let i = 0;\n    let j = 0;\n    while (i < arity) {\n      const binding = bindings instanceof Record ? bindings.getItem(i) : i === 0 ? bindings : Item.absent();\n      const arg = args instanceof Record ? args.getItem(j).toValue() : j === 0 ? args : Value.absent();\n      if (binding instanceof Text && arg.isDistinct()) {\n        params.push(Slot.of(binding, arg));\n        j += 1;\n      } else if (binding instanceof Slot) {\n        if (arg.isDistinct()) {\n          params.push(binding.updatedValue(arg));\n        } else {\n          params.push(binding);\n        }\n        j += 1;\n      }\n      i += 1;\n    }\n    interpreter.pushScope(params);\n    const result = this.template.evaluate(interpreter);\n    interpreter.popScope();\n    return result;\n  }\n\n  override get typeOrder(): number {\n    return 50;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof LambdaFunc) {\n      let order = this.bindings.compareTo(that.bindings);\n      if (order === 0) {\n        order = this.template.compareTo(that.template);\n      }\n      return order;\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LambdaFunc) {\n      return this.bindings.equivalentTo(that.bindings, epsilon)\n          && this.template.equivalentTo(that.template, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LambdaFunc) {\n      return this.bindings.equals(that.bindings) && this.template.equals(that.template);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(LambdaFunc),\n        this.bindings.hashCode()), this.template.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output.debug(this.bindings).write(46/*'.'*/).write(\"lambda\").write(40/*'('*/)\n        .debug(this.template).write(41/*')'*/);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Func} from \"./Func\";\n\nexport abstract class BridgeFunc extends Func {\n  override get typeOrder(): number {\n    return 51;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof BridgeFunc) {\n      return Constructors.compare(this.constructor, that.constructor);\n    } else if (that instanceof Item) {\n      return Numbers.compare(this.typeOrder, that.typeOrder);\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown): boolean {\n    return this === that;\n  }\n\n  override equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  override hashCode(): number {\n    return Constructors.hash(this.constructor);\n  }\n\n  override debug(output: Output): void {\n    output = output.write(this.constructor.name);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport type {Value} from \"../Value\";\nimport {Record} from \"../Record\";\nimport {Num} from \"../Num\";\nimport type {InvokeOperator} from \"../operator/InvokeOperator\";\nimport type {Func} from \"./Func\";\nimport {BridgeFunc} from \"./BridgeFunc\";\nimport {Interpreter} from \"../\"; // forward import\n\nexport const MathModule = {} as {\n  readonly max: Func;\n\n  readonly min: Func;\n\n  readonly abs: Func;\n\n  readonly ceil: Func;\n\n  readonly floor: Func;\n\n  readonly round: Func;\n\n  readonly sqrt: Func;\n\n  readonly pow: Func;\n\n  readonly rate: Func;\n\n  readonly random: Func;\n\n  readonly scope: Record;\n};\n\nObject.defineProperty(MathModule, \"max\", {\n  get(): Func {\n    const func = new MaxFunc();\n    Object.defineProperty(MathModule, \"max\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"min\", {\n  get(): Func {\n    const func = new MinFunc();\n    Object.defineProperty(MathModule, \"min\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"abs\", {\n  get(): Func {\n    const func = new AbsFunc();\n    Object.defineProperty(MathModule, \"abs\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"ceil\", {\n  get(): Func {\n    const func = new CeilFunc();\n    Object.defineProperty(MathModule, \"ceil\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"floor\", {\n  get(): Func {\n    const func = new FloorFunc();\n    Object.defineProperty(MathModule, \"floor\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"round\", {\n  get(): Func {\n    const func = new RoundFunc();\n    Object.defineProperty(MathModule, \"round\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"sqrt\", {\n  get(): Func {\n    const func = new SqrtFunc();\n    Object.defineProperty(MathModule, \"sqrt\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"pow\", {\n  get(): Func {\n    const func = new PowFunc();\n    Object.defineProperty(MathModule, \"pow\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"rate\", {\n  get(): Func {\n    const func = new RateFunc();\n    Object.defineProperty(MathModule, \"rate\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"random\", {\n  get(): Func {\n    const func = new RandomFunc();\n    Object.defineProperty(MathModule, \"random\", {\n      value: func,\n      configurable: true,\n      enumerable: true,\n    });\n    return func;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\nObject.defineProperty(MathModule, \"scope\", {\n  get(): Record {\n    const scope = Record.create(10)\n        .slot(\"max\", MathModule.max)\n        .slot(\"min\", MathModule.min)\n        .slot(\"abs\", MathModule.abs)\n        .slot(\"ceil\", MathModule.ceil)\n        .slot(\"floor\", MathModule.floor)\n        .slot(\"round\", MathModule.round)\n        .slot(\"pow\", MathModule.pow)\n        .slot(\"sqrt\", MathModule.sqrt)\n        .slot(\"rate\", MathModule.rate)\n        .slot(\"random\", MathModule.random)\n        .commit();\n    Object.defineProperty(MathModule, \"scope\", {\n      value: scope,\n      configurable: true,\n      enumerable: true,\n    });\n    return scope;\n  },\n  configurable: true,\n  enumerable: true,\n});\n\n/** @hidden */\nclass MaxFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let x: Item;\n    let y: Item | undefined;\n    if (args.length >= 2) {\n      x = args.getItem(0).evaluate(interpreter);\n      y = args.getItem(1).evaluate(interpreter);\n    } else {\n      x = args.evaluate(interpreter);\n    }\n    if (y !== void 0) {\n      return x.max(y);\n    } else if (operator !== void 0) {\n      y = operator.state as Item;\n      const max = y !== void 0 ? x.max(y) : x;\n      operator.setState(max);\n      return max;\n    }\n    return Item.absent();\n  }\n\n  override expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    if (args.length === 1) {\n      args = args.evaluate(interpreter).toValue();\n      return this.invoke(args, interpreter, operator);\n    }\n    return void 0;\n  }\n}\n\n/** @hidden */\nclass MinFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let x: Item;\n    let y: Item | undefined;\n    if (args.length >= 2) {\n      x = args.getItem(0).evaluate(interpreter);\n      y = args.getItem(1).evaluate(interpreter);\n    } else {\n      x = args.evaluate(interpreter);\n    }\n    if (y !== void 0) {\n      return x.min(y);\n    } else if (operator !== void 0) {\n      y = operator.state as Item;\n      const min = y !== void 0 ? x.min(y) : x;\n      operator.setState(min);\n      return min;\n    }\n    return Item.absent();\n  }\n\n  override expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    if (args.length === 1) {\n      args = args.evaluate(interpreter).toValue();\n      return this.invoke(args, interpreter, operator);\n    }\n    return void 0;\n  }\n}\n\n/** @hidden */\nclass AbsFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Num) {\n      return args.abs();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass CeilFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Num) {\n      return args.ceil();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass FloorFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Num) {\n      return args.floor();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass RoundFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Num) {\n      return args.round();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass SqrtFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Num) {\n      return args.sqrt();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass PowFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const x = args.getItem(0).evaluate(interpreter);\n    const y = args.getItem(1).evaluate(interpreter);\n    if (x instanceof Num && y instanceof Num) {\n      return x.pow(y);\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass RateFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let value: number;\n    let period: number;\n    if (args.length >= 2) {\n      value = args.getItem(0).evaluate(interpreter).numberValue(NaN);\n      period = args.getItem(1).evaluate(interpreter).numberValue(1000);\n    } else {\n      value = args.evaluate(interpreter).numberValue(NaN);\n      period = 1000;\n    }\n    if (isFinite(value) && operator !== void 0) {\n      let state = operator.state as {v0: number, t0: number, dv: number, dt: number} | undefined;\n      if (state === void 0) {\n        state = {v0: value, t0: Date.now(), dv: 0, dt: 0};\n        operator.setState(state);\n      } else {\n        const t1 = Date.now();\n        const dt = t1 - state.t0;\n        if (dt > period && t1 > state.t0 || dt > 2 * period) {\n          const dv = value - state.v0;\n          state.v0 = value;\n          state.t0 = t1;\n          state.dv = dv;\n          state.dt = dt;\n        }\n        operator.setState(state);\n        if (state.dt !== 0) {\n          const rate = period * state.dv / state.dt;\n          return Num.from(rate);\n        }\n      }\n    }\n    return Item.absent();\n  }\n\n  override expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    args = args.evaluate(interpreter).toValue();\n    return this.invoke(args, interpreter, operator);\n  }\n}\n\n/** @hidden */\nclass RandomFunc extends BridgeFunc {\n  override invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    const lower = args.length >= 1 ? args.getItem(0).numberValue(0.0) : 0.0;\n    const upper = args.length >= 2 ? args.getItem(1).numberValue(lower + 1.0) : lower + 1.0;\n    const value = lower + Math.random() * (upper - lower);\n    return Num.from(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class FormException extends Error {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, FormException.prototype);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {AnyItem, Item} from \"../Item\";\nimport {AnyValue, Value} from \"../Value\";\nimport {TagForm} from \"../\"; // forward import\nimport {UnitForm} from \"../\"; // forward import\nimport {StringForm} from \"../\"; // forward import\nimport {NumberForm} from \"../\"; // forward import\nimport {BooleanForm} from \"../\"; // forward import\nimport {AnyForm} from \"../\"; // forward import\nimport {ItemForm} from \"../\"; // forward import\nimport {ValueForm} from \"../\"; // forward import\n\n/**\n * Transformation between a structurally typed [Item] and a nominally typed\n * JavaScript object.\n */\nexport abstract class Form<T, U = never> {\n  /**\n   * Returns the key of the tag attribute that distinguishes structures of this\n   * `Form`; returns `undefined` if this `Form` has no distinguishing tag\n   * attribute.  Used to accelerate distrcrimination of polymorphic structural\n   * types with nominal type hints.\n   */\n  declare readonly tag: string | undefined; // getter defined below to work around useDefineForClassFields lunacy\n\n  /**\n   * Returns a version of this `Form` that requires a head [Attr] with the\n   * given `tag` name.\n   */\n  withTag(tag: string | undefined): Form<T, U> {\n    if (tag !== void 0 && tag !== this.tag) {\n      return new TagForm(this, tag);\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Returns a default–possibly `undefined`–value of type `T`.  Used as the\n   * fallback return value when [Item.coerce coercing] an invalid structural\n   * value.\n   */\n  declare readonly unit: T | undefined; // getter defined below to work around useDefineForClassFields lunacy\n\n  /**\n   * Returns a version of this `Form` with the given `unit` value.\n   */\n  withUnit(unit: T | undefined): Form<T, U> {\n    if (unit !== this.unit) {\n      return new UnitForm(this, unit);\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Converts a nominally typed JavaScript `object` into its structurally typed\n   * equivalent, optionally based on the provided prototype `item`.\n   */\n  abstract mold(object: T | U, item?: Item): Item;\n\n  /**\n   * Converts a structurally typed `item` into a nominally typed JavaScript\n   * object, optionally based on the provided prototype `object`.\n   */\n  abstract cast(item: Item, object?: T): T | undefined;\n\n  @Lazy\n  static forString(): Form<string> {\n    return new StringForm(\"\");\n  }\n\n  @Lazy\n  static forNumber(): Form<number> {\n    return new NumberForm(0);\n  }\n\n  @Lazy\n  static forBoolean(): Form<boolean> {\n    return new BooleanForm(false);\n  }\n\n  @Lazy\n  static forAny(): Form<AnyItem> {\n    return new AnyForm(void 0);\n  }\n\n  @Lazy\n  static forItem(): Form<Item, AnyItem> {\n    return new ItemForm(Item.absent());\n  }\n\n  @Lazy\n  static forValue(): Form<Value, AnyValue> {\n    return new ValueForm(Value.absent());\n  }\n}\nObject.defineProperty(Form.prototype, \"tag\", {\n  get<T, U>(this: Form<T, U>): string | undefined {\n    return void 0;\n  },\n  enumerable: true,\n  configurable: true,\n});\nObject.defineProperty(Form.prototype, \"unit\", {\n  get<T, U>(this: Form<T, U>): T | undefined {\n    return void 0;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"../Item\";\nimport {Attr} from \"../Attr\";\nimport {Form} from \"./Form\";\n\n/** @hidden */\nexport class TagForm<T, U = never> extends Form<T, U> {\n  constructor(form: Form<T, U>, tag: string) {\n    super();\n    Object.defineProperty(this, \"form\", {\n      value: form,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"tag\", {\n      value: tag,\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly form!: Form<T, U>;\n\n  override readonly tag!: string;\n\n  override withTag(tag: string | undefined): Form<T, U> {\n     if (tag !== void 0 && tag !== this.tag) {\n      return new TagForm(this.form, tag);\n    } else if (tag === void 0) {\n      return this.form;\n    } else {\n      return this;\n    }\n  }\n\n  override readonly unit!: T | undefined; // // getter defined below to work around useDefineForClassFields lunacy\n\n  override withUnit(unit: T | undefined): Form<T, U> {\n    if (unit !== this.unit) {\n      return new TagForm(this.form.withUnit(unit), this.tag);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: T | U, item?: Item): Item {\n    item = this.form.mold(object, item);\n    if (!item.header(this.tag).isDefined()) {\n      item = item.prepended(Attr.of(this.tag));\n    }\n    return item;\n  }\n\n  override cast(item: Item, object?: T): T | undefined {\n    if (item.header(this.tag).isDefined()) {\n      return this.form.cast(item, object);\n    } else if (item.keyEquals(this.tag)) {\n      return this.form.cast(item.toValue(), object);\n    }\n    return void 0;\n  }\n}\nObject.defineProperty(TagForm.prototype, \"unit\", {\n  get<T, U>(this: TagForm<T, U>): T | undefined {\n    return this.form.unit;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"../Item\";\nimport {Form} from \"./Form\";\n\n/** @hidden */\nexport class UnitForm<T, U = never> extends Form<T, U> {\n  constructor(form: Form<T, U>, unit: T | undefined) {\n    super();\n    Object.defineProperty(this, \"form\", {\n      value: form,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly form!: Form<T, U>;\n\n  override readonly tag!: string | undefined; // // getter defined below to work around useDefineForClassFields lunacy\n\n  override withTag(tag: string | undefined): Form<T, U> {\n    if (tag !== this.tag) {\n      return new UnitForm(this.form.withTag(tag), this.unit);\n    } else {\n      return this;\n    }\n  }\n\n  override readonly unit!: T | undefined;\n\n  override withUnit(unit: T | undefined): Form<T, U> {\n    if (unit !== this.unit) {\n      return new UnitForm(this.form, unit);\n    } else if (unit === this.form.unit) {\n      return this.form;\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: T | U, item?: Item): Item {\n    if (arguments.length === 1) {\n      return this.form.mold(object);\n    } else {\n      return this.form.mold(object, item);\n    }\n  }\n\n  override cast(item: Item, object?: T): T | undefined {\n    if (arguments.length === 1) {\n      return this.form.cast(item);\n    } else {\n      return this.form.cast(item, object);\n    }\n  }\n}\nObject.defineProperty(UnitForm.prototype, \"tag\", {\n  get<T, U>(this: UnitForm<T, U>): string | undefined {\n    return this.form.tag;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const enum KeyEffect {\n  Update,\n  Remove,\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"../Item\";\nimport {Text} from \"../Text\";\nimport {Form} from \"./Form\";\n\n/** @hidden */\nexport class StringForm extends Form<string> {\n  constructor(unit?: string) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: string | undefined;\n\n  override withUnit(unit: string | undefined): Form<string> {\n    if (unit !== this.unit) {\n      return new StringForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: string, item?: Item): Item {\n    if (item === void 0) {\n      return Text.from(object);\n    } else {\n      return item.concat(Text.from(object));\n    }\n  }\n\n  override cast(item: Item, object?: string): string | undefined {\n    const value = item.target;\n    try {\n      return value.stringValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"../Item\";\nimport {Num} from \"../Num\";\nimport {Form} from \"./Form\";\n\n/** @hidden */\nexport class NumberForm extends Form<number> {\n  constructor(unit?: number) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: number | undefined;\n\n  override withUnit(unit: number | undefined): Form<number> {\n    if (unit !== this.unit) {\n      return new NumberForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: number, item?: Item): Item {\n    if (item === void 0) {\n      return Num.from(object);\n    } else {\n      return item.concat(Num.from(object));\n    }\n  }\n\n  override cast(item: Item, object?: number): number | undefined {\n    const value = item.target;\n    try {\n      return value.numberValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"../Item\";\nimport {Bool} from \"../Bool\";\nimport {Form} from \"./Form\";\n\n/** @hidden */\nexport class BooleanForm extends Form<boolean> {\n  constructor(unit?: boolean) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: boolean | undefined;\n\n  override withUnit(unit: boolean | undefined): Form<boolean> {\n    if (unit !== this.unit) {\n      return new BooleanForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: boolean, item?: Item): Item {\n    if (item === void 0) {\n      return Bool.from(object);\n    } else {\n      return item.concat(Bool.from(object));\n    }\n  }\n\n  override cast(item: Item, object?: boolean): boolean | undefined {\n    const value = item.target;\n    try {\n      return value.booleanValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Form} from \"./Form\";\n\n/** @hidden */\nexport class AnyForm extends Form<AnyItem> {\n  constructor(unit?: AnyItem) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: AnyItem | undefined;\n\n  override withUnit(unit: AnyItem | undefined): Form<AnyItem> {\n    if (unit !== this.unit) {\n      return new AnyForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: AnyItem, item?: Item): Item {\n    object = Item.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  override cast(item: Item, object?: AnyItem): AnyItem | undefined {\n    return item.toAny();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Form} from \"./Form\";\n\n/** @hidden */\nexport class ItemForm extends Form<Item, AnyItem> {\n  constructor(unit?: Item) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit !== void 0 ? unit.commit() : void 0,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: Item | undefined;\n\n  override withUnit(unit: Item | undefined): Form<Item> {\n    if (unit !== this.unit) {\n      return new ItemForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: AnyItem, item?: Item): Item {\n    object = Item.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  override cast(item: Item, object?: Item): Item | undefined {\n    return item;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"../Item\";\nimport {AnyValue, Value} from \"../Value\";\nimport {Form} from \"./Form\";\n\n/** @hidden */\nexport class ValueForm extends Form<Value, AnyValue> {\n  constructor(unit?: Value) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit !== void 0 ? unit.commit() : void 0,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: Value | undefined;\n\n  override withUnit(unit: Value | undefined): Form<Value> {\n    if (unit !== this.unit) {\n      return new ValueForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: AnyValue, item?: Item): Item {\n    object = Value.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  override cast(item: Item, object?: Value): Value | undefined {\n    return item.toValue();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport type {Value} from \"../Value\";\nimport type {Form} from \"../form/Form\";\n\n/** @hidden */\nexport class ValueCursor<V> extends Cursor<V> {\n  /** @hidden */\n  readonly cursor!: Cursor<Value>;\n  /** @hidden */\n  readonly form!: Form<V, unknown>;\n\n  constructor(cursor: Cursor<Value>, form: Form<V, unknown>) {\n    super();\n    Object.defineProperty(this, \"cursor\", {\n      value: cursor,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"form\", {\n      value: form,\n      enumerable: true,\n    });\n  }\n\n  override isEmpty(): boolean {\n    return this.cursor.isEmpty();\n  }\n\n  override head(): V {\n    const value = this.cursor.head();\n    return value.coerce(this.form);\n  }\n\n  override step(): void {\n    this.cursor.step();\n  }\n\n  override skip(count: number): void {\n    this.cursor.skip(count);\n  }\n\n  override hasNext(): boolean {\n    return this.cursor.hasNext();\n  }\n\n  override nextIndex(): number {\n    return this.cursor.nextIndex();\n  }\n\n  override next(): {value?: V, done: boolean} {\n    const {value, done} = this.cursor.next();\n    if (value !== void 0) {\n      return {value: value.coerce(this.form), done};\n    } else {\n      return {done};\n    }\n  }\n\n  override hasPrevious(): boolean {\n    return this.cursor.hasPrevious();\n  }\n\n  override previousIndex(): number {\n    return this.cursor.previousIndex();\n  }\n\n  override previous(): {value?: V, done: boolean} {\n    const {value, done} = this.cursor.previous();\n    if (value !== void 0) {\n      return {value: value.coerce(this.form), done};\n    } else {\n      return {done};\n    }\n  }\n\n  override delete(): void {\n    this.cursor.delete();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport type {Value} from \"../Value\";\nimport type {Form} from \"../form/Form\";\n\n/** @hidden */\nexport class ValueEntryCursor<K, V> extends Cursor<[K, V]> {\n  /** @hidden */\n  readonly cursor!: Cursor<[Value, Value]>;\n  /** @hidden */\n  readonly keyForm!: Form<K, unknown>;\n  /** @hidden */\n  readonly valueForm!: Form<V, unknown>;\n\n  constructor(cursor: Cursor<[Value, Value]>, keyForm: Form<K, unknown>, valueForm: Form<V, unknown>) {\n    super();\n    Object.defineProperty(this, \"cursor\", {\n      value: cursor,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"keyForm\", {\n      value: keyForm,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"valueForm\", {\n      value: valueForm,\n      enumerable: true,\n    });\n  }\n\n  override isEmpty(): boolean {\n    return this.cursor.isEmpty();\n  }\n\n  override head(): [K, V] {\n    const pair = this.cursor.head();\n    return [pair[0].coerce(this.keyForm), pair[1].coerce(this.valueForm)];\n  }\n\n  override step(): void {\n    this.cursor.step();\n  }\n\n  override skip(count: number): void {\n    this.cursor.skip(count);\n  }\n\n  override hasNext(): boolean {\n    return this.cursor.hasNext();\n  }\n\n  override nextIndex(): number {\n    return this.cursor.nextIndex();\n  }\n\n  override next(): {value?: [K, V], done: boolean} {\n    const {value, done} = this.cursor.next();\n    if (value !== void 0) {\n      return {value: [value[0].coerce(this.keyForm), value[1].coerce(this.valueForm)], done};\n    } else {\n      return {done};\n    }\n  }\n\n  override hasPrevious(): boolean {\n    return this.cursor.hasPrevious();\n  }\n\n  override previousIndex(): number {\n    return this.cursor.previousIndex();\n  }\n\n  override previous(): {value?: [K, V], done: boolean} {\n    const {value, done} = this.cursor.previous();\n    if (value !== void 0) {\n      return {value: [value[0].coerce(this.keyForm), value[1].coerce(this.valueForm)], done};\n    } else {\n      return {done};\n    }\n  }\n\n  override delete(): void {\n    this.cursor.delete();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Outlet} from \"./Outlet\";\n\nexport type InletType = \"value\" | \"map\";\n\nexport interface InletOptions {\n  name?: string;\n  type?: InletType;\n}\n\n/**\n * Input connector into a [[Streamlet]].  An `Inlet` represents a source from\n * which a `Streamlet` acquires state.\n *\n * In order for an `Inlet` to provide state to its `Streamlet`, it must bind to\n * an [[input]] source.  The input source of an `Inlet` is an [[Outlet]] of\n * some other `Streamlet`.  The [[bindInput]] method \"plugs\" the `Inlet` into\n * an `Outlet`.  The [[unbindInput]] method \"unplugs\" the `Inlet` from its\n * connected `Outlet`.\n *\n * The state of an `Inlet` has an integral _version_.  When its version is\n * negative, the state of the `Inlet` is considered _decoherent_.  When any\n * state on which an `Inlet` transitively depends changes, the `Inlet` will be\n * [[decohereOutput decohered]].  Decoherence does not immediately cause an\n * `Inlet` to recompute its state.  Instead, a separate [[recohereOutput\n * recohere]] step causes all of the decoherent paths in the dataflow graph\n * passing through the `Inlet` to make their states coherent again.\n */\nexport interface Inlet<I = unknown> {\n  /**\n   * The `Outlet` from which this `Inlet` acquires its state, or `null` if\n   * this `Inlet` is disconnected.\n   */\n  readonly input: Outlet<I> | null;\n\n  /**\n   * Connects this `Inlet` to an `Outlet` from which it will  acquire its\n   * state.  If this `Inlet` is already connected, it will first disconnect\n   * from its existing input.  Then, after updating its [[input]] property,\n   * the `Inlet` will invoke [[Outlet.bindOutput]] on its new `input`.\n   */\n  bindInput(input: Outlet<I> | null): void;\n\n  /**\n   * Disconnects this `Inlet` from its input `Outlet`, if connected.  After\n   * setting its [[input]] property to `null`, the `Inlet` will invoke\n   * [[Outlet.unbindOutput]] on its old input, if defined.\n   */\n  unbindInput(): void;\n\n  /**\n   * Disconnects all `Inlet`s dominated by this `Inlet` in the dataflow\n   * dependency graph.  Used to recursively clean up chains of combinators\n   * terminating at this `Inlet`.\n   */\n  disconnectInputs(): void;\n\n  /**\n   * Disconnects all `Outlet`s dominated by this `Inlet` in the dataflow graph.\n   * Used to recursively clean up chains of combinators passing through this\n   * `Inlet`.\n   */\n  disconnectOutputs(): void;\n\n  /**\n   * Marks this `Inlet`—and the `Streamlet` to which this `Inlet` is attached—as\n   * having decoherent state.  Decohering an `Inlet` will recursively decohere\n   * all streamlets that transitively depend on the state of this `Inlet`.\n   * Decohering an `Inlet` does not cause its state to be recomputed.  A\n   * subsequent [[recohereOutput]] call will eventually make the state of the\n   * `Inlet` coherent again.\n   */\n  decohereOutput(): void;\n\n  /**\n   * Updates the state of this `Inlet` to make it consistent with the target\n   * `version`. The `Inlet` only needs to update if its current `version`\n   * differs from the target `version`.  To update its state, the `Inlet` first\n   * invokes [[Outlet.recohereInput]] on its [[input]], to ensure that its\n   * input is coherent.  It then invokes [[Streamlet.recohere]] on the\n   * `Streamlet` to which it's attached, causing the `Streamlet` to make its\n   * own state coherent again.\n   */\n  recohereOutput(version: number): void;\n}\n\nexport const Inlet = {} as {\n   is<I>(object: unknown): object is Inlet<I>;\n};\n\nInlet.is = function <I>(object: unknown): object is Inlet<I> {\n  if (typeof object === \"object\" && object !== null) {\n    const inlet = object as Inlet<I>;\n    return \"input\" in inlet\n        && typeof inlet.bindInput === \"function\"\n        && typeof inlet.unbindInput === \"function\";\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Iterator} from \"@swim/util\";\nimport type {Inlet} from \"./Inlet\";\nimport type {OutletCombinators} from \"./OutletCombinators\";\nimport type {MapValueFunction, WatchValueFunction} from \"./function\";\n\nexport type OutletType = \"value\" | \"map\";\n\nexport interface OutletOptions {\n  name?: string;\n  type?: OutletType;\n}\n\n/**\n * Output connector from a [[Streamlet]].  An `Outlet` represents a sink to\n * which a `Streamlet` provides state.\n *\n * An `Outlet` has a one-to-many relationship with a set of output sinks.\n * An output sink of an `Outlet` is an `Inlet` of some other `Streamlet`.\n * The [[bindOutput]] method \"plugs\" an `Inlet` into the `Outlet`.\n * The [[unbindOutput]] method \"unplugs\" an `Inlet` from the `Outlet`.\n */\nexport interface Outlet<O = unknown> extends OutletCombinators<O> {\n  /**\n   * Returns the current state of this `Outlet`.\n   */\n  get(): O | undefined;\n\n  /**\n   * Returns an `Iterator` over the set of `Inlet`s that depend on the state of\n   * this `Outlet`.\n   */\n  outputIterator(): Iterator<Inlet<O>>;\n\n  /**\n   * Adds an `output` to the set of `Inlet`s that depend on the state of this\n   * `Outlet`.  The `output` will be decohered when the state of this\n   * `Outlet` is decohered, and recohered when this `Outlet` is recohered.\n   */\n  bindOutput(output: Inlet<O>): void;\n\n  /**\n   * Removes an `output` from the set of `Inlet`s that depend on the state of\n   * this `Outlet`.\n   */\n  unbindOutput(output: Inlet<O>): void;\n\n  /**\n   * Disconnects all outputs from this `Outlet` by invoking\n   * [[Inlet.unbindInput]] on each `Inelt` that depends on the state of this\n   * `Outlet`.\n   */\n  unbindOutputs(): void;\n\n  /**\n   * Disconnects all `Outlet`s dominated by this `Outlet` in the dataflow\n   * graph.  Used to recursively clean up chains of combinators originating\n   * from this `Inlet`.\n   */\n  disconnectOutputs(): void;\n\n  /**\n   * Disconnects all `Inlet`s dominated by this `Outlet` in the dataflow\n   * dependency graph.  Used to recursively clean up chains of combinators\n   * passing through this `Outlet`.\n   */\n  disconnectInputs(): void;\n\n  /**\n   * Marks this `Outlet`—and all [[outputIterator outputs]] that depend on the\n   * state of this `Outlet`—as having decoherent state.\n   */\n  decohereInput(): void;\n\n  /**\n   * Updates the state of this `Outlet` to make it consistent with the target\n   * `version`.  The `Outlet` only needs to update if its current `version`\n   * differs from the target `version`.  To update its state, the `Outlet`\n   * first invokes [[Streamlet.recohere]] on the `Streamlet` to which\n   * it's attached. It then invokes [[Inlet.recohereOutput]] on each of its\n   * dependent [[outputIterator outputs]].\n   */\n  recohereInput(version: number): void;\n\n  memoize(): Outlet<O>;\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n\n  watch(func: WatchValueFunction<O>): this;\n}\n\nexport const Outlet = {} as {\n  is<O>(object: unknown): object is Outlet<O>;\n};\n\nOutlet.is = function <O>(object: unknown): object is Outlet<O> {\n  if (typeof object === \"object\" && object !== null) {\n    const outlet = object as Outlet<O>;\n    return typeof outlet.outputIterator === \"function\"\n        && typeof outlet.bindOutput === \"function\"\n        && typeof outlet.unbindOutput === \"function\";\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Outlet} from \"./Outlet\";\nimport type {MapValueFunction, WatchValueFunction} from \"./function\";\nimport {MemoizeValueCombinator} from \"./\"; // forward import\nimport {MapValueCombinator} from \"./\"; // forward import\nimport {WatchValueCombinator} from \"./\"; // forward import\n\nexport interface OutletCombinators<O> {\n  memoize(): Outlet<O>;\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n\n  watch(func: WatchValueFunction<O>): this;\n}\n\nexport const OutletCombinators = {} as {\n  define<O>(prototype: OutletCombinators<O>): void;\n\n  /** @hidden */\n  memoize<O>(this: Outlet<O>): Outlet<O>;\n\n  /** @hidden */\n  map<O, O2>(this: Outlet<O>, func: MapValueFunction<O, O2>): Outlet<O2>;\n\n  /** @hidden */\n  watch<O>(this: Outlet<O>, func: WatchValueFunction<O>): Outlet<O>;\n};\n\nOutletCombinators.define = function <O>(prototype: Outlet<O>): void {\n  if (!Object.prototype.hasOwnProperty.call(prototype, \"memoize\")) {\n    prototype.memoize = OutletCombinators.memoize;\n  }\n  if (!Object.prototype.hasOwnProperty.call(prototype, \"map\")) {\n    prototype.map = OutletCombinators.map;\n  }\n  if (!Object.prototype.hasOwnProperty.call(prototype, \"watch\")) {\n    prototype.watch = OutletCombinators.watch;\n  }\n};\n\nOutletCombinators.memoize = function <O>(this: Outlet<O>): Outlet<O> {\n  const combinator = new MemoizeValueCombinator<O>();\n  combinator.bindInput(this);\n  return combinator;\n};\n\nOutletCombinators.map = function <O, O2>(this: Outlet<O>, func: MapValueFunction<O, O2>): Outlet<O2> {\n  const combinator = new MapValueCombinator<O, O2>(func);\n  combinator.bindInput(this);\n  return combinator;\n};\n\nOutletCombinators.watch = function <O>(this: Outlet<O>, func: WatchValueFunction<O>): Outlet<O> {\n  const combinator = new WatchValueCombinator<O>(func);\n  combinator.bindInput(this);\n  return this;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Inlet} from \"./Inlet\";\nimport type {KeyEffect} from \"./KeyEffect\";\n\n/**\n * Input connector into a `Streamlet` for a key-value map state.\n */\nexport interface MapInlet<K, V, I> extends Inlet<I> {\n  /**\n   * Marks this `MapInlet` as needing an `effect` applied to a given `key`.\n   * Decohering an individual key decoheres the entire state of the `Inlet`.\n   * But only the decoherent keys need to be updated in order to recohere the\n   * overall state of the `Inlet`.\n   */\n  decohereOutputKey(key: K, effect: KeyEffect): void;\n\n  /**\n   * Updates the state of an individual `key` in this `MapInlet` to make it\n   * consistent with the target `version`.  The `MapInlet` only needs to update\n   * if the current `version` differs from the target `version`.  To update the\n   * state of a key, the `MapInlet` first invokes [[MapOutlet.recohereInputKey]]\n   * on its [[input]], if its input is a `MapOutlet`, or it invokes\n   * [[Outlet.recohereInput]], if its input is not a `MapOutlet`.  Then,\n   * if all decoherent keys have been recohered, the `MapInlet` invokes\n   * [[Streamlet.recohere]] on its attached streamlet.\n   */\n  recohereOutputKey(key: K, version: number): void;\n}\n\nexport const MapInlet = {} as {\n  is<K, V, I>(object: unknown): object is MapInlet<K, V, I>;\n};\n\nMapInlet.is = function <K, V, I>(object: unknown): object is MapInlet<K, V, I> {\n  if (typeof object === \"object\" && object !== null) {\n    const inlet = object as MapInlet<K, V, I>;\n    return Inlet.is(inlet)\n        && typeof inlet.decohereOutputKey === \"function\"\n        && typeof inlet.recohereOutputKey === \"function\";\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Iterator, Map} from \"@swim/util\";\nimport {Outlet} from \"./Outlet\";\nimport type {KeyEffect} from \"./KeyEffect\";\nimport type {MapOutletCombinators} from \"./MapOutletCombinators\";\nimport type {FilterFieldsFunction} from \"./function\";\nimport type {MapValueFunction, MapFieldValuesFunction} from \"./function\";\nimport type {WatchValueFunction, WatchFieldsFunction} from \"./function\";\n\n/**\n * Output connector from a [[Streamlet]] for a key-value map state.\n */\nexport interface MapOutlet<K, V, O> extends Outlet<O>, MapOutletCombinators<K, V, O> {\n  /**\n   * Returns `true` if the current state of this `MapOutlet` contains the given\n   * `key`; otherwise returns `false`.\n   */\n  has(key: K): boolean;\n\n  /**\n   * Returns the current state of this `Outlet`.\n   */\n  get(): O | undefined;\n\n  /**\n   * Returns the value assocaited with the given `key` in the current state of\n   * this `MapOutlet`, if defined; otherwise returns `undefined`.\n   */\n  get(key: K): V | undefined;\n\n  /**\n   * Returns an `Iterator` over the keys in the current state of this `MapOutlet`.\n   */\n  keyIterator(): Iterator<K>;\n\n  /**\n   * Returns an `Outlet` that updates when the specified `key` updates.\n   */\n  outlet(key: K): Outlet<V>;\n\n  /**\n   * Marks this `MapOutlet` as needing an `effect` applied to a given `key`.\n   * Decohering an individual key decoheres the entire state of the `Outlet`.\n   * But only the decoherent keys need to be updated in order to recohere the\n   * overall state of the `Outlet`.\n   */\n  decohereInputKey(key: K, effect: KeyEffect): void;\n\n  /**\n   * Updates the state of an individual `key` in this `MapOutlet` to make it\n   * consistent with the target `version`.  The `MapOutlet` only needs to\n   * update if its current `version` differs from the target `version`.\n   * To update the state of a key, the `MapOutlet` first invokes\n   * [[Streamlet.recohere]] on its attached streamlets.  Then, for each\n   * dependent output, it invokes [[MapInlet.recohereOutputKey]], if the\n   * dependent output is a [[MapInlet]], or it invokes [[Inlet.recohere]],\n   * if the dependent output is not a `MapInlet`.\n   */\n  recohereInputKey(key: K, version: number): void;\n\n  memoize(): MapOutlet<K, V, O>;\n\n  filter(func: FilterFieldsFunction<K, V>): MapOutlet<K, V, Map<K, V>>;\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<K, V, V2>): MapOutlet<K, V2, Map<K, V2>>;\n\n  reduce<U>(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): Outlet<U>;\n\n  watch(func: WatchValueFunction<O>): this;\n  watch(func: WatchFieldsFunction<K, V>): this;\n}\n\nexport const MapOutlet = {} as {\n  is<K, V, I>(object: unknown): object is MapOutlet<K, V, I>;\n};\n\nMapOutlet.is = function <K, V, I>(object: unknown): object is MapOutlet<K, V, I> {\n  if (typeof object === \"object\" && object !== null) {\n    const outlet = object as MapOutlet<K, V, I>;\n    return Outlet.is(outlet)\n        && typeof outlet.keyIterator === \"function\"\n        && typeof outlet.outlet === \"function\";\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Map} from \"@swim/util\";\nimport type {Outlet} from \"./Outlet\";\nimport type {OutletCombinators} from \"./OutletCombinators\";\nimport type {MapOutlet} from \"./MapOutlet\";\nimport type {FilterFieldsFunction} from \"./function\";\nimport type {MapValueFunction, MapFieldValuesFunction} from \"./function\";\nimport type {WatchValueFunction, WatchFieldsFunction} from \"./function\";\nimport {MemoizeMapCombinator} from \"./\"; // forward import\nimport {FilterFieldsCombinator} from \"./\"; // forward import\nimport {MapValueCombinator} from \"./\"; // forward import\nimport {MapFieldValuesCombinator} from \"./\"; // forward import\nimport {ReduceFieldsCombinator} from \"./\"; // forward import\nimport {WatchValueCombinator} from \"./\"; // forward import\nimport {WatchFieldsCombinator} from \"./\"; // forward import\n\nexport interface MapOutletCombinators<K, V, O> extends OutletCombinators<O> {\n  memoize(): MapOutlet<K, V, O>;\n\n  filter(func: FilterFieldsFunction<K, V>): MapOutlet<K, V, Map<K, V>>;\n\n  map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<K, V, V2>): MapOutlet<K, V2, Map<K, V2>>;\n\n  reduce<U>(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): Outlet<U>;\n\n  watch(func: WatchValueFunction<O>): this;\n  watch(func: WatchFieldsFunction<K, V>): this;\n}\n\nexport const MapOutletCombinators = {} as {\n  define<K, V, O>(prototype: MapOutletCombinators<K, V, O>): void;\n\n  /** @hidden */\n  memoize<K, V, O>(this: MapOutlet<K, V, O>): MapOutlet<K, V, O>;\n\n  /** @hidden */\n  filter<K, V, O>(this: MapOutlet<K, V, O>, func: FilterFieldsFunction<K, V>): MapOutlet<K, V, Map<K, V>>;\n\n  /** @hidden */\n  map<K, V, O, O2>(this: MapOutlet<K, V, O>, func: MapValueFunction<O, O2>): Outlet<O2>;\n  /** @hidden */\n  map<K, V, O, V2>(this: MapOutlet<K, V, O>, func: MapFieldValuesFunction<K, V, V2>): MapOutlet<K, V2, Map<K, V2>>;\n\n  /** @hidden */\n  reduce<K, V, O, U>(this: MapOutlet<K, V, O>, identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): Outlet<U>;\n\n  /** @hidden */\n  watch<K, V, O>(this: MapOutlet<K, V, O>, func: WatchValueFunction<O>): MapOutlet<K, V, O>;\n  /** @hidden */\n  watch<K, V, O>(this: MapOutlet<K, V, O>, func: WatchFieldsFunction<K, V>): MapOutlet<K, V, O>;\n};\n\nMapOutletCombinators.define = function <K, V, O>(prototype: MapOutlet<K, V, O>): void {\n  if (!Object.prototype.hasOwnProperty.call(prototype, \"memoize\")) {\n    prototype.memoize = MapOutletCombinators.memoize;\n  }\n  if (!Object.prototype.hasOwnProperty.call(prototype, \"filterr\")) {\n    prototype.filter = MapOutletCombinators.filter;\n  }\n  if (!Object.prototype.hasOwnProperty.call(prototype, \"map\")) {\n    prototype.map = MapOutletCombinators.map;\n  }\n  if (!Object.prototype.hasOwnProperty.call(prototype, \"reduce\")) {\n    prototype.reduce = MapOutletCombinators.reduce;\n  }\n  if (!Object.prototype.hasOwnProperty.call(prototype, \"watch\")) {\n    prototype.watch = MapOutletCombinators.watch;\n  }\n};\n\nMapOutletCombinators.memoize = function <K, V, O>(this: MapOutlet<K, V, O>): MapOutlet<K, V, O> {\n  const combinator = new MemoizeMapCombinator<K, V, O>();\n  combinator.bindInput(this);\n  return combinator;\n};\n\nMapOutletCombinators.filter = function <K, V, O>(this: MapOutlet<K, V, O>, func: FilterFieldsFunction<K, V>): MapOutlet<K, V, Map<K, V>> {\n  const combinator = new FilterFieldsCombinator<K, V, O>(func);\n  combinator.bindInput(this);\n  return combinator;\n};\n\nMapOutletCombinators.map = function <K, V, O, V2>(this: MapOutlet<K, V, O>, func: MapValueFunction<O, V2> | MapFieldValuesFunction<K, V, V2>): Outlet<V2> | MapOutlet<K, V2, Map<K, V2>> {\n  if (func.length === 1) {\n    const combinator = new MapValueCombinator<O, V2>(func as MapValueFunction<O, V2>);\n    combinator.bindInput(this);\n    return combinator;\n  } else {\n    const combinator = new MapFieldValuesCombinator<K, V, V2, O>(func as MapFieldValuesFunction<K, V, V2>);\n    combinator.bindInput(this);\n    return combinator;\n  }\n} as typeof MapOutletCombinators.map;\n\nMapOutletCombinators.reduce = function <K, V, O, U>(this: MapOutlet<K, V, O>, identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): Outlet<U> {\n  const combinator = new ReduceFieldsCombinator<K, V, O, U>(identity, accumulator, combiner);\n  combinator.bindInput(this);\n  return combinator;\n};\n\nMapOutletCombinators.watch = function <K, V, O>(this: MapOutlet<K, V, O>, func: WatchValueFunction<O> | WatchFieldsFunction<K, V>): MapOutlet<K, V, O> {\n  if (func.length === 1) {\n    const combinator = new WatchValueCombinator<O>(func as WatchValueFunction<O>);\n    combinator.bindInput(this);\n    return this;\n  } else {\n    const combinator = new WatchFieldsCombinator<K, V, O>(func as WatchFieldsFunction<K, V>);\n    combinator.bindInput(this);\n    return this;\n  }\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class StreamletException extends Error {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, StreamletException.prototype);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Outlet} from \"./Outlet\";\nimport type {StreamletContext} from \"./StreamletContext\";\n\nexport interface StreamletScope<O> {\n  /**\n   * The lexically scoped parent of this `StreamletScope`, or `null` if this\n   * `StreamletScope` has no lexical parent.\n   */\n  readonly streamletScope: StreamletScope<O> | null;\n\n  /**\n   * The environment in which this `StreamletScope` operates.\n   */\n  readonly streamletContext: StreamletContext | null;\n\n  /**\n   * Returns an `Outlet` that updates when the specified `key` updates.\n   */\n  outlet(key: string): Outlet<O> | null;\n}\n\nexport const StreamletScope = {} as {\n  is<O>(object: unknown): object is StreamletScope<O>;\n};\n\nStreamletScope.is = function <O>(object: unknown): object is StreamletScope<O> {\n  if (typeof object === \"object\" && object !== null) {\n    const scope = object as StreamletScope<O>;\n    return \"streamletScope\" in scope\n        && \"streamletContext\" in scope\n        && typeof scope.outlet === \"function\";\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Inlet} from \"./Inlet\";\nimport type {Outlet} from \"./Outlet\";\nimport type {StreamletContext} from \"./StreamletContext\";\nimport type {StreamletScope} from \"./StreamletScope\";\n\n/**\n * Stateful node in a dataflow graph that uses the state of its [[Inlet\n * inlets]] to compute the state of its [[Outlet Outlets]].\n */\nexport interface Streamlet<I = unknown, O = I> extends StreamletScope<O> {\n  /**\n   * The lexically scoped parent of this `Streamlet`, or `null` if this\n   * `Streamlet` has no lexical parent.\n   */\n  readonly streamletScope: StreamletScope<O> | null;\n\n  /**\n   * Sets the lexically scoped parent of this `Streamlet`.\n   */\n  setStreamletScope(scope: StreamletScope<O> | null): void;\n\n  /**\n   * The environment in which this `Streamlet` operates.\n   */\n  readonly streamletContext: StreamletContext | null;\n\n  /**\n   * Sets the environment in which this `Streamlet` operates.\n   */\n  setStreamletContext(context: StreamletContext | null): void;\n\n  /**\n   * Returns the `Inlet` to this `Streamlet` identified by the given `key`;\n   * returns `null` if this `Streamlet` has no such `Inlet`.\n   */\n  inlet(key: string): Inlet<I> | null;\n\n  /**\n   * Connects the `Inlet` of this `Streamlet`, identified by the given `key` to\n   * the `input` from which the `Inlet` should acquire its state.  Delegates to\n   * [[Inlet.bindInput]] on the identified `Inlet`.\n   *\n   * @throws `Error` if this `Streamlet` has no `Inlet` with the given `key`.\n   */\n  bindInput(key: string, input: Outlet<I>): void;\n\n  /**\n   * Disconnects the `Inlet` of this `Streamlet`, identified by the given\n   * `key`, from its [[Inlet.input input]] `Outlet`, if connected.  Delegates\n   * to [[Inlet.unbindInput]] on the identified `Inlet`.\n   *\n   * @throws `Error` if this `Streamlet` has no `Inlet` with the given `key`.\n   */\n  unbindInput(key: string): void;\n\n  /**\n   * Returns the `Outlet` of this `Streamlet` identified by the given `key`;\n   * returns `null` if this `Streamlet` has no such `Outlet`.\n   */\n  outlet(key: string): Outlet<O> | null;\n\n  /**\n   * Disconnects all `Inlet`s dominated by this `Streamlet` in the dataflow\n   * dependency graph.  Used to recursively clean up chains of combinators\n   * terminating at this `Streamlet`.\n   */\n  disconnectInputs(): void;\n\n  /**\n   * Disconnects all `Inlets`s dominated by this `Streamlet` in the dataflow\n   * graph.  Used to recursively clean up chains of combinators originating\n   * from this `Streamlet`.\n   */\n  disconnectOutputs(): void;\n\n  /**\n   * Marks this `Streamlet`—and all of its outlets—as having decoherent state.\n   * Decohering a `Streamlet` will recursively decohere all streamlets that\n   * transitively depend on the state of this `Streamlet`.  Decohering a\n   * `Streamlet` does not cause its state to be recomputed.  A subsequent\n   * [[recohere]] call will eventually make the state of the `Streamlet`\n   * coherent again.\n   */\n  decohere(): void;\n\n  /**\n   * Updates the state of this `Streamlet` to make it consistent with the\n   * target `version`.  The `Streamlet` only needs to update if its current\n   * `version` differs from the target `version`.  To update its state, the\n   * `Streamlet` first invokes [[Inlet.recohereOutput]] on each of its inlets,\n   * to ensure that its input states are coherent.  It then recomputes its own\n   * state in an implementation defined manner.  Finally, it invokes\n   * [[Outlet.recohereInput]] on its outlets, causing all transitively\n   * dependent streamlets to make their own states coherent again.\n   */\n  recohere(version: number): void;\n}\n\nexport const Streamlet = {} as {\n  is<I, O>(object: unknown): object is Streamlet<I, O>;\n};\n\nStreamlet.is = function <I, O>(object: unknown): object is Streamlet<I, O> {\n  if (typeof object === \"object\" && object !== null) {\n    const streamlet = object as Streamlet<I, O>;\n    return \"streamletScope\" in streamlet\n        && typeof streamlet.setStreamletScope === \"function\"\n        && \"streamletContext\" in streamlet\n        && typeof streamlet.setStreamletContext === \"function\";\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Inlet} from \"./Inlet\";\nimport type {Outlet} from \"./Outlet\";\n\nexport abstract class AbstractInlet<I> implements Inlet<I> {\n  constructor() {\n    Object.defineProperty(this, \"input\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly input!: Outlet<I> | null;\n\n  /** @hidden */\n  readonly version!: number;\n\n  bindInput(newInput: Outlet<I> | null): void {\n    const oldInput = this.input;\n    if (oldInput !== newInput) {\n      if (oldInput !== null) {\n        oldInput.unbindOutput(this);\n      }\n      Object.defineProperty(this, \"input\", {\n        value: newInput,\n        enumerable: true,\n        configurable: true,\n      });\n      if (newInput !== null) {\n        newInput.bindOutput(this);\n      }\n    }\n  }\n\n  unbindInput(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  disconnectInputs(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      oldInput.disconnectInputs();\n    }\n  }\n\n  disconnectOutputs(): void {\n    // nop\n  }\n\n  decohereOutput(): void {\n    if (this.version >= 0) {\n      this.willDecohereOutput();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereOutput();\n      this.didDecohereOutput();\n    }\n  }\n\n  recohereOutput(version: number): void {\n    if (this.version < 0) {\n      this.willRecohereOutput(version);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      if (this.input !== null) {\n        this.input.recohereInput(version);\n      }\n      this.onRecohereOutput(version);\n      this.didRecohereOutput(version);\n    }\n  }\n\n  protected willDecohereOutput(): void {\n    // hook\n  }\n\n  protected onDecohereOutput(): void {\n    // hook\n  }\n\n  protected didDecohereOutput(): void {\n    // hook\n  }\n\n  protected willRecohereOutput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutput(version: number): void {\n    // hook\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Cursor} from \"@swim/util\";\nimport type {Inlet} from \"./Inlet\";\nimport type {Outlet} from \"./Outlet\";\nimport {OutletCombinators} from \"./OutletCombinators\";\n\nexport abstract class AbstractOutlet<O> implements Outlet<O> {\n  constructor() {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<O>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  abstract get(): O | undefined;\n\n  outputIterator(): Cursor<Inlet<O>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n  }\n\n  disconnectInputs(): void {\n    // nop\n  }\n\n  decohereInput(): void {\n    if (this.version >= 0) {\n      this.willDecohereInput();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereInput();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        outputs[i]!.decohereOutput();\n      }\n      this.didDecohereInput();\n    }\n  }\n\n  recohereInput(version: number): void {\n    if (this.version < 0) {\n      this.willRecohereInput(version);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohereInput(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        outputs[i]!.recohereOutput(version);\n      }\n      this.didRecohereInput(version);\n    }\n  }\n\n  protected willDecohereInput(): void {\n    // hook\n  }\n\n  protected onDecohereInput(): void {\n    // hook\n  }\n\n  protected didDecohereInput(): void {\n    // hook\n  }\n\n  protected willRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereInput(version: number): void {\n    // hook\n  }\n}\nexport interface AbstractOutlet<O> extends OutletCombinators<O> {\n}\nOutletCombinators.define(AbstractOutlet.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Iterator, Cursor} from \"@swim/util\";\nimport type {Inlet} from \"./Inlet\";\nimport type {Outlet} from \"./Outlet\";\nimport {OutletCombinators} from \"./OutletCombinators\";\nimport type {Inoutlet} from \"./Inoutlet\";\n\nexport abstract class AbstractInoutlet<I, O> implements Inoutlet<I, O> {\n  constructor() {\n    Object.defineProperty(this, \"input\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly input!: Outlet<I> | null;\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<O>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  bindInput(newInput: Outlet<I> | null): void {\n    const oldInput = this.input;\n    if (oldInput !== newInput) {\n      if (oldInput !== null) {\n        oldInput.unbindOutput(this);\n      }\n      Object.defineProperty(this, \"input\", {\n        value: newInput,\n        enumerable: true,\n        configurable: true,\n      });\n      if (newInput !== null) {\n        newInput.bindOutput(this);\n      }\n    }\n  }\n\n  unbindInput(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  disconnectInputs(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      oldInput.disconnectInputs();\n    }\n  }\n\n  abstract get(): O | undefined;\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this.version >= 0) {\n      this.willDecohere();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohere();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        outputs[i]!.decohereOutput();\n      }\n      this.didDecohere();\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this.version < 0) {\n      this.willRecohere(version);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      if (this.input !== null) {\n        this.input.recohereInput(version);\n      }\n      this.onRecohere(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        outputs[i]!.recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohere(): void {\n    // stub\n  }\n\n  protected onDecohere(): void {\n    // stub\n  }\n\n  protected didDecohere(): void {\n    // stub\n  }\n\n  protected willRecohere(version: number): void {\n    // stub\n  }\n\n  protected onRecohere(version: number): void {\n    // stub\n  }\n\n  protected didRecohere(version: number): void {\n    // stub\n  }\n}\nexport interface AbstractInoutlet<I, O> extends OutletCombinators<O> {\n}\nOutletCombinators.define(AbstractInoutlet.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MapOutlet} from \"./MapOutlet\";\nimport {AbstractOutlet} from \"./AbstractOutlet\";\n\nexport class KeyOutlet<K, V> extends AbstractOutlet<V> {\n  constructor(input: MapOutlet<K, V, unknown>, key: K) {\n    super();\n    Object.defineProperty(this, \"input\", {\n      value: input,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"key\", {\n      value: key,\n      enumerable: true,\n    });\n  }\n\n  readonly input!: MapOutlet<K, V, unknown>;\n\n  readonly key!: K;\n\n  override get(): V | undefined {\n    return this.input.get(this.key);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport type {KeyEffect} from \"./KeyEffect\";\nimport type {MapInlet} from \"./MapInlet\";\nimport {MapOutlet} from \"./MapOutlet\";\n\nexport abstract class AbstractMapInlet<K, V, O> implements MapInlet<K, V, O> {\n  constructor() {\n    Object.defineProperty(this, \"input\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"effects\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly input!: MapOutlet<K, V, O> | null;\n\n  /** @hidden */\n  readonly effects!: BTree<K, KeyEffect>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  bindInput(newInput: MapOutlet<K, V, O> | null): void {\n    if (!MapOutlet.is(newInput)) {\n      throw new TypeError(\"\" + newInput);\n    }\n    const oldInput = this.input;\n    if (oldInput !== newInput) {\n      if (oldInput !== null) {\n        oldInput.unbindOutput(this);\n      }\n      Object.defineProperty(this, \"input\", {\n        value: newInput,\n        enumerable: true,\n        configurable: true,\n      });\n      if (newInput !== null) {\n        newInput.bindOutput(this);\n      }\n    }\n  }\n\n  unbindInput(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  disconnectInputs(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      oldInput.disconnectInputs();\n    }\n  }\n\n  disconnectOutputs(): void {\n    // nop\n  }\n\n  decohereOutputKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this.effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereOutputKey(key, effect);\n      Object.defineProperty(this, \"effects\", {\n        value: oldEffects.updated(key, effect),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereOutputKey(key, effect);\n      this.didDecohereOutputKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    if (this.version >= 0) {\n      this.willDecohereOutput();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereOutput();\n      this.didDecohereOutput();\n    }\n  }\n\n  recohereOutputKey(key: K, version: number): void {\n    if (this.version < 0) {\n      const oldEffects = this.effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereOutputKey(key, effect, version);\n        Object.defineProperty(this, \"effects\", {\n          value: oldEffects.removed(key),\n          enumerable: true,\n          configurable: true,\n        });\n        if (this.input !== null) {\n          this.input.recohereInputKey(key, version);\n        }\n        this.onRecohereOutputKey(key, effect, version);\n        this.didRecohereOutputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    if (this.version < 0) {\n      this.willRecohereOutput(version);\n      this.effects.forEach(function (key: K): void {\n        this.recohereOutputKey(key, version);\n      }, this);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohereOutput(version);\n      this.didRecohereOutput(version);\n    }\n  }\n\n  protected willDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohereOutput(): void {\n    // hook\n  }\n\n  protected onDecohereOutput(): void {\n    // hook\n  }\n\n  protected didDecohereOutput(): void {\n    // hook\n  }\n\n  protected willRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohereOutput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutput(version: number): void {\n    // hook\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Iterator, Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport type {Inlet} from \"./Inlet\";\nimport type {Outlet} from \"./Outlet\";\nimport type {KeyEffect} from \"./KeyEffect\";\nimport {MapInlet} from \"./MapInlet\";\nimport type {MapOutlet} from \"./MapOutlet\";\nimport {MapOutletCombinators} from \"./MapOutletCombinators\";\nimport {KeyOutlet} from \"./KeyOutlet\";\n\nexport abstract class AbstractMapOutlet<K, V, O> implements MapOutlet<K, V, O> {\n  constructor() {\n    Object.defineProperty(this, \"effects\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outlets\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly effects!: BTree<K, KeyEffect>;\n\n  /** @hidden */\n  readonly outlets!: BTree<K, KeyOutlet<K, V>>;\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<O>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  abstract has(key: K): boolean;\n\n  abstract get(): O | undefined;\n\n  abstract get(key: K): V | undefined;\n\n  abstract keyIterator(): Iterator<K>;\n\n  outlet(key: K): Outlet<V> {\n    const oldOutlets = this.outlets;\n    let outlet = oldOutlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet(this, key);\n      Object.defineProperty(this, \"outlets\", {\n        value: oldOutlets.updated(key, outlet),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return outlet;\n  }\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, V>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, V>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n  }\n\n  disconnectInputs(): void {\n    // nop\n  }\n\n  decohereInputKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this.effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereInputKey(key, effect);\n      Object.defineProperty(this, \"effects\", {\n        value: oldEffects.updated(key, effect),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereInputKey(key, effect);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this.outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereInputKey(key, effect);\n    }\n  }\n\n  decohereInput(): void {\n    if (this.version >= 0) {\n      this.willDecohereInput();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereInput();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.decohereOutput();\n      }\n      this.outlets.forEach(function (key: K, outlet: KeyOutlet<K, V>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohereInput();\n    }\n  }\n\n  recohereInputKey(key: K, version: number): void {\n    if (this.version < 0) {\n      const oldEffects = this.effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereInputKey(key, effect, version);\n        Object.defineProperty(this, \"effects\", {\n          value: oldEffects.removed(key),\n          enumerable: true,\n          configurable: true,\n        });\n        this.onRecohereInputKey(key, effect, version);\n        const outputs = this.outputs;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this.outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereInputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereInput(version: number): void {\n    if (this.version < 0) {\n      this.willRecohereInput(version);\n      this.effects.forEach(function (key: K): void {\n        this.recohereInputKey(key, version);\n      }, this);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohereInput(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.recohereOutput(version);\n      }\n      this.didRecohereInput(version);\n    }\n  }\n\n  protected willDecohereInputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereInputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereInputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohereInput(): void {\n    // hook\n  }\n\n  protected onDecohereInput(): void {\n    // hook\n  }\n\n  protected didDecohereInput(): void {\n    // hook\n  }\n\n  protected willRecohereInputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereInputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereInputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereInput(version: number): void {\n    // hook\n  }\n}\nexport interface AbstractMapOutlet<K, V, O> extends MapOutletCombinators<K, V, O> {\n}\nMapOutletCombinators.define(AbstractMapOutlet.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Iterator, Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport type {Inlet} from \"./Inlet\";\nimport type {Outlet} from \"./Outlet\";\nimport type {KeyEffect} from \"./KeyEffect\";\nimport {MapInlet} from \"./MapInlet\";\nimport {MapOutlet} from \"./MapOutlet\";\nimport {MapOutletCombinators} from \"./MapOutletCombinators\";\nimport {KeyOutlet} from \"./KeyOutlet\";\nimport type {MapInoutlet} from \"./MapInoutlet\";\n\nexport abstract class AbstractMapInoutlet<K, VI, VO, I, O> implements MapInoutlet<K, VI, VO, I, O> {\n  constructor() {\n    Object.defineProperty(this, \"input\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"effects\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outlets\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly input!: MapOutlet<K, VI, I> | null;\n\n  /** @hidden */\n  readonly effects!: BTree<K, KeyEffect>;\n\n  /** @hidden */\n  readonly outlets!: BTree<K, KeyOutlet<K, VO>>;\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<O>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  bindInput(newInput: MapOutlet<K, VI, I>): void {\n    if (!MapOutlet.is(newInput)) {\n      throw new TypeError(\"\" + newInput);\n    }\n    const oldInput = this.input;\n    if (oldInput !== newInput) {\n      if (oldInput !== null) {\n        oldInput.unbindOutput(this);\n      }\n      Object.defineProperty(this, \"input\", {\n        value: newInput,\n        enumerable: true,\n        configurable: true,\n      });\n      if (newInput !== null) {\n        newInput.bindOutput(this);\n      }\n    }\n  }\n\n  unbindInput(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  disconnectInputs(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      oldInput.disconnectInputs();\n    }\n  }\n\n  abstract has(key: K): boolean;\n\n  abstract get(): O | undefined;\n\n  abstract get(key: K): VO | undefined;\n\n  abstract keyIterator(): Iterator<K>;\n\n  outlet(key: K): Outlet<VO> {\n    const oldOutlets = this.outlets;\n    let outlet = oldOutlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet(this, key);\n      Object.defineProperty(this, \"outlets\", {\n        value: oldOutlets.updated(key, outlet),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return outlet;\n  }\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, VO>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, VO>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n  }\n\n  decohereOutputKey(key: K, effect: KeyEffect): void {\n    this.decohereKey(key, effect);\n  }\n\n  decohereInputKey(key: K, effect: KeyEffect): void {\n    this.decohereKey(key, effect);\n  }\n\n  decohereKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this.effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereKey(key, effect);\n      Object.defineProperty(this, \"effects\", {\n        value: oldEffects.updated(key, effect),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereKey(key, effect);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this.outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this.version >= 0) {\n      this.willDecohere();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohere();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.decohereOutput();\n      }\n      this.outlets.forEach(function (key: K, outlet: KeyOutlet<K, VO>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohere();\n    }\n  }\n\n  recohereOutputKey(key: K, version: number): void {\n    this.recohereKey(key, version);\n  }\n\n  recohereInputKey(key: K, version: number): void {\n    this.recohereKey(key, version);\n  }\n\n  recohereKey(key: K, version: number): void {\n    if (this.version < 0) {\n      const oldEffects = this.effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereKey(key, effect, version);\n        Object.defineProperty(this, \"effects\", {\n          value: oldEffects.removed(key),\n          enumerable: true,\n          configurable: true,\n        });\n        if (this.input !== null) {\n          this.input.recohereInputKey(key, version);\n        }\n        this.onRecohereKey(key, effect, version);\n        const outputs = this.outputs;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this.outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this.version < 0) {\n      this.willRecohere(version);\n      this.effects.forEach(function (key: K): void {\n        this.recohereKey(key, version);\n      }, this);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohere(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n}\nexport interface AbstractMapInoutlet<K, VI, VO, I, O> extends MapOutletCombinators<K, VO, O> {\n}\nMapOutletCombinators.define(AbstractMapInoutlet.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Iterator, Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport type {Inlet} from \"./Inlet\";\nimport {OutletCombinators} from \"./OutletCombinators\";\nimport type {KeyEffect} from \"./KeyEffect\";\nimport {MapOutlet} from \"./MapOutlet\";\nimport type {MapInletOutlet} from \"./MapInletOutlet\";\n\nexport abstract class AbstractMapInletOutlet<K, V, I, O> implements MapInletOutlet<K, V, I, O> {\n  constructor() {\n    Object.defineProperty(this, \"input\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"effects\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly input!: MapOutlet<K, V, I> | null;\n\n  /** @hidden */\n  readonly effects!: BTree<K, KeyEffect>;\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<O>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  bindInput(newInput: MapOutlet<K, V, I>): void {\n    if (!MapOutlet.is(newInput)) {\n      throw new TypeError(\"\" + newInput);\n    }\n    const oldInput = this.input;\n    if (oldInput !== newInput) {\n      if (oldInput !== null) {\n        oldInput.unbindOutput(this);\n      }\n      Object.defineProperty(this, \"input\", {\n        value: newInput,\n        enumerable: true,\n        configurable: true,\n      });\n      if (newInput !== null) {\n        newInput.bindOutput(this);\n      }\n    }\n  }\n\n  unbindInput(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  disconnectInputs(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      oldInput.disconnectInputs();\n    }\n  }\n\n  abstract get(): O | undefined;\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n  }\n\n  decohereOutputKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this.effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereOutputKey(key, effect);\n      Object.defineProperty(this, \"effects\", {\n        value: oldEffects.updated(key, effect),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereOutputKey(key, effect);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.decohereOutput();\n      }\n      this.didDecohereOutputKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this.version >= 0) {\n      this.willDecohere();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohere();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.decohereOutput();\n      }\n      this.didDecohere();\n    }\n  }\n\n  recohereOutputKey(key: K, version: number): void {\n    if (this.version < 0) {\n      const oldEffects = this.effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereOutputKey(key, effect, version);\n        Object.defineProperty(this, \"effects\", {\n          value: oldEffects.removed(key),\n          enumerable: true,\n          configurable: true,\n        });\n        if (this.input !== null) {\n          this.input.recohereInputKey(key, version);\n        }\n        this.onRecohereOutputKey(key, effect, version);\n        this.didRecohereOutputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this.version < 0) {\n      this.willRecohere(version);\n      this.effects.forEach(function (key: K): void {\n        this.recohereOutputKey(key, version);\n      }, this);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohere(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereOutputKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n}\nexport interface AbstractMapInletOutlet<K, V, I, O> extends OutletCombinators<O> {\n}\nOutletCombinators.define(AbstractMapInletOutlet.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Iterator, Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport type {Inlet} from \"./Inlet\";\nimport type {Outlet} from \"./Outlet\";\nimport type {KeyEffect} from \"./KeyEffect\";\nimport {MapInlet} from \"./MapInlet\";\nimport {MapOutlet} from \"./MapOutlet\";\nimport {MapOutletCombinators} from \"./MapOutletCombinators\";\nimport {KeyOutlet} from \"./KeyOutlet\";\nimport type {MapInletMapOutlet} from \"./MapInletMapOutlet\";\n\nexport abstract class AbstractMapInletMapOutlet<KI, KO, VI, VO, I, O> implements MapInletMapOutlet<KI, KO, VI, VO, I, O> {\n  constructor() {\n    Object.defineProperty(this, \"input\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputEffects\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"inputEffects\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outlets\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly input!: MapOutlet<KI, VI, I> | null;\n\n  /** @hidden */\n  readonly outputEffects!: BTree<KI, KeyEffect>;\n\n  /** @hidden */\n  readonly inputEffects!: BTree<KO, KeyEffect>;\n\n  /** @hidden */\n  readonly outlets!: BTree<KO, KeyOutlet<KO, VO>>;\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<O>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  bindInput(newInput: MapOutlet<KI, VI, I>): void {\n    if (!MapOutlet.is(newInput)) {\n      throw new TypeError(\"\" + newInput);\n    }\n    const oldInput = this.input;\n    if (oldInput !== newInput) {\n      if (oldInput !== null) {\n        oldInput.unbindOutput(this);\n      }\n      Object.defineProperty(this, \"input\", {\n        value: newInput,\n        enumerable: true,\n        configurable: true,\n      });\n      if (newInput !== null) {\n        newInput.bindOutput(this);\n      }\n    }\n  }\n\n  unbindInput(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  disconnectInputs(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      oldInput.disconnectInputs();\n    }\n  }\n\n  abstract has(key: KO): boolean;\n\n  abstract get(): O;\n\n  abstract get(key: KO): VO | undefined;\n\n  abstract keyIterator(): Iterator<KO>;\n\n  outlet(key: KO): Outlet<VO> {\n    const oldOutlets = this.outlets;\n    let outlet = oldOutlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet(this, key);\n      Object.defineProperty(this, \"outlets\", {\n        value: oldOutlets.updated(key, outlet),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return outlet;\n  }\n\n  outputIterator(): Iterator<Inlet<O>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<O>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: KO, keyOutlet: KeyOutlet<KO, VO>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: KO, keyOutlet: KeyOutlet<KO, VO>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n  }\n\n  decohereOutputKey(key: KI, effect: KeyEffect): void {\n    const oldOutputEffects = this.outputEffects;\n    if (oldOutputEffects.get(key) !== effect) {\n      this.willDecohereOutputKey(key, effect);\n      Object.defineProperty(this, \"outputEffects\", {\n        value: oldOutputEffects.updated(key, effect),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereOutputKey(key, effect);\n      this.didDecohereOutputKey(key, effect);\n    }\n  }\n\n  decohereInputKey(key: KO, effect: KeyEffect): void {\n    const oldInputEffects = this.inputEffects;\n    if (oldInputEffects.get(key) !== effect) {\n      this.willDecohereInputKey(key, effect);\n      Object.defineProperty(this, \"inputEffects\", {\n        value: oldInputEffects.updated(key, effect),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereInputKey(key, effect);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this.outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereInputKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this.version >= 0) {\n      this.willDecohere();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohere();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.decohereOutput();\n      }\n      this.outlets.forEach(function (key: KO, outlet: KeyOutlet<KO, VO>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohere();\n    }\n  }\n\n  recohereOutputKey(key: KI, version: number): void {\n    if (this.version < 0) {\n      const oldOutputEffects = this.outputEffects;\n      const effect = oldOutputEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereOutputKey(key, effect, version);\n        Object.defineProperty(this, \"outputEffects\", {\n          value: oldOutputEffects.removed(key),\n          enumerable: true,\n          configurable: true,\n        });\n        if (this.input !== null) {\n          this.input.recohereInputKey(key, version);\n        }\n        this.onRecohereOutputKey(key, effect, version);\n        this.didRecohereOutputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereInputKey(key: KO, version: number): void {\n    if (this.version < 0) {\n      const oldInputEffects = this.inputEffects;\n      const oldEffect = oldInputEffects.get(key);\n      if (oldEffect !== void 0) {\n        const newEffect = this.willRecohereInputKey(key, oldEffect, version);\n        if (oldEffect !== newEffect) {\n          this.decohereInputKey(key, newEffect);\n        }\n        Object.defineProperty(this, \"inputEffects\", {\n          value: oldInputEffects.removed(key),\n          enumerable: true,\n          configurable: true,\n        });\n        this.onRecohereInputKey(key, newEffect, version);\n        const outputs = this.outputs;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this.outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereInputKey(key, newEffect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this.version < 0) {\n      this.willRecohere(version);\n      this.outputEffects.forEach(function (key: KI): void {\n        this.recohereOutputKey(key, version);\n      }, this);\n      this.inputEffects.forEach(function (key: KO): void {\n        this.recohereInputKey(key, version);\n      }, this);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohere(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohereOutputKey(key: KI, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereOutputKey(key: KI, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereOutputKey(key: KI, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohereInputKey(key: KO, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereInputKey(key: KO, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereInputKey(key: KO, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohereOutputKey(key: KI, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutputKey(key: KI, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereOutputKey(key: KI, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohereInputKey(key: KO, effect: KeyEffect, version: number): KeyEffect {\n    return effect;\n  }\n\n  protected onRecohereInputKey(key: KO, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereInputKey(key: KO, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n}\nexport interface AbstractMapInletMapOutlet<KI, KO, VI, VO, I, O> extends MapOutletCombinators<KO, VO, O> {\n}\nMapOutletCombinators.define(AbstractMapInletMapOutlet.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Outlet} from \"./Outlet\";\nimport {AbstractInlet} from \"./AbstractInlet\";\n\n/**\n * An `Inlet` that decoheres a parameterized `Outlet` whenever the `Inlet`\n * decoheres, and that recoheres the parameterized `Outlet` whenever the\n * `Inlet` recoheres.\n */\nexport class OutletInlet<I> extends AbstractInlet<I> {\n  constructor(outlet: Outlet<unknown>) {\n    super();\n    Object.defineProperty(this, \"outlet\", {\n      value: outlet,\n      enumerable: true,\n    });\n  }\n\n  readonly outlet!: Outlet<unknown>;\n\n  protected override onDecohereOutput(): void {\n    this.outlet.decohereInput();\n  }\n\n  protected override onRecohereOutput(version: number): void {\n    this.outlet.recohereInput(version);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Outlet} from \"./Outlet\";\nimport type {KeyEffect} from \"./KeyEffect\";\nimport {AbstractMapInlet} from \"./AbstractMapInlet\";\n\n/**\n * A `MapInlet` that decoheres a parameterized `Outlet` whenever the\n * `MapInlet` decoheres, and that recoheres the parameterized `Outlet`\n * whenever the `MapInlet` recoheres.\n */\nexport class OutletMapInlet<K, V, O> extends AbstractMapInlet<K, V, O> {\n  constructor(outlet: Outlet<unknown>) {\n    super();\n    Object.defineProperty(this, \"outlet\", {\n      value: outlet,\n      enumerable: true,\n    });\n  }\n\n  readonly outlet!: Outlet<unknown>;\n\n  protected override onDecohereOutputKey(key: K, effect: KeyEffect): void {\n    this.outlet.decohereInput();\n  }\n\n  protected override onDecohereOutput(): void {\n    this.outlet.decohereInput();\n  }\n\n  protected override onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    this.outlet.recohereInput(version);\n  }\n\n  protected override onRecohereOutput(version: number): void {\n    this.outlet.recohereInput(version);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractOutlet} from \"./AbstractOutlet\";\n\nexport class ValueInput<O> extends AbstractOutlet<O> {\n  constructor(state?: O) {\n    super();\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly state!: O | undefined;\n\n  override get(): O | undefined {\n    return this.state;\n  }\n\n  set(newState: O | undefined): O | undefined {\n    const oldState = this.state;\n    if (oldState !== newState) {\n      Object.defineProperty(this, \"state\", {\n        value: newState,\n        enumerable: true,\n        configurable: true,\n      });\n      this.decohereInput();\n    }\n    return oldState;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractInlet} from \"./AbstractInlet\";\n\nexport class ValueOutput<I> extends AbstractInlet<I> {\n  constructor(state?: I) {\n    super();\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly state!: I | undefined;\n\n  get(): I | undefined {\n    return this.state;\n  }\n\n  protected override onRecohereOutput(version: number): void {\n    const input = this.input;\n    if (input !== null) {\n      Object.defineProperty(this, \"state\", {\n        value: input.get(),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {AbstractMapOutlet} from \"./AbstractMapOutlet\";\n\nexport class MapInput<K, V> extends AbstractMapOutlet<K, V, Map<K, V>> {\n  constructor(state?: BTree<K, V>) {\n    super();\n    if (state === void 0) {\n      state = new BTree();\n    }\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n    let effects = this.effects;\n    state.forEach(function (key: K): void {\n      effects = effects.updated(key, KeyEffect.Update);\n    }, this);\n    Object.defineProperty(this, \"effects\", {\n      value: effects,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly state!: BTree<K, V>;\n\n  override has(key: K): boolean {\n    return this.state.has(key);\n  }\n\n  override get(): Map<K, V> | undefined;\n  override get(key: K): V | undefined;\n  override get(key?: K): Map<K, V> | V | undefined {\n    if (key === void 0) {\n      return this.state;\n    } else {\n      return this.state.get(key);\n    }\n  }\n\n  set(key: K, newValue: V): V | undefined {\n    const oldState = this.state;\n    const oldValue = oldState.get(key);\n    if (oldValue !== newValue) {\n      Object.defineProperty(this, \"state\", {\n        value: oldState.updated(key, newValue),\n        enumerable: true,\n        configurable: true,\n      });\n      this.decohereInputKey(key, KeyEffect.Update);\n    }\n    return oldValue;\n  }\n\n  delete(key: K): this {\n    const oldState = this.state;\n    const newState = oldState.removed(key);\n    if (oldState !== newState) {\n      Object.defineProperty(this, \"state\", {\n        value: newState,\n        enumerable: true,\n        configurable: true,\n      });\n      this.decohereInputKey(key, KeyEffect.Remove);\n    }\n    return this;\n  }\n\n  keyIterator(): Cursor<K> {\n    return this.state.keys();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"./KeyEffect\";\nimport {AbstractMapInlet} from \"./AbstractMapInlet\";\n\nexport class MapOutput<K, V> extends AbstractMapInlet<K, V, Map<K, V>> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"state\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly state!: BTree<K, V>;\n\n  get(): Map<K, V> {\n    return this.state;\n  }\n\n  protected override onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      const input = this.input;\n      if (input !== null) {\n        const value = input.get(key);\n        if (value !== void 0) {\n          Object.defineProperty(this, \"state\", {\n            value: this.state.updated(key, value),\n            enumerable: true,\n            configurable: true,\n          });\n        } else {\n          Object.defineProperty(this, \"state\", {\n            value: this.state.removed(key),\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      Object.defineProperty(this, \"state\", {\n        value: this.state.removed(key),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Outlet} from \"../Outlet\";\nimport {AbstractInoutlet} from \"../AbstractInoutlet\";\n\nexport class MemoizeValueCombinator<IO> extends AbstractInoutlet<IO, IO> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"state\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly state!: IO | undefined;\n\n  override get(): IO | undefined {\n    return this.state;\n  }\n\n  protected override onRecohere(version: number): void {\n    const input = this.input;\n    if (input !== null) {\n      Object.defineProperty(this, \"state\", {\n        value: input.get(),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  override memoize(): Outlet<IO> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Iterator} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"../KeyEffect\";\nimport type {MapOutlet} from \"../MapOutlet\";\nimport {AbstractMapInoutlet} from \"../AbstractMapInoutlet\";\n\nexport class MemoizeMapCombinator<K, V, IO> extends AbstractMapInoutlet<K, V, V, IO, IO> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"state\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"cache\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly state!: IO | undefined;\n\n  /** @hidden */\n  readonly cache!: BTree<K, V>;\n\n  override has(key: K): boolean {\n    return this.cache.has(key);\n  }\n\n  override get(): IO | undefined;\n  override get(key: K): V | undefined;\n  override get(key?: K): IO | V | undefined {\n    if (key === void 0) {\n      let state = this.state;\n      const input = this.input;\n      if (state === void 0 && input !== null) {\n        state = input.get();\n        Object.defineProperty(this, \"state\", {\n          value: state,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n      return state;\n    } else {\n      return this.cache.get(key);\n    }\n  }\n\n  override keyIterator(): Iterator<K> {\n    return this.cache.keys();\n  }\n\n  protected override onRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      const input = this.input;\n      if (input !== null) {\n        const value = input.get(key);\n        if (value !== void 0) {\n          Object.defineProperty(this, \"cache\", {\n            value: this.cache.updated(key, value),\n            enumerable: true,\n            configurable: true,\n          });\n        } else {\n          Object.defineProperty(this, \"cache\", {\n            value: this.cache.removed(key),\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      Object.defineProperty(this, \"cache\", {\n        value: this.cache.removed(key),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  protected override onRecohere(version: number): void {\n    Object.defineProperty(this, \"state\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override memoize(): MapOutlet<K, V, IO> {\n    return this;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"../KeyEffect\";\nimport {AbstractMapInletMapOutlet} from \"../AbstractMapInletMapOutlet\";\n\nexport abstract class FilterFieldsOperator<K, V, I> extends AbstractMapInletMapOutlet<K, K, V, V, I, Map<K, V>> {\n  override has(key: K): boolean {\n    const input = this.input;\n    if (input !== null) {\n      const value = input.get(key);\n      return value !== void 0 && this.evaluate(key, value);\n    }\n    return false;\n  }\n\n  override get(): Map<K, V>;\n  override get(key: K): V | undefined;\n  override get(key?: K): Map<K, V> | V | undefined {\n    if (key === void 0) {\n      const output = new BTree<K, V>();\n      const keys = this.keyIterator();\n      do {\n        const next = keys.next();\n        if (!next.done) {\n          const key = next.value!;\n          const value = this.input!.get(key);\n          if (value !== void 0 && this.evaluate(key, value)) {\n            output.set(key, value);\n          }\n          continue;\n        }\n        break;\n      } while (true);\n      return output;\n    } else {\n      const input = this.input;\n      if (input !== null) {\n        const value = input.get(key);\n        if (value !== void 0 && this.evaluate(key, value)) {\n          return value;\n        }\n      }\n      return void 0;\n    }\n  }\n\n  override keyIterator(): Iterator<K> {\n    const input = this.input;\n    if (input !== null) {\n      return input.keyIterator(); // TODO: filter keys\n    } else {\n      return Cursor.empty();\n    }\n  }\n\n  protected override onDecohereOutputKey(key: K, effect: KeyEffect): void {\n    this.decohereInputKey(key, effect);\n  }\n\n  protected override onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    this.recohereInputKey(key, version);\n  }\n\n  protected override willRecohereInputKey(key: K, effect: KeyEffect, version: number): KeyEffect {\n    if (effect === KeyEffect.Update) {\n      const input = this.input;\n      if (input !== null) {\n        const value = input.get(key);\n        if (value === void 0 || !this.evaluate(key, value)) {\n          return KeyEffect.Remove;\n        }\n      }\n    }\n    return effect;\n  }\n\n  abstract evaluate(key: K, value: V): boolean;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FilterFieldsFunction} from \"../function\";\nimport {FilterFieldsOperator} from \"./FilterFieldsOperator\";\n\nexport class FilterFieldsCombinator<K, V, I> extends FilterFieldsOperator<K, V, I> {\n  constructor(func: FilterFieldsFunction<K, V>) {\n    super();\n    Object.defineProperty(this, \"func\", {\n      value: func,\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly func!: FilterFieldsFunction<K, V>;\n\n  override evaluate(key: K, value: V): boolean {\n    const func = this.func;\n    return func(key, value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractInoutlet} from \"../AbstractInoutlet\";\n\nexport abstract class MapValueOperator<I, O> extends AbstractInoutlet<I, O> {\n  override get(): O | undefined {\n    const input = this.input;\n    if (input !== null) {\n      return this.evaluate(input.get());\n    } else {\n      return void 0;\n    }\n  }\n\n  abstract evaluate(value: I | undefined): O | undefined;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MapValueFunction} from \"../function\";\nimport {MapValueOperator} from \"./MapValueOperator\";\n\nexport class MapValueCombinator<I, O> extends MapValueOperator<I, O> {\n  constructor(func: MapValueFunction<I, O>) {\n    super();\n    Object.defineProperty(this, \"func\", {\n      value: func,\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly func!: MapValueFunction<I, O>;\n\n  override evaluate(value: I | undefined): O | undefined {\n    if (value !== void 0) {\n      const func = this.func;\n      return func(value);\n    } else {\n      return void 0;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator, Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {AbstractMapInoutlet} from \"../AbstractMapInoutlet\";\n\nexport abstract class MapFieldValuesOperator<K, VI, VO, I> extends AbstractMapInoutlet<K, VI, VO, I, Map<K, VO>> {\n  override has(key: K): boolean {\n    const input = this.input;\n    if (input !== null) {\n      return input.has(key);\n    } else {\n      return false;\n    }\n  }\n\n  override get(): Map<K, VO>;\n  override get(key: K): VO | undefined;\n  override get(key?: K): Map<K, VO> | VO | undefined {\n    if (key === void 0) {\n      const output = new BTree<K, VO>();\n      const keys = this.keyIterator();\n      do {\n        const next = keys.next();\n        if (!next.done) {\n          const key = next.value!;\n          const value = this.evaluate(key, this.input!.get(key));\n          if (value !== void 0) {\n            output.set(key, value);\n          }\n          continue;\n        }\n        break;\n      } while (true);\n      return output;\n    } else {\n      const input = this.input;\n      if (input !== null) {\n        return this.evaluate(key, input.get(key));\n      } else {\n        return void 0;\n      }\n    }\n  }\n\n  override keyIterator(): Iterator<K> {\n    const input = this.input;\n    if (input !== null) {\n      return input.keyIterator(); // TODO: filter keys\n    } else {\n      return Cursor.empty();\n    }\n  }\n\n  abstract evaluate(key: K, value: VI | undefined): VO | undefined;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MapFieldValuesFunction} from \"../function\";\nimport {MapFieldValuesOperator} from \"./MapFieldValuesOperator\";\n\nexport class MapFieldValuesCombinator<K, VI, VO, I> extends MapFieldValuesOperator<K, VI, VO, I> {\n  constructor(func: MapFieldValuesFunction<K, VI, VO> ) {\n    super();\n    Object.defineProperty(this, \"func\", {\n      value: func,\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly func!: MapFieldValuesFunction<K, VI, VO>;\n\n  override evaluate(key: K, value: VI | undefined): VO | undefined {\n    if (value !== void 0) {\n      const func = this.func;\n      return func(key, value);\n    } else {\n      return void 0;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {KeyEffect} from \"../KeyEffect\";\nimport {AbstractMapInletOutlet} from \"../AbstractMapInletOutlet\";\n\nexport abstract class ReduceFieldsOperator<K, V, I, O> extends AbstractMapInletOutlet<K, V, I, O> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"state\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly state!: BTree<K, V, O>;\n\n  override get(): O | undefined {\n    return this.state.reduced(this.identity, this.accumulate.bind(this), this.combine.bind(this));\n  }\n\n  protected override onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      const input = this.input;\n      if (input !== null) {\n        const value = input.get(key);\n        if (value !== void 0) {\n          this.state.set(key, value);\n        } else {\n          this.state.delete(key);\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this.state.delete(key);\n    }\n  }\n\n  abstract readonly identity: O;\n\n  abstract accumulate(result: O, value: V): O;\n\n  abstract combine(result: O, value: O): O;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ReduceFieldsOperator} from \"./ReduceFieldsOperator\";\n\nexport class ReduceFieldsCombinator<K, V, I, O> extends ReduceFieldsOperator<K, V, I, O> {\n  constructor(identity: O, accumulator: (result: O, element: V) => O,\n              combiner: (result: O, result2: O) => O) {\n    super();\n    Object.defineProperty(this, \"identity\", {\n      value: identity,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"accumulator\", {\n      value: accumulator,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"combiner\", {\n      value: combiner,\n      enumerable: true,\n    });\n  }\n\n  override get(): O {\n    return this.state.reduced(this.identity, this.accumulator, this.combiner);\n  }\n\n  override readonly identity!: O;\n\n  /** @hidden */\n  readonly accumulator!: (result: O, element: V) => O;\n\n  override accumulate(result: O, value: V): O {\n    const accumulator = this.accumulator;\n    return accumulator(result, value);\n  }\n\n  /** @hidden */\n  readonly combiner!: (result: O, result2: O) => O;\n\n  override combine(result: O, value: O): O {\n    const combiner = this.combiner;\n    return combiner(result, value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractInlet} from \"../AbstractInlet\";\n\nexport abstract class WatchValueOperator<I> extends AbstractInlet<I> {\n  override onRecohereOutput(version: number): void {\n    const input = this.input;\n    if (input !== null) {\n      this.evaluate(input.get());\n    }\n  }\n\n  abstract evaluate(value: I | undefined): void;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {WatchValueFunction} from \"../function\";\nimport {WatchValueOperator} from \"./WatchValueOperator\";\n\nexport class WatchValueCombinator<I> extends WatchValueOperator<I> {\n  constructor(func: WatchValueFunction<I>) {\n    super();\n    Object.defineProperty(this, \"func\", {\n      value: func,\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly func!: WatchValueFunction<I>;\n\n  override evaluate(value: I | undefined): void {\n    if (value !== void 0) {\n      const func = this.func;\n      return func(value);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {KeyEffect} from \"../KeyEffect\";\nimport {AbstractMapInlet} from \"../AbstractMapInlet\";\n\nexport abstract class WatchFieldsOperator<K, V, O> extends AbstractMapInlet<K, V, O> {\n  protected override onRecohereOutputKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      const input = this.input;\n      if (input !== null) {\n        this.evaluate(key, input.get(key));\n      } else {\n        this.evaluate(key, void 0);\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this.evaluate(key, void 0);\n    }\n  }\n\n  abstract evaluate(key: K, value: V | undefined): void;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {WatchFieldsFunction} from \"../function\";\nimport {WatchFieldsOperator} from \"./WatchFieldsOperator\";\n\nexport class WatchFieldsCombinator<K, V, O> extends WatchFieldsOperator<K, V, O> {\n  constructor(func: WatchFieldsFunction<K, V>) {\n    super();\n    Object.defineProperty(this, \"func\", {\n      value: func,\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly func!: WatchFieldsFunction<K, V>;\n\n  override evaluate(key: K, value: V | undefined): void {\n    if (value !== void 0) {\n      const func = this.func;\n      return func(key, value);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Streamlet} from \"./Streamlet\";\nimport type {GenericStreamlet} from \"./GenericStreamlet\";\nimport {AbstractInlet} from \"./AbstractInlet\";\n\n/**\n * An `Inlet` that decoheres a parameterized `Streamlet` whenever the `Inlet`\n * decoheres, and that recoheres the parameterized `Streamlet` whenever the\n * `Inlet` recoheres.\n */\nexport class StreamletInlet<I> extends AbstractInlet<I> {\n  constructor(streamlet: Streamlet<I, unknown>) {\n    super();\n    Object.defineProperty(this, \"streamlet\", {\n      value: streamlet,\n      enumerable: true,\n    });\n  }\n\n  readonly streamlet!: Streamlet<I, unknown>;\n\n  protected override willDecohereOutput(): void {\n    const streamlet = this.streamlet as GenericStreamlet<I, unknown>;\n    if (streamlet.willDecohereInlet !== void 0) {\n      streamlet.willDecohereInlet(this);\n    }\n  }\n\n  protected override didDecohereOutput(): void {\n    const streamlet = this.streamlet as GenericStreamlet<I, unknown>;\n    if (streamlet.didDecohereInlet !== void 0) {\n      streamlet.didDecohereInlet(this);\n    } else {\n      streamlet.decohere();\n    }\n  }\n\n  protected override willRecohereOutput(version: number): void {\n    const streamlet = this.streamlet as GenericStreamlet<I, unknown>;\n    if (streamlet.willRecohereInlet !== void 0) {\n      streamlet.willRecohereInlet(this, version);\n    }\n  }\n\n  protected override didRecohereOutput(version: number): void {\n    const streamlet = this.streamlet as GenericStreamlet<I, unknown>;\n    if (streamlet.didRecohereInlet !== void 0) {\n      streamlet.didRecohereInlet(this, version);\n    } else {\n      streamlet.recohere(version);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Streamlet} from \"./Streamlet\";\nimport type {GenericStreamlet} from \"./GenericStreamlet\";\nimport {AbstractOutlet} from \"./AbstractOutlet\";\n\n/**\n * An `Outlet` that decoheres a parameterized `Streamlet` whenever the\n * `Outlet` decoheres, and which gets its state from the parameterized\n * `Streamlet`.\n */\nexport class StreamletOutlet<O> extends AbstractOutlet<O> {\n  constructor(streamlet: Streamlet<unknown, O>) {\n    super();\n    Object.defineProperty(this, \"streamlet\", {\n      value: streamlet,\n      enumerable: true,\n    });\n  }\n\n  readonly streamlet!: Streamlet<unknown, O>;\n\n  override get(): O | undefined {\n    const streamlet = this.streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.getOutput !== void 0) {\n      return streamlet.getOutput(this);\n    } else {\n      return void 0;\n    }\n  }\n\n  protected override willDecohereInput(): void {\n    const streamlet = this.streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.willDecohereOutlet !== void 0) {\n      streamlet.willDecohereOutlet(this);\n    }\n  }\n\n  protected override didDecohereInput(): void {\n    const streamlet = this.streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.didDecohereOutlet !== void 0) {\n      streamlet.didDecohereOutlet(this);\n    } else {\n      streamlet.decohere();\n    }\n  }\n\n  protected override willRecohereInput(version: number): void {\n    const streamlet = this.streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.willRecohereOutlet !== void 0) {\n      streamlet.willRecohereOutlet(this, version);\n    }\n  }\n\n  protected override didRecohereInput(version: number): void {\n    const streamlet = this.streamlet as GenericStreamlet<unknown, O>;\n    if (streamlet.didRecohereOutlet !== void 0) {\n      streamlet.didRecohereOutlet(this, version);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Streamlet} from \"./Streamlet\";\nimport type {GenericStreamlet} from \"./GenericStreamlet\";\nimport {AbstractInoutlet} from \"./AbstractInoutlet\";\n\n/**\n * An `Inoutlet` that decoheres a parameterized `Streamlet` whenever the\n * `Inoutlet` decoheres, that recoheres the parameterized `Streamlet`\n * whenever the `Inoutlet` recoheres, and which gets its state from the\n * parameterized `Streamlet`.\n */\nexport class StreamletInoutlet<I, O> extends AbstractInoutlet<I, O> {\n  constructor(streamlet: Streamlet<I, O>) {\n    super();\n    Object.defineProperty(this, \"streamlet\", {\n      value: streamlet,\n      enumerable: true,\n    });\n  }\n\n  readonly streamlet!: Streamlet<I, O>;\n\n  override get(): O | undefined {\n    const streamlet = this.streamlet as GenericStreamlet<I, O>;\n    if (streamlet.getOutput !== void 0) {\n      const output = streamlet.getOutput(this);\n      if (output !== void 0) {\n        return output;\n      }\n    }\n    const input = this.input;\n    if (input !== null) {\n      return input.get() as O | undefined;\n    } else {\n      return void 0;\n    }\n  }\n\n  protected override willDecohere(): void {\n    const streamlet = this.streamlet as GenericStreamlet<I, O>;\n    if (streamlet.willDecohereOutlet !== void 0) {\n      streamlet.willDecohereOutlet(this);\n    }\n  }\n\n  protected override didDecohere(): void {\n    const streamlet = this.streamlet as GenericStreamlet<I, O>;\n    if (streamlet.didDecohereOutlet !== void 0) {\n      streamlet.didDecohereOutlet(this);\n    } else {\n      streamlet.decohere();\n    }\n  }\n\n  protected override willRecohere(version: number): void {\n    const streamlet = this.streamlet as GenericStreamlet<I, O>;\n    if (streamlet.willRecohereOutlet !== void 0) {\n      streamlet.willRecohereOutlet(this, version);\n    }\n  }\n\n  protected override didRecohere(version: number): void {\n    const streamlet = this.streamlet as GenericStreamlet<I, O>;\n    if (streamlet.didRecohereOutlet !== void 0) {\n      streamlet.didRecohereOutlet(this, version);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {InletType, InletOptions, Inlet} from \"./Inlet\";\nimport type {OutletType, OutletOptions, Outlet} from \"./Outlet\";\nimport type {InoutletType, InoutletOptions, Inoutlet} from \"./Inoutlet\";\nimport type {StreamletContext} from \"./StreamletContext\";\nimport type {StreamletScope} from \"./StreamletScope\";\nimport type {Streamlet} from \"./Streamlet\";\nimport type {GenericStreamlet} from \"./GenericStreamlet\";\nimport {StreamletInlet} from \"./StreamletInlet\";\nimport {StreamletOutlet} from \"./StreamletOutlet\";\nimport {StreamletInoutlet} from \"./StreamletInoutlet\";\n\n/** @hidden */\nexport class InletDescriptor {\n  readonly key: string;\n  readonly name: string;\n  readonly type: InletType;\n\n  constructor(key: string, name: string, type: InletType) {\n    this.key = key;\n    this.name = name;\n    this.type = type;\n  }\n}\n\n/** @hidden */\nexport class OutletDescriptor {\n  readonly key: string;\n  readonly name: string;\n  readonly type: OutletType;\n\n  constructor(key: string, name: string, type: OutletType) {\n    this.key = key;\n    this.name = name;\n    this.type = type;\n  }\n}\n\n/** @hidden */\nexport class InoutletDescriptor {\n  readonly key: string;\n  readonly name: string;\n  readonly type: InoutletType;\n\n  constructor(key: string, name: string, type: InoutletType) {\n    this.key = key;\n    this.name = name;\n    this.type = type;\n  }\n}\n\n/** @hidden */\nexport interface StreamletPrototype {\n  inlets?: {[name: string]: InletDescriptor | InoutletDescriptor | undefined};\n  outlets?: {[name: string]: OutletDescriptor | InoutletDescriptor | undefined};\n  inoutlets?: {[name: string]: InoutletDescriptor | undefined};\n}\n\nexport abstract class AbstractStreamlet<I = unknown, O = I> implements GenericStreamlet<I, O> {\n  constructor(scope: StreamletScope<O> | null = null) {\n    Object.defineProperty(this, \"streamletScope\", {\n      value: scope,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"streamletContext\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly streamletScope!: StreamletScope<O> | null;\n\n  setStreamletScope(scope: StreamletScope<O> | null): void {\n    Object.defineProperty(this, \"streamletScope\", {\n      value: scope,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly streamletContext!: StreamletContext | null;\n\n  setStreamletContext(context: StreamletContext | null): void {\n    Object.defineProperty(this, \"streamletContext\", {\n      value: context,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly version!: number;\n\n  inlet(key: string): Inlet<I> | null;\n  inlet<I2 extends I>(): Inlet<I2>;\n  inlet(key?: string): Inlet<I> | null {\n    if (key === void 0) {\n      return new StreamletInlet<I>(this);\n    } else {\n      return AbstractStreamlet.reflectInletKey<I, O>(key, this, Object.getPrototypeOf(this));\n    }\n  }\n\n  bindInput(key: string, input: Outlet<I>): void {\n    const inlet = this.inlet(key);\n    if (inlet === null) {\n      throw new Error(\"\" + key);\n    }\n    inlet.bindInput(input);\n  }\n\n  unbindInput(key: string): void {\n    const inlet = this.inlet(key);\n    if (inlet === null) {\n      throw new Error(\"\" + key);\n    }\n    inlet.unbindInput();\n  }\n\n  outlet(key: string | Outlet<O>): Outlet<O> | null;\n  outlet<O2>(): Outlet<O2>;\n  outlet(key?: string | Outlet<O>): Outlet<O> | null {\n    if (key === void 0) {\n      return new StreamletOutlet<O>(this);\n    } else if (typeof key === \"string\") {\n      return AbstractStreamlet.reflectOutletKey<I, O>(key, this, Object.getPrototypeOf(this));\n    } else {\n      return key;\n    }\n  }\n\n  inoutlet<I2 extends I, O2>(): Inoutlet<I2, O2> {\n    return new StreamletInoutlet<I2, O2>(this as Streamlet<I2, O2>);\n  }\n\n  decohere(): void {\n    if (this.version >= 0) {\n      this.willDecohere();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohere();\n      this.onDecohereOutlets();\n      this.didDecohere();\n    }\n  }\n\n  recohere(version: number): void {\n    if (this.version < 0) {\n      this.willRecohere(version);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohereInlets(version);\n      this.onRecohere(version);\n      this.onRecohereOutlets(version);\n      this.didRecohere(version);\n    }\n  }\n\n  getInput<I2 extends I>(inlet: Inlet<I2> | string): I2 | undefined;\n  getInput<I2 extends I, E = I2>(inlet: Inlet<I2> | string, orElse: E): I2 | E;\n  getInput<I2 extends I, E = I2>(inlet: Inlet<I2> | string, orElse?: E): I2 | E | undefined {\n    if (typeof inlet === \"string\") {\n      inlet = this.inlet(inlet) as Inlet<I2>;\n    }\n    let object: I2 | E | undefined;\n    if (inlet !== null) {\n      const input = inlet.input;\n      if (input !== null) {\n        object = input.get();\n      }\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  getOutput(outlet: Outlet<O> | string): O | undefined {\n    return void 0;\n  }\n\n  disconnectInputs(): void {\n    AbstractStreamlet.disconnectInputs(this, Object.getPrototypeOf(this));\n  }\n\n  /** @hidden */\n  static disconnectInputs<I, O>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): void {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"inlets\")) {\n        for (const name in streamletPrototype.inlets) {\n          const inletDescriptor = streamletPrototype.inlets[name]!;\n          if (inletDescriptor instanceof InletDescriptor) {\n            const inlet = AbstractStreamlet.reflectInletField(streamlet, inletDescriptor);\n            inlet.disconnectInputs();\n          } else if (inletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor);\n            inoutlet.disconnectInputs();\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n  }\n\n  disconnectOutputs(): void {\n    AbstractStreamlet.disconnectOutputs(this, Object.getPrototypeOf(this));\n  }\n\n  /** @hidden */\n  static disconnectOutputs<I, O>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): void {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"outlets\")) {\n        for (const name in streamletPrototype.outlets) {\n          const outletDescriptor = streamletPrototype.outlets[name]!;\n          if (outletDescriptor instanceof OutletDescriptor) {\n            const outlet = AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n            outlet.disconnectOutputs();\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n            inoutlet.disconnectOutputs();\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n  }\n\n  willDecohereInlet(inlet: Inlet<I>): void {\n    // hook\n  }\n\n  didDecohereInlet(inlet: Inlet<I>): void {\n    this.decohere();\n  }\n\n  willRecohereInlet(inlet: Inlet<I>, version: number): void {\n    // hook\n  }\n\n  didRecohereInlet(inlet: Inlet<I>, version: number): void {\n    this.recohere(version);\n  }\n\n  willDecohereOutlet(outlet: Outlet<O>): void {\n    // hook\n  }\n\n  didDecohereOutlet(outlet: Outlet<O>): void {\n    // hook\n  }\n\n  willRecohereOutlet(outlet: Outlet<O>, version: number): void {\n    // hook\n  }\n\n  didRecohereOutlet(outlet: Outlet<O>, version: number): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected onDecohereOutlets(): void {\n    AbstractStreamlet.decohereOutlets(this, Object.getPrototypeOf(this));\n  }\n\n  /** @hidden */\n  static decohereOutlets<I, O>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): void {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"outlets\")) {\n        for (const name in streamletPrototype.outlets) {\n          const outletDescriptor = streamletPrototype.outlets[name]!;\n          if (outletDescriptor instanceof OutletDescriptor) {\n            const outlet = AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n            outlet.decohereInput();\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n            inoutlet.decohereInput();\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInlets(version: number): void {\n    AbstractStreamlet.recohereInlets(version, this, Object.getPrototypeOf(this));\n  }\n\n  /** @hidden */\n  static recohereInlets<I, O>(version: number, streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): void {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"inlets\")) {\n        for (const name in streamletPrototype.inlets) {\n          const inletDescriptor = streamletPrototype.inlets[name]!;\n          if (inletDescriptor instanceof InletDescriptor) {\n            const inlet = AbstractStreamlet.reflectInletField(streamlet, inletDescriptor);\n            inlet.recohereOutput(version);\n          } else if (inletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor);\n            inoutlet.recohereOutput(version);\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutlets(version: number): void {\n    AbstractStreamlet.recohereOutlets(version, this, Object.getPrototypeOf(this));\n  }\n\n  /** @hidden */\n  static recohereOutlets<I, O>(version: number, streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): void {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"outlets\")) {\n        for (const name in streamletPrototype.outlets) {\n          const outletDescriptor = streamletPrototype.outlets[name]!;\n          if (outletDescriptor instanceof OutletDescriptor) {\n            const outlet = AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n            outlet.recohereInput(version);\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            const inoutlet = AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n            inoutlet.recohereInput(version);\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n\n  /** @hidden */\n  static reflectEachInlet<I, O, T>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null,\n                                   callback: (inlet: Inlet<I>, name: string, index: number) => T | void): T | undefined;\n  /** @hidden */\n  static reflectEachInlet<I, O, T, S>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null,\n                                      callback: (this: S, inlet: Inlet<I>, name: string, index: number) => T | void,\n                                      thisArg: S): T | undefined;\n  /** @hidden */\n  static reflectEachInlet<I, O, T, S>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null,\n                                      callback: (this: S | undefined, inlet: Inlet<I>, name: string, index: number) => T | void,\n                                      thisArg?: S): T | undefined {\n    let index = 0;\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"inlets\")) {\n        for (const name in streamletPrototype.inlets) {\n          const inletDescriptor = streamletPrototype.inlets[name]!;\n          let inlet: Inlet<I> | null;\n          if (inletDescriptor instanceof InletDescriptor) {\n            inlet = AbstractStreamlet.reflectInletField(streamlet, inletDescriptor);\n          } else if (inletDescriptor instanceof InoutletDescriptor) {\n            inlet = AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor);\n          } else {\n            inlet = null;\n          }\n          if (inlet !== null) {\n            const result = callback.call(thisArg, inlet, inletDescriptor.name, index);\n            if (result !== void 0) {\n              return result;\n            }\n            index += 1;\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n    return void 0;\n  }\n\n  /** @hidden */\n  static reflectEachOutlet<I, O, T>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null,\n                                       callback: (outlet: Outlet<O>, name: string, index: number) => T | void): T | undefined;\n  /** @hidden */\n  static reflectEachOutlet<I, O, T, S>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null,\n                                       callback: (this: S, outlet: Outlet<O>, name: string, index: number) => T | void,\n                                       thisArg: S): T | undefined;\n  /** @hidden */\n  static reflectEachOutlet<I, O, T, S>(streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null,\n                                       callback: (this: S | undefined, outlet: Outlet<O>, name: string, index: number) => T | void,\n                                       thisArg?: S): T | undefined {\n    let index = 0;\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"outlets\")) {\n        for (const name in streamletPrototype.outlets) {\n          const outletDescriptor = streamletPrototype.outlets[name]!;\n          let outlet: Outlet<O> | null;\n          if (outletDescriptor instanceof OutletDescriptor) {\n            outlet = AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            outlet = AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n          } else {\n            outlet = null;\n          }\n          if (outlet !== null) {\n            const result = callback.call(thisArg, outlet, outletDescriptor.name, index);\n            if (result !== void 0) {\n              return result;\n            }\n            index += 1;\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n    return void 0;\n  }\n\n  /** @hidden */\n  static reflectInletCount(streamletPrototype: StreamletPrototype | null): number {\n    let count = 0;\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"inlets\")) {\n        for (const _ in streamletPrototype.inlets) {\n          count += 1;\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n    return count;\n  }\n\n  /** @hidden */\n  static reflectOutletCount(streamletPrototype: StreamletPrototype | null): number {\n    let count = 0;\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"outlets\")) {\n        for (const _ in streamletPrototype.outlets) {\n          count += 1;\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n    return count;\n  }\n\n  /** @hidden */\n  static reflectInletIndex<I, O>(index: number, streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): [string, Inlet<I>] | null {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"inlets\")) {\n        for (const name in streamletPrototype.inlets) {\n          if (index === 0) {\n            const inletDescriptor = streamletPrototype.inlets[name]!;\n            if (inletDescriptor instanceof InletDescriptor) {\n              return [inletDescriptor.name, AbstractStreamlet.reflectInletField(streamlet, inletDescriptor)];\n            } else if (inletDescriptor instanceof InoutletDescriptor) {\n              return [inletDescriptor.name, AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor)];\n            } else {\n              return null;\n            }\n          }\n          index -= 1;\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static reflectOutletIndex<I, O>(index: number, streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): [string, Outlet<O>] | null {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"outlets\")) {\n        for (const name in streamletPrototype.outlets) {\n          if (index === 0) {\n            const outletDescriptor = streamletPrototype.outlets[name]!;\n            if (outletDescriptor instanceof OutletDescriptor) {\n              return [outletDescriptor.name, AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor)];\n            } else if (outletDescriptor instanceof InoutletDescriptor) {\n              return [outletDescriptor.name, AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor)];\n            } else {\n              return null;\n            }\n          }\n          index -= 1;\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static reflectInletKey<I, O>(key: string, streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): Inlet<I> | null {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"inlets\")) {\n        const inletDescriptor = streamletPrototype.inlets![key];\n        if (inletDescriptor !== void 0) {\n          if (inletDescriptor instanceof InletDescriptor) {\n            return AbstractStreamlet.reflectInletField(streamlet, inletDescriptor);\n          } else if (inletDescriptor instanceof InoutletDescriptor) {\n            return AbstractStreamlet.reflectInoutletField(streamlet, inletDescriptor);\n          } else {\n            return null;\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static reflectOutletKey<I, O>(key: string, streamlet: Streamlet<I, O>, streamletPrototype: StreamletPrototype | null): Outlet<O> | null {\n    while (streamletPrototype !== null) {\n      if (Object.prototype.hasOwnProperty.call(streamletPrototype, \"outlets\")) {\n        const outletDescriptor = streamletPrototype.outlets![key];\n        if (outletDescriptor !== void 0) {\n          if (outletDescriptor instanceof OutletDescriptor) {\n            return AbstractStreamlet.reflectOutletField(streamlet, outletDescriptor);\n          } else if (outletDescriptor instanceof InoutletDescriptor) {\n            return AbstractStreamlet.reflectInoutletField(streamlet, outletDescriptor);\n          } else {\n            return null;\n          }\n        }\n      }\n      streamletPrototype = Object.getPrototypeOf(streamletPrototype);\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static reflectInletField<I, O>(streamlet: Streamlet<I, O>, inletDescriptor: InletDescriptor): Inlet<I> {\n    if (inletDescriptor.type === \"value\") {\n      return AbstractStreamlet.reflectValueInletField(streamlet, inletDescriptor.key);\n    } else if (inletDescriptor.type === \"map\") {\n      return AbstractStreamlet.reflectMapInletField(streamlet, inletDescriptor.key);\n    } else {\n      throw new TypeError(inletDescriptor.type);\n    }\n  }\n\n  /** @hidden */\n  static reflectValueInletField<I, O>(streamlet: Streamlet<I, O>, key: string): Inlet<I> {\n    let inlet = (streamlet as any)[key] as Inlet<I> | undefined;\n    if (inlet === void 0) {\n      if (streamlet instanceof AbstractStreamlet) {\n        inlet = streamlet.inlet();\n      } else {\n        inlet = new StreamletInlet<I>(streamlet);\n      }\n      (streamlet as any)[key] = inlet;\n    }\n    return inlet;\n  }\n\n  /** @hidden */\n  static reflectMapInletField<I, O>(streamlet: Streamlet<I, O>, key: string): Inlet<I> {\n    return null as any; // TODO\n  }\n\n  /** @hidden */\n  static reflectOutletField<I, O>(streamlet: Streamlet<I, O>, outletDescriptor: OutletDescriptor): Outlet<O> {\n    if (outletDescriptor.type === \"value\") {\n      return AbstractStreamlet.reflectValueOutletField(streamlet, outletDescriptor.key);\n    } else if (outletDescriptor.type === \"map\") {\n      return AbstractStreamlet.reflectMapOutletField(streamlet, outletDescriptor.key);\n    } else {\n      throw new TypeError(outletDescriptor.type);\n    }\n  }\n\n  /** @hidden */\n  static reflectValueOutletField<I, O>(streamlet: Streamlet<I, O>, key: string): Outlet<O> {\n    let outlet = (streamlet as any)[key] as Outlet<O> | undefined;\n    if (outlet === void 0) {\n      if (streamlet instanceof AbstractStreamlet) {\n        outlet = streamlet.outlet();\n      } else {\n        outlet = new StreamletOutlet<O>(streamlet);\n      }\n      (streamlet as any)[key] = outlet;\n    }\n    return outlet;\n  }\n\n  /** @hidden */\n  static reflectMapOutletField<I, O>(streamlet: Streamlet<I, O>, key: string): Outlet<O> {\n    return null as any; // TODO\n  }\n\n  /** @hidden */\n  static reflectInoutletField<I, O>(streamlet: Streamlet<I, O>, inoutletDescriptor: InoutletDescriptor): Inoutlet<I, O> {\n    if (inoutletDescriptor.type === \"value\") {\n      return AbstractStreamlet.reflectValueInoutletField(streamlet, inoutletDescriptor.key);\n    } else if (inoutletDescriptor.type === \"map\") {\n      return AbstractStreamlet.reflectMapInoutletField(streamlet, inoutletDescriptor.key);\n    } else {\n      throw new TypeError(inoutletDescriptor.type);\n    }\n  }\n\n  /** @hidden */\n  static reflectValueInoutletField<I, O>(streamlet: Streamlet<I, O>, key: string): Inoutlet<I, O> {\n    let inoutlet = (streamlet as any)[key] as Inoutlet<I, O> | undefined;\n    if (inoutlet === void 0) {\n      if (streamlet instanceof AbstractStreamlet) {\n        inoutlet = streamlet.inoutlet();\n      } else {\n        inoutlet = new StreamletInoutlet<I, O>(streamlet);\n      }\n      (streamlet as any)[key] = inoutlet;\n    }\n    return inoutlet;\n  }\n\n  /** @hidden */\n  static reflectMapInoutletField<I, O>(streamlet: Streamlet<I, O>, key: string): Inoutlet<I, O> {\n    return null as any; // TODO\n  }\n\n  /** @hidden */\n  static init(streamletPrototype: StreamletPrototype): void {\n    if (!Object.prototype.hasOwnProperty.call(streamletPrototype, \"inlets\")) {\n      streamletPrototype.inlets = {};\n    }\n    if (!Object.prototype.hasOwnProperty.call(streamletPrototype, \"outlets\")) {\n      streamletPrototype.outlets = {};\n    }\n    if (!Object.prototype.hasOwnProperty.call(streamletPrototype, \"inoutlets\")) {\n      streamletPrototype.inoutlets = {};\n    }\n  }\n\n  /** @hidden */\n  static decorateInlet(options: InletOptions, target: StreamletPrototype, propertyKey: string | symbol): void {\n    AbstractStreamlet.init(target);\n    const name = options.name !== void 0 ? options.name : propertyKey.toString();\n    const type = options.type !== void 0 ? options.type : \"value\";\n    const inletDescriptor = new InletDescriptor(propertyKey.toString(), name, type);\n    target.inlets![name] = inletDescriptor;\n  }\n\n  /** @hidden */\n  static decorateOutlet(options: OutletOptions, target: StreamletPrototype, propertyKey: string | symbol): void {\n    AbstractStreamlet.init(target);\n    const name = options.name !== void 0 ? options.name : propertyKey.toString();\n    const type = options.type !== void 0 ? options.type : \"value\";\n    const outletDescriptor = new OutletDescriptor(propertyKey.toString(), name, type);\n    target.outlets![name] = outletDescriptor;\n  }\n\n  /** @hidden */\n  static decorateInoutlet(options: InoutletOptions, target: StreamletPrototype, propertyKey: string | symbol): void {\n    AbstractStreamlet.init(target);\n    const name = options.name !== void 0 ? options.name : propertyKey.toString();\n    const type = options.type !== void 0 ? options.type : \"value\";\n    const inoutletDescriptor = new InoutletDescriptor(propertyKey.toString(), name, type);\n    target.inlets![name] = inoutletDescriptor;\n    target.outlets![name] = inoutletDescriptor;\n    target.inoutlets![name] = inoutletDescriptor;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {OutletOptions} from \"./Outlet\";\nimport {StreamletPrototype, AbstractStreamlet} from \"./AbstractStreamlet\";\n\nexport function Out(name: string): PropertyDecorator;\nexport function Out(options: OutletOptions): PropertyDecorator;\nexport function Out(target: unknown, key: string): void;\nexport function Out(target: unknown, key?: string): PropertyDecorator | void {\n  if (arguments.length === 1) {\n    if (typeof target === \"string\") {\n      target = {name: target} as OutletOptions;\n    }\n    return AbstractStreamlet.decorateOutlet.bind(void 0, target as OutletOptions);\n  } else {\n    AbstractStreamlet.decorateOutlet({}, target as StreamletPrototype, key!);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {InoutletOptions} from \"./Inoutlet\";\nimport {StreamletPrototype, AbstractStreamlet} from \"./AbstractStreamlet\";\n\nexport function Inout(name: string): PropertyDecorator;\nexport function Inout(options: InoutletOptions): PropertyDecorator;\nexport function Inout(target: unknown, key: string): void;\nexport function Inout(target: unknown, key?: string): PropertyDecorator | void {\n  if (arguments.length === 1) {\n    if (typeof target === \"string\") {\n      target = {name: target} as InoutletOptions;\n    }\n    return AbstractStreamlet.decorateInoutlet.bind(void 0, target as InoutletOptions);\n  } else {\n    AbstractStreamlet.decorateInoutlet({}, target as StreamletPrototype, key!);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Map} from \"@swim/util\";\nimport type {Value, Record} from \"@swim/structure\";\nimport {Outlet, MapOutlet, StreamletScope} from \"@swim/streamlet\";\nimport type {MapValueFunction, MapFieldValuesFunction} from \"@swim/streamlet\";\nimport type {WatchValueFunction, WatchFieldsFunction} from \"@swim/streamlet\";\n\nexport interface RecordOutlet extends Outlet<Record>, MapOutlet<Value, Value, Record>, StreamletScope<Value> {\n  outlet(key: Value | string): Outlet<Value>;\n\n  get(): Record;\n  get(key: Value): Value;\n\n  memoize(): MapOutlet<Value, Value, Record>;\n\n  map<O2>(func: MapValueFunction<Record, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<Value, Value, V2>): MapOutlet<Value, V2, Map<Value, V2>>;\n\n  watch(func: WatchValueFunction<Record>): this;\n  watch(func: WatchFieldsFunction<Value, Value>): this;\n}\n\nexport const RecordOutlet = {} as {\n  is(object: unknown): object is RecordOutlet;\n};\n\nRecordOutlet.is = function (object: unknown): object is RecordOutlet {\n  if (typeof object === \"object\" && object !== null) {\n    const outlet = object as RecordOutlet;\n    return MapOutlet.is(outlet) && StreamletScope.is(outlet);\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Cursor, Map} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {AnyItem, Item, Field, AnyValue, Value, Record, Text, Selector} from \"@swim/structure\";\nimport {\n  Inlet,\n  Outlet,\n  KeyEffect,\n  MapInlet,\n  MapOutlet,\n  MapOutletCombinators,\n  KeyOutlet,\n  StreamletContext,\n  StreamletScope,\n  FilterFieldsFunction,\n  FilterFieldsCombinator,\n} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\nimport {RecordStreamlet} from \"./\"; // forward import\n\nexport abstract class AbstractRecordOutlet extends Record implements RecordOutlet {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"effects\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outlets\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly effects!: BTree<Value, KeyEffect>;\n\n  /** @hidden */\n  readonly outlets!: BTree<Value, KeyOutlet<Value, Value>>;\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<Record>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  declare readonly streamletScope: StreamletScope<Value> | null; // getter defined below to work around useDefineForClassFields lunacy\n\n  get streamletContext(): StreamletContext | null {\n    const scope = this.streamletScope;\n    if (scope !== null) {\n      return scope.streamletContext;\n    }\n    return null;\n  }\n\n  hasOwn(key: AnyValue): boolean {\n    return this.has(key);\n  }\n\n  override get(): Record;\n  override get(key: AnyValue): Value;\n  override get(key?: AnyValue): Record | Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      return super.get(key);\n    }\n  }\n\n  abstract keyIterator(): Cursor<Value>;\n\n  outlet(key: Value | string): Outlet<Value> {\n    if (typeof key === \"string\") {\n      key = Text.from(key);\n    }\n    if (!this.hasOwn(key)) {\n      const scope = this.streamletScope;\n      if (RecordOutlet.is(scope) && scope.has(key)) {\n        // TODO: Support dynamic shadowing?\n        return scope.outlet(key);\n      }\n    }\n    const oldOutlets = this.outlets;\n    let outlet = oldOutlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet<Value, Value>(this, key);\n      Object.defineProperty(this, \"outlets\", {\n        value: oldOutlets.updated(key, outlet),\n        enumerable: true,\n        configurable: true,\n      });\n      this.decohereInputKey(key, KeyEffect.Update);\n    }\n    return outlet;\n  }\n\n  outputIterator(): Cursor<Inlet<Record>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<Record>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<Record>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: Value, keyOutlet: KeyOutlet<Value, Value>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: Value, keyOutlet: KeyOutlet<Value, Value>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n    this.forEach(function (member: Item): void {\n      if (member instanceof Field) {\n        member = member.toValue();\n      }\n      if (member instanceof AbstractRecordOutlet) {\n        member.disconnectOutputs();\n      } else if (member instanceof RecordStreamlet) {\n        member.disconnectOutputs();\n      } else if (RecordOutlet.is(member)) {\n        member.disconnectOutputs();\n      }\n    }, this);\n  }\n\n  disconnectInputs(): void {\n    // nop\n  }\n\n  decohereInputKey(key: Value, effect: KeyEffect): void {\n    const oldEffects = this.effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereInputKey(key, effect);\n      Object.defineProperty(this, \"effects\", {\n        value: oldEffects.updated(key, effect),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereInputKey(key, effect);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this.outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereInputKey(key, effect);\n    }\n  }\n\n  decohereInput(): void {\n    if (this.version >= 0) {\n      this.willDecohereInput();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereInput();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.decohereOutput();\n      }\n      this.outlets.forEach(function (key: Value, outlet: KeyOutlet<Value, Value>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohereInput();\n    }\n  }\n\n  recohereInputKey(key: Value, version: number): void {\n    if (this.version < 0) {\n      const oldEffects = this.effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereInputKey(key, effect, version);\n        Object.defineProperty(this, \"effects\", {\n          value: oldEffects.removed(key),\n          enumerable: true,\n          configurable: true,\n        });\n        this.onRecohereInputKey(key, effect, version);\n        const outputs = this.outputs;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this.outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereInputKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereInput(version: number): void {\n    if (this.version < 0) {\n      this.willRecohereInput(version);\n      this.effects.forEach(function (key: Value): void {\n        this.recohereInputKey(key, version);\n      }, this);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohereInput(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.recohereOutput(version);\n      }\n      this.forEach(function (member: Item): void {\n        if (member instanceof Field) {\n          member = member.toValue();\n        }\n        if (member instanceof AbstractRecordOutlet) {\n          member.recohereInput(version);\n        } else if (member instanceof RecordStreamlet) {\n          member.recohere(version);\n        } else if (RecordOutlet.is(member)) {\n          member.recohereInput(version);\n        }\n      }, this);\n      this.didRecohereInput(version);\n    }\n  }\n\n  protected willDecohereInputKey(key: Value, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereInputKey(key: Value, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereInputKey(key: Value, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohereInput(): void {\n    // hook\n  }\n\n  protected onDecohereInput(): void {\n    // hook\n  }\n\n  protected didDecohereInput(): void {\n    // hook\n  }\n\n  protected willRecohereInputKey(key: Value, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereInputKey(key: Value, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected didRecohereInputKey(key: Value, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInput(version: number): void {\n    // hook\n  }\n\n  protected didRecohereInput(version: number): void {\n    // hook\n  }\n\n  override filter(predicate?: AnyItem): Selector;\n  override filter(func: FilterFieldsFunction<Value, Value>): MapOutlet<Value, Value, Map<Value, Value>>;\n  override filter(func: AnyItem | FilterFieldsFunction<Value, Value>): Selector | MapOutlet<Value, Value, Map<Value, Value>> {\n    if (typeof func !== \"function\") {\n      return super.filter(func as AnyItem);\n    } else {\n      const combinator = new FilterFieldsCombinator<Value, Value, Record>(func);\n      combinator.bindInput(this);\n      return combinator;\n    }\n  }\n}\nObject.defineProperty(AbstractRecordOutlet.prototype, \"streamletScope\", {\n  get(this: AbstractRecordOutlet): StreamletScope<Value> | null {\n    return null;\n  },\n  enumerable: true,\n  configurable: true,\n});\nexport interface AbstractRecordOutlet extends MapOutletCombinators<Value, Value, Record> {\n}\nMapOutletCombinators.define(AbstractRecordOutlet.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, Record} from \"@swim/structure\";\nimport {Inlet, Outlet, StreamletContext, StreamletScope, Streamlet, AbstractStreamlet} from \"@swim/streamlet\";\n\nexport abstract class RecordStreamlet<I extends Value = Value, O extends Value = I> extends Record implements Streamlet<I, O> {\n  override isConstant(): boolean {\n    return false;\n  }\n\n  abstract readonly streamletScope: StreamletScope<O> | null;\n\n  abstract setStreamletScope(parent: StreamletScope<O> | null): void;\n\n  abstract readonly streamletContext: StreamletContext | null;\n\n  abstract setStreamletContext(context: StreamletContext | null): void;\n\n  abstract inlet(key: string): Inlet<I> | null;\n\n  abstract bindInput(key: string, input: Outlet<I>): void;\n\n  abstract unbindInput(key: string): void;\n\n  abstract outlet(key: string): Outlet<O> | null;\n\n  abstract disconnectInputs(): void;\n\n  abstract disconnectOutputs(): void;\n\n  abstract decohere(): void;\n\n  abstract recohere(version: number): void;\n\n  compile(): void {\n    AbstractStreamlet.reflectEachInlet<I, O, void, this>(this, Object.getPrototypeOf(this), function (inlet: Inlet<I>, name: string): void {\n      if (inlet.input === null) {\n        this.compileInlet(inlet, name);\n      }\n    }, this);\n  }\n\n  compileInlet(inlet: Inlet<I>, name: string): void {\n    const scope = this.streamletScope;\n    if (scope !== null) {\n      const input = scope.outlet(name);\n      if (input !== null) {\n        // Assume Outlet<O> conforms to Outlet<I>.\n        inlet.bindInput(input as Outlet<unknown> as Outlet<I>);\n      }\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item, Field, Slot, AnyValue, Value, AnyText, Text, AnyNum, Num, Form} from \"@swim/structure\";\nimport {\n  Inlet,\n  Outlet,\n  Inoutlet,\n  StreamletContext,\n  GenericStreamlet,\n  AbstractStreamlet,\n  StreamletScope,\n  StreamletInlet,\n  StreamletOutlet,\n  StreamletInoutlet,\n} from \"@swim/streamlet\";\nimport {RecordStreamlet} from \"./RecordStreamlet\";\n\nexport abstract class AbstractRecordStreamlet<I extends Value = Value, O extends Value = I> extends RecordStreamlet<I, O> implements GenericStreamlet<I, O> {\n  constructor(scope: StreamletScope<O> | null = null) {\n    super();\n    Object.defineProperty(this, \"streamletScope\", {\n      value: scope,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"streamletContext\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly streamletScope!: StreamletScope<O> | null;\n\n  override setStreamletScope(scope: StreamletScope<O> | null): void {\n    Object.defineProperty(this, \"streamletScope\", {\n      value: scope,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly streamletContext!: StreamletContext | null;\n\n  override setStreamletContext(context: StreamletContext | null): void {\n    Object.defineProperty(this, \"streamletContext\", {\n      value: context,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly version!: number;\n\n  override isEmpty(): boolean {\n    return this.length !== 0;\n  }\n\n  override get length(): number {\n    return AbstractStreamlet.reflectOutletCount(Object.getPrototypeOf(this));\n  }\n\n  override has(key: AnyValue): boolean {\n    if (key instanceof Text) {\n      key = key.value;\n    } else if (typeof key !== \"string\") {\n      return false;\n    }\n    const outlet = this.outlet(key);\n    return outlet !== null;\n  }\n\n  override get(key: AnyValue): Value {\n    if (key instanceof Text) {\n      key = key.value;\n    } else if (typeof key !== \"string\") {\n      return Value.absent();\n    }\n    const outlet = this.outlet(key);\n    if (outlet !== null) {\n      const output = outlet.get();\n      if (output !== void 0) {\n        return output;\n      }\n    }\n    return Value.absent();\n  }\n\n  override getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  override getSlot(key: AnyValue): Value {\n    return this.get(key);\n  }\n\n  override getField(key: AnyValue): Field | undefined {\n    if (typeof key === \"string\") {\n      key = Text.from(key);\n    } else if (!(key instanceof Text)) {\n      return void 0;\n    }\n    const value = this.get(key);\n    if (value.isDefined()) {\n      return Slot.of(key, value);\n    }\n    return void 0;\n  }\n\n  override getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const entry = AbstractStreamlet.reflectOutletIndex<I, O>(index, this, Object.getPrototypeOf(this));\n    if (entry !== null) {\n      const name = entry[0];\n      let output = entry[1].get() as Value | undefined;\n      if (output === void 0) {\n        output = Value.extant();\n      }\n      return Slot.of(name, output);\n    }\n    return Item.absent();\n  }\n\n  override set(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override setAttr(key: AnyText, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override setSlot(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override setItem(index: number, item: AnyItem): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override push(...items: AnyItem[]): number {\n    throw new Error(\"unsupported\");\n  }\n\n  override splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    throw new Error(\"unsupported\");\n  }\n\n  override delete(key: AnyValue): Item {\n    throw new Error(\"unsupported\");\n  }\n\n  override clear(): void {\n    throw new Error(\"unsupported\");\n  }\n\n  override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                         thisArg: S): T | undefined;\n  override forEach<T, S>(callback: (this: S | unknown, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined {\n    return AbstractStreamlet.reflectEachOutlet(this, Object.getPrototypeOf(this), function (outlet: Outlet<O>, name: string, index: number): T | void {\n      const output = outlet.get();\n      if (output !== void 0) {\n        const result = callback.call(thisArg, output, index);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n    }, this);\n  }\n\n  override inlet(key: string): Inlet<I> | null;\n  override inlet<I2 extends I>(): Inlet<I2>;\n  override inlet(key?: string): Inlet<I> | null {\n    if (key === void 0) {\n      return new StreamletInlet<I>(this);\n    } else {\n      return AbstractStreamlet.reflectInletKey<I, O>(key, this, Object.getPrototypeOf(this));\n    }\n  }\n\n  override bindInput(key: string, input: Outlet<I>): void {\n    const inlet = this.inlet(key);\n    if (inlet === null) {\n      throw new Error(key);\n    }\n    inlet.bindInput(input);\n  }\n\n  override unbindInput(key: string): void {\n    const inlet = this.inlet(key);\n    if (inlet === null) {\n      throw new Error(key);\n    }\n    inlet.unbindInput();\n  }\n\n  override outlet(key: string | Outlet<O>): Outlet<O> | null;\n  override outlet<O2 extends Value>(): Outlet<O2>;\n  override outlet(key?: string | Outlet<O>): Outlet<O> | null {\n    if (key === void 0) {\n      return new StreamletOutlet<O>(this);\n    } else if (typeof key === \"string\") {\n      return AbstractStreamlet.reflectOutletKey<I, O>(key, this, Object.getPrototypeOf(this));\n    } else {\n      return key;\n    }\n  }\n\n  inoutlet<I2 extends I, O2 extends Value>(): Inoutlet<I2, O2> {\n    return new StreamletInoutlet<I2, O2>(this as RecordStreamlet<I2, O2>);\n  }\n\n  override decohere(): void {\n    if (this.version >= 0) {\n      this.willDecohere();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohere();\n      this.onDecohereOutlets();\n      this.didDecohere();\n    }\n  }\n\n  override recohere(version: number): void {\n    if (this.version < 0) {\n      this.willRecohere(version);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohereInlets(version);\n      this.onRecohere(version);\n      this.onRecohereOutlets(version);\n      this.didRecohere(version);\n    }\n  }\n\n  getInput<I2 extends I>(inlet: Inlet<I2> | string): I2 | undefined;\n  getInput<I2 extends I, E = I2>(inlet: Inlet<I2> | string, orElse: E): I2 | E;\n  getInput<I2 extends I, E = I2>(inlet: Inlet<I2> | string, orElse?: E): I2 | E | undefined {\n    if (typeof inlet === \"string\") {\n      inlet = this.inlet(inlet) as Inlet<I2>;\n    }\n    let object: I2 | E | undefined;\n    if (inlet !== null) {\n      const input = inlet.input;\n      if (input !== null) {\n        object = input.get();\n      }\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  castInput<T>(inlet: Inlet<I> | string, form: Form<T, unknown>): T | undefined;\n  castInput<T, E = T>(inlet: Inlet<I> | string, form: Form<T, unknown>, orElse: E): T | E;\n  castInput<T, E = T>(inlet: Inlet<I> | string, form: Form<T, unknown>, orElse?: E): T | E | undefined {\n    const input = this.getInput(inlet);\n    let object: T | E | undefined;\n    if (input !== void 0) {\n      object = form.cast(input);\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  coerceInput<T>(inlet: Inlet<I> | string, form: Form<T, unknown>): T;\n  coerceInput<T, E = T>(inlet: Inlet<I> | string, form: Form<T, unknown>, orElse: E): T | E;\n  coerceInput<T, E = T>(inlet: Inlet<I> | string, form: Form<T, unknown>, orElse?: E): T | E {\n    const input = this.getInput(inlet);\n    let object: T | E | undefined;\n    if (input !== void 0) {\n      object = form.cast(input);\n    }\n    if (object === void 0) {\n      object = form.unit;\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object!;\n  }\n\n  getOutput(outlet: Outlet<O> | string): O | undefined {\n    return void 0;\n  }\n\n  override disconnectInputs(): void {\n    AbstractStreamlet.disconnectInputs(this, Object.getPrototypeOf(this));\n  }\n\n  override disconnectOutputs(): void {\n    AbstractStreamlet.disconnectOutputs(this, Object.getPrototypeOf(this));\n  }\n\n  willDecohereInlet(inlet: Inlet<I>): void {\n    // hook\n  }\n\n  didDecohereInlet(inlet: Inlet<I>): void {\n    this.decohere();\n  }\n\n  willRecohereInlet(inlet: Inlet<I>, version: number): void {\n    // hook\n  }\n\n  didRecohereInlet(inlet: Inlet<I>, version: number): void {\n    this.recohere(version);\n  }\n\n  willDecohereOutlet(outlet: Outlet<O>): void {\n    // hook\n  }\n\n  didDecohereOutlet(outlet: Outlet<O>): void {\n    // hook\n  }\n\n  willRecohereOutlet(outlet: Outlet<O>, version: number): void {\n    // hook\n  }\n\n  didRecohereOutlet(outlet: Outlet<O>, version: number): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected onDecohereOutlets(): void {\n    AbstractStreamlet.decohereOutlets(this, Object.getPrototypeOf(this));\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohereInlets(version: number): void {\n    AbstractStreamlet.recohereInlets(version, this, Object.getPrototypeOf(this));\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohereOutlets(version: number): void {\n    AbstractStreamlet.recohereOutlets(version, this, Object.getPrototypeOf(this));\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Value, Record} from \"@swim/structure\";\nimport {KeyEffect, AbstractInlet} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\n\nexport class RecordFieldUpdater extends AbstractInlet<Value> {\n  constructor(record: Record, key: Value) {\n    super();\n    Object.defineProperty(this, \"record\", {\n      value: record,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"key\", {\n      value: key,\n      enumerable: true,\n    });\n  }\n\n  readonly record!: Record;\n\n  readonly key!: Value;\n\n  protected override onDecohereOutput(): void {\n    const record = this.record;\n    if (RecordOutlet.is(record)) {\n      record.decohereInputKey(this.key, KeyEffect.Update);\n    }\n  }\n\n  protected override onRecohereOutput(version: number): void {\n    const input = this.input;\n    if (input !== null) {\n      const value = input.get();\n      if (value !== void 0) {\n        this.record.set(this.key, value);\n      } else {\n        this.record.delete(this.key);\n      }\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {AnyItem, Item, Field, Slot, AnyValue, Value, Record, AnyText, Text, AnyNum, MathModule} from \"@swim/structure\";\nimport {KeyEffect, MapOutlet} from \"@swim/streamlet\";\nimport {RecordStreamlet} from \"./RecordStreamlet\";\nimport {AbstractRecordOutlet} from \"./AbstractRecordOutlet\";\nimport {RecordFieldUpdater} from \"./RecordFieldUpdater\";\nimport {RecordScope} from \"./\"; // forward import\nimport {Reifier} from \"./\"; // forward import\nimport {Dataflow} from \"./\"; // forward import\n\nexport class RecordModel extends AbstractRecordOutlet {\n  constructor(state?: Record) {\n    super();\n    if (state === void 0) {\n      state = Record.create();\n    }\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"fieldUpdaters\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly state!: Record;\n\n  /** @hidden */\n  readonly fieldUpdaters!: BTree<Value, RecordFieldUpdater>;\n\n  override isEmpty(): boolean {\n    return this.state.isEmpty();\n  }\n\n  override isArray(): boolean {\n    return this.state.isArray();\n  }\n\n  override isObject(): boolean {\n    return this.state.isObject();\n  }\n\n  override get length(): number {\n    return this.state.length;\n  }\n\n  declare readonly fieldCount: number; // getter defined below to work around useDefineForClassFields lunacy\n\n  override get valueCount(): number {\n    return this.state.valueCount;\n  }\n\n  override has(key: AnyValue): boolean {\n    if (this.state.has(key)) {\n      return true;\n    } else {\n      const scope = this.streamletScope;\n      return scope instanceof Record ? scope.has(key) : false;\n    }\n  }\n\n  override hasOwn(key: AnyValue): boolean {\n    return this.state.has(key);\n  }\n\n  override indexOf(item: AnyItem, index?: number): number {\n    return this.state.indexOf(item, index);\n  }\n\n  override lastIndexOf(item: AnyItem, index: number = 0): number {\n    return this.state.lastIndexOf(item, index);\n  }\n\n  override get(): Record;\n  override get(key: AnyValue): Value;\n  override get(key?: AnyValue): Record | Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      key = Value.fromAny(key);\n      let value = this.state.get(key);\n      if (!value.isDefined()) {\n        const scope = this.streamletScope;\n        if (scope instanceof Record) {\n          value = scope.get(key);\n        }\n      }\n      return value;\n    }\n  }\n\n  override getAttr(key: AnyText): Value {\n    key = Text.fromAny(key);\n    let value = this.state.getAttr(key);\n    if (!value.isDefined()) {\n      const scope = this.streamletScope;\n      if (scope instanceof Record) {\n        value = scope.getAttr(key);\n      }\n    }\n    return value;\n  }\n\n  override getSlot(key: AnyValue): Value {\n    key = Value.fromAny(key);\n    let value = this.state.getSlot(key);\n    if (!value.isDefined()) {\n      const scope = this.streamletScope;\n      if (scope instanceof Record) {\n        value = scope.getSlot(key);\n      }\n    }\n    return value;\n  }\n\n  override getField(key: AnyValue): Field | undefined {\n    key = Value.fromAny(key);\n    let field = this.state.getField(key);\n    if (field === void 0) {\n      const scope = this.streamletScope;\n      if (scope instanceof Record) {\n        field = scope.getField(key);\n      }\n    }\n    return field;\n  }\n\n  override getItem(index: AnyNum): Item {\n    return this.state.getItem(index);\n  }\n\n  bindValue(key: Value, expr: Value): void {\n    const fieldUpdater = new RecordFieldUpdater(this, key);\n    const valueInput = Dataflow.compile(expr, this);\n    fieldUpdater.bindInput(valueInput);\n    // TODO: clean up existing field updater\n    Object.defineProperty(this, \"fieldUpdaters\", {\n      value: this.fieldUpdaters.updated(key, fieldUpdater),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override set(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    if (!this.state.has(key)) {\n      const scope = this.streamletScope;\n      if (scope instanceof Record && scope.has(key)) {\n        scope.set(key, newValue);\n      } else {\n        this.state.set(key, newValue);\n      }\n    } else {\n      this.state.set(key, newValue);\n    }\n    this.decohereInputKey(key, KeyEffect.Update);\n    return this;\n  }\n\n  override setAttr(key: AnyText, newValue: AnyValue): this {\n    key = Text.fromAny(key);\n    if (!this.state.has(key)) {\n      const scope = this.streamletScope;\n      if (scope instanceof Record && scope.has(key)) {\n        scope.setAttr(key, newValue);\n      } else {\n        this.state.setAttr(key, newValue);\n      }\n    } else {\n      this.state.setAttr(key, newValue);\n    }\n    this.decohereInputKey(key, KeyEffect.Update);\n    return this;\n  }\n\n  override setSlot(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    if (!this.state.has(key)) {\n      const scope = this.streamletScope;\n      if (scope instanceof Record && scope.has(key)) {\n        scope.setSlot(key, newValue);\n      } else {\n        this.state.setSlot(key, newValue);\n      }\n    } else {\n      this.state.setSlot(key, newValue);\n    }\n    this.decohereInputKey(key, KeyEffect.Update);\n    return this;\n  }\n\n  override setItem(index: number, newItem: AnyItem): this {\n    const oldItem = this.state.getItem(index);\n    newItem = Item.fromAny(newItem);\n    this.state.setItem(index, newItem);\n    if (oldItem instanceof Field && newItem instanceof Field) {\n      if (oldItem.key.equals(newItem.key)) {\n        this.decohereInputKey(oldItem.key, KeyEffect.Update);\n      } else {\n        this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n        this.decohereInputKey(newItem.key, KeyEffect.Update);\n      }\n    } else if (oldItem instanceof Field) {\n      this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n    } else if (newItem instanceof Field) {\n      this.decohereInputKey(newItem.key, KeyEffect.Update);\n    } else {\n      this.decohereInput();\n    }\n    return this;\n  }\n\n  override push(...newItems: AnyItem[]): number {\n    let i = this.state.length;\n    const n = this.state.push(...newItems);\n    while (i < n) {\n      const newItem = this.state.get(i);\n      if (newItem instanceof Field) {\n        this.decohereInputKey(newItem.key, KeyEffect.Update);\n      }\n      i += 1;\n    }\n    return n;\n  }\n\n  override splice(start: number, deleteCount: number = 0, ...newItems: AnyItem[]): Item[] {\n    const n = this.state.length;\n    if (start < 0) {\n      start = n + start;\n    }\n    start = Math.max(0, start);\n    deleteCount = Math.max(0, deleteCount);\n    const deleted = this.state.splice(start, deleteCount, ...newItems);\n    for (let i = 0; i < deleted.length; i += 1) {\n      const oldItem = deleted[i];\n      if (oldItem instanceof Field) {\n        this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n      }\n    }\n    for (let i = start; i < start + newItems.length; i += 1) {\n      const newItem = this.state.get(i);\n      if (newItem instanceof Field) {\n        this.decohereInputKey(newItem.key, KeyEffect.Update);\n      }\n    }\n    return deleted;\n  }\n\n  override delete(key: AnyValue): Item {\n    const oldItem = this.state.delete(key);\n    if (oldItem instanceof Field) {\n      this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n    }\n    return oldItem;\n  }\n\n  override clear(): void {\n    const oldState = this.state.branch();\n    this.state.clear();\n    oldState.forEach(function (oldItem: Item): void {\n      if (oldItem instanceof Field) {\n        this.decohereInputKey(oldItem.key, KeyEffect.Remove);\n      }\n    }, this);\n  }\n\n  override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                         thisArg: S): T | undefined;\n  override forEach<T, S>(callback: (this: S | undefined, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined {\n    return this.state.forEach(callback, thisArg);\n  }\n\n  override keyIterator(): Cursor<Value> {\n    throw new Error(); // TODO\n  }\n\n  override disconnectInputs(): void {\n    const oldFieldUpdaters = this.fieldUpdaters;\n    if (!oldFieldUpdaters.isEmpty()) {\n      Object.defineProperty(this, \"fieldUpdaters\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldFieldUpdaters.forEach(function (key: Value, inlet: RecordFieldUpdater): void {\n        inlet.disconnectInputs();\n      }, this);\n    }\n  }\n\n  override memoize(): MapOutlet<Value, Value, Record> {\n    return this;\n  }\n\n  materialize(record: Record): void {\n    record.forEach(function (item: Item): void {\n      this.materializeItem(item);\n    }, this);\n  }\n\n  materializeItem(item: Item): void {\n    if (item instanceof Field) {\n      this.materializeField(item);\n    } else {\n      this.materializeValue(item);\n    }\n  }\n\n  materializeField(field: Field): void {\n    const value = field.value;\n    if (value instanceof RecordStreamlet) {\n      value.setStreamletScope(this);\n      this.state.push(field);\n    } else if (value instanceof Record) {\n      // Add recursively materialized nested scope.\n      const child = new RecordScope(this);\n      child.materialize(value);\n      this.state.push(field.updatedValue(child));\n    } else {\n      this.state.push(field);\n    }\n  }\n\n  materializeValue(value: Value): void {\n    if (value instanceof RecordStreamlet) {\n      value.setStreamletScope(this);\n      this.state.push(value);\n    } else if (value instanceof Record) {\n      // Add recursively materialized nested scope.\n      const child = new RecordScope(this);\n      child.materialize(value);\n      this.state.push(child);\n    } else {\n      this.state.push(value);\n    }\n  }\n\n  compile(record: Record): void {\n    record.forEach(function (item: Item, index: number): void {\n      this.compileItem(item, index);\n    }, this);\n  }\n\n  compileItem(item: Item, index: number): void {\n    if (item instanceof Field) {\n      this.compileField(item, index);\n    } else {\n      this.compileValue(item, index);\n    }\n  }\n\n  compileField(field: Field, index: number): void {\n    const key = field.key;\n    const value = field.value;\n    if (!key.isConstant()) {\n      // TODO: Add dynamic key updater.\n    } else if (!value.isConstant()) {\n      if (value instanceof RecordStreamlet) {\n        // Lexically bind nested streamlet.\n        value.compile();\n        // Decohere nested scope key.\n        this.decohereInputKey(key, KeyEffect.Update);\n      } else if (value instanceof Record) {\n        // Recursively compile nested scope.\n        (this.state.getItem(index).toValue() as RecordModel).compile(value);\n        // Decohere nested scope key.\n        this.decohereInputKey(key, KeyEffect.Update);\n      } else {\n        // Set placeholder value.\n        field.setValue(Value.extant());\n        // Bind dynamic value updater.\n        this.bindValue(key, value);\n      }\n    } else {\n      // Decohere constant key.\n      this.decohereInputKey(key, KeyEffect.Update);\n    }\n  }\n\n  compileValue(value: Value, index: number): void {\n    if (value instanceof RecordStreamlet) {\n      value.compile();\n    } else if (value instanceof Record) {\n      // Recursively compile nested scope.\n      (this.state.getItem(index) as RecordModel).compile(value);\n    } else if (!value.isConstant()) {\n      // TODO: Bind dynamic item updater.\n    } else {\n      // TODO: Fold constant expressions.\n    }\n  }\n\n  reify(reifier: Reifier | null = Reifier.system()): void {\n    this.forEach(function (oldItem: Item, index: number): void {\n      const newItem = this.reifyItem(oldItem, reifier);\n      if (oldItem !== newItem) {\n        this.setItem(index, newItem);\n      }\n    }, this);\n  }\n\n  reifyItem(item: Item, reifier: Reifier | null): Item {\n    if (reifier !== null) {\n      item = reifier.reify(item);\n    }\n    const scope = this.streamletScope;\n    if (scope instanceof RecordModel) {\n      return scope.reifyItem(item, reifier);\n    } else {\n      return item;\n    }\n  }\n\n  static from(record: Record): RecordModel {\n    const model = new RecordModel();\n    model.materialize(record);\n    model.compile(record);\n    return model;\n  }\n\n  static override of(...items: AnyItem[]): RecordModel {\n    return RecordModel.from(Record.of(...items));\n  }\n\n  static override globalScope(): RecordModel {\n    const model = new RecordModel();\n    model.materializeField(Slot.of(\"math\", MathModule.scope.branch()));\n    return model;\n  }\n}\nObject.defineProperty(RecordModel.prototype, \"fieldCount\", {\n  get(this: RecordModel): number {\n    return this.state.fieldCount;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Value, Record} from \"@swim/structure\";\nimport type {StreamletScope} from \"@swim/streamlet\";\nimport {RecordModel} from \"./RecordModel\";\n\nexport class RecordScope extends RecordModel {\n  constructor(scope: StreamletScope<Value> | null, state?: Record) {\n    super(state);\n    Object.defineProperty(this, \"streamletScope\", {\n      value: scope,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly streamletScope!: StreamletScope<Value> | null;\n\n  static override from(record: Record): RecordScope {\n    const scope = new RecordScope(RecordScope.globalScope());\n    scope.materialize(record);\n    scope.compile(record);\n    return scope;\n  }\n\n  static override of(...items: AnyItem[]): RecordScope {\n    return RecordScope.from(Record.of(...items));\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item} from \"@swim/structure\";\n\nexport abstract class Reifier {\n  abstract reify(item: Item): Item;\n\n  static system(): Reifier {\n    return null as unknown as Reifier; // TODO\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {AbstractOutlet, OutletInlet, OutletMapInlet} from \"@swim/streamlet\";\n\n/** @hidden */\nexport class GetOutlet extends AbstractOutlet<Value> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"keyInlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"mapInlet\", {\n      value: new OutletMapInlet<Value, Value, unknown>(this),\n      enumerable: true,\n    });\n  }\n\n  readonly keyInlet!: OutletInlet<Value>;\n\n  readonly mapInlet!: OutletMapInlet<Value, Value, unknown>;\n\n  override get(): Value {\n    const keyInput = this.keyInlet.input;\n    if (keyInput !== null) {\n      const key = keyInput.get();\n      if (key !== void 0) {\n        const mapInput = this.mapInlet.input;\n        if (mapInput !== null) {\n          const value = mapInput.get(key);\n          if (value !== void 0) {\n            return value;\n          }\n        }\n      }\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport abstract class BinaryOutlet extends AbstractOutlet<Value> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"operand1Inlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"operand2Inlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n  }\n\n  readonly operand1Inlet!: Inlet<Value>;\n\n  readonly operand2Inlet!: Inlet<Value>;\n\n  override get(): Value {\n    const operand1Input = this.operand1Inlet.input;\n    const operand2Input = this.operand2Inlet.input;\n    if (operand1Input !== null && operand2Input !== null) {\n      const argument1 = operand1Input.get();\n      const argument2 = operand2Input.get();\n      if (argument1 !== void 0 && argument2 !== void 0) {\n        const result = this.evaluate(argument1, argument2);\n        return result.toValue();\n      }\n    }\n    return Value.absent();\n  }\n\n  protected abstract evaluate(argument1: Value, argument2: Value): Item;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport abstract class UnaryOutlet extends AbstractOutlet<Value> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"operandInlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n  }\n\n  readonly operandInlet!: Inlet<Value>;\n\n  override get(): Value {\n    const operandInput = this.operandInlet.input;\n    if (operandInput !== null) {\n      const argument = operandInput.get();\n      if (argument !== void 0) {\n        const result = this.evaluate(argument);\n        return result.toValue();\n      }\n    }\n    return Value.absent();\n  }\n\n  protected abstract evaluate(argument: Value): Item;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport class ConditionalOutlet extends AbstractOutlet<Value> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"ifInlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"thenInlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"elseInlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n  }\n\n  readonly ifInlet!: Inlet<Value>;\n\n  readonly thenInlet!: Inlet<Value>;\n\n  readonly elseInlet!: Inlet<Value>;\n\n  override get(): Value {\n    const ifInput = this.ifInlet.input;\n    if (ifInput !== null) {\n      const ifTerm = ifInput.get();\n      if (ifTerm !== void 0) {\n        if (ifTerm.isDefinite()) {\n          const thenInput = this.thenInlet.input;\n          if (thenInput !== null) {\n            const thenTerm = thenInput.get();\n            if (thenTerm !== void 0) {\n              return thenTerm;\n            }\n          }\n        } else {\n          const elseInput = this.elseInlet.input;\n          if (elseInput !== null) {\n            const elseTerm = elseInput.get();\n            if (elseTerm !== void 0) {\n              return elseTerm;\n            }\n          }\n        }\n      }\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport class OrOutlet extends AbstractOutlet<Value> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"operand1Inlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"operand2Inlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n  }\n\n  readonly operand1Inlet!: Inlet<Value>;\n\n  readonly operand2Inlet!: Inlet<Value>;\n\n  override get(): Value {\n    const operand1Input = this.operand1Inlet.input;\n    const argument1 = operand1Input !== null ? operand1Input.get() : void 0;\n    if (argument1 !== void 0 && argument1.isDefinite()) {\n      return argument1;\n    }\n    const operand2Input = this.operand2Inlet.input;\n    const argument2 = operand2Input !== null ? operand2Input.get() : void 0;\n    if (argument2 !== void 0) {\n      return argument2;\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport class AndOutlet extends AbstractOutlet<Value> {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"operand1Inlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"operand2Inlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n  }\n\n  readonly operand1Inlet!: Inlet<Value>;\n\n  readonly operand2Inlet!: Inlet<Value>;\n\n  override get(): Value {\n    const operand1Input = this.operand1Inlet.input;\n    const argument1 = operand1Input !== null ? operand1Input.get() : void 0;\n    if (argument1 !== void 0) {\n      if (argument1.isDefinite()) {\n        const operand2Input = this.operand2Inlet.input;\n        const argument2 = operand2Input !== null ? operand2Input.get() : void 0;\n        if (argument2 !== void 0) {\n          return argument2;\n        }\n      }\n      return argument1;\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class BitwiseOrOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.bitwiseOr(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class BitwiseXorOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.bitwiseXor(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class BitwiseAndOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.bitwiseAnd(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class LtOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.lt(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class LeOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.le(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class EqOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.eq(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class NeOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.ne(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class GeOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.ge(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class GtOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.gt(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class PlusOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.plus(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class MinusOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.minus(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class TimesOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.times(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class DivideOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.divide(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {BinaryOutlet} from \"./BinaryOutlet\";\n\nexport class ModuloOutlet extends BinaryOutlet {\n  protected override evaluate(argument1: Value, argument2: Value): Item {\n    return argument1.modulo(argument2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {UnaryOutlet} from \"./UnaryOutlet\";\n\nexport class NotOutlet extends UnaryOutlet {\n  protected override evaluate(argument: Value): Item {\n    return argument.not();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {UnaryOutlet} from \"./UnaryOutlet\";\n\nexport class BitwiseNotOutlet extends UnaryOutlet {\n  protected override evaluate(argument: Value): Item {\n    return argument.bitwiseNot();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {UnaryOutlet} from \"./UnaryOutlet\";\n\nexport class NegativeOutlet extends UnaryOutlet {\n  protected override evaluate(argument: Value): Item {\n    return argument.negative();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Item, Value} from \"@swim/structure\";\nimport {UnaryOutlet} from \"./UnaryOutlet\";\n\nexport class PositiveOutlet extends UnaryOutlet {\n  protected override evaluate(argument: Value): Item {\n    return argument.positive();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, Record, Func, Interpreter} from \"@swim/structure\";\nimport {Inlet, AbstractOutlet, OutletInlet} from \"@swim/streamlet\";\n\nexport class InvokeOutlet extends AbstractOutlet<Value> {\n  constructor(scope: Record) {\n    super();\n    Object.defineProperty(this, \"scope\", {\n      value: scope,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"funcInlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"argsInlet\", {\n      value: new OutletInlet<Value>(this),\n      enumerable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly scope!: Record;\n\n  readonly funcInlet!: Inlet<Value>;\n\n  readonly argsInlet!: Inlet<Value>;\n\n  override get(): Value {\n    const funcInput = this.funcInlet.input;\n    const argsInput = this.argsInlet.input;\n    if (funcInput !== null && argsInput !== null) {\n      const func = funcInput.get();\n      if (func instanceof Func) {\n        const args = argsInput.get();\n        if (args !== void 0) {\n          const interpreter = new Interpreter();\n          interpreter.pushScope(this.scope);\n          const result = func.invoke(args, interpreter, void 0 /* TODO: generalize InvokeOperator to InvokeContext */);\n          return result.toValue();\n        }\n      }\n    }\n    return Value.absent();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Value,\n  Record,\n  Selector,\n  IdentitySelector,\n  GetSelector,\n  GetAttrSelector,\n  GetItemSelector,\n  KeysSelector,\n  ValuesSelector,\n  ChildrenSelector,\n  DescendantsSelector,\n  FilterSelector,\n  Operator,\n  BinaryOperator,\n  UnaryOperator,\n  ConditionalOperator,\n  OrOperator,\n  AndOperator,\n  BitwiseOrOperator,\n  BitwiseXorOperator,\n  BitwiseAndOperator,\n  LtOperator,\n  LeOperator,\n  EqOperator,\n  NeOperator,\n  GeOperator,\n  GtOperator,\n  PlusOperator,\n  MinusOperator,\n  TimesOperator,\n  DivideOperator,\n  ModuloOperator,\n  NotOperator,\n  BitwiseNotOperator,\n  NegativeOperator,\n  PositiveOperator,\n  InvokeOperator,\n} from \"@swim/structure\";\nimport {Outlet, MapOutlet, KeyOutlet, StreamletScope, ValueInput} from \"@swim/streamlet\";\nimport {RecordOutlet} from \"./RecordOutlet\";\nimport {GetOutlet} from \"./selector/GetOutlet\";\nimport type {BinaryOutlet} from \"./operator/BinaryOutlet\";\nimport type {UnaryOutlet} from \"./operator/UnaryOutlet\";\nimport {ConditionalOutlet} from \"./operator/ConditionalOutlet\";\nimport {OrOutlet} from \"./operator/OrOutlet\";\nimport {AndOutlet} from \"./operator/AndOutlet\";\nimport {BitwiseOrOutlet} from \"./operator/BitwiseOrOutlet\";\nimport {BitwiseXorOutlet} from \"./operator/BitwiseXorOutlet\";\nimport {BitwiseAndOutlet} from \"./operator/BitwiseAndOutlet\";\nimport {LtOutlet} from \"./operator/LtOutlet\";\nimport {LeOutlet} from \"./operator/LeOutlet\";\nimport {EqOutlet} from \"./operator/EqOutlet\";\nimport {NeOutlet} from \"./operator/NeOutlet\";\nimport {GeOutlet} from \"./operator/GeOutlet\";\nimport {GtOutlet} from \"./operator/GtOutlet\";\nimport {PlusOutlet} from \"./operator/PlusOutlet\";\nimport {MinusOutlet} from \"./operator/MinusOutlet\";\nimport {TimesOutlet} from \"./operator/TimesOutlet\";\nimport {DivideOutlet} from \"./operator/DivideOutlet\";\nimport {ModuloOutlet} from \"./operator/ModuloOutlet\";\nimport {NotOutlet} from \"./operator/NotOutlet\";\nimport {BitwiseNotOutlet} from \"./operator/BitwiseNotOutlet\";\nimport {NegativeOutlet} from \"./operator/NegativeOutlet\";\nimport {PositiveOutlet} from \"./operator/PositiveOutlet\";\nimport {InvokeOutlet} from \"./operator/InvokeOutlet\";\n\nexport const Dataflow = {} as {\n  /**\n   * Returns an `Outlet` that evaluates the given `expr` in the context of the\n   * given `scope`, and updates whenever any dependent expression updates.\n   */\n  compile(expr: Value, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileSelector(selector: Selector, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileIdentitySelector(scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileGetSelector(selector: GetSelector, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileGetAttrSelector(selector: GetAttrSelector, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileGetItemSelector(selector: GetItemSelector, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileKeysSelector(scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileValuesSelector(scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileChildrenSelector(scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileDescendantsSelector(scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileFilterSelector(selector: FilterSelector, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileOperator(operator: Operator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileConditionalOperator(operator: ConditionalOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileBinaryOperator(operator: BinaryOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileBinaryOutlet(operator: BinaryOperator, outlet: BinaryOutlet, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileOrOperator(operator: OrOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileAndOperator(operator: AndOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileBitwiseOrOperator(operator: BitwiseOrOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileBitwiseXorOperator(operator: BitwiseXorOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileBitwiseAndOperator(operator: BitwiseAndOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileLtOperator(operator: LtOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileLeOperator(operator: LeOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileEqOperator(operator: EqOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileNeOperator(operator: NeOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileGeOperator(operator: GeOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileGtOperator(operator: GtOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compilePlusOperator(operator: PlusOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileMinusOperator(operator: MinusOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileTimesOperator(operator: TimesOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileDivideOperator(operator: DivideOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileModuloOperator(operator: ModuloOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileUnaryOperator(operator: UnaryOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileUnaryOutlet(operator: UnaryOperator, outlet: UnaryOutlet, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileNotOperator(operator: NotOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileBitwiseNotOperator(operator: BitwiseNotOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileNegativeOperator(operator: NegativeOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compilePositiveOperator(operator: PositiveOperator, scope: Outlet<Value>): Outlet<Value>;\n\n  /** @hidden */\n  compileInvokeOperator(operator: InvokeOperator, scope: Outlet<Value>): Outlet<Value>;\n};\n\nDataflow.compile = function (expr: Value, scope: Outlet<Value>): Outlet<Value> {\n  if (scope instanceof KeyOutlet) {\n    const value = scope.get();\n    if (Outlet.is<Value>(value)) {\n      scope = value;\n    }\n  }\n  if (expr.isConstant()) {\n    return new ValueInput<Value>(expr);\n  } else if (expr instanceof Selector) {\n    return Dataflow.compileSelector(expr, scope);\n  } else if (expr instanceof Operator) {\n    return Dataflow.compileOperator(expr, scope);\n  }\n  throw new TypeError(\"\" + expr);\n};\n\nDataflow.compileSelector = function (selector: Selector, scope: Outlet<Value>): Outlet<Value> {\n  if (selector instanceof IdentitySelector) {\n    return Dataflow.compileIdentitySelector(scope);\n  } else if (selector instanceof GetSelector) {\n    return Dataflow.compileGetSelector(selector, scope);\n  } else if (selector instanceof GetAttrSelector) {\n    return Dataflow.compileGetAttrSelector(selector, scope);\n  } else if (selector instanceof GetItemSelector) {\n    return Dataflow.compileGetItemSelector(selector, scope);\n  } else if (selector instanceof KeysSelector) {\n    return Dataflow.compileKeysSelector(scope);\n  } else if (selector instanceof ValuesSelector) {\n    return Dataflow.compileValuesSelector(scope);\n  } else if (selector instanceof ChildrenSelector) {\n    return Dataflow.compileChildrenSelector(scope);\n  } else if (selector instanceof DescendantsSelector) {\n    return Dataflow.compileDescendantsSelector(scope);\n  } else if (selector instanceof FilterSelector) {\n    return Dataflow.compileFilterSelector(selector, scope);\n  }\n  throw new TypeError(\"\" + selector);\n};\n\nDataflow.compileIdentitySelector = function (scope: Outlet<Value>): Outlet<Value> {\n  return scope;\n};\n\nDataflow.compileGetSelector = function (selector: GetSelector, scope: Outlet<Value>): Outlet<Value> {\n  const key = selector.item;\n  if (key.isConstant()) {\n    if (RecordOutlet.is(scope)) {\n      const outlet = scope.outlet(key);\n      if (outlet !== null) {\n        return Dataflow.compile(selector.then, outlet);\n      }\n    } else if (StreamletScope.is<Value>(scope)) {\n      const name = key.stringValue(void 0);\n      if (name !== void 0) {\n        const outlet = scope.outlet(name);\n        if (outlet !== null) {\n          return Dataflow.compile(selector.then, outlet);\n        }\n      }\n    }\n  } else {\n    const getOutlet = new GetOutlet();\n    const outlet = Dataflow.compile(key, scope);\n    getOutlet.keyInlet.bindInput(outlet);\n    getOutlet.mapInlet.bindInput(scope as MapOutlet<Value, Value, unknown>);\n    return getOutlet;\n  }\n  return null as unknown as Outlet<Value>;\n};\n\nDataflow.compileGetAttrSelector = function (selector: GetAttrSelector, scope: Outlet<Value>): Outlet<Value> {\n  throw new Error(); // TODO\n};\n\nDataflow.compileGetItemSelector = function (selector: GetItemSelector, scope: Outlet<Value>): Outlet<Value> {\n  throw new Error(); // TODO\n};\n\nDataflow.compileKeysSelector = function (scope: Outlet<Value>): Outlet<Value> {\n  throw new Error(); // TODO\n};\n\nDataflow.compileValuesSelector = function (scope: Outlet<Value>): Outlet<Value> {\n  throw new Error(); // TODO\n};\n\nDataflow.compileChildrenSelector = function (scope: Outlet<Value>): Outlet<Value> {\n  throw new Error(); // TODO\n};\n\nDataflow.compileDescendantsSelector = function (scope: Outlet<Value>): Outlet<Value> {\n  throw new Error(); // TODO\n};\n\nDataflow.compileFilterSelector = function (selector: FilterSelector, scope: Outlet<Value>): Outlet<Value> {\n  throw new Error(); // TODO\n};\n\nDataflow.compileOperator = function (operator: Operator, scope: Outlet<Value>): Outlet<Value> {\n  if (operator instanceof ConditionalOperator) {\n    return Dataflow.compileConditionalOperator(operator, scope);\n  } else if (operator instanceof BinaryOperator) {\n    return Dataflow.compileBinaryOperator(operator, scope);\n  } else if (operator instanceof UnaryOperator) {\n    return Dataflow.compileUnaryOperator(operator, scope);\n  } else if (operator instanceof InvokeOperator) {\n    return Dataflow.compileInvokeOperator(operator, scope);\n  }\n  throw new TypeError(\"\" + operator);\n};\n\nDataflow.compileConditionalOperator = function (operator: ConditionalOperator, scope: Outlet<Value>): Outlet<Value> {\n  const outlet = new ConditionalOutlet();\n  const ifTerm = operator.ifTerm.toValue();\n  const thenTerm = operator.thenTerm.toValue();\n  const elseTerm = operator.elseTerm.toValue();\n  const ifOutlet = Dataflow.compile(ifTerm, scope);\n  const thenOutlet = Dataflow.compile(thenTerm, scope);\n  const elseOutlet = Dataflow.compile(elseTerm, scope);\n  outlet.ifInlet.bindInput(ifOutlet);\n  outlet.thenInlet.bindInput(thenOutlet);\n  outlet.elseInlet.bindInput(elseOutlet);\n  return outlet;\n};\n\nDataflow.compileBinaryOperator = function (operator: BinaryOperator, scope: Outlet<Value>): Outlet<Value> {\n  if (operator instanceof OrOperator) {\n    return Dataflow.compileOrOperator(operator, scope);\n  } else if (operator instanceof AndOperator) {\n    return Dataflow.compileAndOperator(operator, scope);\n  } else if (operator instanceof BitwiseOrOperator) {\n    return Dataflow.compileBitwiseOrOperator(operator, scope);\n  } else if (operator instanceof BitwiseXorOperator) {\n    return Dataflow.compileBitwiseXorOperator(operator, scope);\n  } else if (operator instanceof BitwiseAndOperator) {\n    return Dataflow.compileBitwiseAndOperator(operator, scope);\n  } else if (operator instanceof LtOperator) {\n    return Dataflow.compileLtOperator(operator, scope);\n  } else if (operator instanceof LeOperator) {\n    return Dataflow.compileLeOperator(operator, scope);\n  } else if (operator instanceof EqOperator) {\n    return Dataflow.compileEqOperator(operator, scope);\n  } else if (operator instanceof NeOperator) {\n    return Dataflow.compileNeOperator(operator, scope);\n  } else if (operator instanceof GeOperator) {\n    return Dataflow.compileGeOperator(operator, scope);\n  } else if (operator instanceof GtOperator) {\n    return Dataflow.compileGtOperator(operator, scope);\n  } else if (operator instanceof PlusOperator) {\n    return Dataflow.compilePlusOperator(operator, scope);\n  } else if (operator instanceof MinusOperator) {\n    return Dataflow.compileMinusOperator(operator, scope);\n  } else if (operator instanceof TimesOperator) {\n    return Dataflow.compileTimesOperator(operator, scope);\n  } else if (operator instanceof DivideOperator) {\n    return Dataflow.compileDivideOperator(operator, scope);\n  } else if (operator instanceof ModuloOperator) {\n    return Dataflow.compileModuloOperator(operator, scope);\n  }\n  throw new TypeError(\"\" + operator);\n};\n\nDataflow.compileBinaryOutlet = function (operator: BinaryOperator, outlet: BinaryOutlet, scope: Outlet<Value>): Outlet<Value> {\n  const operand1 = operator.operand1.toValue();\n  const operand2 = operator.operand2.toValue();\n  const operand1Outlet = Dataflow.compile(operand1, scope);\n  const operand2Outlet = Dataflow.compile(operand2, scope);\n  outlet.operand1Inlet.bindInput(operand1Outlet);\n  outlet.operand2Inlet.bindInput(operand2Outlet);\n  return outlet;\n};\n\nDataflow.compileOrOperator = function (operator: OrOperator, scope: Outlet<Value>): Outlet<Value> {\n  const outlet = new OrOutlet();\n  const operand1 = operator.operand1.toValue();\n  const operand2 = operator.operand2.toValue();\n  const operand1Outlet = Dataflow.compile(operand1, scope);\n  const operand2Outlet = Dataflow.compile(operand2, scope);\n  outlet.operand1Inlet.bindInput(operand1Outlet);\n  outlet.operand2Inlet.bindInput(operand2Outlet);\n  return outlet;\n};\n\nDataflow.compileAndOperator = function (operator: AndOperator, scope: Outlet<Value>): Outlet<Value> {\n  const outlet = new AndOutlet();\n  const operand1 = operator.operand1.toValue();\n  const operand2 = operator.operand2.toValue();\n  const operand1Outlet = Dataflow.compile(operand1, scope);\n  const operand2Outlet = Dataflow.compile(operand2, scope);\n  outlet.operand1Inlet.bindInput(operand1Outlet);\n  outlet.operand2Inlet.bindInput(operand2Outlet);\n  return outlet;\n};\n\nDataflow.compileBitwiseOrOperator = function (operator: BitwiseOrOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new BitwiseOrOutlet(), scope);\n};\n\nDataflow.compileBitwiseXorOperator = function (operator: BitwiseXorOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new BitwiseXorOutlet(), scope);\n};\n\nDataflow.compileBitwiseAndOperator = function (operator: BitwiseAndOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new BitwiseAndOutlet(), scope);\n};\n\nDataflow.compileLtOperator = function (operator: LtOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new LtOutlet(), scope);\n};\n\nDataflow.compileLeOperator = function (operator: LeOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new LeOutlet(), scope);\n};\n\nDataflow.compileEqOperator = function (operator: EqOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new EqOutlet(), scope);\n};\n\nDataflow.compileNeOperator = function (operator: NeOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new NeOutlet(), scope);\n};\n\nDataflow.compileGeOperator = function (operator: GeOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new GeOutlet(), scope);\n};\n\nDataflow.compileGtOperator = function (operator: GtOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new GtOutlet(), scope);\n};\n\nDataflow.compilePlusOperator = function (operator: PlusOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new PlusOutlet(), scope);\n};\n\nDataflow.compileMinusOperator = function (operator: MinusOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new MinusOutlet(), scope);\n};\n\nDataflow.compileTimesOperator = function (operator: TimesOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new TimesOutlet(), scope);\n};\n\nDataflow.compileDivideOperator = function (operator: DivideOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new DivideOutlet(), scope);\n};\n\nDataflow.compileModuloOperator = function (operator: ModuloOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileBinaryOutlet(operator, new ModuloOutlet(), scope);\n};\n\nDataflow.compileUnaryOperator = function (operator: UnaryOperator, scope: Outlet<Value>): Outlet<Value> {\n  if (operator instanceof NotOperator) {\n    return Dataflow.compileNotOperator(operator, scope);\n  } else if (operator instanceof BitwiseNotOperator) {\n    return Dataflow.compileBitwiseNotOperator(operator, scope);\n  } else if (operator instanceof NegativeOperator) {\n    return Dataflow.compileNegativeOperator(operator, scope);\n  } else if (operator instanceof PositiveOperator) {\n    return Dataflow.compilePositiveOperator(operator, scope);\n  }\n  throw new TypeError(\"\" + operator);\n};\n\nDataflow.compileUnaryOutlet = function (operator: UnaryOperator, outlet: UnaryOutlet, scope: Outlet<Value>): Outlet<Value> {\n  const operand = operator.operand.toValue();\n  const operandOutlet = Dataflow.compile(operand, scope);\n  outlet.operandInlet.bindInput(operandOutlet);\n  return outlet;\n};\n\nDataflow.compileNotOperator = function (operator: NotOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileUnaryOutlet(operator, new NotOutlet(), scope);\n};\n\nDataflow.compileBitwiseNotOperator = function (operator: BitwiseNotOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileUnaryOutlet(operator, new BitwiseNotOutlet(), scope);\n};\n\nDataflow.compileNegativeOperator = function (operator: NegativeOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileUnaryOutlet(operator, new NegativeOutlet(), scope);\n};\n\nDataflow.compilePositiveOperator = function (operator: PositiveOperator, scope: Outlet<Value>): Outlet<Value> {\n  return Dataflow.compileUnaryOutlet(operator, new PositiveOutlet(), scope);\n};\n\nDataflow.compileInvokeOperator = function (operator: InvokeOperator, scope: Outlet<Value>): Outlet<Value> {\n  const func = operator.func;\n  const args = operator.args;\n  const invokeOutlet = new InvokeOutlet(scope as unknown as Record);\n  const funcOutlet = Dataflow.compile(func, scope);\n  const argsOutlet = Dataflow.compile(args, scope);\n  invokeOutlet.funcInlet.bindInput(funcOutlet);\n  invokeOutlet.argsInlet.bindInput(argsOutlet);\n  return invokeOutlet;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Parser, Writer, Unicode, Utf8} from \"@swim/codec\";\nimport {Item, Value, Data} from \"@swim/structure\";\nimport type {ReconParser} from \"./parser/ReconParser\";\nimport {ReconStructureParser} from \"./\"; // forward import\nimport type {ReconWriter} from \"./writer/ReconWriter\";\nimport {ReconStructureWriter} from \"./\"; // forward import\n\n/**\n * Factory for constructing Recon parsers and writers.\n */\nexport const Recon = {} as {\n  structureParser(): ReconParser<Item, Value>;\n\n  structureWriter(): ReconWriter<Item, Value>;\n\n  parse(recon: string): Value;\n\n  parser(): Parser<Value>;\n\n  sizeOf(item: Item): number;\n\n  sizeOfBlock(item: Item): number;\n\n  write(item: Item, output: Output): Writer;\n\n  writeBlock(item: Item, output: Output): Writer;\n\n  toString(item: Item): string;\n\n  toBlockString(item: Item): string;\n\n  toData(item: Item): Data;\n\n  toBlockData(item: Item): Data;\n\n  /** @hidden */\n  isSpace(c: number): boolean;\n\n  /** @hidden */\n  isNewline(c: number): boolean;\n\n  /** @hidden */\n  isWhitespace(c: number): boolean;\n\n  /** @hidden */\n  isIdentStartChar(c: number): boolean;\n\n  /** @hidden */\n  isIdentChar(c: number): boolean;\n};\n\nObject.defineProperty(Recon, \"structureParser\", {\n  value: function (): ReconStructureParser {\n    const structureParser = new ReconStructureParser();\n    Object.defineProperty(Recon, \"structureParser\", {\n      value: function(): ReconStructureParser {\n        return structureParser;\n      },\n      enumerable: true,\n      configurable: true,\n    });\n    return structureParser;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(Recon, \"structureWriter\", {\n  value: function(): ReconStructureWriter {\n    const structureWriter = new ReconStructureWriter();\n    Object.defineProperty(Recon, \"structureWriter\", {\n      value: function (): ReconStructureWriter {\n        return structureWriter;\n      },\n      enumerable: true,\n      configurable: true,\n    });\n    return structureWriter;\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nRecon.parse = function (recon: string): Value {\n  return Recon.structureParser().parseBlockString(recon);\n};\n\nRecon.parser = function (): Parser<Value> {\n  return Recon.structureParser().blockParser();\n};\n\nRecon.sizeOf = function (item: Item): number {\n  return Recon.structureWriter().sizeOfItem(item);\n};\n\nRecon.sizeOfBlock = function (item: Item): number {\n  return Recon.structureWriter().sizeOfBlockItem(item);\n};\n\nRecon.write = function (item: Item, output: Output): Writer {\n  return Recon.structureWriter().writeItem(item, output);\n};\n\nRecon.writeBlock = function (item: Item, output: Output): Writer {\n  return Recon.structureWriter().writeBlockItem(item, output);\n};\n\nRecon.toString = function (item: Item): string {\n  const output = Unicode.stringOutput();\n  Recon.write(item, output);\n  return output.bind();\n};\n\nRecon.toBlockString = function (item: Item): string {\n  const output = Unicode.stringOutput();\n  Recon.writeBlock(item, output);\n  return output.bind();\n};\n\nRecon.toData = function (item: Item): Data {\n  const output = Utf8.encodedOutput(Data.output());\n  Recon.write(item, output);\n  return output.bind();\n};\n\nRecon.toBlockData = function (item: Item): Data {\n  const output = Utf8.encodedOutput(Data.output());\n  Recon.writeBlock(item, output);\n  return output.bind();\n};\n\nRecon.isSpace = function (c: number): boolean {\n  return c === 0x20 || c === 0x9;\n};\n\nRecon.isNewline = function (c: number): boolean {\n  return c === 0xa || c === 0xd;\n};\n\nRecon.isWhitespace = function (c: number): boolean {\n  return Recon.isSpace(c) || Recon.isNewline(c);\n};\n\nRecon.isIdentStartChar = function (c: number): boolean {\n  return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n      || c === 95/*'_'*/\n      || c >= 97/*'a'*/ && c <= 122/*'z'*/\n      || c >= 0xc0 && c <= 0xd6\n      || c >= 0xd8 && c <= 0xf6\n      || c >= 0xf8 && c <= 0x2ff\n      || c >= 0x370 && c <= 0x37d\n      || c >= 0x37f && c <= 0x1fff\n      || c >= 0x200c && c <= 0x200d\n      || c >= 0x2070 && c <= 0x218f\n      || c >= 0x2c00 && c <= 0x2fef\n      || c >= 0x3001 && c <= 0xd7ff\n      || c >= 0xf900 && c <= 0xfdcf\n      || c >= 0xfdf0 && c <= 0xfffd\n      || c >= 0x10000 && c <= 0xeffff;\n};\n\nRecon.isIdentChar = function (c: number): boolean {\n  return c === 45/*'-'*/\n      || c >= 48/*'0'*/ && c <= 57/*'9'*/\n      || c >= 65/*'A'*/ && c <= 90/*'Z'*/\n      || c === 95/*'_'*/\n      || c >= 97/*'a'*/ && c <= 122/*'z'*/\n      || c === 0xb7\n      || c >= 0xc0 && c <= 0xd6\n      || c >= 0xd8 && c <= 0xf6\n      || c >= 0xf8 && c <= 0x37d\n      || c >= 0x37f && c <= 0x1fff\n      || c >= 0x200c && c <= 0x200d\n      || c >= 0x203f && c <= 0x2040\n      || c >= 0x2070 && c <= 0x218f\n      || c >= 0x2c00 && c <= 0x2fef\n      || c >= 0x3001 && c <= 0xd7ff\n      || c >= 0xf900 && c <= 0xfdcf\n      || c >= 0xfdf0 && c <= 0xfffd\n      || c >= 0x10000 && c <= 0xeffff;\n};\n\nItem.prototype.toRecon = function (this: Item): string {\n  return Recon.toString(this);\n};\n\nItem.prototype.toReconBlock = function (this: Item): string {\n  return Recon.toBlockString(this);\n};\n\nValue.parseRecon = function (recon: string): Value {\n  return Recon.parse(recon);\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BlockParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly keyParser: Parser<V> | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, keyParser?: Parser<V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.keyParser = keyParser;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return BlockParser.parse(input, this.recon, this.builder, this.keyParser,\n                             this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     keyParser?: Parser<V>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    block: do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 33/*'!'*/ || c === 34/*'\"'*/ || c === 36/*'$'*/ || c === 37/*'%'*/\n              || c === 39/*'\\''*/ || c === 40/*'('*/ || c === 43/*'+'*/ || c === 45/*'-'*/\n              || c >= 48/*'0'*/ && c <= 57/*'9'*/ || c === 64/*'@'*/\n              || c === 91/*'['*/ || c === 96/*'`'*/ || c === 123/*'{'*/ || c === 126/*'~'*/\n              || Recon.isIdentStartChar(c)) {\n            builder = builder || recon.valueBuilder();\n            step = 2;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 7;\n          } else {\n            if (builder !== void 0) {\n              return Parser.done(builder.bind());\n            } else {\n              return Parser.done(recon.absent());\n            }\n          }\n        } else if (input.isDone()) {\n          if (builder !== void 0) {\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(recon.absent());\n          }\n        }\n      }\n      if (step === 2) {\n        if (keyParser === void 0) {\n          keyParser = recon.parseBlockExpression(input);\n        }\n        while (keyParser.isCont() && !input.isEmpty()) {\n          keyParser = keyParser.feed(input);\n        }\n        if (keyParser.isDone()) {\n          step = 3;\n        } else if (keyParser.isError()) {\n          return keyParser;\n        }\n      }\n      if (step === 3) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 58/*':'*/) {\n            input = input.step();\n            step = 4;\n          } else {\n            builder!.push(recon.item(keyParser!.bind()));\n            keyParser = void 0;\n            step = 6;\n          }\n        } else if (input.isDone()) {\n          builder!.push(recon.item(keyParser!.bind()));\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 4) {\n        while (input.isCont() && Recon.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          step = 5;\n        } else if (input.isDone()) {\n          builder!.push(recon.slot(keyParser!.bind()));\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 5) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseBlockExpression(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          builder!.push(recon.slot(keyParser!.bind(), valueParser.bind()));\n          keyParser = void 0;\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser.isError()) {\n          return valueParser;\n        }\n      }\n      if (step === 6) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 44/*','*/ || c === 59/*';'*/ || Recon.isNewline(c)) {\n            input = input.step();\n            step = 1;\n            continue;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 7;\n          } else {\n            return Parser.done(builder!.bind());\n          }\n        } else if (input.isDone()) {\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 7) {\n        while (input.isCont()) {\n          c = input.head();\n          if (!Recon.isNewline(c)) {\n            input = input.step();\n          } else {\n            step = 1;\n            continue block;\n          }\n        }\n        if (input.isDone()) {\n          step = 1;\n          continue;\n        }\n      }\n      break;\n    } while (true);\n    return new BlockParser<I, V>(recon, builder, keyParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class AttrParser<I, V> extends Parser<I> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly keyParser: Parser<V> | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, keyParser?: Parser<V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.keyParser = keyParser;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<I> {\n    return AttrParser.parse(input, this.recon, this.keyParser,\n                            this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, keyParser?: Parser<V>,\n                     valueParser?: Parser<V>, step: number = 1): Parser<I> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 64/*'@'*/) {\n          input = input.step();\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(64/*'@'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(64/*'@'*/, input));\n      }\n    }\n    if (step === 2) {\n      if (keyParser === void 0) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n            keyParser = recon.parseString(input);\n          } else if (Recon.isIdentStartChar(c)) {\n            keyParser = recon.parseIdent(input);\n          } else {\n            return Parser.error(Diagnostic.expected(\"attribute name\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"attribute name\", input));\n        }\n      } else {\n        keyParser = keyParser.feed(input);\n      }\n      if (keyParser !== void 0) {\n        if (keyParser.isDone()) {\n          step = 3;\n        } else if (keyParser.isError()) {\n          return keyParser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      if (input.isCont() && input.head() === 40/*'('*/) {\n        input = input.step();\n        step = 4;\n      } else if (!input.isEmpty()) {\n        return Parser.done(recon.attr(keyParser!.bind()));\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          return Parser.done(recon.attr(keyParser!.bind()));\n        } else {\n          step = 5;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    if (step === 5) {\n      if (valueParser === void 0) {\n        valueParser = recon.parseBlock(input);\n      }\n      while (valueParser.isCont() && !input.isEmpty()) {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 6;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 6) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          return Parser.done(recon.attr(keyParser!.bind(), valueParser!.bind()));\n        } else {\n          return Parser.error(Diagnostic.expected(\")\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new AttrParser<I, V>(recon, keyParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BlockItemParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly fieldParser: Parser<I> | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, fieldParser?: Parser<I>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.fieldParser = fieldParser;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return BlockItemParser.parse(input, this.recon, this.builder, this.fieldParser,\n                                 this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     fieldParser?: Parser<I>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 64/*'@'*/) {\n            fieldParser = recon.parseAttr(input);\n            step = 2;\n          } else if (c === 123/*'{'*/) {\n            builder = builder || recon.recordBuilder();\n            valueParser = recon.parseRecord(input, builder);\n            step = 5;\n          } else if (c === 91/*'['*/) {\n            builder = builder || recon.recordBuilder();\n            valueParser = recon.parseMarkup(input, builder);\n            step = 5;\n          } else if (Recon.isIdentStartChar(c)) {\n            valueParser = recon.parseIdent(input);\n            step = 4;\n          } else if (c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n            valueParser = recon.parseString(input);\n            step = 4;\n          } else if (c === 96/*'`'*/) {\n            valueParser = recon.parseRawString(input);\n            step = 4;\n          } else if (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n            valueParser = recon.parseNumber(input);\n            step = 4;\n          } else if (c === 37/*'%'*/) {\n            valueParser = recon.parseData(input);\n            step = 4;\n          } else if (c === 36/*'$'*/) {\n            valueParser = recon.parseSelector(input);\n            step = 4;\n          } else if (builder === void 0) {\n            return Parser.done(recon.extant());\n          } else {\n            return Parser.done(builder.bind());\n          }\n        } else if (input.isDone()) {\n          if (builder === void 0) {\n            return Parser.done(recon.extant());\n          } else {\n            return Parser.done(builder.bind());\n          }\n        }\n      }\n      if (step === 2) {\n        while (fieldParser!.isCont() && !input.isEmpty()) {\n          fieldParser = fieldParser!.feed(input);\n        }\n        if (fieldParser!.isDone()) {\n          builder = builder || recon.valueBuilder();\n          builder.push(fieldParser!.bind());\n          fieldParser = void 0;\n          step = 3;\n        } else if (fieldParser!.isError()) {\n          return fieldParser!.asError();\n        }\n      }\n      if (step === 3) {\n        while (input.isCont() && Recon.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          step = 1;\n          continue;\n        } else if (input.isDone()) {\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 4) {\n        while (valueParser!.isCont() && !input.isEmpty()) {\n          valueParser = valueParser!.feed(input);\n        }\n        if (valueParser!.isDone()) {\n          builder = builder || recon.valueBuilder();\n          builder.push(recon.item(valueParser!.bind()));\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser!.isError()) {\n          return valueParser!;\n        }\n      }\n      if (step === 5) {\n        while (valueParser!.isCont() && !input.isEmpty()) {\n          valueParser = valueParser!.feed(input);\n        }\n        if (valueParser!.isDone()) {\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser!.isError()) {\n          return valueParser!;\n        }\n      }\n      if (step === 6) {\n        while (input.isCont() && Recon.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (input.head() === 64/*'@'*/) {\n            step = 1;\n          } else {\n            return Parser.done(builder!.bind());\n          }\n        } else if (input.isDone()) {\n          return Parser.done(builder!.bind());\n        }\n      }\n      break;\n    } while (true);\n    return new BlockItemParser<I, V>(recon, builder, fieldParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class InlineItemParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly fieldParser: Parser<I> | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, fieldParser?: Parser<I>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.fieldParser = fieldParser;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return InlineItemParser.parse(input, this.recon, this.builder, this.fieldParser,\n                                  this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     fieldParser?: Parser<I>,  valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 64/*'@'*/) {\n          fieldParser = recon.parseAttr(input);\n          step = 2;\n        } else if (c === 123/*'{'*/) {\n          if (builder !== void 0) {\n            valueParser = recon.parseRecord(input, builder);\n            step = 5;\n          } else {\n            valueParser = recon.parseRecord(input);\n            step = 4;\n          }\n        } else if (c === 91/*'['*/) {\n          if (builder !== void 0) {\n            valueParser = recon.parseMarkup(input, builder);\n            step = 5;\n          } else {\n            valueParser = recon.parseMarkup(input);\n            step = 4;\n          }\n        } else if (builder === void 0) {\n          return Parser.done(recon.extant());\n        } else {\n          return Parser.done(builder.bind());\n        }\n      } else if (input.isDone()) {\n        if (builder === void 0) {\n          return Parser.done(recon.extant());\n        } else {\n          return Parser.done(builder.bind());\n        }\n      }\n    }\n    if (step === 2) {\n      while (fieldParser!.isCont() && !input.isEmpty()) {\n        fieldParser = fieldParser!.feed(input);\n      }\n      if (fieldParser!.isDone()) {\n        builder = builder || recon.valueBuilder();\n        builder.push(fieldParser!.bind());\n        fieldParser = void 0;\n        step = 3;\n      } else if (fieldParser!.isError()) {\n        return fieldParser!.asError();\n      }\n    }\n    if (step === 3) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 123/*'{'*/) {\n          valueParser = recon.parseRecord(input, builder);\n          step = 5;\n        } else if (c === 91/*'['*/) {\n          valueParser = recon.parseMarkup(input, builder);\n          step = 5;\n        } else {\n          return Parser.done(builder!.bind());\n        }\n      } else if (input.isDone()) {\n        return Parser.done(builder!.bind());\n      }\n    }\n    if (step === 4) {\n      while (valueParser!.isCont() && !input.isEmpty()) {\n        valueParser = valueParser!.feed(input);\n      }\n      if (valueParser!.isDone()) {\n        builder = builder || recon.valueBuilder();\n        builder.push(recon.item(valueParser!.bind()));\n        return Parser.done(builder.bind());\n      } else if (valueParser!.isError()) {\n        return valueParser!;\n      }\n    }\n    if (step === 5) {\n      while (valueParser!.isCont() && !input.isEmpty()) {\n        valueParser = valueParser!.feed(input);\n      }\n      if (valueParser!.isDone()) {\n        return Parser.done(builder!.bind());\n      } else if (valueParser!.isError()) {\n        return valueParser!;\n      }\n    }\n    return new InlineItemParser<I, V>(recon, builder, fieldParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class RecordParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly keyParser: Parser<V> | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, keyParser?: Parser<V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.keyParser = keyParser;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return RecordParser.parse(input, this.recon, this.builder, this.keyParser,\n                              this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     keyParser?: Parser<V>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 123/*'{'*/) {\n          input = input.step();\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(123/*'{'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(123/*'{'*/, input));\n      }\n    }\n    block: do {\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          builder = builder || recon.recordBuilder();\n          if (c === 125/*'}'*/) {\n            input = input.step();\n            return Parser.done(builder.bind());\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 8;\n          } else {\n            step = 3;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(125/*'}'*/, input));\n        }\n      }\n      if (step === 3) {\n        if (keyParser === void 0) {\n          keyParser = recon.parseBlockExpression(input);\n        }\n        while (keyParser.isCont() && !input.isEmpty()) {\n          keyParser = keyParser.feed(input);\n        }\n        if (keyParser.isDone()) {\n          step = 4;\n        } else if (keyParser.isError()) {\n          return keyParser;\n        }\n      }\n      if (step === 4) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 58/*':'*/) {\n            input = input.step();\n            step = 5;\n          } else {\n            builder!.push(recon.item(keyParser!.bind()));\n            keyParser = void 0;\n            step = 7;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(125/*'}'*/, input));\n        }\n      }\n      if (step === 5) {\n        while (input.isCont() && Recon.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          step = 6;\n        } else if (input.isDone()) {\n          builder!.push(recon.slot(keyParser!.bind()));\n          return Parser.done(builder!.bind());\n        }\n      }\n      if (step === 6) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseBlockExpression(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          builder!.push(recon.slot(keyParser!.bind(), valueParser.bind()));\n          keyParser = void 0;\n          valueParser = void 0;\n          step = 7;\n        } else if (valueParser.isError()) {\n          return valueParser;\n        }\n      }\n      if (step === 7) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 44/*','*/ || c === 59/*';'*/ || Recon.isNewline(c)) {\n            input = input.step();\n            step = 2;\n            continue;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 8;\n          } else if (c === 125/*'}'*/) {\n            input = input.step();\n            return Parser.done(builder!.bind());\n          } else {\n            return Parser.error(Diagnostic.expected(\"'}', ';', ',', or newline\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(125/*'}'*/, input));\n        }\n      }\n      if (step === 8) {\n        while (input.isCont()) {\n          c = input.head();\n          if (!Recon.isNewline(c)) {\n            input = input.step();\n          } else {\n            step = 2;\n            continue block;\n          }\n        }\n        if (input.isDone()) {\n          step = 2;\n          continue;\n        }\n      }\n      break;\n    } while (true);\n    return new RecordParser<I, V>(recon, builder, keyParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class MarkupParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly textOutput: Output<V> | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, textOutput?: Output<V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.textOutput = textOutput;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return MarkupParser.parse(input, this.recon, this.builder, this.textOutput,\n                              this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     textOutput?: Output<V>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 91/*'['*/) {\n          input = input.step();\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(91/*'['*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(91/*'['*/, input));\n      }\n    }\n    do {\n      if (step === 2) {\n        while (input.isCont()) {\n          c = input.head();\n          if (c !== 64/*'@'*/ && c !== 91/*'['*/ && c !== 92/*'\\\\'*/ && c !== 93/*']'*/\n              && c !== 123/*'{'*/ && c !== 125/*'}'*/) {\n            input = input.step();\n            textOutput = textOutput || recon.textOutput();\n            textOutput.write(c);\n          } else {\n            break;\n          }\n        }\n        if (input.isCont()) {\n          if (c === 93/*']'*/) {\n            input = input.step();\n            builder = builder || recon.recordBuilder();\n            if (textOutput !== void 0) {\n              builder.push(recon.item(textOutput.bind()));\n            }\n            return Parser.done(builder.bind());\n          } else if (c === 64/*'@'*/) {\n            builder = builder || recon.recordBuilder();\n            if (textOutput !== void 0) {\n              builder.push(recon.item(textOutput.bind()));\n              textOutput = void 0;\n            }\n            valueParser = recon.parseInlineItem(input);\n            step = 3;\n          } else if (c === 123/*'{'*/) {\n            builder = builder || recon.recordBuilder();\n            if (textOutput !== void 0) {\n              builder.push(recon.item(textOutput.bind()));\n              textOutput = void 0;\n            }\n            valueParser = recon.parseRecord(input, builder);\n            step = 4;\n          } else if (c === 91/*'['*/) {\n            builder = builder || recon.recordBuilder();\n            if (textOutput !== void 0) {\n              builder.push(recon.item(textOutput.bind()));\n              textOutput = void 0;\n            }\n            valueParser = recon.parseMarkup(input, builder);\n            step = 4;\n          } else if (c === 92/*'\\\\'*/) {\n            input = input.step();\n            step = 5;\n          } else {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 3) {\n        while (valueParser!.isCont() && !input.isEmpty()) {\n          valueParser = valueParser!.feed(input);\n        }\n        if (valueParser!.isDone()) {\n          builder!.push(recon.item(valueParser!.bind()));\n          valueParser = void 0;\n          step = 2;\n          continue;\n        } else if (valueParser!.isError()) {\n          return valueParser!;\n        }\n      }\n      if (step === 4) {\n        while (valueParser!.isCont() && !input.isEmpty()) {\n          valueParser = valueParser!.feed(input);\n        }\n        if (valueParser!.isDone()) {\n          valueParser = void 0;\n          step = 2;\n          continue;\n        } else if (valueParser!.isError()) {\n          return valueParser!;\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          c = input.head();\n          textOutput = textOutput || recon.textOutput();\n          if (c === 34/*'\"'*/ || c === 36/*'$'*/ || c === 39/*'\\''*/ || c === 47/*'/'*/\n              || c === 64/*'@'*/ || c === 91/*'['*/ || c === 92/*'\\\\'*/ || c === 93/*']'*/\n              || c === 123/*'{'*/ || c === 125/*'}'*/) {\n            input = input.step();\n            textOutput.write(c);\n            step = 2;\n          } else if (c === 98/*'b'*/) {\n            input = input.step();\n            textOutput.write(8/*'\\b'*/);\n            step = 2;\n          } else if (c === 102/*'f'*/) {\n            input = input.step();\n            textOutput.write(12/*'\\f'*/);\n            step = 2;\n          } else if (c === 110/*'n'*/) {\n            input = input.step();\n            textOutput.write(10/*'\\n'*/);\n            step = 2;\n          } else if (c === 114/*'r'*/) {\n            input = input.step();\n            textOutput.write(13/*'\\r'*/);\n            step = 2;\n          } else if (c === 116/*'t'*/) {\n            input = input.step();\n            textOutput.write(9/*'\\t'*/);\n            step = 2;\n          } else {\n            return Parser.error(Diagnostic.expected(\"escape character\", input));\n          }\n          continue;\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"escape character\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new MarkupParser<I, V>(recon, builder, textOutput, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Base64} from \"@swim/codec\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class DataParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly base64Parser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, base64Parser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.base64Parser = base64Parser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return DataParser.parse(input, this.recon, this.base64Parser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>,\n                     base64Parser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(37/*'%'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(37/*'%'*/, input));\n      }\n    }\n    if (step === 2) {\n      if (base64Parser === void 0) {\n        base64Parser = Base64.standard().parse(input, recon.dataOutput());\n      }\n      while (base64Parser.isCont() && !input.isEmpty()) {\n        base64Parser = base64Parser.feed(input);\n      }\n      if (base64Parser.isDone()) {\n        return base64Parser;\n      } else if (base64Parser.isError()) {\n        return base64Parser;\n      }\n    }\n    return new DataParser<I, V>(recon, base64Parser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class IdentParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly output: Output<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, output?: Output<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.output = output;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return IdentParser.parse(input, this.recon, this.output, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, output?: Output<V>,\n                     step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (Recon.isIdentStartChar(c)) {\n          input = input.step();\n          output = output || recon.textOutput();\n          output = output.write(c);\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(\"identifier\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"identifier\", input));\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Recon.isIdentChar(c))) {\n        input = input.step();\n        output!.write(c);\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(recon.ident(output!.bind()));\n      }\n    }\n    return new IdentParser<I, V>(recon, output, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class StringParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly output: Output<V> | undefined;\n  private readonly quote: number | undefined;\n  private readonly code: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, output?: Output<V>, quote?: number,\n              code?: number, step?: number) {\n    super();\n    this.recon = recon;\n    this.output = output;\n    this.quote = quote;\n    this.code = code;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return StringParser.parse(input, this.recon, this.output, this.quote,\n                              this.code, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, output?: Output<V>,\n                     quote: number = 0, code: number = 0, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if ((c === 34/*'\"'*/ || c === 39/*'\\''*/) && (quote === c || quote === 0)) {\n          input = input.step();\n          output = output || recon.textOutput();\n          quote = c;\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(\"string\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"string\", input));\n      }\n    }\n    string: do {\n      if (step === 2) {\n        while (input.isCont()) {\n          c = input.head();\n          if (c >= 0x20 && c !== quote && c !== 92/*'\\\\'*/) {\n            input = input.step();\n            output = output!.write(c);\n          } else {\n            break;\n          }\n        }\n        if (input.isCont()) {\n          if (c === quote) {\n            input = input.step();\n            return Parser.done(output!.bind());\n          } else if (c === 92/*'\\\\'*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return Parser.error(Diagnostic.expected(quote, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(quote, input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 34/*'\"'*/ || c === 36/*'$'*/ || c === 39/*'\\''*/ || c === 47/*'/'*/\n              || c === 64/*'@'*/ || c === 91/*'['*/ || c === 92/*'\\\\'*/ || c === 93/*']'*/\n              || c === 123/*'{'*/ || c === 125/*'}'*/) {\n            input = input.step();\n            output = output!.write(c);\n            step = 2;\n            continue;\n          } else if (c === 98/*'b'*/) {\n            input = input.step();\n            output = output!.write(8/*'\\b'*/);\n            step = 2;\n            continue;\n          } else if (c === 102/*'f'*/) {\n            input = input.step();\n            output = output!.write(12/*'\\f'*/);\n            step = 2;\n            continue;\n          } else if (c === 110/*'n'*/) {\n            input = input.step();\n            output = output!.write(10/*'\\n'*/);\n            step = 2;\n            continue;\n          } else if (c === 114/*'r'*/) {\n            input = input.step();\n            output = output!.write(13/*'\\r'*/);\n            step = 2;\n            continue;\n          } else if (c === 116/*'t'*/) {\n            input = input.step();\n            output = output!.write(9/*'\\t'*/);\n            step = 2;\n            continue;\n          } else if (c === 117/*'u'*/) {\n            input = input.step();\n            step = 4;\n          } else {\n            return Parser.error(Diagnostic.expected(\"escape character\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"escape character\", input));\n        }\n      }\n      if (step >= 4) {\n        do {\n          if (input.isCont()) {\n            c = input.head();\n            if (Base16.isDigit(c)) {\n              input = input.step();\n              code = 16 * code + Base16.decodeDigit(c);\n              if (step <= 6) {\n                step += 1;\n                continue;\n              } else {\n                output = output!.write(code);\n                code = 0;\n                step = 2;\n                continue string;\n              }\n            } else {\n              return Parser.error(Diagnostic.expected(\"hex digit\", input));\n            }\n          } else if (input.isDone()) {\n            return Parser.error(Diagnostic.expected(\"hex digit\", input));\n          }\n          break;\n        } while (true);\n      }\n      break;\n    } while (true);\n    return new StringParser<I, V>(recon, output, quote, code, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class RawStringParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly output: Output<V> | undefined;\n  private readonly count: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, output?: Output<V>, count?: number, step?: number) {\n    super();\n    this.recon = recon;\n    this.output = output;\n    this.count = count;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return RawStringParser.parse(input, this.recon, this.output, this.count, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, output?: Output<V>,\n                     count: number = 0, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 96/*'`'*/) {\n        input = input.step();\n        count = 1;\n        step = 2;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"raw string\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        if (input.head() === 96/*'`'*/) {\n          input = input.step();\n          count = 2;\n          step = 3;\n        } else {\n          output = output || recon.textOutput();\n          step = 4;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"raw string\", input));\n      }\n    }\n    if (step === 3) {\n      if (input.isCont()) {\n        if (input.head() === 96/*'`'*/) {\n          input = input.step();\n          output = output || recon.textOutput();\n          count = 3;\n          step = 4;\n        } else {\n          output = output || recon.textOutput();\n          return Parser.done(output!.bind());\n        }\n      } else if (input.isDone()) {\n        output = output || recon.textOutput();\n        return Parser.done(output!.bind());\n      }\n    }\n    do {\n      if (step === 4) {\n        while (input.isCont()) {\n          c = input.head();\n          if ((count !== 1 || c >= 0x20) && c !== 96/*'`'*/ && c !== 92/*'\\\\'*/) {\n            input = input.step();\n            output = output!.write(c);\n          } else {\n            break;\n          }\n        }\n        if (input.isCont()) {\n          if (c === 92/*'\\\\'*/) {\n            input = input.step();\n            step = 5;\n          } else if (c === 96/*'`'*/) {\n            input = input.step();\n            if (count === 1) {\n              return Parser.done(output!.bind());\n            } else {\n              step = 6;\n            }\n          } else {\n            return Parser.error(Diagnostic.expected(96/*'`'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(96/*'`'*/, input));\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          c = input.head();\n          input = input.step();\n          if (c !== 92/*'\\\\'*/ && c !== 96/*'`'*/) {\n            output = output!.write(92/*'\\\\'*/);\n          }\n          output = output!.write(c);\n          step = 4;\n          continue;\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"escape character\", input));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont()) {\n          if (input.head() === 96/*'`'*/) {\n            input = input.step();\n            step = 7;\n          } else {\n            output = output!.write(96/*'`'*/);\n            step = 4;\n            continue;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.message(\"unclosed raw string\", input));\n        }\n      }\n      if (step === 7) {\n        if (input.isCont()) {\n          if (input.head() === 96/*'`'*/) {\n            input = input.step();\n            return Parser.done(output!.bind());\n          } else {\n            output = output!.write(96/*'`'*/);\n            output = output!.write(96/*'`'*/);\n            step = 4;\n            continue;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.message(\"unclosed raw string\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new RawStringParser<I, V>(recon, output, count, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base16} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class NumberParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly sign: number | undefined;\n  private readonly value: number | undefined;\n  private readonly mode: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, sign?: number, value?: number, mode?: number, step?: number) {\n    super();\n    this.recon = recon;\n    this.sign = sign;\n    this.value = value;\n    this.mode = mode;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return NumberParser.parse(input, this.recon, this.sign, this.value, this.mode, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, sign: number = 1, value: number = 0,\n                     mode: number = 2, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 45/*'-'*/) {\n          input = input.step();\n          sign = -1;\n        }\n        step = 2;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"number\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 48/*'0'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          value = sign * (c - 48/*'0'*/);\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          const newValue = 10 * value + sign * (c - 48/*'0'*/);\n          if (-9007199254740991 <= newValue && newValue <= 9007199254740992) {\n            value = newValue;\n            input = input.step();\n          } else {\n            return Parser.error(Diagnostic.message(\"integer overflow\", input));\n          }\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        step = 4;\n      } else if (input.isDone()) {\n        return Parser.done(recon.num(value));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        c = input.head();\n        if (mode > 0 && c === 46/*'.'*/ || mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          let output = Unicode.stringOutput();\n          if (sign < 0 && value === 0) {\n            output = output.write(45/*'-'*/).write(48/*'0'*/);\n          } else {\n            output = output.write(\"\" + value);\n          }\n          return DecimalParser.parse(input, recon, output, mode);\n        } else if (c === 120/*'x'*/ && sign > 0 && value === 0) {\n          input = input.step();\n          return HexadecimalParser.parse(input, recon);\n        } else {\n          return Parser.done(recon.num(value));\n        }\n      } else if (input.isDone()) {\n        return Parser.done(recon.num(value));\n      }\n    }\n    return new NumberParser<I, V>(recon, sign, value, mode, step);\n  }\n\n  static parseInteger<I, V>(input: Input, recon: ReconParser<I, V>): Parser<V> {\n    return NumberParser.parse(input, recon, void 0, void 0, 0);\n  }\n\n  static parseDecimal<I, V>(input: Input, recon: ReconParser<I, V>): Parser<V> {\n    return NumberParser.parse(input, recon, void 0, void 0, 1);\n  }\n}\n\n/** @hidden */\nexport class DecimalParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly output: Output<string>;\n  private readonly mode: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, output: Output<string>, mode?: number, step?: number) {\n    super();\n    this.recon = recon;\n    this.output = output;\n    this.mode = mode;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return DecimalParser.parse(input, this.recon, this.output, this.mode, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, output: Output<string>,\n                     mode: number = 2, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 46/*'.'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 2;\n        } else if (mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          input = input.step();\n          output = output.write(c);\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        if (mode > 1) {\n          step = 4;\n        } else {\n          return Parser.done(recon.num(output.bind()));\n        }\n      } else if (input.isDone()) {\n        return Parser.done(recon.num(output.bind()));\n      }\n    }\n    if (step === 4) {\n      c = input.head();\n      if (c === 69/*'E'*/ || c === 101/*'e'*/) {\n        input = input.step();\n        output = output.write(c);\n        step = 5;\n      } else {\n        return Parser.done(recon.num(output.bind()));\n      }\n    }\n    if (step === 5) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n          input = input.step();\n          output = output.write(c);\n        }\n        step = 6;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 7;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 7) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(recon.num(output.bind()));\n      }\n    }\n    return new DecimalParser<I, V>(recon, output, mode, step);\n  }\n}\n\n/** @hidden */\nclass HexadecimalParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly value: number | undefined;\n  private readonly size: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, value?: number, size?: number) {\n    super();\n    this.recon = recon;\n    this.value = value;\n    this.size = size;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return HexadecimalParser.parse(input, this.recon, this.value, this.size);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>,\n                     value: number = 0, size: number = 0): Parser<V> {\n    let c = 0;\n    while (input.isCont()) {\n      c = input.head();\n      if (Base16.isDigit(c)) {\n        input = input.step();\n        value = 16 * value + Base16.decodeDigit(c);\n        size += 1;\n      } else {\n        break;\n      }\n    }\n    if (!input.isEmpty()) {\n      if (size > 0) {\n        if (size <= 8) {\n          return Parser.done(recon.uint32(value));\n        } else {\n          return Parser.done(recon.uint64(value));\n        }\n      } else {\n        return Parser.error(Diagnostic.expected(\"hex digit\", input));\n      }\n    }\n    return new HexadecimalParser<I, V>(recon, value, size);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class LambdaFuncParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly bindingsParser: Parser<V> | undefined;\n  private readonly templateParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, bindingsParser?: Parser<V>,\n              templateParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.bindingsParser = bindingsParser;\n    this.templateParser = templateParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return LambdaFuncParser.parse(input, this.recon, this.builder, this.bindingsParser,\n                                  this.templateParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     bindingsParser?: Parser<V>, templateParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (bindingsParser === void 0) {\n        bindingsParser = recon.parseConditionalOperator(input, builder);\n      }\n      while (bindingsParser.isCont() && !input.isEmpty()) {\n        bindingsParser = bindingsParser.feed(input);\n      }\n      if (bindingsParser.isDone()) {\n        step = 2;\n      } else if (bindingsParser.isError()) {\n        return bindingsParser.asError();\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 62/*'>'*/) {\n          // leading '=' consumed by ComparisonOperatorParser\n          input = input.step();\n          step = 3;\n        } else {\n          return bindingsParser!;\n        }\n      } else if (input.isDone()) {\n        return bindingsParser!;\n      }\n    }\n    if (step === 3) {\n      if (templateParser === void 0) {\n        templateParser = recon.parseConditionalOperator(input);\n      }\n      while (templateParser.isCont() && !input.isEmpty()) {\n        templateParser = templateParser.feed(input);\n      }\n      if (templateParser.isDone()) {\n        const bindings = bindingsParser!.bind();\n        const template = templateParser.bind();\n        return Parser.done(recon.lambda(bindings, template));\n      } else if (templateParser.isError()) {\n        return templateParser.asError();\n      }\n    }\n    return new LambdaFuncParser<I, V>(recon, builder, bindingsParser, templateParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class ConditionalOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly ifParser: Parser<V> | undefined;\n  private readonly thenParser: Parser<V> | undefined;\n  private readonly elseParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, ifParser?: Parser<V>,\n              thenParser?: Parser<V>, elseParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.ifParser = ifParser;\n    this.thenParser = thenParser;\n    this.elseParser = elseParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return ConditionalOperatorParser.parse(input, this.recon, this.builder, this.ifParser,\n                                           this.thenParser, this.elseParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     ifParser?: Parser<V>, thenParser?: Parser<V>,\n                     elseParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (ifParser === void 0) {\n        ifParser = recon.parseOrOperator(input, builder);\n      }\n      while (ifParser.isCont() && !input.isEmpty()) {\n        ifParser = ifParser.feed(input);\n      }\n      if (ifParser.isDone()) {\n        step = 2;\n      } else if (ifParser.isError()) {\n        return ifParser.asError();\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 63/*'?'*/) {\n          input = input.step();\n          step = 3;\n        } else {\n          return ifParser!;\n        }\n      } else if (input.isDone()) {\n        return ifParser!;\n      }\n    }\n    if (step === 3) {\n      if (thenParser === void 0) {\n        thenParser = recon.parseConditionalOperator(input, builder);\n      }\n      while (thenParser.isCont() && !input.isEmpty()) {\n        thenParser = thenParser.feed(input);\n      }\n      if (thenParser.isDone()) {\n        step = 4;\n      } else if (thenParser.isError()) {\n        return thenParser.asError();\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 58/*':'*/) {\n          input = input.step();\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(58/*':'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(58/*':'*/, input));\n      }\n    }\n    if (step === 5) {\n      if (elseParser === void 0) {\n        elseParser = recon.parseConditionalOperator(input, builder);\n      }\n      while (elseParser.isCont() && !input.isEmpty()) {\n        elseParser = elseParser.feed(input);\n      }\n      if (elseParser.isDone()) {\n        const ifTerm = ifParser!.bind();\n        const thenTerm = thenParser!.bind();\n        const elseTerm = elseParser.bind();\n        return Parser.done(recon.conditional(ifTerm, thenTerm, elseTerm));\n      } else if (elseParser.isError()) {\n        return elseParser.asError();\n      }\n    }\n    return new ConditionalOperatorParser<I, V>(recon, builder, ifParser, thenParser, elseParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class OrOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly lhsParser: Parser<V> | undefined;\n  private readonly rhsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.lhsParser = lhsParser;\n    this.rhsParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return OrOperatorParser.parse(input, this.recon, this.builder, this.lhsParser,\n                                  this.rhsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseAndOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 124/*'|'*/) {\n            // first '|' consumed by BitwiseOrOperatorParser\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseAndOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.or(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new OrOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class AndOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly lhsParser: Parser<V> | undefined;\n  private readonly rhsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.lhsParser = lhsParser;\n    this.rhsParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return AndOperatorParser.parse(input, this.recon, this.builder, this.lhsParser,\n                                   this.rhsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseBitwiseOrOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 38/*'&'*/) {\n            // first '&' consumed by BitwiseAndOperatorParser\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseBitwiseOrOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.and(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new AndOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BitwiseOrOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly lhsParser: Parser<V> | undefined;\n  private readonly rhsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.lhsParser = lhsParser;\n    this.rhsParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return BitwiseOrOperatorParser.parse(input, this.recon, this.builder,\n                                         this.lhsParser, this.rhsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseBitwiseXorOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 124/*'|'*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 124/*'|'*/) {\n            return lhsParser!;\n          } else {\n            step = 4;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 4) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseBitwiseXorOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.bitwiseOr(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new BitwiseOrOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BitwiseXorOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly lhsParser: Parser<V> | undefined;\n  private readonly rhsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.lhsParser = lhsParser;\n    this.rhsParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return BitwiseXorOperatorParser.parse(input, this.recon, this.builder,\n                                          this.lhsParser, this.rhsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseBitwiseAndOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 94/*'^'*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseBitwiseAndOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.bitwiseXor(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new BitwiseXorOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class BitwiseAndOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly lhsParser: Parser<V> | undefined;\n  private readonly rhsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              lhsParser?: Parser<V>, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.lhsParser = lhsParser;\n    this.rhsParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return BitwiseAndOperatorParser.parse(input, this.recon, this.builder,\n                                          this.lhsParser, this.rhsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     lhsParser?: Parser<V>, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseComparisonOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 38/*'&'*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 38/*'&'*/) {\n            return lhsParser!;\n          } else {\n            step = 4;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 4) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseComparisonOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          lhsParser = Parser.done(recon.bitwiseAnd(lhs, rhs));\n          rhsParser = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new BitwiseAndOperatorParser<I, V>(recon, builder, lhsParser, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class ComparisonOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly lhsParser: Parser<V> | undefined;\n  private readonly operator: string | undefined;\n  private readonly rhsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n              operator?: string, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.lhsParser = lhsParser;\n    this.operator = operator;\n    this.rhsParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return ComparisonOperatorParser.parse(input, this.recon, this.builder, this.lhsParser,\n                                          this.operator, this.rhsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n                     operator?: string, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (lhsParser === void 0) {\n        lhsParser = recon.parseAttrExpression(input, builder);\n      }\n      while (lhsParser.isCont() && !input.isEmpty()) {\n        lhsParser = lhsParser.feed(input);\n      }\n      if (lhsParser.isDone()) {\n        step = 2;\n      } else if (lhsParser.isError()) {\n        return lhsParser.asError();\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 33/*'!'*/) {\n          input = input.step();\n          step = 3;\n        } else if (c === 60/*'<'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c === 62/*'>'*/) {\n          input = input.step();\n          step = 5;\n        } else if (c === 61/*'='*/) {\n          input = input.step();\n          step = 6;\n        } else {\n          return lhsParser!;\n        }\n      } else if (input.isDone()) {\n        return lhsParser!;\n      }\n    }\n    if (step === 3) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 61/*'='*/) {\n          input = input.step();\n          operator = \"!=\";\n          step = 7;\n        } else {\n          operator = \"!\";\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 61/*'='*/) {\n          input = input.step();\n          operator = \"<=\";\n          step = 7;\n        } else {\n          operator = \"<\";\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 61/*'='*/) {\n          input = input.step();\n          operator = \">=\";\n          step = 7;\n        } else {\n          operator = \">\";\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 61/*'='*/) {\n          input = input.step();\n          operator = \"==\";\n          step = 7;\n        } else if (c === 62/*'>'*/) {\n          return lhsParser!;\n        } else {\n          operator = \"=\";\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 7) {\n      if (rhsParser === void 0) {\n        rhsParser = recon.parseAttrExpression(input, builder);\n      }\n      while (rhsParser.isCont() && !input.isEmpty()) {\n        rhsParser = rhsParser.feed(input);\n      }\n      if (rhsParser.isDone()) {\n        const lhs = lhsParser!.bind();\n        const rhs = rhsParser.bind();\n        if (operator === \"<\") {\n          return Parser.done(recon.lt(lhs, rhs));\n        } else if (operator === \"<=\") {\n          return Parser.done(recon.le(lhs, rhs));\n        } else if (operator === \"==\") {\n          return Parser.done(recon.eq(lhs, rhs));\n        } else if (operator === \"!=\") {\n          return Parser.done(recon.ne(lhs, rhs));\n        } else if (operator === \">=\") {\n          return Parser.done(recon.ge(lhs, rhs));\n        } else if (operator === \">\") {\n          return Parser.done(recon.gt(lhs, rhs));\n        } else {\n          return Parser.error(Diagnostic.message(operator!, input));\n        }\n      } else if (rhsParser.isError()) {\n        return rhsParser.asError();\n      }\n    }\n    return new ComparisonOperatorParser<I, V>(recon, builder, lhsParser, operator, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class AttrExpressionParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly fieldParser: Parser<I> | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              fieldParser?: Parser<I>, valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.fieldParser = fieldParser;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return AttrExpressionParser.parse(input, this.recon, this.builder,\n                                      this.fieldParser, this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     fieldParser?: Parser<I>, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 64/*'@'*/) {\n            step = 2;\n          } else if (c === 123/*'{'*/ || c === 91/*'['*/) {\n            builder = builder || recon.recordBuilder();\n            step = 5;\n          } else if (c === 40/*'('*/) {\n            step = 4;\n          } else if (c === 33/*'!'*/ || c === 34/*'\"'*/ || c === 36/*'$'*/ || c === 37/*'%'*/\n                  || c === 39/*'\\''*/ || c === 43/*'+'*/ || c === 45/*'-'*/\n                  || c >= 48/*'0'*/ && c <= 57/*'9'*/ || c === 96/*'`'*/ || c === 126/*'~'*/\n                  || Recon.isIdentStartChar(c)) {\n            step = 3;\n          } else if (builder === void 0) {\n            return Parser.done(recon.extant());\n          } else {\n            return Parser.done(builder.bind());\n          }\n        } else if (input.isDone()) {\n          if (builder === void 0) {\n            return Parser.done(recon.extant());\n          } else {\n            return Parser.done(builder.bind());\n          }\n        }\n      }\n      if (step === 2) {\n        if (fieldParser === void 0) {\n          fieldParser = recon.parseAttr(input);\n        }\n        while (fieldParser.isCont() && !input.isEmpty()) {\n          fieldParser = fieldParser.feed(input);\n        }\n        if (fieldParser.isDone()) {\n          builder = builder || recon.recordBuilder();\n          builder.push(fieldParser.bind());\n          fieldParser = void 0;\n          step = 1;\n          continue;\n        } else if (fieldParser.isError()) {\n          return fieldParser.asError();\n        }\n      }\n      if (step === 3) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseAdditiveOperator(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          builder = builder || recon.valueBuilder();\n          builder.push(recon.item(valueParser.bind()));\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 4) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseAdditiveOperator(input, builder);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          if (builder === void 0) {\n            builder = recon.valueBuilder();\n            builder.push(recon.item(valueParser.bind()));\n          }\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 5) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseAdditiveOperator(input, builder);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          valueParser = void 0;\n          step = 6;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 6) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 64/*'@'*/) {\n            step = 1;\n            continue;\n          } else {\n            return Parser.done(builder!.bind());\n          }\n        } else if (input.isDone()) {\n          return Parser.done(builder!.bind());\n        }\n      }\n      break;\n    } while (true);\n    return new AttrExpressionParser<I, V>(recon, builder, fieldParser, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class AdditiveOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly lhsParser: Parser<V> | undefined;\n  private readonly operator: string | undefined;\n  private readonly rhsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n              operator?: string, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.lhsParser = lhsParser;\n    this.operator = operator;\n    this.rhsParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return AdditiveOperatorParser.parse(input, this.recon, this.builder, this.lhsParser,\n                                        this.operator, this.rhsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n                     operator?: string, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parseMultiplicativeOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 43/*'+'*/) {\n            input = input.step();\n            operator = \"+\";\n            step = 3;\n          } else if (c === 45/*'-'*/) {\n            input = input.step();\n            operator = \"-\";\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parseMultiplicativeOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          if (operator === \"+\") {\n            lhsParser = Parser.done(recon.plus(lhs, rhs));\n          } else if (operator === \"-\") {\n            lhsParser = Parser.done(recon.minus(lhs, rhs));\n          } else {\n            return Parser.error(Diagnostic.message(operator!, input));\n          }\n          rhsParser = void 0;\n          operator = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new AdditiveOperatorParser<I, V>(recon, builder, lhsParser, operator, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class MultiplicativeOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly lhsParser: Parser<V> | undefined;\n  private readonly operator: string | undefined;\n  private readonly rhsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n              operator?: string, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.lhsParser = lhsParser;\n    this.operator = operator;\n    this.rhsParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return MultiplicativeOperatorParser.parse(input, this.recon, this.builder, this.lhsParser,\n                                              this.operator, this.rhsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>, lhsParser?: Parser<V>,\n                     operator?: string, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (lhsParser === void 0) {\n          lhsParser = recon.parsePrefixOperator(input, builder);\n        }\n        while (lhsParser.isCont() && !input.isEmpty()) {\n          lhsParser = lhsParser.feed(input);\n        }\n        if (lhsParser.isDone()) {\n          step = 2;\n        } else if (lhsParser.isError()) {\n          return lhsParser.asError();\n        }\n      }\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 42/*'*'*/) {\n            input = input.step();\n            operator = \"*\";\n            step = 3;\n          } else if (c === 47/*'/'*/) {\n            input = input.step();\n            operator = \"/\";\n            step = 3;\n          } else if (c === 37/*'%'*/) {\n            input = input.step();\n            operator = \"%\";\n            step = 3;\n          } else {\n            return lhsParser!;\n          }\n        } else if (input.isDone()) {\n          return lhsParser!;\n        }\n      }\n      if (step === 3) {\n        if (rhsParser === void 0) {\n          rhsParser = recon.parsePrefixOperator(input, builder);\n        }\n        while (rhsParser.isCont() && !input.isEmpty()) {\n          rhsParser = rhsParser.feed(input);\n        }\n        if (rhsParser.isDone()) {\n          const lhs = lhsParser!.bind();\n          const rhs = rhsParser.bind();\n          if (operator === \"*\") {\n            lhsParser = Parser.done(recon.times(lhs, rhs));\n          } else if (operator === \"/\") {\n            lhsParser = Parser.done(recon.divide(lhs, rhs));\n          } else if (operator === \"%\") {\n            lhsParser = Parser.done(recon.modulo(lhs, rhs));\n          } else {\n            return Parser.error(Diagnostic.message(operator!, input));\n          }\n          rhsParser = void 0;\n          operator = void 0;\n          step = 2;\n          continue;\n        } else if (rhsParser.isError()) {\n          return rhsParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new MultiplicativeOperatorParser<I, V>(recon, builder, lhsParser, operator, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class PrefixOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly operator: string | undefined;\n  private readonly operandParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              operator?: string, rhsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.operator = operator;\n    this.operandParser = rhsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return PrefixOperatorParser.parse(input, this.recon, this.builder,\n                                      this.operator, this.operandParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     operator?: string, rhsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 33/*'!'*/) {\n          input = input.step();\n          operator = \"!\";\n        } else if (c === 126/*'~'*/) {\n          input = input.step();\n          operator = \"~\";\n        } else if (c === 45/*'-'*/) {\n          input = input.step();\n          operator = \"-\";\n        } else if (c === 43/*'+'*/) {\n          input = input.step();\n          operator = \"+\";\n        } else {\n          return recon.parseInvokeOperator(input, builder);\n        }\n        step = 2;\n      } else if (input.isDone()) {\n        return recon.parseInvokeOperator(input, builder);\n      }\n    }\n    if (step === 2) {\n      if (rhsParser === void 0) {\n        rhsParser = recon.parsePrefixOperator(input, builder);\n      }\n      while (rhsParser.isCont() && !input.isEmpty()) {\n        rhsParser = rhsParser.feed(input);\n      }\n      if (rhsParser.isDone()) {\n        const operand = rhsParser.bind();\n        if (!recon.isDistinct(operand)) {\n          return Parser.error(Diagnostic.expected(\"value\", input));\n        } else if (operator === \"!\") {\n          return Parser.done(recon.not(operand));\n        } else if (operator === \"~\") {\n          return Parser.done(recon.bitwiseNot(operand));\n        } else if (operator === \"-\") {\n          return Parser.done(recon.negative(operand));\n        } else if (operator === \"+\") {\n          return Parser.done(recon.positive(operand));\n        } else {\n          return Parser.error(Diagnostic.message(operator!, input));\n        }\n      } else if (rhsParser.isError()) {\n        return rhsParser.asError();\n      }\n    }\n    return new PrefixOperatorParser<I, V>(recon, builder, operator, rhsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class InvokeOperatorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly exprParser: Parser<V> | undefined;\n  private readonly argsParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              exprParser?: Parser<V>, argsParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.exprParser = exprParser;\n    this.argsParser = argsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return InvokeOperatorParser.parse(input, this.recon, this.builder,\n                                      this.exprParser, this.argsParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     exprParser?: Parser<V>, argsParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      if (exprParser === void 0) {\n        exprParser = recon.parsePrimary(input, builder);\n      }\n      while (exprParser.isCont() && !input.isEmpty()) {\n        exprParser = exprParser.feed(input);\n      }\n      if (exprParser.isDone()) {\n        step = 2;\n      } else if (exprParser.isError()) {\n        return exprParser.asError();\n      }\n    }\n    do {\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 40/*'('*/) {\n            input = input.step();\n            step = 3;\n          } else {\n            return exprParser!;\n          }\n        } else if (input.isDone()) {\n          return exprParser!;\n        }\n      }\n      if (step === 3) {\n        while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 41/*')'*/) {\n            input = input.step();\n            const expr = exprParser!.bind();\n            exprParser = Parser.done(recon.invoke(expr, recon.extant()));\n            step = 2;\n            continue;\n          } else {\n            step = 4;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(41/*')'*/, input));\n        }\n      }\n      if (step === 4) {\n        if (argsParser === void 0) {\n          argsParser = recon.parseBlock(input);\n        }\n        while (argsParser.isCont() && !input.isEmpty()) {\n          argsParser = argsParser.feed(input);\n        }\n        if (argsParser.isDone()) {\n          step = 5;\n        } else if (argsParser.isError()) {\n          return argsParser.asError();\n        }\n      }\n      if (step === 5) {\n        while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n        if (c === 41/*')'*/) {\n            input = input.step();\n            const expr = exprParser!.bind();\n            const args = argsParser!.bind();\n            exprParser = Parser.done(recon.invoke(expr, args));\n            argsParser = void 0;\n            step = 2;\n            continue;\n          } else {\n            return Parser.error(Diagnostic.expected(41/*')'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(41/*')'*/, input));\n        }\n      }\n      break;\n    } while (true);\n    return new InvokeOperatorParser<I, V>(recon, builder, exprParser, argsParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class PrimaryParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly exprParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              exprParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.exprParser = exprParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return PrimaryParser.parse(input, this.recon, this.builder,\n                               this.exprParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     exprParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 40/*'('*/) {\n          input = input.step();\n          step = 3;\n        } else {\n          step = 2;\n        }\n      } else if (input.isDone()) {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (exprParser === void 0) {\n        exprParser = recon.parseLiteral(input, builder);\n      }\n      while (exprParser.isCont() && !input.isEmpty()) {\n        exprParser = exprParser.feed(input);\n      }\n      if (exprParser.isDone()) {\n        return exprParser;\n      } else if (exprParser.isError()) {\n        return exprParser.asError();\n      }\n    }\n    if (step === 3) {\n      if (exprParser === void 0) {\n        exprParser = recon.parseBlockExpression(input, builder);\n      }\n      while (exprParser.isCont() && !input.isEmpty()) {\n        exprParser = exprParser.feed(input);\n      }\n      if (exprParser.isDone()) {\n        step = 4;\n      } else if (exprParser.isError()) {\n        return exprParser.asError();\n      }\n    }\n    do {\n      if (step === 4) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 44/*','*/) {\n            input = input.step();\n            if (exprParser !== void 0) {\n              if (builder === void 0) {\n                builder = recon.recordBuilder();\n                builder.push(recon.item(exprParser.bind()));\n              }\n              exprParser = void 0;\n            }\n            step = 5;\n          } else if (c === 41/*')'*/) {\n            input = input.step();\n            if (exprParser !== void 0) {\n              return exprParser;\n            } else {\n              return Parser.done(builder!.bind());\n            }\n          } else {\n            return Parser.error(Diagnostic.expected(41/*')'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(41/*')'*/, input));\n        }\n      }\n      if (step === 5) {\n        if (exprParser === void 0) {\n          exprParser = recon.parseBlockExpression(input, builder);\n        }\n        while (exprParser.isCont() && !input.isEmpty()) {\n          exprParser = exprParser.feed(input);\n        }\n        if (exprParser.isDone()) {\n          exprParser = void 0;\n          step = 4;\n          continue;\n        } else if (exprParser.isError()) {\n          return exprParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new PrimaryParser<I, V>(recon, builder, exprParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class LiteralParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return LiteralParser.parse(input, this.recon, this.builder, this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 40/*'('*/) {\n          input = input.step();\n          step = 4;\n        } else if (c === 123/*'{'*/) {\n          builder = builder || recon.recordBuilder();\n          valueParser = recon.parseRecord(input, builder);\n          step = 3;\n        } else if (c === 91/*'['*/) {\n          builder = builder || recon.recordBuilder();\n          valueParser = recon.parseMarkup(input, builder);\n          step = 3;\n        } else if (Recon.isIdentStartChar(c)) {\n          valueParser = recon.parseIdent(input);\n          step = 2;\n        } else if (c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n          valueParser = recon.parseString(input);\n          step = 2;\n        } else if (c === 96/*'`'*/) {\n          valueParser = recon.parseRawString(input);\n          step = 2;\n        } else if (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          valueParser = recon.parseNumber(input);\n          step = 2;\n        } else if (c === 37/*'%'*/) {\n          valueParser = recon.parseData(input);\n          step = 2;\n        } else if (c === 36/*'$'*/) {\n          valueParser = recon.parseSelector(input);\n          step = 2;\n        } else if (builder === void 0) {\n          return Parser.done(recon.extant());\n        } else {\n          return Parser.done(builder.bind());\n        }\n      } else if (input.isDone()) {\n        if (builder === void 0) {\n          return Parser.done(recon.extant());\n        } else {\n          return Parser.done(builder.bind());\n        }\n      }\n    }\n    if (step === 2) {\n      while (valueParser!.isCont() && !input.isEmpty()) {\n        valueParser = valueParser!.feed(input);\n      }\n      if (valueParser!.isDone()) {\n        builder = builder || recon.valueBuilder();\n        builder.push(recon.item(valueParser!.bind()));\n        return Parser.done(builder.bind());\n      } else if (valueParser!.isError()) {\n        return valueParser!.asError();\n      }\n    }\n    if (step === 3) {\n      while (valueParser!.isCont() && !input.isEmpty()) {\n        valueParser = valueParser!.feed(input);\n      }\n      if (valueParser!.isDone()) {\n        return Parser.done(builder!.bind());\n      } else if (valueParser!.isError()) {\n        return valueParser!.asError();\n      }\n    }\n    if (step === 4) {\n      if (valueParser === void 0) {\n        valueParser = recon.parseBlockExpression(input);\n      }\n      while (valueParser.isCont() && !input.isEmpty()) {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 5;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Recon.isWhitespace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          builder = builder || recon.valueBuilder();\n          builder.push(recon.item(valueParser!.bind()));\n          return Parser.done(builder.bind());\n        } else {\n          return Parser.error(Diagnostic.expected(41/*')'*/, input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(41/*')'*/, input));\n      }\n    }\n    return new LiteralParser<I, V>(recon, builder, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport type {ReconParser} from \"./ReconParser\";\n\n/** @hidden */\nexport class SelectorParser<I, V> extends Parser<V> {\n  private readonly recon: ReconParser<I, V>;\n  private readonly builder: Builder<I, V> | undefined;\n  private readonly selector: V | undefined;\n  private readonly valueParser: Parser<V> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>,\n              selector?: V, valueParser?: Parser<V>, step?: number) {\n    super();\n    this.recon = recon;\n    this.builder = builder;\n    this.selector = selector;\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<V> {\n    return SelectorParser.parse(input, this.recon, this.builder,\n                                this.selector, this.valueParser, this.step);\n  }\n\n  static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>,\n                     selector?: V, valueParser?: Parser<V>, step: number = 1): Parser<V> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 36/*'$'*/) {\n        input = input.step();\n        selector = selector || recon.selector();\n        step = 2;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(36/*'$'*/, input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 91/*'['*/) {\n          input = input.step();\n          step = 8;\n        } else if (c === 64/*'@'*/) {\n          input = input.step();\n          step = 7;\n        } else if (c === 58/*':'*/) {\n          input = input.step();\n          step = 6;\n        } else if (c === 42/*'*'*/) {\n          input = input.step();\n          step = 5;\n        } else if (c === 35/*'#'*/) {\n          input = input.step();\n          step = 4;\n        } else {\n          step = 3;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    do {\n      if (step === 3) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseLiteral(input, recon.valueBuilder());\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          selector = recon.get(selector!, valueParser.bind());\n          valueParser = void 0;\n          step = 10;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 4) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseInteger(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          selector = recon.value(recon.getItem(selector!, valueParser.bind()));\n          valueParser = void 0;\n          step = 10;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 58/*':'*/) {\n            input = input.step();\n            selector = recon.keys(selector!);\n            step = 10;\n          } else if (c === 42/*'*'*/) {\n            input = input.step();\n            selector = recon.descendants(selector!);\n            step = 10;\n          } else {\n            selector = recon.children(selector!);\n            step = 10;\n          }\n        } else if (input.isDone()) {\n          selector = recon.children(selector!);\n          step = 10;\n        }\n      }\n      if (step === 6) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 42/*'*'*/) {\n            input = input.step();\n            selector = recon.values(selector!);\n            step = 10;\n          } else {\n            return Parser.error(Diagnostic.expected(42/*'*'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(42/*'*'*/, input));\n        }\n      }\n      if (step === 7) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseIdent(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          selector = recon.getAttr(selector!, valueParser.bind());\n          valueParser = void 0;\n          step = 10;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 8) {\n        if (valueParser === void 0) {\n          valueParser = recon.parseBlockExpression(input);\n        }\n        while (valueParser.isCont() && !input.isEmpty()) {\n          valueParser = valueParser.feed(input);\n        }\n        if (valueParser.isDone()) {\n          step = 9;\n        } else if (valueParser.isError()) {\n          return valueParser.asError();\n        }\n      }\n      if (step === 9) {\n        while (input.isCont() && (c = input.head(), Recon.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          if (c === 93/*']'*/) {\n            input = input.step();\n            selector = recon.filter(selector!, valueParser!.bind());\n            valueParser = void 0;\n            step = 10;\n          } else {\n            return Parser.error(Diagnostic.expected(93/*']'*/, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(93/*']'*/, input));\n        }\n      }\n      if (step === 10) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 91/*'['*/) {\n            input = input.step();\n            step = 8;\n            continue;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 4;\n            continue;\n          } else if (c === 46/*'.'*/) {\n            input = input.step();\n            step = 11;\n          } else if (builder !== void 0) {\n            builder.push(recon.item(selector!));\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(selector!);\n          }\n        } else if (input.isDone()) {\n          if (builder !== void 0) {\n            builder.push(recon.item(selector!));\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(selector!);\n          }\n        }\n      }\n      if (step === 11) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 64/*'@'*/) {\n            input = input.step();\n            step = 7;\n            continue;\n          } else if (c === 58/*':'*/) {\n            input = input.step();\n            step = 6;\n            continue;\n          } else if (c === 42/*'*'*/) {\n            input = input.step();\n            step = 5;\n            continue;\n          } else {\n            step = 3;\n            continue;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      break;\n    } while (true);\n    return new SelectorParser<I, V>(recon, builder, selector, valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport {BlockParser} from \"./BlockParser\";\nimport {AttrParser} from \"./AttrParser\";\nimport {BlockItemParser} from \"./BlockItemParser\";\nimport {InlineItemParser} from \"./InlineItemParser\";\nimport {RecordParser} from \"./RecordParser\";\nimport {MarkupParser} from \"./MarkupParser\";\nimport {DataParser} from \"./DataParser\";\nimport {IdentParser} from \"./IdentParser\";\nimport {StringParser} from \"./StringParser\";\nimport {RawStringParser} from \"./RawStringParser\";\nimport {NumberParser} from \"./NumberParser\";\nimport {LambdaFuncParser} from \"./LambdaFuncParser\";\nimport {ConditionalOperatorParser} from \"./ConditionalOperatorParser\";\nimport {OrOperatorParser} from \"./OrOperatorParser\";\nimport {AndOperatorParser} from \"./AndOperatorParser\";\nimport {BitwiseOrOperatorParser} from \"./BitwiseOrOperatorParser\";\nimport {BitwiseXorOperatorParser} from \"./BitwiseXorOperatorParser\";\nimport {BitwiseAndOperatorParser} from \"./BitwiseAndOperatorParser\";\nimport {ComparisonOperatorParser} from \"./ComparisonOperatorParser\";\nimport {AttrExpressionParser} from \"./AttrExpressionParser\";\nimport {AdditiveOperatorParser} from \"./AdditiveOperatorParser\";\nimport {MultiplicativeOperatorParser} from \"./MultiplicativeOperatorParser\";\nimport {PrefixOperatorParser} from \"./PrefixOperatorParser\";\nimport {InvokeOperatorParser} from \"./InvokeOperatorParser\";\nimport {PrimaryParser} from \"./PrimaryParser\";\nimport {LiteralParser} from \"./LiteralParser\";\nimport {SelectorParser} from \"./SelectorParser\";\n\n/**\n * Factory for constructing Recon parsers and parse trees.\n */\nexport abstract class ReconParser<I, V> {\n  abstract isDistinct(value: V): boolean;\n\n  abstract item(value: V): I;\n\n  abstract value(item: I): V;\n\n  abstract attr(key: V, value: V): I;\n\n  abstract attr(key: V): I;\n\n  abstract slot(key: V, value: V): I;\n\n  abstract slot(key: V): I;\n\n  abstract valueBuilder(): Builder<I, V>;\n\n  abstract recordBuilder(): Builder<I, V>;\n\n  abstract dataOutput(): Output<V>;\n\n  abstract textOutput(): Output<V>;\n\n  abstract ident(value: V): V;\n\n  abstract num(value: number | string): V;\n\n  abstract uint32(value: number): V;\n\n  abstract uint64(value: number): V;\n\n  abstract bool(value: boolean): V;\n\n  abstract selector(): V;\n\n  abstract extant(): V;\n\n  abstract absent(): V;\n\n  abstract conditional(ifTerm: V, thenTerm: V, elseTerm: V): V;\n\n  abstract or(lhs: V, rhs: V): V;\n\n  abstract and(lhs: V, rhs: V): V;\n\n  abstract bitwiseOr(lhs: V, rhs: V): V;\n\n  abstract bitwiseXor(lhs: V, rhs: V): V;\n\n  abstract bitwiseAnd(lhs: V, rhs: V): V;\n\n  abstract lt(lhs: V, rhs: V): V;\n\n  abstract le(lhs: V, rhs: V): V;\n\n  abstract eq(lhs: V, rhs: V): V;\n\n  abstract ne(lhs: V, rhs: V): V;\n\n  abstract ge(lhs: V, rhs: V): V;\n\n  abstract gt(lhs: V, rhs: V): V;\n\n  abstract plus(lhs: V, rhs: V): V;\n\n  abstract minus(lhs: V, rhs: V): V;\n\n  abstract times(lhs: V, rhs: V): V;\n\n  abstract divide(lhs: V, rhs: V): V;\n\n  abstract modulo(lhs: V, rhs: V): V;\n\n  abstract not(rhs: V): V;\n\n  abstract bitwiseNot(rhs: V): V;\n\n  abstract negative(rhs: V): V;\n\n  abstract positive(rhs: V): V;\n\n  abstract invoke(func: V, args: V): V;\n\n  abstract lambda(bindings: V, template: V): V;\n\n  abstract get(selector: V, key: V): V;\n\n  abstract getAttr(selector: V, key: V): V;\n\n  abstract getItem(selector: V, index: V): I;\n\n  abstract children(selector: V): V;\n\n  abstract descendants(selector: V): V;\n\n  abstract keys(selector: V): V;\n\n  abstract values(selector: V): V;\n\n  abstract filter(selector: V, predicate: V): V;\n\n  parseBlock(input: Input): Parser<V> {\n    return BlockParser.parse(input, this);\n  }\n\n  parseAttr(input: Input): Parser<I> {\n    return AttrParser.parse(input, this);\n  }\n\n  parseBlockItem(input: Input): Parser<V> {\n    return BlockItemParser.parse(input, this);\n  }\n\n  parseInlineItem(input: Input): Parser<V> {\n    return InlineItemParser.parse(input, this);\n  }\n\n  parseRecord(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return RecordParser.parse(input, this, builder);\n  }\n\n  parseMarkup(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return MarkupParser.parse(input, this, builder);\n  }\n\n  parseData(input: Input): Parser<V> {\n    return DataParser.parse(input, this);\n  }\n\n  parseIdent(input: Input): Parser<V> {\n    return IdentParser.parse(input, this);\n  }\n\n  parseString(input: Input): Parser<V> {\n    return StringParser.parse(input, this);\n  }\n\n  parseRawString(input: Input): Parser<V> {\n    return RawStringParser.parse(input, this);\n  }\n\n  parseNumber(input: Input): Parser<V> {\n    return NumberParser.parse(input, this);\n  }\n\n  parseInteger(input: Input): Parser<V> {\n    return NumberParser.parseInteger(input, this);\n  }\n\n  parseBlockExpression(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return this.parseLambdaFunc(input, builder);\n  }\n\n  parseLambdaFunc(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return LambdaFuncParser.parse(input, this, builder);\n  }\n\n  parseConditionalOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return ConditionalOperatorParser.parse(input, this, builder);\n  }\n\n  parseOrOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return OrOperatorParser.parse(input, this, builder);\n  }\n\n  parseAndOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return AndOperatorParser.parse(input, this, builder);\n  }\n\n  parseBitwiseOrOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return BitwiseOrOperatorParser.parse(input, this, builder);\n  }\n\n  parseBitwiseXorOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return BitwiseXorOperatorParser.parse(input, this, builder);\n  }\n\n  parseBitwiseAndOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return BitwiseAndOperatorParser.parse(input, this, builder);\n  }\n\n  parseComparisonOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return ComparisonOperatorParser.parse(input, this, builder);\n  }\n\n  parseAttrExpression(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return AttrExpressionParser.parse(input, this, builder);\n  }\n\n  parseAdditiveOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return AdditiveOperatorParser.parse(input, this, builder);\n  }\n\n  parseMultiplicativeOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return MultiplicativeOperatorParser.parse(input, this, builder);\n  }\n\n  parsePrefixOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return PrefixOperatorParser.parse(input, this, builder);\n  }\n\n  parseInvokeOperator(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return InvokeOperatorParser.parse(input, this, builder);\n  }\n\n  parsePrimary(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return PrimaryParser.parse(input, this, builder);\n  }\n\n  parseLiteral(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return LiteralParser.parse(input, this, builder);\n  }\n\n  parseSelector(input: Input, builder?: Builder<I, V>): Parser<V> {\n    return SelectorParser.parse(input, this, builder);\n  }\n\n  blockParser(): Parser<V> {\n    return new BlockParser<I, V>(this);\n  }\n\n  parseBlockString(string: string): V {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Recon.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = this.parseBlock(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Recon.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {\n  Item,\n  Attr,\n  Slot,\n  Value,\n  Record,\n  Data,\n  Text,\n  Num,\n  Bool,\n  Selector,\n  AndOperator,\n  BitwiseAndOperator,\n  BitwiseNotOperator,\n  BitwiseOrOperator,\n  BitwiseXorOperator,\n  DivideOperator,\n  EqOperator,\n  GeOperator,\n  GtOperator,\n  InvokeOperator,\n  LeOperator,\n  LtOperator,\n  MinusOperator,\n  ModuloOperator,\n  NeOperator,\n  NegativeOperator,\n  NotOperator,\n  OrOperator,\n  PlusOperator,\n  PositiveOperator,\n  TimesOperator,\n} from \"@swim/structure\";\nimport {ReconParser} from \"./ReconParser\";\n\nexport class ReconStructureParser extends ReconParser<Item, Value> {\n  override isDistinct(value: Value): boolean {\n    return value.isDistinct();\n  }\n\n  override item(value: Value): Item {\n    return value;\n  }\n\n  override value(item: Item): Value {\n    return item.toValue();\n  }\n\n  override attr(key: Value, value?: Value): Item {\n    if (arguments.length === 1) {\n      return Attr.of(key as Text);\n    } else {\n      return Attr.of(key as Text, value);\n    }\n  }\n\n  override slot(key: Value, value?: Value): Item {\n    if (arguments.length === 1) {\n      return Slot.of(key);\n    } else {\n      return Slot.of(key, value);\n    }\n  }\n\n  override valueBuilder(): Builder<Item, Value> {\n    return Value.builder();\n  }\n\n  override recordBuilder(): Builder<Item, Value> {\n    return Record.create();\n  }\n\n  override dataOutput(): Output<Value> {\n    return Data.output();\n  }\n\n  override textOutput(): Output<Value> {\n    return Text.output();\n  }\n\n  override ident(value: Value): Value {\n    if (value instanceof Text) {\n      const string = value.stringValue();\n      if (string === \"true\") {\n        return Bool.from(true);\n      } else if (string === \"false\") {\n        return Bool.from(false);\n      }\n    }\n    return value;\n  }\n\n  override num(value: number | string): Value {\n    if (typeof value === \"number\") {\n      return Num.from(value);\n    } else if (typeof value === \"string\") {\n      return Num.from(+value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  override uint32(value: number): Value {\n    return Num.uint32(value);\n  }\n\n  override uint64(value: number): Value {\n    return Num.uint64(value);\n  }\n\n  override bool(value: boolean): Value {\n    return Bool.from(value);\n  }\n\n  override selector(): Value {\n    return Selector.identity();\n  }\n\n  override extant(): Value {\n    return Value.extant();\n  }\n\n  override absent(): Value {\n    return Value.absent();\n  }\n\n  override conditional(ifTerm: Value, thenTerm: Value, elseTerm: Value): Value {\n    return ifTerm.conditional(thenTerm, elseTerm);\n  }\n\n  override or(lhs: Value, rhs: Value): Value {\n    return new OrOperator(lhs, rhs);\n  }\n\n  override and(lhs: Value, rhs: Value): Value {\n    return new AndOperator(lhs, rhs);\n  }\n\n  override bitwiseOr(lhs: Value, rhs: Value): Value {\n    return new BitwiseOrOperator(lhs, rhs);\n  }\n\n  override bitwiseXor(lhs: Value, rhs: Value): Value {\n    return new BitwiseXorOperator(lhs, rhs);\n  }\n\n  override bitwiseAnd(lhs: Value, rhs: Value): Value {\n    return new BitwiseAndOperator(lhs, rhs);\n  }\n\n  override lt(lhs: Value, rhs: Value): Value {\n    return new LtOperator(lhs, rhs);\n  }\n\n  override le(lhs: Value, rhs: Value): Value {\n    return new LeOperator(lhs, rhs);\n  }\n\n  override eq(lhs: Value, rhs: Value): Value {\n    return new EqOperator(lhs, rhs);\n  }\n\n  override ne(lhs: Value, rhs: Value): Value {\n    return new NeOperator(lhs, rhs);\n  }\n\n  override ge(lhs: Value, rhs: Value): Value {\n    return new GeOperator(lhs, rhs);\n  }\n\n  override gt(lhs: Value, rhs: Value): Value {\n    return new GtOperator(lhs, rhs);\n  }\n\n  override plus(lhs: Value, rhs: Value): Value {\n    return new PlusOperator(lhs, rhs);\n  }\n\n  override minus(lhs: Value, rhs: Value): Value {\n    return new MinusOperator(lhs, rhs);\n  }\n\n  override times(lhs: Value, rhs: Value): Value {\n    return new TimesOperator(lhs, rhs);\n  }\n\n  override divide(lhs: Value, rhs: Value): Value {\n    return new DivideOperator(lhs, rhs);\n  }\n\n  override modulo(lhs: Value, rhs: Value): Value {\n    return new ModuloOperator(lhs, rhs);\n  }\n\n  override not(rhs: Value): Value {\n    return new NotOperator(rhs);\n  }\n\n  override bitwiseNot(rhs: Value): Value {\n    return new BitwiseNotOperator(rhs);\n  }\n\n  override negative(rhs: Value): Value {\n    if (rhs instanceof Num) {\n      return rhs.negative();\n    } else {\n      return new NegativeOperator(rhs);\n    }\n  }\n\n  override positive(rhs: Value): Value {\n    return new PositiveOperator(rhs);\n  }\n\n  override invoke(func: Value, args: Value): Value {\n    return new InvokeOperator(func, args);\n  }\n\n  override lambda(bindings: Value, template: Value): Value {\n    return bindings.lambda(template);\n  }\n\n  override get(selector: Value, key: Value): Value {\n    return selector.get(key);\n  }\n\n  override getAttr(selector: Value, key: Value): Value {\n    return selector.getAttr(key as Text);\n  }\n\n  override getItem(selector: Value, index: Value): Item {\n    return selector.getItem(index as Num);\n  }\n\n  override children(selector: Value): Value {\n    return Selector.literal(selector).children();\n  }\n\n  override descendants(selector: Value): Value {\n    return Selector.literal(selector).descendants();\n  }\n\n  override keys(selector: Value): Value {\n    return Selector.literal(selector).keys();\n  }\n\n  override values(selector: Value): Value {\n    return Selector.literal(selector).values();\n  }\n\n  override filter(selector: Value, predicate: Value): Value {\n    return selector.filter(predicate);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class AttrWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly key: V;\n  private readonly value: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, key: V, value: V, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.key = key;\n    this.value = value;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return AttrWriter.write(output, this.recon, this.key, this.value, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, key: V, value: V): number {\n    let size = 0;\n    size += 1; // '@'\n    size += recon.sizeOfValue(key);\n    if (!recon.isExtant(recon.item(value))) {\n      size += 1; // '(';\n      size += recon.sizeOfBlockValue(value);\n      size += 1; // ')';\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, value: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(64/*'@'*/);\n      step = 2;\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = recon.writeValue(key, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        if (recon.isExtant(recon.item(value))) {\n          return Writer.end();\n        } else {\n          step = 3;\n        }\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(40/*'('*/);\n      step = 4;\n    }\n    if (step === 4) {\n      if (part === void 0) {\n        part = recon.writeBlockValue(value, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 5;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 5 && output.isCont()) {\n      output = output.write(41/*')'*/);\n      return Writer.end();\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new AttrWriter<I, V>(recon, key, value, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class SlotWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly key: V;\n  private readonly value: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, key: V, value: V, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.key = key;\n    this.value = value;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return SlotWriter.write(output, this.recon, this.key, this.value, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, key: V, value: V): number {\n    let size = 0;\n    size += recon.sizeOfValue(key);\n    size += 1; // ':'\n    if (!recon.isExtant(recon.item(value))) {\n      size += recon.sizeOfValue(value);\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, value: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (part === void 0) {\n        part = recon.writeValue(key, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 2;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(58/*':'*/);\n      if (recon.isExtant(recon.item(value))) {\n        return Writer.end();\n      } else {\n        step = 3;\n      }\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeValue(value, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return Writer.end();\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new SlotWriter<I, V>(recon, key, value, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class BlockWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly items: Cursor<I>;\n  private readonly inBlock: boolean;\n  private readonly inMarkup: boolean;\n  private readonly inBraces: boolean | undefined;\n  private readonly inBrackets: boolean | undefined;\n  private readonly first: boolean | undefined;\n  private readonly markupSafe: boolean | undefined;\n  private readonly item: I | undefined;\n  private readonly next: I | undefined;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, items: Cursor<I>, inBlock: boolean, inMarkup: boolean,\n              inBraces?: boolean, inBrackets?: boolean, first?: boolean, markupSafe?: boolean,\n              item?: I, next?: I, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.items = items;\n    this.inBlock = inBlock;\n    this.inMarkup = inMarkup;\n    this.inBraces = inBraces;\n    this.inBrackets = inBrackets;\n    this.first = first;\n    this.markupSafe = markupSafe;\n    this.item = item;\n    this.next = next;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return BlockWriter.write(output, this.recon, this.items, this.inBlock, this.inMarkup,\n                             this.inBraces, this.inBrackets, this.first, this.markupSafe,\n                             this.item, this.next, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, items: Cursor<I>,\n                      inBlock: boolean, inMarkup: boolean): number {\n    let size = 0;\n    let inBraces = false;\n    let inBrackets = false;\n    let first = true;\n    let markupSafe = true;\n    let next: I | undefined;\n    while (next !== void 0 || items.hasNext()) {\n      let item: I | undefined;\n      if (next === void 0 ) {\n        item = items.next().value!;\n      } else {\n        item = next;\n        next = void 0;\n      }\n      if (items.hasNext()) {\n        next = items.next().value!;\n      }\n      if (recon.isExpression(item)) {\n        markupSafe = false;\n      }\n      if (inBrackets && recon.isAttr(item)) {\n        if (inBraces) {\n          size += 1; // '}'\n          inBraces = false;\n        }\n        size += 1; // ']'\n        inBrackets = false;\n      }\n      if (recon.isAttr(item)) {\n        if (inBraces) {\n          size += 1; // '}'\n          inBraces = false;\n        } else if (inBrackets) { // FIXME: case already covered?\n          size += 1; // ']'\n          inBrackets = false;\n        }\n        size += recon.sizeOfItem(item);\n        first = false;\n      } else if (inBrackets && recon.isText(item)) {\n        if (inBraces) {\n          size += 1; // '}'\n          inBraces = false;\n        }\n        size += recon.sizeOfMarkupText(item);\n      } else if (inBraces) {\n        if (!first) {\n          size += 1; // ','\n        } else {\n          first = false;\n        }\n        size += BlockWriter.sizeOfBlockItem(recon, item);\n      } else if (inBrackets) {\n        if (recon.isRecord(item) && recon.isMarkupSafe(recon.items(item))) {\n          size += recon.sizeOfBlock(recon.items(item), false, true);\n          if (next !== void 0 && recon.isText(next)) {\n            size += recon.sizeOfMarkupText(next);\n            next = void 0;\n          } else if (next !== void 0 && !recon.isAttr(next)) {\n            size += 1; // '{'\n            inBraces = true;\n            first = true;\n          } else {\n            size += 1; // ']'\n            inBrackets = false;\n          }\n        } else {\n          size += 1; // '{'\n          size += recon.sizeOfItem(item);\n          inBraces = true;\n          first = false;\n        }\n      } else if (markupSafe && recon.isText(item) && next !== void 0 && !recon.isField(next)\n              && !recon.isText(next) && !recon.isBool(next)) {\n        size += 1; // '['\n        size += recon.sizeOfMarkupText(item);\n        inBrackets = true;\n      } else if (inBlock && !inBraces) {\n        if (!first) {\n          size += 1; // ','\n        } else {\n          first = false;\n        }\n        size += BlockWriter.sizeOfBlockItem(recon, item);\n      } else if (inMarkup && recon.isText(item) && next === void 0) {\n        size += 1; // '['\n        size += recon.sizeOfMarkupText(item);\n        size += 1; // ']'\n      } else if (!inMarkup && recon.isValue(item) && !recon.isRecord(item)\n             && (!first && next === void 0 || next !== void 0 && recon.isAttr(next))) {\n        if (!first && (recon.isText(item) && recon.isIdent(item)\n                    || recon.isNum(item) || recon.isBool(item))) {\n          size += 1; // ' '\n        }\n        size += recon.sizeOfItem(item);\n      } else {\n        size += 1; // '{'\n        size += recon.sizeOfItem(item);\n        inBraces = true;\n        first = false;\n      }\n    }\n    if (inBraces) {\n      size += 1; // '}'\n    }\n    if (inBrackets) {\n      size += 1; // ']'\n    }\n    return size;\n  }\n\n  static sizeOfBlockItem<I, V>(recon: ReconWriter<I, V>, item: I): number {\n    let size = 0;\n    if (recon.isField(item)) {\n      size += recon.sizeOfSlot(recon.key(item), recon.value(item));\n    } else {\n      size += recon.sizeOfItem(item);\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, items: Cursor<I>,\n                     inBlock: boolean, inMarkup: boolean, inBraces: boolean = false,\n                     inBrackets: boolean = false, first: boolean = true, markupSafe: boolean = true,\n                     item?: I, next?: I, part?: Writer, step: number = 1): Writer {\n    do {\n      if (step === 1) {\n        if (next === void 0 && !items.hasNext()) {\n          step = 10;\n          break;\n        } else {\n          if (next === void 0) {\n            item = items.next().value!;\n          } else {\n            item = next;\n            next = void 0;\n          }\n          if (items.hasNext()) {\n            next = items.next().value!;\n          }\n          if (recon.isExpression(item)) {\n            markupSafe = false;\n          }\n          step = 2;\n        }\n      }\n      if (step === 2 && output.isCont()) {\n        if (inBrackets && recon.isAttr(item!)) {\n          if (inBraces) {\n            output = output.write(125/*'}'*/);\n            inBraces = false;\n          }\n          step = 3;\n        } else {\n          step = 4;\n        }\n      }\n      if (step === 3 && output.isCont()) {\n        output = output.write(93/*']'*/);\n        inBrackets = false;\n        step = 4;\n      }\n      if (step === 4 && output.isCont()) {\n        if (recon.isAttr(item!)) {\n          if (inBraces) {\n            output = output.write(125/*'}'*/);\n            inBraces = false;\n          } else if (inBrackets) {\n            output = output.write(93/*']'*/);\n            inBrackets = false;\n          }\n          part = recon.writeItem(item!, output);\n          first = false;\n          step = 7;\n        } else if (inBrackets && recon.isText(item!)) {\n          if (inBraces) {\n            output = output.write(125/*'}'*/);\n            inBraces = false;\n          }\n          part = recon.writeMarkupText(item!, output);\n          step = 7;\n        } else if (inBraces) {\n          if (!first) {\n            output = output.write(44/*','*/);\n          } else {\n            first = false;\n          }\n          part = BlockWriter.writeBlockItem(output, recon, item!);\n          step = 7;\n        } else if (inBrackets) {\n          if (recon.isRecord(item!) && recon.isMarkupSafe(recon.items(item!))) {\n            part = recon.writeBlock(recon.items(item!), output, false, true);\n            step = 5;\n          } else {\n            output = output.write(123/*'{'*/);\n            part = recon.writeItem(item!, output);\n            inBraces = true;\n            first = false;\n            step = 7;\n          }\n        } else if (markupSafe && recon.isText(item!) && next !== void 0 && !recon.isField(next)\n                && !recon.isText(next) && !recon.isBool(next)) {\n          output = output.write(91/*'['*/);\n          part = recon.writeMarkupText(item!, output);\n          inBrackets = true;\n          step = 7;\n        } else if (inBlock && !inBraces) {\n          if (!first) {\n            output = output.write(44/*','*/);\n          } else {\n            first = false;\n          }\n          part = BlockWriter.writeBlockItem(output, recon, item!);\n          step = 7;\n        } else if (inMarkup && recon.isText(item!) && next === void 0) {\n          output = output.write(91/*'['*/);\n          part = recon.writeMarkupText(item!, output);\n          step = 8;\n        } else if (!inMarkup && recon.isValue(item!) && !recon.isRecord(item!)\n               && (!first && next === void 0 || next !== void 0 && recon.isAttr(next))) {\n          if (!first && (recon.isText(item!) && recon.isIdent(item!)\n                      || recon.isNum(item!) || recon.isBool(item!))) {\n            output = output.write(32/*' '*/);\n          }\n          part = recon.writeItem(item!, output);\n          step = 7;\n        } else {\n          output = output.write(123/*'{'*/);\n          part = recon.writeItem(item!, output);\n          inBraces = true;\n          first = false;\n          step = 7;\n        }\n      }\n      if (step === 5) {\n        part = part!.pull(output);\n        if (part.isDone()) {\n          part = void 0;\n          step = 6;\n        } else if (part.isError()) {\n          return part.asError();\n        }\n      }\n      if (step === 6 && output.isCont()) {\n        if (next !== void 0 && recon.isText(next)) {\n          part = recon.writeMarkupText(next, output);\n          next = void 0;\n          step = 7;\n        } else if (next !== void 0 && !recon.isAttr(next)) {\n          output = output.write(123/*'{'*/);\n          inBraces = true;\n          first = true;\n          step = 1;\n          continue;\n        } else {\n          output = output.write(93/*']'*/);\n          inBrackets = false;\n          step = 1;\n          continue;\n        }\n      }\n      if (step === 7) {\n        part = part!.pull(output);\n        if (part.isDone()) {\n          part = void 0;\n          step = 1;\n          continue;\n        } else if (part.isError()) {\n          return part.asError();\n        }\n      }\n      if (step === 8) {\n        part = part!.pull(output);\n        if (part.isDone()) {\n          part = void 0;\n          step = 9;\n        } else if (part.isError()) {\n          return part.asError();\n        }\n      }\n      if (step === 9 && output.isCont()) {\n        output = output.write(93/*']'*/);\n        step = 1;\n        continue;\n      }\n      break;\n    } while (true);\n    if (step === 10) {\n      if (inBraces) {\n        if (output.isCont()) {\n          output = output.write(125/*'}'*/);\n          step = 11;\n        }\n      } else {\n        step = 11;\n      }\n    }\n    if (step === 11) {\n      if (inBrackets) {\n        if (output.isCont()) {\n          output = output.write(93/*']'*/);\n          return Writer.end();\n        }\n      } else {\n        return Writer.end();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new BlockWriter<I, V>(recon, items, inBlock, inMarkup, inBraces, inBrackets,\n                                 first, markupSafe, item, next, part, step);\n  }\n\n  static writeBlockItem<I, V>(output: Output, recon: ReconWriter<I, V>, item: I): Writer {\n    if (recon.isField(item)) {\n      return recon.writeSlot(recon.key(item), recon.value(item), output);\n    } else {\n      return recon.writeItem(item, output);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class PrimaryWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly items: Cursor<I>;\n  private readonly inParens: boolean | undefined;\n  private readonly first: boolean | undefined;\n  private readonly item: I | undefined;\n  private readonly next: I | undefined;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, items: Cursor<I>, inParens?: boolean,\n              first?: boolean, item?: I, next?: I, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.items = items;\n    this.inParens = inParens;\n    this.first = first;\n    this.item = item;\n    this.next = next;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return PrimaryWriter.write(output, this.recon, this.items, this.inParens, this.first,\n                               this.item, this.next, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, items: Cursor<I>): number {\n    let size = 0;\n    let inParens = false;\n    let first = true;\n    let next: I | undefined;\n    while (next !== void 0 || items.hasNext()) {\n      let item: I | undefined;\n      if (next === void 0) {\n        item = items.next().value!;\n      } else {\n        item = next;\n        next = void 0;\n      }\n      if (items.hasNext()) {\n        next = items.next().value!;\n      }\n      if (!inParens && !first) {\n        size += 1; // ' '\n      }\n      if (recon.isAttr(item)) {\n        if (inParens) {\n          size += 1; // ')'\n          inParens = false;\n        }\n        size += recon.sizeOfItem(item);\n        first = false;\n      } else if (inParens) {\n        if (!first) {\n          size += 1; // ','\n        } else {\n          first = false;\n        }\n        size += recon.sizeOfBlockItem(item);\n      } else if (recon.isValue(item) && !recon.isRecord(item)\n             && (!first && next === void 0 || next !== void 0 && recon.isAttr(next))) {\n        size += recon.sizeOfItem(item);\n      } else {\n        size += 1; // '('\n        size += recon.sizeOfItem(item);\n        inParens = true;\n        first = false;\n      }\n    }\n    if (inParens) {\n      size += 1; // ')'\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, items: Cursor<I>,\n                     inParens: boolean = false, first: boolean = true, item?: I,\n                     next?: I, part?: Writer, step: number = 1): Writer {\n    do {\n      if (step === 1) {\n        if (next === void 0 && !items.hasNext()) {\n          step = 5;\n          break;\n        } else {\n          if (next === void 0) {\n            item = items.next().value!;\n          } else {\n            item = next;\n            next = void 0;\n          }\n          if (items.hasNext()) {\n            next = items.next().value!;\n          }\n          step = 2;\n        }\n      }\n      if (step === 2 && output.isCont()) {\n        if (!inParens && !first) {\n          output = output.write(32/*' '*/);\n        }\n        step = 3;\n      }\n      if (step === 3 && output.isCont()) {\n        if (recon.isAttr(item!)) {\n          if (inParens) {\n            output = output.write(41/*')'*/);\n            inParens = false;\n          }\n          part = recon.writeItem(item!, output);\n          first = false;\n          step = 4;\n        } else if (inParens) {\n          if (!first) {\n            output = output.write(44/*','*/);\n          } else {\n            first = false;\n          }\n          part = recon.writeBlockItem(item!, output);\n          step = 4;\n        } else if (recon.isValue(item!) && !recon.isRecord(item!)\n               && (!first && next === void 0 || next !== void 0 && recon.isAttr(next))) {\n          part = recon.writeItem(item!, output);\n          step = 4;\n        } else {\n          output = output.write(40/*'('*/);\n          part = recon.writeItem(item!, output);\n          inParens = true;\n          first = false;\n          step = 4;\n        }\n      }\n      if (step === 4) {\n        part = part!.pull(output);\n        if (part.isDone()) {\n          part = void 0;\n          step = 1;\n          continue;\n        } else if (part.isError()) {\n          return part.asError();\n        }\n      }\n      break;\n    } while (true);\n    if (step === 5) {\n      if (inParens) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          return Writer.end();\n        }\n      } else {\n        return Writer.end();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new PrimaryWriter<I, V>(recon, items, inParens, first, item, next, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Utf8, Base16} from \"@swim/codec\";\n\n/** @hidden */\nexport class MarkupTextWriter extends Writer {\n  private readonly text: string;\n  private readonly index: number | undefined;\n  private readonly escape: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(text: string, index?: number, escape?: number, step?: number) {\n    super();\n    this.text = text;\n    this.index = index;\n    this.escape = escape;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return MarkupTextWriter.write(output, this.text, this.index, this.escape, this.step);\n  }\n\n  static sizeOf(text: string): number {\n    let size = 0;\n    for (let i = 0, n = text.length; i < n; i = text.offsetByCodePoints(i, 1)) {\n      let c = text.codePointAt(i);\n      if (c === void 0) {\n        c = text.charCodeAt(i);\n      }\n      if (c === 36/*'$'*/ || c === 64/*'@'*/ || c === 91/*'['*/ || c === 92/*'\\\\'*/\n          || c === 93/*']'*/ || c === 123/*'{'*/ || c === 125/*'}'*/ || c === 8/*'\\b'*/\n          || c === 12/*'\\f'*/ || c === 10/*'\\n'*/ || c === 13/*'\\r'*/ || c === 9/*'\\t'*/) {\n        size += 2;\n      } else if (c < 0x20) {\n        size += 6;\n      } else {\n        size += Utf8.sizeOf(c);\n      }\n    }\n    return size;\n  }\n\n  static write(output: Output, text: string, index: number = 0,\n               escape: number = 0, step: number = 1): Writer {\n    const length = text.length;\n    while (output.isCont()) {\n      if (step === 1) {\n        if (index < length) {\n          let c = text.codePointAt(index);\n          if (c === void 0) {\n            c = text.charCodeAt(index);\n          }\n          index = text.offsetByCodePoints(index, 1);\n          if (c === 36/*'$'*/ || c === 64/*'@'*/ || c === 91/*'['*/ || c === 92/*'\\\\'*/\n              || c === 93/*']'*/ || c === 123/*'{'*/ || c === 125/*'}'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = c;\n            step = 2;\n          } else if (c === 8/*'\\b'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 98/*'b'*/;\n            step = 2;\n          } else if (c === 12/*'\\f'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 102/*'f'*/;\n            step = 2;\n          } else if (c === 10/*'\\n'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 110/*'n'*/;\n            step = 2;\n          } else if (c === 13/*'\\r'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 114/*'r'*/;\n            step = 2;\n          } else if (c === 9/*'\\t'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 116/*'t'*/;\n            step = 2;\n          } else if (c < 0x20) {\n            output = output.write(92/*'\\\\'*/);\n            escape = c;\n            step = 3;\n          } else {\n            output = output.write(c);\n          }\n        } else {\n          return Writer.end();\n        }\n      } else if (step === 2) {\n        output = output.write(escape);\n        escape = 0;\n        step = 1;\n      } else if (step === 3) {\n        output = output.write(117/*'u'*/);\n        step = 4;\n      } else if (step === 4) {\n        output = output.write(Base16.uppercase.encodeDigit((escape >>> 12) & 0xf));\n        step = 5;\n      } else if (step === 5) {\n        output = output.write(Base16.uppercase.encodeDigit((escape >>> 8) & 0xf));\n        step = 6;\n      } else if (step === 6) {\n        output = output.write(Base16.uppercase.encodeDigit((escape >>> 4) & 0xf));\n        step = 7;\n      } else if (step === 7) {\n        output = output.write(Base16.uppercase.encodeDigit(escape & 0xf));\n        escape = 0;\n        step = 1;\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new MarkupTextWriter(text, index, escape, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Base64} from \"@swim/codec\";\n\n/** @hidden */\nexport class DataWriter extends Writer {\n  private readonly array: Uint8Array;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(array: Uint8Array, part?: Writer, step?: number) {\n    super();\n    this.array = array;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return DataWriter.write(output, this.array, this.part, this.step);\n  }\n\n  static sizeOf(length: number): number {\n    return 1 + ((Math.floor(length * 4 / 3) + 3) & ~3);\n  }\n\n  static write(output: Output, array: Uint8Array, part?: Writer,\n               step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(37/*'%'*/);\n      step = 2;\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = Base64.standard().writeUint8Array(array, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        return Writer.end();\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new DataWriter(array, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Utf8} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\n\n/** @hidden */\nexport class IdentWriter extends Writer {\n  private readonly ident: string;\n  private readonly index: number | undefined;\n\n  constructor(ident: string, index?: number) {\n    super();\n    this.ident = ident;\n    this.index = index;\n  }\n\n  override pull(output: Output): Writer {\n    return IdentWriter.write(output, this.ident, this.index);\n  }\n\n  static sizeOf(ident: string): number {\n    return Utf8.sizeOf(ident);\n  }\n\n  static write(output: Output, ident: string, index: number = 0): Writer {\n    let c: number | undefined;\n    const length = ident.length;\n    if (length === 0) {\n      return Writer.error(new WriterException(\"empty identifier\"));\n    }\n    if (index === 0 && output.isCont()) {\n      c = ident.codePointAt(0);\n      if (c === void 0) {\n        c = ident.charCodeAt(0);\n      }\n      if (Recon.isIdentStartChar(c)) {\n        output = output.write(c);\n        index = ident.offsetByCodePoints(0, 1);\n      }\n    }\n    while (index < length && output.isCont()) {\n      c = ident.codePointAt(index);\n      if (c === void 0) {\n        c = ident.charCodeAt(index);\n      }\n      if (Recon.isIdentChar(c)) {\n        output = output.write(c);\n        index = ident.offsetByCodePoints(index, 1);\n      } else {\n        return Writer.error(new WriterException(\"invalid identifier\"));\n      }\n    }\n    if (index >= length) {\n      return Writer.end();\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new IdentWriter(ident, index);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Utf8, Base16} from \"@swim/codec\";\n\n/** @hidden */\nexport class StringWriter extends Writer {\n  private readonly string: string;\n  private readonly index: number | undefined;\n  private readonly escape: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(string: string, index?: number, escape?: number, step?: number) {\n    super();\n    this.string = string;\n    this.index = index;\n    this.escape = escape;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return StringWriter.write(output, this.string, this.index, this.escape, this.step);\n  }\n\n  static sizeOf(string: string): number {\n    let size = 0;\n    size += 1; // '\"';\n    for (let i = 0, n = string.length; i < n; i = string.offsetByCodePoints(i, 1)) {\n      let c = string.codePointAt(i);\n      if (c === void 0) {\n        c = string.charCodeAt(i);\n      }\n      if (c === 34/*'\"'*/ || c === 92/*'\\\\'*/ || c === 8/*'\\b'*/ || c === 12/*'\\f'*/\n          || c === 10/*'\\n'*/ || c === 13/*'\\r'*/ || c === 9/*'\\t'*/) {\n        size += 2;\n      } else if (c < 0x20) {\n        size += 6;\n      } else {\n        size += Utf8.sizeOf(c);\n      }\n    }\n    size += 1; // '\"';\n    return size;\n  }\n\n  static write(output: Output, string: string, index: number = 0, escape: number = 0,\n               step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(34/*'\"'*/);\n      step = 2;\n    }\n    const length = string.length;\n    while (step >= 2 && step <= 8 && output.isCont()) {\n      if (step === 2) {\n        if (index < length) {\n          let c = string.codePointAt(index);\n          if (c === void 0) {\n            c = string.charCodeAt(index);\n          }\n          index = string.offsetByCodePoints(index, 1);\n          if (c === 34/*'\"'*/ || c === 92/*'\\\\'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = c;\n            step = 3;\n          } else if (c === 8/*'\\b'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 98/*'b'*/;\n            step = 3;\n          } else if (c === 12/*'\\f'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 102/*'f'*/;\n            step = 3;\n          } else if (c === 10/*'\\n'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 110/*'n'*/;\n            step = 3;\n          } else if (c === 13/*'\\r'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 114/*'r'*/;\n            step = 3;\n          } else if (c === 9/*'\\t'*/) {\n            output = output.write(92/*'\\\\'*/);\n            escape = 116/*'t'*/;\n            step = 3;\n          } else if (c < 0x20) {\n            output = output.write('\\\\');\n            escape = c;\n            step = 4;\n          } else {\n            output = output.write(c);\n          }\n        } else {\n          step = 9;\n          break;\n        }\n      } else if (step === 3) {\n        output = output.write(escape);\n        escape = 0;\n        step = 2;\n      } else if (step === 4) {\n        output = output.write(117/*'u'*/);\n        step = 5;\n      } else if (step === 5) {\n        output = output.write(Base16.uppercase.encodeDigit((escape >>> 12) & 0xf));\n        step = 6;\n      } else if (step === 6) {\n        output = output.write(Base16.uppercase.encodeDigit((escape >>> 8) & 0xf));\n        step = 7;\n      } else if (step === 7) {\n        output = output.write(Base16.uppercase.encodeDigit((escape >>> 4) & 0xf));\n        step = 8;\n      } else if (step === 8) {\n        output = output.write(Base16.uppercase.encodeDigit(escape & 0xf));\n        escape = 0;\n        step = 2;\n      }\n    }\n    if (step === 9 && output.isCont()) {\n      output = output.write(34/*'\"'*/);\n      return Writer.end();\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new StringWriter(string, index, escape, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class LambdaFuncWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly bindings: V;\n  private readonly template: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, bindings: V, template: V,\n              part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.bindings = bindings;\n    this.template = template;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return LambdaFuncWriter.write(output, this.recon, this.bindings, this.template,\n                                  this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, bindings: V, template: V): number {\n    let size = 0;\n    size += recon.sizeOfPrimary(bindings);\n    size += 4; // \" => \"\n    size += recon.sizeOfValue(template);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, bindings: V, template: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (part === void 0) {\n        part = recon.writePrimary(bindings, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 2;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(61/*'='*/);\n      step = 4;\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(62/*'>'*/);\n      step = 5;\n    }\n    if (step === 5 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 6;\n    }\n    if (step === 6) {\n      if (part === void 0) {\n        part = recon.writeValue(template, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return Writer.end();\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new LambdaFuncWriter<I, V>(recon, bindings, template, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class ConditionalOperatorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly ifTerm: I;\n  private readonly thenTerm: I;\n  private readonly elseTerm: I;\n  private readonly precedence: number;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I, elseTerm: I,\n              precedence: number, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.ifTerm = ifTerm;\n    this.thenTerm = thenTerm;\n    this.elseTerm = elseTerm;\n    this.precedence = precedence;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return ConditionalOperatorWriter.write(output, this.recon, this.ifTerm, this.thenTerm,\n                                           this.elseTerm, this.precedence, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I,\n                      elseTerm: I, precedence: number): number {\n    let size = 0;\n    if (recon.precedence(ifTerm) > 0 && recon.precedence(ifTerm) <= precedence) {\n      size += 1; // '('\n      size += recon.sizeOfItem(ifTerm);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(ifTerm);\n    }\n    size += 3; // \" ? \"\n    size += recon.sizeOfItem(thenTerm);\n    size += 3; // \" : \"\n    size += recon.sizeOfItem(elseTerm);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I, elseTerm: I,\n                     precedence: number, part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (recon.precedence(ifTerm) > 0 && recon.precedence(ifTerm) <= precedence) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = recon.writeItem(ifTerm, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 3;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 3) {\n      if (recon.precedence(ifTerm) > 0 && recon.precedence(ifTerm) <= precedence) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          step = 4;\n        }\n      } else {\n        step = 4;\n      }\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 5;\n    }\n    if (step === 5 && output.isCont()) {\n      output = output.write(63/*'?'*/);\n      step = 6;\n    }\n    if (step === 6 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 7;\n    }\n    if (step === 7) {\n      if (part === void 0) {\n        part = recon.writeItem(thenTerm, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 8;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 8 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 9;\n    }\n    if (step === 9 && output.isCont()) {\n      output = output.write(58/*':'*/);\n      step = 10;\n    }\n    if (step === 10 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 11;\n    }\n    if (step === 11) {\n      if (part === void 0) {\n        part = recon.writeItem(elseTerm, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return Writer.end();\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new ConditionalOperatorWriter<I, V>(recon, ifTerm, thenTerm, elseTerm,\n                                               precedence, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Unicode, Utf8} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class InfixOperatorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly lhs: I;\n  private readonly operator: string;\n  private readonly rhs: I;\n  private readonly precedence: number;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, lhs: I, operator: string, rhs: I,\n              precedence: number, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.lhs = lhs;\n    this.operator = operator;\n    this.rhs = rhs;\n    this.precedence = precedence;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return InfixOperatorWriter.write(output, this.recon, this.lhs, this.operator, this.rhs,\n                                     this.precedence, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, lhs: I, operator: string, rhs: I, precedence: number): number {\n    let size = 0;\n    if (recon.precedence(lhs) < precedence) {\n      size += 1; // '('\n      size += recon.sizeOfItem(lhs);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(lhs);\n    }\n    size += 1; // ' '\n    size += Utf8.sizeOf(operator);\n    size += 1; // ' '\n    if (recon.precedence(rhs) < precedence) {\n      size += 1; // '('\n      size += recon.sizeOfItem(rhs);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(rhs);\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, lhs: I, operator: string, rhs: I,\n                     precedence: number, part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (recon.precedence(lhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = recon.writeItem(lhs, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 3;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 3) {\n      if (recon.precedence(lhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          step = 4;\n        }\n      } else {\n        step = 4;\n      }\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 5;\n    }\n    if (step === 5) {\n      if (part === void 0) {\n        part = Unicode.writeString(operator, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 6;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 6 && output.isCont()) {\n      output = output.write(32/*' '*/);\n      step = 7;\n    }\n    if (step === 7) {\n      if (recon.precedence(rhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 8;\n        }\n      } else {\n        step = 8;\n      }\n    }\n    if (step === 8) {\n      if (part === void 0) {\n        part = recon.writeItem(rhs, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 9;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 9) {\n      if (recon.precedence(rhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          return Writer.end();\n        }\n      } else {\n        return Writer.end();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new InfixOperatorWriter<I, V>(recon, lhs, operator, rhs, precedence, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer, Unicode, Utf8} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class PrefixOperatorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly operator: string;\n  private readonly rhs: I;\n  private readonly precedence: number;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, operator: string, rhs: I,\n              precedence: number, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.operator = operator;\n    this.rhs = rhs;\n    this.precedence = precedence;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return PrefixOperatorWriter.write(output, this.recon, this.operator, this.rhs,\n                                      this.precedence, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, operator: string, rhs: I, precedence: number): number {\n    let size = 0;\n    size += Utf8.sizeOf(operator);\n    if (recon.precedence(rhs) < precedence) {\n      size += 1; // '('\n      size += recon.sizeOfItem(rhs);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(rhs);\n    }\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, operator: string, rhs: I,\n                     precedence: number, part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (part === void 0) {\n        part = Unicode.writeString(operator, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 2;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 2) {\n      if (recon.precedence(rhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 3;\n        }\n      } else {\n        step = 3;\n      }\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeItem(rhs, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 4;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 4) {\n      if (recon.precedence(rhs) < precedence) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          return Writer.end();\n        }\n      } else {\n        return Writer.end();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new PrefixOperatorWriter<I, V>(recon, operator, rhs, precedence, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class InvokeOperatorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly func: V;\n  private readonly args: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, func: V, args: V, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.func = func;\n    this.args = args;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return InvokeOperatorWriter.write(output, this.recon, this.func, this.args,\n                                      this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, func: V, args: V): number {\n    let size = 0;\n    size += recon.sizeOfValue(func);\n    size += 1; // '('\n    size += recon.sizeOfBlockValue(args);\n    size += 1; // ')'\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, func: V, args: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (part === void 0) {\n        part = recon.writeValue(func, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 2;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(40/*'('*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeBlockValue(args, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 4;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(41/*')'*/);\n      return Writer.end();\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new InvokeOperatorWriter<I, V>(recon, func, args, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class LiteralSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly item: I;\n  private readonly then: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, item: I, then: V, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.item = item;\n    this.then = then;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return LiteralSelectorWriter.write(output, this.recon, this.item, this.then,\n                                       this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, item: I, then: V): number {\n    let size = 0;\n    if (recon.precedence(item) < recon.precedence(recon.item(then))) {\n      size += 1; // '('\n      size += recon.sizeOfItem(item);\n      size += 1; // ')'\n    } else {\n      size += recon.sizeOfItem(item);\n    }\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, item: I, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1) {\n      if (recon.precedence(item) < recon.precedence(recon.item(then))) {\n        if (output.isCont()) {\n          output = output.write(40/*'('*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (part === void 0) {\n        part = recon.writeItem(item, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 3;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 3) {\n      if (recon.precedence(item) < recon.precedence(recon.item(then))) {\n        if (output.isCont()) {\n          output = output.write(41/*')'*/);\n          step = 4;\n        }\n      } else {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new LiteralSelectorWriter<I, V>(recon, item, then, part, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class GetSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly key: V;\n  private readonly then: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, key: V, then: V, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.key = key;\n    this.then = then;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return GetSelectorWriter.write(output, this.recon, this.key, this.then, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, key: V, then: V): number {\n    let size = 1; // '$' | '.'\n    if (recon.isRecord(recon.item(key))) {\n      size += 1; // '{'\n      size += recon.sizeOfBlockValue(key);\n      size += 1; // '}'\n    } else {\n      size += recon.sizeOfValue(key);\n    }\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (recon.isRecord(recon.item(key))) {\n        if (output.isCont()) {\n          output = output.write(123/*'{'*/);\n          step = 4;\n        }\n      } else {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      if (part === void 0) {\n        if (recon.isRecord(recon.item(key))) {\n          part = recon.writeBlockValue(key, output);\n        } else {\n          part = recon.writeValue(key, output);\n        }\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 5;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 5) {\n      if (recon.isRecord(recon.item(key))) {\n        if (output.isCont()) {\n          output = output.write(125/*'}'*/);\n          step = 6;\n        }\n      } else {\n        step = 6;\n      }\n    }\n    if (step === 6) {\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new GetSelectorWriter<I, V>(recon, key, then, part, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, then: V): Writer {\n    return GetSelectorWriter.write(output, recon, key, then, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class GetAttrSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly key: V;\n  private readonly then: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, key: V, then: V, part?: Writer, step?: number) {\n    super();\n    this.recon  = recon;\n    this.key = key;\n    this.then = then;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return GetAttrSelectorWriter.write(output, this.recon, this.key, this.then,\n                                       this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, key: V, then: V): number {\n    let size = 2; // ('$' | '.') '@'\n    size += recon.sizeOfValue(key);\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(64/*'@'*/);\n      step = 4;\n    }\n    if (step === 4) {\n      if (part === void 0) {\n        part = recon.writeValue(key, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return recon.writeThen(then, output);\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new GetAttrSelectorWriter<I, V>(recon, key, then, part, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, key: V, then: V): Writer {\n    return GetAttrSelectorWriter.write(output, recon, key, then, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class GetItemSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly index: V;\n  private readonly then: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, index: V, then: V, part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.index = index;\n    this.then = then;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return GetItemSelectorWriter.write(output, this.recon, this.index, this.then,\n                                       this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, index: V, then: V): number {\n    let size = 2; // \"$#\"\n    size += recon.sizeOfValue(index);\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static sizeOfThen<I, V>(recon: ReconWriter<I, V>, index: V, then: V): number {\n    let size = 1; // '#'\n    size += recon.sizeOfValue(index);\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, index: V, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 2;\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(35/*'#'*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeValue(index, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        return recon.writeThen(then, output);\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new GetItemSelectorWriter<I, V>(recon, index, then, part, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, index: V, then: V): Writer {\n    return GetItemSelectorWriter.write(output, recon, index, then, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class KeysSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly then: V;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, then: V, step?: number) {\n    super();\n    this.recon = recon;\n    this.then = then;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return KeysSelectorWriter.write(output, this.recon, this.then, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, then: V): number {\n    let size = 3; // ('$' | '.') '*' ':'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, then: V,\n                     step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      step = 4;\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(58/*':'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new KeysSelectorWriter<I, V>(recon, then, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, then: V): Writer {\n    return KeysSelectorWriter.write(output, recon, then, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class ValuesSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly then: V;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, then: V, step?: number) {\n    super();\n    this.recon = recon;\n    this.then = then;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return ValuesSelectorWriter.write(output, this.recon, this.then, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, then: V): number {\n    let size = 3; // ('$' | '.') ':' '*'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, then: V,\n                     step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(58/*':'*/);\n      step = 4;\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new ValuesSelectorWriter<I, V>(recon, then, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, then: V): Writer {\n    return ValuesSelectorWriter.write(output, recon, then, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class ChildrenSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly then: V;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, then: V, step?: number) {\n    super();\n    this.recon = recon;\n    this.then = then;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return ChildrenSelectorWriter.write(output, this.recon, this.then, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, then: V): number {\n    let size = 2; // ('$' | '.') '*'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, then: V,\n                     step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new ChildrenSelectorWriter<I, V>(recon, then, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, then: V): Writer {\n    return ChildrenSelectorWriter.write(output, recon, then, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class DescendantsSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly then: V;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, then: V, step?: number) {\n    super();\n    this.recon = recon;\n    this.then = then;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return DescendantsSelectorWriter.write(output, this.recon, this.then, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, then: V): number {\n    let size = 3; // ('$' | '.') '*' '*'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, then: V,\n                     step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 3;\n    } else if (step === 2 && output.isCont()) {\n      output = output.write(46/*'.'*/);\n      step = 3;\n    }\n    if (step === 3 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      step = 4;\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(42/*'*'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new DescendantsSelectorWriter<I, V>(recon, then, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>, then: V): Writer {\n    return DescendantsSelectorWriter.write(output, recon, then, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport type {ReconWriter} from \"./ReconWriter\";\n\n/** @hidden */\nexport class FilterSelectorWriter<I, V> extends Writer {\n  private readonly recon: ReconWriter<I, V>;\n  private readonly predicate: V;\n  private readonly then: V;\n  private readonly part: Writer | undefined;\n  private readonly step: number | undefined;\n\n  constructor(recon: ReconWriter<I, V>, predicate: V, then: V,\n              part?: Writer, step?: number) {\n    super();\n    this.recon = recon;\n    this.predicate = predicate;\n    this.then = then;\n    this.part = part;\n    this.step = step;\n  }\n\n  override pull(output: Output): Writer {\n    return FilterSelectorWriter.write(output, this.recon, this.predicate,\n                                      this.then, this.part, this.step);\n  }\n\n  static sizeOf<I, V>(recon: ReconWriter<I, V>, predicate: V, then: V): number {\n    let size = 2; // '$' '['\n    size += recon.sizeOfValue(predicate);\n    size += 1; // ']'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static sizeOfThen<I, V>(recon: ReconWriter<I, V>, predicate: V, then: V): number {\n    let size = 1; // '['\n    size += recon.sizeOfValue(predicate);\n    size += 1; // ']'\n    size += recon.sizeOfThen(then);\n    return size;\n  }\n\n  static write<I, V>(output: Output, recon: ReconWriter<I, V>, predicate: V, then: V,\n                     part?: Writer, step: number = 1): Writer {\n    if (step === 1 && output.isCont()) {\n      output = output.write(36/*'$'*/);\n      step = 2;\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(91/*'['*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (part === void 0) {\n        part = recon.writeValue(predicate, output);\n      } else {\n        part = part.pull(output);\n      }\n      if (part.isDone()) {\n        part = void 0;\n        step = 4;\n      } else if (part.isError()) {\n        return part.asError();\n      }\n    }\n    if (step === 4 && output.isCont()) {\n      output = output.write(93/*']'*/);\n      return recon.writeThen(then, output);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new FilterSelectorWriter<I, V>(recon, predicate, then, part, step);\n  }\n\n  static writeThen<I, V>(output: Output, recon: ReconWriter<I, V>,\n                         predicate: V, then: V): Writer {\n    return FilterSelectorWriter.write(output, recon, predicate, then, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {Output, Writer, Unicode, Base10, Base16} from \"@swim/codec\";\nimport {Recon} from \"../Recon\";\nimport {AttrWriter} from \"./AttrWriter\";\nimport {SlotWriter} from \"./SlotWriter\";\nimport {BlockWriter} from \"./BlockWriter\";\nimport {PrimaryWriter} from \"./PrimaryWriter\";\nimport {MarkupTextWriter} from \"./MarkupTextWriter\";\nimport {DataWriter} from \"./DataWriter\";\nimport {IdentWriter} from \"./IdentWriter\";\nimport {StringWriter} from \"./StringWriter\";\nimport {LambdaFuncWriter} from \"./LambdaFuncWriter\";\nimport {ConditionalOperatorWriter} from \"./ConditionalOperatorWriter\";\nimport {InfixOperatorWriter} from \"./InfixOperatorWriter\";\nimport {PrefixOperatorWriter} from \"./PrefixOperatorWriter\";\nimport {InvokeOperatorWriter} from \"./InvokeOperatorWriter\";\nimport {LiteralSelectorWriter} from \"./LiteralSelectorWriter\";\nimport {GetSelectorWriter} from \"./GetSelectorWriter\";\nimport {GetAttrSelectorWriter} from \"./GetAttrSelectorWriter\";\nimport {GetItemSelectorWriter} from \"./GetItemSelectorWriter\";\nimport {KeysSelectorWriter} from \"./KeysSelectorWriter\";\nimport {ValuesSelectorWriter} from \"./ValuesSelectorWriter\";\nimport {ChildrenSelectorWriter} from \"./ChildrenSelectorWriter\";\nimport {DescendantsSelectorWriter} from \"./DescendantsSelectorWriter\";\nimport {FilterSelectorWriter} from \"./FilterSelectorWriter\";\n\n/**\n * Factory for constructing Recon writers.\n */\nexport abstract class ReconWriter<I, V> {\n  abstract isField(item: I): boolean;\n\n  abstract isAttr(item: I): boolean;\n\n  abstract isSlot(item: I): boolean;\n\n  abstract isValue(item: I): boolean;\n\n  abstract isRecord(item: I): boolean;\n\n  abstract isText(item: I): boolean;\n\n  abstract isNum(item: I): boolean;\n\n  abstract isBool(item: I): boolean;\n\n  abstract isExpression(item: I): boolean;\n\n  abstract isExtant(item: I): boolean;\n\n  abstract items(item: I): Cursor<I>;\n\n  abstract item(value: V): I;\n\n  abstract key(item: I): V;\n\n  abstract value(item: I): V;\n\n  abstract string(item: I): string;\n\n  abstract precedence(item: I): number;\n\n  abstract sizeOfItem(item: I): number;\n\n  abstract writeItem(item: I, output: Output): Writer;\n\n  abstract sizeOfValue(value: V): number;\n\n  abstract writeValue(value: V, output: Output): Writer;\n\n  abstract sizeOfBlockValue(value: V): number;\n\n  abstract writeBlockValue(value: V, output: Output): Writer;\n\n  sizeOfAttr(key: V, value: V): number {\n    return AttrWriter.sizeOf(this, key, value);\n  }\n\n  writeAttr(key: V, value: V, output: Output): Writer {\n    return AttrWriter.write(output, this, key, value);\n  }\n\n  sizeOfSlot(key: V, value: V): number {\n    return SlotWriter.sizeOf(this, key, value);\n  }\n\n  writeSlot(key: V, value: V, output: Output): Writer {\n    return SlotWriter.write(output, this, key, value);\n  }\n\n  abstract sizeOfBlockItem(item: I): number;\n\n  abstract writeBlockItem(item: I, output: Output): Writer;\n\n  sizeOfBlock(item: I): number;\n  sizeOfBlock(items: Cursor<I>, inBlock: boolean, inMarkup: boolean): number;\n  sizeOfBlock(item: I | Cursor<I>, inBlock?: boolean, inMarkup?: boolean): number {\n    if (arguments.length === 3) {\n      return BlockWriter.sizeOf(this, item as Cursor<I>, inBlock!, inMarkup!);\n    } else {\n      const items = this.items(item as I);\n      if (items.hasNext()) {\n        return BlockWriter.sizeOf(this, items, this.isBlockSafe(this.items(item as I)), false);\n      } else {\n        return 2; // \"{}\"\n      }\n    }\n  }\n\n  writeBlock(item: I, output: Output): Writer;\n  writeBlock(items: Cursor<I>, output: Output, inBlock: boolean, inMarkup: boolean): Writer;\n  writeBlock(item: I | Cursor<I>, output: Output, inBlock?: boolean, inMarkup?: boolean): Writer {\n    if (arguments.length === 4) {\n      return BlockWriter.write(output, this, item as Cursor<I>, inBlock!, inMarkup!);\n    } else {\n      const items = this.items(item as I);\n      if (items.hasNext()) {\n        return BlockWriter.write(output, this, items, this.isBlockSafe(this.items(item as I)), false);\n      } else {\n        return Unicode.writeString(\"{}\", output);\n      }\n    }\n  }\n\n  sizeOfRecord(item: I): number {\n    const items = this.items(item);\n    if (items.hasNext()) {\n      return BlockWriter.sizeOf(this, items, false, false);\n    } else {\n      return 2; // \"{}\"\n    }\n  }\n\n  writeRecord(item: I, output: Output): Writer {\n    const items = this.items(item);\n    if (items.hasNext()) {\n      return BlockWriter.write(output, this, items, false, false);\n    } else {\n      return Unicode.writeString(\"{}\", output);\n    }\n  }\n\n  sizeOfPrimary(value: V): number {\n    if (this.isRecord(this.item(value))) {\n      const items = this.items(this.item(value));\n      if (items.hasNext()) {\n        return PrimaryWriter.sizeOf(this, items);\n      }\n    } else if (!this.isExtant(this.item(value))) {\n      return this.sizeOfValue(value);\n    }\n    return 2; // \"()\"\n  }\n\n  writePrimary(value: V, output: Output): Writer {\n    if (this.isRecord(this.item(value))) {\n      const items = this.items(this.item(value));\n      if (items.hasNext()) {\n        return PrimaryWriter.write(output, this, items);\n      }\n    } else if (!this.isExtant(this.item(value))) {\n      return this.writeValue(value, output);\n    }\n    return Unicode.writeString(\"()\", output);\n  }\n\n  isBlockSafe(items: Cursor<I>): boolean {\n    while (items.hasNext()) {\n      if (this.isAttr(items.next().value!)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isMarkupSafe(items: Cursor<I>): boolean {\n    if (!items.hasNext() || !this.isAttr(items.next().value!)) {\n      return false;\n    }\n    while (items.hasNext()) {\n      if (this.isAttr(items.next().value!)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  sizeOfMarkupText(item: I | string): number {\n    if (typeof item !== \"string\") {\n      item = this.string(item);\n    }\n    return MarkupTextWriter.sizeOf(item);\n  }\n\n  writeMarkupText(item: I | string, output: Output): Writer {\n    if (typeof item !== \"string\") {\n      item = this.string(item);\n    }\n    return MarkupTextWriter.write(output, item);\n  }\n\n  sizeOfData(length: number): number {\n    return DataWriter.sizeOf(length);\n  }\n\n  writeData(value: Uint8Array | undefined, output: Output): Writer {\n    if (value !== void 0) {\n      return DataWriter.write(output, value);\n    } else {\n      return Unicode.writeString(\"%\", output);\n    }\n  }\n\n  isIdent(value: I | string): boolean {\n    if (typeof value !== \"string\") {\n      value = this.string(value);\n    }\n    const n = value.length;\n    let c: number | undefined;\n    if (n === 0 || (c = value.codePointAt(0), c !== void 0 && !Recon.isIdentStartChar(c))) {\n      return false;\n    }\n    for (let i = value.offsetByCodePoints(0, 1); i < n; i = value.offsetByCodePoints(i, 1)) {\n      c = value.codePointAt(i);\n      if (c === void 0 || !Recon.isIdentChar(c)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  sizeOfText(value: string): number {\n    if (this.isIdent(value)) {\n      return IdentWriter.sizeOf(value);\n    } else {\n      return StringWriter.sizeOf(value);\n    }\n  }\n\n  writeText(value: string, output: Output): Writer {\n    if (this.isIdent(value)) {\n      return IdentWriter.write(output, value);\n    } else {\n      return StringWriter.write(output, value);\n    }\n  }\n\n  sizeOfNum(value: number): number {\n    if (isFinite(value) && Math.floor(value) === value && Math.abs(value) < 2147483648) {\n      let size = Base10.countDigits(value);\n      if (value < 0) {\n        size += 1;\n      }\n      return size;\n    } else {\n      return (\"\" + value).length;\n    }\n  }\n\n  writeNum(value: number, output: Output): Writer {\n    if (isFinite(value) && Math.floor(value) === value && Math.abs(value) < 2147483648) {\n      return Base10.writeInteger(value, output);\n    } else {\n      return Unicode.writeString(\"\" + value, output);\n    }\n  }\n\n  sizeOfUint32(value: number): number {\n    return 10;\n  }\n\n  writeUint32(value: number, output: Output): Writer {\n    return Base16.lowercase.writeIntegerLiteral(value, output, 8);\n  }\n\n  sizeOfUint64(value: number): number {\n    return 18;\n  }\n\n  writeUint64(value: number, output: Output): Writer {\n    return Base16.lowercase.writeIntegerLiteral(value, output, 16);\n  }\n\n  sizeOfBool(value: boolean): number {\n    return value ? 4 : 5;\n  }\n\n  writeBool(value: boolean, output: Output): Writer {\n    return Unicode.writeString(value ? \"true\" : \"false\", output);\n  }\n\n  sizeOfLambdaFunc(bindings: V, template: V): number {\n    return LambdaFuncWriter.sizeOf(this, bindings, template);\n  }\n\n  writeLambdaFunc(bindings: V, template: V, output: Output): Writer {\n    return LambdaFuncWriter.write(output, this, bindings, template);\n  }\n\n  sizeOfConditionalOperator(ifTerm: I, thenTerm: I, elseTerm: I, precedence: number): number {\n    return ConditionalOperatorWriter.sizeOf(this, ifTerm, thenTerm, elseTerm, precedence);\n  }\n\n  writeConditionalOperator(ifTerm: I, thenTerm: I, elseTerm: I, precedence: number, output: Output): Writer {\n    return ConditionalOperatorWriter.write(output, this, ifTerm, thenTerm, elseTerm, precedence);\n  }\n\n  sizeOfInfixOperator(lhs: I, operator: string, rhs: I, precedence: number): number {\n    return InfixOperatorWriter.sizeOf(this, lhs, operator, rhs, precedence);\n  }\n\n  writeInfixOperator(lhs: I, operator: string, rhs: I, precedence: number, output: Output): Writer {\n    return InfixOperatorWriter.write(output, this, lhs, operator, rhs, precedence);\n  }\n\n  sizeOfPrefixOperator(operator: string, rhs: I, precedence: number): number {\n    return PrefixOperatorWriter.sizeOf(this, operator, rhs, precedence);\n  }\n\n  writePrefixOperator(operator: string, rhs: I, precedence: number, output: Output): Writer {\n    return PrefixOperatorWriter.write(output, this, operator, rhs, precedence);\n  }\n\n  sizeOfInvokeOperator(func: V, args: V): number {\n    return InvokeOperatorWriter.sizeOf(this, func, args);\n  }\n\n  writeInvokeOperator(func: V, args: V, output: Output): Writer {\n    return InvokeOperatorWriter.write(output, this, func, args);\n  }\n\n  abstract sizeOfThen(then: V): number;\n\n  abstract writeThen(then: V, output: Output): Writer;\n\n  sizeOfIdentitySelector(): number {\n    return 0;\n  }\n\n  writeIdentitySelector(output: Output): Writer {\n    return Writer.end();\n  }\n\n  sizeOfThenIdentitySelector(): number {\n    return 0;\n  }\n\n  writeThenIdentitySelector(output: Output): Writer {\n    return Writer.end();\n  }\n\n  sizeOfLiteralSelector(item: I, then: V): number {\n    return LiteralSelectorWriter.sizeOf(this, item, then);\n  }\n\n  writeLiteralSelector(item: I, then: V, output: Output): Writer {\n    return LiteralSelectorWriter.write(output, this, item, then);\n  }\n\n  sizeOfThenLiteralSelector(item: I, then: V): number {\n    return 0;\n  }\n\n  writeThenLiteralSelector(item: I, then: V, output: Output): Writer {\n    return Writer.end();\n  }\n\n  sizeOfGetSelector(key: V, then: V): number {\n    return GetSelectorWriter.sizeOf(this, key, then);\n  }\n\n  writeGetSelector(key: V, then: V, output: Output): Writer {\n    return GetSelectorWriter.write(output, this, key, then);\n  }\n\n  sizeOfThenGetSelector(key: V, then: V): number {\n    return GetSelectorWriter.sizeOf(this, key, then);\n  }\n\n  writeThenGetSelector(key: V, then: V, output: Output): Writer {\n    return GetSelectorWriter.writeThen(output, this, key, then);\n  }\n\n  sizeOfGetAttrSelector(key: V, then: V): number {\n    return GetAttrSelectorWriter.sizeOf(this, key, then);\n  }\n\n  writeGetAttrSelector(key: V, then: V, output: Output): Writer {\n    return GetAttrSelectorWriter.write(output, this, key, then);\n  }\n\n  sizeOfThenGetAttrSelector(key: V, then: V): number {\n    return GetAttrSelectorWriter.sizeOf(this, key, then);\n  }\n\n  writeThenGetAttrSelector(key: V, then: V, output: Output): Writer {\n    return GetAttrSelectorWriter.writeThen(output, this, key, then);\n  }\n\n  sizeOfGetItemSelector(index: V, then: V): number {\n    return GetItemSelectorWriter.sizeOf(this, index, then);\n  }\n\n  writeGetItemSelector(index: V, then: V, output: Output): Writer {\n    return GetItemSelectorWriter.write(output, this, index, then);\n  }\n\n  sizeOfThenGetItemSelector(index: V, then: V): number {\n    return GetItemSelectorWriter.sizeOfThen(this, index, then);\n  }\n\n  writeThenGetItemSelector(index: V, then: V, output: Output): Writer {\n    return GetItemSelectorWriter.writeThen(output, this, index, then);\n  }\n\n  sizeOfKeysSelector(then: V): number {\n    return KeysSelectorWriter.sizeOf(this, then);\n  }\n\n  writeKeysSelector(then: V, output: Output): Writer {\n    return KeysSelectorWriter.write(output, this, then);\n  }\n\n  sizeOfThenKeysSelector(then: V): number {\n    return KeysSelectorWriter.sizeOf(this, then);\n  }\n\n  writeThenKeysSelector(then: V, output: Output): Writer {\n    return KeysSelectorWriter.writeThen(output, this, then);\n  }\n\n  sizeOfValuesSelector(then: V): number {\n    return ValuesSelectorWriter.sizeOf(this, then);\n  }\n\n  writeValuesSelector(then: V, output: Output): Writer {\n    return ValuesSelectorWriter.write(output, this, then);\n  }\n\n  sizeOfThenValuesSelector(then: V): number {\n    return ValuesSelectorWriter.sizeOf(this, then);\n  }\n\n  writeThenValuesSelector(then: V, output: Output): Writer {\n    return ValuesSelectorWriter.writeThen(output, this, then);\n  }\n\n  sizeOfChildrenSelector(then: V): number {\n    return ChildrenSelectorWriter.sizeOf(this, then);\n  }\n\n  writeChildrenSelector(then: V, output: Output): Writer {\n    return ChildrenSelectorWriter.write(output, this, then);\n  }\n\n  sizeOfThenChildrenSelector(then: V): number {\n    return ChildrenSelectorWriter.sizeOf(this, then);\n  }\n\n  writeThenChildrenSelector(then: V, output: Output): Writer {\n    return ChildrenSelectorWriter.writeThen(output, this, then);\n  }\n\n  sizeOfDescendantsSelector(then: V): number {\n    return DescendantsSelectorWriter.sizeOf(this, then);\n  }\n\n  writeDescendantsSelector(then: V, output: Output): Writer {\n    return DescendantsSelectorWriter.write(output, this, then);\n  }\n\n  sizeOfThenDescendantsSelector(then: V): number {\n    return DescendantsSelectorWriter.sizeOf(this, then);\n  }\n\n  writeThenDescendantsSelector(then: V, output: Output): Writer {\n    return DescendantsSelectorWriter.writeThen(output, this, then);\n  }\n\n  sizeOfFilterSelector(predicate: V, then: V): number {\n    return FilterSelectorWriter.sizeOf(this, predicate, then);\n  }\n\n  writeFilterSelector(predicate: V, then: V, output: Output): Writer {\n    return FilterSelectorWriter.write(output, this, predicate, then);\n  }\n\n  sizeOfThenFilterSelector(predicate: V, then: V): number {\n    return FilterSelectorWriter.sizeOfThen(this, predicate, then);\n  }\n\n  writeThenFilterSelector(predicate: V, then: V, output: Output): Writer {\n    return FilterSelectorWriter.writeThen(output, this, predicate, then);\n  }\n\n  sizeOfExtant(): number {\n    return 0;\n  }\n\n  writeExtant(output: Output): Writer {\n    return Writer.end();\n  }\n\n  sizeOfAbsent(): number {\n    return 0;\n  }\n\n  writeAbsent(output: Output): Writer {\n    return Writer.end();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {Output, WriterException, Writer} from \"@swim/codec\";\nimport {\n  Item,\n  Field,\n  Attr,\n  Slot,\n  Value,\n  Record,\n  Data,\n  Text,\n  Num,\n  Bool,\n  Expression,\n  Operator,\n  Selector,\n  Func,\n  Extant,\n  Absent,\n  ChildrenSelector,\n  DescendantsSelector,\n  FilterSelector,\n  GetAttrSelector,\n  GetItemSelector,\n  GetSelector,\n  IdentitySelector,\n  KeysSelector,\n  LiteralSelector,\n  ValuesSelector,\n  BinaryOperator,\n  ConditionalOperator,\n  InvokeOperator,\n  UnaryOperator,\n  BridgeFunc,\n  LambdaFunc,\n} from \"@swim/structure\";\nimport {ReconWriter} from \"./ReconWriter\";\n\nexport class ReconStructureWriter extends ReconWriter<Item, Value> {\n  override isField(item: Item): boolean {\n    return item instanceof Field;\n  }\n\n  override isAttr(item: Item): boolean {\n    return item instanceof Attr;\n  }\n\n  override isSlot(item: Item): boolean {\n    return item instanceof Slot;\n  }\n\n  override isValue(item: Item): boolean {\n    return item instanceof Value;\n  }\n\n  override isRecord(item: Item): boolean {\n    return item instanceof Record;\n  }\n\n  override isText(item: Item): boolean {\n    return item instanceof Text;\n  }\n\n  override isNum(item: Item): boolean {\n    return item instanceof Num;\n  }\n\n  override isBool(item: Item): boolean {\n    return item instanceof Bool;\n  }\n\n  override isExpression(item: Item): boolean {\n    return item instanceof Expression;\n  }\n\n  override isExtant(item: Item): boolean {\n    return item instanceof Extant;\n  }\n\n  override items(item: Item): Cursor<Item> {\n    return item.iterator();\n  }\n\n  override item(value: Value): Item {\n    return value;\n  }\n\n  override key(item: Item): Value {\n    return item.key;\n  }\n\n  override value(item: Item): Value {\n    return item.toValue();\n  }\n\n  override string(item: Item): string {\n    return item.stringValue(\"\");\n  }\n\n  override precedence(item: Item): number {\n    return item.precedence;\n  }\n\n  override sizeOfItem(item: Item): number {\n    if (item instanceof Field) {\n      if (item instanceof Attr) {\n        return this.sizeOfAttr(item.key, item.value);\n      } else if (item instanceof Slot) {\n        return this.sizeOfSlot(item.key, item.value);\n      }\n    } else if (item instanceof Value) {\n      return this.sizeOfValue(item);\n    }\n    throw new WriterException(\"No Recon serialization for \" + item);\n  }\n\n  override writeItem(item: Item, output: Output): Writer {\n    if (item instanceof Field) {\n      if (item instanceof Attr) {\n        return this.writeAttr(item.key, item.value, output);\n      } else if (item instanceof Slot) {\n        return this.writeSlot(item.key, item.value, output);\n      }\n    } else if (item instanceof Value) {\n      return this.writeValue(item, output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + item));\n  }\n\n  override sizeOfValue(value: Value): number {\n    if (value instanceof Record) {\n      return this.sizeOfRecord(value);\n    } else if (value instanceof Data) {\n      return this.sizeOfData(value.size);\n    } else if (value instanceof Text) {\n      return this.sizeOfText(value.value);\n    } else if (value instanceof Num) {\n      if (value.isUint32()) {\n        return this.sizeOfUint32(value.value);\n      } else if (value.isUint64()) {\n        return this.sizeOfUint64(value.value);\n      } else {\n        return this.sizeOfNum(value.value);\n      }\n    } else if (value instanceof Bool) {\n      return this.sizeOfBool(value.value);\n    } else if (value instanceof Selector) {\n      return this.sizeOfSelector(value);\n    } else if (value instanceof Operator) {\n      return this.sizeOfOperator(value);\n    } else if (value instanceof Func) {\n      return this.sizeOfFunc(value);\n    } else if (value instanceof Extant) {\n      return this.sizeOfExtant();\n    } else if (value instanceof Absent) {\n      return this.sizeOfAbsent();\n    }\n    throw new WriterException(\"No Recon serialization for \" + value);\n  }\n\n  override writeValue(value: Value, output: Output): Writer {\n    if (value instanceof Record) {\n      return this.writeRecord(value, output);\n    } else if (value instanceof Data) {\n      return this.writeData(value.asUint8Array(), output);\n    } else if (value instanceof Text) {\n      return this.writeText(value.value, output);\n    } else if (value instanceof Num) {\n      if (value.isUint32()) {\n        return this.writeUint32(value.value, output);\n      } else if (value.isUint64()) {\n        return this.writeUint64(value.value, output);\n      } else {\n        return this.writeNum(value.value, output);\n      }\n    } else if (value instanceof Bool) {\n      return this.writeBool(value.value, output);\n    } else if (value instanceof Selector) {\n      return this.writeSelector(value, output);\n    } else if (value instanceof Operator) {\n      return this.writeOperator(value, output);\n    } else if (value instanceof Func) {\n      return this.writeFunc(value, output);\n    } else if (value instanceof Extant) {\n      return this.writeExtant(output);\n    } else if (value instanceof Absent) {\n      return this.writeAbsent(output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + value));\n  }\n\n  sizeOfSelector(selector: Selector): number {\n    if (selector instanceof IdentitySelector) {\n      return this.sizeOfIdentitySelector();\n    } else if (selector instanceof LiteralSelector) {\n      return this.sizeOfLiteralSelector(selector.item, selector.then);\n    } else if (selector instanceof GetSelector) {\n      return this.sizeOfGetSelector(selector.item, selector.then);\n    } else if (selector instanceof GetAttrSelector) {\n      return this.sizeOfGetAttrSelector(selector.item, selector.then);\n    } else if (selector instanceof GetItemSelector) {\n      return this.sizeOfGetItemSelector(selector.item, selector.then);\n    } else if (selector instanceof KeysSelector) {\n      return this.sizeOfKeysSelector(selector.then);\n    } else if (selector instanceof ValuesSelector) {\n      return this.sizeOfValuesSelector(selector.then);\n    } else if (selector instanceof ChildrenSelector) {\n      return this.sizeOfChildrenSelector(selector.then);\n    } else if (selector instanceof DescendantsSelector) {\n      return this.sizeOfDescendantsSelector(selector.then);\n    } else if (selector instanceof FilterSelector) {\n      return this.sizeOfFilterSelector(selector.predicate, selector.then);\n    }\n    throw new WriterException(\"No Recon serialization for \" + selector);\n  }\n\n  writeSelector(selector: Selector, output: Output): Writer {\n    if (selector instanceof IdentitySelector) {\n      return this.writeIdentitySelector(output);\n    } else if (selector instanceof LiteralSelector) {\n      return this.writeLiteralSelector(selector.item, selector.then, output);\n    } else if (selector instanceof GetSelector) {\n      return this.writeGetSelector(selector.item, selector.then, output);\n    } else if (selector instanceof GetAttrSelector) {\n      return this.writeGetAttrSelector(selector.item, selector.then, output);\n    } else if (selector instanceof GetItemSelector) {\n      return this.writeGetItemSelector(selector.item, selector.then, output);\n    } else if (selector instanceof KeysSelector) {\n      return this.writeKeysSelector(selector.then, output);\n    } else if (selector instanceof ValuesSelector) {\n      return this.writeValuesSelector(selector.then, output);\n    } else if (selector instanceof ChildrenSelector) {\n      return this.writeChildrenSelector(selector.then, output);\n    } else if (selector instanceof DescendantsSelector) {\n      return this.writeDescendantsSelector(selector.then, output);\n    } else if (selector instanceof FilterSelector) {\n      return this.writeFilterSelector(selector.predicate, selector.then, output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + selector));\n  }\n\n  sizeOfOperator(operator: Operator): number {\n    if (operator instanceof BinaryOperator) {\n      return this.sizeOfInfixOperator(operator.operand1, operator.operator, operator.operand2, operator.precedence);\n    } else if (operator instanceof UnaryOperator) {\n      return this.sizeOfPrefixOperator(operator.operator, operator.operand, operator.precedence);\n    } else if (operator instanceof InvokeOperator) {\n      return this.sizeOfInvokeOperator(operator.func, operator.args);\n    } else if (operator instanceof ConditionalOperator) {\n      return this.sizeOfConditionalOperator(operator.ifTerm, operator.thenTerm, operator.elseTerm, operator.precedence);\n    }\n    throw new WriterException(\"No Recon serialization for \" + operator);\n  }\n\n  writeOperator(operator: Operator, output: Output): Writer {\n    if (operator instanceof BinaryOperator) {\n      return this.writeInfixOperator(operator.operand1, operator.operator, operator.operand2, operator.precedence, output);\n    } else if (operator instanceof UnaryOperator) {\n      return this.writePrefixOperator(operator.operator, operator.operand, operator.precedence, output);\n    } else if (operator instanceof InvokeOperator) {\n      return this.writeInvokeOperator(operator.func, operator.args, output);\n    } else if (operator instanceof ConditionalOperator) {\n      return this.writeConditionalOperator(operator.ifTerm, operator.thenTerm, operator.elseTerm, operator.precedence, output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + operator));\n  }\n\n  sizeOfFunc(func: Func): number {\n    if (func instanceof LambdaFunc) {\n      return this.sizeOfLambdaFunc(func.bindings, func.template);\n    } else if (func instanceof BridgeFunc) {\n      return 0;\n    }\n    throw new WriterException(\"No Recon serialization for \" + func);\n  }\n\n  writeFunc(func: Func, output: Output): Writer {\n    if (func instanceof LambdaFunc) {\n      return this.writeLambdaFunc(func.bindings, func.template, output);\n    } else if (func instanceof BridgeFunc) {\n      return Writer.end();\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + func));\n  }\n\n  override sizeOfBlockItem(item: Item): number {\n    if (item instanceof Field) {\n      return this.sizeOfItem(item);\n    } else if (item instanceof Value) {\n      return this.sizeOfBlockValue(item);\n    }\n    throw new WriterException(\"No Recon serialization for \" + item);\n  }\n\n  override writeBlockItem(item: Item, output: Output): Writer {\n    if (item instanceof Field) {\n      return this.writeItem(item, output);\n    } else if (item instanceof Value) {\n      return this.writeBlockValue(item, output);\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + item));\n  }\n\n  override sizeOfBlockValue(value: Value): number {\n    if (value instanceof Record) {\n      return this.sizeOfBlock(value);\n    }\n    return this.sizeOfValue(value);\n  }\n\n  override writeBlockValue(value: Value, output: Output): Writer {\n    if (value instanceof Record) {\n      return this.writeBlock(value, output);\n    }\n    return this.writeValue(value, output);\n  }\n\n  override sizeOfThen(then: Value): number {\n    if (then instanceof Selector) {\n      if (then instanceof IdentitySelector) {\n        return this.sizeOfThenIdentitySelector();\n      } else if (then instanceof LiteralSelector) {\n        return this.sizeOfThenLiteralSelector(then.item, then.then);\n      } else if (then instanceof GetSelector) {\n        return this.sizeOfThenGetSelector(then.item, then.then);\n      } else if (then instanceof GetAttrSelector) {\n        return this.sizeOfThenGetAttrSelector(then.item, then.then);\n      } else if (then instanceof GetItemSelector) {\n        return this.sizeOfThenGetItemSelector(then.item, then.then);\n      } else if (then instanceof KeysSelector) {\n        return this.sizeOfThenKeysSelector(then.then);\n      } else if (then instanceof ValuesSelector) {\n        return this.sizeOfThenValuesSelector(then.then);\n      } else if (then instanceof ChildrenSelector) {\n        return this.sizeOfThenChildrenSelector(then.then);\n      } else if (then instanceof DescendantsSelector) {\n        return this.sizeOfThenDescendantsSelector(then.then);\n      } else if (then instanceof FilterSelector) {\n        return this.sizeOfThenFilterSelector(then.predicate, then.then);\n      }\n    }\n    throw new WriterException(\"No Recon serialization for \" + then);\n  }\n\n  override writeThen(then: Value, output: Output): Writer {\n    if (then instanceof Selector) {\n      if (then instanceof IdentitySelector) {\n        return this.writeThenIdentitySelector(output);\n      } else if (then instanceof LiteralSelector) {\n        return this.writeThenLiteralSelector(then.item, then.then, output);\n      } else if (then instanceof GetSelector) {\n        return this.writeThenGetSelector(then.item, then.then, output);\n      } else if (then instanceof GetAttrSelector) {\n        return this.writeThenGetAttrSelector(then.item, then.then, output);\n      } else if (then instanceof GetItemSelector) {\n        return this.writeThenGetItemSelector(then.item, then.then, output);\n      } else if (then instanceof KeysSelector) {\n        return this.writeThenKeysSelector(then.then, output);\n      } else if (then instanceof ValuesSelector) {\n        return this.writeThenValuesSelector(then.then, output);\n      } else if (then instanceof ChildrenSelector) {\n        return this.writeThenChildrenSelector(then.then, output);\n      } else if (then instanceof DescendantsSelector) {\n        return this.writeThenDescendantsSelector(then.then, output);\n      } else if (then instanceof FilterSelector) {\n        return this.writeThenFilterSelector(then.predicate, then.then, output);\n      }\n    }\n    return Writer.error(new WriterException(\"No Recon serialization for \" + then));\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Diagnostic} from \"@swim/codec\";\n\nexport class UriException extends Error {\n  readonly diagnostic!: Diagnostic | null;\n\n  constructor(message?: Diagnostic | string) {\n    super(message instanceof Diagnostic ? message.message : message);\n    Object.setPrototypeOf(this, UriException.prototype);\n    Object.defineProperty(this, \"diagnostic\", {\n      value: message instanceof Diagnostic ? message : null,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override toString(): string {\n    if (this.diagnostic !== null) {\n      return this.diagnostic.toString();\n    } else {\n      return super.toString();\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Compare, Lazy, Strings} from \"@swim/util\";\nimport {Output, Format, Debug, Display, Base16} from \"@swim/codec\";\nimport type {Form} from \"@swim/structure\";\nimport {UriException} from \"./UriException\";\nimport {AnyUriScheme, UriScheme} from \"./\"; // forward import\nimport {AnyUriAuthority, UriAuthorityInit, UriAuthority} from \"./\"; // forward import\nimport type {AnyUriUser, UriUser} from \"./UriUser\";\nimport type {AnyUriHost, UriHost} from \"./UriHost\";\nimport type {AnyUriPort, UriPort} from \"./UriPort\";\nimport {AnyUriPath, UriPath} from \"./\"; // forward import\nimport {UriPathBuilder} from \"./\"; // forward import\nimport {AnyUriQuery, UriQuery} from \"./\"; // forward import\nimport {UriQueryBuilder} from \"./\"; // forward import\nimport {AnyUriFragment, UriFragment} from \"./\"; // forward import\nimport {UriForm} from \"./\"; // forward import\nimport {UriParser} from \"./\"; // forward import\n\nexport type AnyUri = Uri | UriInit | string;\n\nexport interface UriInit extends UriAuthorityInit {\n  scheme?: AnyUriScheme;\n  authority?: AnyUriAuthority;\n  path?: AnyUriPath;\n  query?: AnyUriQuery;\n  fragment?: AnyUriFragment;\n}\n\nexport class Uri implements HashCode, Compare, Debug, Display {\n  /** @hidden */\n  constructor(scheme: UriScheme, authority: UriAuthority, path: UriPath,\n              query: UriQuery, fragment: UriFragment) {\n    Object.defineProperty(this, \"scheme\", {\n      value: scheme,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"authority\", {\n      value: authority,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"path\", {\n      value: path,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"query\", {\n      value: query,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"fragment\", {\n      value: fragment,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"hashValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return this.scheme.isDefined() || this.authority.isDefined() || this.path.isDefined()\n        || this.query.isDefined() || this.fragment.isDefined();\n  }\n\n  isEmpty(): boolean {\n    return !this.scheme.isDefined() && !this.authority.isDefined() && this.path.isEmpty()\n        && !this.query.isDefined() && !this.fragment.isDefined();\n  }\n\n  readonly scheme!: UriScheme;\n\n  withScheme(scheme: AnyUriScheme): Uri {\n    scheme = UriScheme.fromAny(scheme);\n    if (scheme !== this.scheme) {\n      return this.copy(scheme, this.authority, this.path, this.query, this.fragment);\n    } else {\n      return this;\n    }\n  }\n\n  get schemePart(): string {\n    return this.scheme.toString();\n  }\n\n  withSchemePart(schemePart: string): Uri {\n    return this.withScheme(UriScheme.parse(schemePart));\n  }\n\n  get schemeName(): string {\n    return this.scheme.name;\n  }\n\n  withSchemeName(schemeName: string): Uri {\n    return this.withScheme(UriScheme.create(schemeName));\n  }\n\n  readonly authority!: UriAuthority;\n\n  withAuthority(authority: AnyUriAuthority): Uri {\n    authority = UriAuthority.fromAny(authority);\n    if (authority !== this.authority) {\n      return this.copy(this.scheme, authority as UriAuthority, this.path, this.query, this.fragment);\n    } else {\n      return this;\n    }\n  }\n\n  get authorityPart(): string {\n    return this.authority.toString();\n  }\n\n  withAuthorityPart(authorityPart: string): Uri {\n    return this.withAuthority(UriAuthority.parse(authorityPart));\n  }\n\n  get user(): UriUser {\n    return this.authority.user;\n  }\n\n  withUser(user: AnyUriUser): Uri {\n    return this.withAuthority(this.authority.withUser(user));\n  }\n\n  get userPart(): string {\n    return this.authority.userPart;\n  }\n\n  withUserPart(userPart: string): Uri {\n    return this.withAuthority(this.authority.withUserPart(userPart));\n  }\n\n  get username(): string | undefined {\n    return this.authority.username;\n  }\n\n  withUsername(username: string | undefined, password?: string): Uri {\n    if (arguments.length === 1) {\n      return this.withAuthority(this.authority.withUsername(username));\n    } else {\n      return this.withAuthority(this.authority.withUsername(username, password));\n    }\n  }\n\n  get password(): string | undefined {\n    return this.authority.password;\n  }\n\n  withPassword(password: string | undefined): Uri {\n    return this.withAuthority(this.authority.withPassword(password));\n  }\n\n  get host(): UriHost {\n    return this.authority.host;\n  }\n\n  withHost(host: AnyUriHost): Uri {\n    return this.withAuthority(this.authority.withHost(host));\n  }\n\n  get hostPart(): string {\n    return this.authority.hostPart;\n  }\n\n  withHostPart(hostPart: string): Uri {\n    return this.withAuthority(this.authority.withHostPart(hostPart));\n  }\n\n  get hostAddress(): string {\n    return this.authority.hostAddress;\n  }\n\n  get hostName(): string | undefined {\n    return this.authority.hostName;\n  }\n\n  withHostName(hostName: string): Uri {\n    return this.withAuthority(this.authority.withHostName(hostName));\n  }\n\n  get hostIPv4(): string | undefined {\n    return this.authority.hostIPv4;\n  }\n\n  withHostIPv4(hostIPv4: string): Uri {\n    return this.withAuthority(this.authority.withHostIPv4(hostIPv4));\n  }\n\n  get hostIPv6(): string | undefined {\n    return this.authority.hostIPv6;\n  }\n\n  withHostIPv6(hostIPv6: string): Uri {\n    return this.withAuthority(this.authority.withHostIPv6(hostIPv6));\n  }\n\n  get port(): UriPort {\n    return this.authority.port;\n  }\n\n  withPort(port: AnyUriPort): Uri {\n    return this.withAuthority(this.authority.withPort(port));\n  }\n\n  get portPart(): string {\n    return this.authority.portPart;\n  }\n\n  withPortPart(portPart: string): Uri {\n    return this.withAuthority(this.authority.withPortPart(portPart));\n  }\n\n  get portNumber(): number {\n    return this.authority.portNumber;\n  }\n\n  withPortNumber(portNumber: number): Uri {\n    return this.withAuthority(this.authority.withPortNumber(portNumber));\n  }\n\n  readonly path!: UriPath;\n\n  withPath(...components: AnyUriPath[]): Uri {\n    const path = UriPath.of(...components);\n    if (path !== this.path) {\n      return this.copy(this.scheme, this.authority, path, this.query, this.fragment);\n    } else {\n      return this;\n    }\n  }\n\n  get pathPart(): string {\n    return this.path.toString();\n  }\n\n  withPathPart(pathPart: string): Uri {\n    return this.withPath(UriPath.parse(pathPart));\n  }\n\n  get pathName(): string {\n    return this.path.name;\n  }\n\n  withPathName(pathName: string): Uri {\n    return this.withPath(this.path.withName(pathName));\n  }\n\n  parentPath(): UriPath {\n    return this.path.parent();\n  }\n\n  basePath(): UriPath {\n    return this.path.base();\n  }\n\n  parent(): Uri {\n    return Uri.create(this.scheme, this.authority, this.path.parent());\n  }\n\n  base(): Uri {\n    return Uri.create(this.scheme, this.authority, this.path.base());\n  }\n\n  appendedPath(...components: AnyUriPath[]): Uri {\n    return this.withPath(this.path.appended(...components));\n  }\n\n  appendedSlash(): Uri {\n    return this.withPath(this.path.appendedSlash());\n  }\n\n  appendedSegment(segment: string): Uri {\n    return this.withPath(this.path.appendedSegment(segment));\n  }\n\n  prependedPath(...components: AnyUriPath[]): Uri {\n    return this.withPath(this.path.prepended(...components));\n  }\n\n  prependedSlash(): Uri {\n    return this.withPath(this.path.prependedSlash());\n  }\n\n  prependedSegment(segment: string): Uri {\n    return this.withPath(this.path.prependedSegment(segment));\n  }\n\n  readonly query!: UriQuery;\n\n  withQuery(query: AnyUriQuery): Uri {\n    query = UriQuery.fromAny(query);\n    if (query !== this.query) {\n      return this.copy(this.scheme, this.authority, this.path, query, this.fragment);\n    } else {\n      return this;\n    }\n  }\n\n  get queryPart(): string {\n    return this.query.toString();\n  }\n\n  withQueryPart(query: string): Uri {\n    return this.withQuery(UriQuery.parse(query));\n  }\n\n  updatedQuery(key: string, value: string): Uri {\n    return this.withQuery(this.query.updated(key, value));\n  }\n\n  removedQuery(key: string): Uri {\n    return this.withQuery(this.query.removed(key));\n  }\n\n  appendedQuery(key: string | undefined, value: string): Uri;\n  appendedQuery(params: AnyUriQuery): Uri;\n  appendedQuery(key: AnyUriQuery | undefined, value?: string): Uri {\n    return this.withQuery(this.query.appended(key as any, value as any));\n  }\n\n  prependedQuery(key: string | undefined, value: string): Uri;\n  prependedQuery(params: AnyUriQuery): Uri;\n  prependedQuery(key: AnyUriQuery | undefined, value?: string): Uri {\n    return this.withQuery(this.query.prepended(key as any, value as any));\n  }\n\n  readonly fragment!: UriFragment;\n\n  withFragment(fragment: AnyUriFragment): Uri {\n    fragment = UriFragment.fromAny(fragment);\n    if (fragment !== this.fragment) {\n      return Uri.create(this.scheme, this.authority, this.path, this.query, fragment);\n    } else {\n      return this;\n    }\n  }\n\n  get fragmentPart(): string {\n    return this.fragment.toString();\n  }\n\n  withFragmentPart(fragmentPart: string): Uri {\n    return this.withFragment(UriFragment.parse(fragmentPart));\n  }\n\n  get fragmentIdentifier(): string | undefined {\n    return this.fragment.identifier;\n  }\n\n  withFragmentIdentifier(fragmentIdentifier: string | undefined): Uri {\n    return this.withFragment(UriFragment.create(fragmentIdentifier));\n  }\n\n  endpoint(): Uri {\n    if (this.path.isDefined() || this.query.isDefined() || this.fragment.isDefined()) {\n      return Uri.create(this.scheme, this.authority);\n    } else {\n      return this;\n    }\n  }\n\n  resolve(relative: AnyUri): Uri {\n    const that = Uri.fromAny(relative);\n    if (that.scheme.isDefined()) {\n      return this.copy(that.scheme,\n                       that.authority,\n                       that.path.removeDotSegments(),\n                       that.query,\n                       that.fragment);\n    } else if (that.authority.isDefined()) {\n      return this.copy(this.scheme,\n                       that.authority,\n                       that.path.removeDotSegments(),\n                       that.query,\n                       that.fragment);\n    } else if (that.path.isEmpty()) {\n      return this.copy(this.scheme,\n                       this.authority,\n                       this.path,\n                       that.query.isDefined() ? that.query : this.query,\n                       that.fragment);\n    } else if (that.path.isAbsolute()) {\n      return this.copy(this.scheme,\n                       this.authority,\n                       that.path.removeDotSegments(),\n                       that.query,\n                       that.fragment);\n    } else {\n      return this.copy(this.scheme,\n                       this.authority,\n                       this.merge(that.path).removeDotSegments(),\n                       that.query,\n                       that.fragment);\n    }\n  }\n\n  /** @hidden */\n  merge(relative: UriPath): UriPath {\n    if (this.authority.isDefined() && this.path.isEmpty()) {\n      return relative.prependedSlash();\n    } else if (this.path.isEmpty()) {\n      return relative;\n    } else {\n      return this.path.merge(relative);\n    }\n  }\n\n  unresolve(absolute: AnyUri): Uri {\n    const that = Uri.fromAny(absolute);\n    if (!this.scheme.equals(that.scheme) || !this.authority.equals(that.authority)) {\n      return that;\n    } else {\n      return Uri.create(UriScheme.undefined(),\n                        UriAuthority.undefined(),\n                        this.path.unmerge(that.path),\n                        that.query,\n                        that.fragment);\n    }\n  }\n\n  protected copy(scheme: UriScheme, authority: UriAuthority, path: UriPath,\n                 query: UriQuery, fragment: UriFragment): Uri {\n    return Uri.create(scheme, authority, path, query, fragment);\n  }\n\n  toAny(): {scheme?: string, username?: string, password?: string, host?: string,\n            port?: number, path: string[], query?: {[key: string]: string},\n            fragment?: string} {\n    const uri = {} as {scheme?: string, username?: string, password?: string, host?: string,\n                       port?: number, path: string[], query?: {[key: string]: string},\n                       fragment?: string};\n    uri.scheme = this.scheme.toAny();\n    this.authority.toAny(uri);\n    uri.path = this.path.toAny();\n    uri.query = this.query.toAny();\n    uri.fragment = this.fragment.toAny();\n    return uri;\n  }\n\n  compareTo(that: Uri): number {\n    if (that instanceof Uri) {\n      return this.toString().localeCompare(that.toString());\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Uri) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  /** @hidden */\n  readonly hashValue!: number | undefined;\n\n  hashCode(): number {\n    let hashValue = this.hashValue;\n    if (hashValue === void 0) {\n      hashValue = Strings.hash(this.toString());\n      Object.defineProperty(this, \"hashValue\", {\n        value: hashValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return hashValue;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Uri\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  display(output: Output): void {\n    const stringValue = this.stringValue;\n    if (stringValue !== void 0) {\n      output = output.write(stringValue);\n    } else {\n      if (this.scheme.isDefined()) {\n        output.display(this.scheme).write(58/*':'*/);\n      }\n      if (this.authority.isDefined()) {\n        output = output.write(47/*'/'*/).write(47/*'/'*/).display(this.authority);\n      }\n      output.display(this.path);\n      if (this.query.isDefined()) {\n        output = output.write(63/*'?'*/).display(this.query);\n      }\n      if (this.fragment.isDefined()) {\n        output = output.write(35/*'#'*/).display(this.fragment);\n      }\n    }\n  }\n\n  toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = Format.display(this);\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  @Lazy\n  static empty(): Uri {\n    return new Uri(UriScheme.undefined(), UriAuthority.undefined(), UriPath.empty(),\n                   UriQuery.undefined(), UriFragment.undefined());\n  }\n\n  static create(scheme: UriScheme = UriScheme.undefined(),\n                authority: UriAuthority = UriAuthority.undefined(),\n                path: UriPath = UriPath.empty(),\n                query: UriQuery = UriQuery.undefined(),\n                fragment: UriFragment = UriFragment.undefined()): Uri {\n    if (scheme.isDefined() || authority.isDefined() || path.isDefined() ||\n        query.isDefined() || fragment.isDefined()) {\n      return new Uri(scheme, authority, path, query, fragment);\n    } else {\n      return Uri.empty();\n    }\n  }\n\n  static fromInit(init: UriInit): Uri {\n    const scheme = UriScheme.fromAny(init.scheme);\n    const authority = UriAuthority.fromAny(init.authority !== void 0 ? init.authority : init);\n    const path = UriPath.fromAny(init.path);\n    const query = UriQuery.fromAny(init.query);\n    const fragment = UriFragment.fromAny(init.fragment);\n    if (scheme.isDefined() || authority.isDefined() || path.isDefined() ||\n        query.isDefined() || fragment.isDefined()) {\n      return new Uri(scheme, authority, path, query, fragment);\n    } else {\n      return Uri.empty();\n    }\n  }\n\n  static fromAny(value: AnyUri | null | undefined): Uri {\n    if (value === void 0 || value === null) {\n      return Uri.empty();\n    } else if (value instanceof Uri) {\n      return value;\n    } else if (typeof value === \"object\") {\n      return Uri.fromInit(value);\n    } else if (typeof value === \"string\") {\n      return Uri.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static scheme(scheme: AnyUriScheme): Uri {\n    scheme = UriScheme.fromAny(scheme);\n    return Uri.create(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static schemePart(schemePart: string): Uri {\n    const scheme = UriScheme.parse(schemePart);\n    return Uri.create(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static schemeName(name: string): Uri {\n    const scheme = UriScheme.create(name);\n    return Uri.create(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static authority(authority: AnyUriAuthority): Uri {\n    authority = UriAuthority.fromAny(authority);\n    return Uri.create(void 0, authority as UriAuthority, void 0, void 0, void 0);\n  }\n\n  static authorityPart(authorityPart: string): Uri {\n    const authority = UriAuthority.parse(authorityPart);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static user(user: AnyUriUser): Uri {\n    const authority = UriAuthority.user(user);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static userPart(userPart: string): Uri {\n    const authority = UriAuthority.userPart(userPart);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static username(username: string, password?: string): Uri {\n    const authority = UriAuthority.username(username, password);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static password(password: string): Uri {\n    const authority = UriAuthority.password(password);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static host(host: AnyUriHost): Uri {\n    const authority = UriAuthority.host(host);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostPart(hostPart: string): Uri {\n    const authority = UriAuthority.hostPart(hostPart);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostName(hostName: string): Uri {\n    const authority = UriAuthority.hostName(hostName);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostIPv4(hostIPv4: string): Uri {\n    const authority = UriAuthority.hostIPv4(hostIPv4);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostIPv6(hostIPv6: string): Uri {\n    const authority = UriAuthority.hostIPv6(hostIPv6);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static port(port: AnyUriPort): Uri {\n    const authority = UriAuthority.port(port);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static portPart(portPart: string): Uri {\n    const authority = UriAuthority.portPart(portPart);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static portNumber(portNumber: number): Uri {\n    const authority = UriAuthority.portNumber(portNumber);\n    return Uri.create(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static path(...components: AnyUriPath[]): Uri {\n    const path = UriPath.of(...components);\n    return Uri.create(void 0, void 0, path, void 0, void 0);\n  }\n\n  static pathPart(pathPart: string): Uri {\n    const path = UriPath.parse(pathPart);\n    return Uri.create(void 0, void 0, path, void 0, void 0);\n  }\n\n  static query(query: AnyUriQuery): Uri {\n    query = UriQuery.fromAny(query);\n    return Uri.create(void 0, void 0, void 0, query, void 0);\n  }\n\n  static queryPart(queryPart: string): Uri {\n    const query = UriQuery.parse(queryPart);\n    return Uri.create(void 0, void 0, void 0, query, void 0);\n  }\n\n  static fragment(fragment: AnyUriFragment): Uri {\n    fragment = UriFragment.fromAny(fragment);\n    return Uri.create(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  static fragmentPart(fragmentPart: string): Uri {\n    const fragment = UriFragment.parse(fragmentPart);\n    return Uri.create(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  static fragmentIdentifier(fragmentIdentifier: string | undefined): Uri {\n    const fragment = UriFragment.create(fragmentIdentifier);\n    return Uri.create(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  @Lazy\n  static get standardParser(): UriParser {\n    return new UriParser();\n  }\n\n  static parse(string: string): Uri {\n    return Uri.standardParser.parseAbsoluteString(string);\n  }\n\n  static pathBuilder(): UriPathBuilder {\n    return new UriPathBuilder();\n  }\n\n  static queryBuilder(): UriQueryBuilder {\n    return new UriQueryBuilder();\n  }\n\n  @Lazy\n  static form(): Form<Uri, AnyUri> {\n    return new UriForm(Uri.empty());\n  }\n\n  /** @hidden */\n  static isUnreservedChar(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c === 45/*'-'*/ || c === 46/*'.'*/\n        || c === 95/*'_'*/ || c === 126/*'~'*/;\n  }\n\n  /** @hidden */\n  static isSubDelimChar(c: number): boolean {\n    return c === 33/*'!'*/ || c === 36/*'$'*/\n        || c === 38/*'&'*/ || c === 40/*'('*/\n        || c === 41/*')'*/ || c === 42/*'*'*/\n        || c === 43/*'+'*/ || c === 44/*','*/\n        || c === 59/*';'*/ || c === 61/*'='*/\n        || c === 39/*'\\''*/;\n  }\n\n  /** @hidden */\n  static isSchemeChar(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c === 43/*'+'*/ || c === 45/*'-'*/\n        || c === 46/*'.'*/;\n  }\n\n  /** @hidden */\n  static isUserInfoChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 58/*':'*/;\n  }\n\n  /** @hidden */\n  static isUserChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c);\n  }\n\n  /** @hidden */\n  static isHostChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c);\n  }\n\n  /** @hidden */\n  static isPathChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 58/*':'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isQueryChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 47/*'/'*/ || c === 58/*':'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isParamChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || c === 33/*'!'*/ || c === 36/*'$'*/\n        || c === 40/*'('*/ || c === 41/*')'*/\n        || c === 42/*'*'*/ || c === 43/*'+'*/\n        || c === 44/*','*/ || c === 47/*'/'*/\n        || c === 58/*':'*/ || c === 59/*';'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/\n        || c === 39/*'\\''*/;\n  }\n\n  /** @hidden */\n  static isFragmentChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 47/*'/'*/ || c === 58/*':'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isAlpha(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/;\n  }\n\n  /** @hidden */\n  static toLowerCase(c: number): number {\n    if (c >= 65/*'A'*/ && c <= 90/*'Z'*/) {\n      return c + (97/*'a'*/ - 65/*'A'*/);\n    } else {\n      return c;\n    }\n  }\n\n  /** @hidden */\n  static writeScheme(scheme: string, output: Output): void {\n    for (let i = 0, n = scheme.length; i < n; i += 1) {\n      const c = scheme.charCodeAt(i);\n      if (i > 0 && Uri.isSchemeChar(c) || i === 0 && Uri.isAlpha(c)) {\n        output = output.write(c);\n      } else {\n        throw new UriException(\"Invalid scheme: \" + scheme);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeUserInfo(userInfo: string, output: Output): void {\n    for (let i = 0, n = userInfo.length; i < n; i += 1) {\n      const c = userInfo.charCodeAt(i);\n      if (Uri.isUserInfoChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeUser(user: string, output: Output): void {\n    for (let i = 0, n = user.length; i < n; i += 1) {\n      const c = user.charCodeAt(i);\n      if (Uri.isUserChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeHost(address: string, output: Output): void {\n    for (let i = 0, n = address.length; i < n; i += 1) {\n      const c = address.charCodeAt(i);\n      if (Uri.isHostChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeHostLiteral(address: string, output: Output): void {\n    for (let i = 0, n = address.length; i < n; i += 1) {\n      const c = address.charCodeAt(i);\n      if (Uri.isHostChar(c) || c === 58/*':'*/) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writePathSegment(segment: string, output: Output): void {\n    for (let i = 0, n = segment.length; i < n; i += 1) {\n      const c = segment.charCodeAt(i);\n      if (Uri.isPathChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeQuery(query: string, output: Output): void {\n    for (let i = 0, n = query.length; i < n; i += 1) {\n      const c = query.charCodeAt(i);\n      if (Uri.isQueryChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeParam(param: string, output: Output): void {\n    for (let i = 0, n = param.length; i < n; i += 1) {\n      const c = param.charCodeAt(i);\n      if (Uri.isParamChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeFragment(fragment: string, output: Output): void {\n    for (let i = 0, n = fragment.length; i < n; i += 1) {\n      const c = fragment.charCodeAt(i);\n      if (Uri.isFragmentChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeEncoded(c: number, output: Output): void {\n    if (c === 0x00) { // modified UTF-8\n      Uri.writePctEncoded(0xC0, output);\n      Uri.writePctEncoded(0x80, output);\n    } else if (c >= 0x00 && c <= 0x7F) { // U+0000..U+007F\n      Uri.writePctEncoded(c, output);\n    } else if (c >= 0x80 && c <= 0x07FF) { // U+0080..U+07FF\n      Uri.writePctEncoded(0xC0 | (c >>> 6), output);\n      Uri.writePctEncoded(0x80 | (c & 0x3F), output);\n    } else if (c >= 0x0800 && c <= 0xFFFF    // U+0800..U+D7FF\n            || c >= 0xE000 && c <= 0xFFFF) { // U+E000..U+FFFF\n      Uri.writePctEncoded(0xE0 | (c >>> 12), output);\n      Uri.writePctEncoded(0x80 | (c >>>  6 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c        & 0x3F), output);\n    } else if (c >= 0x10000 && c <= 0x10FFFF) { // U+10000..U+10FFFF\n      Uri.writePctEncoded(0xF0 | (c >>> 18), output);\n      Uri.writePctEncoded(0x80 | (c >>> 12 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c >>>  6 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c        & 0x3F), output);\n    } else { // surrogate or invalid code point\n      Uri.writePctEncoded(0xEF, output);\n      Uri.writePctEncoded(0xBF, output);\n      Uri.writePctEncoded(0xBD, output);\n    }\n  }\n\n  /** @hidden */\n  static writePctEncoded(c: number, output: Output): void {\n    const base16 = Base16.lowercase;\n    output = output.write(37/*'%'*/)\n          .write(base16.encodeDigit(c >>> 4 & 0xF))\n          .write(base16.encodeDigit(c       & 0xF));\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Compare, Lazy, Strings, HashGenCacheMap} from \"@swim/util\";\nimport type {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriScheme = UriScheme | string;\n\nexport class UriScheme implements HashCode, Compare, Debug, Display {\n  /** @hidden */\n  constructor(name: string) {\n    Object.defineProperty(this, \"name\", {\n      value: name,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return this.name.length !== 0;\n  }\n\n  readonly name!: string;\n\n  toAny(): string | undefined {\n    return this.name.length !== 0 ? this.name : void 0;\n  }\n\n  compareTo(that: unknown): number {\n    if (that instanceof UriScheme) {\n      return this.name.localeCompare(that.name);\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriScheme) {\n      return this.name === that.name;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Strings.hash(this.name);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriScheme\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    Uri.writeScheme(this.name, output);\n  }\n\n  toString(): string {\n    return this.name;\n  }\n\n  @Lazy\n  static undefined(): UriScheme {\n    return new UriScheme(\"\");\n  }\n\n  static create(schemeName: string): UriScheme {\n    const cache = UriScheme.cache;\n    const scheme = cache.get(schemeName);\n    if (scheme !== void 0) {\n      return scheme;\n    } else {\n      return cache.put(schemeName, new UriScheme(schemeName));\n    }\n  }\n\n  static fromAny(value: AnyUriScheme | null | undefined): UriScheme {\n    if (value === void 0 || value === null) {\n      return UriScheme.undefined();\n    } else if (value instanceof UriScheme) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return UriScheme.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static parse(schemePart: string): UriScheme {\n    return Uri.standardParser.parseSchemeString(schemePart);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get cache(): HashGenCacheMap<string, UriScheme> {\n    const cacheSize = 4;\n    return new HashGenCacheMap<string, UriScheme>(cacheSize);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Compare, Lazy, Strings} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriUser, UriUserInit, UriUser} from \"./\"; // forward import\nimport {AnyUriHost, UriHost} from \"./\"; // forward import\nimport {AnyUriPort, UriPort} from \"./\"; // forward import\n\nexport type AnyUriAuthority = UriAuthority | UriAuthorityInit | string;\n\nexport interface UriAuthorityInit extends UriUserInit {\n  user?: AnyUriUser;\n  host?: AnyUriHost;\n  port?: AnyUriPort;\n}\n\nexport class UriAuthority implements HashCode, Compare, Debug, Display {\n  /** @hidden */\n  constructor(user: UriUser, host: UriHost, port: UriPort) {\n    Object.defineProperty(this, \"user\", {\n      value: user,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"host\", {\n      value: host,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"port\", {\n      value: port,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"hashValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return this.user.isDefined() || this.host.isDefined() || this.port.isDefined();\n  }\n\n  readonly user!: UriUser;\n\n  withUser(user: AnyUriUser): UriAuthority {\n    user = UriUser.fromAny(user);\n    if (user !== this.user) {\n      return this.copy(user as UriUser, this.host, this.port);\n    } else {\n      return this;\n    }\n  }\n\n  get userPart(): string {\n    return this.user.toString();\n  }\n\n  withUserPart(userPart: string): UriAuthority {\n    return this.withUser(UriUser.parse(userPart));\n  }\n\n  get username(): string | undefined {\n    return this.user.username;\n  }\n\n  withUsername(username: string | undefined, password?: string): UriAuthority {\n    if (arguments.length === 1) {\n      return this.withUser(this.user.withUsername(username));\n    } else {\n      return this.withUser(UriUser.create(username, password));\n    }\n  }\n\n  get password(): string | undefined {\n    return this.user.password;\n  }\n\n  withPassword(password: string | undefined): UriAuthority {\n    return this.withUser(this.user.withPassword(password));\n  }\n\n  readonly host!: UriHost;\n\n  withHost(host: AnyUriHost): UriAuthority {\n    host = UriHost.fromAny(host);\n    if (host !== this.host) {\n      return this.copy(this.user, host, this.port);\n    } else {\n      return this;\n    }\n  }\n\n  get hostPart(): string {\n    return this.host.toString();\n  }\n\n  withHostPart(hostPart: string): UriAuthority {\n    return this.withHost(UriHost.parse(hostPart));\n  }\n\n  get hostAddress(): string {\n    return this.host.address;\n  }\n\n  get hostName(): string | undefined {\n    return this.host.name;\n  }\n\n  withHostName(hostName: string): UriAuthority {\n    return this.withHost(UriHost.hostname(hostName));\n  }\n\n  get hostIPv4(): string | undefined {\n    return this.host.ipv4;\n  }\n\n  withHostIPv4(hostIPv4: string): UriAuthority {\n    return this.withHost(UriHost.ipv4(hostIPv4));\n  }\n\n  get hostIPv6(): string | undefined {\n    return this.host.ipv6;\n  }\n\n  withHostIPv6(hostIPv5: string): UriAuthority {\n    return this.withHost(UriHost.ipv6(hostIPv5));\n  }\n\n  readonly port!: UriPort;\n\n  withPort(port: AnyUriPort): UriAuthority {\n    port = UriPort.fromAny(port);\n    if (port !== this.port) {\n      return this.copy(this.user, this.host, port);\n    } else {\n      return this;\n    }\n  }\n\n  get portPart(): string {\n    return this.port.toString();\n  }\n\n  withPortPart(portPart: string): UriAuthority {\n    return this.withPort(UriPort.parse(portPart));\n  }\n\n  get portNumber(): number {\n    return this.port.number;\n  }\n\n  withPortNumber(portNumber: number): UriAuthority {\n    return this.withPort(UriPort.create(portNumber));\n  }\n\n  protected copy(user: UriUser, host: UriHost, port: UriPort): UriAuthority {\n    return UriAuthority.create(user, host, port);\n  }\n\n  toAny(authority?: {username?: string, password?: string, host?: string, port?: number}):\n      {username?: string, password?: string, host?: string, port?: number} | undefined {\n    if (this.isDefined()) {\n      if (authority === void 0) {\n        authority = {};\n      }\n      this.user.toAny(authority);\n      if (this.host.isDefined()) {\n        authority.host = this.host.toAny();\n      }\n      if (this.port.isDefined()) {\n        authority.port = this.port.toAny();\n      }\n    }\n    return authority;\n  }\n\n  compareTo(that: unknown): number {\n    if (that instanceof UriAuthority) {\n      return this.toString().localeCompare(that.toString());\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriAuthority) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  /** @hidden */\n  readonly hashValue!: number | undefined;\n\n  hashCode(): number {\n    let hashValue = this.hashValue;\n    if (hashValue === void 0) {\n      hashValue = Strings.hash(this.toString());\n      Object.defineProperty(this, \"hashValue\", {\n        value: hashValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return hashValue;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriAuthority\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/)\n        .display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    const stringValue = this.stringValue;\n    if (stringValue !== void 0) {\n      output = output.write(stringValue);\n    } else {\n      const user = this.user;\n      if (user.isDefined()) {\n        output.display(user).write(64/*'@'*/);\n      }\n      output.display(this.host);\n      const port = this.port;\n      if (port.isDefined()) {\n        output = output.write(58/*':'*/).display(port);\n      }\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = Format.display(this);\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  @Lazy\n  static undefined(): UriAuthority {\n    return new UriAuthority(UriUser.undefined(), UriHost.undefined(), UriPort.undefined());\n  }\n\n  static create(user: UriUser = UriUser.undefined(),\n                host: UriHost = UriHost.undefined(),\n                port: UriPort = UriPort.undefined()): UriAuthority {\n    if (user.isDefined() || host.isDefined() || port.isDefined()) {\n      return new UriAuthority(user, host, port);\n    } else {\n      return UriAuthority.undefined();\n    }\n  }\n\n  static fromInit(init: UriAuthorityInit): UriAuthority {\n    const user = UriUser.fromAny(init.user !== void 0 ? init.user : init);\n    const host = UriHost.fromAny(init.host);\n    const port = UriPort.fromAny(init.port);\n    return UriAuthority.create(user, host, port);\n  }\n\n  static fromAny(value: AnyUriAuthority | null | undefined): UriAuthority {\n    if (value === void 0 || value === null) {\n      return UriAuthority.undefined();\n    } else if (value instanceof UriAuthority) {\n      return value;\n    } else if (typeof value === \"object\") {\n      return UriAuthority.fromInit(value);\n    } else if (typeof value === \"string\") {\n      return UriAuthority.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static user(user: AnyUriUser): UriAuthority {\n    user = UriUser.fromAny(user);\n    return UriAuthority.create(user as UriUser, void 0, void 0);\n  }\n\n  static userPart(userPart: string): UriAuthority {\n    const user = UriUser.parse(userPart);\n    return UriAuthority.create(user, void 0, void 0);\n  }\n\n  static username(username: string, password?: string | undefined): UriAuthority {\n    const user = UriUser.create(username, password);\n    return UriAuthority.create(user, void 0, void 0);\n  }\n\n  static password(password: string): UriAuthority {\n    const user = UriUser.create(\"\", password);\n    return UriAuthority.create(user, void 0, void 0);\n  }\n\n  static host(host: AnyUriHost): UriAuthority {\n    host = UriHost.fromAny(host);\n    return UriAuthority.create(void 0, host, void 0);\n  }\n\n  static hostPart(hostPart: string): UriAuthority {\n    const host = UriHost.parse(hostPart);\n    return UriAuthority.create(void 0, host, void 0);\n  }\n\n  static hostName(hostName: string): UriAuthority {\n    const host = UriHost.hostname(hostName);\n    return UriAuthority.create(void 0, host, void 0);\n  }\n\n  static hostIPv4(hostIPv4: string): UriAuthority {\n    const host = UriHost.ipv4(hostIPv4);\n    return UriAuthority.create(void 0, host, void 0);\n  }\n\n  static hostIPv6(hostIPv6: string): UriAuthority {\n    const host = UriHost.ipv6(hostIPv6);\n    return UriAuthority.create(void 0, host, void 0);\n  }\n\n  static port(port: AnyUriPort): UriAuthority {\n    port = UriPort.fromAny(port);\n    return UriAuthority.create(void 0, void 0, port);\n  }\n\n  static portPart(portPart: string): UriAuthority {\n    const port = UriPort.parse(portPart);\n    return UriAuthority.create(void 0, void 0, port);\n  }\n\n  static portNumber(portNumber: number): UriAuthority {\n    const port = UriPort.create(portNumber);\n    return UriAuthority.create(void 0, void 0, port);\n  }\n\n  static parse(authorityPart: string): UriAuthority {\n    return Uri.standardParser.parseAuthorityString(authorityPart);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Lazy, Strings} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriUser = UriUser | UriUserInit | string;\n\nexport interface UriUserInit {\n  username?: string;\n  password?: string;\n}\n\nexport class UriUser implements HashCode, Debug, Display {\n  /** @hidden */\n  constructor(username: string | undefined, password: string | undefined) {\n    Object.defineProperty(this, \"username\", {\n      value: username,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"password\", {\n      value: password,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return this.username !== void 0;\n  }\n\n  readonly username!: string | undefined;\n\n  withUsername(username: string | undefined): UriUser {\n    if (username !== this.username) {\n      return this.copy(username, this.password);\n    } else {\n      return this;\n    }\n  }\n\n  readonly password!: string | undefined;\n\n  withPassword(password: string | undefined): UriUser {\n    if (password !== this.password) {\n      return this.copy(this.username, password);\n    } else {\n      return this;\n    }\n  }\n\n  protected copy(username: string | undefined, password: string | undefined): UriUser {\n    return UriUser.create(username, password);\n  }\n\n  toAny(user?: {username?: string, password?: string}): {username?: string, password?: string} | undefined {\n    if (this.username !== void 0) {\n      if (user === void 0) {\n        user = {};\n      }\n      user.username = this.username;\n      if (this.password !== void 0) {\n        user.password = this.password;\n      }\n    }\n    return user;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriUser) {\n      return this.username === that.username && this.password === that.password;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Strings.hash(this.toString());\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriUser\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/)\n          .display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this.username !== void 0) {\n      Uri.writeUser(this.username, output);\n      if (this.password !== void 0) {\n        output = output.write(58/*':'*/);\n        Uri.writeUser(this.password, output);\n      }\n    }\n  }\n\n  toString(): string {\n    return Format.display(this);\n  }\n\n  @Lazy\n  static undefined(): UriUser {\n    return new UriUser(void 0, void 0);\n  }\n\n  static create(username: string | undefined, password?: string | undefined): UriUser {\n    if (username !== void 0 || password !== void 0) {\n      return new UriUser(username, password);\n    } else {\n      return UriUser.undefined();\n    }\n  }\n\n  static fromInit(init: UriUserInit): UriUser {\n    return UriUser.create(init.username, init.password);\n  }\n\n  static fromAny(value: AnyUriUser | null | undefined): UriUser {\n    if (value === void 0 || value === null) {\n      return UriUser.undefined();\n    } else if (value instanceof UriUser) {\n      return value;\n    } else if (typeof value === \"object\") {\n      return UriUser.fromInit(value);\n    } else if (typeof value === \"string\") {\n      return UriUser.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static parse(userPart: string): UriUser {\n    return Uri.standardParser.parseUserString(userPart);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Compare, Lazy, Strings, HashGenCacheMap} from \"@swim/util\";\nimport type {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHostName} from \"./\" // forward import\nimport {UriHostIPv4} from \"./\" // forward import\nimport {UriHostIPv6} from \"./\" // forward import\nimport {UriHostUndefined} from \"./\" // forward import\n\nexport type AnyUriHost = UriHost | string;\n\nexport abstract class UriHost implements HashCode, Compare, Debug, Display {\n  protected constructor() {\n    // stub\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  abstract readonly address: string;\n\n  get name(): string | undefined {\n    return void 0;\n  }\n\n  get ipv4(): string | undefined {\n    return void 0;\n  }\n\n  get ipv6(): string | undefined {\n    return void 0;\n  }\n\n  toAny(): string {\n    return this.toString();\n  }\n\n  compareTo(that: unknown): number {\n    if (that instanceof UriHost) {\n      return this.toString().localeCompare(that.toString());\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriHost) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Strings.hash(this.toString());\n  }\n\n  abstract debug(output: Output): void;\n\n  abstract display(output: Output): void;\n\n  abstract toString(): string;\n\n  @Lazy\n  static undefined(): UriHost {\n    return new UriHostUndefined();\n  }\n\n  static hostname(name: string): UriHost {\n    const cache = UriHost.cache;\n    const host = cache.get(name);\n    if (host instanceof UriHostName) {\n      return host;\n    } else {\n      return cache.put(name, new UriHostName(name));\n    }\n  }\n\n  static ipv4(ipv4: string): UriHost {\n    const cache = UriHost.cache;\n    const host = cache.get(ipv4);\n    if (host instanceof UriHostIPv4) {\n      return host;\n    } else {\n      return cache.put(ipv4, new UriHostIPv4(ipv4));\n    }\n  }\n\n  static ipv6(ipv6: string): UriHost {\n    const cache = UriHost.cache;\n    const host = cache.get(ipv6);\n    if (host instanceof UriHostIPv6) {\n      return host;\n    } else {\n      return cache.put(ipv6, new UriHostIPv6(ipv6));\n    }\n  }\n\n  static fromAny(value: AnyUriHost | null | undefined): UriHost {\n    if (value === void 0 || value === null) {\n      return UriHost.undefined();\n    } else if (value instanceof UriHost) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return UriHost.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static parse(hostPart: string): UriHost {\n    return Uri.standardParser.parseHostString(hostPart);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get cache(): HashGenCacheMap<string, UriHost> {\n    const cacheSize = 16;\n    return new HashGenCacheMap<string, UriHost>(cacheSize);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostName extends UriHost {\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    Object.defineProperty(this, \"address\", {\n      value: address,\n      enumerable: true,\n    });\n  }\n\n  override readonly address!: string;\n\n  override get name(): string {\n    return this.address;\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"hostname\")\n        .write(40/*'('*/).debug(this.address).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    Uri.writeHost(this.address, output);\n  }\n\n  override toString(): string {\n    return this.address;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostIPv4 extends UriHost {\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    Object.defineProperty(this, \"address\", {\n      value: address,\n      enumerable: true,\n    });\n  }\n\n  override readonly address!: string;\n\n  override get ipv4(): string {\n    return this.address;\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"ipv4\")\n        .write(40/*'('*/).debug(this.address).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    Uri.writeHost(this.address, output);\n  }\n\n  override toString(): string {\n    return this.address;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostIPv6 extends UriHost {\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    Object.defineProperty(this, \"address\", {\n      value: address,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly address!: string;\n\n  override get ipv6(): string {\n    return this.address;\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"ipv6\")\n        .write(40/*'('*/).debug(this.address).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    const stringValue = this.stringValue;\n    if (stringValue !== void 0) {\n      output = output.write(stringValue);\n    } else {\n      output = output.write(91/*'['*/);\n      Uri.writeHostLiteral(this.address, output);\n      output = output.write(93/*']'*/);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = \"[\" + this.address + \"]\";\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"@swim/codec\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostUndefined extends UriHost {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  override isDefined(): boolean {\n    return false;\n  }\n\n  override get address(): string {\n    return \"\";\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"undefined\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    // nop\n  }\n\n  override toString(): string {\n    return \"\";\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Lazy, Compare, Strings, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriPort = UriPort | number | string;\n\nexport class UriPort implements HashCode, Compare, Debug, Display {\n  /** @hidden */\n  constructor(portNumber: number) {\n    Object.defineProperty(this, \"number\", {\n      value: portNumber,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return this.number !== 0;\n  }\n\n  readonly number!: number;\n\n  valueOf(): number {\n    return this.number;\n  }\n\n  toAny(): number {\n    return this.number;\n  }\n\n  compareTo(that: unknown): number {\n    if (that instanceof UriPort) {\n      return this.number < that.number ? -1 : this.number > that.number ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriPort) {\n      return this.number === that.number;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Strings.hash(this.toString());\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPort\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"create\").write(40/*'('*/);\n      Format.displayNumber(this.number, output);\n      output = output.write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    Format.displayNumber(this.number, output);\n  }\n\n  toString(): string {\n    return \"\" + this.number;\n  }\n\n  @Lazy\n  static undefined(): UriPort {\n    return new UriPort(0);\n  }\n\n  static create(number: number): UriPort {\n    if (number === 0) {\n      return UriPort.undefined();\n    } else if (number > 0) {\n      const cache = UriPort.cache;\n      const port = cache.get(number);\n      if (port !== void 0) {\n        return port;\n      } else {\n        return cache.put(number, new UriPort(number));\n      }\n    } else {\n      throw new TypeError(\"\" + number);\n    }\n  }\n\n  static fromAny(value: AnyUriPort | null | undefined): UriPort {\n    if (value === void 0 || value === null) {\n      return UriPort.undefined();\n    } else if (value instanceof UriPort) {\n      return value;\n    } else if (typeof value === \"number\") {\n      return UriPort.create(value);\n    } else if (typeof value === \"string\") {\n      return UriPort.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static parse(portPart: string): UriPort {\n    return Uri.standardParser.parsePortString(portPart);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get cache(): HashGenCacheMap<number, UriPort> {\n    const cacheSize = 16;\n    return new HashGenCacheMap<number, UriPort>(cacheSize);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Compare, Lazy, Strings, HashGenCacheSet} from \"@swim/util\";\nimport type {Output, Debug, Display} from \"@swim/codec\";\nimport type {Form} from \"@swim/structure\";\nimport {Uri} from \"./Uri\";\nimport {UriPathSegment} from \"./\"; // forward import\nimport {UriPathSlash} from \"./\"; // forward import\nimport {UriPathEmpty} from \"./\"; // forward import\nimport {UriPathBuilder} from \"./\"; // forward import\nimport {UriPathForm} from \"./\"; // forward import\n\nexport type AnyUriPath = UriPath | string[] | string;\n\nexport abstract class UriPath implements HashCode, Compare, Debug, Display {\n  /** @hidden */\n  protected constructor() {\n    // sealed\n  }\n\n  abstract isDefined(): boolean;\n\n  abstract isAbsolute(): boolean;\n\n  abstract isRelative(): boolean;\n\n  abstract isEmpty(): boolean;\n\n  get length(): number {\n    let n = 0;\n    let path: UriPath = this;\n    while (!path.isEmpty()) {\n      n += 1;\n      path = path.tail();\n    }\n    return n;\n  }\n\n  get(index: number): string | undefined {\n    let i = 0;\n    let path: UriPath = this;\n    while (!path.isEmpty()) {\n      if (i < index) {\n        i += 1;\n        path = path.tail();\n      } else {\n        return path.head();\n      }\n    }\n    return void 0;\n  }\n\n  abstract head(): string;\n\n  abstract tail(): UriPath;\n\n  /** @hidden */\n  abstract setTail(tail: UriPath): void;\n\n  /** @hidden */\n  abstract dealias(): UriPath;\n\n  abstract parent(): UriPath;\n\n  abstract base(): UriPath;\n\n  get name(): string {\n    if (this.isEmpty()) {\n      return \"\";\n    }\n    let path: UriPath = this;\n    do {\n      const tail = path.tail();\n      if (tail.isEmpty()) {\n        return path.isRelative() ? path.head() : \"\";\n      } else {\n        path = tail;\n      }\n    } while (true);\n  }\n\n  withName(name: string): UriPath {\n    const builder = new UriPathBuilder();\n    builder.addPath(this.base());\n    builder.addSegment(name);\n    return builder.bind();\n  }\n\n  foot(): UriPath {\n    if (this.isEmpty()) {\n      return this;\n    }\n    let path: UriPath = this;\n    do {\n      const tail = path.tail();\n      if (tail.isEmpty()) {\n        return path;\n      } else {\n        path = tail;\n      }\n    } while (true);\n  }\n\n  isSubpathOf(b: AnyUriPath): boolean {\n    b = UriPath.fromAny(b);\n    let a: UriPath = this;\n    while (!a.isEmpty() && !b.isEmpty()) {\n      if (a.head() !== b.head()) {\n        return false;\n      }\n      a = a.tail();\n      b = b.tail();\n    }\n    return b.isEmpty();\n  }\n\n  appended(...components: AnyUriPath[]): UriPath {\n    if (arguments.length > 0) {\n      const builder = new UriPathBuilder();\n      builder.addPath(this);\n      builder.push(...components);\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  appendedSlash(): UriPath {\n    const builder = new UriPathBuilder();\n    builder.addPath(this);\n    builder.addSlash();\n    return builder.bind();\n  }\n\n  appendedSegment(segment: string): UriPath {\n    const builder = new UriPathBuilder();\n    builder.addPath(this);\n    builder.addSegment(segment);\n    return builder.bind();\n  }\n\n  prepended(...components: AnyUriPath[]): UriPath {\n    if (arguments.length > 0) {\n      const builder = new UriPathBuilder();\n      builder.push(...components);\n      builder.addPath(this);\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  prependedSlash(): UriPath {\n    return new UriPathSlash(this);\n  }\n\n  prependedSegment(segment: string): UriPath {\n    if (this.isEmpty() || this.isAbsolute()) {\n      return UriPath.segment(segment, this);\n    } else {\n      return UriPath.segment(segment, this.prependedSlash());\n    }\n  }\n\n  resolve(that: UriPath): UriPath {\n    if (that.isEmpty()) {\n      return this;\n    } else if (that.isAbsolute() || this.isEmpty()) {\n      return that.removeDotSegments();\n    } else {\n      return this.merge(that).removeDotSegments();\n    }\n  }\n\n  removeDotSegments(): UriPath {\n    let path: UriPath = this;\n    const builder = new UriPathBuilder();\n    while (!path.isEmpty()) {\n      const head = path.head();\n      if (head === \".\" || head === \"..\") {\n        path = path.tail();\n        if (!path.isEmpty()) {\n          path = path.tail();\n        }\n      } else if (path.isAbsolute()) {\n        const rest = path.tail();\n        if (!rest.isEmpty()) {\n          const next = rest.head();\n          if (next === \".\") {\n            path = rest.tail();\n            if (path.isEmpty()) {\n              path = UriPath.slash();\n            }\n          } else if (next === \"..\") {\n            path = rest.tail();\n            if (path.isEmpty()) {\n              path = UriPath.slash();\n            }\n            if (!builder.isEmpty() && !builder.pop().isAbsolute()) {\n              if (!builder.isEmpty()) {\n                builder.pop();\n              }\n            }\n          } else {\n            builder.push(head, next);\n            path = rest.tail();\n          }\n        } else {\n          builder.push(path.head());\n          path = path.tail();\n        }\n      } else {\n        builder.push(path.head());\n        path = path.tail();\n      }\n    }\n    return builder.bind();\n  }\n\n  merge(that: UriPath): UriPath {\n    if (!this.isEmpty()) {\n      const builder = new UriPathBuilder();\n      let prev: UriPath = this;\n      do {\n        const next = prev.tail();\n        if (!next.isEmpty()) {\n          if (prev.isAbsolute()) {\n            builder.addSlash();\n          } else {\n            builder.addSegment(prev.head());\n          }\n          prev = next;\n        } else {\n          if (prev.isAbsolute()) {\n            builder.addSlash();\n          }\n          break;\n        }\n      } while (true);\n      builder.addPath(that);\n      return builder.bind();\n    } else {\n      return that;\n    }\n  }\n\n  unmerge(relative: UriPath, root: UriPath = relative): UriPath {\n    let base: UriPath = this;\n    do {\n      if (base.isEmpty()) {\n        if (!relative.isEmpty() && !relative.tail().isEmpty()) {\n          return relative.tail();\n        } else {\n          return relative;\n        }\n      } else if (base.isRelative()) {\n        return relative;\n      } else if (relative.isRelative()) {\n        return relative.prependedSlash();\n      } else {\n        let a = base.tail();\n        let b = relative.tail();\n        if (!a.isEmpty() && b.isEmpty()) {\n          return UriPath.slash();\n        } else if (a.isEmpty() || b.isEmpty() || a.head() !== b.head()) {\n          return b;\n        } else {\n          a = a.tail();\n          b = b.tail();\n          if (!a.isEmpty() && b.isEmpty()) {\n            return root;\n          } else {\n            base = a;\n            relative = b;\n          }\n        }\n      }\n    } while (true);\n  }\n\n  toAny(): string[] {\n    const components = [];\n    let path: UriPath = this;\n    while (!path.isEmpty()) {\n      components.push(path.head());\n      path = path.tail();\n    }\n    return components;\n  }\n\n  compareTo(that: unknown): number {\n    if (that instanceof UriPath) {\n      return this.toString().localeCompare(that.toString());\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriPath) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Strings.hash(this.toString());\n  }\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    let path: UriPath = this;\n    while (!path.isEmpty()) {\n      if (path.isAbsolute()) {\n        output = output.write(47/*'/'*/);\n      } else {\n        Uri.writePathSegment(path.head(), output);\n      }\n      path = path.tail();\n    }\n  }\n\n  abstract toString(): string;\n\n  @Lazy\n  static empty(): UriPath {\n    return new UriPathEmpty();\n  }\n\n  @Lazy\n  static slash(): UriPath {\n    return new UriPathSlash(UriPath.empty());\n  }\n\n  static segment(segment: string, tail?: UriPath): UriPath {\n    if (tail === void 0) {\n      tail = UriPath.empty();\n    }\n    segment = this.cacheSegment(segment);\n    return new UriPathSegment(segment, tail);\n  }\n\n  static of(...components: AnyUriPath[]): UriPath {\n    const builder = new UriPathBuilder();\n    builder.push(...components);\n    return builder.bind();\n  }\n\n  static fromAny(value: AnyUriPath | null | undefined): UriPath {\n    if (value === void 0 || value === null) {\n      return UriPath.empty();\n    } else if (value instanceof UriPath) {\n      return value;\n    } else if (Array.isArray(value)) {\n      return UriPath.of(...value);\n    } else if (typeof value === \"string\") {\n      return UriPath.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static parse(pathPart: string): UriPath {\n    return Uri.standardParser.parsePathString(pathPart);\n  }\n\n  static builder(): UriPathBuilder {\n    return new UriPathBuilder();\n  }\n\n  @Lazy\n  static pathForm(): Form<UriPath, AnyUriPath> {\n    return new UriPathForm(UriPath.empty());\n  }\n\n  /** @hidden */\n  @Lazy\n  static get segmentCache(): HashGenCacheSet<string> {\n    const segmentCacheSize = 64;\n    return new HashGenCacheSet<string>(segmentCacheSize);\n  }\n\n  /** @hidden */\n  static cacheSegment(segment: string): string {\n    if (segment.length <= 32) {\n      return this.segmentCache.put(segment);\n    } else {\n      return segment;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathSegment extends UriPath {\n  /** @hidden */\n  constructor(head: string, tail: UriPath) {\n    super();\n    Object.defineProperty(this, \"segment\", {\n      value: head,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"rest\", {\n      value: tail,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly segment!: string;\n\n  /** @hidden */\n  readonly rest!: UriPath;\n\n  override isDefined(): boolean {\n    return true;\n  }\n\n  override isAbsolute(): boolean {\n    return false;\n  }\n\n  override isRelative(): boolean {\n    return true;\n  }\n\n  override isEmpty(): boolean {\n    return false;\n  }\n\n  override head(): string {\n    return this.segment;\n  }\n\n  override tail(): UriPath {\n    return this.rest;\n  }\n\n  /** @hidden */\n  override setTail(tail: UriPath): void {\n    if (tail instanceof UriPathSegment) {\n      throw new Error(\"adjacent path segments\");\n    }\n    Object.defineProperty(this, \"rest\", {\n      value: tail,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  override dealias(): UriPath {\n    return new UriPathSegment(this.segment, this.rest);\n  }\n\n  override parent(): UriPath {\n    const tail = this.rest;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      const rest = tail.tail();\n      if (rest.isEmpty()) {\n        return UriPath.empty();\n      } else {\n        return new UriPathSegment(this.segment, tail.parent());\n      }\n    }\n  }\n\n  override base(): UriPath {\n    const tail = this.rest;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      return new UriPathSegment(this.segment, tail.base());\n    }\n  }\n\n  override prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment, this.prependedSlash());\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/) .display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    const stringValue = this.stringValue;\n    if (stringValue !== void 0) {\n      output = output.write(stringValue);\n    } else {\n      super.display(output);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = Format.display(this);\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathSlash extends UriPath {\n  /** @hidden */\n  constructor(tail: UriPath) {\n    super();\n    Object.defineProperty(this, \"rest\", {\n      value: tail,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly rest!: UriPath;\n\n  override isDefined(): boolean {\n    return true;\n  }\n\n  override isAbsolute(): boolean {\n    return true;\n  }\n\n  override isRelative(): boolean {\n    return false;\n  }\n\n  override isEmpty(): boolean {\n    return false;\n  }\n\n  override head(): string {\n    return \"/\";\n  }\n\n  override tail(): UriPath {\n    return this.rest;\n  }\n\n  /** @hidden */\n  override setTail(tail: UriPath): void {\n    Object.defineProperty(this, \"rest\", {\n      value: tail,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  override dealias(): UriPath {\n    return new UriPathSlash(this.rest);\n  }\n\n  override parent(): UriPath {\n    const tail = this.rest;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      const rest = tail.tail();\n      if (rest.isEmpty()) {\n        return UriPath.slash();\n      } else {\n        return new UriPathSlash(tail.parent());\n      }\n    }\n  }\n\n  override base(): UriPath {\n    const tail = this.rest;\n    if (tail.isEmpty()) {\n      return this;\n    } else {\n      return new UriPathSlash(tail.base());\n    }\n  }\n\n  override prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment, this);\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/) .display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    const stringValue = this.stringValue;\n    if (stringValue !== void 0) {\n      output = output.write(stringValue);\n    } else {\n      super.display(output);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = Format.display(this);\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"@swim/codec\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathEmpty extends UriPath {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  override isDefined(): boolean {\n    return false;\n  }\n\n  override isAbsolute(): boolean {\n    return false;\n  }\n\n  override isRelative(): boolean {\n    return true;\n  }\n\n  override isEmpty(): boolean {\n    return true;\n  }\n\n  override head(): string {\n    throw new Error(\"empty path\");\n  }\n\n  override tail(): UriPath {\n    throw new Error(\"empty path\");\n  }\n\n  /** @hidden */\n  override setTail(tail: UriPath): void {\n    throw new Error(\"empty path\");\n  }\n\n  /** @hidden */\n  override dealias(): UriPath {\n    return this;\n  }\n\n  override parent(): UriPath {\n    return this;\n  }\n\n  override base(): UriPath {\n    return this;\n  }\n\n  override appended(...components: AnyUriPath[]): UriPath {\n    return UriPath.of(...components);\n  }\n\n  override appendedSlash(): UriPath {\n    return UriPath.slash();\n  }\n\n  override appendedSegment(segment: string): UriPath {\n    return UriPath.segment(segment);\n  }\n\n  override prepended(...components: AnyUriPath[]): UriPath {\n    return UriPath.of(...components);\n  }\n\n  override prependedSlash(): UriPath {\n    return UriPath.slash();\n  }\n\n  override prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment);\n  }\n\n  override merge(that: UriPath): UriPath {\n    return that;\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"empty\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    // nop\n  }\n\n  override toString(): string {\n    return \"\";\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Builder} from \"@swim/util\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\n\nexport class UriPathBuilder implements Builder<string, UriPath> {\n  /** @hidden */\n  first: UriPath;\n  /** @hidden */\n  last: UriPath | null;\n  /** @hidden */\n  size: number;\n  /** @hidden */\n  aliased: number;\n\n  constructor() {\n    this.first = UriPath.empty();\n    this.last = null;\n    this.size = 0;\n    this.aliased = 0;\n  }\n\n  isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  push(...components: AnyUriPath[]): void {\n    for (let i = 0; i < components.length; i += 1) {\n      const component = components[i]!;\n      if (component instanceof UriPath) {\n        this.addPath(component);\n      } else if (Array.isArray(component)) {\n        this.push(...component);\n      } else if (component === \"/\") {\n        this.addSlash();\n      } else {\n        this.addSegment(component);\n      }\n    }\n  }\n\n  bind(): UriPath {\n    this.aliased = 0;\n    return this.first;\n  }\n\n  addSlash(): void {\n    const tail = UriPath.slash().dealias();\n    const size = this.size;\n    if (size === 0) {\n      this.first = tail;\n    } else {\n      this.dealias(size - 1).setTail(tail);\n    }\n    this.last = tail;\n    this.size = size + 1;\n    this.aliased += 1;\n  }\n\n  addSegment(segment: string): void {\n    const tail = UriPath.segment(segment, UriPath.empty());\n    let size = this.size;\n    if (size === 0) {\n      this.first = tail;\n    } else {\n      const last = this.dealias(size - 1);\n      if (last.isAbsolute()) {\n        last.setTail(tail);\n      } else {\n        last.setTail(tail.prependedSlash());\n        size += 1;\n        this.aliased += 1;\n      }\n    }\n    this.last = tail;\n    this.size = size + 1;\n    this.aliased += 1;\n  }\n\n  addPath(path: UriPath): void {\n    if (!path.isEmpty()) {\n      let size = this.size;\n      if (size === 0) {\n        this.first = path;\n      } else {\n        const last = this.dealias(size - 1);\n        if (last.isAbsolute() || path.isAbsolute()) {\n          last.setTail(path);\n        } else {\n          last.setTail(path.prependedSlash());\n          size += 1;\n          this.aliased += 1;\n        }\n      }\n      size += 1;\n      do {\n        const tail = path.tail();\n        if (!tail.isEmpty()) {\n          path = tail;\n          size += 1;\n        } else {\n          break;\n        }\n      } while (true);\n      this.last = path;\n      this.size = size;\n    }\n  }\n\n  pop(): UriPath {\n    const size = this.size;\n    const aliased = this.aliased;\n    if (size === 0) {\n      throw new Error(\"Empty UriPath\");\n    } else if (size === 1) {\n      const first = this.first;\n      this.first = first.tail();\n      if (first.tail().isEmpty()) {\n        this.last = null;\n      }\n      this.size = size - 1;\n      if (aliased > 0) {\n        this.aliased = aliased - 1;\n      }\n      return first;\n    } else {\n      const last = this.dealias(size - 2);\n      last.setTail(UriPath.empty());\n      this.last = last;\n      this.size = size - 1;\n      this.aliased = aliased - 1;\n      return last.tail();\n    }\n  }\n\n  /** @hidden */\n  dealias(n: number): UriPath {\n    let i = 0;\n    let xi: UriPath | null = null;\n    let xs = this.first;\n    if (this.aliased <= n) {\n      while (i < this.aliased) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n      while (i <= n) {\n        const xn = xs.dealias();\n        if (i === 0) {\n          this.first = xn;\n        } else {\n          xi!.setTail(xn);\n        }\n        xi = xn;\n        xs = xs.tail();\n        i += 1;\n      }\n      if (i === this.size) {\n        this.last = xi;\n      }\n      this.aliased = i;\n    } else if (n === 0) {\n      xi = this.first;\n    } else if (n === this.size - 1) {\n      xi = this.last;\n    } else {\n      while (i <= n) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n    }\n    return xi!;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Form} from \"@swim/structure\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathForm extends Form<UriPath, AnyUriPath> {\n  constructor(unit: UriPath | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: UriPath | undefined;\n\n  override withUnit(unit: UriPath | undefined): Form<UriPath, AnyUriPath> {\n    if (unit !== this.unit) {\n      return new UriPathForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: AnyUriPath, item?: Item): Item {\n    object = UriPath.fromAny(object);\n    if (item === void 0) {\n      return Text.from(object.toString());\n    } else {\n      return item.concat(Text.from(object.toString()));\n    }\n  }\n\n  override cast(item: Item, object?: UriPath): UriPath | undefined {\n    const value = item.target;\n    try {\n      const string = value.stringValue();\n      if (typeof string === \"string\") {\n        return UriPath.parse(string);\n      }\n    } catch (error) {\n      // swallow\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Compare, Lazy, Strings, HashGenCacheSet} from \"@swim/util\";\nimport type {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriQueryParam} from \"./\"; // forward import\nimport {UriQueryUndefined} from \"./\"; // forward import\nimport {UriQueryBuilder} from \"./\"; // forward import\n\nexport type AnyUriQuery = UriQuery | {[key: string]: string} | string;\n\nexport abstract class UriQuery implements HashCode, Compare, Debug, Display {\n  abstract isDefined(): boolean;\n\n  abstract isEmpty(): boolean;\n\n  get length(): number {\n    let n = 0;\n    let query: UriQuery = this;\n    while (!query.isEmpty()) {\n      n += 1;\n      query = query.tail();\n    }\n    return n;\n  }\n\n  abstract head(): [string | undefined, string];\n\n  abstract readonly key: string | undefined;\n\n  abstract readonly value: string;\n\n  abstract tail(): UriQuery;\n\n  /** @hidden */\n  abstract setTail(tail: UriQuery): void;\n\n  /** @hidden */\n  abstract dealias(): UriQuery;\n\n  has(key: string): boolean {\n    let query: UriQuery = this;\n    while (!query.isEmpty()) {\n      if (key === query.key) {\n        return true;\n      }\n      query = query.tail();\n    }\n    return false;\n  }\n\n  get(key: string): string | undefined {\n    let query: UriQuery = this;\n    while (!query.isEmpty()) {\n      if (key === query.key) {\n        return query.value;\n      }\n      query = query.tail();\n    }\n    return void 0;\n  }\n\n  updated(key: string, value: string): UriQuery {\n    let query: UriQuery = this;\n    const builder = new UriQueryBuilder();\n    let updated = false;\n    while (!query.isEmpty()) {\n      if (key === query.key) {\n        builder.addParam(key, value);\n        updated = true;\n      } else {\n        builder.addParam(query.key, query.value);\n      }\n      query = query.tail();\n    }\n    if (!updated) {\n      builder.addParam(key, value);\n    }\n    return builder.bind();\n  }\n\n  removed(key: string): UriQuery {\n    let query: UriQuery = this;\n    const builder = new UriQueryBuilder();\n    let updated = false;\n    while (!query.isEmpty()) {\n      if (key === query.key) {\n        updated = true;\n      } else {\n        builder.addParam(query.key, query.value);\n      }\n      query = query.tail();\n    }\n    if (updated) {\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  appended(key: string | undefined, value: string): UriQuery;\n  appended(params: AnyUriQuery): UriQuery;\n  appended(key: AnyUriQuery | undefined, value?: string): UriQuery {\n    const builder = new UriQueryBuilder();\n    builder.addQuery(this);\n    builder.add(key as any, value as any);\n    return builder.bind();\n  }\n\n  prepended(key: string | undefined, value: string): UriQuery;\n  prepended(params: AnyUriQuery): UriQuery;\n  prepended(key: AnyUriQuery | undefined, value?: string): UriQuery {\n    const builder = new UriQueryBuilder();\n    builder.add(key as any, value as any);\n    builder.addQuery(this);\n    return builder.bind();\n  }\n\n  toAny(params?: {[key: string]: string}): {[key: string]: string} | undefined {\n    if (this.isDefined()) {\n      params = params || {};\n      let query: UriQuery = this;\n      let i = 0;\n      while (!query.isEmpty()) {\n        const key = query.key;\n        if (key !== void 0) {\n          params[key] = query.value;\n        } else {\n          params[\"$\" + i] = query.value;\n        }\n        query = query.tail();\n        i += 1;\n      }\n    }\n    return params;\n  }\n\n  compareTo(that: UriQuery): number {\n    if (that instanceof UriQuery) {\n      return this.toString().localeCompare(that.toString());\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriQuery) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Strings.hash(this.toString());\n  }\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    let query: UriQuery = this;\n    let first = true;\n    while (!query.isEmpty()) {\n      if (!first) {\n        output = output.write(38/*'&'*/);\n      } else {\n        first = false;\n      }\n      const key = query.key;\n      if (key !== void 0) {\n        Uri.writeParam(key, output);\n        output = output.write(61/*'='*/);\n      }\n      Uri.writeQuery(query.value, output);\n      query = query.tail();\n    }\n  }\n\n  abstract toString(): string;\n\n  @Lazy\n  static undefined(): UriQuery {\n    return new UriQueryUndefined();\n  }\n\n  static param(value: string, tail?: UriQuery): UriQuery;\n  static param(key: string | undefined, value: string, tail?: UriQuery): UriQuery;\n  static param(key: string | undefined, value?: UriQuery | string, tail?: UriQuery): UriQuery {\n    if (tail === void 0) {\n      tail = value as UriQuery | undefined;\n      value = key!;\n      key = void 0;\n    } else if (key !== void 0) {\n      key = this.cacheKey(key);\n    }\n    if (tail === void 0) {\n      tail = UriQuery.undefined();\n    }\n    return new UriQueryParam(key, value as string, tail);\n  }\n\n  static fromAny(value: AnyUriQuery | null | undefined): UriQuery {\n    if (value === void 0 || value === null) {\n      return UriQuery.undefined();\n    } else if (value instanceof UriQuery) {\n      return value;\n    } else if (typeof value === \"object\") {\n      const builder = new UriQueryBuilder();\n      builder.add(value);\n      return builder.bind();\n    } else if (typeof value === \"string\") {\n      return UriQuery.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static parse(queryPart: string): UriQuery {\n    return Uri.standardParser.parseQueryString(queryPart);\n  }\n\n  static builder(): UriQueryBuilder {\n    return new UriQueryBuilder();\n  }\n\n  /** @hidden */\n  @Lazy\n  static get keyCache(): HashGenCacheSet<string> {\n    const keyCacheSize = 64;\n    return new HashGenCacheSet<string>(keyCacheSize);\n  }\n\n  /** @hidden */\n  static cacheKey(key: string): string {\n    if (key.length <= 32) {\n      return UriQuery.keyCache.put(key);\n    } else {\n      return key;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {UriQuery} from \"./UriQuery\";\n\n/** @hidden */\nexport class UriQueryParam extends UriQuery {\n  constructor(key: string | undefined, value: string, tail: UriQuery) {\n    super();\n    Object.defineProperty(this, \"key\", {\n      value: key,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"rest\", {\n      value: tail,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly key!: string | undefined;\n\n  override readonly value!: string;\n\n  /** @hidden */\n  readonly rest!: UriQuery;\n\n  override isDefined(): boolean {\n    return true;\n  }\n\n  override isEmpty(): boolean {\n    return false;\n  }\n\n  override head(): [string | undefined, string] {\n    return [this.key, this.value];\n  }\n\n  override tail(): UriQuery {\n    return this.rest;\n  }\n\n  /** @hidden */\n  override setTail(tail: UriQuery): void {\n    Object.defineProperty(this, \"rest\", {\n      value: tail,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  override dealias(): UriQuery {\n    return new UriQueryParam(this.key, this.value, this.rest);\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriQuery\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    const stringValue = this.stringValue;\n    if (stringValue !== void 0) {\n      output = output.write(stringValue);\n    } else {\n      super.display(output);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = Format.display(this);\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Output} from \"@swim/codec\";\nimport {AnyUriQuery, UriQuery} from \"./UriQuery\";\nimport {UriQueryBuilder} from \"./\"; // forward import\n\n/** @hidden */\nexport class UriQueryUndefined extends UriQuery {\n  override isDefined(): boolean {\n    return false;\n  }\n\n  override isEmpty(): boolean {\n    return true;\n  }\n\n  override head(): [string | undefined, string] {\n    throw new Error(\"undefined query\");\n  }\n\n  override get key(): string | undefined {\n    throw new Error(\"undefined query\");\n  }\n\n  override get value(): string {\n    throw new Error(\"undefined query\");\n  }\n\n  override tail(): UriQuery {\n    throw new Error(\"undefined query\");\n  }\n\n  /** @hidden */\n  override setTail(tail: UriQuery): void {\n    throw new Error(\"undefined query\");\n  }\n\n  /** @hidden */\n  override dealias(): UriQuery {\n    return this;\n  }\n\n  override updated(key: string, value: string): UriQuery {\n    return UriQuery.param(key, value, this);\n  }\n\n  override removed(key: string): UriQuery {\n    return this;\n  }\n\n  override appended(key: string | undefined, value: string): UriQuery;\n  override appended(params: AnyUriQuery): UriQuery;\n  override appended(key: AnyUriQuery | undefined, value?: string): UriQuery {\n    const builder = new UriQueryBuilder();\n    builder.add(key as any, value as any);\n    return builder.bind();\n  }\n\n  override prepended(key: string | undefined, value: string): UriQuery;\n  override prepended(params: AnyUriQuery): UriQuery;\n  override prepended(key: AnyUriQuery | undefined, value?: string): UriQuery {\n    const builder = new UriQueryBuilder();\n    builder.add(key as any, value as any);\n    return builder.bind();\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"UriQuery\").write(46/*'.'*/).write(\"undefined\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override display(output: Output): void {\n    // nop\n  }\n\n  override toString(): string {\n    return \"\";\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {PairBuilder} from \"@swim/util\";\nimport {AnyUriQuery, UriQuery} from \"./UriQuery\";\n\nexport class UriQueryBuilder implements PairBuilder<string | undefined, string, UriQuery> {\n  /** @hidden */\n  first: UriQuery;\n  /** @hidden */\n  last: UriQuery | null;\n  /** @hidden */\n  size: number;\n  /** @hidden */\n  aliased: number;\n\n  constructor() {\n    this.first = UriQuery.undefined();\n    this.last = null;\n    this.size = 0;\n    this.aliased = 0;\n  }\n\n  isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  add(key: string | undefined, value: string): void;\n  add(params: AnyUriQuery): void;\n  add(key: AnyUriQuery | undefined, value?: string): void {\n    if (value !== void 0) {\n      this.addParam(key as string | undefined, value);\n    } else if (typeof key === \"string\") {\n      this.addParam(void 0, key);\n    } else if (key instanceof UriQuery) {\n      this.addQuery(key);\n    } else {\n      const params = key!;\n      for (const k in params) {\n        let key = k as string | undefined;\n        const value = params[k]!;\n        if (k.charCodeAt(0) === 36/*'$'*/) {\n          key = void 0;\n        }\n        this.addParam(key, value);\n      }\n    }\n  }\n\n  bind(): UriQuery {\n    this.aliased = 0;\n    return this.first;\n  }\n\n  addParam(value: string): void;\n  addParam(key: string | undefined, value: string): void;\n  addParam(key: string | undefined, value?: string): void {\n    if (value === void 0) {\n      value = key!;\n      key = void 0;\n    }\n    const tail = UriQuery.param(key, value, UriQuery.undefined());\n    const size = this.size;\n    if (size === 0) {\n      this.first = tail;\n    } else {\n      this.dealias(size - 1).setTail(tail);\n    }\n    this.last = tail;\n    this.size = size + 1;\n    this.aliased += 1;\n  }\n\n  addQuery(query: UriQuery): void {\n    if (!query.isEmpty()) {\n      let size = this.size;\n      if (size === 0) {\n        this.first = query;\n      } else {\n        this.dealias(size - 1).setTail(query);\n      }\n      size += 1;\n      do {\n        const tail = query.tail();\n        if (!tail.isEmpty()) {\n          query = tail;\n          size += 1;\n        } else {\n          break;\n        }\n      } while (true);\n      this.last = query;\n      this.size = size;\n    }\n  }\n\n  /** @hidden */\n  dealias(n: number): UriQuery {\n    let i = 0;\n    let xi: UriQuery | null = null;\n    let xs = this.first;\n    if (this.aliased <= n) {\n      while (i < this.aliased) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n      while (i <= n) {\n        const xn = xs.dealias();\n        if (i === 0) {\n          this.first = xn;\n        } else {\n          xi!.setTail(xn);\n        }\n        xi = xn;\n        xs = xs.tail();\n        i += 1;\n      }\n      if (i === this.size) {\n        this.last = xi;\n      }\n      this.aliased = i;\n    } else if (n === 0) {\n      xi = this.first;\n    } else if (n === this.size - 1) {\n      xi = this.last;\n    } else {\n      while (i <= n) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n    }\n    return xi!;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Compare, Lazy, Strings, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriFragment = UriFragment | string;\n\nexport class UriFragment implements HashCode, Compare, Debug, Display {\n  /** @hidden */\n  constructor(identifier: string | undefined) {\n    Object.defineProperty(this, \"identifier\", {\n      value: identifier,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return this.identifier !== void 0;\n  }\n\n  readonly identifier!: string | undefined;\n\n  toAny(): string | undefined {\n    return this.identifier;\n  }\n\n  compareTo(that: UriFragment): number {\n    if (that instanceof UriFragment) {\n      return this.toString().localeCompare(that.toString());\n    }\n    return NaN;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriFragment) {\n      return this.identifier === that.identifier;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Strings.hash(this.identifier);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriFragment\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    const stringValue = this.stringValue\n    if (stringValue !== void 0) {\n      output = output.write(stringValue);\n    } else if (this.identifier !== void 0) {\n      Uri.writeFragment(this.identifier, output);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = Format.display(this);\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  @Lazy\n  static undefined(): UriFragment {\n    return new UriFragment(void 0);\n  }\n\n  static create(identifier: string | undefined): UriFragment {\n    if (identifier !== void 0) {\n      const cache = UriFragment.cache;\n      const fragment = cache.get(identifier);\n      if (fragment !== void 0) {\n        return fragment;\n      } else {\n        return cache.put(identifier, new UriFragment(identifier));\n      }\n    } else {\n      return UriFragment.undefined();\n    }\n  }\n\n  static fromAny(value: AnyUriFragment | null | undefined): UriFragment {\n    if (value === void 0 || value === null) {\n      return UriFragment.undefined();\n    } else if (value instanceof UriFragment) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return UriFragment.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static parse(fragmentPart: string): UriFragment {\n    return Uri.standardParser.parseFragmentString(fragmentPart);\n  }\n\n  /** @hidden */\n  @Lazy\n  static get cache(): HashGenCacheMap<string, UriFragment> {\n    const cacheSize = 32;\n    return new HashGenCacheMap<string, UriFragment>(cacheSize);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Form} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"./Uri\";\n\n/** @hidden */\nexport class UriForm extends Form<Uri, AnyUri> {\n  constructor(unit: Uri | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: Uri | undefined;\n\n  override withUnit(unit: Uri | undefined): Form<Uri, AnyUri> {\n    if (unit !== this.unit) {\n      return new UriForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(object: AnyUri, item?: Item): Item {\n    object = Uri.fromAny(object);\n    if (item === void 0) {\n      return Text.from(object.toString());\n    } else {\n      return item.concat(Text.from(object.toString()));\n    }\n  }\n\n  override cast(item: Item, object?: Uri): Uri | undefined {\n    const value = item.target;\n    try {\n      const string = value.stringValue();\n      if (typeof string === \"string\") {\n        return Uri.parse(string);\n      }\n    } catch (error) {\n      // swallow\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashGenCacheMap} from \"@swim/util\";\nimport {AnyUri, Uri} from \"./Uri\";\n\nexport class UriCache {\n  constructor(base: Uri, size: number = 32) {\n    Object.defineProperty(this, \"base\", {\n      value: base,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"resolveCache\", {\n      value: new HashGenCacheMap(size),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"unresolveCache\", {\n      value: new HashGenCacheMap(size),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly base!: Uri;\n\n  /** @hidden */\n  readonly resolveCache!: HashGenCacheMap<Uri, Uri>;\n\n  /** @hidden */\n  readonly unresolveCache!: HashGenCacheMap<Uri, Uri>;\n\n  resolve(relative: AnyUri): Uri {\n    relative = Uri.fromAny(relative);\n    let absolute = this.resolveCache.get(relative as Uri);\n    if (absolute === void 0) {\n      absolute = this.base.resolve(relative);\n      this.resolveCache.put(relative as Uri, absolute);\n    }\n    return absolute;\n  }\n\n  unresolve(absolute: AnyUri): Uri {\n    absolute = Uri.fromAny(absolute);\n    let relative = this.unresolveCache.get(absolute as Uri);\n    if (relative === void 0) {\n      relative = this.base.unresolve(absolute);\n      this.unresolveCache.put(absolute as Uri, relative);\n    }\n    return relative;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport {UriScheme} from \"../UriScheme\";\nimport {UriAuthority} from \"../UriAuthority\";\nimport {UriUser} from \"../UriUser\";\nimport {UriHost} from \"../UriHost\";\nimport {UriPort} from \"../UriPort\";\nimport {UriPath} from \"../UriPath\";\nimport {UriPathBuilder} from \"../UriPathBuilder\";\nimport type {UriQuery} from \"../UriQuery\";\nimport {UriQueryBuilder} from \"../UriQueryBuilder\";\nimport {UriFragment} from \"../UriFragment\";\nimport {UriAbsoluteParser} from \"../\"; // forward import\nimport {UriSchemeParser} from \"../\"; // forward import\nimport {UriAuthorityParser} from \"../\"; // forward import\nimport {UriUserParser} from \"../\"; // forward import\nimport {UriHostParser} from \"../\"; // forward import\nimport {UriHostAddressParser} from \"../\"; // forward import\nimport {UriHostLiteralParser} from \"../\"; // forward import\nimport {UriPortParser} from \"../\"; // forward import\nimport {UriPathParser} from \"../\"; // forward import\nimport {UriQueryParser} from \"../\"; // forward import\nimport {UriFragmentParser} from \"../\"; // forward import\n\nexport class UriParser {\n  absolute(scheme?: UriScheme, authority?: UriAuthority, path?: UriPath,\n           query?: UriQuery, fragment?: UriFragment): Uri {\n    return Uri.create(scheme, authority, path, query, fragment);\n  }\n\n  scheme(name: string): UriScheme {\n    return UriScheme.create(name);\n  }\n\n  authority(user?: UriUser, host?: UriHost, port?: UriPort): UriAuthority {\n    return UriAuthority.create(user, host, port);\n  }\n\n  user(username: string | undefined, password?: string | undefined): UriUser {\n    return UriUser.create(username, password);\n  }\n\n  hostName(address: string): UriHost {\n    return UriHost.hostname(address);\n  }\n\n  hostIPv4(address: string): UriHost {\n    return UriHost.ipv4(address);\n  }\n\n  hostIPv6(address: string): UriHost {\n    return UriHost.ipv6(address);\n  }\n\n  port(number: number): UriPort {\n    return UriPort.create(number);\n  }\n\n  pathEmpty(): UriPath {\n    return UriPath.empty();\n  }\n\n  pathBuilder(): UriPathBuilder {\n    return new UriPathBuilder();\n  }\n\n  queryBuilder(): UriQueryBuilder {\n    return new UriQueryBuilder();\n  }\n\n  fragment(identifier: string | undefined): UriFragment {\n    return UriFragment.create(identifier);\n  }\n\n  absoluteParser(): Parser<Uri> {\n    return new UriAbsoluteParser(this);\n  }\n\n  parseAbsolute(input: Input): Parser<Uri> {\n    return UriAbsoluteParser.parse(input, this);\n  }\n\n  parseAbsoluteString(string: string): Uri {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseAbsolute(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  schemeParser(): Parser<UriScheme> {\n    return new UriSchemeParser(this);\n  }\n\n  parseScheme(input: Input): Parser<UriScheme> {\n    return UriSchemeParser.parse(input, this);\n  }\n\n  parseSchemeString(string: string): UriScheme {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseScheme(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  authorityParser(): Parser<UriAuthority> {\n    return new UriAuthorityParser(this);\n  }\n\n  parseAuthority(input: Input): Parser<UriAuthority> {\n    return UriAuthorityParser.parse(input, this);\n  }\n\n  parseAuthorityString(string: string): UriAuthority {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseAuthority(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  userParser(): Parser<UriUser> {\n    return new UriUserParser(this);\n  }\n\n  parseUser(input: Input): Parser<UriUser> {\n    return UriUserParser.parse(input, this);\n  }\n\n  parseUserString(string: string): UriUser {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseUser(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  hostParser(): Parser<UriHost> {\n    return new UriHostParser(this);\n  }\n\n  parseHost(input: Input): Parser<UriHost> {\n    return UriHostParser.parse(input, this);\n  }\n\n  parseHostString(string: string): UriHost {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseHost(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  hostAddressParser(): Parser<UriHost> {\n    return new UriHostAddressParser(this);\n  }\n\n  parseHostAddress(input: Input): Parser<UriHost> {\n    return UriHostAddressParser.parse(input, this);\n  }\n\n  hostLiteralParser(): Parser<UriHost> {\n    return new UriHostLiteralParser(this);\n  }\n\n  parseHostLiteral(input: Input): Parser<UriHost> {\n    return UriHostLiteralParser.parse(input, this);\n  }\n\n  portParser(): Parser<UriPort> {\n    return new UriPortParser(this);\n  }\n\n  parsePort(input: Input): Parser<UriPort> {\n    return UriPortParser.parse(input, this);\n  }\n\n  parsePortString(string: string): UriPort {\n    const input = Unicode.stringInput(string);\n    let parser = this.parsePort(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  pathParser(builder?: UriPathBuilder): Parser<UriPath> {\n    return new UriPathParser(this, builder);\n  }\n\n  parsePath(input: Input, builder?: UriPathBuilder): Parser<UriPath> {\n    return UriPathParser.parse(input, this, builder);\n  }\n\n  parsePathString(string: string): UriPath {\n    const input = Unicode.stringInput(string);\n    let parser = this.parsePath(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  queryParser(builder?: UriQueryBuilder): Parser<UriQuery> {\n    return new UriQueryParser(this, builder);\n  }\n\n  parseQuery(input: Input, builder?: UriQueryBuilder): Parser<UriQuery> {\n    return UriQueryParser.parse(input, this, builder);\n  }\n\n  parseQueryString(string: string): UriQuery {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseQuery(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  fragmentParser(): Parser<UriFragment> {\n    return new UriFragmentParser(this);\n  }\n\n  parseFragment(input: Input): Parser<UriFragment> {\n    return UriFragmentParser.parse(input, this);\n  }\n\n  parseFragmentString(string: string): UriFragment {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseFragment(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport type {UriScheme} from \"../UriScheme\";\nimport type {UriAuthority} from \"../UriAuthority\";\nimport {UriPath} from \"../UriPath\";\nimport type {UriQuery} from \"../UriQuery\";\nimport type {UriFragment} from \"../UriFragment\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriAbsoluteParser extends Parser<Uri> {\n  private readonly uri: UriParser;\n  private readonly schemeParser: Parser<UriScheme> | undefined;\n  private readonly authorityParser: Parser<UriAuthority> | undefined;\n  private readonly pathParser: Parser<UriPath> | undefined;\n  private readonly queryParser: Parser<UriQuery> | undefined;\n  private readonly fragmentParser: Parser<UriFragment> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, schemeParser?: Parser<UriScheme>,\n              authorityParser?: Parser<UriAuthority>, pathParser?: Parser<UriPath>,\n              queryParser?: Parser<UriQuery>, fragmentParser?: Parser<UriFragment>, step?: number) {\n    super();\n    this.uri = uri;\n    this.schemeParser = schemeParser;\n    this.authorityParser = authorityParser;\n    this.pathParser = pathParser;\n    this.queryParser = queryParser;\n    this.fragmentParser = fragmentParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<Uri> {\n    return UriAbsoluteParser.parse(input, this.uri, this.schemeParser, this.authorityParser,\n                                   this.pathParser, this.queryParser, this.fragmentParser, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, schemeParser?: Parser<UriScheme>,\n               authorityParser?: Parser<UriAuthority>, pathParser?: Parser<UriPath>,\n               queryParser?: Parser<UriQuery>, fragmentParser?: Parser<UriFragment>,\n               step: number = 1): Parser<Uri> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        const look = input.clone();\n        while (look.isCont() && (c = look.head(), Uri.isSchemeChar(c))) {\n          look.step();\n        }\n        if (look.isCont() && c === 58/*':'*/) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (input.isDone()) {\n        step = 3;\n      }\n    }\n    if (step === 2) {\n      if (schemeParser === void 0) {\n        schemeParser = uri.parseScheme(input);\n      } else {\n        schemeParser = schemeParser.feed(input);\n      }\n      if (schemeParser.isDone()) {\n        if (input.isCont() && input.head() === 58/*':'*/) {\n          input = input.step();\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(58/*':'*/, input));\n        }\n      } else if (schemeParser.isError()) {\n        return schemeParser.asError();\n      }\n    }\n    if (step === 3) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 47/*'/'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c === 63/*'?'*/) {\n          input = input.step();\n          step = 7;\n        } else if (c === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else {\n          step = 6;\n        }\n      } else if (input.isDone()) {\n        return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && input.head() === 47/*'/'*/) {\n        input = input.step();\n        step = 5;\n      } else if (input.isCont()) {\n        const pathBuilder = uri.pathBuilder();\n        pathBuilder.addSlash();\n        pathParser = uri.parsePath(input, pathBuilder);\n        step = 6;\n      } else if (input.isDone()) {\n        return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                        void 0,\n                                        UriPath.slash()));\n      }\n    }\n    if (step === 5) {\n      if (authorityParser === void 0) {\n        authorityParser = uri.parseAuthority(input);\n      } else {\n        authorityParser = authorityParser.feed(input);\n      }\n      if (authorityParser.isDone()) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 63/*'?'*/) {\n            input = input.step();\n            step = 7;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 8;\n          } else {\n            step = 6;\n          }\n        } else if (input.isDone()) {\n          return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                          authorityParser !== void 0 ? authorityParser.bind() : void 0));\n        }\n      } else if (authorityParser.isError()) {\n        return authorityParser.asError();\n      }\n    }\n    if (step === 6) {\n      if (pathParser === void 0) {\n        pathParser = uri.parsePath(input);\n      } else {\n        pathParser = pathParser.feed(input);\n      }\n      if (pathParser.isDone()) {\n        if (input.isCont() && input.head() === 63/*'?'*/) {\n          input = input.step();\n          step = 7;\n        } else if (input.isCont() && input.head() === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                          authorityParser !== void 0 ? authorityParser.bind() : void 0,\n                                          pathParser.bind()));\n        }\n      } else if (pathParser.isError()) {\n        return pathParser.asError();\n      }\n    }\n    if (step === 7) {\n      if (queryParser === void 0) {\n        queryParser = uri.parseQuery(input);\n      } else {\n        queryParser = queryParser.feed(input);\n      }\n      if (queryParser.isDone()) {\n        if (input.isCont() && input.head() === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                          authorityParser !== void 0 ? authorityParser.bind() : void 0,\n                                          pathParser !== void 0 ? pathParser.bind() : void 0,\n                                          queryParser.bind()));\n        }\n      } else if (queryParser.isError()) {\n        return queryParser.asError();\n      }\n    }\n    if (step === 8) {\n      if (fragmentParser === void 0) {\n        fragmentParser = uri.parseFragment(input);\n      } else {\n        fragmentParser = fragmentParser.feed(input);\n      }\n      if (fragmentParser.isDone()) {\n        return Parser.done(uri.absolute(schemeParser !== void 0 ? schemeParser.bind() : void 0,\n                                        authorityParser !== void 0 ? authorityParser.bind() : void 0,\n                                        pathParser !== void 0 ? pathParser.bind() : void 0,\n                                        queryParser !== void 0 ? queryParser.bind() : void 0,\n                                        fragmentParser.bind()));\n      } else if (fragmentParser.isError()) {\n        return fragmentParser.asError();\n      }\n    }\n    return new UriAbsoluteParser(uri, schemeParser, authorityParser, pathParser,\n                                 queryParser, fragmentParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Utf8} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport type {UriScheme} from \"../UriScheme\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriSchemeParser extends Parser<UriScheme> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<UriScheme> {\n    return UriSchemeParser.parse(input, this.uri, this.output, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>, step: number = 1): Parser<UriScheme> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && (c = input.head(), Uri.isAlpha(c))) {\n        input = input.step();\n        output = output || Utf8.decodedString();\n        output = output.write(Uri.toLowerCase(c));\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"scheme\", input));\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Uri.isSchemeChar(c))) {\n        input = input.step();\n        output!.write(Uri.toLowerCase(c));\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(uri.scheme(output!.bind()));\n      }\n    }\n    return new UriSchemeParser(uri, output, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Diagnostic, Parser} from \"@swim/codec\";\nimport type {UriAuthority} from \"../UriAuthority\";\nimport type {UriUser} from \"../UriUser\";\nimport type {UriHost} from \"../UriHost\";\nimport type {UriPort} from \"../UriPort\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriAuthorityParser extends Parser<UriAuthority> {\n  private readonly uri: UriParser;\n  private readonly userParser: Parser<UriUser> | undefined;\n  private readonly hostParser: Parser<UriHost> | undefined;\n  private readonly portParser: Parser<UriPort> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, userParser?: Parser<UriUser>, hostParser?: Parser<UriHost>,\n              portParser?: Parser<UriPort>, step?: number) {\n    super();\n    this.uri = uri;\n    this.userParser = userParser;\n    this.hostParser = hostParser;\n    this.portParser = portParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<UriAuthority> {\n    return UriAuthorityParser.parse(input, this.uri, this.userParser, this.hostParser,\n                                    this.portParser, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, userParser?: Parser<UriUser>, hostParser?: Parser<UriHost>,\n               portParser?: Parser<UriPort>, step: number = 1): Parser<UriAuthority> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        const look = input.clone();\n        while (look.isCont() && (c = look.head(), c !== 64/*'@'*/ && c !== 47/*'/'*/)) {\n          look.step();\n        }\n        if (look.isCont() && c === 64/*'@'*/) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (input.isDone()) {\n        step = 3;\n      }\n    }\n    if (step === 2) {\n      if (userParser === void 0) {\n        userParser = uri.parseUser(input);\n      } else {\n        userParser = userParser.feed(input);\n      }\n      if (userParser.isDone()) {\n        if (input.isCont() && input.head() === 64/*'@'*/) {\n          input = input.step();\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(64/*'@'*/, input));\n        }\n      } else if (userParser.isError()) {\n        return userParser.asError();\n      }\n    }\n    if (step === 3) {\n      if (hostParser === void 0) {\n        hostParser = uri.parseHost(input);\n      } else {\n        hostParser = hostParser.feed(input);\n      }\n      if (hostParser.isDone()) {\n        if (input.isCont() && input.head() === 58/*':'*/) {\n          input = input.step();\n          step = 4;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.authority(userParser !== void 0 ? userParser.bind() : void 0,\n                                           hostParser.bind()));\n        }\n      } else if (hostParser.isError()) {\n        return hostParser.asError();\n      }\n    }\n    if (step === 4) {\n      if (portParser === void 0) {\n        portParser = uri.parsePort(input);\n      } else {\n        portParser = portParser.feed(input);\n      }\n      if (portParser.isDone()) {\n        return Parser.done(uri.authority(userParser !== void 0 ? userParser.bind() : void 0,\n                                         hostParser!.bind(),\n                                         portParser.bind()));\n      } else if (portParser.isError()) {\n        return portParser.asError();\n      }\n    }\n    return new UriAuthorityParser(uri, userParser, hostParser, portParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport type {UriUser} from \"../UriUser\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriUserParser extends Parser<UriUser> {\n  private readonly uri: UriParser;\n  private readonly usernameOutput: Output<string> | undefined;\n  private readonly passwordOutput: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, usernameOutput?: Output<string>,\n              passwordOutput?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.usernameOutput = usernameOutput;\n    this.passwordOutput = passwordOutput;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<UriUser> {\n    return UriUserParser.parse(input, this.uri, this.usernameOutput,\n                               this.passwordOutput, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, usernameOutput?: Output<string>,\n               passwordOutput?: Output<string>, c1: number = 0, step: number = 1): Parser<UriUser> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        usernameOutput = usernameOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isUserChar(c))) {\n          input = input.step();\n          usernameOutput!.write(c);\n        }\n        if (input.isCont() && c === 58/*':'*/) {\n          input = input.step();\n          step = 4;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.user(usernameOutput.bind()));\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          usernameOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 4) {\n        passwordOutput = passwordOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isUserInfoChar(c))) {\n          input = input.step();\n          passwordOutput.write(c);\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 5;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.user(usernameOutput!.bind(), passwordOutput.bind()));\n        }\n      }\n      if (step === 5) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          passwordOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 4;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriUserParser(uri, usernameOutput, passwordOutput, c1, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {UriHost} from \"../UriHost\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n\n  constructor(uri: UriParser) {\n    super();\n    this.uri = uri;\n  }\n\n  override feed(input: Input): Parser<UriHost> {\n    return UriHostParser.parse(input, this.uri);\n  }\n\n  static parse(input: Input, uri: UriParser): Parser<UriHost> {\n    if (input.isCont()) {\n      const c = input.head();\n      if (c === 91/*'['*/) {\n        return uri.parseHostLiteral(input);\n      } else {\n        return uri.parseHostAddress(input);\n      }\n    } else if (input.isDone()) {\n      return Parser.done(uri.hostName(\"\"));\n    }\n    return new UriHostParser(uri);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base10, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport type {UriHost} from \"../UriHost\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostAddressParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly x: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, c1?: number, x?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.c1 = c1;\n    this.x = x;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<UriHost> {\n    return UriHostAddressParser.parse(input, this.uri, this.output, this.c1, this.x, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>,\n               c1: number = 0, x: number = 0, step: number = 1): Parser<UriHost> {\n    let c = 0;\n    output = output || Utf8.decodedString();\n    while (step <= 4) {\n      while (input.isCont() && (c = input.head(), Base10.isDigit(c))) {\n        input = input.step();\n        output = output.write(c);\n        x = 10 * x + Base10.decodeDigit(c);\n      }\n      if (input.isCont()) {\n        if (c === 46/*'.'*/ && step < 4 && x <= 255) {\n          input = input.step();\n          output = output.write(c);\n          x = 0;\n          step += 1;\n        } else if (!Uri.isHostChar(c) && c !== 37/*'%'*/ && step === 4 && x <= 255) {\n          return Parser.done(uri.hostIPv4(output.bind()));\n        } else {\n          x = 0;\n          step = 5;\n          break;\n        }\n      } else if (!input.isEmpty()) {\n        if (step === 4 && x <= 255) {\n          return Parser.done(uri.hostIPv4(output.bind()));\n        } else {\n          return Parser.done(uri.hostName(output.bind()));\n        }\n      } else {\n        break;\n      }\n    }\n    do {\n      if (step === 5) {\n        while (input.isCont() && (c = input.head(), Uri.isHostChar(c))) {\n          input = input.step();\n          output!.write(Uri.toLowerCase(c));\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.hostName(output!.bind()));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 7;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 7) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          output!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 5;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriHostAddressParser(uri, output, c1, x, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Utf8} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport type {UriHost} from \"../UriHost\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostLiteralParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<UriHost> {\n    return UriHostLiteralParser.parse(input, this.uri, this.output, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>, step: number = 1): Parser<UriHost> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 91/*'['*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(91/*'['*/, input));\n      }\n    }\n    if (step === 2) {\n      output = output || Utf8.decodedString();\n      while (input.isCont() && (c = input.head(), Uri.isHostChar(c) || c === 58/*':'*/)) {\n        input = input.step();\n        output = output.write(Uri.toLowerCase(c));\n      }\n      if (input.isCont() && c === 93/*']'*/) {\n        input = input.step();\n        return Parser.done(uri.hostIPv6(output.bind()));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(93/*']'*/, input));\n      }\n    }\n    return new UriHostLiteralParser(uri, output, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Base10} from \"@swim/codec\";\nimport type {UriPort} from \"../UriPort\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriPortParser extends Parser<UriPort> {\n  private readonly uri: UriParser;\n  private readonly number: number | undefined;\n\n  constructor(uri: UriParser, number?: number) {\n    super();\n    this.uri = uri;\n    this.number = number;\n  }\n\n  override feed(input: Input): Parser<UriPort> {\n    return UriPortParser.parse(input, this.uri, this.number);\n  }\n\n  static parse(input: Input, uri: UriParser, number: number = 0): Parser<UriPort> {\n    let c = 0;\n    while (input.isCont() && (c = input.head(), Base10.isDigit(c))) {\n      input = input.step();\n      number = 10 * number + Base10.decodeDigit(c);\n    }\n    if (!input.isEmpty()) {\n      return Parser.done(uri.port(number));\n    }\n    return new UriPortParser(uri, number);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport type {UriPath} from \"../UriPath\";\nimport type {UriPathBuilder} from \"../UriPathBuilder\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriPathParser extends Parser<UriPath> {\n  private readonly uri: UriParser;\n  private readonly builder: UriPathBuilder | undefined;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, builder?: UriPathBuilder, output?: Output<string>,\n              c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.builder = builder;\n    this.output = output;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<UriPath> {\n    return UriPathParser.parse(input, this.uri, this.builder, this.output, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, builder?: UriPathBuilder, output?: Output<string>,\n               c1: number = 0, step: number = 1): Parser<UriPath> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Uri.isPathChar(c))) {\n          output = output || Utf8.decodedString();\n          input = input.step();\n          output = output.write(c);\n        }\n        if (input.isCont() && c === 47/*'/'*/) {\n          input = input.step();\n          builder = builder || uri.pathBuilder();\n          if (output !== void 0) {\n            builder.addSegment(output.bind());\n            output = void 0;\n          }\n          builder.addSlash();\n          continue;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          if (output !== void 0) {\n            builder = builder || uri.pathBuilder();\n            builder.addSegment(output.bind());\n          }\n          if (builder !== void 0) {\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(uri.pathEmpty());\n          }\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          output = output || Utf8.decodedString();\n          input = input.step();\n          output = output.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriPathParser(uri, builder, output, c1, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport type {UriQuery} from \"../UriQuery\";\nimport type {UriQueryBuilder} from \"../UriQueryBuilder\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriQueryParser extends Parser<UriQuery> {\n  private readonly uri: UriParser;\n  private readonly builder: UriQueryBuilder | undefined;\n  private readonly keyOutput: Output<string> | undefined;\n  private readonly valueOutput: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, builder?: UriQueryBuilder, keyOutput?: Output<string>,\n              valueOutput?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.builder = builder;\n    this.keyOutput = keyOutput;\n    this.valueOutput = valueOutput;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<UriQuery> {\n    return UriQueryParser.parse(input, this.uri, this.builder, this.keyOutput,\n                                this.valueOutput, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, builder?: UriQueryBuilder, keyOutput?: Output<string>,\n               valueOutput?: Output<string>, c1: number = 0, step: number = 1): Parser<UriQuery> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        keyOutput = keyOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isParamChar(c))) {\n          input = input.step();\n          keyOutput.write(c);\n        }\n        if (input.isCont() && c === 61/*'='*/) {\n          input = input.step();\n          step = 4;\n        } else if (input.isCont() && c === 38/*'&'*/) {\n          input = input.step();\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput.bind());\n          keyOutput = void 0;\n          continue;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput.bind());\n          return Parser.done(builder.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          keyOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 4) {\n        valueOutput = valueOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isParamChar(c) || c === 61/*'='*/)) {\n          input = input.step();\n          valueOutput.write(c);\n        }\n        if (input.isCont() && c === 38/*'&'*/) {\n          input = input.step();\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput!.bind(), valueOutput.bind());\n          keyOutput = void 0;\n          valueOutput = void 0;\n          step = 1;\n          continue;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 5;\n        } else if (!input.isEmpty()) {\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput!.bind(), valueOutput.bind());\n          return Parser.done(builder.bind());\n        }\n      }\n      if (step === 5) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          valueOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 4;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriQueryParser(uri, builder, keyOutput, valueOutput, c1, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"../Uri\";\nimport type {UriFragment} from \"../UriFragment\";\nimport type {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriFragmentParser extends Parser<UriFragment> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<UriFragment> {\n    return UriFragmentParser.parse(input, this.uri, this.output, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>,\n               c1: number = 0, step: number = 1): Parser<UriFragment> {\n    let c = 0;\n    output = output || Utf8.decodedString();\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Uri.isFragmentChar(c))) {\n          input = input.step();\n          output = output.write(c);\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.fragment(output.bind()));\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          output = output.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriFragmentParser(uri, output, c1, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class LengthException extends Error {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, LengthException.prototype);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Equivalent, Compare, Lazy} from \"@swim/util\";\nimport {Output, Parser, Debug, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport {Attr, Value, Text, Form} from \"@swim/structure\";\nimport {LengthException} from \"./LengthException\";\nimport {PxLength} from \"../\"; // forward import\nimport {EmLength} from \"../\"; // forward import\nimport {RemLength} from \"../\"; // forward import\nimport {PctLength} from \"../\"; // forward import\nimport {UnitlessLength} from \"../\"; // forward import\nimport {LengthInterpolator} from \"../\"; // forward import\nimport {LengthForm} from \"../\"; // forward import\nimport {LengthParser} from \"../\"; // forward import\n\nexport type LengthUnits = \"px\" | \"em\" | \"rem\" | \"%\" | \"\";\n\nexport interface LengthBasis {\n  emUnit?: Node | number;\n  remUnit?: number;\n  pctUnit?: number;\n}\n\nexport type AnyLength = Length | string | number;\n\nexport abstract class Length implements Interpolate<Length>, HashCode, Equivalent, Compare, Debug {\n  isDefined(): boolean {\n    return isFinite(this.value);\n  }\n\n  abstract readonly value: number;\n\n  abstract readonly units: LengthUnits;\n\n  plus(that: AnyLength, units: LengthUnits = this.units, basis?: LengthBasis | number): Length {\n    that = Length.fromAny(that);\n    return Length.create(this.toValue(units, basis) + that.toValue(units, basis), units);\n  }\n\n  negative(units: LengthUnits = this.units, basis?: LengthBasis | number): Length {\n    return Length.create(-this.toValue(units, basis), units);\n  }\n\n  minus(that: AnyLength, units: LengthUnits = this.units, basis?: LengthBasis | number): Length {\n    that = Length.fromAny(that);\n    return Length.create(this.toValue(units, basis) - that.toValue(units, basis), units);\n  }\n\n  times(scalar: number, units: LengthUnits = this.units, basis?: LengthBasis | number): Length {\n    return Length.create(this.toValue(units, basis) * scalar, units);\n  }\n\n  divide(scalar: number, units: LengthUnits = this.units, basis?: LengthBasis | number): Length {\n    return Length.create(this.toValue(units, basis) / scalar, units);\n  }\n\n  combine(that: AnyLength, scalar: number = 1, units: LengthUnits = this.units, basis?: LengthBasis | number): Length {\n    that = Length.fromAny(that);\n    return Length.create(this.toValue(units, basis) + that.toValue(units, basis) * scalar, units);\n  }\n\n  abstract pxValue(basis?: LengthBasis | number): number;\n\n  emValue(basis?: LengthBasis | number): number {\n    return this.value !== 0 ? this.pxValue(basis) / Length.emUnit(basis) : 0;\n  }\n\n  remValue(basis?: LengthBasis | number): number {\n    return this.value !== 0 ? this.pxValue(basis) / Length.remUnit(basis) : 0;\n  }\n\n  pctValue(basis?: LengthBasis | number): number {\n    return this.value !== 0 ? this.pxValue(basis) / Length.pctUnit(basis) : 0;\n  }\n\n  px(basis?: LengthBasis | number): PxLength {\n    return Length.px(this.pxValue(basis));\n  }\n\n  em(basis?: LengthBasis | number): EmLength {\n    return Length.em(this.emValue(basis));\n  }\n\n  rem(basis?: LengthBasis | number): RemLength {\n    return Length.rem(this.remValue(basis));\n  }\n\n  pct(basis?: LengthBasis | number): PctLength {\n    return Length.pct(this.pctValue(basis));\n  }\n\n  toValue(): Value;\n  toValue(units: LengthUnits, basis?: LengthBasis | number): number;\n  toValue(units?: LengthUnits, basis?: LengthBasis | number): Value | number {\n    if (units === void 0) {\n      return Text.from(this.toString());\n    } else {\n      switch (units) {\n        case \"px\": return this.pxValue(basis);\n        case \"em\": return this.emValue(basis);\n        case \"rem\": return this.remValue(basis);\n        case \"%\": return this.pctValue(basis);\n        default: throw new LengthException(\"unknown length units: \" + units);\n      }\n    }\n  }\n\n  to(units: LengthUnits, basis?: LengthBasis | number): Length {\n    switch (units) {\n      case \"px\": return this.px(basis);\n      case \"em\": return this.em(basis);\n      case \"rem\": return this.rem(basis);\n      case \"%\": return this.pct(basis);\n      default: throw new LengthException(\"unknown length units: \" + units);\n    }\n  }\n\n  abstract toCssValue(): CSSUnitValue | null;\n\n  interpolateTo(that: Length): Interpolator<Length>;\n  interpolateTo(that: unknown): Interpolator<Length> | null;\n  interpolateTo(that: unknown): Interpolator<Length> | null {\n    if (that instanceof Length) {\n      return LengthInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  abstract compareTo(that: unknown): number;\n\n  abstract equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  abstract toString(): string;\n\n  static zero(units?: LengthUnits): Length {\n    switch (units) {\n      case void 0:\n      case \"px\": return PxLength.zero();\n      case \"em\": return EmLength.zero();\n      case \"rem\": return RemLength.zero();\n      case \"%\": return PctLength.zero();\n      case \"\": return UnitlessLength.zero();\n      default: throw new LengthException(\"unknown length units: \" + units);\n    }\n  }\n\n  static px(value: number): PxLength {\n    return new PxLength(value);\n  }\n\n  static em(value: number): EmLength {\n    return new EmLength(value);\n  }\n\n  static rem(value: number): RemLength {\n    return new RemLength(value);\n  }\n\n  static pct(value: number): PctLength {\n    return new PctLength(value);\n  }\n\n  static unitless(value: number): UnitlessLength {\n    return new UnitlessLength(value);\n  }\n\n  static create(value: number, units?: LengthUnits): Length {\n    switch (units) {\n      case void 0:\n      case \"px\": return Length.px(value);\n      case \"em\": return Length.em(value);\n      case \"rem\": return Length.rem(value);\n      case \"%\": return Length.pct(value);\n      case \"\": return Length.unitless(value);\n      default: throw new LengthException(\"unknown length units: \" + units);\n    }\n  }\n\n  static fromCssValue(value: CSSStyleValue): Length {\n    if (value instanceof CSSUnitValue) {\n      return Length.create(value.value, value.unit as LengthUnits);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static fromAny(value: AnyLength, defaultUnits?: LengthUnits): Length {\n    if (value === void 0 || value === null || value instanceof Length) {\n      return value;\n    } else if (typeof value === \"number\") {\n      return Length.create(value, defaultUnits);\n    } else if (typeof value === \"string\") {\n      return Length.parse(value, defaultUnits);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromValue(value: Value): Length | null {\n    if (value.length === 2) {\n      const num = value.getItem(0).numberValue(void 0);\n      const units = value.getItem(1);\n      if (num !== void 0 && isFinite(num) && units instanceof Attr && units.value === Value.extant()) {\n        switch (units.key.value) {\n          case \"px\": return Length.px(num);\n          case \"em\": return Length.em(num);\n          case \"rem\": return Length.rem(num);\n          case \"pct\": return Length.pct(num);\n          default:\n        }\n      }\n    }\n    return null;\n  }\n\n  static parse(string: string, defaultUnits?: LengthUnits): Length {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = LengthParser.parse(input, defaultUnits);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  @Lazy\n  static form(): Form<Length, AnyLength> {\n    return new LengthForm(void 0, Length.zero());\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyLength {\n    return value instanceof Length\n        || typeof value === \"number\"\n        || typeof value === \"string\";\n  }\n\n  /** @hidden */\n  static emUnit(basis?: LengthBasis | number): number {\n    if (typeof basis === \"object\" && typeof basis.emUnit === \"number\") {\n      return basis.emUnit;\n    } else if (typeof basis === \"object\" && basis.emUnit instanceof Node) {\n      let node: Node | null = basis.emUnit;\n      while (node !== null) {\n        if (node instanceof Element) {\n          const fontSize = getComputedStyle(node).fontSize;\n          if (typeof fontSize === \"string\") {\n            return parseFloat(fontSize);\n          }\n        }\n        node = node.parentNode;\n      }\n    }\n    throw new LengthException(\"unknown em unit\");\n  }\n\n  /** @hidden */\n  static remUnit(basis?: LengthBasis | number): number {\n    if (typeof basis === \"object\" && typeof basis.remUnit === \"number\") {\n      return basis.remUnit;\n    } else {\n      const fontSize = getComputedStyle(document.documentElement).fontSize;\n      if (typeof fontSize === \"string\") {\n        return parseFloat(fontSize);\n      }\n    }\n    throw new LengthException(\"unknown rem unit\");\n  }\n\n  /** @hidden */\n  static pctUnit(basis?: LengthBasis | number): number {\n    if (typeof basis === \"number\") {\n      return basis;\n    } else if (typeof basis === \"object\" && typeof basis.pctUnit === \"number\") {\n      return basis.pctUnit;\n    }\n    throw new LengthException(\"unknown percentage unit\");\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {LengthUnits, LengthBasis, Length} from \"./Length\";\n\nexport class PxLength extends Length {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override readonly value!: number;\n\n  override get units(): LengthUnits {\n    return \"px\";\n  }\n\n  override pxValue(basis?: LengthBasis | number): number {\n    return this.value;\n  }\n\n  override px(basis?: LengthBasis | number): PxLength {\n    return this;\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    if (typeof CSSUnitValue !== \"undefined\") {\n      return new CSSUnitValue(this.value, \"px\");\n    } else {\n      return null;\n    }\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Length) {\n      const x = this.value;\n      const y = that.pxValue();\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof Length) {\n      return Numbers.equivalent(this.value, that.pxValue());\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof PxLength) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(PxLength), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Length\").write(46/*'.'*/).write(\"px\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"px\";\n  }\n\n  @Lazy\n  static override zero(): PxLength {\n    return new PxLength(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {LengthUnits, LengthBasis, Length} from \"./Length\";\n\nexport class EmLength extends Length {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override readonly value!: number;\n\n  override get units(): LengthUnits {\n    return \"em\";\n  }\n\n  override pxValue(basis?: LengthBasis | number): number {\n    return this.value !== 0 ? this.value * Length.emUnit(basis) : 0;\n  }\n\n  override emValue(basis?: LengthBasis | number): number {\n    return this.value;\n  }\n\n  override em(basis?: LengthBasis | number): EmLength {\n    return this;\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    if (typeof CSSUnitValue !== \"undefined\") {\n      return new CSSUnitValue(this.value, \"em\");\n    } else {\n      return null;\n    }\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Length) {\n      const x = this.value;\n      const y = that.emValue();\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof Length) {\n      return Numbers.equivalent(this.value, that.emValue());\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof EmLength) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(EmLength), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Length\").write(46/*'.'*/).write(\"em\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"em\";\n  }\n\n  @Lazy\n  static override zero(): EmLength {\n    return new EmLength(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {LengthUnits, LengthBasis, Length} from \"./Length\";\n\nexport class RemLength extends Length {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override readonly value!: number;\n\n  override get units(): LengthUnits {\n    return \"rem\";\n  }\n\n  override pxValue(basis?: LengthBasis | number): number {\n    return this.value !== 0 ? this.value * Length.remUnit(basis) : 0;\n  }\n\n  override remValue(basis?: LengthBasis | number): number {\n    return this.value;\n  }\n\n  override rem(basis?: LengthBasis | number): RemLength {\n    return this;\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    if (typeof CSSUnitValue !== \"undefined\") {\n      return new CSSUnitValue(this.value, \"rem\");\n    } else {\n      return null;\n    }\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof RemLength) {\n      const x = this.value;\n      const y = that.remValue();\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof RemLength) {\n      return Numbers.equivalent(this.value, that.remValue());\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof RemLength) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(RemLength), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Length\").write(46/*'.'*/).write(\"rem\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"rem\";\n  }\n\n  @Lazy\n  static override zero(): RemLength {\n    return new RemLength(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {LengthUnits, LengthBasis, Length} from \"./Length\";\n\nexport class PctLength extends Length {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override readonly value!: number;\n\n  override get units(): LengthUnits {\n    return \"%\";\n  }\n\n  override pxValue(basis?: LengthBasis | number): number {\n    return this.value !== 0 ? this.value * Length.pctUnit(basis) / 100 : 0;\n  }\n\n  override pctValue(basis?: LengthBasis | number): number {\n    return this.value;\n  }\n\n  override pct(basis?: LengthBasis | number): PctLength {\n    return this;\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    if (typeof CSSUnitValue !== \"undefined\") {\n      return new CSSUnitValue(this.value, \"percent\");\n    } else {\n      return null;\n    }\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Length) {\n      const x = this.value;\n      const y = that.pctValue();\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof Length) {\n      return Numbers.equivalent(this.value, that.pctValue());\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof PctLength) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(PctLength), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Length\").write(46/*'.'*/).write(\"pct\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"%\";\n  }\n\n  @Lazy\n  static override zero(): PctLength {\n    return new PctLength(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {LengthException} from \"./LengthException\";\nimport {LengthUnits, LengthBasis, Length} from \"./Length\";\n\nexport class UnitlessLength extends Length {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override readonly value!: number;\n\n  override get units(): LengthUnits {\n    return \"\";\n  }\n\n  override pxValue(basis?: LengthBasis | number): number {\n    throw new LengthException(\"unitless length\");\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    return null;\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Length) {\n      const x = this.value;\n      const y = that.value;\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof Length) {\n      return Numbers.equivalent(this.value, that.value);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof UnitlessLength) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(UnitlessLength), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Length\").write(46/*'.'*/).write(\"unitless\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"\";\n  }\n\n  @Lazy\n  static override zero(): UnitlessLength {\n    return new UnitlessLength(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {Length} from \"./Length\";\n\n/** @hidden */\nexport const LengthInterpolator = function (l0: Length, l1: Length): Interpolator<Length> {\n  const interpolator = function (u: number): Length {\n    const l0 = interpolator[0];\n    const l1 = interpolator[1];\n    return Length.create(l0.value + u * (l1.value - l0.value), l1.units);\n  } as Interpolator<Length>;\n  Object.setPrototypeOf(interpolator, LengthInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: l0.to(l1.units),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: l1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (l0: Length, l1: Length): Interpolator<Length>;\n\n  /** @hidden */\n  prototype: Interpolator<Length>;\n};\n\nLengthInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Form} from \"@swim/structure\";\nimport {LengthUnits, AnyLength, Length} from \"./Length\";\n\n/** @hidden */\nexport class LengthForm extends Form<Length, AnyLength> {\n  constructor(defaultUnits: LengthUnits | undefined, unit: Length | undefined) {\n    super();\n    Object.defineProperty(this, \"defaultUnits\", {\n      value: defaultUnits,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  readonly defaultUnits!: LengthUnits | undefined;\n\n  override readonly unit!: Length | undefined;\n\n  override withUnit(unit: Length | undefined): Form<Length, AnyLength> {\n    if (unit !== this.unit) {\n      return new LengthForm(this.defaultUnits, unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(length: AnyLength): Item {\n    length = Length.fromAny(length, this.defaultUnits);\n    return Text.from(length.toString());\n  }\n\n  override cast(item: Item): Length | undefined {\n    const value = item.toValue();\n    let length: Length | null = null;\n    try {\n      length = Length.fromValue(value);\n      if (length !== void 0) {\n        const string = value.stringValue(void 0);\n        if (string !== void 0) {\n          length = Length.parse(string, this.defaultUnits);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return length !== null ? length : void 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {LengthUnits, Length} from \"./Length\";\n\n/** @hidden */\nexport class LengthParser extends Parser<Length> {\n  private readonly defaultUnits: LengthUnits | undefined;\n  private readonly valueParser: Parser<number> | undefined;\n  private readonly unitsOutput: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(defaultUnits?: LengthUnits, valueParser?: Parser<number>,\n              unitsOutput?: Output<string>, step?: number) {\n    super();\n    this.defaultUnits = defaultUnits;\n    this.valueParser = valueParser;\n    this.unitsOutput = unitsOutput;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<Length> {\n    return LengthParser.parse(input, this.defaultUnits, this.valueParser,\n                              this.unitsOutput, this.step);\n  }\n\n  static parse(input: Input, defaultUnits?: LengthUnits, valueParser?: Parser<number>,\n               unitsOutput?: Output<string>, step: number = 1): Parser<Length> {\n    let c = 0;\n    if (step === 1) {\n      if (valueParser === void 0) {\n        valueParser = Base10.parseDecimal(input);\n      } else {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 2;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 2) {\n      unitsOutput = unitsOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 37/*'%'*/)) {\n        input = input.step();\n        unitsOutput.push(c);\n      }\n      if (!input.isEmpty()) {\n        const value = valueParser!.bind();\n        const units = unitsOutput.bind() || defaultUnits;\n        switch (units) {\n          case \"px\": return Parser.done(Length.px(value));\n          case \"em\": return Parser.done(Length.em(value));\n          case \"rem\": return Parser.done(Length.rem(value));\n          case \"%\": return Parser.done(Length.pct(value));\n          case \"\":\n          case void 0: return Parser.done(Length.unitless(value));\n          default: return Parser.error(Diagnostic.message(\"unknown length units: \" + units, input));\n        }\n      }\n    }\n    return new LengthParser(defaultUnits, valueParser, unitsOutput, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Equivalent, Compare, Lazy} from \"@swim/util\";\nimport {Output, Parser, Debug, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport {Attr, Value, Text, Form} from \"@swim/structure\";\nimport {DegAngle} from \"../\"; // forward import\nimport {RadAngle} from \"../\"; // forward import\nimport {GradAngle} from \"../\"; // forward import\nimport {TurnAngle} from \"../\"; // forward import\nimport {AngleInterpolator} from \"../\"; // forward import\nimport {AngleForm} from \"../\"; // forward import\nimport {AngleParser} from \"../\"; // forward import\n\nexport type AngleUnits = \"deg\" | \"rad\" | \"grad\" | \"turn\";\n\nexport type AnyAngle = Angle | string | number;\n\nexport abstract class Angle implements Interpolate<Angle>, HashCode, Equivalent, Compare, Debug {\n  isDefined(): boolean {\n    return isFinite(this.value);\n  }\n\n  abstract readonly value: number;\n\n  abstract readonly units: AngleUnits;\n\n  plus(that: AnyAngle, units: AngleUnits = this.units): Angle {\n    that = Angle.fromAny(that);\n    return Angle.create(this.toValue(units) + that.toValue(units), units);\n  }\n\n  negative(units: AngleUnits = this.units): Angle {\n    return Angle.create(-this.toValue(units), units);\n  }\n\n  minus(that: AnyAngle, units: AngleUnits = this.units): Angle {\n    that = Angle.fromAny(that);\n    return Angle.create(this.toValue(units) - that.toValue(units), units);\n  }\n\n  times(scalar: number, units: AngleUnits = this.units): Angle {\n    return Angle.create(this.toValue(units) * scalar, units);\n  }\n\n  divide(scalar: number, units: AngleUnits = this.units): Angle {\n    return Angle.create(this.toValue(units) / scalar, units);\n  }\n\n  combine(that: AnyAngle, scalar: number = 1, units: AngleUnits = this.units): Angle {\n    that = Angle.fromAny(that);\n    return Angle.create(this.toValue(units) + that.toValue(units) * scalar, units);\n  }\n\n  norm(total: AnyAngle, units: AngleUnits = this.units): Angle {\n    total = Angle.fromAny(total);\n    return Angle.create(this.toValue(units) / total.toValue(units), units);\n  }\n\n  abstract degValue(): number;\n\n  abstract gradValue(): number;\n\n  abstract radValue(): number;\n\n  abstract turnValue(): number;\n\n  deg(): DegAngle {\n    return Angle.deg(this.degValue());\n  }\n\n  rad(): RadAngle {\n    return Angle.rad(this.radValue());\n  }\n\n  grad(): GradAngle {\n    return Angle.grad(this.gradValue());\n  }\n\n  turn(): TurnAngle {\n    return Angle.turn(this.turnValue());\n  }\n\n  toValue(): Value;\n  toValue(units: AngleUnits): number;\n  toValue(units?: AngleUnits): Value | number {\n    if (units === void 0) {\n      return Text.from(this.toString());\n    } else {\n      switch (units) {\n        case \"deg\": return this.degValue();\n        case \"rad\": return this.radValue();\n        case \"grad\": return this.gradValue();\n        case \"turn\": return this.turnValue();\n        default: throw new Error(\"unknown angle units: \" + units);\n      }\n    }\n  }\n\n  to(units: AngleUnits): Angle {\n    switch (units) {\n      case \"deg\": return this.deg();\n      case \"rad\": return this.rad();\n      case \"grad\": return this.grad();\n      case \"turn\": return this.turn();\n      default: throw new Error(\"unknown angle units: \" + units);\n    }\n  }\n\n  abstract toCssValue(): CSSUnitValue | null;\n\n  interpolateTo(that: Angle): Interpolator<Angle>;\n  interpolateTo(that: unknown): Interpolator<Angle> | null;\n  interpolateTo(that: unknown): Interpolator<Angle> | null {\n    if (that instanceof Angle) {\n      return AngleInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  abstract compareTo(that: unknown): number;\n\n  abstract equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  abstract toString(): string;\n\n  static zero(units?: AngleUnits): Angle {\n    switch (units) {\n      case \"deg\": return DegAngle.zero();\n      case void 0:\n      case \"rad\": return RadAngle.zero();\n      case \"grad\": return GradAngle.zero();\n      case \"turn\": return TurnAngle.zero();\n      default: throw new Error(\"unknown angle units: \" + units);\n    }\n  }\n\n  static deg(value: number): DegAngle {\n    return new DegAngle(value);\n  }\n\n  static rad(value: number): RadAngle {\n    return new RadAngle(value);\n  }\n\n  static grad(value: number): GradAngle {\n    return new GradAngle(value);\n  }\n\n  static turn(value: number): TurnAngle {\n    return new TurnAngle(value);\n  }\n\n  static create(value: number, units?: AngleUnits): Angle {\n    switch (units) {\n      case \"deg\": return Angle.deg(value);\n      case void 0:\n      case \"rad\": return Angle.rad(value);\n      case \"grad\": return Angle.grad(value);\n      case \"turn\": return Angle.turn(value);\n      default: throw new Error(\"unknown angle units: \" + units);\n    }\n  }\n\n  static fromCssValue(value: CSSStyleValue): Angle {\n    if (value instanceof CSSUnitValue) {\n      return Angle.create(value.value, value.unit as AngleUnits);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static fromAny(value: AnyAngle, defaultUnits?: AngleUnits): Angle {\n    if (value === void 0 || value === null || value instanceof Angle) {\n      return value;\n    } else if (typeof value === \"number\") {\n      return Angle.create(value, defaultUnits);\n    } else if (typeof value === \"string\") {\n      return Angle.parse(value, defaultUnits);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromValue(value: Value): Angle | null {\n    if (value.length === 2) {\n      const num = value.getItem(0).numberValue();\n      const units = value.getItem(1);\n      if (num !== void 0 && isFinite(num) && units instanceof Attr && units.toValue() === Value.extant()) {\n        switch (units.key.value) {\n          case \"deg\": return Angle.deg(num);\n          case \"rad\": return Angle.rad(num);\n          case \"grad\": return Angle.grad(num);\n          case \"turn\": return Angle.turn(num);\n          default:\n        }\n      }\n    }\n    return null;\n  }\n\n  static parse(string: string, defaultUnits?: AngleUnits): Angle {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = AngleParser.parse(input, defaultUnits);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  @Lazy\n  static form(): Form<Angle, AnyAngle> {\n    return new AngleForm(void 0, Angle.zero());\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyAngle {\n    return value instanceof Angle\n        || typeof value === \"number\"\n        || typeof value === \"string\";\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AngleUnits, Angle} from \"./Angle\";\n\nexport class DegAngle extends Angle {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override readonly value!: number;\n\n  override get units(): AngleUnits {\n    return \"deg\";\n  }\n\n  override degValue(): number {\n    return this.value;\n  }\n\n  override gradValue(): number {\n    return this.value * 10 / 9;\n  }\n\n  override radValue(): number {\n    return this.value * Math.PI / 180;\n  }\n\n  override turnValue(): number {\n    return this.value / 360;\n  }\n\n  override deg(): DegAngle {\n    return this;\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    if (typeof CSSUnitValue !== \"undefined\") {\n      return new CSSUnitValue(this.value, \"deg\");\n    } else {\n      return null;\n    }\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Angle) {\n      const x = this.value;\n      const y = that.degValue();\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof Angle) {\n      return Numbers.equivalent(this.value, that.degValue());\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof DegAngle) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(DegAngle), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Angle\").write(46/*'.'*/).write(\"deg\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"deg\";\n  }\n\n  @Lazy\n  static override zero(): DegAngle {\n    return new DegAngle(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AngleUnits, Angle} from \"./Angle\";\n\nexport class RadAngle extends Angle {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override readonly value!: number;\n\n  override get units(): AngleUnits {\n    return \"rad\";\n  }\n\n  override degValue(): number {\n    return this.value * 180 / Math.PI;\n  }\n\n  override gradValue(): number {\n    return this.value * 200 / Math.PI;\n  }\n\n  override radValue(): number {\n    return this.value;\n  }\n\n  override turnValue(): number {\n    return this.value / (2 * Math.PI);\n  }\n\n  override rad(): RadAngle {\n    return this;\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    if (typeof CSSUnitValue !== \"undefined\") {\n      return new CSSUnitValue(this.value, \"rad\");\n    } else {\n      return null;\n    }\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Angle) {\n      const x = this.value;\n      const y = that.radValue();\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof Angle) {\n      return Numbers.equivalent(this.value, that.radValue());\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof RadAngle) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(RadAngle), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Angle\").write(46/*'.'*/).write(\"rad\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"rad\";\n  }\n\n  @Lazy\n  static override zero(): RadAngle {\n    return new RadAngle(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AngleUnits, Angle} from \"./Angle\";\n\nexport class GradAngle extends Angle {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  override readonly value!: number;\n\n  override get units(): AngleUnits {\n    return \"grad\";\n  }\n\n  override degValue(): number {\n    return this.value * 0.9;\n  }\n\n  override gradValue(): number {\n    return this.value;\n  }\n\n  override radValue(): number {\n    return this.value * Math.PI / 200;\n  }\n\n  override turnValue(): number {\n    return this.value / 400;\n  }\n\n  override grad(): GradAngle {\n    return this;\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    if (typeof CSSUnitValue !== \"undefined\") {\n      return new CSSUnitValue(this.value, \"grad\");\n    } else {\n      return null;\n    }\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Angle) {\n      const x = this.value;\n      const y = that.gradValue();\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof Angle) {\n      return Numbers.equivalent(this.value, that.gradValue());\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof GradAngle) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(GradAngle), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Angle\").write(46/*'.'*/).write(\"grad\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"grad\";\n  }\n\n  @Lazy\n  static override zero(): GradAngle {\n    return new GradAngle(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AngleUnits, Angle} from \"./Angle\";\n\nexport class TurnAngle extends Angle {\n  constructor(value: number) {\n    super();\n    Object.defineProperty(this, \"value\", {\n      value: value,\n      enumerable: true,\n    });\n  }\n\n  readonly value!: number;\n\n  override get units(): AngleUnits {\n    return \"turn\";\n  }\n\n  override degValue(): number {\n    return this.value * 360;\n  }\n\n  override gradValue(): number {\n    return this.value * 400;\n  }\n\n  override radValue(): number {\n    return this.value * (2 * Math.PI);\n  }\n\n  override turnValue(): number {\n    return this.value;\n  }\n\n  override turn(): TurnAngle {\n    return this;\n  }\n\n  override toCssValue(): CSSUnitValue | null {\n    if (typeof CSSUnitValue !== \"undefined\") {\n      return new CSSUnitValue(this.value, \"turn\");\n    } else {\n      return null;\n    }\n  }\n\n  override compareTo(that: unknown): number {\n    if (that instanceof Angle) {\n      const x = this.value;\n      const y = that.turnValue();\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return NaN;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof Angle) {\n      return Numbers.equivalent(this.value, that.turnValue());\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof TurnAngle) {\n      return this.value === that.value;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(TurnAngle), Numbers.hash(this.value)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Angle\").write(46/*'.'*/).write(\"turn\")\n        .write(40/*'('*/).debug(this.value).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return this.value + \"turn\";\n  }\n\n  @Lazy\n  static override zero(): TurnAngle {\n    return new TurnAngle(0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {Angle} from \"./Angle\";\n\n/** @hidden */\nexport const AngleInterpolator = function (a0: Angle, a1: Angle): Interpolator<Angle> {\n  const interpolator = function (u: number): Angle {\n    const a0 = interpolator[0];\n    const a1 = interpolator[1];\n    return Angle.create(a0.value + u * (a1.value - a0.value), a1.units);\n  } as Interpolator<Angle>;\n  Object.setPrototypeOf(interpolator, AngleInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: a0.to(a1.units),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: a1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (a0: Angle, a1: Angle): Interpolator<Angle>;\n\n  /** @hidden */\n  prototype: Interpolator<Angle>;\n};\n\nAngleInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Form} from \"@swim/structure\";\nimport {AngleUnits, AnyAngle, Angle} from \"./Angle\";\n\n/** @hidden */\nexport class AngleForm extends Form<Angle, AnyAngle> {\n  constructor(defaultUnits: AngleUnits | undefined, unit: Angle | undefined) {\n    super();\n    Object.defineProperty(this, \"defaultUnits\", {\n      value: defaultUnits,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  readonly defaultUnits!: AngleUnits | undefined;\n\n  override readonly unit!: Angle | undefined;\n\n  override withUnit(unit: Angle | undefined): Form<Angle, AnyAngle> {\n    if (unit !== this.unit) {\n      return new AngleForm(this.defaultUnits, unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(angle: AnyAngle): Item {\n    angle = Angle.fromAny(angle, this.defaultUnits);\n    return Text.from(angle.toString());\n  }\n\n  override cast(item: Item): Angle | undefined {\n    const value = item.toValue();\n    let angle: Angle | null = null;\n    try {\n      angle = Angle.fromValue(value);\n      if (angle === void 0) {\n        const string = value.stringValue(void 0);\n        if (string !== void 0) {\n          angle = Angle.parse(string, this.defaultUnits);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return angle !== null ? angle : void 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {AngleUnits, Angle} from \"./Angle\";\n\n/** @hidden */\nexport class AngleParser extends Parser<Angle> {\n  private readonly defaultUnits: AngleUnits | undefined;\n  private readonly valueParser: Parser<number> | undefined;\n  private readonly unitsOutput: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(defaultUnits?: AngleUnits, valueParser?: Parser<number>,\n              unitsOutput?: Output<string>, step?: number) {\n    super();\n    this.defaultUnits = defaultUnits;\n    this.valueParser = valueParser;\n    this.unitsOutput = unitsOutput;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<Angle> {\n    return AngleParser.parse(input, this.defaultUnits, this.valueParser,\n                             this.unitsOutput, this.step);\n  }\n\n  static parse(input: Input, defaultUnits?: AngleUnits, valueParser?: Parser<number>,\n               unitsOutput?: Output<string>, step: number = 1): Parser<Angle> {\n    let c = 0;\n    if (step === 1) {\n      if (valueParser === void 0) {\n        valueParser = Base10.parseDecimal(input);\n      } else {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 2;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 2) {\n      unitsOutput = unitsOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        unitsOutput.push(c);\n      }\n      if (!input.isEmpty()) {\n        const value = valueParser!.bind();\n        const units = unitsOutput.bind() || defaultUnits;\n        switch (units) {\n          case \"deg\": return Parser.done(Angle.deg(value));\n          case \"\":\n          case \"rad\": return Parser.done(Angle.rad(value));\n          case \"grad\": return Parser.done(Angle.grad(value));\n          case \"turn\": return Parser.done(Angle.turn(value));\n          default: return Parser.error(Diagnostic.message(\"unknown units: \" + units, input));\n        }\n      }\n    }\n    return new AngleParser(defaultUnits, valueParser, unitsOutput, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, HashCode, Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport {R2VectorInterpolator} from \"../\"; // forward import\n\nexport type AnyR2Vector = R2Vector | R2VectorInit;\n\nexport interface R2VectorInit {\n  x: number;\n  y: number;\n}\n\nexport class R2Vector implements Interpolate<R2Vector>, HashCode, Equivalent, Debug {\n  constructor(x: number, y: number) {\n    Object.defineProperty(this, \"x\", {\n      value: x,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y\", {\n      value: y,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.x) && isFinite(this.y);\n  }\n\n  readonly x!: number;\n\n  readonly y!: number;\n\n  plus(that: AnyR2Vector): R2Vector {\n    return new R2Vector(this.x + that.x, this.y + that.y);\n  }\n\n  negative(): R2Vector {\n    return new R2Vector(-this.x, -this.y);\n  }\n\n  minus(that: AnyR2Vector): R2Vector {\n    return new R2Vector(this.x - that.x, this.y - that.y);\n  }\n\n  times(scalar: number): R2Vector {\n    return new R2Vector(this.x * scalar, this.y * scalar);\n  }\n\n  toAny(): R2VectorInit {\n    return {\n      x: this.x,\n      y: this.y,\n    };\n  }\n\n  interpolateTo(that: R2Vector): Interpolator<R2Vector>;\n  interpolateTo(that: unknown): Interpolator<R2Vector> | null;\n  interpolateTo(that: unknown): Interpolator<R2Vector> | null {\n    if (that instanceof R2Vector) {\n      return R2VectorInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Vector) {\n      return Numbers.equivalent(this.x, that.x, epsilon)\n          && Numbers.equivalent(this.y, that.y, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Vector) {\n      return this.x === that.x && this.y === that.y;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(R2Vector),\n        Numbers.hash(this.x)), Numbers.hash(this.y)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"R2Vector\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.x).write(\", \").debug(this.y).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static zero(): R2Vector {\n    return new R2Vector(0, 0);\n  }\n\n  static of(x: number, y: number): R2Vector {\n    return new R2Vector(x, y);\n  }\n\n  static fromInit(init: R2VectorInit): R2Vector {\n    return new R2Vector(init.x, init.y);\n  }\n\n  static fromAny(value: AnyR2Vector): R2Vector {\n    if (value === void 0 || value === null || value instanceof R2Vector) {\n      return value;\n    } else if (R2Vector.isInit(value)) {\n      return R2Vector.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is R2VectorInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as R2VectorInit;\n      return typeof init.x === \"number\"\n          && typeof init.y === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyR2Vector {\n    return value instanceof R2Vector\n        || R2Vector.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {R2Vector} from \"./R2Vector\";\n\n/** @hidden */\nexport const R2VectorInterpolator = function (v0: R2Vector, v1: R2Vector): Interpolator<R2Vector> {\n  const interpolator = function (u: number): R2Vector {\n    const v0 = interpolator[0];\n    const v1 = interpolator[1];\n    const x = v0.x + u * (v1.x - v0.x);\n    const y = v0.y + u * (v1.y - v0.y);\n    return new R2Vector(x, y);\n  } as Interpolator<R2Vector>;\n  Object.setPrototypeOf(interpolator, R2VectorInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: v0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: v1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (v0: R2Vector, v1: R2Vector): Interpolator<R2Vector>;\n\n  /** @hidden */\n  prototype: Interpolator<R2Vector>;\n};\n\nR2VectorInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Function} from \"./R2Function\";\nimport {R2PointInit, R2PointTuple, R2Point} from \"../\"; // forward import\nimport {R2SegmentInit, R2Segment} from \"../\"; // forward import\nimport {R2BoxInit, R2Box} from \"../\"; // forward import\nimport {R2CircleInit, R2Circle} from \"../\"; // forward import\n\nexport type AnyR2Shape = R2Shape | R2PointInit | R2PointTuple | R2SegmentInit | R2BoxInit | R2CircleInit;\n\nexport abstract class R2Shape {\n  abstract readonly xMin: number;\n\n  abstract readonly yMin: number;\n\n  abstract readonly xMax: number;\n\n  abstract readonly yMax: number;\n\n  abstract contains(that: AnyR2Shape): boolean;\n\n  abstract contains(x: number, y: number): boolean;\n\n  abstract intersects(that: AnyR2Shape): boolean;\n\n  union(that: AnyR2Shape): R2Shape {\n    that = R2Shape.fromAny(that);\n    return new R2Box(Math.min(this.xMin, that.xMin),\n                     Math.min(this.yMin, that.yMin),\n                     Math.max(this.xMax, that.xMax),\n                     Math.max(this.yMax, that.yMax));\n  }\n\n  abstract transform(f: R2Function): R2Shape;\n\n  get bounds(): R2Box {\n    return new R2Box(this.xMin, this.yMin, this.xMax, this.yMax);\n  }\n\n  static fromAny(value: AnyR2Shape): R2Shape {\n    if (value === void 0 || value === null || value instanceof R2Shape) {\n      return value;\n    } else if (R2Point.isInit(value)) {\n      return R2Point.fromInit(value);\n    } else if (R2Point.isTuple(value)) {\n      return R2Point.fromTuple(value);\n    } else if (R2Segment.isInit(value)) {\n      return R2Segment.fromInit(value);\n    } else if (R2Box.isInit(value)) {\n      return R2Box.fromInit(value);\n    } else if (R2Circle.isInit(value)) {\n      return R2Circle.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyR2Shape {\n    return value instanceof R2Shape\n        || R2Point.isInit(value)\n        || R2Point.isTuple(value)\n        || R2Segment.isInit(value)\n        || R2Box.isInit(value)\n        || R2Circle.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, HashCode, Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport type {R2Function} from \"./R2Function\";\nimport {AnyR2Vector, R2Vector} from \"./R2Vector\";\nimport {AnyR2Shape, R2Shape} from \"./R2Shape\";\nimport {R2PointInterpolator} from \"../\"; // forward import\n\nexport type AnyR2Point = R2Point | R2PointInit | R2PointTuple;\n\nexport interface R2PointInit {\n  x: number;\n  y: number;\n}\n\nexport type R2PointTuple = [number, number];\n\nexport class R2Point extends R2Shape implements Interpolate<R2Point>, HashCode, Equivalent, Debug {\n  constructor(x: number, y: number) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      value: x,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y\", {\n      value: y,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.x) && isFinite(this.y);\n  }\n\n  readonly x!: number;\n\n  readonly y!: number;\n\n  override get xMin(): number {\n    return this.x;\n  }\n\n  override get yMin(): number {\n    return this.y;\n  }\n\n  override get xMax(): number {\n    return this.x;\n  }\n\n  override get yMax(): number {\n    return this.y;\n  }\n\n  plus(vector: AnyR2Vector): R2Point {\n    return new R2Point(this.x + vector.x, this.y + vector.y);\n  }\n\n  minus(vector: R2Vector): R2Point;\n  minus(that: R2Point): R2Vector;\n  minus(that: R2Vector | R2Point): R2Point | R2Vector {\n    if (that instanceof R2Vector) {\n      return new R2Point(this.x - that.x, this.y - that.y);\n    } else {\n      return new R2Vector(this.x - that.x, this.y - that.y);\n    }\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      return this.x === that && this.y === y!;\n    } else {\n      that = R2Shape.fromAny(that);\n      if (that instanceof R2Point) {\n        return this.x === that.x && this.y === that.y;\n      } else if (that instanceof R2Shape) {\n        return this.x <= that.xMin && that.xMax <= this.x\n            && this.y <= that.yMin && that.yMax <= this.y;\n      }\n      return false;\n    }\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    that = R2Shape.fromAny(that);\n    return (that as R2Shape).intersects(this);\n  }\n\n  override transform(f: R2Function): R2Point {\n    return new R2Point(f.transformX(this.x, this.y), f.transformY(this.x, this.y));\n  }\n\n  toAny(): R2PointInit {\n    return {\n      x: this.x,\n      y: this.y,\n    };\n  }\n\n  interpolateTo(that: R2Point): Interpolator<R2Point>;\n  interpolateTo(that: unknown): Interpolator<R2Point> | null;\n  interpolateTo(that: unknown): Interpolator<R2Point> | null {\n    if (that instanceof R2Point) {\n      return R2PointInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Point) {\n      return Numbers.equivalent(this.x, that.x, epsilon)\n          && Numbers.equivalent(this.y, that.y, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Point) {\n      return this.x === that.x && this.y === that.y;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(R2Point),\n        Numbers.hash(this.x)), Numbers.hash(this.y)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"R2Point\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.x).write(\", \").debug(this.y).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static origin(): R2Point {\n    return new R2Point(0, 0);\n  }\n\n  @Lazy\n  static undefined(): R2Point {\n    return new R2Point(NaN, NaN);\n  }\n\n  static of(x: number, y: number): R2Point {\n    return new R2Point(x, y);\n  }\n\n  static fromInit(value: R2PointInit): R2Point {\n    return new R2Point(value.x, value.y);\n  }\n\n  static fromTuple(value: R2PointTuple): R2Point {\n    return new R2Point(value[0], value[1]);\n  }\n\n  static override fromAny(value: AnyR2Point): R2Point {\n    if (value === void 0 || value === null || value instanceof R2Point) {\n      return value;\n    } else if (R2Point.isInit(value)) {\n      return R2Point.fromInit(value);\n    } else if (R2Point.isTuple(value)) {\n      return R2Point.fromTuple(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is R2PointInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as R2PointInit;\n      return typeof init.x === \"number\"\n          && typeof init.y === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isTuple(value: unknown): value is R2PointTuple {\n    return Array.isArray(value)\n        && value.length === 2\n        && typeof value[0] === \"number\"\n        && typeof value[1] === \"number\";\n  }\n\n  /** @hidden */\n  static override isAny(value: unknown): value is AnyR2Point {\n    return value instanceof R2Point\n        || R2Point.isInit(value)\n        || R2Point.isTuple(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {R2Point} from \"./R2Point\";\n\n/** @hidden */\nexport const R2PointInterpolator = function (p0: R2Point, p1: R2Point): Interpolator<R2Point> {\n  const interpolator = function (u: number): R2Point {\n    const p0 = interpolator[0];\n    const p1 = interpolator[1];\n    const x = p0.x + u * (p1.x - p0.x);\n    const y = p0.y + u * (p1.y - p0.y);\n    return new R2Point(x, y);\n  } as Interpolator<R2Point>;\n  Object.setPrototypeOf(interpolator, R2PointInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: p0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: p1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (p0: R2Point, p1: R2Point): Interpolator<R2Point>;\n\n  /** @hidden */\n  prototype: Interpolator<R2Point>;\n};\n\nR2PointInterpolator.prototype = Object.create(Interpolator.prototype);\n"," // Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equivalent, Equals} from \"@swim/util\";\nimport {AnyOutputSettings, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {R2Function} from \"./R2Function\";\nimport {R2Shape} from \"./R2Shape\";\nimport type {R2Point} from \"./R2Point\";\nimport type {R2CurveContext} from \"./R2CurveContext\";\nimport {R2CurveParser} from \"../\"; // forward import\nimport {R2Segment} from \"../\"; // forward import\nimport {R2QuadraticCurve} from \"../\"; // forward import\nimport {R2CubicCurve} from \"../\"; // forward import\nimport {R2EllipticCurve} from \"../\"; // forward import\n\nexport abstract class R2Curve extends R2Shape implements Equals, Equivalent {\n  abstract interpolateX(u: number): number;\n\n  abstract interpolateY(u: number): number;\n\n  abstract interpolate(u: number): R2Point;\n\n  abstract split(u: number): [R2Curve, R2Curve];\n\n  abstract override transform(f: R2Function): R2Curve;\n\n  abstract drawMove(context: R2CurveContext): void;\n\n  abstract drawRest(context: R2CurveContext): void;\n\n  draw(context: R2CurveContext): void {\n    this.drawMove(context);\n    this.drawRest(context);\n  }\n\n  abstract transformDrawMove(context: R2CurveContext, f: R2Function): void;\n\n  abstract transformDrawRest(context: R2CurveContext, f: R2Function): void;\n\n  transformDraw(context: R2CurveContext, f: R2Function): void {\n    this.transformDrawMove(context, f);\n    this.transformDrawRest(context, f);\n  }\n\n  abstract writeMove(output: Output): void;\n\n  abstract writeRest(output: Output): void;\n\n  writePath(output: Output): void {\n    this.writeMove(output);\n    this.writeRest(output);\n  }\n\n  toPathString(outputSettings?: AnyOutputSettings): string {\n    const output = Unicode.stringOutput(outputSettings);\n    this.writePath(output);\n    return output.toString();\n  }\n\n  abstract equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  abstract equals(that: unknown): boolean;\n\n  static linear(x0: number, y0: number, x1: number, y1: number): R2Curve {\n    return new R2Segment(x0, y0, x1, y1);\n  }\n\n  static quadratic(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number): R2Curve {\n    return new R2QuadraticCurve(x0, y0, x1, y1, x2, y2);\n  }\n\n  static cubic(x0: number, y0: number, x1: number, y1: number,\n               x2: number, y2: number, x3: number, y3: number): R2Curve {\n    return new R2CubicCurve(x0, y0, x1, y1, x2, y2, x3, y3);\n  }\n\n  static elliptic(cx: number, cy: number, rx: number, ry: number,\n                  phi: number, a0: number, da: number): R2Curve {\n    return new R2EllipticCurve(cx, cy, rx, ry, phi, a0, da);\n  }\n\n  static parse(string: string): R2Curve {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = R2CurveParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport type {R2Curve} from \"./R2Curve\";\nimport {R2SegmentParser} from \"../\"; // forward import\nimport {R2QuadraticCurveParser} from \"../\"; // forward import\nimport {R2CubicCurveParser} from \"../\"; // forward import\nimport {R2EllipticCurveParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class R2CurveParser extends Parser<R2Curve> {\n  private readonly x0Parser: Parser<number> | undefined;\n  private readonly y0Parser: Parser<number> | undefined;\n  private readonly command: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n              command?: number, step?: number) {\n    super();\n    this.x0Parser = x0Parser;\n    this.y0Parser = y0Parser;\n    this.command = command;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<R2Curve> {\n    return R2CurveParser.parse(input, this.x0Parser, this.y0Parser,\n                               this.command, this.step);\n  }\n\n  static parse(input: Input, x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n               command?: number, step: number = 1): Parser<R2Curve> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 77/*'M'*/ || c === 109/*'m'*/) {\n          input = input.step();\n          command = c;\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(\"moveto\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (x0Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x0Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x0Parser = x0Parser.feed(input);\n      }\n      if (x0Parser !== void 0) {\n        if (x0Parser.isDone()) {\n          step = 3;\n        } else if (x0Parser.isError()) {\n          return x0Parser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 4;\n      } else if (!input.isEmpty()) {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      if (y0Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y0Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y0Parser = y0Parser.feed(input);\n      }\n      if (y0Parser !== void 0) {\n        if (y0Parser.isDone()) {\n          step = 5;\n        } else if (y0Parser.isError()) {\n          return y0Parser.asError();\n        }\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        switch (c) {\n          case 76/*'L'*/:\n          case 108/*'l'*/:\n          case 72/*'H'*/:\n          case 104/*'h'*/:\n          case 86/*'V'*/:\n          case 118/*'v'*/:\n            return R2SegmentParser.parse(input, x0Parser, y0Parser);\n          case 81/*'Q'*/:\n          case 113/*'q'*/:\n            return R2QuadraticCurveParser.parse(input, x0Parser, y0Parser);\n          case 84/*'T'*/:\n            return R2QuadraticCurveParser.parse(input, x0Parser, y0Parser,\n                                                x0Parser, y0Parser);\n          case 116/*'t'*/:\n            return R2QuadraticCurveParser.parse(input, x0Parser, y0Parser,\n                                                Parser.done(0), Parser.done(0));\n          case 67/*'C'*/:\n          case 99/*'c'*/:\n            return R2CubicCurveParser.parse(input, x0Parser, y0Parser);\n          case 83/*'S'*/:\n            return R2CubicCurveParser.parse(input, x0Parser, y0Parser,\n                                             x0Parser, y0Parser);\n          case 115/*'s'*/:\n            return R2CubicCurveParser.parse(input, x0Parser, y0Parser,\n                                             Parser.done(0), Parser.done(0));\n          case 65/*'A'*/:\n          case 97/*'a'*/:\n            return R2EllipticCurveParser.parse(input, x0Parser, y0Parser);\n          case 44/*','*/:\n            input = input.step();\n          case 43/*'+'*/:\n          case 45/*'-'*/:\n          case 46/*'.'*/:\n          case 48/*'0'*/:\n          case 49/*'1'*/:\n          case 50/*'2'*/:\n          case 51/*'3'*/:\n          case 52/*'4'*/:\n          case 53/*'5'*/:\n          case 54/*'6'*/:\n          case 55/*'7'*/:\n          case 56/*'8'*/:\n          case 57/*'9'*/:\n            switch (command) {\n              case 77/*'M'*/:\n              case 109/*'m'*/:\n                return R2SegmentParser.parseRest(input, command, x0Parser, y0Parser);\n            }\n          default:\n            return Parser.error(Diagnostic.expected(\"draw command\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    return new R2CurveParser(x0Parser, y0Parser, command, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Function} from \"./R2Function\";\nimport {R2Curve} from \"./R2Curve\";\n\nexport abstract class R2BezierCurve extends R2Curve {\n  abstract override transform(f: R2Function): R2BezierCurve;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport type {R2Function} from \"./R2Function\";\nimport {AnyR2Shape, R2Shape} from \"./R2Shape\";\nimport {R2Point} from \"./R2Point\";\nimport type {R2CurveContext} from \"./R2CurveContext\";\nimport {R2BezierCurve} from \"./R2BezierCurve\";\nimport {R2SegmentInterpolator} from \"../\"; // forward import\n\nexport type AnyR2Segment = R2Segment | R2SegmentInit;\n\nexport interface R2SegmentInit {\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n}\n\nexport class R2Segment extends R2BezierCurve implements Interpolate<R2Segment>, HashCode, Debug {\n  constructor(x0: number, y0: number, x1: number, y1: number) {\n    super();\n    Object.defineProperty(this, \"x0\", {\n      value: x0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y0\", {\n      value: y0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"x1\", {\n      value: x1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y1\", {\n      value: y1,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.x0) && isFinite(this.y0)\n        && isFinite(this.x1) && isFinite(this.y1);\n  }\n\n  readonly x0!: number;\n\n  readonly y0!: number;\n\n  readonly x1!: number;\n\n  readonly y1!: number;\n\n  override get xMin(): number {\n    return Math.min(this.x0, this.x1);\n  }\n\n  override get yMin(): number {\n    return Math.min(this.y0, this.y1);\n  }\n\n  override get xMax(): number {\n    return Math.max(this.x0, this.x1);\n  }\n\n  override get yMax(): number {\n    return Math.max(this.y0, this.y1);\n  }\n\n  override interpolateX(u: number): number {\n    return (1.0 - u) * this.x0 + u * this.x1;\n  }\n\n  override interpolateY(u: number): number {\n    return (1.0 - u) * this.y0 + u * this.y1;\n  }\n\n  override interpolate(u: number): R2Point {\n    const v = 1.0 - u;\n    const x01 = v * this.x0 + u * this.x1;\n    const y01 = v * this.y0 + u * this.y1;\n    return new R2Point(x01, y01);\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      return R2Segment.contains(this.x0, this.y0, this.x1, this.y1, that, y!);\n    } else {\n      that = R2Shape.fromAny(that);\n      if (that instanceof R2Point) {\n        return this.containsPoint(that);\n      } else if (that instanceof R2Segment) {\n        return this.containsSegment(that);\n      }\n      return false;\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: R2Point): boolean {\n    return R2Segment.contains(this.x0, this.y0, this.x1, this.y1, that.x, that.y);\n  }\n\n  /** @hidden */\n  containsSegment(that: R2Segment): boolean {\n    return R2Segment.contains(this.x0, this.y0, this.x1, this.y1, that.x0, that.y0)\n        && R2Segment.contains(this.x0, this.y0, this.x1, this.y1, that.x1, that.y1);\n  }\n\n  /** @hidden */\n  static contains(ax: number, ay: number, bx: number, by: number, cx: number, cy: number): boolean {\n    return (ax <= cx && cx <= bx || bx <= cx && cx <= ax)\n        && (ay <= cy && cy <= by || by <= cy && cy <= ay)\n        && (bx - ax) * (cy - ay) === (cx - ax) * (by - ay);\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    that = R2Shape.fromAny(that);\n    if (that instanceof R2Point) {\n      return this.intersectsPoint(that);\n    } else if (that instanceof R2Segment) {\n      return this.intersectsSegment(that);\n    } else {\n      return (that as R2Shape).intersects(this);\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsPoint(that: R2Point): boolean {\n    return R2Segment.contains(this.x0, this.y0, this.x1, this.y1, that.x, that.y);\n  }\n\n  /** @hidden */\n  intersectsSegment(that: R2Segment): boolean {\n    return R2Segment.intersects(this.x0, this.y0, this.x1 - this.x0, this.y1 - this.y0,\n                                that.x0, that.y0, that.x1 - that.x0, that.y1 - that.y0);\n  }\n\n  /** @hidden */\n  static intersects(px: number, py: number, rx: number, ry: number,\n                    qx: number, qy: number, sx: number, sy: number): boolean {\n    const pqx = qx - px;\n    const pqy = qy - py;\n    const pqr = pqx * ry - pqy * rx;\n    const rs = rx * sy - ry * sx;\n    if (pqr === 0 && rs === 0) { // collinear\n      const rr = rx * rx + ry * ry;\n      const sr = sx * rx + sy * ry;\n      const t0 = (pqx * rx + pqy * ry) / rr;\n      const t1 = t0 + sr / rr;\n      return sr >= 0 ? 0 < t1 && t0 < 1 : 0 < t0 && t1 < 1;\n    } else if (rs === 0) { // parallel\n      return false;\n    } else {\n      const pqs = pqx * sy - pqy * sx;\n      const t = pqs / rs; // (q − p) × s / (r × s)\n      const u = pqr / rs; // (q − p) × r / (r × s)\n      return 0 <= t && t <= 1 && 0 <= u && u <= 1;\n    }\n  }\n\n  override split(u: number): [R2Segment, R2Segment] {\n    const v = 1.0 - u;\n    const x01 = v * this.x0 + u * this.x1;\n    const y01 = v * this.y0 + u * this.y1;\n    const c0 = new R2Segment(this.x0, this.y0, x01, y01);\n    const c1 = new R2Segment(x01, y01, this.x1, this.y1);\n    return [c0, c1];\n  }\n\n  override transform(f: R2Function): R2Segment {\n    return new R2Segment(f.transformX(this.x0, this.y0), f.transformY(this.x0, this.y0),\n                         f.transformX(this.x1, this.y1), f.transformY(this.x1, this.y1));\n  }\n\n  toAny(): R2SegmentInit {\n    return {\n      x0: this.x0,\n      y0: this.y0,\n      x1: this.x1,\n      y1: this.y1,\n    };\n  }\n\n  override drawMove(context: R2CurveContext): void {\n    context.moveTo(this.x0, this.y0);\n  }\n\n  override drawRest(context: R2CurveContext): void {\n    context.lineTo(this.x1, this.y1);\n  }\n\n  override transformDrawMove(context: R2CurveContext, f: R2Function): void {\n    context.moveTo(f.transformX(this.x0, this.y0), f.transformY(this.x0, this.y0));\n  }\n\n  override transformDrawRest(context: R2CurveContext, f: R2Function): void {\n    context.lineTo(f.transformX(this.x1, this.y1), f.transformY(this.x1, this.y1));\n  }\n\n  override writeMove(output: Output): void {\n    output.write(77/*'M'*/);\n    Format.displayNumber(this.x0, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y0, output);\n  }\n\n  override writeRest(output: Output): void {\n    output.write(76/*'L'*/);\n    Format.displayNumber(this.x1, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y1, output);\n  }\n\n  interpolateTo(that: R2Segment): Interpolator<R2Segment>;\n  interpolateTo(that: unknown): Interpolator<R2Segment> | null;\n  interpolateTo(that: unknown): Interpolator<R2Segment> | null {\n    if (that instanceof R2Segment) {\n      return R2SegmentInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Segment) {\n      return Numbers.equivalent(this.x0, that.x0, epsilon)\n          && Numbers.equivalent(this.y0, that.y0, epsilon)\n          && Numbers.equivalent(this.x1, that.x1, epsilon)\n          && Numbers.equivalent(this.y1, that.y1, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Segment) {\n      return this.x0 === that.x0 && this.y0 === that.y0\n          && this.x1 === that.x1 && this.y1 === that.y1;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Constructors.hash(R2Segment), Numbers.hash(this.x0)), Numbers.hash(this.y0)),\n        Numbers.hash(this.x1)), Numbers.hash(this.y1)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"R2Segment\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.x0).write(\", \").debug(this.y0).write(\", \")\n        .debug(this.x1).write(\", \").debug(this.y1).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static of(x0: number, y0: number, x1: number, y1: number): R2Segment {\n    return new R2Segment(x0, y0, x1, y1);\n  }\n\n  static fromInit(value: R2SegmentInit): R2Segment {\n    return new R2Segment(value.x0, value.y0, value.x1, value.y1);\n  }\n\n  static override fromAny(value: AnyR2Segment): R2Segment {\n    if (value === void 0 || value === null || value instanceof R2Segment) {\n      return value;\n    } else if (R2Segment.isInit(value)) {\n      return R2Segment.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is R2SegmentInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as R2SegmentInit;\n      return typeof init.x0 === \"number\"\n          && typeof init.y0 === \"number\"\n          && typeof init.x1 === \"number\"\n          && typeof init.y1 === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static override isAny(value: unknown): value is AnyR2Segment {\n    return value instanceof R2Segment\n        || R2Segment.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {R2Segment} from \"./R2Segment\";\n\n/** @hidden */\nexport const R2SegmentInterpolator = function (s0: R2Segment, s1: R2Segment): Interpolator<R2Segment> {\n  const interpolator = function (u: number): R2Segment {\n    const s0 = interpolator[0];\n    const s1 = interpolator[1];\n    const x0 = s0.x0 + u * (s1.x0 - s0.x0);\n    const y0 = s0.y0 + u * (s1.y0 - s0.y0);\n    const x1 = s0.x1 + u * (s1.x1 - s0.x1);\n    const y1 = s0.y1 + u * (s1.y1 - s0.y1);\n    return new R2Segment(x0, y0, x1, y1);\n  } as Interpolator<R2Segment>;\n  Object.setPrototypeOf(interpolator, R2SegmentInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: s0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: s1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (s0: R2Segment, s1: R2Segment): Interpolator<R2Segment>;\n\n  /** @hidden */\n  prototype: Interpolator<R2Segment>;\n};\n\nR2SegmentInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {R2Segment} from \"./R2Segment\";\n\n/** @hidden */\nexport class R2SegmentParser extends Parser<R2Segment> {\n  private readonly x0Parser: Parser<number> | undefined;\n  private readonly y0Parser: Parser<number> | undefined;\n  private readonly x1Parser: Parser<number> | undefined;\n  private readonly y1Parser: Parser<number> | undefined;\n  private readonly command: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n              x1Parser?: Parser<number>, y1Parser?: Parser<number>,\n              command?: number, step?: number) {\n    super();\n    this.x0Parser = x0Parser;\n    this.y0Parser = y0Parser;\n    this.x1Parser = x1Parser;\n    this.y1Parser = y1Parser;\n    this.command = command;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<R2Segment> {\n    return R2SegmentParser.parse(input, this.x0Parser, this.y0Parser,\n                                 this.x1Parser, this.y1Parser,\n                                 this.command, this.step);\n  }\n\n  static parse(input: Input, x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n               x1Parser?: Parser<number>, y1Parser?: Parser<number>,\n               command?: number, step: number = 1): Parser<R2Segment> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        switch (c) {\n          case 77/*'M'*/:\n          case 109/*'m'*/:\n          case 76/*'L'*/:\n          case 108/*'l'*/:\n            input = input.step();\n            command = c;\n            step = 2;\n            break;\n          case 72/*'H'*/:\n            input = input.step();\n            y1Parser = y0Parser;\n            command = c;\n            step = 2;\n            break;\n          case 104/*'h'*/:\n            input = input.step();\n            y1Parser = Parser.done(0);\n            command = c;\n            step = 2;\n            break;\n          case 86/*'V'*/:\n            input = input.step();\n            x1Parser = x0Parser;\n            command = c;\n            step = 4;\n            break;\n          case 118/*'v'*/:\n            input = input.step();\n            x1Parser = Parser.done(0);\n            command = c;\n            step = 4;\n            break;\n          default:\n            return Parser.error(Diagnostic.expected(\"lineto\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (x1Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x1Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x1Parser = x1Parser.feed(input);\n      }\n      if (x1Parser !== void 0) {\n        if (x1Parser.isDone()) {\n          if (y1Parser === void 0 || !y1Parser.isDone()) {\n            step = 3;\n          } else { // H or h\n            step = 4;\n          }\n        } else if (x1Parser.isError()) {\n          return x1Parser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 4;\n      } else if (!input.isEmpty()) {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      if (y1Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y1Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y1Parser = y1Parser.feed(input);\n      }\n      if (y1Parser !== void 0) {\n        if (y1Parser.isDone()) {\n          const x0 = x0Parser!.bind();\n          const y0 = y0Parser!.bind();\n          let x1 = x1Parser!.bind();\n          let y1 = y1Parser.bind();\n          if (command === 109/*'m'*/ || command === 108/*'l'*/ ||\n              command === 104/*'h'*/ || command === 118/*'v'*/) {\n            x1 += x0;\n            y1 += y0;\n          }\n          return Parser.done(new R2Segment(x0, y0, x1, y1));\n        } else if (y1Parser.isError()) {\n          return y1Parser.asError();\n        }\n      }\n    }\n    return new R2SegmentParser(x0Parser, y0Parser, x1Parser, y1Parser, command, step);\n  }\n\n  static parseRest(input: Input, command?: number, x0Parser?: Parser<number>,\n                   y0Parser?: Parser<number>): Parser<R2Segment> {\n    let x1Parser: Parser<number> | undefined;\n    let y1Parser: Parser<number> | undefined;\n    let step: number;\n    switch (command) {\n      case 72/*'H'*/:\n        y1Parser = y0Parser;\n        step = 2;\n        break;\n      case 104/*'h'*/:\n        y1Parser = Parser.done(0);\n        step = 2;\n        break;\n      case 86/*'V'*/:\n        x1Parser = x0Parser;\n        step = 4;\n        break;\n      case 118/*'v'*/:\n        x1Parser = Parser.done(0);\n        step = 4;\n        break;\n      default:\n        step = 2;\n    }\n    return this.parse(input, x0Parser, y0Parser, x1Parser, y1Parser, command, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Numbers} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {R2Function} from \"./R2Function\";\nimport type {AnyR2Shape} from \"./R2Shape\";\nimport {R2Point} from \"./R2Point\";\nimport type {R2CurveContext} from \"./R2CurveContext\";\nimport {R2BezierCurve} from \"./R2BezierCurve\";\n\nexport class R2QuadraticCurve extends R2BezierCurve implements Debug {\n  constructor(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number) {\n    super();\n    Object.defineProperty(this, \"x0\", {\n      value: x0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y0\", {\n      value: y0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"x1\", {\n      value: x1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y1\", {\n      value: y1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"x2\", {\n      value: x2,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y2\", {\n      value: y2,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.x0) && isFinite(this.y0)\n        && isFinite(this.x1) && isFinite(this.y1)\n        && isFinite(this.x2) && isFinite(this.y2);\n  }\n\n  readonly x0!: number;\n\n  readonly y0!: number;\n\n  readonly x1!: number;\n\n  readonly y1!: number;\n\n  readonly x2!: number;\n\n  readonly y2!: number;\n\n  override get xMin(): number {\n    return Math.min(this.x0, this.x1, this.x2);\n  }\n\n  override get yMin(): number {\n    return Math.min(this.y0, this.y1, this.y2);\n  }\n\n  override get xMax(): number {\n    return Math.max(this.x0, this.x1, this.x2);\n  }\n\n  override get yMax(): number {\n    return Math.max(this.y0, this.y1, this.y2);\n  }\n\n  override interpolateX(u: number): number {\n    const v = 1.0 - u;\n    const x01 = v * this.x0 + u * this.x1;\n    const x12 = v * this.x1 + u * this.x2;\n    return v * x01 + u * x12;\n  }\n\n  override interpolateY(u: number): number {\n    const v = 1.0 - u;\n    const y01 = v * this.y0 + u * this.y1;\n    const y12 = v * this.y1 + u * this.y2;\n    return v * y01 + u * y12;\n  }\n\n  override interpolate(u: number): R2Point {\n    const v = 1.0 - u;\n    const x01 = v * this.x0 + u * this.x1;\n    const y01 = v * this.y0 + u * this.y1;\n    const x12 = v * this.x1 + u * this.x2;\n    const y12 = v * this.y1 + u * this.y2;\n    const x02 = v * x01 + u * x12;\n    const y02 = v * y01 + u * y12;\n    return new R2Point(x02, y02);\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    return false; // TODO\n  }\n\n  override split(u: number): [R2QuadraticCurve, R2QuadraticCurve] {\n    const v = 1.0 - u;\n    const x01 = v * this.x0 + u * this.x1;\n    const y01 = v * this.y0 + u * this.y1;\n    const x12 = v * this.x1 + u * this.x2;\n    const y12 = v * this.y1 + u * this.y2;\n    const x02 = v * x01 + u * x12;\n    const y02 = v * y01 + u * y12;\n    const c0 = new R2QuadraticCurve(this.x0, this.y0, x01, y01, x02, y02);\n    const c1 = new R2QuadraticCurve(x02, y02, x12, y12, this.x2, this.y2);\n    return [c0, c1];\n  }\n\n  override transform(f: R2Function): R2QuadraticCurve {\n    return new R2QuadraticCurve(f.transformX(this.x0, this.y0), f.transformY(this.x0, this.y0),\n                                f.transformX(this.x1, this.y1), f.transformY(this.x1, this.y1),\n                                f.transformX(this.x2, this.y2), f.transformY(this.x2, this.y2));\n  }\n\n  override drawMove(context: R2CurveContext): void {\n    context.moveTo(this.x0, this.y0);\n  }\n\n  override drawRest(context: R2CurveContext): void {\n    context.quadraticCurveTo(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  override transformDrawMove(context: R2CurveContext, f: R2Function): void {\n    context.moveTo(f.transformX(this.x0, this.y0), f.transformY(this.x0, this.y0));\n  }\n\n  override transformDrawRest(context: R2CurveContext, f: R2Function): void {\n    context.quadraticCurveTo(f.transformX(this.x1, this.y1), f.transformY(this.x1, this.y1),\n                             f.transformX(this.x2, this.y2), f.transformY(this.x2, this.y2));\n  }\n\n  override writeMove(output: Output): void {\n    output.write(77/*'M'*/);\n    Format.displayNumber(this.x0, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y0, output);\n  }\n\n  override writeRest(output: Output): void {\n    output.write(81/*'Q'*/);\n    Format.displayNumber(this.x1, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y1, output);\n    output.write(44/*','*/)\n    Format.displayNumber(this.x2, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y2, output);\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2QuadraticCurve) {\n      return Numbers.equivalent(this.x0, that.x0, epsilon)\n          && Numbers.equivalent(this.y0, that.y0, epsilon)\n          && Numbers.equivalent(this.x1, that.x1, epsilon)\n          && Numbers.equivalent(this.y1, that.y1, epsilon)\n          && Numbers.equivalent(this.x2, that.x2, epsilon)\n          && Numbers.equivalent(this.y2, that.y2, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2QuadraticCurve) {\n      return this.x0 === that.x0 && this.y0 === that.y0\n          && this.x1 === that.x1 && this.y1 === that.y1\n          && this.x2 === that.x2 && this.y2 === that.y2;\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    output.write(\"R2Curve\").write(46/*'.'*/).write(\"quadratic\").write(40/*'('*/)\n        .debug(this.x0).write(\", \").debug(this.y0).write(\", \")\n        .debug(this.x1).write(\", \").debug(this.y1).write(\", \")\n        .debug(this.x2).write(\", \").debug(this.y2).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {R2QuadraticCurve} from \"./R2QuadraticCurve\";\n\n/** @hidden */\nexport class R2QuadraticCurveParser extends Parser<R2QuadraticCurve> {\n  private readonly x0Parser: Parser<number> | undefined;\n  private readonly y0Parser: Parser<number> | undefined;\n  private readonly x1Parser: Parser<number> | undefined;\n  private readonly y1Parser: Parser<number> | undefined;\n  private readonly x2Parser: Parser<number> | undefined;\n  private readonly y2Parser: Parser<number> | undefined;\n  private readonly command: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n              x1Parser?: Parser<number>, y1Parser?: Parser<number>,\n              x2Parser?: Parser<number>, y2Parser?: Parser<number>,\n              command?: number, step?: number) {\n    super();\n    this.x0Parser = x0Parser;\n    this.y0Parser = y0Parser;\n    this.x1Parser = x1Parser;\n    this.y1Parser = y1Parser;\n    this.x2Parser = x2Parser;\n    this.y2Parser = y2Parser;\n    this.command = command;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<R2QuadraticCurve> {\n    return R2QuadraticCurveParser.parse(input, this.x0Parser, this.y0Parser,\n                                        this.x1Parser, this.y1Parser,\n                                        this.x2Parser, this.y2Parser,\n                                        this.command, this.step);\n  }\n\n  static parse(input: Input, x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n               x1Parser?: Parser<number>, y1Parser?: Parser<number>,\n               x2Parser?: Parser<number>, y2Parser?: Parser<number>,\n               command?: number, step: number = 1): Parser<R2QuadraticCurve> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        switch (c) {\n          case 81/*'Q'*/:\n          case 113/*'q'*/:\n            input = input.step();\n            command = c;\n            step = 2;\n            break;\n          case 84/*'T'*/:\n          case 116/*'t'*/:\n            input = input.step();\n            command = c;\n            step = 6;\n            break;\n          default:\n            return Parser.error(Diagnostic.expected(\"curveto\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (x1Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x1Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x1Parser = x1Parser.feed(input);\n      }\n      if (x1Parser !== void 0) {\n        if (x1Parser.isDone()) {\n          step = 3;\n        } else if (x1Parser.isError()) {\n          return x1Parser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 4;\n      } else if (!input.isEmpty()) {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      if (y1Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y1Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y1Parser = y1Parser.feed(input);\n      }\n      if (y1Parser !== void 0) {\n        if (y1Parser.isDone()) {\n          step = 5;\n        } else if (y1Parser.isError()) {\n          return y1Parser.asError();\n        }\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 6;\n      } else if (!input.isEmpty()) {\n        step = 6;\n      }\n    }\n    if (step === 6) {\n      if (x2Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x2Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x2Parser = x2Parser.feed(input);\n      }\n      if (x2Parser !== void 0) {\n        if (x2Parser.isDone()) {\n          step = 7;\n        } else if (x2Parser.isError()) {\n          return x2Parser.asError();\n        }\n      }\n    }\n    if (step === 7) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 8;\n      } else if (!input.isEmpty()) {\n        step = 8;\n      }\n    }\n    if (step === 8) {\n      if (y2Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y2Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y2Parser = y2Parser.feed(input);\n      }\n      if (y2Parser !== void 0) {\n        if (y2Parser.isDone()) {\n          const x0 = x0Parser!.bind();\n          const y0 = y0Parser!.bind();\n          let x1 = x1Parser!.bind();\n          let y1 = y1Parser!.bind();\n          let x2 = x2Parser!.bind();\n          let y2 = y2Parser.bind();\n          if (command === 113/*'q'*/ || command === 116/*'t'*/) {\n            x1 += x0;\n            y1 += y0;\n            x2 += x0;\n            y2 += y0;\n          }\n          return Parser.done(new R2QuadraticCurve(x0, y0, x1, y1, x2, y2));\n        } else if (y2Parser.isError()) {\n          return y2Parser.asError();\n        }\n      }\n    }\n    return new R2QuadraticCurveParser(x0Parser, y0Parser, x1Parser, y1Parser,\n                                      x2Parser, y2Parser, command, step);\n  }\n\n  static parseRest(input: Input, command?: number, x0Parser?: Parser<number>,\n                   y0Parser?: Parser<number>, x1Parser?: Parser<number>,\n                   y1Parser?: Parser<number>): Parser<R2QuadraticCurve> {\n    const step = command === 84/*'T'*/ || command === 116/*'t'*/ ? 6 : 2;\n    return R2QuadraticCurveParser.parse(input, x0Parser, y0Parser, x1Parser, y1Parser,\n                                        void 0, void 0, command, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Numbers} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {R2Function} from \"./R2Function\";\nimport type {AnyR2Shape} from \"./R2Shape\";\nimport {R2Point} from \"./R2Point\";\nimport type {R2CurveContext} from \"./R2CurveContext\";\nimport {R2BezierCurve} from \"./R2BezierCurve\";\n\nexport class R2CubicCurve extends R2BezierCurve implements Debug {\n  constructor(x0: number, y0: number, x1: number, y1: number,\n              x2: number, y2: number, x3: number, y3: number) {\n    super();\n    Object.defineProperty(this, \"x0\", {\n      value: x0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y0\", {\n      value: y0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"x1\", {\n      value: x1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y1\", {\n      value: y1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"x2\", {\n      value: x2,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y2\", {\n      value: y2,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"x3\", {\n      value: x3,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y3\", {\n      value: y3,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.x0) && isFinite(this.y0)\n        && isFinite(this.x1) && isFinite(this.y1)\n        && isFinite(this.x2) && isFinite(this.y2)\n        && isFinite(this.x3) && isFinite(this.y3);\n  }\n\n  readonly x0!: number;\n\n  readonly y0!: number;\n\n  readonly x1!: number;\n\n  readonly y1!: number;\n\n  readonly x2!: number;\n\n  readonly y2!: number;\n\n  readonly x3!: number;\n\n  readonly y3!: number;\n\n  override get xMin(): number {\n    return Math.min(this.x0, this.x1, this.x2, this.x3);\n  }\n\n  override get yMin(): number {\n    return Math.min(this.y0, this.y1, this.y2, this.y3);\n  }\n\n  override get xMax(): number {\n    return Math.max(this.x0, this.x1, this.x2, this.x3);\n  }\n\n  override get yMax(): number {\n    return Math.max(this.y0, this.y1, this.y2, this.y3);\n  }\n\n  override interpolateX(u: number): number {\n    const v = 1.0 - u;\n    const x01 = v * this.x0 + u * this.x1;\n    const x12 = v * this.x1 + u * this.x2;\n    const x23 = v * this.x2 + u * this.x3;\n    const x02 = v * x01 + u * x12;\n    const x13 = v * x12 + u * x23;\n    return v * x02 + u * x13;\n  }\n\n  override interpolateY(u: number): number {\n    const v = 1.0 - u;\n    const y01 = v * this.y0 + u * this.y1;\n    const y12 = v * this.y1 + u * this.y2;\n    const y23 = v * this.y2 + u * this.y3;\n    const y02 = v * y01 + u * y12;\n    const y13 = v * y12 + u * y23;\n    return v * y02 + u * y13;\n  }\n\n  override interpolate(u: number): R2Point {\n    const v = 1.0 - u;\n    const x01 = v * this.x0 + u * this.x1;\n    const y01 = v * this.y0 + u * this.y1;\n    const x12 = v * this.x1 + u * this.x2;\n    const y12 = v * this.y1 + u * this.y2;\n    const x23 = v * this.x2 + u * this.x3;\n    const y23 = v * this.y2 + u * this.y3;\n    const x02 = v * x01 + u * x12;\n    const y02 = v * y01 + u * y12;\n    const x13 = v * x12 + u * x23;\n    const y13 = v * y12 + u * y23;\n    const x03 = v * x02 + u * x13;\n    const y03 = v * y02 + u * y13;\n    return new R2Point(x03, y03);\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    return false; // TODO\n  }\n\n  override split(u: number): [R2CubicCurve, R2CubicCurve] {\n    const v = 1.0 - u;\n    const x01 = v * this.x0 + u * this.x1;\n    const y01 = v * this.y0 + u * this.y1;\n    const x12 = v * this.x1 + u * this.x2;\n    const y12 = v * this.y1 + u * this.y2;\n    const x23 = v * this.x2 + u * this.x3;\n    const y23 = v * this.y2 + u * this.y3;\n    const x02 = v * x01 + u * x12;\n    const y02 = v * y01 + u * y12;\n    const x13 = v * x12 + u * x23;\n    const y13 = v * y12 + u * y23;\n    const x03 = v * x02 + u * x13;\n    const y03 = v * y02 + u * y13;\n    const c0 = new R2CubicCurve(this.x0, this.y0, x01, y01, x02, y02, x03, y03);\n    const c1 = new R2CubicCurve(x03, y03, x13, y13, x23, y23, this.x3, this.y3);\n    return [c0, c1];\n  }\n\n  override transform(f: R2Function): R2CubicCurve {\n    return new R2CubicCurve(f.transformX(this.x0, this.y0), f.transformY(this.x0, this.y0),\n                            f.transformX(this.x1, this.y1), f.transformY(this.x1, this.y1),\n                            f.transformX(this.x2, this.y2), f.transformY(this.x2, this.y2),\n                            f.transformX(this.x3, this.y3), f.transformY(this.x3, this.y3));\n  }\n\n  override drawMove(context: R2CurveContext): void {\n    context.moveTo(this.x0, this.y0);\n  }\n\n  override drawRest(context: R2CurveContext): void {\n    context.bezierCurveTo(this.x1, this.y1, this.x2, this.y2, this.x3, this.y3);\n  }\n\n  override transformDrawMove(context: R2CurveContext, f: R2Function): void {\n    context.moveTo(f.transformX(this.x0, this.y0), f.transformY(this.x0, this.y0));\n  }\n\n  override transformDrawRest(context: R2CurveContext, f: R2Function): void {\n    context.bezierCurveTo(f.transformX(this.x1, this.y1), f.transformY(this.x1, this.y1),\n                          f.transformX(this.x2, this.y2), f.transformY(this.x2, this.y2),\n                          f.transformX(this.x3, this.y3), f.transformY(this.x3, this.y3));\n  }\n\n  override writeMove(output: Output): void {\n    output.write(77/*'M'*/);\n    Format.displayNumber(this.x0, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y0, output);\n  }\n\n  override writeRest(output: Output): void {\n    output.write(67/*'C'*/);\n    Format.displayNumber(this.x1, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y1, output);\n    output.write(44/*','*/)\n    Format.displayNumber(this.x2, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y2, output);\n    output.write(44/*','*/)\n    Format.displayNumber(this.x3, output)\n    output.write(44/*','*/)\n    Format.displayNumber(this.y3, output);\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2CubicCurve) {\n      return Numbers.equivalent(this.x0, that.x0, epsilon)\n          && Numbers.equivalent(this.y0, that.y0, epsilon)\n          && Numbers.equivalent(this.x1, that.x1, epsilon)\n          && Numbers.equivalent(this.y1, that.y1, epsilon)\n          && Numbers.equivalent(this.x2, that.x2, epsilon)\n          && Numbers.equivalent(this.y2, that.y2, epsilon)\n          && Numbers.equivalent(this.x3, that.x3, epsilon)\n          && Numbers.equivalent(this.y3, that.y3, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2CubicCurve) {\n      return this.x0 === that.x0 && this.y0 === that.y0\n          && this.x1 === that.x1 && this.y1 === that.y1\n          && this.x2 === that.x2 && this.y2 === that.y2\n          && this.x3 === that.x3 && this.y3 === that.y3;\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    output.write(\"R2Curve\").write(46/*'.'*/).write(\"cubic\").write(40/*'('*/)\n        .debug(this.x0).write(\", \").debug(this.y0).write(\", \")\n        .debug(this.x1).write(\", \").debug(this.y1).write(\", \")\n        .debug(this.x2).write(\", \").debug(this.y2).write(\", \")\n        .debug(this.x3).write(\", \").debug(this.y3).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {R2CubicCurve} from \"./R2CubicCurve\";\n\n/** @hidden */\nexport class R2CubicCurveParser extends Parser<R2CubicCurve> {\n  private readonly x0Parser: Parser<number> | undefined;\n  private readonly y0Parser: Parser<number> | undefined;\n  private readonly x1Parser: Parser<number> | undefined;\n  private readonly y1Parser: Parser<number> | undefined;\n  private readonly x2Parser: Parser<number> | undefined;\n  private readonly y2Parser: Parser<number> | undefined;\n  private readonly x3Parser: Parser<number> | undefined;\n  private readonly y3Parser: Parser<number> | undefined;\n  private readonly command: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n              x1Parser?: Parser<number>, y1Parser?: Parser<number>,\n              x2Parser?: Parser<number>, y2Parser?: Parser<number>,\n              x3Parser?: Parser<number>, y3Parser?: Parser<number>,\n              command?: number, step?: number) {\n    super();\n    this.x0Parser = x0Parser;\n    this.y0Parser = y0Parser;\n    this.x1Parser = x1Parser;\n    this.y1Parser = y1Parser;\n    this.x2Parser = x2Parser;\n    this.y2Parser = y2Parser;\n    this.x3Parser = x3Parser;\n    this.y3Parser = y3Parser;\n    this.command = command;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<R2CubicCurve> {\n    return R2CubicCurveParser.parse(input, this.x0Parser, this.y0Parser,\n                                    this.x1Parser, this.y1Parser,\n                                    this.x2Parser, this.y2Parser,\n                                    this.x3Parser, this.y3Parser,\n                                    this.command, this.step);\n  }\n\n  static parse(input: Input, x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n               x1Parser?: Parser<number>, y1Parser?: Parser<number>,\n               x2Parser?: Parser<number>, y2Parser?: Parser<number>,\n               x3Parser?: Parser<number>, y3Parser?: Parser<number>,\n               command?: number, step: number = 1): Parser<R2CubicCurve> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        switch (c) {\n          case 67/*'C'*/:\n          case 99/*'c'*/:\n            input = input.step();\n            command = c;\n            step = 2;\n            break;\n          case 83/*'S'*/:\n          case 115/*'s'*/:\n            input = input.step();\n            command = c;\n            step = 6;\n            break;\n          default:\n            return Parser.error(Diagnostic.expected(\"curveto\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (x1Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x1Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x1Parser = x1Parser.feed(input);\n      }\n      if (x1Parser !== void 0) {\n        if (x1Parser.isDone()) {\n          step = 3;\n        } else if (x1Parser.isError()) {\n          return x1Parser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 4;\n      } else if (!input.isEmpty()) {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      if (y1Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y1Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y1Parser = y1Parser.feed(input);\n      }\n      if (y1Parser !== void 0) {\n        if (y1Parser.isDone()) {\n          step = 5;\n        } else if (y1Parser.isError()) {\n          return y1Parser.asError();\n        }\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 6;\n      } else if (!input.isEmpty()) {\n        step = 6;\n      }\n    }\n    if (step === 6) {\n      if (x2Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x2Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x2Parser = x2Parser.feed(input);\n      }\n      if (x2Parser !== void 0) {\n        if (x2Parser.isDone()) {\n          step = 7;\n        } else if (x2Parser.isError()) {\n          return x2Parser.asError();\n        }\n      }\n    }\n    if (step === 7) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 8;\n      } else if (!input.isEmpty()) {\n        step = 8;\n      }\n    }\n    if (step === 8) {\n      if (y2Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y2Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y2Parser = y2Parser.feed(input);\n      }\n      if (y2Parser !== void 0) {\n        if (y2Parser.isDone()) {\n          step = 9;\n        } else if (y2Parser.isError()) {\n          return y2Parser.asError();\n        }\n      }\n    }\n    if (step === 9) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 10;\n      } else if (!input.isEmpty()) {\n        step = 10;\n      }\n    }\n    if (step === 10) {\n      if (x3Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x3Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x3Parser = x3Parser.feed(input);\n      }\n      if (x3Parser !== void 0) {\n        if (x3Parser.isDone()) {\n          step = 11;\n        } else if (x3Parser.isError()) {\n          return x3Parser.asError();\n        }\n      }\n    }\n    if (step === 11) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 12;\n      } else if (!input.isEmpty()) {\n        step = 12;\n      }\n    }\n    if (step === 12) {\n      if (y3Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y3Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y3Parser = y3Parser.feed(input);\n      }\n      if (y3Parser !== void 0) {\n        if (y3Parser.isDone()) {\n          const x0 = x0Parser!.bind();\n          const y0 = y0Parser!.bind();\n          let x1 = x1Parser!.bind();\n          let y1 = y1Parser!.bind();\n          let x2 = x2Parser!.bind();\n          let y2 = y2Parser!.bind();\n          let x3 = x3Parser!.bind();\n          let y3 = y3Parser.bind();\n          if (command === 99/*'c'*/ || command === 115/*'s'*/) {\n            x1 += x0;\n            y1 += y0;\n            x2 += x0;\n            y2 += y0;\n            x3 += x0;\n            y3 += y0;\n          }\n          return Parser.done(new R2CubicCurve(x0, y0, x1, y1, x2, y2, x3, y3));\n        } else if (y3Parser.isError()) {\n          return y3Parser.asError();\n        }\n      }\n    }\n    return new R2CubicCurveParser(x0Parser, y0Parser, x1Parser, y1Parser,\n                                  x2Parser, y2Parser, x3Parser, y3Parser,\n                                  command, step);\n  }\n\n  static parseRest(input: Input, command?: number, x0Parser?: Parser<number>,\n                   y0Parser?: Parser<number>, x1Parser?: Parser<number>,\n                   y1Parser?: Parser<number>): Parser<R2CubicCurve> {\n    const step = command === 83/*'S'*/ || command === 115/*'s'*/ ? 6 : 2;\n    return R2CubicCurveParser.parse(input, x0Parser, y0Parser, x1Parser, y1Parser,\n                                    void 0, void 0, void 0, void 0, command, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Numbers} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {R2Function} from \"./R2Function\";\nimport type {AnyR2Shape} from \"./R2Shape\";\nimport {R2Point} from \"./R2Point\";\nimport type {R2CurveContext} from \"./R2CurveContext\";\nimport {R2Curve} from \"./R2Curve\";\n\nexport class R2EllipticCurve extends R2Curve implements Debug {\n  constructor(cx: number, cy: number, rx: number, ry: number,\n              phi: number, a0: number, da: number) {\n    super();\n    Object.defineProperty(this, \"cx\", {\n      value: cx,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"cy\", {\n      value: cy,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"rx\", {\n      value: rx,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ry\", {\n      value: ry,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"phi\", {\n      value: phi,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"a0\", {\n      value: a0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"da\", {\n      value: da,\n      enumerable: true,\n    });\n  }\n\n  readonly cx!: number;\n\n  readonly cy!: number;\n\n  readonly rx!: number;\n\n  readonly ry!: number;\n\n  readonly phi!: number;\n\n  readonly a0!: number;\n\n  readonly da!: number;\n\n  override get xMin(): number {\n    return this.cx - Math.max(this.rx, this.ry);\n  }\n\n  override get yMin(): number {\n    return this.cy - Math.max(this.rx, this.ry);\n  }\n\n  override get xMax(): number {\n    return this.cx + Math.max(this.rx, this.ry);\n  }\n\n  override get yMax(): number {\n    return this.cy + Math.max(this.rx, this.ry);\n  }\n\n  override interpolateX(u: number): number {\n    const a0 = this.a0;\n    const da = this.da;\n    const a = a0 + u * da;\n    const dx = this.rx * Math.cos(a);\n    const dy = this.ry * Math.sin(a);\n    const phi = this.phi;\n    if (phi === 0) {\n      return this.cx + dx;\n    } else {\n      return this.cx + dx * Math.cos(phi) - dy * Math.sin(phi);\n    }\n  }\n\n  override interpolateY(u: number): number {\n    const a0 = this.a0;\n    const da = this.da;\n    const a = a0 + u * da;\n    const dx = this.rx * Math.cos(a);\n    const dy = this.ry * Math.sin(a);\n    const phi = this.phi;\n    if (phi === 0) {\n      return this.cy + dy;\n    } else {\n      return this.cy + dx * Math.sin(phi) + dy * Math.cos(phi);\n    }\n  }\n\n  override interpolate(u: number): R2Point {\n    const a0 = this.a0;\n    const da = this.da;\n    const a = a0 + u * da;\n    const dx = this.rx * Math.cos(a);\n    const dy = this.ry * Math.sin(a);\n    const phi = this.phi;\n    if (phi === 0) {\n      return new R2Point(this.cx + dx, this.cy + dy);\n    } else {\n      return new R2Point(this.cx + dx * Math.cos(phi) - dy * Math.sin(phi),\n                         this.cy + dx * Math.sin(phi) + dy * Math.cos(phi));\n    }\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    return false; // TODO\n  }\n\n  override split(u: number): [R2EllipticCurve, R2EllipticCurve] {\n    const a0 = this.a0;\n    const da = this.da;\n    const a = a0 + u * da;\n    const c0 = new R2EllipticCurve(this.cx, this.cy, this.rx, this.ry,\n                                   this.phi, a0, a - a0);\n    const c1 = new R2EllipticCurve(this.cx, this.cy, this.rx, this.ry,\n                                   this.phi, a, a0 + da - a);\n    return [c0, c1];\n  }\n\n  override transform(f: R2Function): R2EllipticCurve {\n    const a0 = this.a0;\n    const a1 = a0 + this.da;\n    const a0x = Math.cos(a0);\n    const a0y = Math.sin(a0);\n    const a1x = Math.cos(a1);\n    const a1y = Math.sin(a1);\n    const b0x = f.transformX(a0x, a0y);\n    const b0y = f.transformY(a0x, a0y);\n    const b1x = f.transformX(a1x, a1y);\n    const b1y = f.transformY(a1x, a1y);\n    const b0 = Math.atan2(b0y, b0x);\n    const b1 = Math.atan2(b1y, b1x);\n    return new R2EllipticCurve(f.transformX(this.cx, this.cy), f.transformY(this.cx, this.cy),\n                               f.transformX(this.rx, this.ry), f.transformY(this.rx, this.ry),\n                               this.phi, b0, b1 - b0);\n  }\n\n  override drawMove(context: R2CurveContext): void {\n    const {x0, y0} = this.toEndpoints();\n    context.moveTo(x0, y0);\n  }\n\n  override drawRest(context: R2CurveContext): void {\n    context.ellipse(this.cx, this.cy, this.rx, this.ry, this.phi,\n                    this.a0, this.a0 + this.da, this.da < 0);\n  }\n\n  override transformDrawMove(context: R2CurveContext, f: R2Function): void {\n    const {x0, y0} = this.toEndpoints();\n    context.moveTo(f.transformX(x0, y0), f.transformY(x0, y0));\n  }\n\n  override transformDrawRest(context: R2CurveContext, f: R2Function): void {\n    const a0 = this.a0;\n    const a1 = a0 + this.da;\n    const a0x = Math.cos(a0);\n    const a0y = Math.sin(a0);\n    const a1x = Math.cos(a1);\n    const a1y = Math.sin(a1);\n    const b0x = f.transformX(a0x, a0y);\n    const b0y = f.transformY(a0x, a0y);\n    const b1x = f.transformX(a1x, a1y);\n    const b1y = f.transformY(a1x, a1y);\n    const b0 = Math.atan2(b0y, b0x);\n    const b1 = Math.atan2(b1y, b1x);\n    context.ellipse(f.transformX(this.cx, this.cy), f.transformY(this.cx, this.cy),\n                    f.transformX(this.rx, this.ry), f.transformY(this.rx, this.ry),\n                    this.phi, b0, b1, b1 - b0 < 0);\n  }\n\n  override writeMove(output: Output): void {\n    const {x0, y0} = this.toEndpoints();\n    output.write(77/*'M'*/);\n    Format.displayNumber(x0, output)\n    output.write(44/*','*/)\n    Format.displayNumber(y0, output);\n  }\n\n  override writeRest(output: Output): void {\n    const {rx, ry, phi, large, sweep, x1, y1} = this.toEndpoints();\n    output.write(65/*'A'*/);\n    Format.displayNumber(rx, output)\n    output.write(44/*','*/)\n    Format.displayNumber(ry, output);\n    output.write(32/*' '*/)\n    Format.displayNumber(phi, output)\n    output.write(32/*' '*/)\n    output.write(large ? 49/*'1'*/ : 48/*'0'*/);\n    output.write(44/*','*/)\n    output.write(sweep ? 49/*'1'*/ : 48/*'0'*/);\n    output.write(32/*' '*/)\n    Format.displayNumber(x1, output);\n    output.write(44/*','*/)\n    Format.displayNumber(y1, output);\n  }\n\n  toEndpoints(): {x0: number, y0: number, rx: number, ry: number, phi: number,\n                  large: boolean, sweep: boolean, x1: number, y1: number} {\n    const cx = this.cx;\n    const cy = this.cy;\n    const rx = this.rx;\n    const ry = this.ry;\n    const phi = this.phi;\n    const a0 = this.a0;\n    const da = this.da;\n    const a1 = a0 + da;\n\n    const cosPhi = Math.cos(phi);\n    const sinPhi = Math.sin(phi);\n    const cosA0 = Math.cos(a0);\n    const sinA0 = Math.sin(a0);\n    const cosA1 = Math.cos(a1);\n    const sinA1 = Math.sin(a1);\n    const x0 = cosPhi * rx * cosA0 - sinPhi * ry * sinA0 + cx;\n    const y0 = sinPhi * rx * cosA0 + cosPhi * ry * sinA0 + cy;\n    const x1 = cosPhi * rx * cosA1 - sinPhi * ry * sinA1 + cx;\n    const y1 = sinPhi * rx * cosA1 + cosPhi * ry * sinA1 + cy;\n    const large = Math.abs(da) > Math.PI;\n    const sweep = da > 0;\n    return {x0, y0, rx, ry, phi, large, sweep, x1, y1};\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2EllipticCurve) {\n      return Numbers.equivalent(this.cx, that.cx, epsilon)\n          && Numbers.equivalent(this.cy, that.cy, epsilon)\n          && Numbers.equivalent(this.rx, that.rx, epsilon)\n          && Numbers.equivalent(this.ry, that.ry, epsilon)\n          && Numbers.equivalent(this.phi, that.phi, epsilon)\n          && Numbers.equivalent(this.a0, that.a0, epsilon)\n          && Numbers.equivalent(this.da, that.da, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2EllipticCurve) {\n      return this.cx === that.cx && this.cy === that.cy\n          && this.rx === that.rx && this.ry === that.ry\n          && this.phi === that.phi && this.a0 === that.a0\n          && this.da === that.da;\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    output.write(\"R2Curve\").write(46/*'.'*/).write(\"elliptic\").write(40/*'('*/)\n        .debug(this.cx).write(\", \").debug(this.cy).write(\", \")\n        .debug(this.rx).write(\", \").debug(this.ry).write(\", \")\n        .debug(this.phi).write(\", \").debug(this.a0).write(\", \")\n        .debug(this.da).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static fromEndpoints(x0: number, y0: number, rx: number, ry: number, phi: number,\n                       large: boolean, sweep: boolean, x1: number, y1: number): R2EllipticCurve {\n    const cosPhi = Math.cos(phi);\n    const sinPhi = Math.sin(phi);\n    const x0p =  cosPhi * ((x0 - x1) / 2) + sinPhi * ((y0 - y1) / 2);\n    const y0p = -sinPhi * ((x0 - x1) / 2) + cosPhi * ((y0 - y1) / 2);\n\n    const rx2 = rx * rx;\n    const ry2 = ry * ry;\n    const x0p2 = x0p * x0p;\n    const y0p2 = y0p * y0p;\n    let sp = Math.sqrt((rx2 * ry2 - rx2 * y0p2 - ry2 * x0p2) / (rx2 * y0p2 + ry2 * x0p2));\n    if (large === sweep) {\n      sp = -sp;\n    }\n    const cxp =  sp * rx * y0p / ry;\n    const cyp = -sp * ry * x0p / rx;\n    const cx = cosPhi * cxp - sinPhi * cyp + (x0 + x1) / 2;\n    const cy = sinPhi * cxp + cosPhi * cyp + (y0 + y1) / 2;\n\n    function angle(ux: number, uy: number, vx: number, vy: number): number {\n      const uv = ux * vx + uy * vy;\n      const uu = ux * ux + uy * uy;\n      const vv = vx * vx + vy * vy;\n      let a = Math.acos(uv / (Math.sqrt(uu) * Math.sqrt(vv)));\n      if (ux * vy - uy * vx < 0) {\n        a = -a;\n      }\n      return a;\n    }\n    const a0 = angle(1, 0, (x0p - cxp) / rx, (y0p - cyp) / ry);\n    let da = angle((x0p - cxp) / rx, (y0p - cyp) / ry, (-x0p - cxp) / rx, (-y0p - cyp) / ry) % (2 * Math.PI);\n    if (!sweep && da > 0) {\n      da -= 2 * Math.PI;\n    } else if (sweep && da < 0) {\n      da += 2 * Math.PI;\n    }\n\n    return new R2EllipticCurve(cx, cy, rx, ry, phi, a0, da);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {R2EllipticCurve} from \"./R2EllipticCurve\";\n\n/** @hidden */\nexport class R2EllipticCurveParser extends Parser<R2EllipticCurve> {\n  private readonly x0Parser: Parser<number> | undefined;\n  private readonly y0Parser: Parser<number> | undefined;\n  private readonly rxParser: Parser<number> | undefined;\n  private readonly ryParser: Parser<number> | undefined;\n  private readonly phiParser: Parser<number> | undefined;\n  private readonly large: boolean | undefined;\n  private readonly sweep: boolean | undefined;\n  private readonly x1Parser: Parser<number> | undefined;\n  private readonly y1Parser: Parser<number> | undefined;\n  private readonly command: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n              rxParser?: Parser<number>, ryParser?: Parser<number>,\n              phiParser?: Parser<number>, large?: boolean, sweep?: boolean,\n              x1Parser?: Parser<number>, y1Parser?: Parser<number>,\n              command?: number, step?: number) {\n    super();\n    this.x0Parser = x0Parser;\n    this.y0Parser = y0Parser;\n    this.rxParser = rxParser;\n    this.ryParser = ryParser;\n    this.phiParser = phiParser;\n    this.large = large;\n    this.sweep = sweep;\n    this.x1Parser = x1Parser;\n    this.y1Parser = y1Parser;\n    this.command = command;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<R2EllipticCurve> {\n    return R2EllipticCurveParser.parse(input, this.x0Parser, this.y0Parser,\n                                       this.rxParser, this.ryParser,\n                                       this.phiParser, this.large, this.sweep,\n                                       this.x1Parser, this.y1Parser,\n                                       this.command, this.step);\n  }\n\n  static parse(input: Input, x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n               rxParser?: Parser<number>, ryParser?: Parser<number>,\n               phiParser?: Parser<number>, large?: boolean, sweep?: boolean,\n               x1Parser?: Parser<number>, y1Parser?: Parser<number>,\n               command?: number, step: number = 1): Parser<R2EllipticCurve> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        switch (c) {\n          case 65/*'A'*/:\n          case 97/*'a'*/:\n            input = input.step();\n            command  = c;\n            step = 2;\n            break;\n          default:\n            return Parser.error(Diagnostic.expected(\"arcto\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (rxParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          rxParser = Base10.parseDecimal(input);\n        }\n      } else {\n        rxParser = rxParser.feed(input);\n      }\n      if (rxParser !== void 0) {\n        if (rxParser.isDone()) {\n          step = 3;\n        } else if (rxParser.isError()) {\n          return rxParser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 4;\n      } else if (!input.isEmpty()) {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      if (ryParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          ryParser = Base10.parseDecimal(input);\n        }\n      } else {\n        ryParser = ryParser.feed(input);\n      }\n      if (ryParser !== void 0) {\n        if (ryParser.isDone()) {\n          step = 5;\n        } else if (ryParser.isError()) {\n          return ryParser.asError();\n        }\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 6;\n      } else if (!input.isEmpty()) {\n        step = 6;\n      }\n    }\n    if (step === 6) {\n      if (phiParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          phiParser = Base10.parseDecimal(input);\n        }\n      } else {\n        phiParser = phiParser.feed(input);\n      }\n      if (phiParser !== void 0) {\n        if (phiParser.isDone()) {\n          step = 7;\n        } else if (phiParser.isError()) {\n          return phiParser.asError();\n        }\n      }\n    }\n    if (step === 7) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 8;\n      } else if (!input.isEmpty()) {\n        step = 8;\n      }\n    }\n    if (step === 8) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 48/*'0'*/) {\n          input = input.step();\n          large = false;\n          step = 9;\n        } else if (c === 49/*'1'*/) {\n          input = input.step();\n          large = true;\n          step = 9;\n        } else {\n          return Parser.error(Diagnostic.expected(\"flag\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 9) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 10;\n      } else if (!input.isEmpty()) {\n        step = 10;\n      }\n    }\n    if (step === 10) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 48/*'0'*/) {\n          input = input.step();\n          sweep = false;\n          step = 11;\n        } else if (c === 49/*'1'*/) {\n          input = input.step();\n          sweep = true;\n          step = 11;\n        } else {\n          return Parser.error(Diagnostic.expected(\"flag\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 11) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 12;\n      } else if (!input.isEmpty()) {\n        step = 12;\n      }\n    }\n    if (step === 12) {\n      if (x1Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x1Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x1Parser = x1Parser.feed(input);\n      }\n      if (x1Parser !== void 0) {\n        if (x1Parser.isDone()) {\n          step = 13;\n        } else if (x1Parser.isError()) {\n          return x1Parser.asError();\n        }\n      }\n    }\n    if (step === 13) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 14;\n      } else if (!input.isEmpty()) {\n        step = 14;\n      }\n    }\n    if (step === 14) {\n      if (y1Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y1Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y1Parser = y1Parser.feed(input);\n      }\n      if (y1Parser !== void 0) {\n        if (y1Parser.isDone()) {\n          const x0 = x0Parser!.bind();\n          const y0 = y0Parser!.bind();\n          const rx = rxParser!.bind();\n          const ry = ryParser!.bind();\n          const phi = phiParser!.bind() * Math.PI / 180;\n          let x1 = x1Parser!.bind();\n          let y1 = y1Parser.bind();\n          if (command === 97/*'a'*/) {\n            x1 += x0;\n            y1 += y0;\n          }\n          return Parser.done(R2EllipticCurve.fromEndpoints(x0, y0, rx, ry, phi, large!, sweep!, x1, y1));\n        } else if (y1Parser.isError()) {\n          return y1Parser.asError();\n        }\n      }\n    }\n    return new R2EllipticCurveParser(x0Parser, y0Parser, rxParser, ryParser,\n                                     phiParser, large, sweep, x1Parser, y1Parser,\n                                     command, step);\n  }\n\n  static parseRest(input: Input, command?: number, x0Parser?: Parser<number>,\n                   y0Parser?: Parser<number>): Parser<R2EllipticCurve> {\n    return R2EllipticCurveParser.parse(input, x0Parser, y0Parser, void 0, void 0, void 0,\n                                       void 0, void 0, void 0, void 0, command, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays} from \"@swim/util\";\nimport {\n  Debug,\n  Format,\n  AnyOutputSettings,\n  Output,\n  Parser,\n  Diagnostic,\n  Unicode,\n} from \"@swim/codec\";\nimport type {R2Function} from \"./R2Function\";\nimport type {AnyR2Shape} from \"./R2Shape\";\nimport {R2Point} from \"./R2Point\";\nimport {R2Curve} from \"./R2Curve\";\nimport type {R2SplineContext} from \"./R2SplineContext\";\nimport {R2SplineBuilder} from \"../\"; // forward import\nimport {R2SplineParser} from \"../\"; // forward import\nimport {R2Box} from \"../\"; // forward import\n\nexport class R2Spline extends R2Curve implements Debug {\n  constructor(curves: ReadonlyArray<R2Curve>, closed: boolean) {\n    super();\n    Object.defineProperty(this, \"curves\", {\n      value: curves,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"closed\", {\n      value: closed,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"boundingBox\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"pathString\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly curves!: ReadonlyArray<R2Curve>;\n\n  /** @hidden */\n  readonly closed!: boolean;\n\n  isDefined(): boolean {\n    return this.curves.length !== 0;\n  }\n\n  isClosed(): boolean {\n    return this.closed;\n  }\n\n  override get xMin(): number {\n    return this.bounds.xMin;\n  }\n\n  override get yMin(): number {\n    return this.bounds.yMin;\n  }\n\n  override get xMax(): number {\n    return this.bounds.xMax;\n  }\n\n  override get yMax(): number {\n    return this.bounds.yMax;\n  }\n\n  override interpolateX(u: number): number {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return curves[k]!.interpolateX(v);\n    } else {\n      return NaN;\n    }\n  }\n\n  override interpolateY(u: number): number {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return curves[k]!.interpolateY(v);\n    } else {\n      return NaN;\n    }\n  }\n\n  override interpolate(u: number): R2Point {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return curves[k]!.interpolate(v);\n    } else {\n      return new R2Point(NaN, NaN);\n    }\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    return false; // TODO\n  }\n\n  override split(u: number): [R2Spline, R2Spline] {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      const [c0, c1] = curves[k]!.split(v);\n      const curves0 = new Array<R2Curve>(k + 1);\n      const curves1 = new Array<R2Curve>(n - k);\n      for (let i = 0; i < k; i += 1) {\n        curves0[i] = curves[i]!;\n      }\n      curves0[k] = c0;\n      curves1[0] = c1;\n      for (let i = k + 1; i < n; i += 1) {\n        curves1[i - k] = curves[i]!;\n      }\n      return [new R2Spline(curves0, false), new R2Spline(curves1, false)];\n    } else {\n      return [R2Spline.empty(), R2Spline.empty()];\n    }\n  }\n\n  subdivide(u: number): R2Spline {\n    const oldCurves = this.curves;\n    const n = oldCurves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      const [c0, c1] = oldCurves[k]!.split(v);\n      const newCurves = new Array<R2Curve>(n + 1);\n      for (let i = 0; i < k; i += 1) {\n        newCurves[i] = oldCurves[i]!;\n      }\n      newCurves[k] = c0;\n      newCurves[k + 1] = c1;\n      for (let i = k + 1; i < n; i += 1) {\n        newCurves[i + 1] = oldCurves[i]!;\n      }\n      return new R2Spline(newCurves, this.closed);\n    } else {\n      return R2Spline.empty();\n    }\n  }\n\n  override transform(f: R2Function): R2Spline {\n    const oldCurves = this.curves;\n    const n = oldCurves.length;\n    if (n > 0) {\n      const newCurves = new Array<R2Curve>(n);\n      for (let i = 0; i < n; i += 1) {\n        newCurves[i] = oldCurves[i]!.transform(f);\n      }\n      return new R2Spline(newCurves, this.closed);\n    } else {\n      return R2Spline.empty();\n    }\n  }\n\n  /** @hidden */\n  readonly boundingBox!: R2Box | null;\n\n  override get bounds(): R2Box {\n    let boundingBox = this.boundingBox;\n    if (boundingBox === null) {\n      let xMin = Infinity;\n      let yMin = Infinity;\n      let xMax = -Infinity;\n      let yMax = -Infinity;\n      const curves = this.curves;\n      for (let i = 0, n = curves.length; i < n; i += 1) {\n        const curve = curves[i]!;\n        xMin = Math.min(xMin, curve.xMin);\n        yMin = Math.min(yMin, curve.yMin);\n        xMax = Math.max(curve.xMax, xMax);\n        yMax = Math.max(curve.yMax, yMax);\n      }\n      boundingBox = new R2Box(xMin, yMin, xMax, yMax);\n      Object.defineProperty(this, \"boundingBox\", {\n        value: boundingBox,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return boundingBox;\n  }\n\n  override drawMove(context: R2SplineContext): void {\n    const curves = this.curves;\n    if (curves.length !== 0) {\n      curves[0]!.drawMove(context);\n    }\n  }\n\n  override drawRest(context: R2SplineContext): void {\n    const curves = this.curves;\n    const closed = this.closed;\n    const n = curves.length - (closed && context.closePath !== void 0 ? 1 : 0);\n    for (let i = 0; i < n; i += 1) {\n      curves[i]!.drawRest(context);\n    }\n    if (closed && context.closePath !== void 0) {\n      context.closePath();\n    }\n  }\n\n  override transformDrawMove(context: R2SplineContext, f: R2Function): void {\n    const curves = this.curves;\n    if (curves.length !== 0) {\n      curves[0]!.transformDrawMove(context, f);\n    }\n  }\n\n  override transformDrawRest(context: R2SplineContext, f: R2Function): void {\n    const curves = this.curves;\n    const closed = this.closed;\n    const n = curves.length - (closed && context.closePath !== void 0 ? 1 : 0);\n    for (let i = 0; i < n; i += 1) {\n      curves[i]!.transformDrawRest(context, f);\n    }\n    if (closed && context.closePath !== void 0) {\n      context.closePath();\n    }\n  }\n\n  override writeMove(output: Output): void {\n    const curves = this.curves;\n    if (curves.length !== 0) {\n      curves[0]!.writeMove(output);\n    }\n  }\n\n  override writeRest(output: Output): void {\n    const curves = this.curves;\n    const closed = this.closed;\n    const n = curves.length - (closed ? 1 : 0);\n    for (let i = 0; i < n; i += 1) {\n      curves[i]!.writeRest(output);\n    }\n    if (closed) {\n      output.write(90/*'Z'*/);\n    }\n  }\n\n  /** @hidden */\n  readonly pathString!: string | undefined;\n\n  override toPathString(outputSettings?: AnyOutputSettings): string {\n    let pathString: string | undefined;\n    if (outputSettings !== void 0 || (pathString = this.pathString, pathString === void 0)) {\n      const output = Unicode.stringOutput(outputSettings);\n      this.writePath(output);\n      pathString = output.bind();\n      if (outputSettings === void 0) {\n        Object.defineProperty(this, \"pathString\", {\n          value: pathString,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    }\n    return pathString;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Spline) {\n      return Arrays.equivalent(this.curves, that.curves, epsilon)\n          && this.closed === that.closed;\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Spline) {\n      return Arrays.equal(this.curves, that.curves)\n          && this.closed === that.closed;\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    const curves = this.curves;\n    const n = curves.length;\n    output = output.write(\"R2Spline\").write(46/*'.'*/);\n    if (n === 0) {\n      output = output.write(\"empty\").write(40/*'('*/);\n    } else if (n !== 0) {\n      output = output.write(this.closed ? \"closed\" : \"open\").write(40/*'('*/);\n      output = output.debug(curves[0]!);\n      for (let i = 1; i < n; i += 1) {\n        output = output.write(\", \").debug(curves[i]!);\n      }\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static empty(): R2Spline {\n    return new R2Spline([], false);\n  }\n\n  static open(...curves: R2Curve[]): R2Spline {\n    return new R2Spline(curves, false);\n  }\n\n  static closed(...curves: R2Curve[]): R2Spline {\n    return new R2Spline(curves, true);\n  }\n\n  static builder(): R2SplineBuilder {\n    return new R2SplineBuilder();\n  }\n\n  static override parse(string: string): R2Spline {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = R2SplineParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Curve} from \"./R2Curve\";\nimport {R2Segment} from \"./R2Segment\";\nimport {R2QuadraticCurve} from \"./R2QuadraticCurve\";\nimport {R2CubicCurve} from \"./R2CubicCurve\";\nimport {R2EllipticCurve} from \"./R2EllipticCurve\";\nimport type {R2SplineContext} from \"./R2SplineContext\";\nimport {R2Spline} from \"./R2Spline\";\n\nexport class R2SplineBuilder implements R2SplineContext {\n  /** @hidden */\n  curves: R2Curve[];\n  /** @hidden */\n  closed: boolean;\n  /** @hidden */\n  aliased: boolean;\n  /** @hidden */\n  x0: number;\n  /** @hidden */\n  y0: number;\n  /** @hidden */\n  x: number;\n  /** @hidden */\n  y: number;\n\n  constructor() {\n    this.curves = [];\n    this.closed = false;\n    this.aliased = false;\n    this.x0 = 0;\n    this.y0 = 0;\n    this.x = 0;\n    this.y = 0;\n  }\n\n  private dealias(): void {\n    if (this.aliased) {\n      this.curves = this.curves.slice(0);\n      this.aliased = false;\n    }\n  }\n\n  moveTo(x: number, y: number): void {\n    if (this.aliased) {\n      this.curves = [];\n      this.aliased = false;\n    } else {\n      this.curves.length = 0;\n    }\n    this.closed = false;\n    this.x0 = x;\n    this.y0 = y;\n    this.x = x;\n    this.y = y;\n  }\n\n  closePath(): void {\n    this.dealias();\n    this.curves.push(new R2Segment(this.x, this.y, this.x0, this.y0));\n    this.closed = true;\n    this.x = this.x0;\n    this.y = this.y0;\n  }\n\n  lineTo(x: number, y: number): void {\n    this.dealias();\n    this.curves.push(new R2Segment(this.x, this.y, x, y));\n    this.x = x;\n    this.y = y;\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): void {\n    this.dealias();\n    this.curves.push(new R2QuadraticCurve(this.x, this.y, x1, y1, x, y));\n    this.x = x;\n    this.y = y;\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n    this.dealias();\n    this.curves.push(new R2CubicCurve(this.x, this.y, x1, y1, x2, y2, x, y));\n    this.x = x;\n    this.y = y;\n  }\n\n  arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\n    this.dealias();\n    const x0 = this.x;\n    const y0 = this.y;\n    const dx01 = x1 - x0;\n    const dy01 = y1 - y0;\n    const dx12 = x2 - x1;\n    const dy12 = y2 - y1;\n    const a0 = Math.atan2(dy01, dx01) - Math.PI / 2;\n    const a1 = Math.atan2(dy12, dx12) - Math.PI / 2;\n    const da = a1 - a0;\n    const r0x = Math.cos(a0);\n    const r0y = Math.sin(a0);\n    const r1x = Math.cos(a1);\n    const r1y = Math.sin(a1);\n    const r0x0 = x0 - r0x;\n    const r0y0 = y0 - r0y;\n    const r0x1 = x1 - r0x;\n    const r0y1 = y1 - r0y;\n    const r1x1 = x1 - r1x;\n    const r1y1 = y1 - r1y;\n    const r1x2 = x2 - r1x;\n    const r1y2 = y2 - r1y;\n    const u = R2SplineBuilder.intersection(r0x0, r0y0, r0x1 - r0x0, r0y1 - r0y0,\n                                           r1x1, r1y1, r1x2 - r1x1, r1y2 - r1y1);\n    const cx = r0x0 + u * (r0x1 - r0x0);\n    const cy = r0y0 + u * (r0y1 - r0y0);\n    this.curves.push(new R2EllipticCurve(cx, cy, r, r, 0, a0, da));\n    this.x = x2;\n    this.y = y2;\n  }\n\n  private static intersection(px: number, py: number, rx: number, ry: number,\n                              qx: number, qy: number, sx: number, sy: number): number {\n    const pqx = qx - px;\n    const pqy = qy - py;\n    const pqr = pqx * ry - pqy * rx;\n    const rs = rx * sy - ry * sx;\n    if (pqr === 0 && rs === 0) { // collinear\n      const rr = rx * rx + ry * ry;\n      const sr = sx * rx + sy * ry;\n      const t0 = (pqx * rx + pqy * ry) / rr;\n      const t1 = t0 + sr / rr;\n      if (sr >= 0 ? 0 < t1 && t0 < 1 : 0 < t0 && t1 < 1) {\n        return t0;\n      } else {\n        return NaN;\n      }\n    } else if (rs === 0) { // parallel\n      return NaN;\n    } else {\n      const pqs = pqx * sy - pqy * sx;\n      const t = pqs / rs; // (q − p) × s / (r × s)\n      const u = pqr / rs; // (q − p) × r / (r × s)\n      if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n        return t;\n      } else {\n        return NaN;\n      }\n    }\n  }\n\n  arc(cx: number, cy: number, r: number, a0: number, a1: number, ccw: boolean = false): void {\n    this.dealias();\n    let da = a1 - a0;\n    if (ccw === true && da > 0) {\n      da -= 2 * Math.PI;\n    } else if (ccw === false && da < 0) {\n      da += 2 * Math.PI;\n    }\n    const curve = new R2EllipticCurve(cx, cy, r, r, 0, a0, da);\n    this.curves.push(curve);\n    const {x, y} = curve.interpolate(1);\n    this.x = x;\n    this.y = y;\n  }\n\n  ellipse(cx: number, cy: number, rx: number, ry: number, phi: number, a0: number, a1: number, ccw?: boolean): void {\n    this.dealias();\n    let da = a1 - a0;\n    if (ccw === true && da > 0) {\n      da -= 2 * Math.PI;\n    } else if (ccw === false && da < 0) {\n      da += 2 * Math.PI;\n    }\n    const curve = new R2EllipticCurve(cx, cy, rx, ry, phi, a0, da);\n    this.curves.push(curve);\n    const {x, y} = curve.interpolate(1);\n    this.x = x;\n    this.y = y;\n  }\n\n  rect(x: number, y: number, w: number, h: number): void {\n    this.dealias();\n    this.curves.push(new R2Segment(x, y, x + w, y),\n                     new R2Segment(x + w, y, x + w, y + h),\n                     new R2Segment(x + w, y + h, x, y + h),\n                     new R2Segment(x, y + h, x, y));\n    this.x = x;\n    this.y = y;\n  }\n\n  bind(): R2Spline {\n    this.aliased = true;\n    return new R2Spline(this.curves, this.closed);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport type {R2Curve} from \"./R2Curve\";\nimport {R2Segment} from \"./R2Segment\";\nimport {R2SegmentParser} from \"./R2SegmentParser\";\nimport {R2QuadraticCurve} from \"./R2QuadraticCurve\";\nimport {R2QuadraticCurveParser} from \"./R2QuadraticCurveParser\";\nimport {R2CubicCurve} from \"./R2CubicCurve\";\nimport {R2CubicCurveParser} from \"./R2CubicCurveParser\";\nimport {R2EllipticCurveParser} from \"./R2EllipticCurveParser\";\nimport {R2Spline} from \"./R2Spline\";\n\n/** @hidden */\nexport class R2SplineParser extends Parser<R2Spline> {\n  private readonly x0Parser: Parser<number> | undefined;\n  private readonly y0Parser: Parser<number> | undefined;\n  private readonly xParser: Parser<number> | undefined;\n  private readonly yParser: Parser<number> | undefined;\n  private readonly curveParser: Parser<R2Curve> | undefined;\n  private readonly curves: R2Curve[] | undefined;\n  private readonly command: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n              xParser?: Parser<number>, yParser?: Parser<number>,\n              curveParser?: Parser<R2Curve>, curves?: R2Curve[],\n              command?: number, step?: number) {\n    super();\n    this.x0Parser = x0Parser;\n    this.y0Parser = y0Parser;\n    this.xParser = xParser;\n    this.yParser = yParser;\n    this.curveParser = curveParser;\n    this.curves = curves;\n    this.command = command;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<R2Spline> {\n    return R2SplineParser.parse(input, this.x0Parser, this.y0Parser,\n                                this.xParser, this.yParser,\n                                this.curveParser, this.curves,\n                                this.command, this.step);\n  }\n\n  static parse(input: Input, x0Parser?: Parser<number>, y0Parser?: Parser<number>,\n               xParser?: Parser<number>, yParser?: Parser<number>,\n               curveParser?: Parser<R2Curve>, curves?: R2Curve[],\n               command?: number, step: number = 1): Parser<R2Spline> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 77/*'M'*/ || c === 109/*'m'*/) {\n          input = input.step();\n          command = c;\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.expected(\"moveto\", input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (x0Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          x0Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        x0Parser = x0Parser.feed(input);\n      }\n      if (x0Parser !== void 0) {\n        if (x0Parser.isDone()) {\n          xParser = x0Parser;\n          step = 3;\n        } else if (x0Parser.isError()) {\n          return x0Parser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 4;\n      } else if (!input.isEmpty()) {\n        step = 4;\n      }\n    }\n    if (step === 4) {\n      if (y0Parser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          y0Parser = Base10.parseDecimal(input);\n        }\n      } else {\n        y0Parser = y0Parser.feed(input);\n      }\n      if (y0Parser !== void 0) {\n        if (y0Parser.isDone()) {\n          yParser = y0Parser;\n          step = 5;\n        } else if (y0Parser.isError()) {\n          return y0Parser.asError();\n        }\n      }\n    }\n    do {\n      if (step === 5) {\n        if (curveParser === void 0) {\n          while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n            input = input.step();\n          }\n          if (input.isCont()) {\n            const prevCurve = curves !== void 0 && curves.length !== 0 ? curves[curves.length - 1] : null;\n            switch (c) {\n              case 76/*'L'*/:\n              case 108/*'l'*/:\n              case 72/*'H'*/:\n              case 104/*'h'*/:\n              case 86/*'V'*/:\n              case 118/*'v'*/:\n                curveParser = R2SegmentParser.parse(input, xParser, yParser);\n                command = c;\n                break;\n              case 81/*'Q'*/:\n              case 113/*'q'*/:\n                curveParser = R2QuadraticCurveParser.parse(input, xParser, yParser);\n                command = c;\n                break;\n              case 84/*'T'*/:\n                if (prevCurve instanceof R2QuadraticCurve) {\n                  const dx = prevCurve.x2 - prevCurve.x1;\n                  const dy = prevCurve.y2 - prevCurve.y1;\n                  const x1 = xParser!.bind() + dx;\n                  const y1 = yParser!.bind() + dy;\n                  curveParser = R2QuadraticCurveParser.parse(input, xParser, yParser,\n                                                             Parser.done(x1), Parser.done(y1));\n                } else {\n                  curveParser = R2QuadraticCurveParser.parse(input, xParser, yParser,\n                                                             xParser, yParser);\n                }\n                command = c;\n                break;\n              case 116/*'t'*/:\n                if (prevCurve instanceof R2QuadraticCurve) {\n                  const dx = prevCurve.x2 - prevCurve.x1;\n                  const dy = prevCurve.y2 - prevCurve.y1;\n                  curveParser = R2QuadraticCurveParser.parse(input, xParser, yParser,\n                                                             Parser.done(dx), Parser.done(dy));\n                } else {\n                  curveParser = R2QuadraticCurveParser.parse(input, xParser, yParser,\n                                                             Parser.done(0), Parser.done(0));\n                }\n                command = c;\n                break;\n              case 67/*'C'*/:\n              case 99/*'c'*/:\n                curveParser = R2CubicCurveParser.parse(input, xParser, yParser);\n                command = c;\n                break;\n              case 83/*'S'*/:\n                if (prevCurve instanceof R2CubicCurve) {\n                  const dx = prevCurve.x3 - prevCurve.x2;\n                  const dy = prevCurve.y3 - prevCurve.y2;\n                  const x1 = xParser!.bind() + dx;\n                  const y1 = yParser!.bind() + dy;\n                  curveParser = R2CubicCurveParser.parse(input, xParser, yParser,\n                                                         Parser.done(x1), Parser.done(y1));\n                } else {\n                  curveParser = R2CubicCurveParser.parse(input, xParser, yParser,\n                                                         xParser, yParser);\n                }\n                command = c;\n                break;\n              case 115/*'s'*/:\n                if (prevCurve instanceof R2CubicCurve) {\n                  const dx = prevCurve.x3 - prevCurve.x2;\n                  const dy = prevCurve.y3 - prevCurve.y2;\n                  curveParser = R2CubicCurveParser.parse(input, xParser, yParser,\n                                                         Parser.done(dx), Parser.done(dy));\n                } else {\n                  curveParser = R2CubicCurveParser.parse(input, xParser, yParser,\n                                                         Parser.done(0), Parser.done(0));\n                }\n                command = c;\n                break;\n              case 65/*'A'*/:\n              case 97/*'a'*/:\n                curveParser = R2EllipticCurveParser.parse(input, xParser, yParser);\n                command = c;\n                break;\n              case 90/*'Z'*/:\n              case 122/*'z'*/:\n                input = input.step();\n                if (curves === void 0) {\n                  curves = [];\n                }\n                curves.push(new R2Segment(xParser!.bind(), yParser!.bind(),\n                                          x0Parser!.bind(), y0Parser!.bind()));\n                return Parser.done(new R2Spline(curves, true));\n              case 44/*','*/:\n                input = input.step();\n              case 43/*'+'*/:\n              case 45/*'-'*/:\n              case 46/*'.'*/:\n              case 48/*'0'*/:\n              case 49/*'1'*/:\n              case 50/*'2'*/:\n              case 51/*'3'*/:\n              case 52/*'4'*/:\n              case 53/*'5'*/:\n              case 54/*'6'*/:\n              case 55/*'7'*/:\n              case 56/*'8'*/:\n              case 57/*'9'*/:\n                switch (command) {\n                  case 77/*'M'*/:\n                  case 109/*'m'*/:\n                  case 76/*'L'*/:\n                  case 108/*'l'*/:\n                  case 72/*'H'*/:\n                  case 104/*'h'*/:\n                  case 86/*'V'*/:\n                  case 118/*'v'*/:\n                    curveParser = R2SegmentParser.parseRest(input, command, xParser, yParser);\n                    break;\n                  case 81/*'Q'*/:\n                  case 113/*'q'*/:\n                    curveParser = R2QuadraticCurveParser.parseRest(input, command, xParser, yParser);\n                    break;\n                  case 84/*'T'*/:\n                    if (prevCurve instanceof R2QuadraticCurve) {\n                      const dx = prevCurve.x2 - prevCurve.x1;\n                      const dy = prevCurve.y2 - prevCurve.y1;\n                      const x1 = xParser!.bind() + dx;\n                      const y1 = yParser!.bind() + dy;\n                      curveParser = R2QuadraticCurveParser.parseRest(input, command, xParser, yParser,\n                                                                     Parser.done(x1), Parser.done(y1));\n                    } else {\n                      curveParser = R2QuadraticCurveParser.parseRest(input, command, xParser, yParser,\n                                                                     xParser, yParser);\n                    }\n                    break;\n                  case 116/*'t'*/:\n                    if (prevCurve instanceof R2QuadraticCurve) {\n                      const dx = prevCurve.x2 - prevCurve.x1;\n                      const dy = prevCurve.y2 - prevCurve.y1;\n                      curveParser = R2QuadraticCurveParser.parseRest(input, command, xParser, yParser,\n                                                                     Parser.done(dx), Parser.done(dy));\n                    } else {\n                      curveParser = R2QuadraticCurveParser.parseRest(input, command, xParser, yParser,\n                                                                     Parser.done(0), Parser.done(0));\n                    }\n                    break;\n                  case 67/*'C'*/:\n                  case 99/*'c'*/:\n                    curveParser = R2CubicCurveParser.parseRest(input, command, xParser, yParser);\n                    break;\n                  case 83/*'S'*/:\n                    if (prevCurve instanceof R2CubicCurve) {\n                      const dx = prevCurve.x3 - prevCurve.x2;\n                      const dy = prevCurve.y3 - prevCurve.y2;\n                      const x1 = xParser!.bind() + dx;\n                      const y1 = yParser!.bind() + dy;\n                      curveParser = R2CubicCurveParser.parseRest(input, command, xParser, yParser,\n                                                                 Parser.done(x1), Parser.done(y1));\n                    } else {\n                      curveParser = R2CubicCurveParser.parseRest(input, command, xParser, yParser,\n                                                                 xParser, yParser);\n                    }\n                    break;\n                  case 115/*'s'*/:\n                    if (prevCurve instanceof R2CubicCurve) {\n                      const dx = prevCurve.x3 - prevCurve.x2;\n                      const dy = prevCurve.y3 - prevCurve.y2;\n                      curveParser = R2CubicCurveParser.parseRest(input, command, xParser, yParser,\n                                                                 Parser.done(dx), Parser.done(dy));\n                    } else {\n                      curveParser = R2CubicCurveParser.parseRest(input, command, xParser, yParser,\n                                                                 Parser.done(0), Parser.done(0));\n                    }\n                    break;\n                  case 65/*'A'*/:\n                  case 97/*'a'*/:\n                    curveParser = R2EllipticCurveParser.parseRest(input, command, xParser, yParser);\n                    break;\n                  default:\n                    if (curves !== void 0) {\n                      return Parser.done(new R2Spline(curves, false));\n                    } else {\n                      return Parser.done(R2Spline.empty());\n                    }\n                }\n                break;\n              default:\n                if (curves !== void 0) {\n                  return Parser.done(new R2Spline(curves, false));\n                } else {\n                  return Parser.done(R2Spline.empty());\n                }\n            }\n          } else if (!input.isEmpty()) {\n            if (curves !== void 0) {\n              return Parser.done(new R2Spline(curves, false));\n            } else {\n              return Parser.done(R2Spline.empty());\n            }\n          }\n        } else {\n          curveParser = curveParser.feed(input);\n        }\n        if (curveParser !== void 0) {\n          if (curveParser.isDone()) {\n            const curve = curveParser.bind();\n            curveParser = void 0;\n            if (curves === void 0) {\n              curves = [];\n            }\n            curves.push(curve);\n            xParser = Parser.done(curve.interpolateX(1));\n            yParser = Parser.done(curve.interpolateY(1));\n            continue;\n          } else if (curveParser.isError()) {\n            return curveParser.asError();\n          }\n        }\n      }\n      break;\n    } while (true);\n    return new R2SplineParser(x0Parser, y0Parser, xParser, yParser,\n                              curveParser, curves, command, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, Equals, Arrays} from \"@swim/util\";\nimport {\n  Debug,\n  Format,\n  AnyOutputSettings,\n  OutputSettings,\n  Output,\n  Parser,\n  Diagnostic,\n  Unicode,\n} from \"@swim/codec\";\nimport type {R2Function} from \"./R2Function\";\nimport {AnyR2Shape, R2Shape} from \"./R2Shape\";\nimport {R2Point} from \"./R2Point\";\nimport type {R2Curve} from \"./R2Curve\";\nimport {R2Spline} from \"./R2Spline\";\nimport type {R2PathContext} from \"./R2PathContext\";\nimport {R2PathBuilder} from \"../\"; // forward import\nimport {R2PathParser} from \"../\"; // forward import\nimport {R2Box} from \"../\"; // forward import\n\nexport type AnyR2Path = R2Path | string;\n\nexport class R2Path extends R2Shape implements Equals, Equivalent, Debug {\n  constructor(splines: ReadonlyArray<R2Spline>) {\n    super();\n    Object.defineProperty(this, \"splines\", {\n      value: splines,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"boundingBox\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"pathString\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly splines!: ReadonlyArray<R2Spline>;\n\n  isDefined(): boolean {\n    return this.splines.length !== 0;\n  }\n\n  override get xMin(): number {\n    return this.bounds.xMin;\n  }\n\n  override get yMin(): number {\n    return this.bounds.yMin;\n  }\n\n  override get xMax(): number {\n    return this.bounds.xMax;\n  }\n\n  override get yMax(): number {\n    return this.bounds.yMax;\n  }\n\n  interpolateX(u: number): number {\n    const splines = this.splines;\n    const n = splines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return splines[k]!.interpolateX(v);\n    } else {\n      return NaN;\n    }\n  }\n\n  interpolateY(u: number): number {\n    const splines = this.splines;\n    const n = splines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return splines[k]!.interpolateY(v);\n    } else {\n      return NaN;\n    }\n  }\n\n  interpolate(u: number): R2Point {\n    const splines = this.splines;\n    const n = splines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return splines[k]!.interpolate(v);\n    } else {\n      return new R2Point(NaN, NaN);\n    }\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    return false; // TODO\n  }\n\n  split(u: number): [R2Path, R2Path] {\n    const splines = this.splines;\n    const n = splines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      const [s0, s1] = splines[k]!.split(v);\n      const splines0 = new Array<R2Spline>(k + 1);\n      const splines1 = new Array<R2Spline>(n - k);\n      for (let i = 0; i < k; i += 1) {\n        splines0[i] = splines[i]!;\n      }\n      splines0[k] = s0;\n      splines1[0] = s1;\n      for (let i = k + 1; i < n; i += 1) {\n        splines1[i - k] = splines[i]!;\n      }\n      return [new R2Path(splines0), new R2Path(splines1)];\n    } else {\n      return [R2Path.empty(), R2Path.empty()];\n    }\n  }\n\n  subdivide(u: number): R2Path {\n    const oldSplines = this.splines;\n    const n = oldSplines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      const newSplines = new Array<R2Spline>(n);\n      for (let i = 0; i < k; i += 1) {\n        newSplines[i] = oldSplines[i]!;\n      }\n      newSplines[k] = oldSplines[k]!.subdivide(v);\n      for (let i = k + 1; i < n; i += 1) {\n        newSplines[i] = oldSplines[i]!;\n      }\n      return new R2Path(newSplines);\n    } else {\n      return R2Path.empty();\n    }\n  }\n\n  override transform(f: R2Function): R2Path {\n    const oldSplines = this.splines;\n    const n = oldSplines.length;\n    if (n > 0) {\n      const newSplines = new Array<R2Spline>(n);\n      for (let i = 0; i < n; i += 1) {\n        newSplines[i] = oldSplines[i]!.transform(f);\n      }\n      return new R2Path(newSplines);\n    } else {\n      return R2Path.empty();\n    }\n  }\n\n  /** @hidden */\n  readonly boundingBox!: R2Box | null;\n\n  override get bounds(): R2Box {\n    let boundingBox = this.boundingBox;\n    if (boundingBox === null) {\n      let xMin = Infinity;\n      let yMin = Infinity;\n      let xMax = -Infinity;\n      let yMax = -Infinity;\n      const splines = this.splines;\n      for (let i = 0, n = splines.length; i < n; i += 1) {\n        const spline = splines[i]!;\n        xMin = Math.min(xMin, spline.xMin);\n        yMin = Math.min(yMin, spline.yMin);\n        xMax = Math.max(spline.xMax, xMax);\n        yMax = Math.max(spline.yMax, yMax);\n      }\n      boundingBox = new R2Box(xMin, yMin, xMax, yMax);\n      Object.defineProperty(this, \"boundingBox\", {\n        value: boundingBox,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return boundingBox;\n  }\n\n  draw(context: R2PathContext): void {\n    const splines = this.splines;\n    for (let i = 0, n = splines.length; i < n; i += 1) {\n      splines[i]!.draw(context);\n    }\n  }\n\n  transformDraw(context: R2PathContext, f: R2Function): void {\n    const splines = this.splines;\n    for (let i = 0, n = splines.length; i < n; i += 1) {\n      splines[i]!.transformDraw(context, f);\n    }\n  }\n\n  writePath(output: Output): void {\n    const splines = this.splines;\n    const n = splines.length;\n    if (output.settings === OutputSettings.standard()) {\n      for (let i = 0; i < n; i += 1) {\n        output.write(splines[i]!.toPathString()); // write memoized subpath strings\n      }\n    } else {\n      for (let i = 0; i < n; i += 1) {\n        splines[i]!.writePath(output);\n      }\n    }\n  }\n\n  /** @hidden */\n  readonly pathString!: string | undefined;\n\n  toPathString(outputSettings?: AnyOutputSettings): string {\n    let pathString: string | undefined;\n    if (outputSettings !== void 0 || (pathString = this.pathString, pathString === void 0)) {\n      const output = Unicode.stringOutput(outputSettings);\n      this.writePath(output);\n      pathString = output.bind();\n      if (outputSettings === void 0) {\n        Object.defineProperty(this, \"pathString\", {\n          value: pathString,\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    }\n    return pathString;\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Path) {\n      return Arrays.equivalent(this.splines, that.splines, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Path) {\n      return Arrays.equal(this.splines, that.splines);\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    const splines = this.splines;\n    const n = splines.length;\n    output = output.write(\"R2Path\").write(46/*'.'*/);\n    if (n === 0) {\n      output = output.write(\"empty\").write(40/*'('*/);\n    } else if (n === 1) {\n      const spline = splines[0]!;\n      output = output.write(spline.closed ? \"closed\" : \"open\").write(40/*'('*/);\n      const curves = spline.curves;\n      const m = curves.length;\n      if (m !== 0) {\n        output = output.debug(curves[0]!);\n        for (let i = 1; i < m; i += 1) {\n          output = output.write(\", \").debug(curves[i]!);\n        }\n      }\n    } else {\n      output = output.write(\"of\").write(40/*'('*/);\n      output = output.debug(splines[0]!);\n      for (let i = 1; i < n; i += 1) {\n        output = output.write(\", \").debug(splines[i]!);\n      }\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  toAttributeString(): string {\n    return this.toPathString();\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static empty(): R2Path {\n    return new R2Path([]);\n  }\n\n  static of(...splines: R2Spline[]): R2Path {\n    return new R2Path(splines);\n  }\n\n  static open(...curves: R2Curve[]): R2Path {\n    return new R2Path([new R2Spline(curves, false)]);\n  }\n\n  static closed(...curves: R2Curve[]): R2Path {\n    return new R2Path([new R2Spline(curves, true)]);\n  }\n\n  static override fromAny(value: AnyR2Path | AnyR2Shape): R2Path {\n    if (value === void 0 || value === null || value instanceof R2Path) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return R2Path.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static builder(): R2PathBuilder {\n    return new R2PathBuilder();\n  }\n\n  static parse(string: string): R2Path {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = R2PathParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Spline} from \"./R2Spline\";\nimport {R2SplineBuilder} from \"./R2SplineBuilder\";\nimport type {R2PathContext} from \"./R2PathContext\";\nimport {R2Path} from \"./R2Path\";\n\nexport class R2PathBuilder implements R2PathContext {\n  /** @hidden */\n  splines: R2Spline[];\n  /** @hidden */\n  builder: R2SplineBuilder | null;\n\n  constructor() {\n    this.splines = [];\n    this.builder = null;\n  }\n\n  moveTo(x: number, y: number): void {\n    let builder = this.builder;\n    if (builder !== null) {\n      const spline = builder.bind();\n      if (spline.isDefined()) {\n        this.splines.push(spline);\n      }\n    }\n    builder = new R2SplineBuilder();\n    this.builder = builder;\n    builder.moveTo(x, y);\n  }\n\n  closePath(): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.closePath();\n    } else {\n      throw new Error();\n    }\n  }\n\n  lineTo(x: number, y: number): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.lineTo(x, y);\n    } else {\n      throw new Error();\n    }\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.quadraticCurveTo(x1, y1, x, y);\n    } else {\n      throw new Error();\n    }\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.bezierCurveTo(x1, y1, x2, y2, x, y);\n    } else {\n      throw new Error();\n    }\n  }\n\n  arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.arcTo(x1, y1, x2, y2, r);\n    } else {\n      throw new Error();\n    }\n  }\n\n  arc(cx: number, cy: number, r: number, a0: number, a1: number, ccw?: boolean): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.arc(cx, cy, r, a0, a1, ccw);\n    } else {\n      throw new Error();\n    }\n  }\n\n  ellipse(cx: number, cy: number, rx: number, ry: number, phi: number, a0: number, a1: number, ccw?: boolean): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.ellipse(cx, cy, rx, ry, phi, a0, a1, ccw);\n    } else {\n      throw new Error();\n    }\n  }\n\n  rect(x: number, y: number, w: number, h: number): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.rect(x, y, w, h);\n    } else {\n      throw new Error();\n    }\n  }\n\n  bind(): R2Path {\n    const splines = this.splines.slice(0);\n    const builder = this.builder;\n    if (builder !== null) {\n      const spline = builder.bind();\n      if (spline.isDefined()) {\n        splines.push(spline);\n      }\n    }\n    return new R2Path(splines);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {R2Spline} from \"./R2Spline\";\nimport {R2SplineParser} from \"./R2SplineParser\";\nimport {R2Path} from \"./R2Path\";\n\n/** @hidden */\nexport class R2PathParser extends Parser<R2Path> {\n  private readonly splineParser: Parser<R2Spline> | undefined;\n  private readonly splines: R2Spline[] | undefined;\n  private readonly step: number | undefined;\n\n  constructor(splineParser?: Parser<R2Spline>, splines?: R2Spline[], step?: number) {\n    super();\n    this.splineParser = splineParser;\n    this.splines = splines;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<R2Path> {\n    return R2PathParser.parse(input, this.splineParser, this.splines, this.step);\n  }\n\n  static parse(input: Input, splineParser?: Parser<R2Spline>,\n               splines?: R2Spline[], step: number = 1): Parser<R2Path> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        if (splineParser === void 0) {\n          while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n            input = input.step();\n          }\n          if (input.isCont()) {\n            switch (c) {\n              case 77/*'M'*/:\n              case 109/*'m'*/:\n                splineParser = R2SplineParser.parse(input);\n                break;\n              case 110/*'n'*/:\n                step = 2;\n                break;\n              default:\n                if (splines !== void 0) {\n                  return Parser.done(new R2Path(splines));\n                } else {\n                  return Parser.done(R2Path.empty());\n                }\n            }\n          } else if (!input.isEmpty()) {\n            if (splines !== void 0) {\n              return Parser.done(new R2Path(splines));\n            } else {\n              return Parser.done(R2Path.empty());\n            }\n          }\n        } else {\n          splineParser = splineParser.feed(input);\n        }\n        if (splineParser !== void 0) {\n          if (splineParser.isDone()) {\n            const spline = splineParser.bind();\n            splineParser = void 0;\n            if (spline.isDefined()) {\n              if (splines === void 0) {\n                splines = [];\n              }\n              splines.push(spline);\n            }\n            continue;\n          } else if (splineParser.isError()) {\n            return splineParser.asError();\n          }\n        }\n      }\n      break;\n    } while (true);\n    if (step >= 2 && step <= 5) {\n      do {\n        if (input.isCont()) {\n          if (input.head() === \"none\".charCodeAt(step - 2)) {\n            input = input.step();\n            if (step < 5) {\n              step += 1;\n              continue;\n            } else {\n              return Parser.done(R2Path.empty());\n            }\n          } else {\n            return Parser.error(Diagnostic.expected(\"none\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n        break;\n      } while (true);\n    }\n    return new R2PathParser(splineParser, splines, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, HashCode, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport type {R2Function} from \"./R2Function\";\nimport {AnyR2Shape, R2Shape} from \"./R2Shape\";\nimport {R2Point} from \"./R2Point\";\nimport {R2Segment} from \"./R2Segment\";\nimport {R2Box} from \"./R2Box\";\nimport {R2CircleInterpolator} from \"../\"; // forward import\n\nexport type AnyR2Circle = R2Circle | R2CircleInit;\n\nexport interface R2CircleInit {\n  cx: number;\n  cy: number;\n  r: number;\n}\n\nexport class R2Circle extends R2Shape implements Interpolate<R2Circle>, HashCode, Equivalent, Debug {\n  constructor(cx: number, cy: number, r: number) {\n    super();\n    Object.defineProperty(this, \"cx\", {\n      value: cx,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"cy\", {\n      value: cy,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"r\", {\n      value: r,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.cx) && isFinite(this.cy) && isFinite(this.r);\n  }\n\n  readonly cx!: number;\n\n  readonly cy!: number;\n\n  readonly r!: number;\n\n  override get xMin(): number {\n    return this.cx - this.r;\n  }\n\n  override get yMin(): number {\n    return this.cy - this.r;\n  }\n\n  override get xMax(): number {\n    return this.cx + this.r;\n  }\n\n  override get yMax(): number {\n    return this.cy + this.r;\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      const dx = that - this.cx;\n      const dy = y! - this.cy;\n      return dx * dx + dy * dy <= this.r * this.r;\n    } else {\n      that = R2Shape.fromAny(that);\n      if (that instanceof R2Point) {\n        return this.containsPoint(that);\n      } else if (that instanceof R2Segment) {\n        return this.containsSegment(that);\n      } else if (that instanceof R2Box) {\n        return this.containsBox(that);\n      } else if (that instanceof R2Circle) {\n        return this.containsCircle(that);\n      }\n      return false;\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: R2Point): boolean {\n    const dx = that.x - this.cx;\n    const dy = that.y - this.cy;\n    return dx * dx + dy * dy <= this.r * this.r;\n  }\n\n  /** @hidden */\n  containsSegment(that: R2Segment): boolean {\n    const dx0 = that.x0 - this.cx;\n    const dy0 = that.y0 - this.cy;\n    const dx1 = that.x1 - this.cx;\n    const dy1 = that.y1 - this.cy;\n    const r2 = this.r * this.r;\n    return dx0 * dx0 + dy0 * dy0 <= r2\n        && dx1 * dx1 + dy1 * dy1 <= r2;\n  }\n\n  /** @hidden */\n  containsBox(that: R2Box): boolean {\n    const dxMin = that.xMin - this.cx;\n    const dyMin = that.yMin - this.cy;\n    const dxMax = that.xMax - this.cx;\n    const dyMax = that.yMax - this.cy;\n    const r2 = this.r * this.r;\n    return dxMin * dxMin + dyMin * dyMin <= r2\n        && dxMin * dxMin + dyMax * dyMax <= r2\n        && dxMax * dxMax + dyMin * dyMin <= r2\n        && dxMax * dxMax + dyMax * dyMax <= r2;\n  }\n\n  /** @hidden */\n  containsCircle(that: R2Circle): boolean {\n    const dx = that.cx - this.cx;\n    const dy = that.cy - this.cy;\n    return dx * dx + dy * dy + that.r * that.r <= this.r * this.r;\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    that = R2Shape.fromAny(that);\n    if (that instanceof R2Point) {\n      return this.intersectsPoint(that);\n    } else if (that instanceof R2Segment) {\n      return this.intersectsSegment(that);\n    } else if (that instanceof R2Box) {\n      return this.intersectsBox(that);\n    } else if (that instanceof R2Circle) {\n      return this.intersectsCircle(that);\n    } else {\n      return (that as R2Shape).intersects(this);\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsPoint(that: R2Point): boolean {\n    const dx = that.x - this.cx;\n    const dy = that.y - this.cy;\n    return dx * dx + dy * dy <= this.r * this.r;\n  }\n\n  /** @hidden */\n  intersectsSegment(that: R2Segment): boolean {\n    const cx = this.cx;\n    const cy = this.cy;\n    const r = this.r;\n    const x0 = that.x0;\n    const y0 = that.y0;\n    const x1 = that.x1;\n    const y1 = that.y1;\n    const dx = x1 - x0;\n    const dy = y1 - y0;\n    const l = Math.sqrt(dx * dx + dy * dy);\n    const unitX = dx / l;\n    const unitY = dy / l;\n    const d = (cx - x0) * unitY - (cy - y0) * unitX;\n    if (d < -r || r < d) {\n      return false;\n    } else {\n      const dcx0 = x0 - cx;\n      const dcy0 = y0 - cy;\n      const dcx1 = x1 - cx;\n      const dcy1 = y1 - cy;\n      const r2 = r * r;\n      if (dcx0 * dcx0 + dcy0 * dcy0 <= r2 || dcx1 * dcx1 + dcy1 * dcy1 <= r2) {\n        return true;\n      } else {\n        const uc = unitX * cx + unitY * cy;\n        const u0 = unitX * x0 + unitY * y0;\n        const u1 = unitX * x1 + unitY * y1;\n        return u0 < uc && uc <= u1 || u1 < uc && uc <= u0;\n      }\n    }\n  }\n\n  /** @hidden */\n  intersectsBox(that: R2Box): boolean {\n    const dx = (this.cx < that.xMin ? that.xMin : that.xMax < this.cx ? that.xMax : this.cx) - this.cx;\n    const dy = (this.cy < that.yMin ? that.yMin : that.yMax < this.cy ? that.yMax : this.cy) - this.cy;\n    return dx * dx + dy * dy <= this.r * this.r;\n  }\n\n  /** @hidden */\n  intersectsCircle(that: R2Circle): boolean {\n    const dx = that.cx - this.cx;\n    const dy = that.cy - this.cy;\n    const rr = this.r + that.r;\n    return dx * dx + dy * dy <= rr * rr;\n  }\n\n  override transform(f: R2Function): R2Circle {\n    const cx = f.transformX(this.cx, this.cy);\n    const cy = f.transformY(this.cx, this.cy);\n    const rx = f.transformX(this.cx + this.r, this.cy);\n    const ry = f.transformY(this.cx + this.r, this.cy);\n    const dx = rx - cx;\n    const dy = ry - cy;\n    const r = Math.sqrt(dx * dx + dy * dy);\n    return new R2Circle(cx, cy, r);\n  }\n\n  toAny(): R2CircleInit {\n    return {\n      cx: this.cx,\n      cy: this.cy,\n      r: this.r,\n    };\n  }\n\n  interpolateTo(that: R2Circle): Interpolator<R2Circle>;\n  interpolateTo(that: unknown): Interpolator<R2Circle> | null;\n  interpolateTo(that: unknown): Interpolator<R2Circle> | null {\n    if (that instanceof R2Circle) {\n      return R2CircleInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Circle) {\n      return Numbers.equivalent(this.cx, that.cx, epsilon)\n          && Numbers.equivalent(this.cy, that.cy, epsilon)\n          && Numbers.equivalent(this.r, that.r, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Circle) {\n      return this.cx === that.cx && this.cy === that.cy && this.r === that.r;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Constructors.hash(R2Circle),\n        Numbers.hash(this.cx)), Numbers.hash(this.cy)), Numbers.hash(this.r)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"R2Circle\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.cx).write(\", \").debug(this.cy).write(\", \").debug(this.r).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static of(cx: number, cy: number, r: number): R2Circle {\n    return new R2Circle(cx, cy, r);\n  }\n\n  static fromInit(value: R2CircleInit): R2Circle {\n    return new R2Circle(value.cx, value.cy, value.r);\n  }\n\n  static override fromAny(value: AnyR2Circle): R2Circle {\n    if (value === void 0 || value === null || value instanceof R2Circle) {\n      return value;\n    } else if (R2Circle.isInit(value)) {\n      return R2Circle.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is R2CircleInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as R2CircleInit;\n      return typeof init.cx === \"number\"\n          && typeof init.cy === \"number\"\n          && typeof init.r === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static override isAny(value: unknown): value is AnyR2Circle {\n    return value instanceof R2Circle\n        || R2Circle.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, HashCode, Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport type {R2Function} from \"./R2Function\";\nimport {AnyR2Shape, R2Shape} from \"./R2Shape\";\nimport {R2Point} from \"./R2Point\";\nimport {R2Segment} from \"./R2Segment\";\nimport {R2BoxInterpolator} from \"../\"; // forward import\nimport {R2Circle} from \"./R2Circle\";\n\nexport type AnyR2Box = R2Box | R2BoxInit;\n\nexport interface R2BoxInit {\n  xMin: number;\n  yMin: number;\n  xMax: number;\n  yMax: number;\n}\n\nexport class R2Box extends R2Shape implements Interpolate<R2Box>, HashCode, Equivalent, Debug {\n  constructor(xMin: number, yMin: number, xMax: number, yMax: number) {\n    super();\n    Object.defineProperty(this, \"xMin\", {\n      value: xMin,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"yMin\", {\n      value: yMin,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"xMax\", {\n      value: xMax,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"yMax\", {\n      value: yMax,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.xMin) && isFinite(this.yMin)\n        && isFinite(this.xMax) && isFinite(this.yMax);\n  }\n\n  override readonly xMin!: number;\n\n  override readonly yMin!: number;\n\n  override readonly xMax!: number;\n\n  override readonly yMax!: number;\n\n  get x(): number {\n    return this.xMin;\n  }\n\n  get y(): number {\n    return this.yMin;\n  }\n\n  get width(): number {\n    return this.xMax - this.xMin;\n  }\n\n  get height(): number {\n    return this.yMax - this.yMin;\n  }\n\n  get top(): number {\n    return this.yMin;\n  }\n\n  get right(): number {\n    return this.xMax;\n  }\n\n  get bottom(): number {\n    return this.yMax;\n  }\n\n  get left(): number {\n    return this.xMin;\n  }\n\n  get center(): R2Point {\n    return new R2Point((this.xMin + this.xMax) / 2, (this.yMin + this.yMax) / 2);\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      return this.xMin <= that && that <= this.xMax\n          && this.yMin <= y! && y! <= this.yMax;\n    } else {\n      that = R2Shape.fromAny(that);\n      if (that instanceof R2Shape) {\n        if (that instanceof R2Point) {\n          return this.containsPoint(that);\n        } else if (that instanceof R2Segment) {\n          return this.containsSegment(that);\n        } else if (that instanceof R2Box) {\n          return this.containsBox(that);\n        } else if (that instanceof R2Circle) {\n          return this.containsCircle(that);\n        } else {\n          return this.xMin <= that.xMin && that.xMax <= this.xMax\n              && this.yMin <= that.yMin && that.yMax <= this.yMax;\n        }\n      }\n      return false;\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: R2Point): boolean {\n    return this.xMin <= that.x && that.x <= this.xMax\n        && this.yMin <= that.y && that.y <= this.yMax;\n  }\n\n  /** @hidden */\n  containsSegment(that: R2Segment): boolean {\n    return this.xMin <= that.x0 && that.x0 <= this.xMax\n        && this.yMin <= that.y0 && that.y0 <= this.yMax\n        && this.xMin <= that.x1 && that.x1 <= this.xMax\n        && this.yMin <= that.y1 && that.y1 <= this.yMax;\n  }\n\n  /** @hidden */\n  containsBox(that: R2Box): boolean {\n    return this.xMin <= that.xMin && that.xMax <= this.xMax\n        && this.yMin <= that.yMin && that.yMax <= this.yMax;\n  }\n\n  /** @hidden */\n  containsCircle(that: R2Circle): boolean {\n    return this.xMin <= that.cx - that.r && that.cx + that.r <= this.xMax\n        && this.yMin <= that.cy - that.r && that.cy + that.r <= this.yMax;\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    that = R2Shape.fromAny(that);\n    if (that instanceof R2Point) {\n      return this.intersectsPoint(that);\n    } else if (that instanceof R2Segment) {\n      return this.intersectsSegment(that);\n    } else if (that instanceof R2Box) {\n      return this.intersectsBox(that);\n    } else if (that instanceof R2Circle) {\n      return this.intersectsCircle(that);\n    } else {\n      return (that as R2Shape).intersects(this);\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsPoint(that: R2Point): boolean {\n    return this.xMin <= that.x && that.x <= this.xMax\n        && this.yMin <= that.y && that.y <= this.yMax;\n  }\n\n  /** @hidden */\n  intersectsSegment(that: R2Segment): boolean {\n    const xMin = this.xMin;\n    const yMin = this.yMin;\n    const xMax = this.xMax;\n    const yMax = this.yMax;\n    const x0 = that.x0;\n    const y0 = that.y0;\n    const x1 = that.x1;\n    const y1 = that.y1;\n    if (x0 < xMin && x1 < xMin || x0 > xMax && x1 > xMax ||\n        y0 < yMin && y1 < yMin || y0 > yMax && y1 > yMax) {\n      return false;\n    } else if (x0 > xMin && x0 < xMax && y0 > yMin && y0 < yMax) {\n      return true;\n    } else if ((R2Box.intersectsSegment(x0 - xMin, x1 - xMin, x0, y0, x1, y1) && R2Box.hitY > yMin && R2Box.hitY < yMax)\n            || (R2Box.intersectsSegment(y0 - yMin, y1 - yMin, x0, y0, x1, y1) && R2Box.hitX > xMin && R2Box.hitX < xMax)\n            || (R2Box.intersectsSegment(x0 - xMax, x1 - xMax, x0, y0, x1, y1) && R2Box.hitY > yMin && R2Box.hitY < yMax)\n            || (R2Box.intersectsSegment(y0 - yMax, y1 - yMax, x0, y0, x1, y1) && R2Box.hitX > xMin && R2Box.hitX < xMax)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @hidden */\n  static hitX: number = 0; // stack local hit register\n  /** @hidden */\n  static hitY: number = 0; // stack local hit register\n  static intersectsSegment(d0: number, d1: number, x0: number, y0: number, x1: number, y1: number): boolean {\n    if (d0 !== d1 || d0 * d1 < 0) {\n      const scale = -d0 / (d1 - d0);\n      R2Box.hitX = x0 + (x1 - x0) * scale;\n      R2Box.hitY = y0 + (y1 - y0) * scale;\n      return true;\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsBox(that: R2Box): boolean {\n    return this.xMin <= that.xMax && that.xMin <= this.xMax\n        && this.yMin <= that.yMax && that.yMin <= this.yMax;\n  }\n\n  /** @hidden */\n  intersectsCircle(that: R2Circle): boolean {\n    const dx = (that.cx < this.xMin ? this.xMin : this.xMax < that.cx ? this.xMax : that.cx) - that.cx;\n    const dy = (that.cy < this.yMin ? this.yMin : this.yMax < that.cy ? this.yMax : that.cy) - that.cy;\n    return dx * dx + dy * dy <= that.r * that.r;\n  }\n\n  override union(that: AnyR2Shape): R2Box {\n    return super.union(that) as R2Box;\n  }\n\n  override transform(f: R2Function): R2Box {\n    return new R2Box(f.transformX(this.xMin, this.yMin), f.transformY(this.xMin, this.yMin),\n                     f.transformX(this.xMax, this.yMax), f.transformY(this.xMax, this.yMax));\n  }\n\n  override get bounds(): R2Box {\n    return this;\n  }\n\n  toAny(): R2BoxInit {\n    return {\n      xMin: this.xMin,\n      yMin: this.yMin,\n      xMax: this.xMax,\n      yMax: this.yMax,\n    };\n  }\n\n  interpolateTo(that: R2Box): Interpolator<R2Box>;\n  interpolateTo(that: unknown): Interpolator<R2Box> | null;\n  interpolateTo(that: unknown): Interpolator<R2Box> | null {\n    if (that instanceof R2Box) {\n      return R2BoxInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Box) {\n      return Numbers.equivalent(this.xMin, that.xMin, epsilon)\n          && Numbers.equivalent(this.yMin, that.yMin, epsilon)\n          && Numbers.equivalent(this.xMax, that.xMax, epsilon)\n          && Numbers.equivalent(this.yMax, that.yMax, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Box) {\n      return this.xMin === that.xMin && this.yMin === that.yMin\n          && this.xMax === that.xMax && this.yMax === that.yMax;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Constructors.hash(R2Box), Numbers.hash(this.xMin)), Numbers.hash(this.yMin)),\n        Numbers.hash(this.xMax)), Numbers.hash(this.yMax)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"R2Box\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.xMin).write(\", \").debug(this.yMin).write(\", \")\n        .debug(this.xMax).write(\", \").debug(this.yMax).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static undefined(): R2Box {\n    return new R2Box(Infinity, Infinity, -Infinity, -Infinity);\n  }\n\n  static of(xMin: number, yMin: number, xMax?: number, yMax?: number): R2Box {\n    if (xMax === void 0) {\n      xMax = xMin;\n    }\n    if (yMax === void 0) {\n      yMax = yMin;\n    }\n    return new R2Box(xMin, yMin, xMax, yMax);\n  }\n\n  static fromInit(value: R2BoxInit): R2Box {\n    return new R2Box(value.xMin, value.yMin, value.xMax, value.yMax);\n  }\n\n  static override fromAny(value: AnyR2Box): R2Box {\n    if (value === void 0 || value === null || value instanceof R2Box) {\n      return value;\n    } else if (R2Box.isInit(value)) {\n      return R2Box.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is R2BoxInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as R2BoxInit;\n      return typeof init.xMin === \"number\"\n          && typeof init.yMin === \"number\"\n          && typeof init.xMax === \"number\"\n          && typeof init.yMax === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static override isAny(value: unknown): value is AnyR2Box {\n    return value instanceof R2Box\n        || R2Box.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {R2Box} from \"./R2Box\";\n\n/** @hidden */\nexport const R2BoxInterpolator = function (s0: R2Box, s1: R2Box): Interpolator<R2Box> {\n  const interpolator = function (u: number): R2Box {\n    const s0 = interpolator[0];\n    const s1 = interpolator[1];\n    const xMin = s0.xMin + u * (s1.xMin - s0.xMin);\n    const yMin = s0.yMin + u * (s1.yMin - s0.yMin);\n    const xMax = s0.xMax + u * (s1.xMax - s0.xMax);\n    const yMax = s0.yMax + u * (s1.yMax - s0.yMax);\n    return new R2Box(xMin, yMin, xMax, yMax);\n  } as Interpolator<R2Box>;\n  Object.setPrototypeOf(interpolator, R2BoxInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: s0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: s1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (s0: R2Box, s1: R2Box): Interpolator<R2Box>;\n\n  /** @hidden */\n  prototype: Interpolator<R2Box>;\n};\n\nR2BoxInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {R2Circle} from \"./R2Circle\";\n\n/** @hidden */\nexport const R2CircleInterpolator = function (s0: R2Circle, s1: R2Circle): Interpolator<R2Circle> {\n  const interpolator = function (u: number): R2Circle {\n    const s0 = interpolator[0];\n    const s1 = interpolator[1];\n    const cx = s0.cx + u * (s1.cx - s0.cx);\n    const cy = s0.cy + u * (s1.cy - s0.cy);\n    const r = s0.r + u * (s1.r - s0.r);\n    return new R2Circle(cx, cy, r);\n  } as Interpolator<R2Circle>;\n  Object.setPrototypeOf(interpolator, R2CircleInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: s0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: s1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (s0: R2Circle, s1: R2Circle): Interpolator<R2Circle>;\n\n  /** @hidden */\n  prototype: Interpolator<R2Circle>;\n};\n\nR2CircleInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, Equals, Lazy, Arrays} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {R2Function} from \"./R2Function\";\nimport {AnyR2Shape, R2Shape} from \"./R2Shape\";\nimport {R2Box} from \"./R2Box\";\n\nexport class R2Group<S extends R2Shape = R2Shape> extends R2Shape implements Equals, Equivalent, Debug {\n  constructor(shapes: ReadonlyArray<S>) {\n    super();\n    Object.defineProperty(this, \"shapes\", {\n      value: shapes,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"boundingBox\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly shapes!: ReadonlyArray<S>;\n\n  isDefined(): boolean {\n    return this.shapes.length !== 0;\n  }\n\n  override get xMin(): number {\n    return this.bounds.xMin;\n  }\n\n  override get yMin(): number {\n    return this.bounds.yMin;\n  }\n\n  override get xMax(): number {\n    return this.bounds.xMax;\n  }\n\n  override get yMax(): number {\n    return this.bounds.yMax;\n  }\n\n  override contains(that: AnyR2Shape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyR2Shape | number, y?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyR2Shape): boolean {\n    return false; // TODO\n  }\n\n  override transform(f: R2Function): R2Group {\n    const oldShapes = this.shapes;\n    const n = oldShapes.length;\n    if (n > 0) {\n      const newShapes = new Array<R2Shape>(n);\n      for (let i = 0; i < n; i += 1) {\n        newShapes[i] = oldShapes[i]!.transform(f);\n      }\n      return new R2Group(newShapes);\n    } else {\n      return R2Group.empty();\n    }\n  }\n\n  /** @hidden */\n  readonly boundingBox!: R2Box | null;\n\n  override get bounds(): R2Box {\n    let boundingBox = this.boundingBox;\n    if (boundingBox === null) {\n      let xMin = Infinity;\n      let yMin = Infinity;\n      let xMax = -Infinity;\n      let yMax = -Infinity;\n      const shapes = this.shapes;\n      for (let i = 0, n = shapes.length; i < n; i += 1) {\n        const shape = shapes[i]!;\n        xMin = Math.min(xMin, shape.xMin);\n        yMin = Math.min(yMin, shape.yMin);\n        xMax = Math.max(shape.xMax, xMax);\n        yMax = Math.max(shape.yMax, yMax);\n      }\n      boundingBox = new R2Box(xMin, yMin, xMax, yMax);\n      Object.defineProperty(this, \"boundingBox\", {\n        value: boundingBox,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return boundingBox;\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Group) {\n      return Arrays.equivalent(this.shapes, that.shapes, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof R2Group) {\n      return Arrays.equal(this.shapes, that.shapes);\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    const shapes = this.shapes;\n    const n = shapes.length;\n    output = output.write(\"R2Group\").write(46/*'.'*/);\n    if (n === 0) {\n      output = output.write(\"empty\").write(40/*'('*/);\n    } else {\n      output = output.write(\"of\").write(40/*'('*/);\n      output = output.debug(shapes[0]!);\n      for (let i = 1; i < n; i += 1) {\n        output = output.write(\", \").debug(shapes[i]!);\n      }\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty<S extends R2Shape>(): R2Group<S> {\n    return new R2Group(Arrays.empty);\n  }\n\n  static of<S extends R2Shape>(...shapes: S[]): R2Group<S> {\n    return new R2Group(shapes);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Equivalent, Lazy} from \"@swim/util\";\nimport {Output, Parser, Debug, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport type {Value, Form} from \"@swim/structure\";\nimport {AnyLength, Length} from \"../length/Length\";\nimport {PxLength} from \"../length/PxLength\";\nimport {AnyAngle, Angle} from \"../angle/Angle\";\nimport {DegAngle} from \"../angle/DegAngle\";\nimport type {R2Operator} from \"../r2/R2Operator\";\nimport type {R2Point} from \"../r2/R2Point\";\nimport {TransformForm} from \"../\"; // forward import\nimport {IdentityTransform} from \"../\"; // forward import\nimport {TranslateTransform} from \"../\"; // forward import\nimport {ScaleTransform} from \"../\"; // forward import\nimport {RotateTransform} from \"../\"; // forward import\nimport {SkewTransform} from \"../\"; // forward import\nimport {AffineTransform} from \"../\"; // forward import\nimport {AffineTransformInterpolator} from \"../\"; // forward import\nimport {TransformList} from \"../\"; // forward import\nimport {TransformListParser} from \"../\"; // forward import\n\nexport type AnyTransform = Transform | string;\n\nexport abstract class Transform implements R2Operator, Interpolate<Transform>, HashCode, Equivalent, Debug {\n  abstract transform(that: Transform): Transform;\n  abstract transform(x: number, y: number): R2Point;\n\n  abstract transformX(x: number, y: number): number;\n\n  abstract transformY(x: number, y: number): number;\n\n  abstract inverse(): Transform;\n\n  translate(x: AnyLength, y: AnyLength): Transform {\n    return this.transform(Transform.translate(x, y));\n  }\n\n  translateX(x: AnyLength): Transform {\n    return this.transform(Transform.translateX(x));\n  }\n\n  translateY(y: AnyLength): Transform {\n    return this.transform(Transform.translateY(y));\n  }\n\n  scale(x: number, y: number): Transform {\n    return this.transform(Transform.scale(x, y));\n  }\n\n  scaleX(x: number): Transform {\n    return this.transform(Transform.scaleX(x));\n  }\n\n  scaleY(y: number): Transform {\n    return this.transform(Transform.scaleY(y));\n  }\n\n  rotate(a: AnyAngle): Transform {\n    return this.transform(Transform.rotate(a));\n  }\n\n  skew(x: AnyAngle, y: AnyAngle): Transform {\n    return this.transform(Transform.skew(x, y));\n  }\n\n  skewX(x: AnyAngle): Transform {\n    return this.transform(Transform.skewX(x));\n  }\n\n  skewY(y: AnyAngle): Transform {\n    return this.transform(Transform.skewY(y));\n  }\n\n  abstract toAffine(): AffineTransform;\n\n  toMatrix(): DOMMatrix {\n    return this.toAffine().toMatrix();\n  }\n\n  toCssTransformComponent(): CSSTransformComponent | null {\n    return null\n  }\n\n  toCssValue(): CSSStyleValue | null {\n    if (typeof CSSTransformValue !== \"undefined\") {\n      const component = this.toCssTransformComponent();\n      if (component !== null) {\n        return new CSSTransformValue([component]);\n      }\n    }\n    return null;\n  }\n\n  abstract toValue(): Value;\n\n  interpolateTo(that: Transform): Interpolator<Transform>;\n  interpolateTo(that: unknown): Interpolator<Transform> | null;\n  interpolateTo(that: unknown): Interpolator<Transform> | null {\n    if (that instanceof Transform) {\n      return AffineTransformInterpolator(this.toAffine(), that.toAffine());\n    } else {\n      return null;\n    }\n  }\n\n  abstract conformsTo(that: Transform): boolean;\n\n  abstract equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  abstract toString(): string;\n\n  toAttributeString(): string {\n    return this.toString();\n  }\n\n  @Lazy\n  static identity(): Transform {\n    return new IdentityTransform();\n  }\n\n  static translate(x: AnyLength, y: AnyLength): TranslateTransform {\n    x = Length.fromAny(x);\n    y = Length.fromAny(y);\n    return new TranslateTransform(x, y);\n  }\n\n  static translateX(x: AnyLength): TranslateTransform {\n    x = Length.fromAny(x);\n    return new TranslateTransform(x, PxLength.zero());\n  }\n\n  static translateY(y: AnyLength): TranslateTransform {\n    y = Length.fromAny(y);\n    return new TranslateTransform(PxLength.zero(), y);\n  }\n\n  static scale(x: number, y: number): ScaleTransform {\n    return new ScaleTransform(x, y);\n  }\n\n  static scaleX(x: number): ScaleTransform {\n    return new ScaleTransform(x, 1);\n  }\n\n  static scaleY(y: number): ScaleTransform {\n    return new ScaleTransform(1, y);\n  }\n\n  static rotate(a: AnyAngle): RotateTransform {\n    a = Angle.fromAny(a, \"deg\");\n    return new RotateTransform(a);\n  }\n\n  static skew(x: AnyAngle, y: AnyAngle): SkewTransform {\n    x = Angle.fromAny(x, \"deg\");\n    y = Angle.fromAny(y, \"deg\");\n    return new SkewTransform(x, y);\n  }\n\n  static skewX(x: AnyAngle): SkewTransform {\n    x = Angle.fromAny(x, \"deg\");\n    return new SkewTransform(x, DegAngle.zero());\n  }\n\n  static skewY(y: AnyAngle): SkewTransform {\n    y = Angle.fromAny(y, \"deg\");\n    return new SkewTransform(DegAngle.zero(), y);\n  }\n\n  static affine(x0: number = 1, y0: number = 0,\n                x1: number = 0, y1: number = 1,\n                tx: number = 0, ty: number = 0): AffineTransform {\n    return new AffineTransform(x0, y0, x1, y1, tx, ty);\n  }\n\n  static list(...transforms: AnyTransform[]): TransformList {\n    const list: Transform[] = [];\n    for (let i = 0; i < transforms.length; i += 1) {\n      const transform = Transform.fromAny(transforms[i]!);\n      if (transform instanceof TransformList) {\n        list.push(...transform.transforms);\n      } else if (!(transform instanceof IdentityTransform)) {\n        list.push(transform);\n      }\n    }\n    return new TransformList(list);\n  }\n\n  static fromCssValue(value: CSSStyleValue): Transform {\n    if (value instanceof CSSTransformValue) {\n      return Transform.fromCssTransform(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  /** @hidden */\n  static fromCssTransform(value: CSSTransformValue): Transform {\n    const n = value.length;\n    if (n === 1) {\n      return Transform.fromCssTransformComponent(value[0]!);\n    } else {\n      const transforms = new Array<Transform>(n);\n      for (let i = 0; i < n; i += 1) {\n        transforms[i] = Transform.fromCssTransformComponent(value[i]!);\n      }\n      return new TransformList(transforms);\n    }\n  }\n\n  static fromCssTransformComponent(component: CSSTransformComponent): Transform {\n    if (component instanceof CSSTranslate) {\n      return TranslateTransform.fromCssTransformComponent(component);\n    } else if (component instanceof CSSRotate) {\n      return RotateTransform.fromCssTransformComponent(component);\n    } else if (component instanceof CSSScale) {\n      return ScaleTransform.fromCssTransformComponent(component);\n    } else if (component instanceof CSSSkew) {\n      return SkewTransform.fromCssTransformComponent(component);\n    } else if (component instanceof CSSMatrixComponent) {\n      return AffineTransform.fromCssTransformComponent(component);\n    } else {\n      throw new TypeError(\"\" + component);\n    }\n  }\n\n  static fromAny(value: AnyTransform): Transform {\n    if (value === void 0 || value === null || value instanceof Transform) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return Transform.parse(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static fromValue(value: Value): Transform | null {\n    const tag = value.tag;\n    switch (tag) {\n      case \"identity\": return IdentityTransform.fromValue(value);\n      case \"translate\": return TranslateTransform.fromValue(value);\n      case \"scale\": return ScaleTransform.fromValue(value);\n      case \"rotate\": return RotateTransform.fromValue(value);\n      case \"skew\": return SkewTransform.fromValue(value);\n      case \"matrix\": return AffineTransform.fromValue(value);\n      default: return TransformList.fromValue(value);\n    }\n  }\n\n  static parse(string: string): Transform {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = TransformListParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  @Lazy\n  static form(): Form<Transform, AnyTransform> {\n    return new TransformForm(Transform.identity());\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyTransform {\n    return value instanceof Transform\n        || typeof value === \"string\";\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Record, Form} from \"@swim/structure\";\nimport {AnyTransform, Transform} from \"./Transform\";\n\n/** @hidden */\nexport class TransformForm extends Form<Transform, AnyTransform> {\n  constructor(unit: Transform | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: Transform | undefined;\n\n  override withUnit(unit: Transform | undefined): Form<Transform, AnyTransform> {\n    if (unit !== this.unit) {\n      return new TransformForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(transform: AnyTransform): Item {\n    transform = Transform.fromAny(transform);\n    return transform.toValue();\n  }\n\n  override cast(item: Item): Transform | undefined {\n    const value = item.toValue();\n    try {\n      if (value instanceof Record) {\n        const transform = Transform.fromValue(value);\n        return transform !== null ? transform : void 0;\n      } else {\n        const string = value.stringValue(void 0);\n        if (string !== void 0) {\n          return Transform.parse(string);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Transform} from \"./Transform\";\nimport {TranslateTransformParser} from \"../\"; // forward import\nimport {ScaleTransformParser} from \"../\"; // forward import\nimport {RotateTransformParser} from \"../\"; // forward import\nimport {SkewTransformParser} from \"../\"; // forward import\nimport {AffineTransformParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class TransformParser extends Parser<Transform> {\n  private readonly identOutput: Output<string> | undefined;\n\n  constructor(identOutput?: Output<string>) {\n    super();\n    this.identOutput = identOutput;\n  }\n\n  override feed(input: Input): Parser<Transform> {\n    return TransformParser.parse(input, this.identOutput);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>): Parser<Transform> {\n    let c = 0;\n    identOutput = identOutput || Unicode.stringOutput();\n    while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || Unicode.isDigit(c) || c === 45/*'-'*/)) {\n      input = input.step();\n      identOutput.write(c);\n    }\n    if (!input.isEmpty()) {\n      const ident = identOutput.bind();\n      switch (ident) {\n        case \"translate3d\":\n        case \"translateX\":\n        case \"translateY\":\n        case \"translate\": return TranslateTransformParser.parseRest(input, identOutput);\n        case \"scaleX\":\n        case \"scaleY\":\n        case \"scale\": return ScaleTransformParser.parseRest(input, identOutput);\n        case \"rotate\": return RotateTransformParser.parseRest(input, identOutput);\n        case \"skewX\":\n        case \"skewY\":\n        case \"skew\": return SkewTransformParser.parseRest(input, identOutput);\n        case \"matrix\": return AffineTransformParser.parseRest(input, identOutput);\n        case \"none\": return Parser.done(Transform.identity());\n        default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n      }\n    }\n    return new TransformParser(identOutput);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Interpolator, IdentityInterpolator} from \"@swim/mapping\";\nimport {Value, Record} from \"@swim/structure\";\nimport {R2Point} from \"../r2/R2Point\";\nimport {Transform} from \"./Transform\";\nimport {AffineTransform} from \"../\"; // forward import\n\nexport class IdentityTransform extends Transform {\n  override transform(that: Transform): Transform;\n  override transform(x: number, y: number): R2Point;\n  override transform(x: Transform | number, y?: number): Transform | R2Point {\n    if (arguments.length === 1) {\n      return x as Transform;\n    } else {\n      return new R2Point(x as number, y!);\n    }\n  }\n\n  override transformX(x: number, y: number): number {\n    return x;\n  }\n\n  override transformY(x: number, y: number): number {\n    return y;\n  }\n\n  override inverse(): Transform {\n    return this;\n  }\n\n  override toAffine(): AffineTransform {\n    return new AffineTransform(1, 0, 0, 1, 0, 0);\n  }\n\n  override toCssValue(): CSSStyleValue | null {\n    return new CSSKeywordValue(\"identity\");\n  }\n\n  override toValue(): Value {\n    return Record.create(1).attr(\"identity\");\n  }\n\n  override interpolateTo(that: IdentityTransform): Interpolator<IdentityTransform>;\n  override interpolateTo(that: Transform): Interpolator<Transform>;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null {\n    if (that instanceof IdentityTransform) {\n      return IdentityInterpolator(this);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override conformsTo(that: Transform): boolean {\n    return that instanceof IdentityTransform;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    return that instanceof IdentityTransform;\n  }\n\n  override equals(that: unknown): boolean {\n    return that instanceof IdentityTransform;\n  }\n\n  override hashCode(): number {\n    return Constructors.hash(IdentityTransform);\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Transform\").write(46/*'.'*/).write(\"identity\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return \"none\";\n  }\n\n  static override fromValue(value: Value): IdentityTransform | null {\n    if (value.tag === \"identity\") {\n      return Transform.identity();\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Constructors} from \"@swim/util\";\nimport {Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item, Value, Record} from \"@swim/structure\";\nimport {Length} from \"../length/Length\";\nimport {R2Point} from \"../r2/R2Point\";\nimport {Transform} from \"./Transform\";\nimport {IdentityTransform} from \"./IdentityTransform\";\nimport {TranslateTransformInterpolator} from \"../\"; // forward import\nimport {TranslateTransformParser} from \"../\"; // forward import\nimport {AffineTransform} from \"../\"; // forward import\n\nexport class TranslateTransform extends Transform {\n  constructor(x: Length, y: Length) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      value: x,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y\", {\n      value: y,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly x!: Length;\n\n  readonly y!: Length;\n\n  override transform(that: Transform): Transform;\n  override transform(x: number, y: number): R2Point;\n  override transform(x: Transform | number, y?: number): Transform | R2Point {\n    if (arguments.length === 1) {\n      if (x instanceof IdentityTransform) {\n        return this;\n      } else if (x instanceof TranslateTransform) {\n        return new TranslateTransform(this.x.plus(x.x), this.y.plus(x.y));\n      } else {\n        return Transform.list(this, x as Transform);\n      }\n    } else {\n      return new R2Point(this.x.pxValue() + (x as number), this.y.pxValue() + y!);\n    }\n  }\n\n  override transformX(x: number, y: number): number {\n    return this.x.pxValue() + x;\n  }\n\n  override transformY(x: number, y: number): number {\n    return this.y.pxValue() + y;\n  }\n\n  override inverse(): Transform {\n    return new TranslateTransform(this.x.negative(), this.y.negative());\n  }\n\n  override toAffine(): AffineTransform {\n    return new AffineTransform(1, 0, 0, 1, this.x.pxValue(), this.y.pxValue());\n  }\n\n  override toCssTransformComponent(): CSSTransformComponent | null {\n    if (typeof CSSTranslate !== \"undefined\") {\n      const x = this.x.toCssValue();\n      const y = this.y.toCssValue();\n      return new CSSTranslate(x!, y!);\n    }\n    return null;\n  }\n\n  override toValue(): Value {\n    return Record.create(1)\n                 .attr(\"translate\", Record.create(2).slot(\"x\", this.x.toValue())\n                                                    .slot(\"y\", this.y.toValue()));\n  }\n\n  override interpolateTo(that: TranslateTransform): Interpolator<TranslateTransform>;\n  override interpolateTo(that: Transform): Interpolator<Transform>;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null {\n    if (that instanceof TranslateTransform) {\n      return TranslateTransformInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override conformsTo(that: Transform): boolean {\n    return that instanceof TranslateTransform;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof TranslateTransform) {\n      return this.x.equivalentTo(that.x, epsilon)\n          && this.y.equivalentTo(that.y, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof TranslateTransform) {\n      return this.x.equals(that.x) && this.y.equals(that.y);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(TranslateTransform),\n        this.x.hashCode()), this.y.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Transform\").write(46/*'.'*/).write(\"translate\");\n    if (this.x.isDefined() && !this.y.isDefined()) {\n      output = output.write(\"X\").write(40/*'('*/).debug(this.x).write(41/*')'*/);\n    } else if (!this.x.isDefined() && this.y.isDefined()) {\n      output = output.write(\"Y\").write(40/*'('*/).debug(this.y).write(41/*')'*/);\n    } else {\n      output = output.write(40/*'('*/).debug(this.x).write(\", \").debug(this.y).write(41/*')'*/);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      if (this.x.isDefined() && !this.y.isDefined()) {\n        stringValue = \"translate(\" + this.x + \",0)\";\n      } else if (!this.x.isDefined() && this.y.isDefined()) {\n        stringValue = \"translate(0,\" + this.y + \")\";\n      } else {\n        stringValue = \"translate(\" + this.x + \",\" + this.y + \")\";\n      }\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  override toAttributeString(): string {\n    if (this.x.isDefined() && !this.y.isDefined()) {\n      return \"translate(\" + this.x.pxValue() + \",0)\";\n    } else if (!this.x.isDefined() && this.y.isDefined()) {\n      return \"translate(0,\" + this.y.pxValue() + \")\";\n    } else {\n      return \"translate(\" + this.x.pxValue() + \",\" + this.y.pxValue() + \")\";\n    }\n  }\n\n  static override fromCssTransformComponent(component: CSSTranslate): TranslateTransform {\n    const x = typeof component.x === \"number\"\n            ? Length.px(component.x)\n            : Length.fromCssValue(component.x);\n    const y = typeof component.y === \"number\"\n            ? Length.px(component.y)\n            : Length.fromCssValue(component.y);\n    return new TranslateTransform(x, y);\n  }\n\n  static override fromAny(value: TranslateTransform | string): TranslateTransform {\n    if (value === void 0 || value === null || value instanceof TranslateTransform) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return TranslateTransform.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromValue(value: Value): TranslateTransform | null {\n    const header = value.header(\"translate\");\n    if (header.isDefined()) {\n      let x = Length.zero();\n      let y = Length.zero();\n      header.forEach(function (item: Item, index: number) {\n        const key = item.key.stringValue();\n        if (key !== void 0) {\n          if (key === \"x\") {\n            x = item.toValue().cast(Length.form(), x);\n          } else if (key === \"y\") {\n            y = item.toValue().cast(Length.form(), y);\n          }\n        } else if (item instanceof Value) {\n          if (index === 0) {\n            x = item.cast(Length.form(), x);\n          } else if (index === 1) {\n            y = item.cast(Length.form(), y);\n          }\n        }\n      }, this);\n      return new TranslateTransform(x, y);\n    }\n    return null;\n  }\n\n  static override parse(string: string): TranslateTransform {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = TranslateTransformParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {Length} from \"../length/Length\";\nimport {TranslateTransform} from \"./TranslateTransform\";\n\n/** @hidden */\nexport const TranslateTransformInterpolator = function (f0: TranslateTransform, f1: TranslateTransform): Interpolator<TranslateTransform> {\n  const interpolator = function (u: number): TranslateTransform {\n    const f0 = interpolator[0];\n    const f1 = interpolator[1];\n    const x = Length.create(f0.x.value + u * (f1.x.value - f0.x.value), f1.x.units);\n    const y = Length.create(f0.y.value + u * (f1.y.value - f0.y.value), f1.y.units);\n    return new TranslateTransform(x, y);\n  } as Interpolator<TranslateTransform>;\n  Object.setPrototypeOf(interpolator, TranslateTransformInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: f0.x.units === f1.x.units && f0.y.units === f1.y.units\n         ? f0 : new TranslateTransform(f0.x.to(f1.x.units), f0.y.to(f1.y.units)),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: f1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (f0: TranslateTransform, f1: TranslateTransform): Interpolator<TranslateTransform>;\n\n  /** @hidden */\n  prototype: Interpolator<TranslateTransform>;\n};\n\nTranslateTransformInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Length} from \"../length/Length\";\nimport {PxLength} from \"../length/PxLength\";\nimport {LengthParser} from \"../length/LengthParser\";\nimport {TranslateTransform} from \"./TranslateTransform\";\n\n/** @hidden */\nexport class TranslateTransformParser extends Parser<TranslateTransform> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly xParser: Parser<Length> | undefined;\n  private readonly yParser: Parser<Length> | undefined;\n  private readonly zParser: Parser<Length> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, xParser?: Parser<Length>,\n              yParser?: Parser<Length>, zParser?: Parser<Length>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.xParser = xParser;\n    this.yParser = yParser;\n    this.zParser = zParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<TranslateTransform> {\n    return TranslateTransformParser.parse(input, this.identOutput, this.xParser,\n                                          this.yParser, this.zParser, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, xParser?: Parser<Length>,\n               yParser?: Parser<Length>, zParser?: Parser<Length>,\n               step: number = 1): Parser<TranslateTransform> {\n    let c = 0;\n    if (step === 1) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || Unicode.isDigit(c) || c === 45/*'-'*/)) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"translate3d\":\n          case \"translateX\":\n          case \"translateY\":\n          case \"translate\": step = 2; break;\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 3) {\n      if (xParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          xParser = LengthParser.parse(input, \"px\");\n        }\n      } else {\n        xParser = xParser.feed(input);\n      }\n      if (xParser !== void 0) {\n        if (xParser.isDone()) {\n          step = 4;\n        } else if (xParser.isError()) {\n          return xParser.asError();\n        }\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 41/*')'*/) {\n          input.step();\n          const ident = identOutput!.bind();\n          switch (ident) {\n            case \"translateX\": return Parser.done(new TranslateTransform(xParser!.bind(), PxLength.zero()));\n            case \"translateY\": return Parser.done(new TranslateTransform(PxLength.zero(), xParser!.bind()));\n            default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n          }\n        } else if (c === 44/*','*/) {\n          input.step();\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\",\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (yParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          yParser = LengthParser.parse(input, \"px\");\n        }\n      } else {\n        yParser = yParser.feed(input);\n      }\n      if (yParser !== void 0) {\n        if (yParser.isDone()) {\n          step = 6;\n        } else if (yParser.isError()) {\n          return yParser.asError();\n        }\n      }\n    }\n    if (step === 6) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 41/*')'*/) {\n          input.step();\n          const ident = identOutput!.bind();\n          switch (ident) {\n            case \"translate\": return Parser.done(new TranslateTransform(xParser!.bind(), yParser!.bind()));\n            default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n          }\n        } else if (c === 44/*','*/) {\n          input.step();\n          step = 7;\n        } else {\n          return Parser.error(Diagnostic.expected(\",\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 7) {\n      if (zParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          zParser = LengthParser.parse(input, \"px\");\n        }\n      } else {\n        zParser = zParser.feed(input);\n      }\n      if (zParser !== void 0) {\n        if (zParser.isDone()) {\n          step = 8;\n        } else if (zParser.isError()) {\n          return zParser.asError();\n        }\n      }\n    }\n    if (step === 8) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont() && input.head() === 41/*')'*/) {\n        input.step();\n        const ident = identOutput!.bind();\n        switch (ident) {\n          case \"translate3d\":\n            if (zParser!.bind().value === 0) {\n              return Parser.done(new TranslateTransform(xParser!.bind(), yParser!.bind()));\n            }\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new TranslateTransformParser(identOutput, xParser, yParser, zParser, step);\n  }\n\n  /** @hidden */\n  static parseRest(input: Input, identOutput?: Output<string>): Parser<TranslateTransform> {\n    return TranslateTransformParser.parse(input, identOutput, void 0, void 0, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item, Value, Record} from \"@swim/structure\";\nimport {R2Point} from \"../r2/R2Point\";\nimport {Transform} from \"./Transform\";\nimport {IdentityTransform} from \"./IdentityTransform\";\nimport {ScaleTransformInterpolator} from \"../\"; // forward import\nimport {ScaleTransformParser} from \"../\"; // forward import\nimport {AffineTransform} from \"../\"; // forward import\n\nexport class ScaleTransform extends Transform {\n  constructor(x: number, y: number) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      value: x,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y\", {\n      value: y,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly x!: number;\n\n  readonly y!: number;\n\n  override transform(that: Transform): Transform;\n  override transform(x: number, y: number): R2Point;\n  override transform(x: Transform | number, y?: number): Transform | R2Point {\n    if (arguments.length === 1) {\n      if (x instanceof IdentityTransform) {\n        return this;\n      } else {\n        return Transform.list(this, x as Transform);\n      }\n    } else {\n      return new R2Point(this.x * (x as number), this.y * y!);\n    }\n  }\n\n  override transformX(x: number, y: number): number {\n    return this.x * x;\n  }\n\n  override transformY(x: number, y: number): number {\n    return this.y * y;\n  }\n\n  override inverse(): Transform {\n    return new ScaleTransform(1 / (this.x || 1), 1 / (this.y || 1));\n  }\n\n  toAffine(): AffineTransform {\n    return new AffineTransform(this.x, 0, 0, this.y, 0, 0);\n  }\n\n  override toCssTransformComponent(): CSSTransformComponent | null {\n    if (typeof CSSTranslate !== \"undefined\") {\n      return new CSSScale(this.x, this.y);\n    }\n    return null;\n  }\n\n  override toValue(): Value {\n    return Record.create(1)\n                 .attr(\"scale\", Record.create(2).slot(\"x\", this.x)\n                                                .slot(\"y\", this.y));\n  }\n\n  override interpolateTo(that: ScaleTransform): Interpolator<ScaleTransform>;\n  override interpolateTo(that: Transform): Interpolator<Transform>;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null {\n    if (that instanceof ScaleTransform) {\n      return ScaleTransformInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override conformsTo(that: Transform): boolean {\n    return that instanceof ScaleTransform;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof ScaleTransform) {\n      return Numbers.equivalent(this.x, that.x, epsilon)\n          && Numbers.equivalent(this.y, that.y, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof ScaleTransform) {\n      return this.x === that.x && this.y === that.y;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(ScaleTransform),\n        Numbers.hash(this.x)), Numbers.hash(this.y)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Transform\").write(46/*'.'*/).write(\"scale\");\n    if (this.x !== 0 && this.y === 0) {\n      output = output.write(\"X\").write(40/*'('*/).debug(this.x).write(41/*')'*/);\n    } else if (this.x === 0 && this.y !== 0) {\n      output = output.write(\"Y\").write(40/*'('*/).debug(this.y).write(41/*')'*/);\n    } else {\n      output = output.write(40/*'('*/).debug(this.x).write(\", \").debug(this.y).write(41/*')'*/);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      if (this.x !== 0 && this.y === 0) {\n        stringValue = \"scaleX(\" + this.x + \")\";\n      } else if (this.x === 0 && this.y !== 0) {\n        stringValue = \"scaleY(\" + this.y + \")\";\n      } else {\n        stringValue = \"scale(\" + this.x + \",\" + this.y + \")\";\n      }\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  static override fromCssTransformComponent(component: CSSScale): ScaleTransform {\n    const x = typeof component.x === \"number\"\n            ? component.x\n            : component.x.to(\"number\").value;\n    const y = typeof component.y === \"number\"\n            ? component.y\n            : component.y.to(\"number\").value;\n    return new ScaleTransform(x, y);\n  }\n\n  static override fromAny(value: ScaleTransform | string): ScaleTransform {\n    if (value === void 0 || value === null || value instanceof ScaleTransform) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return ScaleTransform.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromValue(value: Value): ScaleTransform | null {\n    const header = value.header(\"scale\");\n    if (header.isDefined()) {\n      let x = 0;\n      let y = 0;\n      header.forEach(function (item: Item, index: number) {\n        const key = item.key.stringValue();\n        if (key !== void 0) {\n          if (key === \"x\") {\n            x = item.toValue().numberValue(x);\n          } else if (key === \"y\") {\n            y = item.toValue().numberValue(y);\n          }\n        } else if (item instanceof Value) {\n          if (index === 0) {\n            x = item.numberValue(x);\n          } else if (index === 1) {\n            y = item.numberValue(y);\n          }\n        }\n      }, this);\n      return new ScaleTransform(x, y);\n    }\n    return null;\n  }\n\n  static override parse(string: string): ScaleTransform {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ScaleTransformParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {ScaleTransform} from \"./ScaleTransform\";\n\n/** @hidden */\nexport const ScaleTransformInterpolator = function (f0: ScaleTransform, f1: ScaleTransform): Interpolator<ScaleTransform> {\n  const interpolator = function (u: number): ScaleTransform {\n    const f0 = interpolator[0];\n    const f1 = interpolator[1];\n    const x = f0.x + u * (f1.x - f0.x);\n    const y = f0.y + u * (f1.y - f0.y);\n    return new ScaleTransform(x, y);\n  } as Interpolator<ScaleTransform>;\n  Object.setPrototypeOf(interpolator, ScaleTransformInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: f0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: f1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (f0: ScaleTransform, f1: ScaleTransform): Interpolator<ScaleTransform>;\n\n  /** @hidden */\n  prototype: Interpolator<ScaleTransform>;\n};\n\nScaleTransformInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {ScaleTransform} from \"./ScaleTransform\";\n\n/** @hidden */\nexport class ScaleTransformParser extends Parser<ScaleTransform> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly xParser: Parser<number> | undefined;\n  private readonly yParser: Parser<number> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, xParser?: Parser<number>,\n              yParser?: Parser<number>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.xParser = xParser;\n    this.yParser = yParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<ScaleTransform> {\n    return ScaleTransformParser.parse(input, this.identOutput, this.xParser, this.yParser, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, xParser?: Parser<number>,\n               yParser?: Parser<number>, step: number = 1): Parser<ScaleTransform> {\n    let c = 0;\n    if (step === 1) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"scaleX\":\n          case \"scaleY\":\n          case \"scale\": step = 2; break;\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 3) {\n      if (xParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          xParser = Base10.parseNumber(input);\n        }\n      } else {\n        xParser = xParser.feed(input);\n      }\n      if (xParser !== void 0) {\n        if (xParser!.isDone()) {\n          step = 4;\n        } else if (xParser.isError()) {\n          return xParser.asError();\n        }\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 41/*')'*/) {\n          input.step();\n          const ident = identOutput!.bind();\n          switch (ident) {\n            case \"scaleX\": return Parser.done(new ScaleTransform(xParser!.bind(), 1));\n            case \"scaleY\": return Parser.done(new ScaleTransform(1, xParser!.bind()));\n            default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n          }\n        } else if (c === 44/*','*/) {\n          input.step();\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\",\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (yParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          yParser = Base10.parseNumber(input);\n        }\n      } else {\n        yParser = yParser.feed(input);\n      }\n      if (yParser !== void 0) {\n        if (yParser.isDone()) {\n          step = 6;\n        } else if (yParser.isError()) {\n          return yParser.asError();\n        }\n      }\n    }\n    if (step === 6) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont() && input.head() === 41/*')'*/) {\n        input.step();\n        const ident = identOutput!.bind();\n        switch (ident) {\n          case \"scale\": return Parser.done(new ScaleTransform(xParser!.bind(), yParser!.bind()));\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new ScaleTransformParser(identOutput, xParser, yParser, step);\n  }\n\n  /** @hidden */\n  static parseRest(input: Input, identOutput?: Output<string>): Parser<ScaleTransform> {\n    return ScaleTransformParser.parse(input, identOutput, void 0, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Constructors} from \"@swim/util\";\nimport {Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item, Value, Record} from \"@swim/structure\";\nimport {Angle} from \"../angle/Angle\";\nimport {R2Point} from \"../r2/R2Point\";\nimport {Transform} from \"./Transform\";\nimport {IdentityTransform} from \"./IdentityTransform\";\nimport {RotateTransformInterpolator} from \"../\"; // forward import\nimport {RotateTransformParser} from \"../\"; // forward import\nimport {AffineTransform} from \"../\"; // forward import\n\nexport class RotateTransform extends Transform {\n  constructor(angle: Angle) {\n    super();\n    Object.defineProperty(this, \"angle\", {\n      value: angle,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly angle!: Angle;\n\n  override transform(that: Transform): Transform;\n  override transform(x: number, y: number): R2Point;\n  override transform(x: Transform | number, y?: number): Transform | R2Point {\n    if (arguments.length === 1) {\n      if (x instanceof IdentityTransform) {\n        return this;\n      } else {\n        return Transform.list(this, x as Transform);\n      }\n    } else {\n      const angle = this.angle.radValue();\n      const cosA = Math.cos(angle);\n      const sinA = Math.sin(angle);\n      return new R2Point((x as number) * cosA - y! * sinA,\n                         (x as number) * sinA + y! * cosA);\n    }\n  }\n\n  override transformX(x: number, y: number): number {\n    const angle = this.angle.radValue();\n    return x * Math.cos(angle) - y * Math.sin(angle);\n  }\n\n  override transformY(x: number, y: number): number {\n    const angle = this.angle.radValue();\n    return x * Math.sin(angle) + y * Math.cos(angle);\n  }\n\n  override inverse(): Transform {\n    return new RotateTransform(this.angle.negative());\n  }\n\n  override toAffine(): AffineTransform {\n    const angle = this.angle.radValue();\n    return new AffineTransform(Math.cos(angle), Math.sin(angle),\n                              -Math.sin(angle), Math.cos(angle),\n                               0, 0);\n  }\n\n  override toCssTransformComponent(): CSSTransformComponent | null {\n    if (typeof CSSTranslate !== \"undefined\") {\n      const angle = this.angle.toCssValue();\n      return new CSSRotate(angle!);\n    }\n    return null;\n  }\n\n  override toValue(): Value {\n    return Record.create(1).attr(\"rotate\", this.angle.toString());\n  }\n\n  override interpolateTo(that: RotateTransform): Interpolator<RotateTransform>;\n  override interpolateTo(that: Transform): Interpolator<Transform>;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null {\n    if (that instanceof RotateTransform) {\n      return RotateTransformInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override conformsTo(that: Transform): boolean {\n    return that instanceof RotateTransform;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof RotateTransform) {\n      return this.angle.equivalentTo(that.angle, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof RotateTransform) {\n      return this.angle.equals(that.angle);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(RotateTransform), this.angle.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Transform\").write(46/*'.'*/).write(\"rotate\")\n        .write(40/*'('*/).debug(this.angle).write(41/*')'*/);\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = \"rotate(\" + this.angle + \")\";\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  override toAttributeString(): string {\n    return \"rotate(\" + this.angle.degValue() + \")\";\n  }\n\n  static override fromCssTransformComponent(component: CSSRotate): RotateTransform {\n    const angle = Angle.fromCssValue(component.angle);\n    return new RotateTransform(angle);\n  }\n\n  static override fromAny(value: RotateTransform | string): RotateTransform {\n    if (value === void 0 || value === null || value instanceof RotateTransform) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return RotateTransform.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromValue(value: Value): RotateTransform | null {\n    const header = value.header(\"rotate\");\n    if (header.isDefined()) {\n      let angle = Angle.zero();\n      header.forEach(function (item: Item, index: number) {\n        const key = item.key.stringValue();\n        if (key === \"angle\") {\n          angle = item.toValue().cast(Angle.form(), angle);\n        } else if (item instanceof Value && index === 0) {\n          angle = item.cast(Angle.form(), angle);\n        }\n      }, this);\n      return new RotateTransform(angle);\n    }\n    return null;\n  }\n\n  static override parse(string: string): RotateTransform {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = RotateTransformParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {Angle} from \"../angle/Angle\";\nimport {RotateTransform} from \"./RotateTransform\";\n\n/** @hidden */\nexport const RotateTransformInterpolator = function (f0: RotateTransform, f1: RotateTransform): Interpolator<RotateTransform> {\n  const interpolator = function (u: number): RotateTransform {\n    const f0 = interpolator[0];\n    const f1 = interpolator[1];\n    const a = Angle.create(f0.angle.value + u * (f1.angle.value - f0.angle.value), f1.angle.units);\n    return new RotateTransform(a);\n  } as Interpolator<RotateTransform>;\n  Object.setPrototypeOf(interpolator, RotateTransformInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: f0.angle.units === f1.angle.units ? f0 : new RotateTransform(f0.angle.to(f1.angle.units)),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: f1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (f0: RotateTransform, f1: RotateTransform): Interpolator<RotateTransform>;\n\n  /** @hidden */\n  prototype: Interpolator<RotateTransform>;\n};\n\nRotateTransformInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Angle} from \"../angle/Angle\";\nimport {AngleParser} from \"../angle/AngleParser\";\nimport {RotateTransform} from \"./RotateTransform\";\n\n/** @hidden */\nexport class RotateTransformParser extends Parser<RotateTransform> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly angleParser: Parser<Angle> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, angleParser?: Parser<Angle>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.angleParser = angleParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<RotateTransform> {\n    return RotateTransformParser.parse(input, this.identOutput, this.angleParser, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, angleParser?: Parser<Angle>,\n               step: number = 1): Parser<RotateTransform> {\n    let c = 0;\n    if (step === 1) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"rotate\": step = 2; break;\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 3) {\n      if (angleParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          angleParser = AngleParser.parse(input, \"deg\");\n        }\n      } else {\n        angleParser = angleParser.feed(input);\n      }\n      if (angleParser !== void 0) {\n        if (angleParser.isDone()) {\n          step = 4;\n        } else if (angleParser.isError()) {\n          return angleParser.asError();\n        }\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont() && input.head() === 41/*')'*/) {\n        input.step();\n        const ident = identOutput!.bind();\n        switch (ident) {\n          case \"rotate\": return Parser.done(new RotateTransform(angleParser!.bind()));\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new RotateTransformParser(identOutput, angleParser, step);\n  }\n\n  /** @hidden */\n  static parseRest(input: Input, identOutput?: Output<string>): Parser<RotateTransform> {\n    return RotateTransformParser.parse(input, identOutput, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Constructors} from \"@swim/util\";\nimport {Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item, Value, Record} from \"@swim/structure\";\nimport {Angle} from \"../angle/Angle\";\nimport {R2Point} from \"../r2/R2Point\";\nimport {Transform} from \"./Transform\";\nimport {IdentityTransform} from \"./IdentityTransform\";\nimport {SkewTransformInterpolator} from \"../\"; // forward import\nimport {SkewTransformParser} from \"../\"; // forward import\nimport {AffineTransform} from \"../\"; // forward import\n\nexport class SkewTransform extends Transform {\n  constructor(x: Angle, y: Angle) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      value: x,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y\", {\n      value: y,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly x!: Angle;\n\n  readonly y!: Angle;\n\n  override transform(that: Transform): Transform;\n  override transform(x: number, y: number): R2Point;\n  override transform(x: Transform | number, y?: number): Transform | R2Point {\n    if (arguments.length === 1) {\n      if (x instanceof IdentityTransform) {\n        return this;\n      } else {\n        return Transform.list(this, x as Transform);\n      }\n    } else {\n      return new R2Point(Math.tan(this.x.radValue()) * y! + (x as number),\n                         Math.tan(this.y.radValue()) * (x as number) + y!);\n    }\n  }\n\n  override transformX(x: number, y: number): number {\n    return Math.tan(this.x.radValue()) * y + x;\n  }\n\n  override transformY(x: number, y: number): number {\n    return Math.tan(this.y.radValue()) * x + y;\n  }\n\n  override inverse(): Transform {\n    return new SkewTransform(this.x.negative(), this.y.negative());\n  }\n\n  override toAffine(): AffineTransform {\n    const x = this.x.radValue();\n    const y = this.y.radValue();\n    return new AffineTransform(1, Math.tan(y), Math.tan(x), 1, 0, 0);\n  }\n\n  override toCssTransformComponent(): CSSTransformComponent | null {\n    if (typeof CSSTranslate !== \"undefined\") {\n      const x = this.x.toCssValue();\n      const y = this.y.toCssValue();\n      return new CSSSkew(x!, y!);\n    }\n    return null;\n  }\n\n  override toValue(): Value {\n    return Record.create(1)\n                 .attr(\"skew\", Record.create(2).slot(\"x\", this.x.toValue())\n                                               .slot(\"y\", this.y.toValue()));\n  }\n\n  override interpolateTo(that: SkewTransform): Interpolator<SkewTransform>;\n  override interpolateTo(that: Transform): Interpolator<Transform>;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null {\n    if (that instanceof SkewTransform) {\n      return SkewTransformInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override conformsTo(that: Transform): boolean {\n    return that instanceof SkewTransform;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof SkewTransform) {\n      return this.x.equivalentTo(that.x, epsilon)\n          && this.y.equivalentTo(that.y, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof SkewTransform) {\n      return this.x.equals(that.x) && this.y.equals(that.y);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(SkewTransform),\n        this.x.hashCode()), this.y.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Transform\").write(46/*'.'*/).write(\"skew\");\n    if (this.x.isDefined() && !this.y.isDefined()) {\n      output = output.write(\"X\").write(40/*'('*/).debug(this.x).write(41/*')'*/);\n    } else if (!this.x.isDefined() && this.y.isDefined()) {\n      output = output.write(\"Y\").write(40/*'('*/).debug(this.y).write(41/*')'*/);\n    } else {\n      output = output.write(40/*'('*/).debug(this.x).write(\", \").debug(this.y).write(41/*')'*/);\n    }\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      if (this.x.isDefined() && !this.y.isDefined()) {\n        stringValue = \"skewX(\" + this.x + \")\";\n      } else if (!this.x.isDefined() && this.y.isDefined()) {\n        stringValue = \"skewY(\" + this.y + \")\";\n      } else {\n        stringValue = \"skew(\" + this.x + \",\" + this.y + \")\";\n      }\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  override toAttributeString(): string {\n    if (this.x.isDefined() && !this.y.isDefined()) {\n      return \"skewX(\" + this.x.degValue() + \")\";\n    } else if (!this.x.isDefined() && this.y.isDefined()) {\n      return \"skewY(\" + this.y.degValue() + \")\";\n    } else {\n      return \"skew(\" + this.x.degValue() + \",\" + this.y.degValue() + \")\";\n    }\n  }\n\n  static override fromCssTransformComponent(component: CSSSkew): SkewTransform {\n    const x = typeof component.ax === \"number\"\n            ? Angle.rad(component.ax)\n            : Angle.fromCssValue(component.ax);\n    const y = typeof component.ay === \"number\"\n            ? Angle.rad(component.ay)\n            : Angle.fromCssValue(component.ay);\n    return new SkewTransform(x, y);\n  }\n\n  static override fromAny(value: SkewTransform | string): SkewTransform {\n    if (value === void 0 || value === null || value instanceof SkewTransform) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return SkewTransform.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromValue(value: Value): SkewTransform | null {\n    const header = value.header(\"skew\");\n    if (header.isDefined()) {\n      let x = Angle.zero();\n      let y = Angle.zero();\n      header.forEach(function (item: Item, index: number) {\n        const key = item.key.stringValue();\n        if (key !== void 0) {\n          if (key === \"x\") {\n            x = item.toValue().cast(Angle.form(), x);\n          } else if (key === \"y\") {\n            y = item.toValue().cast(Angle.form(), y);\n          }\n        } else if (item instanceof Value) {\n          if (index === 0) {\n            x = item.cast(Angle.form(), x);\n          } else if (index === 1) {\n            y = item.cast(Angle.form(), y);\n          }\n        }\n      }, this);\n      return new SkewTransform(x, y);\n    }\n    return null;\n  }\n\n  static override parse(string: string): SkewTransform {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = SkewTransformParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {Angle} from \"../angle/Angle\";\nimport {SkewTransform} from \"./SkewTransform\";\n\n/** @hidden */\nexport const SkewTransformInterpolator = function (f0: SkewTransform, f1: SkewTransform): Interpolator<SkewTransform> {\n  const interpolator = function (u: number): SkewTransform {\n    const f0 = interpolator[0];\n    const f1 = interpolator[1];\n    const x = Angle.create(f0.x.value + u * (f1.x.value - f0.x.value), f1.x.units);\n    const y = Angle.create(f0.y.value + u * (f1.y.value - f0.y.value), f1.y.units);\n    return new SkewTransform(x, y);\n  } as Interpolator<SkewTransform>;\n  Object.setPrototypeOf(interpolator, SkewTransformInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: f0.x.units === f1.x.units && f0.y.units === f1.y.units\n         ? f0 : new SkewTransform(f0.x.to(f1.x.units), f0.y.to(f1.y.units)),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: f1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (f0: SkewTransform, f1: SkewTransform): Interpolator<SkewTransform>;\n\n  /** @hidden */\n  prototype: Interpolator<SkewTransform>;\n};\n\nSkewTransformInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Angle} from \"../angle/Angle\";\nimport {DegAngle} from \"../angle/DegAngle\";\nimport {AngleParser} from \"../angle/AngleParser\";\nimport {SkewTransform} from \"./SkewTransform\";\n\n/** @hidden */\nexport class SkewTransformParser extends Parser<SkewTransform> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly xParser: Parser<Angle> | undefined;\n  private readonly yParser: Parser<Angle> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, xParser?: Parser<Angle>,\n              yParser?: Parser<Angle>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.xParser = xParser;\n    this.yParser = yParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<SkewTransform> {\n    return SkewTransformParser.parse(input, this.identOutput, this.xParser, this.yParser, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, xParser?: Parser<Angle>,\n               yParser?: Parser<Angle>, step: number = 1): Parser<SkewTransform> {\n    let c = 0;\n    if (step === 1) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"skewX\":\n          case \"skewY\":\n          case \"skew\": step = 2; break;\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 3) {\n      if (xParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          xParser = AngleParser.parse(input, \"deg\");\n        }\n      } else {\n        xParser = xParser.feed(input);\n      }\n      if (xParser !== void 0) {\n        if (xParser.isDone()) {\n          step = 4;\n        } else if (xParser.isError()) {\n          return xParser.asError();\n        }\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 41/*')'*/) {\n          input.step();\n          const ident = identOutput!.bind();\n          switch (ident) {\n            case \"skewX\": return Parser.done(new SkewTransform(xParser!.bind(), DegAngle.zero()));\n            case \"skewY\": return Parser.done(new SkewTransform(DegAngle.zero(), xParser!.bind()));\n            default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n          }\n        } else if (c === 44/*','*/) {\n          input.step();\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\",\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (yParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          yParser = AngleParser.parse(input, \"deg\");\n        }\n      } else {\n        yParser = yParser.feed(input);\n      }\n      if (yParser !== void 0) {\n        if (yParser.isDone()) {\n          step = 6;\n        } else if (yParser.isError()) {\n          return yParser.asError();\n        }\n      }\n    }\n    if (step === 6) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont() && input.head() === 41/*')'*/) {\n        input.step();\n        const ident = identOutput!.bind();\n        switch (ident) {\n          case \"skew\": return Parser.done(new SkewTransform(xParser!.bind(), yParser!.bind()));\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new SkewTransformParser(identOutput, xParser, yParser, step);\n  }\n\n  /** @hidden */\n  static parseRest(input: Input, identOutput?: Output<string>): Parser<SkewTransform> {\n    return SkewTransformParser.parse(input, identOutput, void 0, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item, Value, Record} from \"@swim/structure\";\nimport {R2Point} from \"../r2/R2Point\";\nimport {Transform} from \"./Transform\";\nimport {IdentityTransform} from \"./IdentityTransform\";\nimport {AffineTransformInterpolator} from \"../\"; // forward import\nimport {AffineTransformParser} from \"../\"; // forward import\n\nexport class AffineTransform extends Transform {\n  constructor(x0: number, y0: number, x1: number, y1: number, tx: number, ty: number) {\n    super();\n    Object.defineProperty(this, \"x0\", {\n      value: x0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y0\", {\n      value: y0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"x1\", {\n      value: x1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y1\", {\n      value: y1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"tx\", {\n      value: tx,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ty\", {\n      value: ty,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly x0!: number;\n\n  readonly y0!: number;\n\n  readonly x1!: number;\n\n  readonly y1!: number;\n\n  readonly tx!: number;\n\n  readonly ty!: number;\n\n  override transform(that: Transform): Transform;\n  override transform(x: number, y: number): R2Point;\n  override transform(x: Transform | number, y?: number): Transform | R2Point {\n    if (arguments.length === 1) {\n      if (x instanceof IdentityTransform) {\n        return this;\n      } else {\n        return this.multiply((x as Transform).toAffine());\n      }\n    } else {\n      return new R2Point(this.x0 * (x as number) + this.x1 * y! + this.tx,\n                         this.y0 * (x as number) + this.y1 * y! + this.ty);\n    }\n  }\n\n  override transformX(x: number, y: number): number {\n    return this.x0 * x + this.x1 * y + this.tx;\n  }\n\n  override transformY(x: number, y: number): number {\n    return this.y0 * x + this.y1 * y + this.ty;\n  }\n\n  override inverse(): Transform {\n    const m00 = this.x0;\n    const m10 = this.y0;\n    const m01 = this.x1;\n    const m11 = this.y1;\n    const m02 = this.tx;\n    const m12 = this.ty;\n    const det = m00 * m11 - m01 * m10;\n    if (Math.abs(det) >= Number.MIN_VALUE) {\n      return new AffineTransform( m11 / det, -m10 / det,\n                                 -m01 / det,  m00 / det,\n                                 (m01 * m12 - m11 * m02) / det,\n                                 (m10 * m02 - m00 * m12) / det);\n    } else {\n      throw new Error(\"non-invertible affine transform with determinant \" + det);\n    }\n  }\n\n  multiply(that: AffineTransform): AffineTransform {\n    const x0 = this.x0 * that.x0 + this.x1 * that.y0;\n    const y0 = this.y0 * that.x0 + this.y1 * that.y0;\n    const x1 = this.x0 * that.x1 + this.x1 * that.y1;\n    const y1 = this.y0 * that.x1 + this.y1 * that.y1;\n    const tx = this.x0 * that.tx + this.x1 * that.ty;\n    const ty = this.y0 * that.tx + this.y1 * that.ty;\n    return new AffineTransform(x0, y0, x1, y1, tx, ty);\n  }\n\n  override toAffine(): AffineTransform {\n    return this;\n  }\n\n  override toMatrix(): DOMMatrix {\n    return new DOMMatrix([this.x0, this.y0, this.x1, this.y1, this.tx, this.ty]);\n  }\n\n  override toCssTransformComponent(): CSSTransformComponent | null {\n    if (typeof CSSTranslate !== \"undefined\") {\n      return new CSSMatrixComponent(this.toMatrix());\n    }\n    return null;\n  }\n\n  override toValue(): Value {\n    return Record.create(1)\n                 .attr(\"matrix\", Record.create(6).item(this.x0).item(this.y0)\n                                                 .item(this.x1).item(this.y1)\n                                                 .item(this.tx).item(this.ty));\n  }\n\n  override interpolateTo(that: AffineTransform): Interpolator<AffineTransform>;\n  override interpolateTo(that: Transform): Interpolator<Transform>;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null {\n    if (that instanceof AffineTransform) {\n      return AffineTransformInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override conformsTo(that: Transform): boolean {\n    return that instanceof AffineTransform;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof AffineTransform) {\n      return Numbers.equivalent(this.x0, that.x0, epsilon)\n          && Numbers.equivalent(this.y0, that.y0, epsilon)\n          && Numbers.equivalent(this.x1, that.x1, epsilon)\n          && Numbers.equivalent(this.y1, that.y1, epsilon)\n          && Numbers.equivalent(this.tx, that.tx, epsilon)\n          && Numbers.equivalent(this.ty, that.ty, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof AffineTransform) {\n      return this.x0 === that.x0 && this.y0 === that.y0\n          && this.x1 === that.x1 && this.y1 === that.y1\n          && this.tx === that.tx && this.ty === that.ty;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Murmur3.mix(Murmur3.mix(Constructors.hash(AffineTransform),\n        Numbers.hash(this.x0)), Numbers.hash(this.y0)),\n        Numbers.hash(this.x1)), Numbers.hash(this.y1)),\n        Numbers.hash(this.tx)), Numbers.hash(this.ty)));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Transform\").write(46/*'.'*/).write(\"affine\").write(40/*'('*/)\n        .debug(this.x0).write(\", \").debug(this.y0).write(\", \")\n        .debug(this.x1).write(\", \").debug(this.y1).write(\", \")\n        .debug(this.tx).write(\", \").debug(this.ty).write(41/*')'*/);\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      stringValue = \"matrix(\" + this.x0 + \",\" + this.y0 + \",\"\n                              + this.x1 + \",\" + this.y1 + \",\"\n                              + this.tx + \",\" + this.ty + \")\";\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  @Lazy\n  static override identity(): AffineTransform {\n    return new AffineTransform(1, 0, 0, 1, 0, 0);\n  }\n\n  static override fromAny(value: AffineTransform | string): AffineTransform {\n    if (value === void 0 || value === null || value instanceof AffineTransform) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return AffineTransform.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromMatrix(matrix: DOMMatrixReadOnly): AffineTransform {\n    return new AffineTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n  }\n\n  static override fromCssTransformComponent(component: CSSMatrixComponent): AffineTransform {\n    return AffineTransform.fromMatrix(component.matrix);\n  }\n\n  static override fromValue(value: Value): AffineTransform | null {\n    const header = value.header(\"matrix\");\n    if (header.isDefined()) {\n      let x0 = 0;\n      let y0 = 0;\n      let x1 = 0;\n      let y1 = 0;\n      let tx = 0;\n      let ty = 0;\n      header.forEach(function (item: Item, index: number) {\n        const key = item.key.stringValue();\n        if (key !== void 0) {\n          if (key === \"x0\") {\n            x0 = item.toValue().numberValue(x0);\n          } else if (key === \"y0\") {\n            y0 = item.toValue().numberValue(y0);\n          } else if (key === \"x1\") {\n            x1 = item.toValue().numberValue(x1);\n          } else if (key === \"y1\") {\n            y1 = item.toValue().numberValue(y1);\n          } else if (key === \"tx\") {\n            tx = item.toValue().numberValue(tx);\n          } else if (key === \"ty\") {\n            ty = item.toValue().numberValue(ty);\n          }\n        } else if (item instanceof Value) {\n          switch (index) {\n            case 0: x0 = item.numberValue(x0); break;\n            case 1: y0 = item.numberValue(y0); break;\n            case 2: x1 = item.numberValue(x1); break;\n            case 3: y1 = item.numberValue(y1); break;\n            case 4: tx = item.numberValue(tx); break;\n            case 5: ty = item.numberValue(ty); break;\n            default:\n          }\n        }\n      }, this);\n      return new AffineTransform(x0, y0, x1, y1, tx, ty);\n    }\n    return null;\n  }\n\n  static override parse(string: string): AffineTransform {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = AffineTransformParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {AffineTransform} from \"./AffineTransform\";\n\n/** @hidden */\nexport const AffineTransformInterpolator = function (f0: AffineTransform, f1: AffineTransform): Interpolator<AffineTransform> {\n  const interpolator = function (u: number): AffineTransform {\n    // TODO: interpolate and recompose matrices\n    const f0 = interpolator[0];\n    const f1 = interpolator[1];\n    const x0 = f0.x0 + u * (f1.x0 - f0.x0);\n    const y0 = f0.y0 + u * (f1.y0 - f0.y0);\n    const x1 = f0.x1 + u * (f1.x1 - f0.x1);\n    const y1 = f0.y1 + u * (f1.y1 - f0.y1);\n    const tx = f0.tx + u * (f1.tx - f0.tx);\n    const ty = f0.ty + u * (f1.ty - f0.ty);\n    return new AffineTransform(x0, y0, x1, y1, tx, ty);\n  } as Interpolator<AffineTransform>;\n  Object.setPrototypeOf(interpolator, AffineTransformInterpolator.prototype);\n  // TODO: decompose matrices\n  Object.defineProperty(interpolator, 0, {\n    value: f0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: f1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (f0: AffineTransform, f1: AffineTransform): Interpolator<AffineTransform>;\n\n  /** @hidden */\n  prototype: Interpolator<AffineTransform>;\n};\n\nAffineTransformInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {Transform} from \"./Transform\";\nimport type {AffineTransform} from \"./AffineTransform\";\n\n/** @hidden */\nexport class AffineTransformParser extends Parser<AffineTransform> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly entries: number[] | undefined;\n  private readonly entryParser: Parser<number> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, entries?: number[],\n              entryParser?: Parser<number>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.entries = entries;\n    this.entryParser = entryParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<AffineTransform> {\n    return AffineTransformParser.parse(input, this.identOutput, this.entries, this.entryParser, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, entries: number[] = [],\n               entryParser?: Parser<number>, step: number = 1): Parser<AffineTransform> {\n    let c = 0;\n    if (step === 1) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"matrix\": step = 2; break;\n          default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n        }\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    do {\n      if (step === 3) {\n        if (entryParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            entryParser = Base10.parseNumber(input);\n          }\n        } else {\n          entryParser = entryParser.feed(input);\n        }\n        if (entryParser !== void 0) {\n          if (entryParser.isDone()) {\n            entries.push(entryParser.bind());\n            entryParser = void 0;\n            step = 4;\n          } else if (entryParser.isError()) {\n            return entryParser.asError();\n          }\n        }\n      }\n      if (step === 4) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 41/*')'*/) {\n            input.step();\n            const ident = identOutput!.bind();\n            switch (ident) {\n              case \"matrix\": return Parser.done(Transform.affine(...entries));\n              default: return Parser.error(Diagnostic.message(\"unknown transform function: \" + ident, input));\n            }\n          } else if (entries.length >= 6) {\n            return Parser.error(Diagnostic.expected(\")\", input));\n          } else if (c === 44/*','*/) {\n            input.step();\n            step = 3;\n            continue;\n          } else {\n            return Parser.error(Diagnostic.expected(\",\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      break;\n    } while (true);\n    return new AffineTransformParser(identOutput, entries, entryParser, step);\n  }\n\n  /** @hidden */\n  static parseRest(input: Input, identOutput?: Output<string>): Parser<AffineTransform> {\n    return AffineTransformParser.parse(input, identOutput, void 0, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Interpolator} from \"@swim/mapping\";\nimport {Item, Value, Record} from \"@swim/structure\";\nimport {R2Point} from \"../r2/R2Point\";\nimport {Transform} from \"./Transform\";\nimport {AffineTransform} from \"./AffineTransform\";\nimport {IdentityTransform} from \"./IdentityTransform\";\nimport {TransformListInterpolator} from \"../\"; // forward import\n\nexport class TransformList extends Transform {\n  constructor(transforms: ReadonlyArray<Transform>) {\n    super();\n    Object.defineProperty(this, \"transforms\", {\n      value: transforms,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"stringValue\", {\n      value: void 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly transforms!: ReadonlyArray<Transform>;\n\n  override transform(that: Transform): Transform;\n  override transform(x: number, y: number): R2Point;\n  override transform(x: Transform | number, y?: number): Transform | R2Point {\n    if (arguments.length === 1) {\n      if (x instanceof IdentityTransform) {\n        return this;\n      } else {\n        return Transform.list(this, x as Transform);\n      }\n    } else {\n      const transforms = this.transforms;\n      for (let i = 0, n = transforms.length; i < n; i += 1) {\n        const transform = transforms[i]!;\n        const xi = transform.transformX(x as number, y!);\n        const yi = transform.transformY(x as number, y!);\n        x = xi;\n        y = yi;\n      }\n      return new R2Point(x as number, y!);\n    }\n  }\n\n  override transformX(x: number, y: number): number {\n    const transforms = this.transforms;\n    for (let i = 0, n = transforms.length; i < n; i += 1) {\n      const transform = transforms[i]!;\n      const xi = transform.transformX(x, y);\n      const yi = transform.transformY(x, y);\n      x = xi;\n      y = yi;\n    }\n    return x;\n  }\n\n  override transformY(x: number, y: number): number {\n    const transforms = this.transforms;\n    for (let i = 0, n = transforms.length; i < n; i += 1) {\n      const transform = transforms[i]!;\n      const xi = transform.transformX(x, y);\n      const yi = transform.transformY(x, y);\n      x = xi;\n      y = yi;\n    }\n    return y;\n  }\n\n  override inverse(): Transform {\n    const transforms = this.transforms;\n    const n = transforms.length;\n    const inverseTransforms = new Array<Transform>(n);\n    for (let i = 0; i < n; i += 1) {\n      inverseTransforms[i] = transforms[n - i - 1]!.inverse();\n    }\n    return new TransformList(inverseTransforms);\n  }\n\n  override toAffine(): AffineTransform {\n    let matrix = AffineTransform.identity();\n    const transforms = this.transforms;\n    for (let i = 0, n = transforms.length; i < n; i += 1) {\n      matrix = matrix.multiply(transforms[i]!.toAffine());\n    }\n    return matrix;\n  }\n\n  override toCssTransformComponent(): CSSTransformComponent | null {\n    if (typeof CSSTranslate !== \"undefined\") {\n      return new CSSMatrixComponent(this.toMatrix());\n    }\n    return null;\n  }\n\n  override toCssValue(): CSSStyleValue | null {\n    if (typeof CSSTransformValue !== \"undefined\") {\n      const transforms = this.transforms;\n      const n = transforms.length;\n      const components = new Array<CSSTransformComponent>(n);\n      for (let i = 0, n = transforms.length; i < n; i += 1) {\n        const transform = transforms[i]!;\n        const component = transform.toCssTransformComponent();\n        if (component !== null) {\n          components[i] = component;\n        } else {\n          return null;\n        }\n      }\n      return new CSSTransformValue(components);\n    }\n    return null;\n  }\n\n  override toValue(): Value {\n    const transforms = this.transforms;\n    const n = transforms.length;\n    const record = Record.create(n);\n    for (let i = 0; i < n; i += 1) {\n      record.push(transforms[i]!.toValue());\n    }\n    return record;\n  }\n\n  override interpolateTo(that: TransformList): Interpolator<TransformList>;\n  override interpolateTo(that: Transform): Interpolator<Transform>;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null;\n  override interpolateTo(that: unknown): Interpolator<Transform> | null {\n    if (that instanceof TransformList) {\n      return TransformListInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override conformsTo(that: Transform): boolean {\n    if (that instanceof TransformList) {\n      const n = this.transforms.length;\n      if (n === that.transforms.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!this.transforms[i]!.conformsTo(that.transforms[i]!)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (that instanceof TransformList) {\n      const n = this.transforms.length;\n      if (n === that.transforms.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!this.transforms[i]!.equivalentTo(that.transforms[i]!, epsilon)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (that instanceof TransformList) {\n      const n = this.transforms.length;\n      if (n === that.transforms.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!this.transforms[i]!.equals(that.transforms[i]!)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    let hashValue = Constructors.hash(TransformList);\n    const transforms = this.transforms;\n    for (let i = 0, n = transforms.length; i < n; i += 1) {\n      hashValue = Murmur3.mix(hashValue, transforms[i]!.hashCode());\n    }\n    return Murmur3.mash(hashValue);\n  }\n\n  override debug(output: Output): void {\n    output = output.write(\"Transform\").write(46/*'.'*/).write(\"list\").write(40/*'('*/);\n    const transforms = this.transforms;\n    const n = transforms.length;\n    if (n > 0) {\n      output = output.debug(transforms[0]!);\n      for (let i = 1; i < n; i += 1) {\n        output = output.write(\", \").debug(transforms[i]!);\n      }\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  /** @hidden */\n  readonly stringValue!: string | undefined;\n\n  override toString(): string {\n    let stringValue = this.stringValue;\n    if (stringValue === void 0) {\n      const transforms = this.transforms;\n      const n = transforms.length;\n      if (n > 0) {\n        stringValue = transforms[0]!.toString();\n        for (let i = 1; i < n; i += 1) {\n          stringValue += \" \";\n          stringValue += transforms[i]!.toString();\n        }\n      } else {\n        stringValue = \"none\";\n      }\n      Object.defineProperty(this, \"stringValue\", {\n        value: stringValue,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return stringValue;\n  }\n\n  override toAttributeString(): string {\n    const transforms = this.transforms;\n    const n = transforms.length;\n    if (n > 0) {\n      let s = transforms[0]!.toAttributeString();\n      for (let i = 1; i < n; i += 1) {\n        s += \" \";\n        s += transforms[i]!.toAttributeString();\n      }\n      return s;\n    } else {\n      return \"\";\n    }\n  }\n\n  static override fromAny(value: TransformList | string): TransformList {\n    if (value === void 0 || value === null || value instanceof TransformList) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return TransformList.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromValue(value: Value): TransformList | null {\n    const transforms: Transform[] = [];\n    value.forEach(function (item: Item) {\n      const transform = Transform.fromValue(item.toValue());\n      if (transform !== null) {\n        transforms.push(transform);\n      }\n    }, this);\n    if (transforms.length !== 0) {\n      return new TransformList(transforms);\n    }\n    return null;\n  }\n\n  static override parse(string: string): TransformList {\n    const transform = Transform.parse(string);\n    if (transform instanceof TransformList) {\n      return transform;\n    } else {\n      return new TransformList([transform]);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport type {Transform} from \"./Transform\";\nimport {TransformList} from \"./TransformList\";\n\n/** @hidden */\nexport interface TransformListInterpolator extends Interpolator<TransformList> {\n  /** @hidden */\n  readonly interpolators: ReadonlyArray<Interpolator<Transform>>;\n\n  readonly 0: TransformList;\n\n  readonly 1: TransformList;\n\n  equals(that: unknown): boolean;\n}\n\n/** @hidden */\nexport const TransformListInterpolator = function (f0: TransformList, f1: TransformList): TransformListInterpolator {\n  const interpolator = function (u: number): TransformList {\n    const interpolators = interpolator.interpolators;\n    const interpolatorCount = interpolators.length;\n    const transforms = new Array<Transform>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      transforms[i] = interpolators[i]!(u);\n    }\n    return new TransformList(transforms);\n  } as TransformListInterpolator;\n  Object.setPrototypeOf(interpolator, TransformListInterpolator.prototype);\n  const transforms0 = f0.transforms;\n  const transforms1 = f1.transforms;\n  const interpolatorCount = Math.min(transforms0.length, transforms1.length);\n  const interpolators = new Array<Interpolator<Transform>>(interpolatorCount);\n  for (let i = 0; i < interpolatorCount; i += 1) {\n    interpolators[i] = transforms0[i]!.interpolateTo(transforms1[i]!);\n  }\n  Object.defineProperty(interpolator, \"interpolators\", {\n    value: interpolators,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (f0: TransformList, f1: TransformList): TransformListInterpolator;\n\n  /** @hidden */\n  prototype: TransformListInterpolator;\n};\n\nTransformListInterpolator.prototype = Object.create(Interpolator.prototype);\n\nObject.defineProperty(TransformListInterpolator.prototype, 0, {\n  get(this: TransformListInterpolator): TransformList {\n    const interpolators = this.interpolators;\n    const interpolatorCount = interpolators.length;\n    const transforms = new Array<Transform>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      transforms[i] = interpolators[i]![0];\n    }\n    return new TransformList(transforms);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nObject.defineProperty(TransformListInterpolator.prototype, 1, {\n  get(this: TransformListInterpolator): TransformList {\n    const interpolators = this.interpolators;\n    const interpolatorCount = interpolators.length;\n    const transforms = new Array<Transform>(interpolatorCount);\n    for (let i = 0; i < interpolatorCount; i += 1) {\n      transforms[i] = interpolators[i]![1];\n    }\n    return new TransformList(transforms);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nTransformListInterpolator.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof TransformListInterpolator) {\n    const n = this.interpolators.length;\n    if (n === that.interpolators.length) {\n      for (let i = 0; i < n; i += 1) {\n        if (!this.interpolators[i]!.equals(that.interpolators[i]!)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Unicode} from \"@swim/codec\";\nimport {Transform} from \"./Transform\";\nimport {TransformParser} from \"./TransformParser\";\n\n/** @hidden */\nexport class TransformListParser extends Parser<Transform> {\n  private readonly transform: Transform | undefined;\n  private readonly transformParser: Parser<Transform> | undefined;\n\n  constructor(transform?: Transform, transformParser?: Parser<Transform>) {\n    super();\n    this.transform = transform;\n    this.transformParser = transformParser;\n  }\n\n  override feed(input: Input): Parser<Transform> {\n    return TransformListParser.parse(input, this.transform, this.transformParser);\n  }\n\n  static parse(input: Input, transform: Transform = Transform.identity(),\n               transformParser?: Parser<Transform>): Parser<Transform> {\n    do {\n      if (transformParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input.step();\n        }\n        if (input.isCont()) {\n          transformParser = TransformParser.parse(input);\n        } else if (input.isDone()) {\n          return Parser.done(transform);\n        }\n      }\n      if (transformParser !== void 0) {\n        transformParser = transformParser.feed(input);\n        if (transformParser.isDone()) {\n          transform = transform.transform(transformParser.bind());\n          transformParser = void 0;\n          continue;\n        } else if (transformParser.isError()) {\n          return transformParser.asError();\n        }\n      }\n      break;\n    } while (true);\n    return new TransformListParser(transform, transformParser);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyR2Point, R2Point} from \"@swim/math\";\nimport type {AnyGeoPoint, GeoPoint} from \"./GeoPoint\";\n\nexport interface GeoProjection {\n  project(lnglat: AnyGeoPoint): R2Point;\n  project(lng: number, lat: number): R2Point;\n\n  unproject(point: AnyR2Point): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n}\n\nexport const GeoProjection = {} as {\n  is(object: unknown): object is GeoProjection;\n};\n\nGeoProjection.is = function (object: unknown): object is GeoProjection {\n  if (object !== void 0 && object !== null) {\n    const projection = object as GeoProjection;\n    return typeof projection.project === \"function\"\n        && typeof projection.unproject === \"function\";\n  }\n  return false;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport type {R2Shape} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {GeoPointInit, GeoPointTuple, GeoPoint} from \"./\"; // forward import\nimport {GeoSegmentInit, GeoSegment} from \"./\"; // forward import\nimport {GeoBoxInit, GeoBox} from \"./\"; // forward import\nimport {GeoTileInit, GeoTileTuple, GeoTile} from \"./\"; // forward import\n\nexport type AnyGeoShape = GeoShape | GeoPointInit | GeoPointTuple | GeoSegmentInit | GeoTileInit | GeoTileTuple | GeoBoxInit;\n\nexport abstract class GeoShape implements Equals {\n  abstract readonly lngMin: number;\n\n  abstract readonly latMin: number;\n\n  abstract readonly lngMax: number;\n\n  abstract readonly latMax: number;\n\n  abstract contains(that: AnyGeoShape): boolean;\n\n  abstract contains(lng: number, lat: number): boolean;\n\n  abstract intersects(that: AnyGeoShape): boolean;\n\n  union(that: AnyGeoShape): GeoShape {\n    that = GeoShape.fromAny(that);\n    return new GeoBox(Math.min(this.lngMin, that.lngMin),\n                      Math.min(this.latMin, that.latMin),\n                      Math.max(this.lngMax, that.lngMax),\n                      Math.max(this.latMax, that.latMax));\n  }\n\n  abstract project(f: GeoProjection): R2Shape;\n\n  get bounds(): GeoBox {\n    return new GeoBox(this.lngMin, this.latMin, this.lngMax, this.latMax);\n  }\n\n  abstract equals(that: unknown): boolean;\n\n  static fromAny(value: AnyGeoShape): GeoShape {\n    if (value === void 0 || value === null || value instanceof GeoShape) {\n      return value;\n    } else if (GeoPoint.isInit(value)) {\n      return GeoPoint.fromInit(value);\n    } else if (GeoPoint.isTuple(value)) {\n      return GeoPoint.fromTuple(value);\n    } else if (GeoSegment.isInit(value)) {\n      return GeoSegment.fromInit(value);\n    } else if (GeoTile.isInit(value)) {\n      return GeoTile.fromInit(value);\n    } else if (GeoTile.isTuple(value)) {\n      return GeoTile.fromTuple(value);\n    } else if (GeoBox.isInit(value)) {\n      return GeoBox.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyGeoShape {\n    return value instanceof GeoShape\n        || GeoPoint.isInit(value)\n        || GeoPoint.isTuple(value)\n        || GeoSegment.isInit(value)\n        || GeoTile.isInit(value)\n        || GeoBox.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, HashCode, Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport type {R2Point} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {AnyGeoShape, GeoShape} from \"./GeoShape\";\nimport {GeoPointInterpolator} from \"./\"; // forward import\n\nexport type AnyGeoPoint = GeoPoint | GeoPointInit | GeoPointTuple;\n\nexport interface GeoPointInit {\n  lng: number;\n  lat: number;\n}\n\nexport type GeoPointTuple = [number, number];\n\n/**\n * A geographic point represented by a WGS84 longitude and latitude.\n */\nexport class GeoPoint extends GeoShape implements Interpolate<GeoPoint>, HashCode, Equivalent, Debug {\n  constructor(lng: number, lat: number) {\n    super();\n    Object.defineProperty(this, \"lng\", {\n      value: lng,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lat\", {\n      value: lat,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.lng) && isFinite(this.lat);\n  }\n\n  readonly lng!: number;\n\n  readonly lat!: number;\n\n  override get lngMin(): number {\n    return this.lng;\n  }\n\n  override get latMin(): number {\n    return this.lat;\n  }\n\n  override get lngMax(): number {\n    return this.lng;\n  }\n\n  override get latMax(): number {\n    return this.lat;\n  }\n\n  override contains(that: AnyGeoShape): boolean;\n  override contains(lng: number, lat: number): boolean;\n  override contains(that: AnyGeoShape | number, lat?: number): boolean {\n    if (typeof that === \"number\") {\n      return this.lng === that && this.lat === lat!;\n    } else {\n      that = GeoShape.fromAny(that);\n      if (that instanceof GeoPoint) {\n        return this.lng === that.lng && this.lat === that.lat;\n      } else if (that instanceof GeoShape) {\n        return this.lng <= that.lngMin && that.lngMax <= this.lng\n            && this.lat <= that.latMin && that.latMax <= this.lat;\n      }\n      return false;\n    }\n  }\n\n  override intersects(that: AnyGeoShape): boolean {\n    that = GeoShape.fromAny(that);\n    return (that as GeoShape).intersects(this);\n  }\n\n  override project(f: GeoProjection): R2Point {\n    return f.project(this);\n  }\n\n  normalized(): GeoPoint {\n    const oldLng = this.lng;\n    const oldLat = this.lat;\n    const newLng = GeoPoint.normalizeLng(oldLng);\n    const newLat = GeoPoint.normalizeLat(oldLat);\n    if (oldLng === newLng && oldLat === newLat) {\n      return this;\n    } else {\n      return new GeoPoint(newLng, newLat);\n    }\n  }\n\n  toAny(): GeoPointInit {\n    return {\n      lng: this.lng,\n      lat: this.lat,\n    };\n  }\n\n  interpolateTo(that: GeoPoint): Interpolator<GeoPoint>;\n  interpolateTo(that: unknown): Interpolator<GeoPoint> | null;\n  interpolateTo(that: unknown): Interpolator<GeoPoint> | null {\n    if (that instanceof GeoPoint) {\n      return GeoPointInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoPoint) {\n      return Numbers.equivalent(this.lng, that.lng, epsilon)\n          && Numbers.equivalent(this.lat, that.lat, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoPoint) {\n      return this.lng === that.lng && this.lat === that.lat;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(GeoPoint),\n        Numbers.hash(this.lng)), Numbers.hash(this.lat)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"GeoPoint\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.lng).write(\", \").debug(this.lat).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static origin(): GeoPoint {\n    return new GeoPoint(0, 0);\n  }\n\n  @Lazy\n  static undefined(): GeoPoint {\n    return new GeoPoint(NaN, NaN);\n  }\n\n  static of(lng: number, lat: number): GeoPoint {\n    return new GeoPoint(lng, lat);\n  }\n\n  static fromInit(value: GeoPointInit): GeoPoint {\n    return new GeoPoint(value.lng, value.lat);\n  }\n\n  static fromTuple(value: GeoPointTuple): GeoPoint {\n    return new GeoPoint(value[0], value[1]);\n  }\n\n  static override fromAny(value: AnyGeoPoint): GeoPoint {\n    if (value === void 0 || value === null || value instanceof GeoPoint) {\n      return value;\n    } else if (GeoPoint.isInit(value)) {\n      return GeoPoint.fromInit(value);\n    } else if (GeoPoint.isTuple(value)) {\n      return GeoPoint.fromTuple(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static normalized(lng: number, lat: number): GeoPoint {\n    lng = GeoPoint.normalizeLng(lng);\n    lat = GeoPoint.normalizeLat(lat);\n    return new GeoPoint(lng, lat);\n  }\n\n  /** @hidden */\n  static normalizeLng(lng: number): number {\n    if (lng < -180) {\n      lng = 180 - (-lng + 180) % 360;\n    } else if (lng > 180) {\n      lng = -180 + (lng - 180) % 360;\n    }\n    return lng;\n  }\n\n  /** @hidden */\n  static normalizeLat(lat: number): number {\n    lat = Math.min(Math.max(-90 + Equivalent.Epsilon, lat), 90 - Equivalent.Epsilon);\n    return lat;\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is GeoPointInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as GeoPointInit;\n      return typeof init.lng === \"number\"\n          && typeof init.lat === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isTuple(value: unknown): value is GeoPointTuple {\n    return Array.isArray(value)\n        && value.length === 2\n        && typeof value[0] === \"number\"\n        && typeof value[1] === \"number\";\n  }\n\n  /** @hidden */\n  static override isAny(value: unknown): value is AnyGeoPoint {\n    return value instanceof GeoPoint\n        || GeoPoint.isInit(value)\n        || GeoPoint.isTuple(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {GeoPoint} from \"./GeoPoint\";\n\n/** @hidden */\nexport const GeoPointInterpolator = function (p0: GeoPoint, p1: GeoPoint): Interpolator<GeoPoint> {\n  const interpolator = function (u: number): GeoPoint {\n    const p0 = interpolator[0];\n    const lng0 = p0.lng;\n    const lat0 = p0.lat;\n    const p1 = interpolator[1];\n    const lng1 = p1.lng;\n    const lat1 = p1.lat;\n    let lng: number;\n    if (lng0 > 0 && lng1 < 0 && lng0 - lng1 > 180) {\n      // east across anti-meridian\n      const w = 180 - lng0;\n      const e = 180 + lng1;\n      const uw = w / (w + e);\n      if (u < uw) {\n        lng = lng0 + (u / uw) * w;\n      } else {\n        const ue = 1 - uw;\n        lng = -180 + ((u - uw) / ue) * e;\n      }\n    } else if (lng0 < 0 && lng1 > 0 && lng1 - lng0 > 180) {\n      // west across anti-meridian\n      const e = 180 + lng0;\n      const w = 180 - lng1;\n      const ue = e / (e + w);\n      if (u < ue) {\n        lng = lng0 - (u / ue) * e;\n      } else {\n        const uw = 1 - ue;\n        lng = 180 - ((u - ue) / uw) * w;\n      }\n    } else {\n      lng = lng0 + u * (lng1 - lng0);\n    }\n    const lat = lat0 + u * (lat1 - lat0);\n    return new GeoPoint(lng, lat);\n  } as Interpolator<GeoPoint>;\n  Object.setPrototypeOf(interpolator, GeoPointInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: p0.normalized(),\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: p1.normalized(),\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (p0: GeoPoint, p1: GeoPoint): Interpolator<GeoPoint>;\n\n  /** @hidden */\n  prototype: Interpolator<GeoPoint>;\n};\n\nGeoPointInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equivalent, Equals} from \"@swim/util\";\nimport type {R2Curve} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {GeoShape} from \"./GeoShape\";\nimport type {GeoPoint} from \"./GeoPoint\";\n\nexport abstract class GeoCurve extends GeoShape implements Equals, Equivalent {\n  abstract interpolateLng(u: number): number;\n\n  abstract interpolateLat(u: number): number;\n\n  abstract interpolate(u: number): GeoPoint;\n\n  abstract split(u: number): [GeoCurve, GeoCurve];\n\n  abstract override project(f: GeoProjection): R2Curve;\n\n  abstract forEachCoord<R>(callback: (lng: number, lat: number) => R | void): R | undefined;\n  abstract forEachCoord<R, S>(callback: (this: S, lng: number, lat: number) => R | void,\n                              thisArg: S): R | undefined;\n\n  abstract forEachCoordRest<R>(callback: (lng: number, lat: number) => R | void): R | undefined;\n  abstract forEachCoordRest<R, S>(callback: (this: S, lng: number, lat: number) => R | void,\n                                  thisArg: S): R | undefined;\n\n  abstract equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  abstract override equals(that: unknown): boolean;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport {R2Segment} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {AnyGeoShape, GeoShape} from \"./GeoShape\";\nimport {GeoPoint} from \"./GeoPoint\";\nimport {GeoCurve} from \"./GeoCurve\";\nimport {GeoSegmentInterpolator} from \"./\"; // forward import\n\nexport type AnyGeoSegment = GeoSegment | GeoSegmentInit;\n\nexport interface GeoSegmentInit {\n  lng0: number;\n  lat0: number;\n  lng1: number;\n  lat1: number;\n}\n\nexport class GeoSegment extends GeoCurve implements Interpolate<GeoSegment>, HashCode, Debug {\n  constructor(lng0: number, lat0: number, lng1: number, lat1: number) {\n    super();\n    Object.defineProperty(this, \"lng0\", {\n      value: lng0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lat0\", {\n      value: lat0,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lng1\", {\n      value: lng1,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lat1\", {\n      value: lat1,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.lng0) && isFinite(this.lat0)\n        && isFinite(this.lng1) && isFinite(this.lat1);\n  }\n\n  readonly lng0!: number;\n\n  readonly lat0!: number;\n\n  readonly lng1!: number;\n\n  readonly lat1!: number;\n\n  override get lngMin(): number {\n    return Math.min(this.lng0, this.lng1);\n  }\n\n  override get latMin(): number {\n    return Math.min(this.lat0, this.lat1);\n  }\n\n  override get lngMax(): number {\n    return Math.max(this.lng0, this.lng1);\n  }\n\n  override get latMax(): number {\n    return Math.max(this.lat0, this.lat1);\n  }\n\n  override interpolateLng(u: number): number {\n    return (1.0 - u) * this.lng0 + u * this.lng1;\n  }\n\n  override interpolateLat(u: number): number {\n   return (1.0 - u) * this.lat0 + u * this.lat1;\n  }\n\n  override interpolate(u: number): GeoPoint {\n    const v = 1.0 - u;\n    const lng01 = v * this.lng0 + u * this.lng1;\n    const lat01 = v * this.lat0 + u * this.lat1;\n    return new GeoPoint(lng01, lat01);\n  }\n\n  override contains(that: AnyGeoShape): boolean;\n  override contains(lng: number, lat: number): boolean;\n  override contains(that: AnyGeoShape | number, lat?: number): boolean {\n    if (typeof that === \"number\") {\n      return R2Segment.contains(this.lng0, this.lat0, this.lng1, this.lat1, that, lat!);\n    } else {\n      that = GeoShape.fromAny(that);\n      if (that instanceof GeoPoint) {\n        return this.containsPoint(that);\n      } else if (that instanceof GeoSegment) {\n        return this.containsSegment(that);\n      }\n      return false;\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: GeoPoint): boolean {\n    return R2Segment.contains(this.lng0, this.lat0, this.lng1, this.lat1, that.lng, that.lat);\n  }\n\n  /** @hidden */\n  containsSegment(that: GeoSegment): boolean {\n    return R2Segment.contains(this.lng0, this.lat0, this.lng1, this.lat1, that.lng0, that.lat0)\n        && R2Segment.contains(this.lng0, this.lat0, this.lng1, this.lat1, that.lng1, that.lat1);\n  }\n\n  override intersects(that: AnyGeoShape): boolean {\n    that = GeoShape.fromAny(that);\n    if (that instanceof GeoPoint) {\n      return this.intersectsPoint(that);\n    } else if (that instanceof GeoSegment) {\n      return this.intersectsSegment(that);\n    } else {\n      return (that as GeoShape).intersects(this);\n    }\n    return false;\n  }\n\n  /** @hidden */\n  intersectsPoint(that: GeoPoint): boolean {\n    return R2Segment.contains(this.lng0, this.lat0, this.lng1, this.lat1, that.lng, that.lat);\n  }\n\n  /** @hidden */\n  intersectsSegment(that: GeoSegment): boolean {\n    return R2Segment.intersects(this.lng0, this.lat0, this.lng1 - this.lat0, this.lng1 - this.lat0,\n                                that.lng0, that.lat0, that.lng1 - that.lat0, that.lng1 - that.lat0);\n  }\n\n  override split(u: number): [GeoSegment, GeoSegment] {\n    const v = 1.0 - u;\n    const lng01 = v * this.lng0 + u * this.lng1;\n    const lat01 = v * this.lat0 + u * this.lat1;\n    const c0 = new GeoSegment(this.lng0, this.lat0, lng01, lat01);\n    const c1 = new GeoSegment(lng01, lat01, this.lng1, this.lat1);\n    return [c0, c1];\n  }\n\n  override project(f: GeoProjection): R2Segment {\n    const p0 = f.project(this.lng0, this.lat0);\n    const p1 = f.project(this.lng1, this.lat1);\n    return new R2Segment(p0.x, p0.y, p1.x, p1.y);\n  }\n\n  override forEachCoord<R>(callback: (lng: number, lat: number) => R | void): R | undefined;\n  override forEachCoord<R, S>(callback: (this: S, lng: number, lat: number) => R | void,\n                              thisArg: S): R | undefined;\n  override forEachCoord<R, S>(callback: (this: S | undefined, lng: number, lat: number) => R | undefined,\n                              thisArg?: S): R | undefined {\n    let result: R | void;\n    result = callback.call(thisArg, this.lng0, this.lat0);\n    if (result !== void 0) {\n      return result;\n    }\n    result = callback.call(thisArg, this.lng1, this.lat1);\n    if (result !== void 0) {\n      return result;\n    }\n    return void 0;\n  }\n\n  override forEachCoordRest<R>(callback: (lng: number, lat: number) => R | void): R | undefined;\n  override forEachCoordRest<R, S>(callback: (this: S, lng: number, lat: number) => R | void,\n                                  thisArg: S): R | undefined;\n  override forEachCoordRest<R, S>(callback: (this: S | undefined, lng: number, lat: number) => R | void,\n                                  thisArg?: S): R | undefined {\n    const result = callback.call(thisArg, this.lng1, this.lat1);\n    if (result !== void 0) {\n      return result;\n    }\n    return void 0;\n  }\n\n  toAny(): GeoSegmentInit {\n    return {\n      lng0: this.lng0,\n      lat0: this.lat0,\n      lng1: this.lng1,\n      lat1: this.lat1,\n    };\n  }\n\n  interpolateTo(that: GeoSegment): Interpolator<GeoSegment>;\n  interpolateTo(that: unknown): Interpolator<GeoSegment> | null;\n  interpolateTo(that: unknown): Interpolator<GeoSegment> | null {\n    if (that instanceof GeoSegment) {\n      return GeoSegmentInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoSegment) {\n      return Numbers.equivalent(this.lng0, that.lng0, epsilon)\n          && Numbers.equivalent(this.lat0, that.lat0, epsilon)\n          && Numbers.equivalent(this.lng1, that.lng1, epsilon)\n          && Numbers.equivalent(this.lat1, that.lat1, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoSegment) {\n      return this.lng0 === that.lng0 && this.lat0 === that.lat0\n          && this.lng1 === that.lng1 && this.lat1 === that.lat1;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Constructors.hash(GeoSegment), Numbers.hash(this.lng0)), Numbers.hash(this.lat0)),\n        Numbers.hash(this.lng1)), Numbers.hash(this.lat1)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"GeoSegment\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.lng0).write(\", \").debug(this.lat0).write(\", \")\n        .debug(this.lng1).write(\", \").debug(this.lat1).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static of(lng0: number, lat0: number, lng1: number, lat1: number): GeoSegment {\n    return new GeoSegment(lng0, lat0, lng1, lat1);\n  }\n\n  static fromInit(value: GeoSegmentInit): GeoSegment {\n    return new GeoSegment(value.lng0, value.lat0, value.lng1, value.lat1);\n  }\n\n  static override fromAny(value: AnyGeoSegment): GeoSegment {\n    if (value === void 0 || value === null || value instanceof GeoSegment) {\n      return value;\n    } else if (GeoSegment.isInit(value)) {\n      return GeoSegment.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is GeoSegmentInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as GeoSegmentInit;\n      return typeof init.lng0 === \"number\"\n          && typeof init.lat0 === \"number\"\n          && typeof init.lng1 === \"number\"\n          && typeof init.lat1 === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static override isAny(value: unknown): value is AnyGeoSegment {\n    return value instanceof GeoSegment\n        || GeoSegment.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {GeoSegment} from \"./GeoSegment\";\n\n/** @hidden */\nexport const GeoSegmentInterpolator = function (s0: GeoSegment, s1: GeoSegment): Interpolator<GeoSegment> {\n  const interpolator = function (u: number): GeoSegment {\n    const s0 = interpolator[0];\n    const s1 = interpolator[1];\n    const lng0 = s0.lng0 + u * (s1.lng0 - s0.lng0);\n    const lat0 = s0.lat0 + u * (s1.lat0 - s0.lat0);\n    const lng1 = s0.lng1 + u * (s1.lng1 - s0.lng1);\n    const lat1 = s0.lat1 + u * (s1.lat1 - s0.lat1);\n    return new GeoSegment(lng0, lat0, lng1, lat1);\n  } as Interpolator<GeoSegment>;\n  Object.setPrototypeOf(interpolator, GeoSegmentInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: s0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: s1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (s0: GeoSegment, s1: GeoSegment): Interpolator<GeoSegment>;\n\n  /** @hidden */\n  prototype: Interpolator<GeoSegment>;\n};\n\nGeoSegmentInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {R2Curve, R2Segment, R2Spline} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {AnyGeoShape, GeoShape} from \"./GeoShape\";\nimport {AnyGeoPoint, GeoPoint} from \"./GeoPoint\";\nimport {GeoCurve} from \"./GeoCurve\";\nimport {GeoSegment} from \"./GeoSegment\";\nimport {GeoSplineBuilder} from \"./\"; // forward import\nimport {GeoBox} from \"./\"; // forward import\n\nexport type AnyGeoSpline = GeoSpline | GeoSplinePoints;\n\nexport type GeoSplinePoints = ReadonlyArray<AnyGeoPoint>;\n\nexport class GeoSpline extends GeoCurve implements Debug {\n  constructor(curves: ReadonlyArray<GeoCurve>, closed: boolean) {\n    super();\n    Object.defineProperty(this, \"curves\", {\n      value: curves,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"closed\", {\n      value: closed,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"boundingBox\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly curves!: ReadonlyArray<GeoCurve>;\n\n  /** @hidden */\n  readonly closed!: boolean;\n\n  isDefined(): boolean {\n    return this.curves.length !== 0;\n  }\n\n  isClosed(): boolean {\n    return this.closed;\n  }\n\n  override get lngMin(): number {\n    return this.bounds.lngMin;\n  }\n\n  override get latMin(): number {\n    return this.bounds.latMin;\n  }\n\n  override get lngMax(): number {\n    return this.bounds.lngMax;\n  }\n\n  override get latMax(): number {\n    return this.bounds.latMax;\n  }\n\n  override interpolateLng(u: number): number {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return curves[k]!.interpolateLng(v);\n    } else {\n      return NaN;\n    }\n  }\n\n  override interpolateLat(u: number): number {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return curves[k]!.interpolateLat(v);\n    } else {\n      return NaN;\n    }\n  }\n\n  override interpolate(u: number): GeoPoint {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return curves[k]!.interpolate(v);\n    } else {\n      return new GeoPoint(NaN, NaN);\n    }\n  }\n\n  override contains(that: AnyGeoShape): boolean;\n  override contains(lng: number, lat: number): boolean;\n  override contains(that: AnyGeoShape | number, lat?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyGeoShape): boolean {\n    return false; // TODO\n  }\n\n  override split(u: number): [GeoSpline, GeoSpline] {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      const [c0, c1] = curves[k]!.split(v);\n      const curves0 = new Array<GeoCurve>(k + 1);\n      const curves1 = new Array<GeoCurve>(n - k);\n      for (let i = 0; i < k; i += 1) {\n        curves0[i] = curves[i]!;\n      }\n      curves0[k] = c0;\n      curves1[0] = c1;\n      for (let i = k + 1; i < n; i += 1) {\n        curves1[i - k] = curves[i]!;\n      }\n      return [new GeoSpline(curves0, false), new GeoSpline(curves1, false)];\n    } else {\n      return [GeoSpline.empty(), GeoSpline.empty()];\n    }\n  }\n\n  subdivide(u: number): GeoSpline {\n    const oldCurves = this.curves;\n    const n = oldCurves.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      const [c0, c1] = oldCurves[k]!.split(v);\n      const newCurves = new Array<GeoCurve>(n + 1);\n      for (let i = 0; i < k; i += 1) {\n        newCurves[i] = oldCurves[i]!;\n      }\n      newCurves[k] = c0;\n      newCurves[k + 1] = c1;\n      for (let i = k + 1; i < n; i += 1) {\n        newCurves[i + 1] = oldCurves[i]!;\n      }\n      return new GeoSpline(newCurves, this.closed);\n    } else {\n      return GeoSpline.empty();\n    }\n  }\n\n  override project(f: GeoProjection): R2Spline {\n    const oldCurves = this.curves;\n    const n = oldCurves.length;\n    if (n > 0) {\n      let i = 0;\n      const newCurves = new Array<R2Curve>(n);\n\n      // project leading adjacent segments\n      let curve = oldCurves[0]!;\n      if (curve instanceof GeoSegment) {\n        // project first point\n        let p0 = f.project(curve.lng0, curve.lat0);\n        while (i < n) {\n          curve = oldCurves[i]!;\n          if (curve instanceof GeoSegment) {\n            // project next point\n            const p1 = f.project(curve.lng1, curve.lat1);\n            newCurves[i] = new R2Segment(p0.x, p0.y, p1.x, p1.y);\n            p0 = p1;\n            i += 1;\n          } else {\n            break;\n          }\n        }\n      }\n\n      // project any remaining curves\n      while (i < n) {\n        curve = oldCurves[i]!;\n        newCurves[i] = curve.project(f);\n        i += 1;\n      }\n\n      return new R2Spline(newCurves, this.closed);\n    } else {\n      return R2Spline.empty();\n    }\n  }\n\n  /** @hidden */\n  readonly boundingBox!: GeoBox | null;\n\n  override get bounds(): GeoBox {\n    let boundingBox = this.boundingBox;\n    if (boundingBox === null) {\n      let lngMin = Infinity;\n      let latMin = Infinity;\n      let lngMax = -Infinity;\n      let latMax = -Infinity;\n      const curves = this.curves;\n      for (let i = 0, n = curves.length; i < n; i += 1) {\n        const curve = curves[i]!;\n        lngMin = Math.min(lngMin, curve.lngMin);\n        latMin = Math.min(latMin, curve.latMin);\n        lngMax = Math.max(curve.lngMax, lngMax);\n        latMax = Math.max(curve.latMax, latMax);\n      }\n      boundingBox = new GeoBox(lngMin, latMin, lngMax, latMax);\n      Object.defineProperty(this, \"boundingBox\", {\n        value: boundingBox,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return boundingBox;\n  }\n\n  override forEachCoord<R>(callback: (lng: number, lat: number) => R | void): R | undefined;\n  override forEachCoord<R, S>(callback: (this: S, lng: number, lat: number) => R | void,\n                              thisArg: S): R | undefined;\n  override forEachCoord<R, S>(callback: (this: S | undefined, lng: number, lat: number) => R | void,\n                              thisArg?: S): R | undefined {\n    const curves = this.curves;\n    const n = curves.length;\n    if (n > 0) {\n      let curve = curves[0]!;\n      let result = curve.forEachCoord(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n      for (let i = 1; i < n; i += 1) {\n        curve = curves[i]!;\n        result = curve.forEachCoordRest(callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n    }\n    return void 0;\n  }\n\n  override forEachCoordRest<R>(callback: (lng: number, lat: number) => R | void): R | undefined;\n  override forEachCoordRest<R, S>(callback: (this: S, lng: number, lat: number) => R | void,\n                                  thisArg: S): R | undefined;\n  override forEachCoordRest<R, S>(callback: (this: S | undefined, lng: number, lat: number) => R | void,\n                                  thisArg?: S): R | undefined {\n    const curves = this.curves;\n    for (let i = 0, n = curves.length; i < n; i += 1) {\n      const curve = curves[i]!;\n      const result = curve.forEachCoordRest(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoSpline) {\n      return Arrays.equivalent(this.curves, that.curves, epsilon)\n          && this.closed === that.closed;\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoSpline) {\n      return Arrays.equal(this.curves, that.curves)\n          && this.closed === that.closed;\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    const curves = this.curves;\n    const n = curves.length;\n    output = output.write(\"GeoSpline\").write(46/*'.'*/);\n    if (n === 0) {\n      output = output.write(\"empty\").write(40/*'('*/);\n    } else if (n !== 0) {\n      output = output.write(this.closed ? \"closed\" : \"open\").write(40/*'('*/);\n      output = output.debug(curves[0]!);\n      for (let i = 1; i < n; i += 1) {\n        output = output.write(\", \").debug(curves[i]!);\n      }\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static empty(): GeoSpline {\n    return new GeoSpline([], false);\n  }\n\n  static open(...curves: GeoCurve[]): GeoSpline {\n    return new GeoSpline(curves, false);\n  }\n\n  static closed(...curves: GeoCurve[]): GeoSpline {\n    return new GeoSpline(curves, true);\n  }\n\n  static fromPoints(points: GeoSplinePoints): GeoSpline {\n    const n = points.length;\n    if (n > 1) {\n      const curves = new Array<GeoCurve>(n - 1);\n      const p0 = GeoPoint.fromAny(points[0]!);\n      let p1 = p0;\n      for (let i = 1; i < n; i += 1) {\n        const p2 = GeoPoint.fromAny(points[i]!);\n        curves[i - 1] = new GeoSegment(p1.lng, p1.lat, p2.lng, p2.lat);\n        p1 = p2;\n      }\n      const closed = p0.equals(p1);\n      return new GeoSpline(curves, closed);\n    } else {\n      return GeoSpline.empty();\n    }\n  }\n\n  static override fromAny(value: AnyGeoSpline): GeoSpline;\n  static override fromAny(value: AnyGeoShape): GeoShape;\n  static override fromAny(value: AnyGeoSpline | AnyGeoShape): GeoShape {\n    if (value === void 0 || value === null || value instanceof GeoSpline) {\n      return value;\n    } else if (GeoSpline.isPoints(value)) {\n      return GeoSpline.fromPoints(value);\n    } else {\n      return GeoShape.fromAny(value);\n    }\n  }\n\n  static builder(): GeoSplineBuilder {\n    return new GeoSplineBuilder();\n  }\n\n  /** @hidden */\n  static isPoints(value: unknown): value is GeoSplinePoints {\n    return Array.isArray(value)\n        && value.length >= 2\n        && GeoPoint.isAny(value[0]!);\n  }\n\n  /** @hidden */\n  static isAnySpline(value: unknown): value is AnyGeoSpline {\n    return value instanceof GeoSpline\n        || GeoSpline.isPoints(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {GeoCurve} from \"./GeoCurve\";\nimport {GeoSegment} from \"./GeoSegment\";\nimport type {GeoSplineContext} from \"./GeoSplineContext\";\nimport {GeoSpline} from \"./GeoSpline\";\n\nexport class GeoSplineBuilder implements GeoSplineContext {\n  /** @hidden */\n  curves: GeoCurve[];\n  /** @hidden */\n  closed: boolean;\n  /** @hidden */\n  aliased: boolean;\n  /** @hidden */\n  lng0: number;\n  /** @hidden */\n  lat0: number;\n  /** @hidden */\n  lng: number;\n  /** @hidden */\n  lat: number;\n\n  constructor() {\n    this.curves = [];\n    this.closed = false;\n    this.aliased = false;\n    this.lng0 = 0;\n    this.lat0 = 0;\n    this.lng = 0;\n    this.lat = 0;\n  }\n\n  private dealias(): void {\n    if (this.aliased) {\n      this.curves = this.curves.slice(0);\n      this.aliased = false;\n    }\n  }\n\n  moveTo(lng: number, lat: number): void {\n    if (this.aliased) {\n      this.curves = [];\n      this.aliased = false;\n    } else {\n      this.curves.length = 0;\n    }\n    this.closed = false;\n    this.lng0 = lng;\n    this.lat0 = lat;\n    this.lng = lng;\n    this.lat = lat;\n  }\n\n  closePath(): void {\n    this.dealias();\n    this.curves.push(new GeoSegment(this.lng, this.lat, this.lng0, this.lat0));\n    this.closed = true;\n    this.lng = this.lng0;\n    this.lat = this.lat0;\n  }\n\n  lineTo(lng: number, lat: number): void {\n    this.dealias();\n    this.curves.push(new GeoSegment(this.lng, this.lat, lng, lat));\n    this.lng = lng;\n    this.lat = lat;\n  }\n\n  bind(): GeoSpline {\n    this.aliased = true;\n    return new GeoSpline(this.curves, this.closed);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, Equals, Arrays} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {R2Spline, R2Path} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {AnyGeoShape, GeoShape} from \"./GeoShape\";\nimport {GeoPoint} from \"./GeoPoint\";\nimport type {GeoCurve} from \"./GeoCurve\";\nimport {AnyGeoSpline, GeoSplinePoints, GeoSpline} from \"./GeoSpline\";\nimport {GeoPathBuilder} from \"./\"; // forward import\nimport {GeoBox} from \"./\"; // forward import\n\nexport type AnyGeoPath = GeoPath | GeoPathSplines | AnyGeoSpline;\n\nexport type GeoPathSplines = ReadonlyArray<AnyGeoSpline>;\n\nexport class GeoPath extends GeoShape implements Equals, Equivalent, Debug {\n  constructor(splines: ReadonlyArray<GeoSpline>) {\n    super();\n    Object.defineProperty(this, \"splines\", {\n      value: splines,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"boundingBox\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return this.splines.length !== 0;\n  }\n\n  readonly splines!: ReadonlyArray<GeoSpline>;\n\n  override get lngMin(): number {\n    return this.bounds.lngMin;\n  }\n\n  override get latMin(): number {\n    return this.bounds.latMin;\n  }\n\n  override get lngMax(): number {\n    return this.bounds.lngMax;\n  }\n\n  override get latMax(): number {\n    return this.bounds.latMax;\n  }\n\n  interpolateLng(u: number): number {\n    const splines = this.splines;\n    const n = splines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return splines[k]!.interpolateLng(v);\n    } else {\n      return NaN;\n    }\n  }\n\n  interpolateLat(u: number): number {\n    const splines = this.splines;\n    const n = splines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return splines[k]!.interpolateLat(v);\n    } else {\n      return NaN;\n    }\n  }\n\n  interpolate(u: number): GeoPoint {\n    const splines = this.splines;\n    const n = splines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      return splines[k]!.interpolate(v);\n    } else {\n      return new GeoPoint(NaN, NaN);\n    }\n  }\n\n  override contains(that: AnyGeoShape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyGeoShape | number, y?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyGeoShape): boolean {\n    return false; // TODO\n  }\n\n  split(u: number): [GeoPath, GeoPath] {\n    const splines = this.splines;\n    const n = splines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      const [s0, s1] = splines[k]!.split(v);\n      const splines0 = new Array<GeoSpline>(k + 1);\n      const splines1 = new Array<GeoSpline>(n - k);\n      for (let i = 0; i < k; i += 1) {\n        splines0[i] = splines[i]!;\n      }\n      splines0[k] = s0;\n      splines1[0] = s1;\n      for (let i = k + 1; i < n; i += 1) {\n        splines1[i - k] = splines[i]!;\n      }\n      return [new GeoPath(splines0), new GeoPath(splines1)];\n    } else {\n      return [GeoPath.empty(), GeoPath.empty()];\n    }\n  }\n\n  subdivide(u: number): GeoPath {\n    const oldSplines = this.splines;\n    const n = oldSplines.length;\n    if (n > 0) {\n      const l = 1 / n;\n      const k = Math.min(Math.max(0, Math.floor(u / l)), n);\n      const v = u * n - k * l;\n      const newSplines = new Array<GeoSpline>(n);\n      for (let i = 0; i < k; i += 1) {\n        newSplines[i] = oldSplines[i]!;\n      }\n      newSplines[k] = oldSplines[k]!.subdivide(v);\n      for (let i = k + 1; i < n; i += 1) {\n        newSplines[i] = oldSplines[i]!;\n      }\n      return new GeoPath(newSplines);\n    } else {\n      return GeoPath.empty();\n    }\n  }\n\n  override project(f: GeoProjection): R2Path {\n    const oldSplines = this.splines;\n    const n = oldSplines.length;\n    if (n > 0) {\n      const newSplines = new Array<R2Spline>(n);\n      for (let i = 0; i < n; i += 1) {\n        newSplines[i] = oldSplines[i]!.project(f);\n      }\n      return new R2Path(newSplines);\n    } else {\n      return R2Path.empty();\n    }\n  }\n\n  /** @hidden */\n  readonly boundingBox!: GeoBox | null;\n\n  override get bounds(): GeoBox {\n    let boundingBox = this.boundingBox;\n    if (boundingBox === null) {\n      let lngMin = Infinity;\n      let latMin = Infinity;\n      let lngMax = -Infinity;\n      let latMax = -Infinity;\n      const splines = this.splines;\n      for (let i = 0, n = splines.length; i < n; i += 1) {\n        const spline = splines[i]!;\n        lngMin = Math.min(lngMin, spline.lngMin);\n        latMin = Math.min(latMin, spline.latMin);\n        lngMax = Math.max(spline.lngMax, lngMax);\n        latMax = Math.max(spline.latMax, latMax);\n      }\n      boundingBox = new GeoBox(lngMin, latMin, lngMax, latMax);\n      Object.defineProperty(this, \"boundingBox\", {\n        value: boundingBox,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return boundingBox;\n  }\n\n  centroid(): GeoPoint {\n    let lngSum = 0;\n    let latSum = 0;\n    let n = 0;\n    this.forEachCoord(function (lng: number, lat: number): void {\n      lngSum += lng;\n      latSum += lat;\n      n += 1;\n    }, this);\n    if (n !== 0) {\n      return new GeoPoint(lngSum / n, latSum / n);\n    } else {\n      return GeoPoint.undefined();\n    }\n  }\n\n  forEachCoord<R>(callback: (lng: number, lat: number) => R | void): R | undefined;\n  forEachCoord<R, S>(callback: (this: S, lng: number, lat: number) => R | void,\n                     thisArg: S): R | undefined;\n  forEachCoord<R, S>(callback: (this: S | undefined, lng: number, lat: number) => R | void,\n                     thisArg?: S): R | undefined {\n    const splines = this.splines;\n    for (let i = 0, n = splines.length; i < n; i += 1) {\n      const spline = splines[i]!;\n      const result = spline.forEachCoord(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoPath) {\n      return Arrays.equivalent(this.splines, that.splines, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoPath) {\n      return Arrays.equal(this.splines, that.splines);\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    const splines = this.splines;\n    const n = splines.length;\n    output = output.write(\"GeoPath\").write(46/*'.'*/);\n    if (n === 0) {\n      output = output.write(\"empty\").write(40/*'('*/);\n    } else if (n === 1) {\n      const spline = splines[0]!;\n      output = output.write(spline.closed ? \"closed\" : \"open\").write(40/*'('*/);\n      const curves = spline.curves;\n      const m = curves.length;\n      if (m !== 0) {\n        output = output.debug(curves[0]!);\n        for (let i = 1; i < m; i += 1) {\n          output = output.write(\", \").debug(curves[i]!);\n        }\n      }\n    } else {\n      output = output.write(\"of\").write(40/*'('*/);\n      output = output.debug(splines[0]!);\n      for (let i = 1; i < n; i += 1) {\n        output = output.write(\", \").debug(splines[i]!);\n      }\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static empty(): GeoPath {\n    return new GeoPath([]);\n  }\n\n  static of(...splines: GeoSpline[]): GeoPath {\n    return new GeoPath(splines);\n  }\n\n  static open(...curves: GeoCurve[]): GeoPath {\n    return new GeoPath([new GeoSpline(curves, false)]);\n  }\n\n  static closed(...curves: GeoCurve[]): GeoPath {\n    return new GeoPath([new GeoSpline(curves, true)]);\n  }\n\n  static fromPoints(points: GeoSplinePoints): GeoPath {\n    return new GeoPath([GeoSpline.fromPoints(points)]);\n  }\n\n  static fromSplines(values: GeoPathSplines): GeoPath {\n    const n = values.length;\n    const splines = new Array<GeoSpline>(n);\n    for (let i = 0; i < n; i += 1) {\n      splines[i] = GeoSpline.fromAny(values[i]!);\n    }\n    return new GeoPath(splines);\n  }\n\n  static override fromAny(value: AnyGeoPath): GeoPath;\n  static override fromAny(value: AnyGeoShape): GeoShape;\n  static override fromAny(value: AnyGeoPath | AnyGeoShape): GeoShape {\n    if (value === void 0 || value === null || value instanceof GeoPath) {\n      return value;\n    } else if (GeoPath.isSplines(value)) {\n      return GeoPath.fromSplines(value);\n    } else if (GeoSpline.isAnySpline(value)) {\n      return GeoPath.of(GeoSpline.fromAny(value));\n    } else {\n      return GeoShape.fromAny(value);\n    }\n  }\n\n  static builder(): GeoPathBuilder {\n    return new GeoPathBuilder();\n  }\n\n  /** @hidden */\n  static isSplines(value: unknown): value is GeoPathSplines {\n    return Array.isArray(value)\n        && value.length > 0\n        && GeoSpline.isAnySpline(value[0]!);\n  }\n\n  /** @hidden */\n  static isAnyPath(value: unknown): value is AnyGeoPath {\n    return value instanceof GeoPath\n        || GeoPath.isSplines(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {GeoSpline} from \"./GeoSpline\";\nimport {GeoSplineBuilder} from \"./GeoSplineBuilder\";\nimport type {GeoPathContext} from \"./GeoPathContext\";\nimport {GeoPath} from \"./GeoPath\";\n\nexport class GeoPathBuilder implements GeoPathContext {\n  /** @hidden */\n  splines: GeoSpline[];\n  /** @hidden */\n  builder: GeoSplineBuilder | null;\n\n  constructor() {\n    this.splines = [];\n    this.builder = null;\n  }\n\n  moveTo(lng: number, lat: number): void {\n    let builder = this.builder;\n    if (builder !== null) {\n      const spline = builder.bind();\n      if (spline.isDefined()) {\n        this.splines.push(spline);\n      }\n    }\n    builder = new GeoSplineBuilder();\n    this.builder = builder;\n    builder.moveTo(lng, lat);\n  }\n\n  closePath(): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.closePath();\n    } else {\n      throw new Error();\n    }\n  }\n\n  lineTo(lng: number, lat: number): void {\n    const builder = this.builder;\n    if (builder !== null) {\n      builder.lineTo(lng, lat);\n    } else {\n      throw new Error();\n    }\n  }\n\n  bind(): GeoPath {\n    const splines = this.splines.slice(0);\n    const builder = this.builder;\n    if (builder !== null) {\n      const spline = builder.bind();\n      if (spline.isDefined()) {\n        splines.push(spline);\n      }\n    }\n    return new GeoPath(splines);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, HashCode, Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport {R2Box} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {AnyGeoShape, GeoShape} from \"./GeoShape\";\nimport {AnyGeoPoint, GeoPoint} from \"./GeoPoint\";\nimport {GeoSegment} from \"./GeoSegment\";\nimport {GeoTile} from \"./GeoTile\";\nimport {GeoBoxInterpolator} from \"./\"; // forward import\n\nexport type AnyGeoBox = GeoBox | GeoBoxInit;\n\nexport interface GeoBoxInit {\n  lngMin: number;\n  latMin: number;\n  lngMax: number;\n  latMax: number;\n}\n\nexport class GeoBox extends GeoShape implements Interpolate<GeoBox>, HashCode, Equivalent, Debug {\n  constructor(lngMin: number, latMin: number, lngMax: number, latMax: number) {\n    super();\n    Object.defineProperty(this, \"lngMin\", {\n      value: lngMin,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"latMin\", {\n      value: latMin,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lngMax\", {\n      value: lngMax,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"latMax\", {\n      value: latMax,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(this.lngMin) && isFinite(this.latMin)\n        && isFinite(this.lngMax) && isFinite(this.latMax);\n  }\n\n  readonly lngMin!: number;\n\n  readonly latMin!: number;\n\n  readonly lngMax!: number;\n\n  readonly latMax!: number;\n\n  get west(): number {\n    return this.lngMin;\n  }\n\n  get south(): number {\n    return this.latMin;\n  }\n\n  get east(): number {\n    return this.lngMax;\n  }\n\n  get north(): number {\n    return this.latMax;\n  }\n\n  get southWest(): GeoPoint {\n    return new GeoPoint(this.lngMin, this.latMin);\n  }\n\n  get northWest(): GeoPoint {\n    return new GeoPoint(this.lngMin, this.latMax);\n  }\n\n  get southEast(): GeoPoint {\n    return new GeoPoint(this.lngMax, this.latMin);\n  }\n\n  get northEast(): GeoPoint {\n    return new GeoPoint(this.lngMax, this.latMax);\n  }\n\n  get center(): GeoPoint {\n    return new GeoPoint((this.lngMin + this.lngMax) / 2,\n                        (this.latMin + this.latMax) / 2);\n  }\n\n  override contains(that: AnyGeoPoint | AnyGeoBox): boolean;\n  override contains(lng: number, lat: number): boolean;\n  override contains(that: AnyGeoPoint | AnyGeoBox | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      return this.lngMin <= that && that <= this.lngMax\n          && this.latMin <= y! && y! <= this.latMax;\n    } else if (GeoPoint.isAny(that)) {\n      return this.containsPoint(GeoPoint.fromAny(that));\n    } else if (GeoSegment.isAny(that)) {\n      return this.containsSegment(GeoSegment.fromAny(that));\n    } else if (GeoTile.isAny(that)) {\n      return this.containsTile(GeoTile.fromAny(that));\n    } else if (GeoBox.isAny(that)) {\n      return this.containsBox(GeoBox.fromAny(that));\n    } else {\n      throw new TypeError(\"\" + that);\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: GeoPoint): boolean {\n    return this.lngMin <= that.lng && that.lng <= this.lngMax\n        && this.latMin <= that.lat && that.lat <= this.latMax;\n  }\n\n  /** @hidden */\n  containsSegment(that: GeoSegment): boolean {\n    return this.lngMin <= that.lng0 && that.lng0 <= this.lngMax\n        && this.latMin <= that.lat0 && that.lat0 <= this.latMax\n        && this.lngMin <= that.lng1 && that.lng1 <= this.lngMax\n        && this.latMin <= that.lat1 && that.lat1 <= this.latMax;\n  }\n\n  /** @hidden */\n  containsTile(that: GeoTile): boolean {\n    return this.lngMin <= that.lngMin && that.lngMax <= this.lngMax\n        && this.latMin <= that.latMin && that.latMax <= this.latMax;\n  }\n\n  /** @hidden */\n  containsBox(that: GeoBox): boolean {\n    return this.lngMin <= that.lngMin && that.lngMax <= this.lngMax\n        && this.latMin <= that.latMin && that.latMax <= this.latMax;\n  }\n\n  override intersects(that: AnyGeoPoint | AnyGeoBox): boolean {\n    if (GeoPoint.isAny(that)) {\n      return this.intersectsPoint(GeoPoint.fromAny(that));\n    } else if (GeoSegment.isAny(that)) {\n      return this.intersectsSegment(GeoSegment.fromAny(that));\n    } else if (GeoTile.isAny(that)) {\n      return this.intersectsTile(GeoTile.fromAny(that));\n    } else if (GeoBox.isAny(that)) {\n      return this.intersectsBox(GeoBox.fromAny(that));\n    } else {\n      throw new TypeError(\"\" + that);\n    }\n  }\n\n  /** @hidden */\n  intersectsPoint(that: GeoPoint): boolean {\n    return this.lngMin <= that.lng && that.lng <= this.lngMax\n        && this.latMin <= that.lat && that.lat <= this.latMax;\n  }\n\n  /** @hidden */\n  intersectsSegment(that: GeoSegment): boolean {\n    const lngMin = this.lngMin;\n    const latMin = this.latMin;\n    const lngMax = this.lngMax;\n    const latMax = this.latMax;\n    const lng0 = that.lng0;\n    const lat0 = that.lat0;\n    const lng1 = that.lng1;\n    const lat1 = that.lat1;\n    if (lng0 < lngMin && lng1 < lngMin || lng0 > lngMax && lng1 > lngMax ||\n        lat0 < latMin && lat1 < latMin || lat0 > latMax && lat1 > latMax) {\n      return false;\n    } else if (lng0 > lngMin && lng0 < lngMax && lat0 > latMin && lat0 < latMax) {\n      return true;\n    } else if ((R2Box.intersectsSegment(lng0 - lngMin, lng1 - lngMin, lng0, lat0, lng1, lat1) && R2Box.hitY > latMin && R2Box.hitY < latMax)\n            || (R2Box.intersectsSegment(lat0 - latMin, lat1 - latMin, lng0, lat0, lng1, lat1) && R2Box.hitX > lngMin && R2Box.hitX < lngMax)\n            || (R2Box.intersectsSegment(lng0 - lngMax, lng1 - lngMax, lng0, lat0, lng1, lat1) && R2Box.hitY > latMin && R2Box.hitY < latMax)\n            || (R2Box.intersectsSegment(lat0 - latMax, lat1 - latMax, lng0, lat0, lng1, lat1) && R2Box.hitX > lngMin && R2Box.hitX < lngMax)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @hidden */\n  intersectsTile(that: GeoTile): boolean {\n    return this.lngMin <= that.lngMax && that.lngMin <= this.lngMax\n        && this.latMin <= that.latMax && that.latMin <= this.latMax;\n  }\n\n  /** @hidden */\n  intersectsBox(that: GeoBox): boolean {\n    return this.lngMin <= that.lngMax && that.lngMin <= this.lngMax\n        && this.latMin <= that.latMax && that.latMin <= this.latMax;\n  }\n\n  override union(that: AnyGeoShape): GeoBox {\n    return super.union(that) as GeoBox;\n  }\n\n  override project(f: GeoProjection): R2Box {\n    const bottomLeft = f.project(this.lngMin, this.latMin);\n    const topRight = f.project(this.lngMax, this.latMax);\n    let xMin = bottomLeft.x;\n    let yMin = bottomLeft.y;\n    let xMax = topRight.x;\n    let yMax = topRight.y;\n    if (xMin > xMax) {\n      const x = xMin;\n      xMin = xMax;\n      xMax = x;\n    }\n    if (yMin > yMax) {\n      const y = yMin;\n      yMin = yMax;\n      yMax = y;\n    }\n    if (!isFinite(xMin)) {\n      xMin = -Infinity;\n    }\n    if (!isFinite(yMin)) {\n      yMin = -Infinity;\n    }\n    if (!isFinite(xMax)) {\n      xMax = Infinity;\n    }\n    if (!isFinite(yMax)) {\n      yMax = Infinity;\n    }\n    return new R2Box(xMin, yMin, xMax, yMax);\n  }\n\n  override get bounds(): GeoBox {\n    return this;\n  }\n\n  toAny(): GeoBoxInit {\n    return {\n      lngMin: this.lngMin,\n      latMin: this.latMin,\n      lngMax: this.lngMax,\n      latMax: this.latMax,\n    };\n  }\n\n  interpolateTo(that: GeoBox): Interpolator<GeoBox>;\n  interpolateTo(that: unknown): Interpolator<GeoBox> | null;\n  interpolateTo(that: unknown): Interpolator<GeoBox> | null {\n    if (that instanceof GeoBox) {\n      return GeoBoxInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoBox) {\n      return Numbers.equivalent(this.lngMin, that.lngMin, epsilon)\n          && Numbers.equivalent(this.latMin, that.latMin, epsilon)\n          && Numbers.equivalent(this.lngMax, that.lngMax, epsilon)\n          && Numbers.equivalent(this.latMax, that.latMax, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoBox) {\n      return this.lngMin === that.lngMin && this.latMin === that.latMin\n          && this.lngMax === that.lngMax && this.latMax === that.latMax;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Constructors.hash(GeoBox), Numbers.hash(this.lngMin)), Numbers.hash(this.latMin)),\n        Numbers.hash(this.lngMax)), Numbers.hash(this.latMax)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"GeoBox\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.lngMin).write(\", \").debug(this.latMin).write(\", \")\n        .debug(this.lngMax).write(\", \").debug(this.latMax).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static undefined(): GeoBox {\n    return new GeoBox(Infinity, Infinity, -Infinity, -Infinity);\n  }\n\n  @Lazy\n  static globe(): GeoBox {\n    return new GeoBox(-180, -90, 180, 90);\n  }\n\n  static of(lngMin: number, latMin: number, lngMax?: number, latMax?: number): GeoBox {\n    if (lngMax === void 0) {\n      lngMax = lngMin;\n    }\n    if (latMax === void 0) {\n      latMax = latMin;\n    }\n    return new GeoBox(lngMin, latMin, lngMax, latMax);\n  }\n\n  static fromInit(value: GeoBoxInit): GeoBox {\n    return new GeoBox(value.lngMin, value.latMin, value.lngMax, value.latMax);\n  }\n\n  static override fromAny(value: AnyGeoBox): GeoBox {\n    if (value === void 0 || value === null || value instanceof GeoBox) {\n      return value;\n    } else if (GeoBox.isInit(value)) {\n      return GeoBox.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is GeoBoxInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as GeoBoxInit;\n      return typeof init.lngMin === \"number\"\n          && typeof init.latMin === \"number\"\n          && typeof init.lngMax === \"number\"\n          && typeof init.latMax === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static override isAny(value: unknown): value is AnyGeoBox {\n    return value instanceof GeoBox\n        || GeoBox.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, HashCode, Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {R2Box} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {AnyGeoShape, GeoShape} from \"./GeoShape\";\nimport {GeoPoint} from \"./GeoPoint\";\nimport {GeoBox} from \"./GeoBox\";\nimport {GeoSegment} from \"./GeoSegment\";\n\nexport type AnyGeoTile = GeoTile | GeoTileInit | GeoTileTuple;\n\nexport interface GeoTileInit {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport type GeoTileTuple = [number, number, number];\n\nexport class GeoTile extends GeoShape implements HashCode, Equivalent, Debug {\n  constructor(x: number, y: number, z: number) {\n    super();\n    Object.defineProperty(this, \"x\", {\n      value: x,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"y\", {\n      value: y,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"z\", {\n      value: z,\n      enumerable: true,\n    });\n  }\n\n  readonly x!: number;\n\n  readonly y!: number;\n\n  readonly z!: number;\n\n  override get lngMin(): number {\n    return GeoTile.unprojectX(this.x / (1 << this.z));\n  }\n\n  override get latMin(): number {\n    return GeoTile.unprojectY(this.y / (1 << this.z));\n  }\n\n  override get lngMax(): number {\n    return GeoTile.unprojectX((this.x + 1) / (1 << this.z));\n  }\n\n  override get latMax(): number {\n    return GeoTile.unprojectY((this.y + 1) / (1 << this.z));\n  }\n\n  get west(): number {\n    return this.lngMin;\n  }\n\n  get south(): number {\n    return this.latMin;\n  }\n\n  get east(): number {\n    return this.lngMax;\n  }\n\n  get north(): number {\n    return this.latMax;\n  }\n\n  get southWest(): GeoPoint {\n    return new GeoPoint(this.lngMin, this.latMin);\n  }\n\n  get northWest(): GeoPoint {\n    return new GeoPoint(this.lngMin, this.latMax);\n  }\n\n  get southEast(): GeoPoint {\n    return new GeoPoint(this.lngMax, this.latMin);\n  }\n\n  get northEast(): GeoPoint {\n    return new GeoPoint(this.lngMax, this.latMax);\n  }\n\n  get center(): GeoPoint {\n    return new GeoPoint((this.lngMin + this.lngMax) / 2,\n                        (this.latMin + this.latMax) / 2);\n  }\n\n  get southWestTile(): GeoTile {\n    return new GeoTile(this.x * 2, this.y * 2, this.z + 1);\n  }\n\n  get northWestTile(): GeoTile {\n    return new GeoTile(this.x * 2, this.y * 2 + 1, this.z + 1);\n  }\n\n  get southEastTile(): GeoTile {\n    return new GeoTile(this.x * 2 + 1, this.y * 2, this.z + 1);\n  }\n\n  get northEastTile(): GeoTile {\n    return new GeoTile(this.x * 2 + 1, this.y * 2 + 1, this.z + 1);\n  }\n\n  get parentTile(): GeoTile {\n    return new GeoTile(this.x >> 1, this.y >> 1, this.z - 1);\n  }\n\n  override contains(that: AnyGeoShape): boolean;\n  override contains(lng: number, lat: number): boolean;\n  override contains(that: AnyGeoShape | number, lat?: number): boolean {\n    if (typeof that === \"number\") {\n      return this.lngMin <= that && that <= this.lngMax\n          && this.latMin <= lat! && lat! <= this.latMax;\n    } else if (GeoPoint.isAny(that)) {\n      return this.containsPoint(GeoPoint.fromAny(that));\n    } else if (GeoSegment.isAny(that)) {\n      return this.containsSegment(GeoSegment.fromAny(that));\n    } else if (GeoTile.isAny(that)) {\n      return this.containsTile(GeoTile.fromAny(that));\n    } else if (GeoBox.isAny(that)) {\n      return this.containsBox(GeoBox.fromAny(that));\n    } else {\n      throw new TypeError(\"\" + that);\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: GeoPoint): boolean {\n    return this.lngMin <= that.lng && that.lng <= this.lngMax\n        && this.latMin <= that.lat && that.lat <= this.latMax;\n  }\n\n  /** @hidden */\n  containsSegment(that: GeoSegment): boolean {\n    return this.lngMin <= that.lng0 && that.lng0 <= this.lngMax\n        && this.latMin <= that.lat0 && that.lat0 <= this.latMax\n        && this.lngMin <= that.lng1 && that.lng1 <= this.lngMax\n        && this.latMin <= that.lat1 && that.lat1 <= this.latMax;\n  }\n\n  /** @hidden */\n  containsTile(that: GeoTile): boolean {\n    return this.lngMin <= that.lngMin && that.lngMax <= this.lngMax\n        && this.latMin <= that.latMin && that.latMax <= this.latMax;\n  }\n\n  /** @hidden */\n  containsBox(that: GeoBox): boolean {\n    return this.lngMin <= that.lngMin && that.lngMax <= this.lngMax\n        && this.latMin <= that.latMin && that.latMax <= this.latMax;\n  }\n\n  override intersects(that: AnyGeoShape): boolean {\n    if (GeoPoint.isAny(that)) {\n      return this.intersectsPoint(GeoPoint.fromAny(that));\n    } else if (GeoSegment.isAny(that)) {\n      return this.intersectsSegment(GeoSegment.fromAny(that));\n    } else if (GeoTile.isAny(that)) {\n      return this.intersectsTile(GeoTile.fromAny(that));\n    } else if (GeoBox.isAny(that)) {\n      return this.intersectsBox(GeoBox.fromAny(that));\n    } else {\n      throw new TypeError(\"\" + that);\n    }\n  }\n\n  /** @hidden */\n  intersectsPoint(that: GeoPoint): boolean {\n    return this.lngMin <= that.lng && that.lng <= this.lngMax\n        && this.latMin <= that.lat && that.lat <= this.latMax;\n  }\n\n  /** @hidden */\n  intersectsSegment(that: GeoSegment): boolean {\n    const lngMin = this.lngMin;\n    const latMin = this.latMin;\n    const lngMax = this.lngMax;\n    const latMax = this.latMax;\n    const lng0 = that.lng0;\n    const lat0 = that.lat0;\n    const lng1 = that.lng1;\n    const lat1 = that.lat1;\n    if (lng0 < lngMin && lng1 < lngMin || lng0 > lngMax && lng1 > lngMax ||\n        lat0 < latMin && lat1 < latMin || lat0 > latMax && lat1 > latMax) {\n      return false;\n    } else if (lng0 > lngMin && lng0 < lngMax && lat0 > latMin && lat0 < latMax) {\n      return true;\n    } else if ((R2Box.intersectsSegment(lng0 - lngMin, lng1 - lngMin, lng0, lat0, lng1, lat1) && R2Box.hitY > latMin && R2Box.hitY < latMax)\n            || (R2Box.intersectsSegment(lat0 - latMin, lat1 - latMin, lng0, lat0, lng1, lat1) && R2Box.hitX > lngMin && R2Box.hitX < lngMax)\n            || (R2Box.intersectsSegment(lng0 - lngMax, lng1 - lngMax, lng0, lat0, lng1, lat1) && R2Box.hitY > latMin && R2Box.hitY < latMax)\n            || (R2Box.intersectsSegment(lat0 - latMax, lat1 - latMax, lng0, lat0, lng1, lat1) && R2Box.hitX > lngMin && R2Box.hitX < lngMax)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @hidden */\n  intersectsTile(that: GeoTile): boolean {\n    return this.lngMin <= that.lngMax && that.lngMin <= this.lngMax\n        && this.latMin <= that.latMax && that.latMin <= this.latMax;\n  }\n\n  /** @hidden */\n  intersectsBox(that: GeoBox): boolean {\n    return this.lngMin <= that.lngMax && that.lngMin <= this.lngMax\n        && this.latMin <= that.latMax && that.latMin <= this.latMax;\n  }\n\n  override project(f: GeoProjection): R2Box {\n    const bottomLeft = f.project(this.lngMin, this.latMin);\n    const topRight = f.project(this.lngMax, this.latMax);\n    let xMin = bottomLeft.x;\n    let yMin = bottomLeft.y;\n    let xMax = topRight.x;\n    let yMax = topRight.y;\n    if (xMin > xMax) {\n      const x = xMin;\n      xMin = xMax;\n      xMax = x;\n    }\n    if (yMin > yMax) {\n      const y = yMin;\n      yMin = yMax;\n      yMax = y;\n    }\n    if (!isFinite(xMin)) {\n      xMin = -Infinity;\n    }\n    if (!isFinite(yMin)) {\n      yMin = -Infinity;\n    }\n    if (!isFinite(xMax)) {\n      xMax = Infinity;\n    }\n    if (!isFinite(yMax)) {\n      yMax = Infinity;\n    }\n    return new R2Box(xMin, yMin, xMax, yMax);\n  }\n\n  toAny(): GeoTileInit {\n    return {\n      x: this.x,\n      y: this.y,\n      z: this.z,\n    };\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoTile) {\n      return Numbers.equivalent(this.x, that.x, epsilon)\n          && Numbers.equivalent(this.y, that.y, epsilon)\n          && Numbers.equivalent(this.z, that.z, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoTile) {\n      return this.x === that.x && this.y === that.y && this.z === that.z;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Constructors.hash(GeoTile),\n        Numbers.hash(this.x)), Numbers.hash(this.y)), Numbers.hash(this.z)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"GeoTile\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this.x).write(\", \").debug(this.y).write(\", \").debug(this.z).write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static root(): GeoTile {\n    return new GeoTile(0, 0, 0);\n  }\n\n  static of(x: number, y: number, z: number): GeoTile {\n    return new GeoTile(x, y, z);\n  }\n\n  static fromInit(value: GeoTileInit): GeoTile {\n    return new GeoTile(value.x, value.y, value.z);\n  }\n\n  static fromTuple(value: GeoTileTuple): GeoTile {\n    return new GeoTile(value[0], value[1], value[2]);\n  }\n\n  static override fromAny(value: AnyGeoTile): GeoTile {\n    if (value === void 0 || value === null || value instanceof GeoTile) {\n      return value;\n    } else if (GeoTile.isInit(value)) {\n      return GeoTile.fromInit(value);\n    } else if (GeoTile.isTuple(value)) {\n      return GeoTile.fromTuple(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is GeoTileInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as GeoTileInit;\n      return typeof init.x === \"number\"\n          && typeof init.y === \"number\"\n          && typeof init.z === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isTuple(value: unknown): value is GeoTileTuple {\n    return Array.isArray(value)\n        && value.length === 3\n        && typeof value[0] === \"number\"\n        && typeof value[1] === \"number\"\n        && typeof value[2] === \"number\";\n  }\n\n  /** @hidden */\n  static override isAny(value: unknown): value is AnyGeoTile {\n    return value instanceof GeoTile\n        || GeoTile.isInit(value)\n        || GeoTile.isTuple(value);\n  }\n\n  /** @hidden */\n  static unprojectX(x: number): number {\n    return (x * Math.PI * 2 - Math.PI) * (180 / Math.PI);\n  }\n\n  /** @hidden */\n  static unprojectY(y: number): number {\n    return (Math.atan(Math.exp(y * Math.PI * 2 - Math.PI)) * 2 - Math.PI / 2) * (180 / Math.PI);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {GeoBox} from \"./GeoBox\";\n\n/** @hidden */\nexport const GeoBoxInterpolator = function (s0: GeoBox, s1: GeoBox): Interpolator<GeoBox> {\n  const interpolator = function (u: number): GeoBox {\n    const s0 = interpolator[0];\n    const s1 = interpolator[1];\n    const lngMin = s0.lngMin + u * (s1.lngMin - s0.lngMin);\n    const latMin = s0.latMin + u * (s1.latMin - s0.latMin);\n    const lngMax = s0.lngMax + u * (s1.lngMax - s0.lngMax);\n    const latMax = s0.latMax + u * (s1.latMax - s0.latMax);\n    return new GeoBox(lngMin, latMin, lngMax, latMax);\n  } as Interpolator<GeoBox>;\n  Object.setPrototypeOf(interpolator, GeoBoxInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: s0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: s1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (s0: GeoBox, s1: GeoBox): Interpolator<GeoBox>;\n\n  /** @hidden */\n  prototype: Interpolator<GeoBox>;\n};\n\nGeoBoxInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, Equals, Lazy, Arrays} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {R2Shape, R2Group} from \"@swim/math\";\nimport type {GeoProjection} from \"./GeoProjection\";\nimport {AnyGeoShape, GeoShape} from \"./GeoShape\";\nimport {GeoBox} from \"./GeoBox\";\n\nexport class GeoGroup<S extends GeoShape = GeoShape> extends GeoShape implements Equals, Equivalent, Debug {\n  constructor(shapes: ReadonlyArray<S>) {\n    super();\n    Object.defineProperty(this, \"shapes\", {\n      value: shapes,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"boundingBox\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return this.shapes.length !== 0;\n  }\n\n  readonly shapes!: ReadonlyArray<S>;\n\n  override get lngMin(): number {\n    return this.bounds.lngMin;\n  }\n\n  override get latMin(): number {\n    return this.bounds.latMin;\n  }\n\n  override get lngMax(): number {\n    return this.bounds.lngMax;\n  }\n\n  override get latMax(): number {\n    return this.bounds.latMax;\n  }\n\n  override contains(that: AnyGeoShape): boolean;\n  override contains(x: number, y: number): boolean;\n  override contains(that: AnyGeoShape | number, y?: number): boolean {\n    return false; // TODO\n  }\n\n  override intersects(that: AnyGeoShape): boolean {\n    return false; // TODO\n  }\n\n  override project(f: GeoProjection): R2Group {\n    const oldShapes = this.shapes;\n    const n = oldShapes.length;\n    if (n > 0) {\n      const newShapes = new Array<R2Shape>(n);\n      for (let i = 0; i < n; i += 1) {\n        newShapes[i] = oldShapes[i]!.project(f);\n      }\n      return new R2Group(newShapes);\n    } else {\n      return R2Group.empty();\n    }\n  }\n\n  /** @hidden */\n  readonly boundingBox!: GeoBox | null;\n\n  override get bounds(): GeoBox {\n    let boundingBox = this.boundingBox;\n    if (boundingBox === null) {\n      let lngMin = Infinity;\n      let latMin = Infinity;\n      let lngMax = -Infinity;\n      let latMax = -Infinity;\n      const shapes = this.shapes;\n      for (let i = 0, n = shapes.length; i < n; i += 1) {\n        const shape = shapes[i]!;\n        lngMin = Math.min(lngMin, shape.lngMin);\n        latMin = Math.min(latMin, shape.latMin);\n        lngMax = Math.max(shape.lngMax, lngMax);\n        latMax = Math.max(shape.latMax, latMax);\n      }\n      boundingBox = new GeoBox(lngMin, latMin, lngMax, latMax);\n      Object.defineProperty(this, \"boundingBox\", {\n        value: boundingBox,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return boundingBox;\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoGroup) {\n      return Arrays.equivalent(this.shapes, that.shapes, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoGroup) {\n      return Arrays.equal(this.shapes, that.shapes);\n    }\n    return false;\n  }\n\n  debug(output: Output): void {\n    const shapes = this.shapes;\n    const n = shapes.length;\n    output = output.write(\"GeoGroup\").write(46/*'.'*/);\n    if (n === 0) {\n      output = output.write(\"empty\").write(40/*'('*/);\n    } else {\n      output = output.write(\"of\").write(40/*'('*/);\n      output = output.debug(shapes[0]!);\n      for (let i = 1; i < n; i += 1) {\n        output = output.write(\", \").debug(shapes[i]!);\n      }\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty<S extends GeoShape>(): GeoGroup<S> {\n    return new GeoGroup(Arrays.empty);\n  }\n\n  static of<S extends GeoShape>(...shapes: S[]): GeoGroup<S> {\n    return new GeoGroup(shapes);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {GeoShape} from \"./GeoShape\";\nimport {GeoPoint} from \"./GeoPoint\";\nimport type {GeoCurve} from \"./GeoCurve\";\nimport {GeoSegment} from \"./GeoSegment\";\nimport {GeoSpline} from \"./GeoSpline\";\nimport {GeoPath} from \"./GeoPath\";\nimport {GeoGroup} from \"./GeoGroup\";\n\nexport type GeoJson = GeoJsonGeometry\n                    | GeoJsonFeature\n                    | GeoJsonFeatureCollection;\n\nexport type GeoJsonGeometry = GeoJsonPoint\n                            | GeoJsonMultiPoint\n                            | GeoJsonLineString\n                            | GeoJsonMultiLineString\n                            | GeoJsonPolygon\n                            | GeoJsonMultiPolygon\n                            | GeoJsonGeometryCollection;\n\nexport type GeoJsonObjectType = GeoJsonGeometryType\n                              | \"Feature\"\n                              | \"FeatureCollection\";\n\nexport type GeoJsonGeometryType = \"Point\"\n                                | \"MultiPoint\"\n                                | \"LineString\"\n                                | \"MultiLineString\"\n                                | \"Polygon\"\n                                | \"MultiPolygon\"\n                                | \"GeometryCollection\";\n\nexport interface GeoJsonObject {\n  type: GeoJsonObjectType;\n  bbox?: GeoJsonBbox;\n}\n\nexport interface GeoJsonGeometryObject extends GeoJsonObject {\n  type: GeoJsonGeometryType;\n}\n\nexport type GeoJsonPosition = [number, number] | [number, number, number];\n\nexport interface GeoJsonPoint extends GeoJsonGeometryObject {\n  readonly type: \"Point\";\n  coordinates: GeoJsonPosition;\n}\n\nexport interface GeoJsonMultiPoint extends GeoJsonGeometryObject {\n  readonly type: \"MultiPoint\";\n  coordinates: GeoJsonPosition[];\n}\n\nexport interface GeoJsonLineString extends GeoJsonGeometryObject {\n  readonly type: \"LineString\";\n  coordinates: GeoJsonPosition[];\n}\n\nexport interface GeoJsonMultiLineString extends GeoJsonGeometryObject {\n  readonly type: \"MultiLineString\";\n  coordinates: GeoJsonPosition[][];\n}\n\nexport interface GeoJsonPolygon extends GeoJsonGeometryObject {\n  readonly type: \"Polygon\";\n  coordinates: GeoJsonPosition[][];\n}\n\nexport interface GeoJsonMultiPolygon extends GeoJsonGeometryObject {\n  readonly type: \"MultiPolygon\";\n  coordinates: GeoJsonPosition[][][];\n}\n\nexport interface GeoJsonGeometryCollection extends GeoJsonGeometryObject {\n  readonly type: \"GeometryCollection\";\n  geometries: GeoJsonGeometry[];\n}\n\nexport interface GeoJsonFeature<G extends GeoJsonGeometry = GeoJsonGeometry, P = GeoJsonProperties> extends GeoJsonObject {\n  type: \"Feature\";\n  geometry: G | null;\n  properties: P | null;\n  id?: string | number;\n}\n\nexport interface GeoJsonFeatureCollection<G extends GeoJsonGeometry = GeoJsonGeometry, P = GeoJsonProperties> extends GeoJsonObject {\n  type: \"FeatureCollection\";\n  features: GeoJsonFeature<G, P>[];\n}\n\nexport type GeoJsonProperties = {[name: string]: unknown};\n\nexport type GeoJsonBbox = [number, number, number, number]\n                        | [number, number, number, number, number, number];\n\nexport const GeoJson = {} as {\n  is(value: unknown): value is GeoJson;\n  toShape(geometry: GeoJsonGeometry): GeoShape;\n  toShape(feature: GeoJsonFeature): GeoShape | null;\n  toShape(collection: GeoJsonFeatureCollection): Array<GeoShape | null>;\n  toShape(object: GeoJson): GeoShape | null | Array<GeoShape | null>;\n};\n\nGeoJson.is = function (value: unknown): value is GeoJson {\n  return GeoJsonGeometry.is(value)\n      || GeoJsonFeature.is(value)\n      || GeoJsonFeatureCollection.is(value);\n};\n\nGeoJson.toShape = function (object: GeoJson): GeoShape | null | Array<GeoShape | null> {\n  if (object.type === \"Feature\") {\n    return GeoJsonFeature.toShape(object);\n  } else if (object.type === \"FeatureCollection\") {\n    return GeoJsonFeatureCollection.toShapes(object);\n  } else {\n    return GeoJsonGeometry.toShape(object);\n  }\n} as typeof GeoJson.toShape;\n\nexport const GeoJsonGeometry = {} as {\n  is(value: unknown): value is GeoJsonGeometry;\n  toShape(object: GeoJsonGeometry): GeoShape;\n};\n\nGeoJsonGeometry.is = function (value: unknown): value is GeoJsonGeometry {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonGeometry;\n    return (object.type === \"Point\"\n         || object.type === \"MultiPoint\"\n         || object.type === \"LineString\"\n         || object.type === \"MultiLineString\"\n         || object.type === \"Polygon\"\n         || object.type === \"MultiPolygon\")\n        && Array.isArray(object.coordinates)\n        || object.type === \"GeometryCollection\"\n        && Array.isArray(object.geometries);\n  }\n  return false;\n};\n\nGeoJsonGeometry.toShape = function (object: GeoJsonGeometry): GeoShape {\n  if (object.type === \"Point\") {\n    return GeoJsonPoint.toShape(object);\n  } else if (object.type === \"MultiPoint\") {\n    return GeoJsonMultiPoint.toShape(object);\n  } else if (object.type === \"LineString\") {\n    return GeoJsonLineString.toShape(object);\n  } else if (object.type === \"MultiLineString\") {\n    return GeoJsonMultiLineString.toShape(object);\n  } else if (object.type === \"Polygon\") {\n    return GeoJsonPolygon.toShape(object);\n  } else if (object.type === \"MultiPolygon\") {\n    return GeoJsonMultiPolygon.toShape(object);\n  } else if (object.type === \"GeometryCollection\") {\n    return GeoJsonGeometryCollection.toShape(object);\n  } else {\n    throw new TypeError(\"\" + object);\n  }\n};\n\nexport const GeoJsonPoint = {} as {\n  is(value: unknown): value is GeoJsonPoint;\n  toShape(object: GeoJsonPoint): GeoPoint;\n};\n\nGeoJsonPoint.is = function (value: unknown): value is GeoJsonPoint {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonPoint;\n    return object.type === \"Point\"\n        && Array.isArray(object.coordinates);\n  }\n  return false;\n};\n\nGeoJsonPoint.toShape = function (object: GeoJsonPoint): GeoPoint {\n  const position = object.coordinates;\n  return new GeoPoint(position[0], position[1]);\n};\n\nexport const GeoJsonMultiPoint = {} as {\n  is(value: unknown): value is GeoJsonMultiPoint;\n  toShape(object: GeoJsonMultiPoint): GeoGroup<GeoPoint>;\n};\n\nGeoJsonMultiPoint.is = function (value: unknown): value is GeoJsonMultiPoint {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonMultiPoint;\n    return object.type === \"MultiPoint\"\n        && Array.isArray(object.coordinates);\n  }\n  return false;\n};\n\nGeoJsonMultiPoint.toShape = function (object: GeoJsonMultiPoint): GeoGroup<GeoPoint> {\n  const positions = object.coordinates;\n  const n = positions.length;\n  const shapes = new Array<GeoPoint>(n);\n  for (let i = 0; i < n; i += 1) {\n    const position = positions[i]!;\n    shapes[i] = new GeoPoint(position[0], position[1]);\n  }\n  return new GeoGroup(shapes);\n};\n\nexport const GeoJsonLineString = {} as {\n  is(value: unknown): value is GeoJsonLineString;\n  toShape(object: GeoJsonLineString): GeoSpline;\n};\n\nGeoJsonLineString.is = function (value: unknown): value is GeoJsonLineString {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonLineString;\n    return object.type === \"LineString\"\n        && Array.isArray(object.coordinates);\n  }\n  return false;\n};\n\nGeoJsonLineString.toShape = function (object: GeoJsonLineString): GeoSpline {\n  const lineString = object.coordinates;\n  const n = lineString.length;\n  if (n > 0) {\n    const curves = new Array<GeoCurve>(n - 1);\n    let position = lineString[0]!;\n    let lng = position[0];\n    let lat = position[1];\n    for (let i = 1; i < n; i += 1) {\n      position = lineString[i]!;\n      curves[i - 1] = new GeoSegment(lng, lat, (lng = position[0], lng), (lat = position[1], lat));\n    }\n    return new GeoSpline(curves, false);\n  } else {\n    return GeoSpline.empty();\n  }\n};\n\nexport const GeoJsonMultiLineString = {} as {\n  is(value: unknown): value is GeoJsonMultiLineString;\n  toShape(object: GeoJsonMultiLineString): GeoGroup<GeoSpline>;\n};\n\nGeoJsonMultiLineString.is = function (value: unknown): value is GeoJsonMultiLineString {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonMultiLineString;\n    return object.type === \"MultiLineString\"\n        && Array.isArray(object.coordinates);\n  }\n  return false;\n};\n\nGeoJsonMultiLineString.toShape = function (object: GeoJsonMultiLineString): GeoGroup<GeoSpline> {\n  const multiLineString = object.coordinates;\n  const n = multiLineString.length;\n  const shapes = new Array<GeoSpline>(n);\n  for (let i = 0; i < n; i += 1) {\n    const lineString = multiLineString[i]!;\n    const m = lineString.length;\n    if (m > 0) {\n      const curves = new Array<GeoCurve>(m - 1);\n      let position = lineString[0]!;\n      let lng = position[0];\n      let lat = position[1];\n      for (let j = 1; j < m; j += 1) {\n        position = lineString[j]!;\n        curves[j - 1] = new GeoSegment(lng, lat, (lng = position[0], lng), (lat = position[1], lat));\n      }\n      shapes[i] = new GeoSpline(curves, false);\n    } else {\n      shapes[i] = GeoSpline.empty();\n    }\n  }\n  return new GeoGroup(shapes);\n};\n\nexport const GeoJsonPolygon = {} as {\n  is(value: unknown): value is GeoJsonPolygon;\n  toShape(object: GeoJsonPolygon): GeoPath;\n};\n\nGeoJsonPolygon.is = function (value: unknown): value is GeoJsonPolygon {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonPolygon;\n    return object.type === \"Polygon\"\n        && Array.isArray(object.coordinates);\n  }\n  return false;\n};\n\nGeoJsonPolygon.toShape = function (object: GeoJsonPolygon): GeoPath {\n  const polygons = object.coordinates;\n  const n = polygons.length;\n  const splines = new Array<GeoSpline>(n);\n  for (let i = 0; i < n; i += 1) {\n    const polygon = polygons[i]!;\n    const m = polygon.length;\n    if (m > 0) {\n      const curves = new Array<GeoCurve>(m - 1);\n      let position = polygon[0]!;\n      let lng = position[0];\n      let lat = position[1];\n      for (let j = 1; j < m; j += 1) {\n        position = polygon[j]!;\n        curves[j - 1] = new GeoSegment(lng, lat, (lng = position[0], lng), (lat = position[1], lat));\n      }\n      splines[i] = new GeoSpline(curves, true);\n    } else {\n      splines[i] = GeoSpline.empty();\n    }\n  }\n  return new GeoPath(splines);\n};\n\nexport const GeoJsonMultiPolygon = {} as {\n  is(value: unknown): value is GeoJsonMultiPolygon;\n  toShape(object: GeoJsonMultiPolygon): GeoGroup<GeoPath>;\n};\n\nGeoJsonMultiPolygon.is = function (value: unknown): value is GeoJsonMultiPolygon {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonMultiPolygon;\n    return object.type === \"MultiPolygon\"\n        && Array.isArray(object.coordinates);\n  }\n  return false;\n};\n\nGeoJsonMultiPolygon.toShape = function (object: GeoJsonMultiPolygon): GeoGroup<GeoPath> {\n  const multiPolygon = object.coordinates;\n  const n = multiPolygon.length;\n  const shapes = new Array<GeoPath>(n);\n  for (let i = 0; i < n; i += 1) {\n    const polygons = multiPolygon[i]!;\n    const m = polygons.length;\n    const splines = new Array<GeoSpline>(m);\n    for (let j = 0; j < m; j += 1) {\n      const polygon = polygons[j]!;\n      const o = polygon.length;\n      if (o > 0) {\n        const curves = new Array<GeoCurve>(o - 1);\n        let position = polygon[0]!;\n        let lng = position[0];\n        let lat = position[1];\n        for (let k = 1; k < o; k += 1) {\n          position = polygon[k]!;\n          curves[k - 1] = new GeoSegment(lng, lat, (lng = position[0], lng), (lat = position[1], lat));\n        }\n        splines[j] = new GeoSpline(curves, true);\n      } else {\n        splines[j] = GeoSpline.empty();\n      }\n    }\n    shapes[i] = new GeoPath(splines);\n  }\n  return new GeoGroup(shapes);\n};\n\nexport const GeoJsonGeometryCollection = {} as {\n  is(value: unknown): value is GeoJsonGeometryCollection;\n  toShape(object: GeoJsonGeometryCollection): GeoGroup;\n};\n\nGeoJsonGeometryCollection.is = function (value: unknown): value is GeoJsonGeometryCollection {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonGeometryCollection;\n    return object.type === \"GeometryCollection\"\n        && Array.isArray(object.geometries);\n  }\n  return false;\n};\n\nGeoJsonGeometryCollection.toShape = function (object: GeoJsonGeometryCollection): GeoGroup {\n  const geometries = object.geometries;\n  const n = geometries.length;\n  const shapes = new Array<GeoShape>(n);\n  for (let i = 0; i < n; i += 1) {\n    shapes[i] = GeoJsonGeometry.toShape(geometries[i]!);\n  }\n  return new GeoGroup(shapes);\n};\n\nexport const GeoJsonFeature = {} as {\n  is(value: unknown): value is GeoJsonFeature;\n  toShape(feature: GeoJsonFeature): GeoShape | null;\n};\n\nGeoJsonFeature.is = function (value: unknown): value is GeoJsonFeature {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonFeature;\n    return object.type === \"Feature\"\n        && GeoJsonGeometry.is(object.geometry)\n        && typeof object.properties === \"object\";\n  }\n  return false;\n};\n\nGeoJsonFeature.toShape = function (feature: GeoJsonFeature): GeoShape | null {\n  const geometry = feature.geometry;\n  return geometry !== null ? GeoJsonGeometry.toShape(geometry) : null;\n};\n\nexport const GeoJsonFeatureCollection = {} as {\n  is(value: unknown): value is GeoJsonFeatureCollection;\n  toShapes(object: GeoJsonFeatureCollection): Array<GeoShape | null>;\n};\n\nGeoJsonFeatureCollection.is = function (value: unknown): value is GeoJsonFeatureCollection {\n  if (typeof value === \"object\" && value !== null) {\n    const object = value as GeoJsonFeatureCollection;\n    return object.type === \"FeatureCollection\"\n        && Array.isArray(object.features);\n  }\n  return false;\n};\n\nGeoJsonFeatureCollection.toShapes = function (object: GeoJsonFeatureCollection): Array<GeoShape | null> {\n  const features = object.features;\n  const n = features.length;\n  const shapes = new Array<GeoShape | null>(n);\n  for (let i = 0; i < n; i += 1) {\n    shapes[i] = GeoJsonFeature.toShape(features[i]!);\n  }\n  return shapes;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Value, Form} from \"@swim/structure\";\nimport {TimeZoneForm} from \"./\"; // forward import\n\nexport type AnyTimeZone = TimeZone | string | number;\n\nexport class TimeZone implements HashCode, Debug {\n  /** @hidden */\n  private constructor(name: string | undefined, offset: number) {\n    Object.defineProperty(this, \"name\", {\n      value: name,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"offset\", {\n      value: offset,\n      enumerable: true,\n    });\n  }\n\n  readonly name!: string | undefined;\n\n  readonly offset!: number;\n\n  isUTC(): boolean {\n    return this.offset === 0;\n  }\n\n  isLocal(): boolean {\n    return this.offset === -new Date().getTimezoneOffset();\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TimeZone) {\n      return this.offset === that.offset;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(TimeZone), Numbers.hash(this.offset)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"TimeZone\").write(46/*'.'*/);\n    if (this.name === \"UTC\" && this.offset === 0) {\n      output = output.write(\"utc\").write(40/*'('*/).write(41/*')'*/);\n    } else if (this.name === void 0) {\n      output = output.write(\"forOffset\").write(40/*'('*/)\n          .debug(this.offset).write(41/*')'*/);\n    } else {\n      output = output.write(\"from\").write(40/*'('*/)\n          .debug(this.name).write(\", \").debug(this.offset).write(41/*')'*/);\n    }\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static get utc(): TimeZone {\n    return new TimeZone(\"UTC\", 0);\n  }\n\n  @Lazy\n  static get local(): TimeZone {\n    return TimeZone.forOffset(-new Date().getTimezoneOffset());\n  }\n\n  static forName(name: string): TimeZone | null {\n    switch (name) {\n      case \"UTC\": return TimeZone.utc;\n      default: return null;\n    }\n  }\n\n  static forOffset(offset: number): TimeZone {\n    switch (offset) {\n      case 0: return TimeZone.utc;\n      default: return new TimeZone(void 0, offset);\n    }\n  }\n\n  static fromAny(value: AnyTimeZone): TimeZone {\n    if (value === void 0 || value === null || value instanceof TimeZone) {\n      return value;\n    } else if (typeof value === \"string\") {\n      const zone = TimeZone.forName(value);\n      if (zone !== null) {\n        return zone;\n      }\n    } else if (typeof value === \"number\") {\n      return TimeZone.forOffset(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromValue(value: Value): TimeZone | null {\n    const name = value.stringValue(void 0);\n    if (name !== void 0) {\n      return TimeZone.forName(name);\n    }\n    const offset = value.numberValue(void 0);\n    if (offset !== void 0) {\n      return TimeZone.forOffset(offset);\n    }\n    return null;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyTimeZone {\n    return value instanceof TimeZone\n        || typeof value === \"string\"\n        || typeof value === \"number\";\n  }\n\n  @Lazy\n  static form(): Form<TimeZone, AnyTimeZone> {\n    return new TimeZoneForm(TimeZone.utc);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Num, Form} from \"@swim/structure\";\nimport {AnyTimeZone, TimeZone} from \"./TimeZone\";\n\n/** @hidden */\nexport class TimeZoneForm extends Form<TimeZone, AnyTimeZone> {\n  constructor(unit: TimeZone | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: TimeZone | undefined;\n\n  override withUnit(unit: TimeZone | undefined): Form<TimeZone, AnyTimeZone> {\n    if (unit !== this.unit) {\n      return new TimeZoneForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(zone: AnyTimeZone): Item {\n    zone = TimeZone.fromAny(zone);\n    const name = zone.name;\n    if (name !== void 0) {\n      return Text.from(name);\n    } else {\n      return Num.from(zone.offset);\n    }\n  }\n\n  override cast(item: Item): TimeZone | undefined {\n    const value = item.toValue();\n    const zone = TimeZone.fromValue(value);\n    return zone !== null ? zone : void 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Equivalent, Compare, Lazy, Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Display, Output} from \"@swim/codec\";\nimport type {Interpolate, Interpolator} from \"@swim/mapping\";\nimport {Item, Value, Form} from \"@swim/structure\";\nimport {AnyTimeZone, TimeZone} from \"./TimeZone\";\nimport {DateTimeInterpolator} from \"./\"; // forward import\nimport {DateTimeForm} from \"./\"; // forward import\nimport {DateTimeFormat} from \"./\"; // forward import\n\nexport type AnyDateTime = DateTime | DateTimeInit | Date | string | number;\n\nexport interface DateTimeInit {\n  year?: number;\n  month?: number;\n  day?: number;\n  hour?: number;\n  minute?: number;\n  second?: number;\n  millisecond?: number;\n  zone?: AnyTimeZone;\n}\n\nexport class DateTime implements Interpolate<DateTime>, HashCode, Equivalent, Compare, Display {\n  constructor(time: number, zone: TimeZone = TimeZone.utc) {\n    Object.defineProperty(this, \"time\", {\n      value: time,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"zone\", {\n      value: zone,\n      enumerable: true,\n    });\n  }\n\n  isDefined(): boolean {\n    return isFinite(new Date(this.time).getTime());\n  }\n\n  readonly time!: number;\n\n  readonly zone!: TimeZone;\n\n  get year(): number {\n    return this.toUTCLocalDate().getUTCFullYear();\n  }\n\n  withYear(year: number, month?: number, day?: number, hour?: number, minute?: number,\n           second?: number, millisecond?: number): DateTime {\n    const date = this.toUTCLocalDate();\n    date.setUTCFullYear(year);\n    if (month !== void 0) {\n      date.setUTCMonth(month);\n    }\n    if (day !== void 0) {\n      date.setUTCDate(day);\n    }\n    if (hour !== void 0) {\n      date.setUTCHours(hour);\n    }\n    if (minute !== void 0) {\n      date.setUTCMinutes(minute);\n    }\n    if (second !== void 0) {\n      date.setUTCSeconds(second);\n    }\n    if (millisecond !== void 0) {\n      date.setUTCMilliseconds(millisecond);\n    }\n    return DateTime.fromUTCLocalDate(date, this.zone);\n  }\n\n  get month(): number {\n    return this.toUTCLocalDate().getUTCMonth();\n  }\n\n  withMonth(month: number, day?: number, hour?: number, minute?: number,\n            second?: number, millisecond?: number): DateTime {\n    const date = this.toUTCLocalDate();\n    date.setUTCMonth(month);\n    if (day !== void 0) {\n      date.setUTCDate(day);\n    }\n    if (hour !== void 0) {\n      date.setUTCHours(hour);\n    }\n    if (minute !== void 0) {\n      date.setUTCMinutes(minute);\n    }\n    if (second !== void 0) {\n      date.setUTCSeconds(second);\n    }\n    if (millisecond !== void 0) {\n      date.setUTCMilliseconds(millisecond);\n    }\n    return DateTime.fromUTCLocalDate(date, this.zone);\n  }\n\n  get day(): number {\n    return this.toUTCLocalDate().getUTCDate();\n  }\n\n  withDay(day: number, hour?: number, minute?: number, second?: number,\n          millisecond?: number): DateTime {\n    const date = this.toUTCLocalDate();\n    date.setUTCDate(day);\n    if (hour !== void 0) {\n      date.setUTCHours(hour);\n    }\n    if (minute !== void 0) {\n      date.setUTCMinutes(minute);\n    }\n    if (second !== void 0) {\n      date.setUTCSeconds(second);\n    }\n    if (millisecond !== void 0) {\n      date.setUTCMilliseconds(millisecond);\n    }\n    return DateTime.fromUTCLocalDate(date, this.zone);\n  }\n\n  get hour(): number {\n    return this.toUTCLocalDate().getUTCHours();\n  }\n\n  withHour(hour: number, minute?: number, second?: number, millisecond?: number): DateTime {\n    const date = this.toUTCLocalDate();\n    date.setUTCHours(hour);\n    if (minute !== void 0) {\n      date.setUTCMinutes(minute);\n    }\n    if (second !== void 0) {\n      date.setUTCSeconds(second);\n    }\n    if (millisecond !== void 0) {\n      date.setUTCMilliseconds(millisecond);\n    }\n    return DateTime.fromUTCLocalDate(date, this.zone);\n  }\n\n  get minute(): number {\n    return this.toUTCLocalDate().getUTCMinutes();\n  }\n\n  withMinute(minute: number, second?: number, millisecond?: number): DateTime {\n    const date = this.toUTCLocalDate();\n    date.setUTCMinutes(minute);\n    if (second !== void 0) {\n      date.setUTCSeconds(second);\n    }\n    if (millisecond !== void 0) {\n      date.setUTCMilliseconds(millisecond);\n    }\n    return DateTime.fromUTCLocalDate(date, this.zone);\n  }\n\n  get second(): number {\n    return this.toUTCLocalDate().getUTCSeconds();\n  }\n\n  withSecond(second: number, millisecond?: number): DateTime {\n    const date = this.toUTCLocalDate();\n    date.setUTCSeconds(second);\n    if (millisecond !== void 0) {\n      date.setUTCMilliseconds(millisecond);\n    }\n    return DateTime.fromUTCLocalDate(date, this.zone);\n  }\n\n  get millisecond(): number {\n    return this.toUTCLocalDate().getUTCMilliseconds();\n  }\n\n  withMillisecond(millisecond: number): DateTime {\n    const date = this.toUTCLocalDate();\n    date.setUTCMilliseconds(millisecond);\n    return DateTime.fromUTCLocalDate(date, this.zone);\n  }\n\n  get weekday(): number {\n    return this.toUTCLocalDate().getUTCDay();\n  }\n\n  /**\n   * Returns this date time shifted by the time zone offset.\n   * @hidden\n   */\n  toUTCLocalDate(): Date {\n    return new Date(this.time + 60000 * this.zone.offset);\n  }\n\n  toDate(): Date {\n    return new Date(this.time);\n  }\n\n  valueOf(): number {\n    return this.time;\n  }\n\n  interpolateTo(that: DateTime): Interpolator<DateTime>;\n  interpolateTo(that: unknown): Interpolator<DateTime> | null;\n  interpolateTo(that: unknown): Interpolator<DateTime> | null {\n    if (that instanceof DateTime) {\n      return DateTimeInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  compareTo(that: unknown): number {\n    if (that instanceof DateTime) {\n      const x = this.time;\n      const y = that.time;\n      return x < y ? -1 : x > y ? 1 : x === y ? 0 : NaN;\n    }\n    return NaN;\n  }\n\n  equivalentTo(that: AnyDateTime, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DateTime) {\n      return Numbers.equivalent(this.time, that.time, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DateTime) {\n      return this.time === that.time && this.zone.equals(that.zone);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(DateTime),\n        Numbers.hash(this.time)), this.zone.hashCode()));\n  }\n\n  display(output: Output, format: DateTimeFormat = DateTimeFormat.iso8601): void {\n    format.writeDate(this, output);\n  }\n\n  toString(format: DateTimeFormat = DateTimeFormat.iso8601): string {\n    return format.format(this);\n  }\n\n  static current(zone?: AnyTimeZone): DateTime {\n    zone = zone !== void 0 ? TimeZone.fromAny(zone) : TimeZone.local;\n    return new DateTime(Date.now(), zone);\n  }\n\n  /**\n   * Returns this date time shifted back by the time zone offset.\n   * @hidden\n   */\n  static fromUTCLocalDate(date: Date, zone: TimeZone): DateTime {\n    return new DateTime(date.getTime() - 60000 * zone.offset, zone);\n  }\n\n  static fromInit(init: DateTimeInit, zone?: AnyTimeZone): DateTime {\n    let time = Date.UTC(init.year !== void 0 ? init.year : 1970,\n                        init.month !== void 0 ? init.month : 0,\n                        init.day !== void 0 ? init.day : 1,\n                        init.hour !== void 0 ? init.hour : 0,\n                        init.minute !== void 0 ? init.minute : 0,\n                        init.second !== void 0 ? init.second : 0,\n                        init.millisecond !== void 0 ? init.millisecond : 0);\n    if (init.zone !== void 0) {\n      zone = TimeZone.fromAny(init.zone);\n    }\n    if (zone !== void 0) {\n      zone = TimeZone.fromAny(zone);\n      time += 60000 * zone.offset;\n    } else {\n      zone = TimeZone.utc;\n    }\n    return new DateTime(time, zone);\n  }\n\n  static fromAny(value: AnyDateTime, zone?: AnyTimeZone): DateTime {\n    if (value === void 0 || value === null || value instanceof DateTime) {\n      return value;\n    } else if (value instanceof Date) {\n      zone = zone !== void 0 ? TimeZone.fromAny(zone) : TimeZone.utc;\n      return new DateTime(value.getTime(), zone);\n    } else if (typeof value === \"number\") {\n      zone = zone !== void 0 ? TimeZone.fromAny(zone) : TimeZone.utc;\n      return new DateTime(value, zone);\n    } else if (typeof value === \"string\") {\n      return DateTime.parse(value, zone);\n    } else if (DateTime.isInit(value)) {\n      return DateTime.fromInit(value, zone);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromValue(value: Value): DateTime | null {\n    let positional: boolean;\n    const header = value.header(\"date\");\n    if (header.isDefined()) {\n      value = header;\n      positional = true;\n    } else {\n      positional = false;\n    }\n    const init: DateTimeInit = {};\n    value.forEach(function (item: Item, index: number) {\n      const key = item.key.stringValue(void 0);\n      if (key !== void 0) {\n        if (key === \"year\") {\n          init.year = item.toValue().numberValue(init.year);\n        } else if (key === \"month\") {\n          init.month = item.toValue().numberValue(init.month);\n        } else if (key === \"day\") {\n          init.day = item.toValue().numberValue(init.day);\n        } else if (key === \"hour\") {\n          init.hour = item.toValue().numberValue(init.hour);\n        } else if (key === \"minute\") {\n          init.minute = item.toValue().numberValue(init.minute);\n        } else if (key === \"second\") {\n          init.second = item.toValue().numberValue(init.second);\n        } else if (key === \"millisecond\") {\n          init.millisecond = item.toValue().numberValue(init.millisecond);\n        } else if (key === \"zone\") {\n          init.zone = item.toValue().cast(TimeZone.form(), init.zone);\n        }\n      } else if (item instanceof Value && positional) {\n        if (index === 0) {\n          init.year = item.numberValue(init.year);\n        } else if (index === 1) {\n          init.month = item.numberValue(init.month);\n        } else if (index === 2) {\n          init.day = item.numberValue(init.day);\n        } else if (index === 3) {\n          init.hour = item.numberValue(init.hour);\n        } else if (index === 4) {\n          init.minute = item.numberValue(init.minute);\n        } else if (index === 5) {\n          init.second = item.numberValue(init.second);\n        } else if (index === 6) {\n          init.millisecond = item.numberValue(init.millisecond);\n        } else if (index === 7) {\n          init.zone = item.cast(TimeZone.form(), init.zone);\n        }\n      }\n    });\n    if (DateTime.isInit(init)) {\n      return DateTime.fromInit(init);\n    }\n    return null;\n  }\n\n  static parse(date: string, zone?: AnyTimeZone): DateTime {\n    return DateTimeFormat.iso8601.parse(date);\n  }\n\n  static time(date: AnyDateTime): number {\n    if (date instanceof DateTime) {\n      return date.time;\n    } else if (date instanceof Date) {\n      return date.getTime();\n    } else if (typeof date === \"number\") {\n      return date;\n    } else if (typeof date === \"string\") {\n      return DateTime.parse(date).time;\n    } else if (DateTime.isInit(date)) {\n      return DateTime.fromInit(date).time;\n    }\n    throw new TypeError(\"\" + date);\n  }\n\n  static zone(date: AnyDateTime): TimeZone {\n    if (date instanceof DateTime) {\n      return date.zone;\n    } else {\n      return TimeZone.utc;\n    }\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is DateTimeInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as DateTimeInit;\n      return (typeof init.year === \"undefined\" || typeof init.year === \"number\")\n          && (typeof init.month === \"undefined\" || typeof init.month === \"number\")\n          && (typeof init.day === \"undefined\" || typeof init.day === \"number\")\n          && (typeof init.hour === \"undefined\" || typeof init.hour === \"number\")\n          && (typeof init.minute === \"undefined\" || typeof init.minute === \"number\")\n          && (typeof init.second === \"undefined\" || typeof init.second === \"number\")\n          && (typeof init.millisecond === \"undefined\" || typeof init.millisecond === \"number\")\n          && (typeof init.zone === \"undefined\" || TimeZone.isAny(init.zone))\n          && (typeof init.year === \"number\"\n           || typeof init.month === \"number\"\n           || typeof init.day === \"number\"\n           || typeof init.hour === \"number\"\n           || typeof init.minute === \"number\"\n           || typeof init.second === \"number\"\n           || typeof init.millisecond === \"number\");\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyDateTime {\n    return value instanceof DateTime\n        || value instanceof Date\n        || typeof value === \"number\"\n        || typeof value === \"string\"\n        || DateTime.isInit(value);\n  }\n\n  @Lazy\n  static form(): Form<DateTime, AnyDateTime> {\n    return new DateTimeForm(new DateTime(0));\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {DateTime} from \"./DateTime\";\n\n/** @hidden */\nexport const DateTimeInterpolator = function (d0: DateTime, d1: DateTime): Interpolator<DateTime> {\n  const interpolator = function (u: number): DateTime {\n    const d0 = interpolator[0];\n    const d1 = interpolator[1];\n    return new DateTime(d0.time + u * (d1.time - d0.time), d1.zone);\n  } as Interpolator<DateTime>;\n  Object.setPrototypeOf(interpolator, DateTimeInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: d0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: d1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (d0: DateTime, d1: DateTime): Interpolator<DateTime>;\n\n  /** @hidden */\n  prototype: Interpolator<DateTime>;\n};\n\nDateTimeInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"./DateTime\";\nimport {Item, Value, Text, Form} from \"@swim/structure\";\n\n/** @hidden */\nexport class DateTimeForm extends Form<DateTime, AnyDateTime> {\n  constructor(unit: DateTime | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit: DateTime | undefined;\n\n  override withUnit(unit: DateTime | undefined): Form<DateTime, AnyDateTime> {\n    if (unit !== this.unit) {\n      return new DateTimeForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(date: AnyDateTime): Item {\n    date = DateTime.fromAny(date);\n    return Text.from(date.toString());\n  }\n\n  override cast(value: Value): DateTime | undefined {\n    let date: DateTime | null = null;\n    try {\n      date = DateTime.fromValue(value);\n      if (date === void 0) {\n        const millis = value.numberValue(void 0);\n        if (millis !== void 0) {\n          date = new DateTime(millis);\n        } else {\n          const string = value.stringValue(void 0);\n          if (string !== void 0) {\n            date = DateTime.parse(string);\n          }\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return date !== null ? date : void 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {DateTimeInit, DateTime} from \"./DateTime\";\n\n/** @hidden */\nexport class DateTimeParser extends Parser<DateTime> {\n  private readonly dateParser: Parser<DateTimeInit>;\n\n  constructor(dateParser: Parser<DateTimeInit>) {\n    super();\n    this.dateParser = dateParser;\n  }\n\n  override feed(input: Input): Parser<DateTime> {\n    return DateTimeParser.parse(input, this.dateParser);\n  }\n\n  static parse(input: Input, dateParser: Parser<DateTimeInit>): Parser<DateTime> {\n    dateParser = dateParser.feed(input);\n    if (dateParser.isDone()) {\n      return Parser.done(DateTime.fromAny(dateParser.bind()));\n    } else if (dateParser.isError()) {\n      return dateParser.asError();\n    }\n    return new DateTimeParser(dateParser);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\n\nexport class DateTimeLocale {\n  readonly periods: ReadonlyArray<string>;\n  readonly weekdays: ReadonlyArray<string>;\n  readonly shortWeekdays: ReadonlyArray<string>;\n  readonly months: ReadonlyArray<string>;\n  readonly shortMonths: ReadonlyArray<string>;\n\n  constructor(periods: ReadonlyArray<string> = DateTimeLocale.Periods,\n              weekdays: ReadonlyArray<string> = DateTimeLocale.Weekdays,\n              shortWeekdays: ReadonlyArray<string> = DateTimeLocale.ShortWeekdays,\n              months: ReadonlyArray<string> = DateTimeLocale.Months,\n              shortMonths: ReadonlyArray<string> = DateTimeLocale.ShortMonths) {\n    this.periods = periods;\n    this.weekdays = weekdays;\n    this.shortWeekdays = shortWeekdays;\n    this.months = months;\n    this.shortMonths = shortMonths;\n  }\n\n  @Lazy\n  static standard(): DateTimeLocale {\n    return new DateTimeLocale();\n  }\n\n  private static readonly Periods: ReadonlyArray<string> = [\n    \"AM\",\n    \"PM\",\n  ];\n  private static readonly Weekdays: ReadonlyArray<string> = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  private static readonly ShortWeekdays: ReadonlyArray<string> = [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\",\n  ];\n  private static readonly Months: ReadonlyArray<string> = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  private static readonly ShortMonths: ReadonlyArray<string> = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"../\"; // forward import\n\nexport interface DateTimeSpecifiers {\n  [symbol: string]: DateTimeFormat | undefined;\n  Y: DateTimeFormat;\n  m: DateTimeFormat;\n  B: DateTimeFormat;\n  b: DateTimeFormat;\n  d: DateTimeFormat;\n  A: DateTimeFormat;\n  a: DateTimeFormat;\n  H: DateTimeFormat;\n  I: DateTimeFormat;\n  p: DateTimeFormat;\n  M: DateTimeFormat;\n  S: DateTimeFormat;\n  L: DateTimeFormat;\n}\n\nexport const DateTimeSpecifiers = {} as {\n  /** @hidden */\n  _standard?: DateTimeSpecifiers,\n  standard(locale?: DateTimeLocale): DateTimeSpecifiers;\n};\n\nDateTimeSpecifiers.standard = function (locale?: DateTimeLocale): DateTimeSpecifiers {\n  let specifiers: DateTimeSpecifiers | undefined;\n  if (locale === void 0) {\n    locale = DateTimeLocale.standard();\n  }\n  if (locale === DateTimeLocale.standard()) {\n    specifiers = DateTimeSpecifiers._standard;\n  }\n  if (specifiers === void 0) {\n    specifiers = {\n      Y: DateTimeFormat.year,\n      m: DateTimeFormat.monthOfYear,\n      B: DateTimeFormat.month.withLocale(locale),\n      b: DateTimeFormat.shortMonth.withLocale(locale),\n      d: DateTimeFormat.dayOfMonth,\n      A: DateTimeFormat.weekday.withLocale(locale),\n      a: DateTimeFormat.shortWeekday.withLocale(locale),\n      H: DateTimeFormat.hour24,\n      I: DateTimeFormat.hour12,\n      p: DateTimeFormat.period.withLocale(locale),\n      M: DateTimeFormat.minute,\n      S: DateTimeFormat.second,\n      L: DateTimeFormat.millisecond,\n    };\n    if (locale === DateTimeLocale.standard()) {\n      DateTimeSpecifiers._standard = specifiers;\n    }\n  }\n  return specifiers;\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {Input, Output, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {AnyDateTime, DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeParser} from \"../DateTimeParser\";\nimport {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeSpecifiers} from \"./DateTimeSpecifiers\";\nimport {YearFormat} from \"../\"; // forward import\nimport {MonthOfYearFormat} from \"../\"; // forward import\nimport {MonthFormat} from \"../\"; // forward import\nimport {ShortMonthFormat} from \"../\"; // forward import\nimport {DayOfMonthFormat} from \"../\"; // forward import\nimport {WeekdayFormat} from \"../\"; // forward import\nimport {ShortWeekdayFormat} from \"../\"; // forward import\nimport {Hour24Format} from \"../\"; // forward import\nimport {Hour12Format} from \"../\"; // forward import\nimport {PeriodFormat} from \"../\"; // forward import\nimport {MinuteFormat} from \"../\"; // forward import\nimport {SecondFormat} from \"../\"; // forward import\nimport {MillisecondFormat} from \"../\"; // forward import\nimport {PatternFormat} from \"../\"; // forward import\n\n/** @hidden */\nexport interface DateNumberFactory {\n  term(value: number, date: DateTimeInit, input: Input): Parser<DateTimeInit>;\n  cont(date: DateTimeInit, value: number, step: number, input: Input): Parser<DateTimeInit>;\n}\n\n/** @hidden */\nexport interface DateStringFactory {\n  term(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit>;\n  cont(locale: DateTimeLocale, date: DateTimeInit, output: Output, input: Input): Parser<DateTimeInit>;\n}\n\nexport abstract class DateTimeFormat {\n  withLocale(locale: DateTimeLocale): DateTimeFormat {\n    return this;\n  }\n\n  format(date: AnyDateTime): string {\n    date = DateTime.fromAny(date);\n    const output = Unicode.stringOutput();\n    this.writeDate(date as DateTime, output);\n    return output.bind();\n  }\n\n  abstract writeDate(date: DateTime, output: Output): void;\n\n  parse(input: Input | string): DateTime {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    while (input.isCont() && Unicode.isSpace(input.head())) {\n      input = input.step();\n    }\n    let parser = this.parseDate(input, {});\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  /** @hidden */\n  parseDate(input: Input, date: DateTimeInit): Parser<DateTime> {\n    const dateParser = this.parseDateTime(input, date);\n    if (dateParser.isDone()) {\n      return Parser.done(DateTime.fromAny(dateParser.bind()));\n    } else if (dateParser.isError()) {\n      return dateParser.asError();\n    }\n    return new DateTimeParser(dateParser);\n  }\n\n  /** @hidden */\n  abstract parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit>;\n\n  @Lazy\n  static get year(): YearFormat {\n    return new YearFormat();\n  }\n\n  @Lazy\n  static get monthOfYear(): MonthOfYearFormat {\n    return new MonthOfYearFormat();\n  }\n\n  @Lazy\n  static get month(): MonthFormat {\n    return new MonthFormat(DateTimeLocale.standard());\n  }\n\n  @Lazy\n  static get shortMonth(): ShortMonthFormat {\n    return new ShortMonthFormat(DateTimeLocale.standard());\n  }\n\n  @Lazy\n  static get dayOfMonth(): DayOfMonthFormat {\n    return new DayOfMonthFormat();\n  }\n\n  @Lazy\n  static get weekday(): WeekdayFormat {\n    return new WeekdayFormat(DateTimeLocale.standard());\n  }\n\n  @Lazy\n  static get shortWeekday(): ShortWeekdayFormat {\n    return new ShortWeekdayFormat(DateTimeLocale.standard());\n  }\n\n  @Lazy\n  static get hour24(): Hour24Format {\n    return new Hour24Format();\n  }\n\n  @Lazy\n  static get hour12(): Hour12Format {\n    return new Hour12Format();\n  }\n\n  @Lazy\n  static get period(): PeriodFormat {\n    return new PeriodFormat(DateTimeLocale.standard());\n  }\n\n  @Lazy\n  static get minute(): MinuteFormat {\n    return new MinuteFormat();\n  }\n\n  @Lazy\n  static get second(): SecondFormat {\n    return new SecondFormat();\n  }\n\n  @Lazy\n  static get millisecond(): YearFormat {\n    return new MillisecondFormat();\n  }\n\n  static pattern(pattern: string, specifiers?: DateTimeSpecifiers | DateTimeLocale): PatternFormat {\n    if (specifiers === void 0 || specifiers instanceof DateTimeLocale) {\n      specifiers = DateTimeSpecifiers.standard(specifiers);\n    }\n    return new PatternFormat(pattern, specifiers);\n  }\n\n  @Lazy\n  static get iso8601(): DateTimeFormat {\n    return new PatternFormat(\"%Y-%m-%dT%H:%M:%S.%LZ\", DateTimeSpecifiers.standard());\n  }\n\n  /** @hidden */\n  static parseDateNumber(input: Input, factory: DateNumberFactory, desc: string,\n                         minDigits: number, maxDigits: number, date: DateTimeInit | undefined,\n                         value: number = 0, step: number = 0): Parser<DateTimeInit> {\n    let c = 0;\n    while (step < maxDigits) {\n      if (input.isCont() && (c = input.head(), Base10.isDigit(c))) {\n        input.step();\n        value = 10 * value + Base10.decodeDigit(c);\n        step += 1;\n        continue;\n      }\n      break;\n    }\n    if (!input.isEmpty()) {\n      if (step >= minDigits) {\n        return factory.term(value, date || {}, input);\n      } else {\n        return Parser.error(Diagnostic.expected(desc, input));\n      }\n    }\n    return factory.cont(date !== void 0 ? date : {}, value, step, input);\n  }\n\n  /** @hidden */\n  static parseDateString(input: Input, factory: DateStringFactory, locale: DateTimeLocale,\n                         date?: DateTimeInit, output?: Output<string>): Parser<DateTimeInit> {\n    let c = 0;\n    output = output || Unicode.stringOutput();\n    do {\n      if (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input.step();\n        output.write(c);\n        continue;\n      } else if (!input.isEmpty()) {\n        return factory.term(locale, output.bind(), date || {}, input);\n      }\n      break;\n    } while (true);\n    return factory.cont(locale, date || {}, output, input);\n  }\n\n  /** @hidden */\n  static writeDateNumber2(value: number, output: Output): void {\n    const c1 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c0 = 48/*'0'*/ + value % 10;\n    output = output.write(c0).write(c1);\n  }\n\n  /** @hidden */\n  static writeDateNumber3(value: number, output: Output): void {\n    const c2 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c1 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c0 = 48/*'0'*/ + value % 10;\n    output = output.write(c0).write(c1).write(c2);\n  }\n\n  /** @hidden */\n  static writeDateNumber4(value: number, output: Output): void {\n    const c3 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c2 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c1 = 48/*'0'*/ + value % 10;\n    value /= 10;\n    const c0 = 48/*'0'*/ + value % 10;\n    output = output.write(c0).write(c1).write(c2).write(c3);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {YearParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class YearFormat extends DateTimeFormat {\n  override writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber4(date.year, output);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return YearParser.parse(input, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {MonthOfYearParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class MonthOfYearFormat extends DateTimeFormat {\n  override writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.month + 1, output);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return MonthOfYearParser.parse(input, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {MonthParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class MonthFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  override withLocale(locale: DateTimeLocale): DateTimeFormat {\n    if (locale !== this.locale) {\n      return new MonthFormat(locale);\n    } else {\n      return this;\n    }\n  }\n\n  override writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.months[date.month]!);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return MonthParser.parse(input, this.locale, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {ShortMonthParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class ShortMonthFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  override withLocale(locale: DateTimeLocale): DateTimeFormat {\n    if (locale !== this.locale) {\n      return new ShortMonthFormat(locale);\n    } else {\n      return this;\n    }\n  }\n\n  override writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.shortMonths[date.month]!);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return ShortMonthParser.parse(input, this.locale, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {DayOfMonthParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class DayOfMonthFormat extends DateTimeFormat {\n  override writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.day, output);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return DayOfMonthParser.parse(input, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {WeekdayParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class WeekdayFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  override withLocale(locale: DateTimeLocale): DateTimeFormat {\n    if (locale !== this.locale) {\n      return new WeekdayFormat(locale);\n    } else {\n      return this;\n    }\n  }\n\n  override writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.weekdays[date.weekday]!);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return WeekdayParser.parse(input, this.locale, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {ShortWeekdayParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class ShortWeekdayFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  override withLocale(locale: DateTimeLocale): DateTimeFormat {\n    if (locale !== this.locale) {\n      return new ShortWeekdayFormat(locale);\n    } else {\n      return this;\n    }\n  }\n\n  override writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.shortWeekdays[date.weekday]!);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return ShortWeekdayParser.parse(input, this.locale, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {Hour24Parser} from \"../\"; // forward import\n\n/** @hidden */\nexport class Hour24Format extends DateTimeFormat {\n  override writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.hour, output);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return Hour24Parser.parse(input, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {Hour12Parser} from \"../\"; // forward import\n\n/** @hidden */\nexport class Hour12Format extends DateTimeFormat {\n  override writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.hour % 12 || 12, output);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return Hour12Parser.parse(input, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {PeriodParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class PeriodFormat extends DateTimeFormat {\n  private readonly locale: DateTimeLocale;\n\n  constructor(locale: DateTimeLocale) {\n    super();\n    this.locale = locale;\n  }\n\n  override withLocale(locale: DateTimeLocale): DateTimeFormat {\n    if (locale !== this.locale) {\n      return new PeriodFormat(locale);\n    } else {\n      return this;\n    }\n  }\n\n  override writeDate(date: DateTime, output: Output): void {\n    output.write(this.locale.periods[+(date.hour >= 12)]!);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return PeriodParser.parse(input, this.locale, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {MinuteParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class MinuteFormat extends DateTimeFormat {\n  override writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.minute, output);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return MinuteParser.parse(input, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {SecondParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class SecondFormat extends DateTimeFormat {\n  override writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber2(date.second, output);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return SecondParser.parse(input, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {MillisecondParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class MillisecondFormat extends DateTimeFormat {\n  override writeDate(date: DateTime, output: Output): void {\n    DateTimeFormat.writeDateNumber3(date.millisecond, output);\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return MillisecondParser.parse(input, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Input, Output, Parser} from \"@swim/codec\";\nimport type {DateTimeInit, DateTime} from \"../DateTime\";\nimport type {DateTimeSpecifiers} from \"./DateTimeSpecifiers\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\nimport {PatternParser} from \"../\"; // forward import\n\n/** @hidden */\nexport class PatternFormat extends DateTimeFormat {\n  private readonly pattern: string;\n  private readonly specifiers: DateTimeSpecifiers;\n\n  constructor(pattern: string, specifiers: DateTimeSpecifiers) {\n    super();\n    this.pattern = pattern;\n    this.specifiers = specifiers;\n  }\n\n  override writeDate(date: DateTime, output: Output): void {\n    const pattern = this.pattern;\n    const specifiers = this.specifiers;\n    let i = 0;\n    let j = 0;\n    const n = pattern.length;\n    while (j < n) {\n      if (pattern.charCodeAt(j) === 37/*'%'*/) {\n        if (i !== j) {\n          output.write(pattern.slice(i, j));\n        }\n        const s = pattern.charAt(j + 1);\n        const f = specifiers[s];\n        if (f !== void 0) {\n          f.writeDate(date, output);\n        }\n        j += 2;\n        i = j;\n      } else {\n        j += 1;\n      }\n    }\n    if (i !== j) {\n      output.write(pattern.slice(i, j));\n    }\n  }\n\n  override parseDateTime(input: Input, date: DateTimeInit): Parser<DateTimeInit> {\n    return PatternParser.parse(input, this.pattern, this.specifiers, date);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class YearParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly year: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, year?: number, step?: number) {\n    super();\n    this.date = date;\n    this.year = year;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return YearParser.parse(input, this.date, this.year, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, year?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, YearParser, \"full year\", 4, 4, date, year, step);\n  }\n\n  static term(year: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.year = year;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, year: number, step: number): Parser<DateTimeInit> {\n    return new YearParser(date, year, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class MonthOfYearParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly month: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, month?: number, step?: number) {\n    super();\n    this.date = date;\n    this.month = month;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return MonthOfYearParser.parse(input, this.date, this.month, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, month?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, MonthOfYearParser, \"month number\", 2, 2, date, month, step);\n  }\n\n  static term(month: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.month = month - 1;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, month: number, step: number): Parser<DateTimeInit> {\n    return new MonthOfYearParser(date, month, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class MonthParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return MonthParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, MonthParser, locale, date, output);\n  }\n\n  static term(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const month = locale.months.indexOf(value);\n    if (month >= 0) {\n      date.month = month;\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected month, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new MonthParser(locale, date, output);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class ShortMonthParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return ShortMonthParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, ShortMonthParser, locale, date, output);\n  }\n\n  static term(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const month = locale.shortMonths.indexOf(value);\n    if (month >= 0) {\n      date.month = month;\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected short month, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new ShortMonthParser(locale, date, output);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class DayOfMonthParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly day: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, day?: number, step?: number) {\n    super();\n    this.date = date;\n    this.day = day;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return DayOfMonthParser.parse(input, this.date, this.day, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, day?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, DayOfMonthParser, \"day of month\", 2, 2, date, day, step);\n  }\n\n  static term(day: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.day = day;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, month: number, step: number): Parser<DateTimeInit> {\n    return new DayOfMonthParser(date, month, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class WeekdayParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return WeekdayParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, WeekdayParser, locale, date, output);\n  }\n\n  static term(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const day = locale.weekdays.indexOf(value);\n    if (day >= 0) {\n      // nop\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected weekday, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new WeekdayParser(locale, date, output);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class ShortWeekdayParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return ShortWeekdayParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, ShortWeekdayParser, locale, date, output);\n  }\n\n  static term(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const day = locale.shortWeekdays.indexOf(value);\n    if (day >= 0) {\n      // nop\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected short weekday, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new ShortWeekdayParser(locale, date, output);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class Hour24Parser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly hour: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, hour?: number, step?: number) {\n    super();\n    this.date = date;\n    this.hour = hour;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return Hour24Parser.parse(input, this.date, this.hour, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, hour?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, Hour24Parser, \"hour (24)\", 2, 2, date, hour, step);\n  }\n\n  static term(hour: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.hour = hour;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, hour: number, step: number): Parser<DateTimeInit> {\n    return new Hour24Parser(date, hour, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class Hour12Parser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly hour: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, hour?: number, step?: number) {\n    super();\n    this.date = date;\n    this.hour = hour;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return Hour12Parser.parse(input, this.date, this.hour, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, hour?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, Hour12Parser, \"hour (12)\", 2, 2, date, hour, step);\n  }\n\n  static term(hour: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.hour = (date.hour !== void 0 ? date.hour : 0) + hour;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, hour: number, step: number): Parser<DateTimeInit> {\n    return new Hour12Parser(date, hour, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport type {DateTimeLocale} from \"./DateTimeLocale\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class PeriodParser extends Parser<DateTimeInit> {\n  private readonly locale: DateTimeLocale;\n  private readonly date: DateTimeInit | undefined;\n  private readonly output: Output<string> | undefined;\n\n  constructor(locale: DateTimeLocale, date?: DateTimeInit, output?: Output<string>) {\n    super();\n    this.locale = locale;\n    this.date = date;\n    this.output = output;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return PeriodParser.parse(input, this.locale, this.date, this.output);\n  }\n\n  static parse(input: Input, locale: DateTimeLocale, date?: DateTimeInit,\n               output?: Output<string>): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateString(input, PeriodParser, locale, date, output);\n  }\n\n  static term(locale: DateTimeLocale, value: string, date: DateTimeInit, input: Input): Parser<DateTimeInit> {\n    const period = locale.months.indexOf(value);\n    if (period >= 0) {\n      date.hour = (date.hour || 0) + 12 * period;\n      return Parser.done(date);\n    } else {\n      return Parser.error(Diagnostic.message(\"expected period of day, but found \" + value, input));\n    }\n  }\n\n  static cont(locale: DateTimeLocale, date: DateTimeInit, output: Output<string>): Parser<DateTimeInit> {\n    return new PeriodParser(locale, date, output);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class MinuteParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly minute: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, minute?: number, step?: number) {\n    super();\n    this.date = date;\n    this.minute = minute;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return MinuteParser.parse(input, this.date, this.minute, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, minute?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, MinuteParser, \"minute\", 2, 2, date, minute, step);\n  }\n\n  static term(minute: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.minute = minute;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, minute: number, step: number): Parser<DateTimeInit> {\n    return new MinuteParser(date, minute, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class SecondParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly second: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, second?: number, step?: number) {\n    super();\n    this.date = date;\n    this.second = second;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return SecondParser.parse(input, this.date, this.second, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, second?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, SecondParser, \"second\", 2, 2, date, second, step);\n  }\n\n  static term(second: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.second = second;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, second: number, step: number): Parser<DateTimeInit> {\n    return new SecondParser(date, second, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport {DateTimeFormat} from \"./DateTimeFormat\";\n\n/** @hidden */\nexport class MillisecondParser extends Parser<DateTimeInit> {\n  private readonly date: DateTimeInit | undefined;\n  private readonly millisecond: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(date?: DateTimeInit, millisecond?: number, step?: number) {\n    super();\n    this.date = date;\n    this.millisecond = millisecond;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return MillisecondParser.parse(input, this.date, this.millisecond, this.step);\n  }\n\n  static parse(input: Input, date?: DateTimeInit, millisecond?: number, step?: number): Parser<DateTimeInit> {\n    return DateTimeFormat.parseDateNumber(input, MillisecondParser, \"millisecond\", 1, 3, date, millisecond, step);\n  }\n\n  static term(millisecond: number, date: DateTimeInit): Parser<DateTimeInit> {\n    date.millisecond = millisecond;\n    return Parser.done(date);\n  }\n\n  static cont(date: DateTimeInit, millisecond: number, step: number): Parser<DateTimeInit> {\n    return new MillisecondParser(date, millisecond, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport type {DateTimeInit} from \"../DateTime\";\nimport type {DateTimeSpecifiers} from \"./DateTimeSpecifiers\";\n\n/** @hidden */\nexport class PatternParser extends Parser<DateTimeInit> {\n  private readonly pattern: string;\n  private readonly specifiers: DateTimeSpecifiers;\n  private readonly date: DateTimeInit | undefined;\n  private readonly dateParser: Parser<DateTimeInit> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(pattern: string, specifiers: DateTimeSpecifiers, date?: DateTimeInit,\n              dateParser?: Parser<DateTimeInit>, step?: number) {\n    super();\n    this.pattern = pattern;\n    this.specifiers = specifiers;\n    this.date = date;\n    this.dateParser = dateParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<DateTimeInit> {\n    return PatternParser.parse(input, this.pattern, this.specifiers, this.date,\n                                     this.dateParser, this.step);\n  }\n\n  static parse(input: Input, pattern: string, specifiers: DateTimeSpecifiers,\n               date: DateTimeInit = {}, dateParser?: Parser<DateTimeInit>,\n               step: number = 0): Parser<DateTimeInit> {\n    let c = 0;\n    const n = pattern.length;\n    while (step < n) {\n      const p = pattern.charCodeAt(step);\n      if (p === 37/*'%'*/) {\n        if (dateParser === void 0) {\n          const s = pattern.charAt(step + 1);\n          const format = specifiers[s];\n          if (format !== void 0) {\n            dateParser = format.parseDateTime(input, date);\n          } else {\n            return Parser.error(Diagnostic.message(\"unknown format specifier: \" + s, input));\n          }\n        } else {\n          dateParser = dateParser.feed(input);\n        }\n        if (dateParser.isDone()) {\n          date = dateParser.bind();\n          dateParser = void 0;\n          step += 2;\n          continue;\n        } else if (dateParser.isError()) {\n          return dateParser.asError();\n        }\n      } else if (input.isCont()) {\n        c = input.head();\n        if (c === p) {\n          input.step();\n          step += 1;\n          continue;\n        } else {\n          return Parser.error(Diagnostic.expected(p, input));\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n      break;\n    }\n    if (step === n) {\n      return Parser.done(date);\n    }\n    return new PatternParser(pattern, specifiers, date, dateParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {FilterTimeInterval} from \"../\"; // forward import\nimport {YearInterval} from \"../\"; // forward import\nimport {MonthInterval} from \"../\"; // forward import\nimport {WeekInterval} from \"../\"; // forward import\nimport {DayInterval} from \"../\"; // forward import\nimport {HourInterval} from \"../\"; // forward import\nimport {MinuteInterval} from \"../\"; // forward import\nimport {SecondInterval} from \"../\"; // forward import\nimport {MillisecondInterval} from \"../\"; // forward import\n\nexport abstract class TimeInterval {\n  abstract offset(d: AnyDateTime, k?: number): DateTime;\n\n  next(d: AnyDateTime, k?: number): DateTime {\n    return this.floor(this.offset(d, k));\n  }\n\n  abstract floor(d: AnyDateTime): DateTime;\n\n  ceil(d: AnyDateTime): DateTime {\n    if (d instanceof DateTime) {\n      d = new DateTime(d.time - 1, d.zone);\n    } else {\n      d = DateTime.time(d) - 1;\n    }\n    return this.next(this.floor(d), 1);\n  }\n\n  round(t: AnyDateTime): DateTime {\n    const d = DateTime.fromAny(t);\n    const d0 = this.floor(d);\n    const d1 = this.ceil(d);\n    return d.time - d0.time < d1.time - d.time ? d0 : d1;\n  }\n\n  range(t0: AnyDateTime, t1: AnyDateTime, step?: number): DateTime[] {\n    let d0 = this.ceil(t0);\n    const d1 = DateTime.time(t1);\n    const ds: DateTime[] = [];\n    step = typeof step === \"number\" ? Math.floor(step) : 1;\n    if (step > 0) {\n      while (d0.isDefined() && d0.time < d1) {\n        ds.push(d0);\n        d0 = this.next(d0, step);\n      }\n    }\n    return ds;\n  }\n\n  filter(predicate: (d: DateTime) => boolean): TimeInterval {\n    return new FilterTimeInterval(this, predicate);\n  }\n\n  @Lazy\n  static get year(): UnitTimeInterval {\n    return new YearInterval();\n  }\n\n  @Lazy\n  static get month(): UnitTimeInterval {\n    return new MonthInterval();\n  }\n\n  @Lazy\n  static get week(): TimeInterval {\n    return new WeekInterval();\n  }\n\n  @Lazy\n  static get day(): UnitTimeInterval {\n    return new DayInterval();\n  }\n\n  @Lazy\n  static get hour(): UnitTimeInterval {\n    return new HourInterval();\n  }\n\n  @Lazy\n  static get minute(): UnitTimeInterval {\n    return new MinuteInterval();\n  }\n\n  @Lazy\n  static get second(): UnitTimeInterval {\n    return new SecondInterval();\n  }\n\n  @Lazy\n  static get millisecond(): UnitTimeInterval {\n    return new MillisecondInterval();\n  }\n\n  static years(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.year.range(d0, d1, step);\n  }\n\n  static months(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.month.range(d0, d1, step);\n  }\n\n  static weeks(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.week.range(d0, d1, step);\n  }\n\n  static days(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.day.range(d0, d1, step);\n  }\n\n  static hours(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.hour.range(d0, d1, step);\n  }\n\n  static minutes(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.minute.range(d0, d1, step);\n  }\n\n  static seconds(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.second.range(d0, d1, step);\n  }\n\n  static milliseconds(d0: AnyDateTime, d1: AnyDateTime, step?: number): DateTime[] {\n    return TimeInterval.millisecond.range(d0, d1, step);\n  }\n\n  /** @hidden */\n  static readonly MillisPerSecond: number = 1000;\n  /** @hidden */\n  static readonly MillisPerMinute: number = 60 * TimeInterval.MillisPerSecond;\n  /** @hidden */\n  static readonly MillisPerHour: number = 60 * TimeInterval.MillisPerMinute;\n}\n\nexport abstract class UnitTimeInterval extends TimeInterval {\n  abstract every(k: number): TimeInterval;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeInterval} from \"./TimeInterval\";\n\n/** @hidden */\nexport class FilterTimeInterval extends TimeInterval {\n  private readonly unit: TimeInterval;\n  private readonly predicate: (d: DateTime) => boolean;\n\n  constructor(unit: TimeInterval, predicate: (d: DateTime) => boolean) {\n    super();\n    this.unit = unit;\n    this.predicate = predicate;\n  }\n\n  override offset(t: AnyDateTime, k?: number): DateTime {\n    let d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    while (k < 0) {\n      do {\n        d = this.unit.offset(d, -1);\n      } while (d.isDefined() && !this.predicate(d));\n      k += 1;\n    }\n    while (k > 0) {\n      do {\n        d = this.unit.offset(d, 1);\n      } while (d.isDefined() && !this.predicate(d));\n      k -= 1;\n    }\n    return d;\n  }\n\n  override floor(t: AnyDateTime): DateTime {\n    let d = DateTime.fromAny(t);\n    while (d = this.unit.floor(d), d.isDefined() && !this.predicate(d)) {\n      d = new DateTime(d.time - 1, d.zone);\n    }\n    return d;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"./TimeInterval\";\nimport {YearsInterval} from \"../\"; // forward import\n\n/** @hidden */\nexport class YearInterval extends UnitTimeInterval {\n  override offset(t: AnyDateTime, k?: number): DateTime {\n    let d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.withYear(d.year + k);\n    return d;\n  }\n\n  override next(t: AnyDateTime, k?: number): DateTime {\n    const d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.withYear(d.year + k).withMonth(0, 1).withHour(0, 0, 0, 0);\n  }\n\n  override floor(t: AnyDateTime): DateTime {\n    const d = DateTime.fromAny(t);\n    return d.withMonth(0, 1).withHour(0, 0, 0, 0);\n  }\n\n  override ceil(t: AnyDateTime): DateTime {\n    let d = DateTime.fromAny(t);\n    d = new DateTime(d.time - 1, d.zone);\n    d = d.withMonth(0, 1).withHour(0, 0, 0, 0);\n    d = d.withYear(d.year + 1);\n    return d.withMonth(0, 1).withHour(0, 0, 0, 0);\n  }\n\n  override every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new YearsInterval(k);\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeInterval} from \"./TimeInterval\";\n\n/** @hidden */\nexport class YearsInterval extends TimeInterval {\n  private readonly stride: number;\n\n  constructor(stride: number) {\n    super();\n    this.stride = stride;\n  }\n\n  override offset(t: AnyDateTime, k?: number): DateTime {\n    const d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.withYear(d.year + k * this.stride);\n  }\n\n  override next(t: AnyDateTime, k?: number): DateTime {\n    let d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.withYear(Math.floor((d.year + k * this.stride) / this.stride) * this.stride);\n    return d.withMonth(0, 1).withHour(0, 0, 0, 0);\n  }\n\n  override floor(t: AnyDateTime): DateTime {\n    let d = DateTime.fromAny(t);\n    d = d.withYear(Math.floor(d.year / this.stride) * this.stride);\n    return d.withMonth(0, 1).withHour(0, 0, 0, 0);\n  }\n\n  override ceil(t: AnyDateTime): DateTime {\n    let d = DateTime.fromAny(t);\n    d = new DateTime(d.time - 1, d.zone);\n    d = d.withYear(Math.floor(d.year / this.stride) * this.stride);\n    d = d.withMonth(0, 1).withHour(0, 0, 0, 0);\n    d = d.withYear(Math.floor((d.year + this.stride) / this.stride) * this.stride);\n    return d.withMonth(0, 1).withHour(0, 0, 0, 0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"./TimeInterval\";\nimport {FilterTimeInterval} from \"./FilterTimeInterval\";\n\n/** @hidden */\nexport class MonthInterval extends UnitTimeInterval {\n  override offset(t: AnyDateTime, k?: number): DateTime {\n    const d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.withMonth(d.month + k);\n  }\n\n  override next(t: AnyDateTime, k?: number): DateTime {\n    let d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.withMonth(d.month + k);\n    return d.withDay(1).withHour(0, 0, 0, 0);\n  }\n\n  override floor(t: AnyDateTime): DateTime {\n    const d = DateTime.fromAny(t);\n    return d.withDay(1).withHour(0, 0, 0, 0);\n  }\n\n  override ceil(t: AnyDateTime): DateTime {\n    let d = DateTime.fromAny(t);\n    d = new DateTime(d.time - 1, d.zone);\n    d = d.withDay(1).withHour(0, 0, 0, 0);\n    d = d.withMonth(d.month + 1);\n    return d.withDay(1).withHour(0, 0, 0, 0);\n  }\n\n  override every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new FilterTimeInterval(this, MonthInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n\n  /** @hidden */\n  static modulo(k: number, d: DateTime): boolean {\n    const month = d.month;\n    return isFinite(month) && month % k === 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeInterval} from \"./TimeInterval\";\n\n/** @hidden */\nexport class WeekInterval extends TimeInterval {\n  readonly day: number;\n\n  constructor(day: number = 0) {\n    super();\n    this.day = day;\n  }\n\n  override offset(t: AnyDateTime, k?: number): DateTime {\n    const d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.withDay(d.day + 7 * k);\n  }\n\n  override next(t: AnyDateTime, k?: number): DateTime {\n    let d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.withDay(d.day + 7 * k);\n    d = d.withDay(d.day - (d.weekday + 7 - this.day) % 7);\n    return d.withHour(0, 0, 0, 0);\n  }\n\n  override floor(t: AnyDateTime): DateTime {\n    let d = DateTime.fromAny(t);\n    d = d.withDay(d.day - (d.weekday + 7 - this.day) % 7);\n    return d.withHour(0, 0, 0, 0);\n  }\n\n  override ceil(t: AnyDateTime): DateTime {\n    let d = DateTime.fromAny(t);\n    d = new DateTime(d.time - 1, d.zone);\n    d = d.withDay(d.day - (d.weekday + 7 - this.day) % 7);\n    d = d.withHour(0, 0, 0, 0);\n    d = d.withDay(d.day + 7);\n    return d.withHour(0, 0, 0, 0);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"./TimeInterval\";\nimport {FilterTimeInterval} from \"./FilterTimeInterval\";\n\n/** @hidden */\nexport class DayInterval extends UnitTimeInterval {\n  override offset(t: AnyDateTime, k?: number): DateTime {\n    const d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    return d.withDay(d.day + k);\n  }\n\n  override next(t: AnyDateTime, k?: number): DateTime {\n    let d = DateTime.fromAny(t);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = d.withDay(d.day + k);\n    return d.withHour(0, 0, 0, 0);\n  }\n\n  override floor(t: AnyDateTime): DateTime {\n    const d = DateTime.fromAny(t);\n    return d.withHour(0, 0, 0, 0);\n  }\n\n  override ceil(t: AnyDateTime): DateTime {\n    let d = DateTime.fromAny(t);\n    d = new DateTime(d.time - 1, d.zone);\n    d = d.withHour(0, 0, 0, 0);\n    d = d.withDay(d.day + 1);\n    return d.withHour(0, 0, 0, 0);\n  }\n\n  override every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new FilterTimeInterval(this, DayInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n\n  /** @hidden */\n  static modulo(k: number, d: DateTime): boolean {\n    const day = d.day;\n    return isFinite(day) && day % k === 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"./TimeInterval\";\nimport {FilterTimeInterval} from \"./FilterTimeInterval\";\n\n/** @hidden */\nexport class HourInterval extends UnitTimeInterval {\n  override offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * TimeInterval.MillisPerHour;\n    return new DateTime(d, z);\n  }\n\n  override next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * TimeInterval.MillisPerHour;\n    let dtz = z.offset * TimeInterval.MillisPerMinute % TimeInterval.MillisPerHour;\n    if (dtz < 0) {\n      dtz += TimeInterval.MillisPerHour;\n    }\n    d = Math.floor((d - dtz) / TimeInterval.MillisPerHour) * TimeInterval.MillisPerHour + dtz;\n    return new DateTime(d, z);\n  }\n\n  override floor(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    let dtz = z.offset * TimeInterval.MillisPerMinute % TimeInterval.MillisPerHour;\n    if (dtz < 0) {\n      dtz += TimeInterval.MillisPerHour;\n    }\n    d = Math.floor((d - dtz) / TimeInterval.MillisPerHour) * TimeInterval.MillisPerHour + dtz;\n    return new DateTime(d, z);\n  }\n\n  override ceil(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d -= 1;\n    let dtz = z.offset * TimeInterval.MillisPerMinute % TimeInterval.MillisPerHour;\n    if (dtz < 0) {\n      dtz += TimeInterval.MillisPerHour;\n    }\n    d = (Math.floor((d - dtz) / TimeInterval.MillisPerHour) * TimeInterval.MillisPerHour + dtz) + TimeInterval.MillisPerHour;\n    d = Math.floor((d - dtz) / TimeInterval.MillisPerHour) * TimeInterval.MillisPerHour + dtz;\n    return new DateTime(d, z);\n  }\n\n  override every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new FilterTimeInterval(this, HourInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n\n  /** @hidden */\n  static modulo(k: number, d: DateTime): boolean {\n    const hour = d.hour;\n    return isFinite(hour) && hour % k === 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"./TimeInterval\";\nimport {FilterTimeInterval} from \"./FilterTimeInterval\";\n\n/** @hidden */\nexport class MinuteInterval extends UnitTimeInterval {\n  override offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * TimeInterval.MillisPerMinute;\n    return new DateTime(d, z);\n  }\n\n  override next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d = Math.floor((d + k * TimeInterval.MillisPerMinute) / TimeInterval.MillisPerMinute) * TimeInterval.MillisPerMinute;\n    return new DateTime(d, z);\n  }\n\n  override floor(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d = Math.floor(d / TimeInterval.MillisPerMinute) * TimeInterval.MillisPerMinute;\n    return new DateTime(d, z);\n  }\n\n  override ceil(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d = Math.floor(((Math.floor((d - 1) / TimeInterval.MillisPerMinute) * TimeInterval.MillisPerMinute) + TimeInterval.MillisPerMinute) / TimeInterval.MillisPerMinute) * TimeInterval.MillisPerMinute;\n    return new DateTime(d, z);\n  }\n\n  override every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new FilterTimeInterval(this, MinuteInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n\n  /** @hidden */\n  static modulo(k: number, d: DateTime): boolean {\n    const minute = d.minute;\n    return isFinite(minute) && minute % k === 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"./TimeInterval\";\nimport {FilterTimeInterval} from \"./FilterTimeInterval\";\n\n/** @hidden */\nexport class SecondInterval extends UnitTimeInterval {\n  override offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * TimeInterval.MillisPerSecond;\n    return new DateTime(d, z);\n  }\n\n  override next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * TimeInterval.MillisPerSecond;\n    d = Math.floor(d / TimeInterval.MillisPerSecond) * TimeInterval.MillisPerSecond;\n    return new DateTime(d, z);\n  }\n\n  override floor(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d = Math.floor(d / TimeInterval.MillisPerSecond) * TimeInterval.MillisPerSecond;\n    return new DateTime(d, z);\n  }\n\n  override ceil(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    d = Math.floor(((Math.floor((d - 1) / TimeInterval.MillisPerSecond) * TimeInterval.MillisPerSecond) + TimeInterval.MillisPerSecond) / TimeInterval.MillisPerSecond) * TimeInterval.MillisPerSecond;\n    return new DateTime(d, z);\n  }\n\n  override every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new FilterTimeInterval(this, SecondInterval.modulo.bind(void 0, k));\n    } else {\n      throw new Error('' + k);\n    }\n  }\n\n  /** @hidden */\n  static modulo(k: number, d: DateTime): boolean {\n    const second = d.second;\n    return isFinite(second) && second % k === 0;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {UnitTimeInterval, TimeInterval} from \"./TimeInterval\";\nimport {MillisecondsInterval} from \"../\"; // forward import\n\n/** @hidden */\nexport class MillisecondInterval extends UnitTimeInterval {\n  override offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k;\n    return new DateTime(d, z);\n  }\n\n  override next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k;\n    return new DateTime(d, z);\n  }\n\n  override floor(d: AnyDateTime): DateTime {\n    return DateTime.fromAny(d);\n  }\n\n  override ceil(d: AnyDateTime): DateTime {\n    return DateTime.fromAny(d);\n  }\n\n  override every(k: number): TimeInterval {\n    if (k === 1) {\n      return this;\n    } else if (isFinite(k) && k >= 1) {\n      return new MillisecondsInterval(k);\n    } else {\n      throw new Error(\"\" + k);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeInterval} from \"./TimeInterval\";\n\n/** @hidden */\nexport class MillisecondsInterval extends TimeInterval {\n  private readonly stride: number;\n\n  constructor(stride: number) {\n    super();\n    if (!isFinite(stride)) {\n      stride = 1;\n    }\n    this.stride = stride;\n  }\n\n  override offset(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    d += k * this.stride;\n    return new DateTime(d, z);\n  }\n\n  override next(d: AnyDateTime, k?: number): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    k = Math.max(1, typeof k === \"number\" ? Math.floor(k) : 1);\n    const stride = this.stride;\n    d = Math.floor((d + k * stride) / stride) * stride;\n    return new DateTime(d, z);\n  }\n\n  override floor(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    const stride = this.stride;\n    d = Math.floor(d / stride) * stride;\n    return new DateTime(d, z);\n  }\n\n  override ceil(d: AnyDateTime): DateTime {\n    const z = DateTime.zone(d);\n    d = DateTime.time(d);\n    const stride = this.stride;\n    d = Math.floor(((Math.floor((d - 1) / stride) * stride) + stride) / stride) * stride;\n    return new DateTime(d, z);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Domain, Interpolate, Interpolator} from \"@swim/mapping\";\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeDomainInterpolator} from \"./\"; // forward import\nimport {TimeRange} from \"./\"; // forward import\n\nexport interface TimeDomain extends Domain<DateTime>, Interpolate<TimeDomain> {\n  readonly 0: DateTime;\n\n  readonly 1: DateTime;\n\n  readonly inverse: TimeRange;\n\n  contains(t: AnyDateTime): boolean;\n\n  interpolateTo(that: TimeDomain): Interpolator<TimeDomain>;\n  interpolateTo(that: unknown): Interpolator<TimeDomain> | null;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const TimeDomain = function (x0: DateTime, x1: DateTime): TimeDomain {\n  const domain = function (t: DateTime): number {\n    const t0 = domain[0].time;\n    const t1 = domain[1].time;\n    const dt = t1 - t0;\n    return dt !== 0 ? (t.time - t0) / dt : 0;\n  } as TimeDomain;\n  Object.setPrototypeOf(domain, TimeDomain.prototype);\n  Object.defineProperty(domain, 0, {\n    value: x0,\n    enumerable: true,\n  });\n  Object.defineProperty(domain, 1, {\n    value: x1,\n    enumerable: true,\n  });\n  return domain;\n} as {\n  (x0: DateTime, x1: DateTime): TimeDomain;\n\n  /** @hidden */\n  prototype: TimeDomain;\n}\n\nTimeDomain.prototype = Object.create(Domain.prototype);\n\nObject.defineProperty(TimeDomain.prototype, \"inverse\", {\n  get(this: TimeDomain): TimeRange {\n    return TimeRange(this[0], this[1]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nTimeDomain.prototype.contains = function (t: AnyDateTime): boolean {\n  t = DateTime.time(t);\n  return this[0].time <= t && t <= this[1].time;\n};\n\nTimeDomain.prototype.interpolateTo = function (this: TimeDomain, that: unknown): Interpolator<TimeDomain> | null {\n  if (that instanceof TimeDomain) {\n    return TimeDomainInterpolator(this, that);\n  }\n  return null;\n} as typeof TimeDomain.prototype.interpolateTo;\n\nTimeDomain.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof TimeDomain;\n};\n\nTimeDomain.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof TimeDomain) {\n    return that.canEqual(this) && this[0].equals(that[0]) && this[1].equals(that[1]);\n  }\n  return false;\n};\n\nTimeDomain.prototype.toString = function (): string {\n  return \"TimeDomain(\" + this[0] + \", \" + this[1] + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {DateTime} from \"../DateTime\";\nimport {TimeDomain} from \"./TimeDomain\";\n\n/** @hidden */\nexport const TimeDomainInterpolator = function (x0: TimeDomain, x1: TimeDomain): Interpolator<TimeDomain> {\n  const interpolator = function (u: number): TimeDomain {\n    const x0 = interpolator[0];\n    const x00 = x0[0];\n    const x01 = x0[1];\n    const x1 = interpolator[1];\n    const x10 = x1[0];\n    const x11 = x1[1];\n    return TimeDomain(new DateTime(x00.time + u * (x10.time - x00.time), u === 0 ? x00.zone : x10.zone),\n                      new DateTime(x01.time + u * (x11.time - x01.time), u === 0 ? x01.zone : x11.zone));\n  } as Interpolator<TimeDomain>;\n  Object.setPrototypeOf(interpolator, TimeDomainInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: x0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: x1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (x0: TimeDomain, x1: TimeDomain): Interpolator<TimeDomain>;\n\n  /** @hidden */\n  prototype: Interpolator<TimeDomain>;\n};\n\nTimeDomainInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Range, Interpolate, Interpolator} from \"@swim/mapping\";\nimport {DateTime} from \"../DateTime\";\nimport {TimeDomain} from \"./\"; // forward import\nimport {TimeRangeInterpolator} from \"./\"; // forward import\n\nexport interface TimeRange extends Range<DateTime>, Interpolate<TimeRange> {\n  readonly 0: DateTime;\n\n  readonly 1: DateTime;\n\n  readonly inverse: TimeDomain;\n\n  interpolateTo(that: TimeRange): Interpolator<TimeRange>;\n  interpolateTo(that: unknown): Interpolator<TimeRange> | null;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const TimeRange = function (y0: DateTime, y1: DateTime): TimeRange {\n  const range = function (u: number): DateTime {\n    const t0 = range[0].time;\n    const t1 = range[1].time;\n    return new DateTime(t0 + u * (t1 - t0), u === 0 ? range[0].zone : range[1].zone);\n  } as TimeRange;\n  Object.setPrototypeOf(range, TimeRange.prototype);\n  Object.defineProperty(range, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(range, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return range;\n} as {\n  (y0: DateTime, y1: DateTime): TimeRange;\n\n  /** @hidden */\n  prototype: TimeRange;\n};\n\nTimeRange.prototype = Object.create(Range.prototype);\n\nObject.defineProperty(TimeRange.prototype, \"inverse\", {\n  get(this: TimeRange): TimeDomain {\n    return TimeDomain(this[0], this[1]);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nTimeRange.prototype.interpolateTo = function (this: TimeRange, that: unknown): Interpolator<TimeRange> | null {\n  if (that instanceof TimeRange) {\n    return TimeRangeInterpolator(this, that);\n  }\n  return null;\n} as typeof TimeRange.prototype.interpolateTo;\n\nTimeRange.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof TimeRange;\n};\n\nTimeRange.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof TimeRange) {\n    return that.canEqual(this) && this[0].equals(that[0]) && this[1].equals(that[1]);\n  }\n  return false;\n};\n\nTimeRange.prototype.toString = function (): string {\n  return \"TimeRange(\" + this[0] + \", \" + this[1] + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/mapping\";\nimport {DateTime} from \"../DateTime\";\nimport {TimeRange} from \"./TimeRange\";\n\n/** @hidden */\nexport const TimeRangeInterpolator = function (y0: TimeRange, y1: TimeRange): Interpolator<TimeRange> {\n  const interpolator = function (u: number): TimeRange {\n    const y0 = interpolator[0];\n    const y00 = y0[0];\n    const y01 = y0[1];\n    const y1 = interpolator[1];\n    const y10 = y1[0];\n    const y11 = y1[1];\n    return TimeRange(new DateTime(y00.time + u * (y10.time - y00.time), u === 0 ? y00.zone : y10.zone),\n                     new DateTime(y01.time + u * (y11.time - y01.time), u === 0 ? y01.zone : y11.zone));\n  } as Interpolator<TimeRange>;\n  Object.setPrototypeOf(interpolator, TimeRangeInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: y0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: y1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (y0: TimeRange, y1: TimeRange): Interpolator<TimeRange>;\n\n  /** @hidden */\n  prototype: Interpolator<TimeRange>;\n};\n\nTimeRangeInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent} from \"@swim/util\";\nimport {Mapping, Interpolate, Interpolator, LinearRange, ContinuousScale} from \"@swim/mapping\";\nimport {AnyDateTime, DateTime} from \"../DateTime\";\nimport {TimeDomain} from \"./TimeDomain\";\nimport {TimeScaleInterpolator} from \"./\"; // forward import\n\nexport interface TimeScale extends ContinuousScale<DateTime, number>, Interpolate<TimeScale> {\n  readonly domain: TimeDomain;\n\n  readonly range: LinearRange;\n\n  readonly inverse: Mapping<number, DateTime>;\n\n  withDomain(domain: TimeDomain): TimeScale;\n  withDomain(x0: AnyDateTime, x1: AnyDateTime): TimeScale;\n\n  overRange(range: LinearRange): TimeScale;\n  overRange(y0: number, y1: number): TimeScale;\n\n  clampDomain(xMin: DateTime | undefined, xMax: DateTime | undefined,\n              zMin: number | undefined, zMax: number | undefined,\n              epsilon?: number): TimeScale;\n\n  solveDomain(x1: DateTime, y1: number, x2?: DateTime, y2?: number,\n              reflect?: boolean, epsilon?: number): TimeScale;\n\n  interpolateTo(that: TimeScale): Interpolator<TimeScale>;\n  interpolateTo(that: unknown): Interpolator<TimeScale> | null;\n\n  canEqual(that: unknown): boolean;\n\n  equals(that: unknown): boolean;\n\n  toString(): string;\n}\n\nexport const TimeScale = function (domain: TimeDomain, range: LinearRange): TimeScale {\n  const scale = function (x: DateTime): number {\n    return scale.range(scale.domain(x));\n  } as TimeScale;\n  Object.setPrototypeOf(scale, TimeScale.prototype);\n  Object.defineProperty(scale, \"domain\", {\n    value: domain,\n    enumerable: true,\n  });\n  Object.defineProperty(scale, \"range\", {\n    value: range,\n    enumerable: true,\n  });\n  return scale;\n} as {\n  (domain: TimeDomain, range: LinearRange): TimeScale;\n\n  /** @hidden */\n  prototype: TimeScale;\n};\n\nTimeScale.prototype = Object.create(ContinuousScale.prototype);\n\nObject.defineProperty(TimeScale.prototype, \"inverse\", {\n  get(this: TimeScale): Mapping<number, DateTime> {\n    return Mapping(this.range.inverse, this.domain.inverse);\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nTimeScale.prototype.withDomain = function (x0: TimeDomain | AnyDateTime, x1?: AnyDateTime): TimeScale {\n  let domain: TimeDomain;\n  if (arguments.length === 1) {\n    domain = x0 as TimeDomain;\n  } else {\n    x0 = DateTime.fromAny(x0 as AnyDateTime);\n    x1 = DateTime.fromAny(x1!);\n    domain = TimeDomain(x0 as DateTime, x1 as DateTime);\n  }\n  return TimeScale(domain, this.range);\n};\n\nTimeScale.prototype.overRange = function (y0: LinearRange | number, y1?: number): TimeScale {\n  let range: LinearRange;\n  if (arguments.length === 1) {\n    range = y0 as LinearRange;\n  } else {\n    range = LinearRange(y0 as number, y1!);\n  }\n  return TimeScale(this.domain, range);\n};\n\nTimeScale.prototype.clampDomain = function (xMin: DateTime | undefined, xMax: DateTime | undefined,\n                                            zMin: number | undefined, zMax: number | undefined,\n                                            epsilon?: number): TimeScale {\n  if (epsilon === void 0) {\n    epsilon = Equivalent.Epsilon;\n  }\n  const x0 = this.domain[0];\n  const x1 = this.domain[1];\n  let t0 = x0.time;\n  let t1 = x1.time;\n  const tMin = xMin !== void 0 ? xMin.time : void 0;\n  const tMax = xMax !== void 0 ? xMax.time : void 0;\n  if (tMin !== void 0 && tMax !== void 0 && Math.abs(t1 - t0) > tMax - tMin) {\n    if (t0 < t1) {\n      t0 = tMin;\n      t1 = tMax;\n    } else {\n      t1 = tMin;\n      t0 = tMax;\n    }\n  } else {\n    if (tMin !== void 0) {\n      if (t0 < t1 && t0 < tMin) {\n        t1 += tMin - t0;\n        t0 = tMin;\n      } else if (t1 < t0 && t1 < tMin) {\n        t0 += tMin - t1;\n        t1 = tMin;\n      }\n    }\n    if (tMax !== void 0) {\n      if (t0 < t1 && t1 > tMax) {\n        t0 -= t1 - tMax;\n        t1 = tMax;\n      } else if (t1 < t0 && t0 > tMax) {\n        t1 -= t0 - tMax;\n        t0 = tMax;\n      }\n    }\n  }\n\n  const y0 = this(x0);\n  const y1 = this(x1);\n  const dy = y0 < y1 ? y1 - y0 : y0 - y1;\n  const z = Math.abs(dy / (t1 - t0));\n  if (zMin !== void 0 && z < 1 / zMin) {\n    const dz = dy * zMin;\n    const tSum = t0 + t1;\n    t0 = (tSum - dz) / 2;\n    t1 = (tSum + dz) / 2;\n  } else if (zMax !== void 0 && z > 1 / zMax) {\n    const dz = dy * zMax;\n    const tSum = t0 + t1;\n    t0 = (tSum - dz) / 2;\n    t1 = (tSum + dz) / 2;\n  }\n\n  if (Math.abs(t0 - x0.time) < epsilon && Math.abs(t1 - x1.time) < epsilon) {\n    return this;\n  } else {\n    return TimeScale(TimeDomain(new DateTime(t0, x0.zone), new DateTime(t1, x1.zone)), this.range);\n  }\n};\n\nTimeScale.prototype.solveDomain = function (x1: DateTime, y1: number, x2?: DateTime, y2?: number,\n                                            reflect?: boolean, epsilon?: number): TimeScale {\n  if (epsilon === void 0) {\n    epsilon = Equivalent.Epsilon;\n  }\n  const dt = this.domain[1].time - this.domain[0].time;\n  const y0 = this.range[0];\n  const y3 = this.range[1];\n  const t1 = x1.time;\n  const t2 = x2 !== void 0 ? x2.time : void 0;\n  let m: number;\n  if (t2 === void 0 || y2 === void 0 || Math.abs(t2 - t1) < epsilon || Math.abs(y2 - y1) < epsilon) {\n    m = (y3 - y0) / (dt !== 0 ? dt : epsilon);\n  } else {\n    m = (y2 - y1) / (t2 - t1);\n    if ((reflect === void 0 || !reflect) && (m < 0 !== (y3 - y0) / dt < 0)) {\n      m = -m;\n    }\n  }\n  const b = y1 - m * t1;\n  const t0 = (y0 - b) / m;\n  const t3 = (y3 - b) / m;\n\n  if (Math.abs(t0 - this.domain[0].time) < epsilon && Math.abs(t3 - this.domain[1].time) < epsilon) {\n    return this;\n  } else {\n    return TimeScale(TimeDomain(new DateTime(t0, this.domain[0].zone), new DateTime(t3, this.domain[1].zone)), this.range);\n  }\n};\n\nTimeScale.prototype.interpolateTo = function (this: TimeScale, that: unknown): Interpolator<TimeScale> | null {\n  if (that instanceof TimeScale) {\n    return TimeScaleInterpolator(this, that);\n  }\n  return null;\n} as typeof TimeScale.prototype.interpolateTo;\n\nTimeScale.prototype.canEqual = function (that: unknown): boolean {\n  return that instanceof TimeScale;\n};\n\nTimeScale.prototype.equals = function (that: unknown): boolean {\n  if (this === that) {\n    return true;\n  } else if (that instanceof TimeScale) {\n    return this.domain.equals(that.domain) && this.range.equals(that.range);\n  }\n  return false;\n};\n\nTimeScale.prototype.toString = function (): string {\n  return \"TimeScale(\" + this.domain + \", \" + this.range + \")\";\n};\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator, LinearRange} from \"@swim/mapping\";\nimport {DateTime} from \"../DateTime\";\nimport {TimeDomain} from \"./TimeDomain\";\nimport {TimeScale} from \"./TimeScale\";\n\n/** @hidden */\nexport const TimeScaleInterpolator = function (s0: TimeScale, s1: TimeScale): Interpolator<TimeScale> {\n  const interpolator = function (u: number): TimeScale {\n    const s0 = interpolator[0];\n    const s1 = interpolator[1];\n    const x0 = s0.domain;\n    const x00 = x0[0].time;\n    const x01 = x0[1].time;\n    const x1 = s1.domain;\n    const x10 = x1[0].time;\n    const x11 = x1[1].time;\n    const domain = TimeDomain(new DateTime(x00 + u * (x10 - x00), u === 0 ? x0[0].zone : x1[0].zone),\n                              new DateTime(x01 + u * (x11 - x01), u === 0 ? x0[1].zone : x1[1].zone));\n    const y0 = s0.range;\n    const y00 = y0[0];\n    const y01 = y0[1];\n    const y1 = s1.range;\n    const y10 = y1[0];\n    const y11 = y1[1];\n    const range = LinearRange(y00 + u * (y10 - y00), y01 + u * (y11 - y01));\n    return TimeScale(domain, range);\n  } as Interpolator<TimeScale>;\n  Object.setPrototypeOf(interpolator, TimeScaleInterpolator.prototype);\n  Object.defineProperty(interpolator, 0, {\n    value: s0,\n    enumerable: true,\n  });\n  Object.defineProperty(interpolator, 1, {\n    value: s1,\n    enumerable: true,\n  });\n  return interpolator;\n} as {\n  (s0: TimeScale, s1: TimeScale): Interpolator<TimeScale>;\n\n  /** @hidden */\n  prototype: Interpolator<TimeScale>;\n};\n\nTimeScaleInterpolator.prototype = Object.create(Interpolator.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {HashCode} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport type {AnyValue, Value} from \"@swim/structure\";\nimport {Recon} from \"@swim/recon\";\nimport type {AnyUri, Uri} from \"@swim/uri\";\nimport {EventMessage} from \"./\"; // forward import\nimport {CommandMessage} from \"./\"; // forward import\nimport {LinkRequest} from \"./\"; // forward import\nimport {LinkedResponse} from \"./\"; // forward import\nimport {SyncRequest} from \"./\"; // forward import\nimport {SyncedResponse} from \"./\"; // forward import\nimport {UnlinkRequest} from \"./\"; // forward import\nimport {UnlinkedResponse} from \"./\"; // forward import\nimport {AuthRequest} from \"./\"; // forward import\nimport {AuthedResponse} from \"./\"; // forward import\nimport {DeauthRequest} from \"./\"; // forward import\nimport {DeauthedResponse} from \"./\"; // forward import\n\nexport abstract class Envelope implements HashCode, Debug {\n  get tag(): string {\n    return (this.constructor as unknown as {readonly tag: string}).tag;\n  }\n\n  abstract readonly node: Uri;\n\n  abstract withNode(node: AnyUri): Envelope;\n\n  abstract readonly lane: Uri;\n\n  abstract withLane(lane: AnyUri): Envelope;\n\n  declare readonly prio: number; // getter defined below to work around useDefineForClassFields lunacy\n\n  withPrio(prio: number): Envelope {\n    return this;\n  }\n\n  declare readonly rate: number; // getter defined below to work around useDefineForClassFields lunacy\n\n  withRate(rate: number): Envelope {\n    return this;\n  }\n\n  abstract readonly body: Value;\n\n  abstract withBody(body: AnyValue): Envelope;\n\n  abstract toValue(): Value;\n\n  toRecon(): string {\n    return Recon.toString(this.toValue());\n  }\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static fromValue(value: Value): Envelope | null {\n    switch (value.tag) {\n      case \"event\": return EventMessage.fromValue(value);\n      case \"command\": return CommandMessage.fromValue(value);\n      case \"link\": return LinkRequest.fromValue(value);\n      case \"linked\": return LinkedResponse.fromValue(value);\n      case \"sync\": return SyncRequest.fromValue(value);\n      case \"synced\": return SyncedResponse.fromValue(value);\n      case \"unlink\": return UnlinkRequest.fromValue(value);\n      case \"unlinked\": return UnlinkedResponse.fromValue(value);\n      case \"auth\": return AuthRequest.fromValue(value);\n      case \"authed\": return AuthedResponse.fromValue(value);\n      case \"deauth\": return DeauthRequest.fromValue(value);\n      case \"deauthed\": return DeauthedResponse.fromValue(value);\n      default: return null;\n    }\n  }\n\n  static parseRecon(input: string): Envelope | null {\n    return Envelope.fromValue(Recon.parse(input));\n  }\n}\nObject.defineProperty(Envelope.prototype, \"prio\", {\n  get(this: Envelope): number {\n    return 0;\n  },\n  enumerable: true,\n  configurable: true,\n});\nObject.defineProperty(Envelope.prototype, \"rate\", {\n  get(this: Envelope): number {\n    return 0;\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Arrays} from \"@swim/util\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {Item, Attr, AnyValue, Value, Record, Form} from \"@swim/structure\";\nimport type {\n  EventMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n} from \"@swim/warp\";\nimport type {Host} from \"../host/Host\";\nimport type {DownlinkOwner} from \"./DownlinkOwner\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport type {DownlinkModel} from \"./DownlinkModel\";\n\nexport type DownlinkType = \"event\" | \"list\" | \"map\" | \"value\";\n\nexport type DownlinkOnEvent = (body: Value, downlink: Downlink) => void;\nexport type DownlinkOnCommand = (body: Value, downlink: Downlink) => void;\nexport type DownlinkWillLink = (downlink: Downlink) => void;\nexport type DownlinkDidLink = (downlink: Downlink) => void;\nexport type DownlinkWillSync = (downlink: Downlink) => void;\nexport type DownlinkDidSync = (downlink: Downlink) => void;\nexport type DownlinkWillUnlink = (downlink: Downlink) => void;\nexport type DownlinkDidUnlink = (downlink: Downlink) => void;\nexport type DownlinkDidConnect = (downlink: Downlink) => void;\nexport type DownlinkDidDisconnect = (downlink: Downlink) => void;\nexport type DownlinkDidClose = (downlink: Downlink) => void;\nexport type DownlinkDidFail = (error: unknown, downlink: Downlink) => void;\n\nexport interface DownlinkObserver {\n  onEvent?: DownlinkOnEvent;\n  onCommand?: DownlinkOnCommand;\n  willLink?: DownlinkWillLink;\n  didLink?: DownlinkDidLink;\n  willSync?: DownlinkWillSync;\n  didSync?: DownlinkDidSync;\n  willUnlink?: DownlinkWillUnlink;\n  didUnlink?: DownlinkDidUnlink;\n  didConnect?: DownlinkDidConnect;\n  didDisconnect?: DownlinkDidDisconnect;\n  didClose?: DownlinkDidClose;\n  didFail?: DownlinkDidFail;\n}\n\nexport interface DownlinkInit extends DownlinkObserver {\n  hostUri?: AnyUri;\n  nodeUri?: AnyUri;\n  laneUri?: AnyUri;\n  prio?: number;\n  rate?: number;\n  body?: AnyValue;\n  type?: DownlinkType;\n}\n\n/** @hidden */\nexport const enum DownlinkFlags {\n  KeepLinked = 1,\n  KeepSynced = 2,\n  KeepLinkedSynced = KeepLinked | KeepSynced,\n}\n\nexport abstract class Downlink {\n  constructor(context: DownlinkContext, owner: DownlinkOwner | null, init?: DownlinkInit,\n              hostUri: Uri = Uri.empty(), nodeUri: Uri = Uri.empty(), laneUri: Uri = Uri.empty(),\n              prio: number = 0, rate: number = 0, body: Value = Value.absent(),\n              flags: number = 0, observers?: ReadonlyArray<DownlinkObserver> | DownlinkObserver) {\n    let observer: DownlinkObserver | undefined;\n    if (observers === void 0) {\n      observers = Arrays.empty\n    } else if (!Array.isArray(observers)) {\n      observer = observers as DownlinkObserver;\n      observers = [observer] as ReadonlyArray<DownlinkObserver>;\n    }\n    if (init !== void 0) {\n      hostUri = init.hostUri !== void 0 ? Uri.fromAny(init.hostUri) : hostUri;\n      nodeUri = init.nodeUri !== void 0 ? Uri.fromAny(init.nodeUri) : nodeUri;\n      laneUri = init.laneUri !== void 0 ? Uri.fromAny(init.laneUri) : laneUri;\n      prio = init.prio !== void 0 ? init.prio : prio;\n      rate = init.rate !== void 0 ? init.rate : rate;\n      body = init.body !== void 0 ? Value.fromAny(init.body) : body;\n      observer = observer ?? {};\n      observers = Arrays.inserted(observer, observers);\n      observer.onEvent = init.onEvent ?? observer.onEvent;\n      observer.onCommand = init.onCommand ?? observer.onCommand;\n      observer.willLink = init.willLink ?? observer.willLink;\n      observer.didLink = init.didLink ?? observer.didLink;\n      observer.willSync = init.willSync ?? observer.willSync;\n      observer.didSync = init.didSync ?? observer.didSync;\n      observer.willUnlink = init.willUnlink ?? observer.willUnlink;\n      observer.didUnlink = init.didUnlink ?? observer.didUnlink;\n      observer.didConnect = init.didConnect ?? observer.didConnect;\n      observer.didDisconnect = init.didDisconnect ?? observer.didDisconnect;\n      observer.didClose = init.didClose ?? observer.didClose;\n      observer.didFail = init.didFail ?? observer.didFail;\n    }\n    Object.defineProperty(this, \"context\", {\n      value: context,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"owner\", {\n      value: owner,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ownHostUri\", {\n      value: hostUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ownNodeUri\", {\n      value: nodeUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ownLaneUri\", {\n      value: laneUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ownPrio\", {\n      value: prio,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ownRate\", {\n      value: rate,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ownBody\", {\n      value: body,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"flags\", {\n      value: flags,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"model\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"observers\", {\n      value: observers,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly context!: DownlinkContext;\n\n  /** @hidden */\n  readonly owner!: DownlinkOwner | null;\n  \n  /** @hidden */\n  readonly ownHostUri!: Uri;\n  \n  /** @hidden */\n  readonly ownNodeUri!: Uri;\n  \n  /** @hidden */\n  readonly ownLaneUri!: Uri;\n  \n  /** @hidden */\n  readonly ownPrio!: number;\n  \n  /** @hidden */\n  readonly ownRate!: number;\n  \n  /** @hidden */\n  readonly ownBody!: Value;\n\n  /** @hidden */\n  readonly flags!: number;\n\n  /** @hidden */\n  readonly model!: DownlinkModel | null;\n\n  /** @hidden */\n  readonly observers!: ReadonlyArray<DownlinkObserver>;\n\n  abstract readonly type: DownlinkType;\n\n  protected abstract copy(context: DownlinkContext, owner: DownlinkOwner | null,\n                          hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                          body: Value, flags: number, observers: ReadonlyArray<DownlinkObserver>): Downlink;\n\n  hostUri(): Uri;\n  hostUri(hostUri: AnyUri): Downlink;\n  hostUri(hostUri?: AnyUri): Uri | Downlink {\n    if (hostUri === void 0) {\n      return this.ownHostUri;\n    } else {\n      hostUri = Uri.fromAny(hostUri);\n      return this.copy(this.context, this.owner, hostUri as Uri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers);\n    }\n  }\n\n  nodeUri(): Uri;\n  nodeUri(nodeUri: AnyUri): Downlink;\n  nodeUri(nodeUri?: AnyUri): Uri | Downlink {\n    if (nodeUri === void 0) {\n      return this.ownNodeUri;\n    } else {\n      nodeUri = Uri.fromAny(nodeUri);\n      return this.copy(this.context, this.owner, this.ownHostUri, nodeUri as Uri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers);\n    }\n  }\n\n  laneUri(): Uri;\n  laneUri(laneUri: AnyUri): Downlink;\n  laneUri(laneUri?: AnyUri): Uri | Downlink {\n    if (laneUri === void 0) {\n      return this.ownLaneUri;\n    } else {\n      laneUri = Uri.fromAny(laneUri);\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, laneUri as Uri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers);\n    }\n  }\n\n  prio(): number;\n  prio(prio: number): Downlink;\n  prio(prio?: number): number | Downlink {\n    if (prio === void 0) {\n      return this.ownPrio;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       prio, this.ownRate, this.ownBody, this.flags, this.observers);\n    }\n  }\n\n  rate(): number;\n  rate(rate: number): Downlink;\n  rate(rate?: number): number | Downlink {\n    if (rate === void 0) {\n      return this.ownRate;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, rate, this.ownBody, this.flags, this.observers);\n    }\n  }\n\n  body(): Value;\n  body(body: AnyValue): Downlink;\n  body(body?: AnyValue): Value | Downlink {\n    if (body === void 0) {\n      return this.ownBody;\n    } else {\n      body = Value.fromAny(body);\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, body, this.flags, this.observers);\n    }\n  }\n\n  keepLinked(): boolean;\n  keepLinked(keepLinked: boolean): Downlink;\n  keepLinked(keepLinked?: boolean): boolean | Downlink {\n    if (keepLinked === void 0) {\n      return (this.flags & DownlinkFlags.KeepLinked) !== 0;\n    } else {\n      const flags = keepLinked ? this.flags | DownlinkFlags.KeepLinked : this.flags & ~DownlinkFlags.KeepLinked;\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, flags, this.observers);\n    }\n  }\n\n  keepSynced(): boolean;\n  keepSynced(keepSynced: boolean): Downlink;\n  keepSynced(keepSynced?: boolean): boolean | Downlink {\n    if (keepSynced === void 0) {\n      return (this.flags & DownlinkFlags.KeepSynced) !== 0;\n    } else {\n      const flags = keepSynced ? this.flags | DownlinkFlags.KeepSynced : this.flags & ~DownlinkFlags.KeepSynced;\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, flags, this.observers);\n    }\n  }\n\n  observe(observer: DownlinkObserver): this {\n    Object.defineProperty(this, \"observers\", {\n      value: Arrays.inserted(observer, this.observers),\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this.observers;\n    const n = oldObservers.length;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers[i]! as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<DownlinkObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers[j]!;\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers[j]!;\n          }\n          Object.defineProperty(this, \"observers\", {\n            value: newObservers,\n            enumerable: true,\n            configurable: true,\n          });\n        } else {\n          Object.defineProperty(this, \"observers\", {\n            value: Arrays.empty,\n            enumerable: true,\n            configurable: true,\n          });\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  onEvent(onEvent: DownlinkOnEvent): this {\n    return this.observe({onEvent});\n  }\n\n  onCommand(onCommand: DownlinkOnCommand): this {\n    return this.observe({onCommand});\n  }\n\n  willLink(willLink: DownlinkWillLink): this {\n    return this.observe({willLink});\n  }\n\n  didLink(didLink: DownlinkDidLink): this {\n    return this.observe({didLink});\n  }\n\n  willSync(willSync: DownlinkWillSync): this {\n    return this.observe({willSync});\n  }\n\n  didSync(didSync: DownlinkDidSync): this {\n    return this.observe({didSync});\n  }\n\n  willUnlink(willUnlink: DownlinkWillUnlink): this {\n    return this.observe({willUnlink});\n  }\n\n  didUnlink(didUnlink: DownlinkDidUnlink): this {\n    return this.observe({didUnlink});\n  }\n\n  didConnect(didConnect: DownlinkDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didDisconnect(didDisconnect: DownlinkDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didClose(didClose: DownlinkDidClose): this {\n    return this.observe({didClose});\n  }\n\n  didFail(didFail: DownlinkDidFail): this {\n    return this.observe({didFail});\n  }\n\n  isConnected(): boolean {\n    const model = this.model;\n    return model !== null && model.isConnected();\n  }\n\n  isAuthenticated(): boolean {\n    const model = this.model;\n    return model !== null && model.isAuthenticated();\n  }\n\n  isLinked(): boolean {\n    const model = this.model;\n    return model !== null && model.isLinked();\n  }\n\n  isSynced(): boolean {\n    const model = this.model;\n    return model !== null && model.isSynced();\n  }\n\n  get session(): Value {\n    const model = this.model;\n    return model !== null ? model.session : Value.absent();\n  }\n\n  /** @hidden */\n  onEventMessage(message: EventMessage): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.onEvent !== void 0) {\n        observer.onEvent(message.body, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onCommandMessage(body: Value): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.onCommand !== void 0) {\n        observer.onCommand(body, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onLinkRequest(request?: LinkRequest): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willLink !== void 0) {\n        observer.willLink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onLinkedResponse(response?: LinkedResponse): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didLink !== void 0) {\n        observer.didLink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onSyncRequest(request?: SyncRequest): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willSync !== void 0) {\n        observer.willSync(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onSyncedResponse(response?: SyncedResponse): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didSync !== void 0) {\n        observer.didSync(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onUnlinkRequest(request?: UnlinkRequest): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willUnlink !== void 0) {\n        observer.willUnlink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onUnlinkedResponse(response?: UnlinkedResponse): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didUnlink !== void 0) {\n        observer.didUnlink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidConnect(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didConnect !== void 0) {\n        observer.didConnect(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didDisconnect !== void 0) {\n        observer.didDisconnect(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didFail !== void 0) {\n        observer.didFail(error, this);\n      }\n    }\n  }\n\n  command(body: AnyValue): void {\n    this.model!.command(body);\n  }\n\n  abstract open(): this;\n\n  close(): void {\n    const owner = this.owner;\n    if (owner !== null) {\n      owner.removeDownlink(this);\n    }\n    const model = this.model;\n    if (model !== null) {\n      model.removeDownlink(this);\n    }\n  }\n\n  /** @hidden */\n  openUp(host: Host): void {\n    // nop\n  }\n\n  /** @hidden */\n  closeUp(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didClose !== void 0) {\n        observer.didClose(this);\n      }\n    }\n  }\n\n  @Lazy\n  static initForm(): Form<DownlinkInit | undefined> {\n    return new DownlinkInitForm();\n  }\n}\n\n/** @hidden */\nclass DownlinkInitForm extends Form<DownlinkInit | undefined> {\n  declare readonly tag: string | undefined; // getter defined below to work around useDefineForClassFields lunacy\n\n  override mold(init: DownlinkInit | undefined): Item {\n    if (init !== void 0) {\n      const header = Record.create();\n      if (init.hostUri !== void 0) {\n        header.slot(\"host\", Uri.fromAny(init.hostUri).toString());\n      }\n      if (init.nodeUri !== void 0) {\n        header.slot(\"node\", Uri.fromAny(init.nodeUri).toString());\n      }\n      if (init.laneUri !== void 0) {\n        header.slot(\"lane\", Uri.fromAny(init.laneUri).toString());\n      }\n      if (init.prio !== void 0) {\n        header.slot(\"prio\", init.prio);\n      }\n      if (init.rate !== void 0) {\n        header.slot(\"rate\", init.rate);\n      }\n      if (init.body !== void 0) {\n        header.slot(\"body\", init.body);\n      }\n      if (init.type !== void 0) {\n        header.slot(\"type\", init.type);\n      }\n      return Record.of(Attr.of(\"link\", header));\n    } else {\n      return Item.extant();\n    }\n  }\n\n  override cast(item: Item): DownlinkInit | undefined {\n    const value = item.toValue();\n    const header = value.get(\"link\");\n    if (header.isDefined()) {\n      const init = {} as DownlinkInit;\n      const host = header.get(\"host\");\n      if (host.isDefined()) {\n        init.hostUri = host.cast(Uri.form());\n      }\n      const node = header.get(\"node\");\n      if (node.isDefined()) {\n        init.nodeUri = node.cast(Uri.form());\n      }\n      const lane = header.get(\"lane\");\n      if (lane.isDefined()) {\n        init.laneUri = lane.cast(Uri.form());\n      }\n      const prio = header.get(\"prio\");\n      if (prio.isDefined()) {\n        init.prio = prio.numberValue();\n      }\n      const rate = header.get(\"rate\");\n      if (rate.isDefined()) {\n        init.rate = rate.numberValue();\n      }\n      const body = header.get(\"body\");\n      if (body.isDefined()) {\n        init.body = body;\n      }\n      const type = header.get(\"type\");\n      if (type.isDefined()) {\n        init.type = type.stringValue() as DownlinkType;\n      }\n      return init;\n    }\n    return void 0;\n  }\n}\nObject.defineProperty(DownlinkInitForm.prototype, \"tag\", {\n  get(this: DownlinkInitForm): string | undefined {\n    return \"link\";\n  },\n  enumerable: true,\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {AnyValue, Value, Attr} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {Envelope} from \"./Envelope\";\n\nexport interface HostAddressedConstructor<E extends HostAddressed<E>> {\n  new(body: Value): E;\n\n  readonly tag: string;\n}\n\nexport abstract class HostAddressed<E extends HostAddressed<E>> extends Envelope {\n  constructor(body: Value) {\n    super();\n    Object.defineProperty(this, \"body\", {\n      value: body,\n      enumerable: true,\n    });\n  }\n\n  override get node(): Uri {\n    return Uri.empty();\n  }\n\n  override withNode(node: AnyUri): E {\n    return this as unknown as E;\n  }\n\n  override get lane(): Uri {\n    return Uri.empty();\n  }\n\n  override withLane(lane: AnyUri): E {\n    return this as unknown as E;\n  }\n\n  override readonly body!: Value;\n\n  override withBody(body: AnyValue): E {\n    body = Value.fromAny(body);\n    return this.copy(body);\n  }\n\n  protected abstract copy(body: Value): E;\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof HostAddressed) {\n      return this.constructor === that.constructor\n          && this.body.equals(that.body);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Constructors.hash(this.constructor),\n          this.body.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(this.constructor.name).write(46/*'.'*/)\n        .write(\"create\").write(40/*'('*/);\n    if (this.body.isDefined()) {\n      output = output.debug(this.body);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override toValue(): Value {\n    return Attr.of(this.tag).concat(this.body);\n  }\n\n  static override fromValue<E extends HostAddressed<E>>(this: HostAddressedConstructor<E>,\n                                                        value: Value): E | null {\n    const header = value.header(this.tag);\n    if (header.isDefined()) {\n      const body = value.body();\n      return new this(body);\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item, Attr, AnyValue, Value, Record} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {Envelope} from \"./Envelope\";\n\nexport interface LaneAddressedConstructor<E extends LaneAddressed<E>> {\n  new(node: Uri, lane: Uri, body: Value): E;\n\n  readonly tag: string;\n}\n\nexport abstract class LaneAddressed<E extends LaneAddressed<E>> extends Envelope {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super();\n    Object.defineProperty(this, \"node\", {\n      value: node,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lane\", {\n      value: lane,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"body\", {\n      value: body,\n      enumerable: true,\n    });\n  }\n\n  override readonly node!: Uri;\n\n  override withNode(node: AnyUri): E {\n    node = Uri.fromAny(node);\n    return this.copy(node as Uri, this.lane, this.body);\n  }\n\n  override readonly lane!: Uri;\n\n  override withLane(lane: AnyUri): E {\n    lane = Uri.fromAny(lane);\n    return this.copy(this.node, lane as Uri, this.body);\n  }\n\n  override readonly body!: Value;\n\n  override withBody(body: AnyValue): E {\n    body = Value.fromAny(body);\n    return this.copy(this.node, this.lane, body);\n  }\n\n  protected abstract copy(node: Uri, lane: Uri, body: Value): E;\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LaneAddressed) {\n      return this.constructor === that.constructor\n          && this.node.equals(that.node) && this.lane.equals(that.lane)\n          && this.body.equals(that.body);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Constructors.hash(this.constructor), this.node.hashCode()),\n        this.lane.hashCode()), this.body.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(this.constructor.name).write(46/*'.'*/)\n        .write(\"create\").write(40/*'('*/)\n        .debug(this.node.toString()).write(\", \").debug(this.lane.toString());\n    if (this.body.isDefined()) {\n      output = output.write(\", \").debug(this.body);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override toValue(): Value {\n    const header = Record.create(2)\n        .slot(\"node\", this.node.toString())\n        .slot(\"lane\", this.lane.toString());\n    return Attr.of(this.tag, header).concat(this.body);\n  }\n\n  static override fromValue<E extends LaneAddressed<E>>(this: LaneAddressedConstructor<E>,\n                                                        value: Value): E | null {\n    let node: Uri | undefined;\n    let lane: Uri | undefined;\n    const header = value.header(this.tag);\n    header.forEach(function (header: Item, index: number) {\n      const key = header.key.stringValue(void 0);\n      if (key !== void 0) {\n        if (key === \"node\") {\n          node = Uri.parse(header.toValue().stringValue(\"\"));\n        } else if (key === \"lane\") {\n          lane = Uri.parse(header.toValue().stringValue(\"\"));\n        }\n      } else if (header instanceof Value) {\n        if (index === 0) {\n          node = Uri.parse(header.stringValue(\"\"));\n        } else if (index === 1) {\n          lane = Uri.parse(header.stringValue(\"\"));\n        }\n      }\n    });\n    if (node !== void 0 && lane !== void 0) {\n      const body = value.body();\n      return new this(node, lane, body);\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Numbers, Constructors} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item, Attr, AnyValue, Value, Record} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {Envelope} from \"./Envelope\";\n\nexport interface LinkAddressedConstructor<E extends LinkAddressed<E>> {\n  new(node: Uri, lane: Uri, prio: number, rate: number, body: Value): E;\n\n  readonly tag: string;\n}\n\nexport abstract class LinkAddressed<E extends LinkAddressed<E>> extends Envelope {\n  constructor(node: Uri, lane: Uri, prio: number, rate: number, body: Value) {\n    super();\n    Object.defineProperty(this, \"node\", {\n      value: node,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"lane\", {\n      value: lane,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"prio\", {\n      value: prio,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"rate\", {\n      value: rate,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"body\", {\n      value: body,\n      enumerable: true,\n    });\n  }\n\n  override readonly node!: Uri;\n\n  override withNode(node: AnyUri): E {\n    node = Uri.fromAny(node);\n    return this.copy(node as Uri, this.lane, this.prio, this.rate, this.body);\n  }\n\n  override readonly lane!: Uri;\n\n  override withLane(lane: AnyUri): E {\n    lane = Uri.fromAny(lane);\n    return this.copy(this.node, lane as Uri, this.prio, this.rate, this.body);\n  }\n\n  override readonly prio!: number;\n\n  override withPrio(prio: number): E {\n    return this.copy(this.node, this.lane, prio, this.rate, this.body);\n  }\n\n  override readonly rate!: number;\n\n  override withRate(rate: number): E {\n    return this.copy(this.node, this.lane, this.prio, rate, this.body);\n  }\n\n  override readonly body!: Value;\n\n  override withBody(body: AnyValue): E {\n    body = Value.fromAny(body);\n    return this.copy(this.node, this.lane, this.prio, this.rate, body);\n  }\n\n  protected abstract copy(node: Uri, lane: Uri, prio: number, rate: number, body: Value): E;\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LinkAddressed) {\n      return this.constructor === that.constructor\n          && this.node.equals(that.node) && this.lane.equals(that.lane)\n          && this.prio === that.prio && this.rate === that.rate\n          && this.body.equals(that.body);\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(\n        Constructors.hash(this.constructor), this.node.hashCode()), this.lane.hashCode()),\n        Numbers.hash(this.prio)), Numbers.hash(this.rate)), this.body.hashCode()));\n  }\n\n  override debug(output: Output): void {\n    output = output.write(this.constructor.name).write(46/*'.'*/)\n        .write(\"create\").write(40/*'('*/)\n        .debug(this.node.toString()).write(\", \").debug(this.lane.toString());\n    if (this.prio !== 0 || this.rate !== 0) {\n      output = output.write(\", \").debug(this.prio).write(\", \").debug(this.rate);\n    }\n    if (this.body.isDefined()) {\n      output = output.write(\", \").debug(this.body);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  override toValue(): Value {\n    const header = Record.create(4)\n        .slot(\"node\", this.node.toString())\n        .slot(\"lane\", this.lane.toString());\n    if (this.prio !== 0) {\n      header.slot(\"prio\", this.prio);\n    }\n    if (this.rate !== 0) {\n      header.slot(\"rate\", this.rate);\n    }\n    return Attr.of(this.tag, header).concat(this.body);\n  }\n\n  static override fromValue<E extends LinkAddressed<E>>(this: LinkAddressedConstructor<E>,\n                                                        value: Value): E | null {\n    let node: Uri | undefined;\n    let lane: Uri | undefined;\n    let prio = 0;\n    let rate = 0;\n    const header = value.header(this.tag);\n    header.forEach(function (header: Item, index: number) {\n      const key = header.key.stringValue(void 0);\n      if (key !== void 0) {\n        if (key === \"node\") {\n          node = Uri.parse(header.toValue().stringValue(\"\"));\n        } else if (key === \"lane\") {\n          lane = Uri.parse(header.toValue().stringValue(\"\"));\n        } else if (key === \"prio\") {\n          prio = header.numberValue(prio);\n        } else if (key === \"rate\") {\n          rate = header.numberValue(rate);\n        }\n      } else if (header instanceof Value) {\n        if (index === 0) {\n          node = Uri.parse(header.stringValue(\"\"));\n        } else if (index === 1) {\n          lane = Uri.parse(header.stringValue(\"\"));\n        }\n      }\n    });\n    if (node !== void 0 && lane !== void 0) {\n      const body = value.body();\n      return new this(node, lane, prio, rate, body);\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class EventMessage extends LaneAddressed<EventMessage> {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected override copy(node: Uri, lane: Uri, body: Value): EventMessage {\n    return new EventMessage(node, lane, body);\n  }\n\n  static get tag(): string {\n    return \"event\";\n  }\n\n  static create(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): EventMessage {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new EventMessage(node as Uri, lane as Uri, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class CommandMessage extends LaneAddressed<CommandMessage> {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected override copy(node: Uri, lane: Uri, body: Value): CommandMessage {\n    return new CommandMessage(node, lane, body);\n  }\n\n  static get tag(): string {\n    return \"command\";\n  }\n\n  static create(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): CommandMessage {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new CommandMessage(node as Uri, lane as Uri, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {LinkAddressed} from \"./LinkAddressed\";\n\nexport class LinkRequest extends LinkAddressed<LinkRequest> {\n  constructor(node: Uri, lane: Uri, prio: number, rate: number, body: Value) {\n    super(node, lane, prio, rate, body);\n  }\n\n  protected override copy(node: Uri, lane: Uri, prio: number, rate: number, body: Value): LinkRequest {\n    return new LinkRequest(node, lane, prio, rate, body);\n  }\n\n  static get tag(): string {\n    return \"link\";\n  }\n\n  static create(node: AnyUri, lane: AnyUri, prio: number = 0, rate: number = 0,\n                body: AnyValue = Value.absent()): LinkRequest {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new LinkRequest(node as Uri, lane as Uri, prio, rate, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {LinkAddressed} from \"./LinkAddressed\";\n\nexport class LinkedResponse extends LinkAddressed<LinkedResponse> {\n  constructor(node: Uri, lane: Uri, prio: number, rate: number, body: Value) {\n    super(node, lane, prio, rate, body);\n  }\n\n  protected override copy(node: Uri, lane: Uri, prio: number, rate: number, body: Value): LinkedResponse {\n    return new LinkedResponse(node, lane, prio, rate, body);\n  }\n\n  static get tag(): string {\n    return \"linked\";\n  }\n\n  static create(node: AnyUri, lane: AnyUri, prio: number = 0, rate: number = 0,\n                body: AnyValue = Value.absent()): LinkedResponse {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new LinkedResponse(node as Uri, lane as Uri, prio, rate, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {LinkAddressed} from \"./LinkAddressed\";\n\nexport class SyncRequest extends LinkAddressed<SyncRequest> {\n  constructor(node: Uri, lane: Uri, prio: number, rate: number, body: Value) {\n    super(node, lane, prio, rate, body);\n  }\n\n  protected override copy(node: Uri, lane: Uri, prio: number, rate: number, body: Value): SyncRequest {\n    return new SyncRequest(node, lane, prio, rate, body);\n  }\n\n  static get tag(): string {\n    return \"sync\";\n  }\n\n  static create(node: AnyUri, lane: AnyUri, prio: number = 0, rate: number = 0,\n                body: AnyValue = Value.absent()): SyncRequest {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new SyncRequest(node as Uri, lane as Uri, prio, rate, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class SyncedResponse extends LaneAddressed<SyncedResponse> {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected override copy(node: Uri, lane: Uri, body: Value): SyncedResponse {\n    return new SyncedResponse(node, lane, body);\n  }\n\n  static get tag(): string {\n    return \"synced\";\n  }\n\n  static create(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): SyncedResponse {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new SyncedResponse(node as Uri, lane as Uri, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class UnlinkRequest extends LaneAddressed<UnlinkRequest> {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected override copy(node: Uri, lane: Uri, body: Value): UnlinkRequest {\n    return new UnlinkRequest(node, lane, body);\n  }\n\n  static get tag(): string {\n    return \"unlink\";\n  }\n\n  static create(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): UnlinkRequest {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new UnlinkRequest(node as Uri, lane as Uri, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {LaneAddressed} from \"./LaneAddressed\";\n\nexport class UnlinkedResponse extends LaneAddressed<UnlinkedResponse> {\n  constructor(node: Uri, lane: Uri, body: Value) {\n    super(node, lane, body);\n  }\n\n  protected override copy(node: Uri, lane: Uri, body: Value): UnlinkedResponse {\n    return new UnlinkedResponse(node, lane, body);\n  }\n\n  static get tag(): string {\n    return \"unlinked\";\n  }\n\n  static create(node: AnyUri, lane: AnyUri, body: AnyValue = Value.absent()): UnlinkedResponse {\n    node = Uri.fromAny(node);\n    lane = Uri.fromAny(lane);\n    body = Value.fromAny(body);\n    return new UnlinkedResponse(node as Uri, lane as Uri, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {HostAddressed} from \"./HostAddressed\";\n\nexport class AuthRequest extends HostAddressed<AuthRequest> {\n  constructor(body: Value) {\n    super(body);\n  }\n\n  protected override copy(body: Value): AuthRequest {\n    return new AuthRequest(body);\n  }\n\n  static get tag(): string {\n    return \"auth\";\n  }\n\n  static create(body: AnyValue = Value.absent()): AuthRequest {\n    body = Value.fromAny(body);\n    return new AuthRequest(body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {HostAddressed} from \"./HostAddressed\";\n\nexport class AuthedResponse extends HostAddressed<AuthedResponse> {\n  constructor(body: Value) {\n    super(body);\n  }\n\n  protected override copy(body: Value): AuthedResponse {\n    return new AuthedResponse(body);\n  }\n\n  static get tag(): string {\n    return \"authed\";\n  }\n\n  static create(body: AnyValue = Value.absent()): AuthedResponse {\n    body = Value.fromAny(body);\n    return new AuthedResponse(body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {HostAddressed} from \"./HostAddressed\";\n\nexport class DeauthRequest extends HostAddressed<DeauthRequest> {\n  constructor(body: Value) {\n    super(body);\n  }\n\n  protected override copy(body: Value): DeauthRequest {\n    return new DeauthRequest(body);\n  }\n\n  static get tag(): string {\n    return \"deauth\";\n  }\n\n  static create(body: AnyValue = Value.absent()): DeauthRequest {\n    body = Value.fromAny(body);\n    return new DeauthRequest(body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {HostAddressed} from \"./HostAddressed\";\n\nexport class DeauthedResponse extends HostAddressed<DeauthedResponse> {\n  constructor(body: Value) {\n    super(body);\n  }\n\n  protected override copy(body: Value): DeauthedResponse {\n    return new DeauthedResponse(body);\n  }\n\n  static get tag(): string {\n    return \"deauthed\";\n  }\n\n  static create(body: AnyValue = Value.absent()): DeauthedResponse {\n    body = Value.fromAny(body);\n    return new DeauthedResponse(body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyUri, Uri} from \"@swim/uri\";\nimport type {AnyValue, Value} from \"@swim/structure\";\nimport type {Envelope} from \"@swim/warp\";\nimport type {HostDownlink} from \"./HostDownlink\";\n\nexport interface HostOptions {\n  credentials?: Value;\n  unlinkDelay?: number;\n  maxReconnectTimeout?: number;\n  idleTimeout?: number;\n  sendBufferSize?: number;\n}\n\n/** @hidden */\nexport abstract class Host {\n  abstract readonly hostUri: Uri;\n\n  abstract readonly unlinkDelay: number;\n\n  abstract isConnected(): boolean;\n\n  abstract isAuthenticated(): boolean;\n\n  abstract readonly session: Value;\n\n  abstract resolve(relative: AnyUri): Uri;\n\n  abstract unresolve(absolute: AnyUri): Uri;\n\n  abstract authenticate(credentials: AnyValue): void;\n\n  abstract openDownlink(downlink: HostDownlink): void;\n\n  abstract unlinkDownlink(downlink: HostDownlink): void;\n\n  abstract closeDownlink(downlink: HostDownlink): void;\n\n  abstract command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n\n  abstract open(): void;\n\n  abstract close(): void;\n\n  abstract closeUp(): void;\n\n  abstract push(envelope: Envelope): void;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri, UriCache} from \"@swim/uri\";\nimport {\n  Envelope,\n  EventMessage,\n  CommandMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n  AuthRequest,\n  AuthedResponse,\n  DeauthRequest,\n  DeauthedResponse,\n} from \"@swim/warp\";\nimport type {HostDownlink} from \"./HostDownlink\";\nimport type {HostContext} from \"./HostContext\";\nimport {HostOptions, Host} from \"./Host\";\n\n/** @hidden */\nexport abstract class RemoteHost extends Host {\n  constructor(context: HostContext, hostUri: Uri, options: HostOptions = {}) {\n    super();\n    Object.defineProperty(this, \"context\", {\n      value: context,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"hostUri\", {\n      value: hostUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"options\", {\n      value: options,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"authenticated\", {\n      value: false,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"session\", {\n      value: Value.absent(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"sendBuffer\", {\n      value: [],\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"downlinks\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"downlinkCount\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"uriCache\", {\n      value: new UriCache(hostUri),\n      enumerable: true,\n      configurable: true,\n    });\n    this.reconnectTimer = 0;\n    this.reconnectTimeout = 0;\n    this.idleTimer = 0;\n  }\n\n  /** @hidden */\n  readonly context!: HostContext;\n\n  override readonly hostUri!: Uri;\n\n  readonly options!: HostOptions;\n\n  get credentials(): Value {\n    return this.options.credentials ?? Value.absent();\n  }\n\n  override get unlinkDelay(): number {\n    return this.options.unlinkDelay ?? RemoteHost.UnlinkDelay;\n  }\n\n  get maxReconnectTimeout(): number {\n    return this.options.maxReconnectTimeout ?? RemoteHost.MaxReconnectTimeout;\n  }\n\n  get idleTimeout(): number {\n    return this.options.idleTimeout ?? RemoteHost.IdleTimeout;\n  }\n\n  get sendBufferSize(): number {\n    return this.options.sendBufferSize ?? RemoteHost.SendBufferSize;\n  }\n\n  abstract override isConnected(): boolean;\n\n  /** @hidden */\n  readonly authenticated!: boolean;\n\n  override isAuthenticated(): boolean {\n    return this.authenticated;\n  }\n\n  override readonly session!: Value;\n\n  /** @hidden */\n  readonly sendBuffer!: Envelope[];\n\n  /** @hidden */\n  readonly downlinks!: BTree<Uri, BTree<Uri, HostDownlink>>;\n\n  /** @hidden */\n  readonly downlinkCount!: number;\n\n  isIdle(): boolean {\n    return this.sendBuffer.length === 0 && this.downlinkCount === 0;\n  }\n\n  /** @hidden */\n  readonly uriCache!: UriCache;\n\n  override resolve(relative: AnyUri): Uri {\n    return this.uriCache.resolve(relative);\n  }\n\n  override unresolve(absolute: AnyUri): Uri {\n    return this.uriCache.unresolve(absolute);\n  }\n\n  override authenticate(credentials: AnyValue): void {\n    credentials = Value.fromAny(credentials);\n    if (!credentials.equals(this.options.credentials)) {\n      this.options.credentials = credentials;\n      if (this.isConnected()) {\n        const request = new AuthRequest(credentials);\n        this.push(request);\n      } else {\n        this.open();\n      }\n    }\n  }\n\n  override openDownlink(downlink: HostDownlink): void {\n    this.clearIdle();\n    const nodeUri = this.resolve(downlink.nodeUri);\n    const laneUri = downlink.laneUri;\n    if (this.downlinkCount === 0) {\n      this.open();\n    }\n    let nodeDownlinks = this.downlinks.get(nodeUri);\n    if (nodeDownlinks === void 0) {\n      nodeDownlinks = new BTree();\n      this.downlinks.set(nodeUri, nodeDownlinks);\n    }\n    if (nodeDownlinks.get(laneUri) !== void 0) {\n      throw new Error(\"duplicate downlink\");\n    }\n    nodeDownlinks.set(laneUri, downlink);\n    Object.defineProperty(this, \"downlinkCount\", {\n      value: this.downlinkCount + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    downlink.openUp(this);\n    if (this.isConnected()) {\n      downlink.hostDidConnect(this);\n    }\n  }\n\n  override unlinkDownlink(downlink: HostDownlink): void {\n    const nodeUri = this.resolve(downlink.nodeUri);\n    const laneUri = downlink.laneUri;\n    const nodeDownlinks = this.downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0 && nodeDownlinks.get(laneUri) && this.isConnected()) {\n      const request = new UnlinkRequest(this.unresolve(nodeUri), laneUri, Value.absent());\n      downlink.onUnlinkRequest(request, this);\n      this.push(request);\n    }\n  }\n\n  override closeDownlink(downlink: HostDownlink): void {\n    const nodeUri = this.resolve(downlink.nodeUri);\n    const laneUri = downlink.laneUri;\n    const nodeDownlinks = this.downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      if (nodeDownlinks.get(laneUri)) {\n        Object.defineProperty(this, \"downlinkCount\", {\n          value: this.downlinkCount - 1,\n          enumerable: true,\n          configurable: true,\n        });\n        nodeDownlinks.delete(laneUri);\n        if (nodeDownlinks.isEmpty()) {\n          this.downlinks.delete(nodeUri);\n        }\n        if (this.downlinkCount === 0) {\n          this.watchIdle();\n        }\n        downlink.closeUp(this);\n      }\n    }\n  }\n\n  override command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void {\n    nodeUri = Uri.fromAny(nodeUri);\n    nodeUri = this.resolve(nodeUri);\n    laneUri = Uri.fromAny(laneUri);\n    body = Value.fromAny(body);\n    const message = new CommandMessage(this.unresolve(nodeUri), laneUri as Uri, body);\n    this.push(message);\n  }\n\n  protected onEnvelope(envelope: Envelope): void {\n    if (envelope instanceof EventMessage) {\n      this.onEventMessage(envelope);\n    } else if (envelope instanceof CommandMessage) {\n      this.onCommandMessage(envelope);\n    } else if (envelope instanceof LinkRequest) {\n      this.onLinkRequest(envelope);\n    } else if (envelope instanceof LinkedResponse) {\n      this.onLinkedResponse(envelope);\n    } else if (envelope instanceof SyncRequest) {\n      this.onSyncRequest(envelope);\n    } else if (envelope instanceof SyncedResponse) {\n      this.onSyncedResponse(envelope);\n    } else if (envelope instanceof UnlinkRequest) {\n      this.onUnlinkRequest(envelope);\n    } else if (envelope instanceof UnlinkedResponse) {\n      this.onUnlinkedResponse(envelope);\n    } else if (envelope instanceof AuthRequest) {\n      this.onAuthRequest(envelope);\n    } else if (envelope instanceof AuthedResponse) {\n      this.onAuthedResponse(envelope);\n    } else if (envelope instanceof DeauthRequest) {\n      this.onDeauthRequest(envelope);\n    } else if (envelope instanceof DeauthedResponse) {\n      this.onDeauthedResponse(envelope);\n    } else {\n      this.onUnknownEnvelope(envelope);\n    }\n  }\n\n  protected onEventMessage(message: EventMessage): void {\n    const nodeUri = this.resolve(message.node);\n    const laneUri = message.lane;\n    const nodeDownlinks = this.downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink !== void 0) {\n        const resolvedMessage = message.withNode(nodeUri);\n        downlink.onEventMessage(resolvedMessage, this);\n      }\n    }\n  }\n\n  protected onCommandMessage(message: CommandMessage): void {\n    // TODO: client agents\n  }\n\n  protected onLinkRequest(request: LinkRequest): void {\n    // TODO: client agents\n  }\n\n  protected onLinkedResponse(response: LinkedResponse): void {\n    const nodeUri = this.resolve(response.node);\n    const laneUri = response.lane;\n    const nodeDownlinks = this.downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink !== void 0) {\n        const resolvedResponse = response.withNode(nodeUri);\n        downlink.onLinkedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onSyncRequest(request: SyncRequest): void {\n    // TODO: client agents\n  }\n\n  protected onSyncedResponse(response: SyncedResponse): void {\n    const nodeUri = this.resolve(response.node);\n    const laneUri = response.lane;\n    const nodeDownlinks = this.downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink !== void 0) {\n        const resolvedResponse = response.withNode(nodeUri);\n        downlink.onSyncedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onUnlinkRequest(request: UnlinkRequest): void {\n    // TODO: client agents\n  }\n\n  protected onUnlinkedResponse(response: UnlinkedResponse): void {\n    const nodeUri = this.resolve(response.node);\n    const laneUri = response.lane;\n    const nodeDownlinks = this.downlinks.get(nodeUri);\n    if (nodeDownlinks !== void 0) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink !== void 0) {\n        const resolvedResponse = response.withNode(nodeUri);\n        downlink.onUnlinkedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onAuthRequest(request: AuthRequest): void {\n    // TODO: client agents\n  }\n\n  protected onAuthedResponse(response: AuthedResponse): void {\n    Object.defineProperty(this, \"authenticated\", {\n      value: true,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"session\", {\n      value: response.body,\n      enumerable: true,\n      configurable: true,\n    });\n    this.context.hostDidAuthenticate(response.body, this);\n  }\n\n  protected onDeauthRequest(request: DeauthRequest): void {\n    // TODO: client agents\n  }\n\n  protected onDeauthedResponse(response: DeauthedResponse): void {\n    Object.defineProperty(this, \"authenticated\", {\n      value: false,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"session\", {\n      value: Value.absent(),\n      enumerable: true,\n      configurable: true,\n    });\n    this.context.hostDidDeauthenticate(response.body, this);\n  }\n\n  protected onUnknownEnvelope(envelope: Envelope | string): void {\n    // nop\n  }\n\n  /** @hidden */\n  reconnectTimer: number;\n\n  /** @hidden */\n  reconnectTimeout: number;\n\n  /** @hidden */\n  idleTimer: number;\n\n  protected onConnect(): void {\n    this.reconnectTimeout = 0;\n    this.context.hostDidConnect(this);\n    this.downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidConnect(this);\n      }, this);\n    }, this);\n  }\n\n  protected onDisconnect(): void {\n    Object.defineProperty(this, \"authenticated\", {\n      value: false,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"session\", {\n      value: Value.absent(),\n      enumerable: true,\n      configurable: true,\n    });\n    this.context.hostDidDisconnect(this);\n    this.downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidDisconnect(this);\n      }, this);\n    }, this);\n  }\n\n  protected onError(error?: unknown): void {\n    this.context.hostDidFail(error, this);\n    this.downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidFail(error, this);\n      }, this);\n    }, this);\n  }\n\n  protected reconnect(): void {\n    if (this.reconnectTimer === 0) {\n      if (this.reconnectTimeout === 0) {\n        this.reconnectTimeout = Math.floor(500 + 1000 * Math.random());\n      } else {\n        this.reconnectTimeout = Math.min(Math.floor(1.8 * this.reconnectTimeout), this.maxReconnectTimeout);\n      }\n      this.reconnectTimer = setTimeout(this.open.bind(this), this.reconnectTimeout) as any;\n    }\n  }\n\n  protected clearReconnect(): void {\n    if (this.reconnectTimer !== 0) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = 0;\n    }\n  }\n\n  protected watchIdle(): void {\n    if (this.idleTimer === 0 && this.isConnected() && this.isIdle()) {\n      this.idleTimer = setTimeout(this.checkIdle.bind(this), this.idleTimeout) as any;\n    }\n  }\n\n  protected clearIdle(): void {\n    if (this.idleTimer !== 0) {\n      clearTimeout(this.idleTimer);\n      this.idleTimer = 0;\n    }\n  }\n\n  protected checkIdle(): void {\n    if (this.isConnected() && this.isIdle()) {\n      this.close();\n    }\n  }\n\n  abstract override open(): void;\n\n  override close(): void {\n    this.context.closeHost(this);\n  }\n\n  override closeUp(): void {\n    this.downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.closeUp(this);\n      }, this);\n    }, this);\n  }\n\n  abstract override push(envelope: Envelope): void;\n\n  static readonly UnlinkDelay: number = 0;\n  static readonly MaxReconnectTimeout: number = 30000;\n  static readonly IdleTimeout: number = 1000;\n  static readonly SendBufferSize: number = 1024;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Uri} from \"@swim/uri\";\nimport {Envelope, CommandMessage, AuthRequest} from \"@swim/warp\";\nimport type {HostContext} from \"./HostContext\";\nimport type {HostOptions} from \"./Host\";\nimport {RemoteHost} from \"./RemoteHost\";\n\n/** @hidden */\nexport type WebSocketConstructor = {new(url: string, protocols?: string | string[]): WebSocket};\n\nexport interface WebSocketHostOptions extends HostOptions {\n  protocols?: string | string[];\n  WebSocket?: WebSocketConstructor;\n}\n\n/** @hidden */\nexport class WebSocketHost extends RemoteHost {\n  constructor(context: HostContext, hostUri: Uri, options: WebSocketHostOptions = {}) {\n    super(context, hostUri, options);\n    Object.defineProperty(this, \"socket\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly options!: WebSocketHostOptions;\n\n  /** @hidden */\n  readonly socket!: WebSocket | null;\n\n  get WebSocket(): WebSocketConstructor | null {\n    if (this.options.WebSocket !== void 0) {\n      return this.options.WebSocket;\n    } else if (typeof WebSocket !== \"undefined\") {\n      return WebSocket;\n    } else if (typeof require === \"function\") {\n      return require(\"ws\") as WebSocketConstructor;\n    } else {\n      return null;\n    }\n  }\n\n  override isConnected(): boolean {\n    return this.socket !== null && this.socket.readyState === this.socket.OPEN;\n  }\n\n  override open(): void {\n    this.clearReconnect();\n    let socket = this.socket;\n    if (socket === null) {\n      const WebSocket = this.WebSocket;\n      if (WebSocket === null) {\n        throw new Error(\"WebSocket undefined\");\n      }\n      let hostUri = this.hostUri;\n      const schemeName = hostUri.schemeName;\n      if (schemeName === \"warp\" || schemeName === \"swim\") {\n        hostUri = hostUri.withSchemeName(\"ws\");\n      } else if (schemeName === \"warps\" || schemeName === \"swims\") {\n        hostUri = hostUri.withSchemeName(\"wss\");\n      }\n      if (this.options.protocols !== void 0) {\n        socket = new WebSocket(hostUri.toString(), this.options.protocols);\n      } else {\n        socket = new WebSocket(hostUri.toString());\n      }\n      Object.defineProperty(this, \"socket\", {\n        value: socket,\n        enumerable: true,\n        configurable: true,\n      });\n      socket.onopen = this.onWebSocketOpen.bind(this);\n      socket.onmessage = this.onWebSocketMessage.bind(this);\n      socket.onclose = this.onWebSocketClose.bind(this);\n      socket.onerror = this.onWebSocketError.bind(this);\n    }\n  }\n\n  override close(): void {\n    this.clearReconnect();\n    this.clearIdle();\n    if (this.socket !== null) {\n      this.socket.close();\n      if (!this.context.isOnline()) {\n        this.onWebSocketClose(); // force close event\n      }\n    } else {\n      super.close();\n    }\n  }\n\n  override push(envelope: Envelope): void {\n    if (this.isConnected()) {\n      this.clearIdle();\n      const text = envelope.toRecon();\n      this.socket!.send(text);\n      this.watchIdle();\n    } else if (envelope instanceof CommandMessage) {\n      if (this.sendBuffer.length < this.sendBufferSize) {\n        this.sendBuffer.push(envelope);\n      } else {\n        throw new Error(\"send buffer overflow\");\n      }\n      this.open();\n    }\n  }\n\n  protected onWebSocketOpen(): void {\n    if (this.isConnected()) {\n      const credentials = this.credentials;\n      if (credentials.isDefined()) {\n        const request = new AuthRequest(credentials);\n        this.push(request);\n      }\n      this.onConnect();\n      let envelope;\n      while ((envelope = this.sendBuffer.shift()) && this.isConnected()) {\n        this.push(envelope);\n      }\n      this.watchIdle();\n    } else {\n      this.close();\n    }\n  }\n\n  protected onWebSocketMessage(message: MessageEvent): void {\n    const data = message.data;\n    if (typeof data === \"string\") {\n      const envelope = Envelope.parseRecon(data);\n      if (envelope !== null) {\n        this.onEnvelope(envelope);\n      } else {\n        this.onUnknownEnvelope(data);\n      }\n    }\n  }\n\n  protected onWebSocketClose(): void {\n    const socket = this.socket;\n    if (socket !== null) {\n      socket.onopen = null;\n      socket.onmessage = null;\n      socket.onclose = null;\n      socket.onerror = null;\n      Object.defineProperty(this, \"socket\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    this.onDisconnect();\n    this.clearIdle();\n    if (!this.isIdle()) {\n      if (this.context.isOnline()) {\n        this.reconnect();\n      }\n    } else {\n      this.close();\n    }\n  }\n\n  protected onWebSocketError(): void {\n    if (this.socket !== null) {\n      this.socket.close();\n      if (!this.context.isOnline()) {\n        this.onWebSocketClose(); // force close event\n      } else {\n        this.onError();\n      }\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays} from \"@swim/util\";\nimport type {Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {\n  EventMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n} from \"@swim/warp\";\nimport type {HostDownlink} from \"../host/HostDownlink\";\nimport type {Host} from \"../host/Host\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport type {DownlinkType, Downlink} from \"./Downlink\";\n\n/** @hidden */\nexport abstract class DownlinkModel implements HostDownlink {\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio: number = 0, rate: number = 0, body: Value = Value.absent()) {\n    Object.defineProperty(this, \"context\", {\n      value: context,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"hostUri\", {\n      value: hostUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"nodeUri\", {\n      value: nodeUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"laneUri\", {\n      value: laneUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"prio\", {\n      value: prio,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"rate\", {\n      value: rate,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"body\", {\n      value: body,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"views\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"host\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"status\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  readonly context!: DownlinkContext;\n\n  readonly hostUri!: Uri;\n\n  readonly nodeUri!: Uri;\n\n  readonly laneUri!: Uri;\n\n  readonly prio!: number;\n\n  readonly rate!: number;\n\n  readonly body!: Value;\n\n  readonly views!: ReadonlyArray<Downlink>;\n\n  readonly host!: Host | null;\n\n  /** @hidden */\n  readonly status!: number;\n\n  abstract readonly type: DownlinkType;\n\n  keepLinked(): boolean {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      if (views[i]!.keepLinked()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  keepSynced(): boolean {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      if (this.views[i]!.keepSynced()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  get unlinkDelay(): number {\n    const host = this.host;\n    return host !== null ? host.unlinkDelay : 0;\n  }\n\n  isConnected(): boolean {\n    const host = this.host;\n    return host !== null ? host.isConnected() : false;\n  }\n\n  isAuthenticated(): boolean {\n    const host = this.host;\n    return host !== null ? host.isAuthenticated() : false;\n  }\n\n  isLinked(): boolean {\n    return (this.status & DownlinkModel.Linked) !== 0;\n  }\n\n  isSynced(): boolean {\n    return (this.status & DownlinkModel.Synced) !== 0;\n  }\n\n  get session(): Value {\n    const host = this.host;\n    return host !== null ? host.session : Value.absent();\n  }\n\n  addDownlink(view: Downlink): void {\n    Object.defineProperty(this, \"views\", {\n      value: Arrays.inserted(view, this.views),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  removeDownlink(view: Downlink): void {\n    const oldViews = this.views;\n    const newViews = Arrays.removed(view, oldViews);\n    if (oldViews !== newViews) {\n      Object.defineProperty(this, \"views\", {\n        value: newViews,\n        enumerable: true,\n        configurable: true,\n      });\n      view.closeUp();\n      if (newViews.length === 0) {\n        const unlinkDelay = this.unlinkDelay;\n        if (unlinkDelay < 0) {\n          this.unlink();\n        } else {\n          setTimeout(this.doUnlink.bind(this), unlinkDelay);\n        }\n      }\n    }\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.onEventMessage(message);\n    }\n  }\n\n  onCommandMessage(body: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.onCommandMessage(body);\n    }\n  }\n\n  onLinkRequest(request: LinkRequest): void {\n    Object.defineProperty(this, \"status\", {\n      value: this.status | DownlinkModel.Linking,\n      enumerable: true,\n      configurable: true,\n    });\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.onLinkRequest(request);\n    }\n  }\n\n  onLinkedResponse(response: LinkedResponse, host: Host): void {\n    Object.defineProperty(this, \"status\", {\n      value: this.status & ~DownlinkModel.Linking | DownlinkModel.Linked,\n      enumerable: true,\n      configurable: true,\n    });\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.onLinkedResponse(response);\n    }\n  }\n\n  onSyncRequest(request: SyncRequest): void {\n    Object.defineProperty(this, \"status\", {\n      value: this.status | DownlinkModel.Syncing,\n      enumerable: true,\n      configurable: true,\n    });\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.onSyncRequest(request);\n    }\n  }\n\n  onSyncedResponse(response: SyncedResponse, host: Host): void {\n    Object.defineProperty(this, \"status\", {\n      value: this.status & ~DownlinkModel.Syncing | DownlinkModel.Synced,\n      enumerable: true,\n      configurable: true,\n    });\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.onSyncedResponse(response);\n    }\n  }\n\n  onUnlinkRequest(request: UnlinkRequest, host: Host): void {\n    Object.defineProperty(this, \"status\", {\n      value: this.status & ~(DownlinkModel.Linking | DownlinkModel.Syncing) | DownlinkModel.Unlinking,\n      enumerable: true,\n      configurable: true,\n    });\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.onUnlinkRequest(request);\n    }\n  }\n\n  onUnlinkedResponse(response: UnlinkedResponse, host: Host): void {\n    Object.defineProperty(this, \"status\", {\n      value: this.status & ~DownlinkModel.Unlinking,\n      enumerable: true,\n      configurable: true,\n    });\n    const views = this.views;\n    if (views.length === 0 || this.status !== 0) {\n      for (let i = 0, n = views.length; i < n; i += 1) {\n        views[i]!.onUnlinkedResponse(response);\n      }\n      this.close();\n    } else { // concurrently relinked\n      if (this.keepSynced()) {\n        this.sync();\n      } else {\n        this.link();\n      }\n    }\n  }\n\n  hostDidConnect(host: Host): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.hostDidConnect();\n    }\n    if (this.keepSynced()) {\n      this.sync();\n    } else {\n      this.link();\n    }\n  }\n\n  hostDidDisconnect(host: Host): void {\n    Object.defineProperty(this, \"status\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    let keepLinked = false;\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      const view = views[i]!;\n      view.hostDidDisconnect();\n      keepLinked = keepLinked || view.keepLinked();\n    }\n    if (!keepLinked) {\n      this.close();\n    }\n  }\n\n  hostDidFail(error: unknown, host: Host): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.hostDidFail(error);\n    }\n  }\n\n  command(body: AnyValue): void {\n    body = Value.fromAny(body);\n    this.onCommandMessage(body);\n    this.host!.command(this.nodeUri, this.laneUri, body);\n  }\n\n  sync(): void {\n    const nodeUri = this.host!.unresolve(this.nodeUri);\n    const request = new SyncRequest(nodeUri, this.laneUri, this.prio, this.rate, this.body);\n    this.onSyncRequest(request);\n    this.host!.push(request);\n  }\n\n  link(): void {\n    const nodeUri = this.host!.unresolve(this.nodeUri);\n    const request = new LinkRequest(nodeUri, this.laneUri, this.prio, this.rate, this.body);\n    this.onLinkRequest(request);\n    this.host!.push(request);\n  }\n\n  unlink(): void {\n    Object.defineProperty(this, \"status\", {\n      value: DownlinkModel.Unlinking,\n      enumerable: true,\n      configurable: true,\n    });\n    this.context.unlinkDownlink(this);\n  }\n\n  protected doUnlink(): void {\n    if (this.views.length === 0) {\n      this.unlink();\n    }\n  }\n\n  close(): void {\n    this.context.closeDownlink(this);\n  }\n\n  openUp(host: Host): void {\n    Object.defineProperty(this, \"host\", {\n      value: host,\n      enumerable: true,\n      configurable: true,\n    });\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      this.views[i]!.openUp(host);\n    }\n  }\n\n  closeUp(): void {\n    const views = this.views;\n    Object.defineProperty(this, \"views\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.closeUp();\n    }\n  }\n\n  static readonly Linking: number = 1 << 0;\n  static readonly Linked: number = 1 << 1;\n  static readonly Syncing: number = 1 << 2;\n  static readonly Synced: number = 1 << 3;\n  static readonly Unlinking: number = 1 << 4;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Value} from \"@swim/structure\";\nimport type {Uri} from \"@swim/uri\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport type {DownlinkType} from \"./Downlink\";\nimport type {EventDownlink} from \"./EventDownlink\";\n\n/** @hidden */\nexport class EventDownlinkModel extends DownlinkModel {\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n  }\n\n  override views!: ReadonlyArray<EventDownlink>;\n\n  override get type(): DownlinkType {\n    return \"event\";\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyValue, Value} from \"@swim/structure\";\nimport type {AnyUri, Uri} from \"@swim/uri\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport type {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {EventDownlinkModel} from \"./EventDownlinkModel\";\n\nexport interface EventDownlinkObserver extends DownlinkObserver {\n}\n\nexport interface EventDownlinkInit extends EventDownlinkObserver, DownlinkInit {\n}\n\nexport class EventDownlink extends Downlink {\n  /** @hidden */\n  constructor(context: DownlinkContext, owner: DownlinkOwner | null, init?: EventDownlinkInit,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number,\n              rate?: number, body?: Value, flags: number = DownlinkFlags.KeepLinked,\n              observers?: ReadonlyArray<EventDownlinkObserver> | EventDownlinkObserver) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n  }\n\n  /** @hidden */\n  override readonly model!: EventDownlinkModel | null;\n\n  /** @hidden */\n  override readonly observers!: ReadonlyArray<EventDownlinkObserver>;\n\n  override get type(): DownlinkType {\n    return \"event\";\n  }\n\n  protected override copy(context: DownlinkContext, owner: DownlinkOwner | null,\n                          hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                          body: Value, flags: number, observers: ReadonlyArray<EventDownlinkObserver>): EventDownlink {\n    return new EventDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                             prio, rate, body, flags, observers);\n  }\n\n  override observe(observer: EventDownlinkObserver): this {\n    return super.observe(observer);\n  }\n\n  override open(): this {\n    const laneUri = this.ownLaneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this.ownNodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this.ownHostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this.context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model !== void 0) {\n      if (!(model instanceof EventDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n    } else {\n      model = new EventDownlinkModel(this.context, hostUri, nodeUri, laneUri,\n                                     this.ownPrio, this.ownRate, this.ownBody);\n      model.addDownlink(this);\n      this.context.openDownlink(model);\n    }\n    Object.defineProperty(this, \"model\", {\n      value: model as EventDownlinkModel,\n      enumerable: true,\n      configurable: true,\n    });\n    if (this.owner !== null) {\n      this.owner.addDownlink(this);\n    }\n    return this;\n  }\n}\nexport interface EventDownlink {\n  hostUri(): Uri;\n  hostUri(hostUri: AnyUri): EventDownlink;\n\n  nodeUri(): Uri;\n  nodeUri(nodeUri: AnyUri): EventDownlink;\n\n  laneUri(): Uri;\n  laneUri(laneUri: AnyUri): EventDownlink;\n\n  prio(): number;\n  prio(prio: number): EventDownlink;\n\n  rate(): number;\n  rate(rate: number): EventDownlink;\n\n  body(): Value;\n  body(body: AnyValue): EventDownlink;\n\n  keepLinked(): boolean;\n  keepLinked(keepLinked: boolean): EventDownlink;\n\n  keepSynced(): boolean;\n  keepSynced(keepSynced: boolean): EventDownlink;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {STree} from \"@swim/collections\";\nimport {Attr, Value, Record} from \"@swim/structure\";\nimport type {Uri} from \"@swim/uri\";\nimport type {EventMessage} from \"@swim/warp\";\nimport type {Host} from \"../host/Host\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport type {DownlinkType} from \"./Downlink\";\nimport type {ListDownlink} from \"./ListDownlink\";\n\n/** @hidden */\nexport class ListDownlinkModel extends DownlinkModel {\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: STree<Value, Value> = new STree()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly views!: ReadonlyArray<ListDownlink<unknown>>;\n\n  /** @hidden */\n  readonly state!: STree<Value, Value>;\n\n  override get type(): DownlinkType {\n    return \"list\";\n  }\n\n  get length(): number {\n    return this.state.length;\n  }\n\n  isEmpty(): boolean {\n    return this.state.isEmpty();\n  }\n\n  get(index: number, key?: Value): Value {\n    return this.state.get(index, key) || Value.absent();\n  }\n\n  getEntry(index: number, key?: Value): [Value, Value] | undefined {\n    return this.state.getEntry(index, key);\n  }\n\n  set(index: number, newValue: Value, key?: Value): this {\n    if (key !== void 0) {\n      index = this.state.lookup(key, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (index < 0 || index >= this.state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    newValue = this.listWillUpdate(index, newValue);\n    const oldEntry = this.state.getEntry(index)!;\n    this.state.set(index, newValue);\n    this.listDidUpdate(index, newValue, oldEntry[1]);\n    const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  insert(index: number, newValue: Value, key?: Value): this {\n    if (index < 0 || index > this.state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    newValue = this.listWillUpdate(index, newValue);\n    this.state.insert(index, newValue, key);\n    const newEntry = this.state.getEntry(index)!;\n    this.listDidUpdate(index, newValue, Value.absent());\n    const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  remove(index: number, key?: Value): this {\n    if (key !== void 0) {\n      index = this.state.lookup(key, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (index < 0 || index > this.state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    this.listWillRemove(index);\n    const oldEntry = this.state.getEntry(index)!;\n    this.state.remove(index);\n    this.listDidRemove(index, oldEntry[1]);\n    const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n    this.command(Record.create(1).attr(\"remove\", header));\n    return this;\n  }\n\n  push(...newValues: Value[]): number {\n    for (let i = 0; i < newValues.length; i += 1) {\n      const index = this.state.length + i;\n      const newValue = this.listWillUpdate(index, newValues[i]!);\n      this.state.insert(index, newValue);\n      const newEntry = this.state.getEntry(index)!;\n      this.listDidUpdate(index, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return this.state.length;\n  }\n\n  pop(): Value {\n    const index = this.state.length - 1;\n    if (index >= 0) {\n      this.listWillRemove(index);\n      const oldEntry = this.state.getEntry(index)!;\n      this.state.remove(index);\n      this.listDidRemove(index, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return oldEntry[1];\n    } else {\n      return Value.absent();\n    }\n  }\n\n  unshift(...newValues: Value[]): number {\n    for (let i = newValues.length - 1; i >= 0; i -= 1) {\n      const newValue = this.listWillUpdate(0, newValues[i]!);\n      this.state.insert(0, newValue);\n      const newEntry = this.state.getEntry(0)!;\n      this.listDidUpdate(0, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", 0);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return this.state.length;\n  }\n\n  shift(): Value {\n    if (this.state.length > 0) {\n      this.listWillRemove(0);\n      const oldEntry = this.state.getEntry(0)!;\n      this.state.remove(0);\n      this.listDidRemove(0, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", 0);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return oldEntry[1];\n    } else {\n      return Value.absent();\n    }\n  }\n\n  move(fromIndex: number, toIndex: number, key?: Value): this {\n    if (key !== void 0) {\n      fromIndex = this.state.lookup(key, fromIndex);\n      if (fromIndex < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (fromIndex < 0 || fromIndex >= this.state.length) {\n      throw new RangeError(\"\" + fromIndex);\n    }\n    if (toIndex < 0 || toIndex >= this.state.length) {\n      throw new RangeError(\"\" + toIndex);\n    }\n    if (fromIndex !== toIndex) {\n      const entry = this.state.getEntry(fromIndex)!;\n      this.listWillMove(fromIndex, toIndex, entry[1]);\n      this.state.remove(fromIndex).insert(toIndex, entry[1], entry[0]);\n      this.listDidMove(fromIndex, toIndex, entry[1]);\n      const header = Record.create(2).slot(\"key\", entry[0]).slot(\"from\", fromIndex).slot(\"to\", toIndex);\n      this.command(Record.create(1).attr(\"move\", header));\n    }\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newValues: Value[]): Value[] {\n    if (start < 0) {\n      start = this.state.length + start;\n    }\n    start = Math.min(Math.max(0, start), this.state.length);\n    if (deleteCount === void 0) {\n      deleteCount = this.state.length - start;\n    }\n    const deleted = [] as Value[];\n    for (let i = start, n = start + deleteCount; i < n; i += 1) {\n      this.listWillRemove(start);\n      const oldEntry = this.state.getEntry(start)!;\n      deleted.push(oldEntry[1]);\n      this.state.remove(start);\n      this.listDidRemove(start, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", start);\n      this.command(Record.create(1).attr(\"remove\", header));\n    }\n    for (let i = 0; i < newValues.length; i += 1) {\n      const index = start + i;\n      const newValue = this.listWillUpdate(index, newValues[i]!);\n      this.state.insert(index, newValue);\n      const newEntry = this.state.getEntry(index)!;\n      this.listDidUpdate(index, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return deleted;\n  }\n\n  clear(): void {\n    this.listWillClear();\n    this.state.clear();\n    this.listDidClear();\n    this.command(Record.create(1).attr(\"clear\"));\n  }\n\n  forEach<T>(callback: (value: Value, index: number, key: Value) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, value: Value, index: number, key: Value) => T | void,\n                thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, value: Value, index: number, key: Value) => T | void,\n                thisArg?: S): T | undefined {\n    return this.state.forEach(callback, thisArg);\n  }\n\n  values(): Cursor<Value> {\n    return this.state.values();\n  }\n\n  keys(): Cursor<Value> {\n    return this.state.keys();\n  }\n\n  entries(): Cursor<[Value, Value]> {\n    return this.state.entries();\n  }\n\n  snapshot(): STree<Value, Value> {\n    return this.state.clone();\n  }\n\n  setState(state: STree<Value, Value>): void {\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    const event = message.body;\n    const tag = event.tag;\n    if (tag === \"update\") {\n      const header = event.head().toValue();\n      const index = this.state.lookup(header.get(\"key\"), header.get(\"index\").numberValue());\n      if (index >= 0) {\n        this.onUpdateEvent(index, event.body(), header.get(\"key\"));\n      } else {\n        this.onInsertEvent(header.get(\"index\").numberValue(0), event.body(), header.get(\"key\"));\n      }\n    } else if (tag === \"move\") {\n      const header = event.head().toValue();\n      const index = this.state.lookup(header.get(\"key\"), header.get(\"from\").numberValue());\n      if (index >= 0) {\n        this.onMoveEvent(index, header.get(\"to\").numberValue(0), header.get(\"key\"));\n      }\n    } else if (tag === \"remove\") {\n      const header = event.head().toValue();\n      const index = this.state.lookup(header.get(\"key\"), header.get(\"index\").numberValue());\n      if (index >= 0) {\n        this.onRemoveEvent(index, header.get(\"key\"));\n      }\n    } else if (tag === \"drop\") {\n      const header = event.head();\n      this.onDropEvent(header.numberValue(0));\n    } else if (tag === \"take\") {\n      const header = event.head();\n      this.onTakeEvent(header.numberValue(0));\n    } else if (tag === \"clear\") {\n      this.onClearEvent();\n    }\n  }\n\n  protected onInsertEvent(index: number, newValue: Value, key: Value): void {\n    newValue = this.listWillUpdate(index, newValue);\n    this.state.insert(index, newValue, key);\n    this.listDidUpdate(index, newValue, Value.absent());\n  }\n\n  protected onUpdateEvent(index: number, newValue: Value, key: Value): void {\n    newValue = this.listWillUpdate(index, newValue);\n    const oldValue = this.state.get(index) || Value.absent();\n    this.state.set(index, newValue);\n    this.listDidUpdate(index, newValue, oldValue);\n  }\n\n  protected onMoveEvent(fromIndex: number, toIndex: number, key: Value): void {\n    toIndex = Math.min(Math.max(0, toIndex), this.state.length);\n    if (fromIndex !== toIndex) {\n      const value = this.state.get(fromIndex) || Value.absent();\n      this.listWillMove(fromIndex, toIndex, value);\n      this.state.remove(fromIndex).insert(toIndex, value, key);\n      this.listDidMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected onRemoveEvent(index: number, key: Value): void {\n    this.listWillRemove(index);\n    const oldValue = this.state.get(index) || Value.absent();\n    this.state.remove(index);\n    this.listDidRemove(index, oldValue);\n  }\n\n  protected onDropEvent(lower: number): void {\n    this.listWillDrop(lower);\n    this.state.drop(lower);\n    this.listDidDrop(lower);\n  }\n\n  protected onTakeEvent(upper: number): void {\n    this.listWillTake(upper);\n    this.state.take(upper);\n    this.listDidTake(upper);\n  }\n\n  protected onClearEvent(): void {\n    this.listWillClear();\n    this.state.clear();\n    this.listDidClear();\n  }\n\n  protected listWillUpdate(index: number, newValue: Value): Value {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      newValue = views[i]!.listWillUpdate(index, newValue);\n    }\n    return newValue;\n  }\n\n  protected listDidUpdate(index: number, newValue: Value, oldValue: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listDidUpdate(index, newValue, oldValue);\n    }\n  }\n\n  protected listWillMove(fromIndex: number, toIndex: number, value: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listWillMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected listDidMove(fromIndex: number, toIndex: number, value: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listDidMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected listWillRemove(index: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listWillRemove(index);\n    }\n  }\n\n  protected listDidRemove(index: number, oldValue: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listDidRemove(index, oldValue);\n    }\n  }\n\n  protected listWillDrop(lower: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listWillDrop(lower);\n    }\n  }\n\n  protected listDidDrop(lower: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listDidDrop(lower);\n    }\n  }\n\n  protected listWillTake(upper: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listWillTake(upper);\n    }\n  }\n\n  protected listDidTake(upper: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listDidTake(upper);\n    }\n  }\n\n  protected listWillClear(): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listWillClear();\n    }\n  }\n\n  protected listDidClear(): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.listDidClear();\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport type {STree} from \"@swim/collections\";\nimport {AnyValue, Value, Form, ValueCursor, ValueEntryCursor} from \"@swim/structure\";\nimport type {AnyUri, Uri} from \"@swim/uri\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport type {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {ListDownlinkModel} from \"./ListDownlinkModel\";\n\nexport type ListDownlinkWillUpdate<V, VU = never> = (index: number, newValue: V, downlink: ListDownlink<V, VU>) => V | void;\nexport type ListDownlinkDidUpdate<V, VU = never> = (index: number, newValue: V, oldValue: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillMove<V, VU = never> = (fromIndex: number, toIndex: number, value: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidMove<V, VU = never> = (fromIndex: number, toIndex: number, value: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillRemove<V, VU = never> = (index: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidRemove<V, VU = never> = (index: number, oldValue: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillDrop<V, VU = never> = (lower: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidDrop<V, VU = never> = (lower: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillTake<V, VU = never> = (upper: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidTake<V, VU = never> = (upper: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillClear<V, VU = never> = (downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidClear<V, VU = never> = (downlink: ListDownlink<V, VU>) => void;\n\nexport interface ListDownlinkObserver<V, VU = never> extends DownlinkObserver {\n  willUpdate?: ListDownlinkWillUpdate<V, VU>;\n  didUpdate?: ListDownlinkDidUpdate<V, VU>;\n  willMove?: ListDownlinkWillMove<V, VU>;\n  didMove?: ListDownlinkDidMove<V, VU>;\n  willRemove?: ListDownlinkWillRemove<V, VU>;\n  didRemove?: ListDownlinkDidRemove<V, VU>;\n  willDrop?: ListDownlinkWillDrop<V, VU>;\n  didDrop?: ListDownlinkDidDrop<V, VU>;\n  willTake?: ListDownlinkWillTake<V, VU>;\n  didTake?: ListDownlinkDidTake<V, VU>;\n  willClear?: ListDownlinkWillClear<V, VU>;\n  didClear?: ListDownlinkDidClear<V, VU>;\n}\n\nexport interface ListDownlinkInit<V, VU = never> extends ListDownlinkObserver<V, VU>, DownlinkInit {\n  valueForm?: Form<V, VU>;\n}\n\nexport class ListDownlink<V, VU = never> extends Downlink {\n  /** @hidden */\n  constructor(context: DownlinkContext, owner: DownlinkOwner | null, init?: ListDownlinkInit<V, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<ListDownlinkObserver<V, VU>> | ListDownlinkObserver<V, VU>,\n              valueForm?: Form<V, VU>, state0: STree<Value, Value> | null = null) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init !== void 0) {\n      const observer = this.observers[this.observers.length - 1]!;\n      observer.willUpdate = init.willUpdate ?? observer.willUpdate;\n      observer.didUpdate = init.didUpdate ?? observer.didUpdate;\n      observer.willMove = init.willMove ?? observer.willMove;\n      observer.didMove = init.didMove ?? observer.didMove;\n      observer.willRemove = init.willRemove ?? observer.willRemove;\n      observer.didRemove = init.didRemove ?? observer.didRemove;\n      observer.willDrop = init.willDrop ?? observer.willDrop;\n      observer.didDrop = init.didDrop ?? observer.didDrop;\n      observer.willTake = init.willTake ?? observer.willTake;\n      observer.didTake = init.didTake ?? observer.didTake;\n      observer.willClear = init.willClear ?? observer.willClear;\n      observer.didClear = init.didClear ?? observer.didClear;\n      valueForm = init.valueForm !== void 0 ? init.valueForm : valueForm;\n    }\n    Object.defineProperty(this, \"ownValueForm\", {\n      value: valueForm !== void 0 ? valueForm : Form.forValue() as unknown as Form<V, VU>,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"state0\", {\n      value: state0,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  override readonly model!: ListDownlinkModel | null;\n\n  /** @hidden */\n  override readonly observers!: ReadonlyArray<ListDownlinkObserver<V, VU>>;\n\n  /** @hidden */\n  readonly ownValueForm!: Form<V, VU>;\n\n  /** @hidden */\n  readonly state0!: STree<Value, Value> | null;\n\n  override get type(): DownlinkType {\n    return \"list\";\n  }\n\n  protected override copy<V, VU>(context: DownlinkContext, owner: DownlinkOwner | null,\n                                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                                 body: Value, flags: number, observers: ReadonlyArray<ListDownlinkObserver<V, VU>>,\n                                 valueForm?: Form<V, VU>, state0?: STree<Value, Value> | null): ListDownlink<V, VU> {\n    if (arguments.length === 10) {\n      valueForm = this.ownValueForm as unknown as Form<V, VU>;\n      state0 = this.state0;\n    }\n    return new ListDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                            prio, rate, body, flags, observers, valueForm, state0);\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2, V2U = never>(valueForm: Form<V2, V2U>): ListDownlink<V2, V2U>;\n  valueForm<V2, V2U = never>(valueForm?: Form<V2, V2U>): Form<V, VU> | ListDownlink<V2, V2U> {\n    if (valueForm === void 0) {\n      return this.ownValueForm;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers as any,\n                       valueForm, this.state0);\n    }\n  }\n\n  get length(): number {\n    return this.model!.length;\n  }\n\n  isEmpty(): boolean {\n    return this.model!.isEmpty();\n  }\n\n  get(index: number, id?: Value): V {\n    const value = this.model!.get(index, id);\n    return value.coerce(this.ownValueForm);\n  }\n\n  getEntry(index: number, id?: Value): [V, Value] | undefined {\n    const entry = this.model!.getEntry(index, id);\n    if (entry !== void 0) {\n      return [entry[0].coerce(this.ownValueForm), entry[1]];\n    }\n    return void 0;\n  }\n\n  set(index: number, newObject: V | VU, id?: Value): this {\n    const newValue = this.ownValueForm.mold(newObject);\n    this.model!.set(index, newValue, id);\n    return this;\n  }\n\n  insert(index: number, newObject: V | VU, id?: Value): this {\n    const newValue = this.ownValueForm.mold(newObject);\n    this.model!.insert(index, newValue, id);\n    return this;\n  }\n\n  remove(index: number, id?: Value): this {\n    this.model!.remove(index, id);\n    return this;\n  }\n\n  push(...newObjects: (V | VU)[]): number {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this.ownValueForm.mold(newObjects[i]!);\n    }\n    return this.model!.push.apply(this.model, newValues);\n  }\n\n  pop(): V {\n    const value = this.model!.pop();\n    return value.coerce(this.ownValueForm);\n  }\n\n  unshift(...newObjects: (V | VU)[]): number {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this.ownValueForm.mold(newObjects[i]!);\n    }\n    return this.model!.unshift.apply(this.model, newValues);\n  }\n\n  shift(): V {\n    const value = this.model!.shift();\n    return value.coerce(this.ownValueForm);\n  }\n\n  move(fromIndex: number, toIndex: number, id?: Value): this {\n    this.model!.move(fromIndex, toIndex, id);\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newObjects: (V | VU)[]): V[] {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this.ownValueForm.mold(newObjects[i]!);\n    }\n    const oldValues = this.model!.splice(start, deleteCount, ...newValues);\n    const oldObjects = new Array(oldValues.length);\n    for (let i = 0; i < oldValues.length; i += 1) {\n      oldObjects[i] = oldValues[i]!.coerce(this.ownValueForm);\n    }\n    return oldObjects;\n  }\n\n  clear(): void {\n    this.model!.clear();\n  }\n\n  forEach<T, S>(callback: (value: V, index: number, id: Value) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, value: V, index: number, id: Value) => T | void,\n                thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, value: V, index: number, id: Value) => T | void,\n                thisArg?: S): T | undefined {\n    if (this.ownValueForm as unknown === Form.forValue()) {\n      return this.model!.state.forEach(callback as any, thisArg);\n    } else {\n      return this.model!.state.forEach(function (value: Value, index: number, id: Value): T | void {\n        const object = value.coerce(this.ownValueForm);\n        return callback.call(thisArg, object, index, id);\n      }, this);\n    }\n  }\n\n  values(): Cursor<V> {\n    const cursor = this.model!.values();\n    if (this.ownValueForm as unknown === Form.forValue()) {\n      return cursor as unknown as Cursor<V>;\n    } else {\n      return new ValueCursor(cursor, this.ownValueForm);\n    }\n  }\n\n  keys(): Cursor<Value> {\n    return this.model!.keys();\n  }\n\n  entries(): Cursor<[Value, V]> {\n    const cursor = this.model!.entries();\n    if (this.ownValueForm as unknown === Form.forValue()) {\n      return cursor as unknown as Cursor<[Value, V]>;\n    } else {\n      return new ValueEntryCursor(cursor, Form.forValue(), this.ownValueForm);\n    }\n  }\n\n  snapshot(): STree<Value, Value> {\n    return this.model!.snapshot();\n  }\n\n  setState(state: STree<Value, Value>): void {\n    this.model!.setState(state);\n  }\n\n  override observe(observer: ListDownlinkObserver<V, VU>): this {\n    return super.observe(observer);\n  }\n\n  willUpdate(willUpdate: ListDownlinkWillUpdate<V, VU>): this {\n    return this.observe({willUpdate});\n  }\n\n  didUpdate(didUpdate: ListDownlinkDidUpdate<V, VU>): this {\n    return this.observe({didUpdate});\n  }\n\n  willMove(willMove: ListDownlinkWillMove<V, VU>): this {\n    return this.observe({willMove});\n  }\n\n  didMove(didMove: ListDownlinkDidMove<V, VU>): this {\n    return this.observe({didMove});\n  }\n\n  willRemove(willRemove: ListDownlinkWillRemove<V, VU>): this {\n    return this.observe({willRemove});\n  }\n\n  didRemove(didRemove: ListDownlinkDidRemove<V, VU>): this {\n    return this.observe({didRemove});\n  }\n\n  willDrop(willDrop: ListDownlinkWillDrop<V, VU>): this {\n    return this.observe({willDrop});\n  }\n\n  didDrop(didDrop: ListDownlinkDidDrop<V, VU>): this {\n    return this.observe({didDrop});\n  }\n\n  willTake(willTake: ListDownlinkWillTake<V, VU>): this {\n    return this.observe({willTake});\n  }\n\n  didTake(didTake: ListDownlinkDidTake<V, VU>): this {\n    return this.observe({didTake});\n  }\n\n  willClear(willClear: ListDownlinkWillClear<V, VU>): this {\n    return this.observe({willClear});\n  }\n\n  didClear(didClear: ListDownlinkDidClear<V, VU>): this {\n    return this.observe({didClear});\n  }\n\n  /** @hidden */\n  listWillUpdate(index: number, newValue: Value): Value {\n    let newObject: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willUpdate !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this.ownValueForm);\n        }\n        const newResult = observer.willUpdate(index, newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this.ownValueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  listDidUpdate(index: number, newValue: Value, oldValue: Value): void {\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didUpdate !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this.ownValueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this.ownValueForm);\n        }\n        observer.didUpdate(index, newObject, oldObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillMove(fromIndex: number, toIndex: number, value: Value): void {\n    let object: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willMove !== void 0) {\n        if (object === void 0) {\n          object = value.coerce(this.ownValueForm);\n        }\n        observer.willMove(fromIndex, toIndex, object, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidMove(fromIndex: number, toIndex: number, value: Value): void {\n    let object: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didMove !== void 0) {\n        if (object === void 0) {\n          object = value.coerce(this.ownValueForm);\n        }\n        observer.didMove(fromIndex, toIndex, object, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillRemove(index: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willRemove !== void 0) {\n        observer.willRemove(index, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidRemove(index: number, oldValue: Value): void {\n    let oldObject: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didRemove !== void 0) {\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this.ownValueForm);\n        }\n        observer.didRemove(index, oldObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillDrop(lower: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willDrop !== void 0) {\n        observer.willDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidDrop(lower: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didDrop !== void 0) {\n        observer.didDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillTake(upper: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willTake !== void 0) {\n        observer.willTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidTake(upper: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didTake !== void 0) {\n        observer.didTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillClear(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willClear !== void 0) {\n        observer.willClear(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidClear(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didClear !== void 0) {\n        observer.didClear(this);\n      }\n    }\n  }\n\n  initialState(): STree<Value, Value> | null;\n  initialState(state0: STree<Value, Value> | null): ListDownlink<V, VU>;\n  initialState(state0?: STree<Value, Value> | null): STree<Value, Value> | null | ListDownlink<V, VU> {\n    if (state0 === void 0) {\n      return this.state0;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers,\n                       this.ownValueForm, state0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this.model!.state.forEach(function (value: Value, index: number) {\n      this.listDidUpdate(index, value, Value.absent());\n    }, this);\n    this.onSyncedResponse();\n  }\n\n  override open(): this {\n    const laneUri = this.ownLaneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this.ownNodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this.ownHostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this.context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model !== void 0) {\n      if (!(model instanceof ListDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      Object.defineProperty(this, \"model\", {\n        value: model as ListDownlinkModel,\n        enumerable: true,\n        configurable: true,\n      });\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new ListDownlinkModel(this.context, hostUri, nodeUri, laneUri, this.ownPrio,\n                                    this.ownRate, this.ownBody, this.state0 ?? void 0);\n      model.addDownlink(this);\n      this.context.openDownlink(model);\n      Object.defineProperty(this, \"model\", {\n        value: model as ListDownlinkModel,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    if (this.owner !== null) {\n      this.owner.addDownlink(this);\n    }\n    return this;\n  }\n}\nexport interface ListDownlink<V, VU> {\n  hostUri(): Uri;\n  hostUri(hostUri: AnyUri): ListDownlink<V, VU>;\n\n  nodeUri(): Uri;\n  nodeUri(nodeUri: AnyUri): ListDownlink<V, VU>;\n\n  laneUri(): Uri;\n  laneUri(laneUri: AnyUri): ListDownlink<V, VU>;\n\n  prio(): number;\n  prio(prio: number): ListDownlink<V, VU>;\n\n  rate(): number;\n  rate(rate: number): ListDownlink<V, VU>;\n\n  body(): Value;\n  body(body: AnyValue): ListDownlink<V, VU>;\n\n  keepLinked(): boolean;\n  keepLinked(keepLinked: boolean): ListDownlink<V, VU>;\n\n  keepSynced(): boolean;\n  keepSynced(keepSynced: boolean): ListDownlink<V, VU>;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Attr, Value, Record} from \"@swim/structure\";\nimport type {Uri} from \"@swim/uri\";\nimport type {EventMessage} from \"@swim/warp\";\nimport type {Host} from \"../host/Host\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport type {DownlinkType} from \"./Downlink\";\nimport type {MapDownlink} from \"./MapDownlink\";\n\n/** @hidden */\nexport class MapDownlinkModel extends DownlinkModel {\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: BTree<Value, Value> = new BTree()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly views!: ReadonlyArray<MapDownlink<unknown, unknown>>;\n\n  /** @hidden */\n  readonly state!: BTree<Value, Value>;\n\n  override get type(): DownlinkType {\n    return \"map\";\n  }\n\n  get size(): number {\n    return this.state.size;\n  }\n\n  isEmpty(): boolean {\n    return this.state.isEmpty();\n  }\n\n  has(key: Value): boolean {\n    return this.state.has(key);\n  }\n\n  get(key: Value): Value {\n    return this.state.get(key) ?? Value.absent();\n  }\n\n  getEntry(index: number): [Value, Value] | undefined {\n    return this.state.getEntry(index);\n  }\n\n  set(key: Value, newValue: Value): this {\n    newValue = this.mapWillUpdate(key, newValue);\n    const oldValue = this.state.get(key) ?? Value.absent();\n    this.state.set(key, newValue);\n    this.mapDidUpdate(key, newValue, oldValue);\n    const header = Record.create(1).slot(\"key\", key);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  delete(key: Value): boolean {\n    if (this.state.has(key)) {\n      this.mapWillRemove(key);\n      const oldValue = this.state.get(key) ?? Value.absent();\n      this.state.delete(key);\n      this.mapDidRemove(key, oldValue);\n      const header = Record.create(1).slot(\"key\", key);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  drop(lower: number): this {\n    this.mapWillDrop(lower);\n    this.state.drop(lower);\n    this.mapDidDrop(lower);\n    this.command(Record.create(1).attr(\"drop\", lower));\n    return this;\n  }\n\n  take(upper: number): this {\n    this.mapWillTake(upper);\n    this.state.take(upper);\n    this.mapDidTake(upper);\n    this.command(Record.create(1).attr(\"take\", upper));\n    return this;\n  }\n\n  clear(): void {\n    this.mapWillClear();\n    this.state.clear();\n    this.mapDidClear();\n    this.command(Record.create(1).attr(\"clear\"));\n  }\n\n  forEach<T>(callback: (key: Value, value: Value) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, key: Value, value: Value) => T | void,\n                          thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, key: Value, value: Value) => T | void,\n                          thisArg?: S): T | undefined {\n    return this.state.forEach(callback, thisArg);\n  }\n\n  keys(): Cursor<Value> {\n    return this.state.keys();\n  }\n\n  values(): Cursor<Value> {\n    return this.state.values();\n  }\n\n  entries(): Cursor<[Value, Value]> {\n    return this.state.entries();\n  }\n\n  snapshot(): BTree<Value, Value> {\n    return this.state.clone();\n  }\n\n  setState(state: BTree<Value, Value>): void {\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    const event = message.body;\n    const tag = event.tag;\n    if (tag === \"update\") {\n      const header = event.head().toValue();\n      this.onUpdateEvent(header.get(\"key\"), event.body());\n    } else if (tag === \"remove\") {\n      const header = event.head().toValue();\n      this.onRemoveEvent(header.get(\"key\"));\n    } else if (tag === \"drop\") {\n      const header = event.head().toValue();\n      this.onDropEvent(header.numberValue(0));\n    } else if (tag === \"take\") {\n      const header = event.head().toValue();\n      this.onTakeEvent(header.numberValue(0));\n    } else if (tag === \"clear\") {\n      this.onClearEvent();\n    }\n  }\n\n  protected onUpdateEvent(key: Value, newValue: Value): void {\n    newValue = this.mapWillUpdate(key, newValue);\n    const oldValue = this.state.get(key) ?? Value.absent();\n    this.state.set(key, newValue);\n    this.mapDidUpdate(key, newValue, oldValue);\n  }\n\n  protected onRemoveEvent(key: Value): void {\n    this.mapWillRemove(key);\n    const oldValue = this.state.get(key) ?? Value.absent();\n    this.state.delete(key);\n    this.mapDidRemove(key, oldValue);\n  }\n\n  protected onDropEvent(lower: number): void {\n    this.mapWillDrop(lower);\n    this.state.drop(lower);\n    this.mapDidDrop(lower);\n  }\n\n  protected onTakeEvent(upper: number): void {\n    this.mapWillTake(upper);\n    this.state.take(upper);\n    this.mapDidTake(upper);\n  }\n\n  protected onClearEvent(): void {\n    this.mapWillClear();\n    this.state.clear();\n    this.mapDidClear();\n  }\n\n  protected mapWillUpdate(key: Value, newValue: Value): Value {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      newValue = views[i]!.mapWillUpdate(key, newValue);\n    }\n    return newValue;\n  }\n\n  protected mapDidUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapDidUpdate(key, newValue, oldValue);\n    }\n  }\n\n  protected mapWillRemove(key: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapWillRemove(key);\n    }\n  }\n\n  protected mapDidRemove(key: Value, oldValue: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapDidRemove(key, oldValue);\n    }\n  }\n\n  protected mapWillDrop(lower: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapWillDrop(lower);\n    }\n  }\n\n  protected mapDidDrop(lower: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapDidDrop(lower);\n    }\n  }\n\n  protected mapWillTake(upper: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapWillTake(upper);\n    }\n  }\n\n  protected mapDidTake(upper: number): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapDidTake(upper);\n    }\n  }\n\n  protected mapWillClear(): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapWillClear();\n    }\n  }\n\n  protected mapDidClear(): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.mapDidClear();\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Cursor, Map, OrderedMap} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {AnyValue, Value, Form, ValueCursor, ValueEntryCursor} from \"@swim/structure\";\nimport {Inlet, Outlet, KeyEffect, MapInlet, MapOutlet, MapOutletCombinators, KeyOutlet} from \"@swim/streamlet\";\nimport type {AnyUri, Uri} from \"@swim/uri\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport type {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {MapDownlinkModel} from \"./MapDownlinkModel\";\n\nexport type MapDownlinkWillUpdate<K, V, KU = never, VU = never> = (key: K, newValue: V, downlink: MapDownlink<K, V, KU, VU>) => V | void;\nexport type MapDownlinkDidUpdate<K, V, KU = never, VU = never> = (key: K, newValue: V, oldValue: V, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillRemove<K, V, KU = never, VU = never> = (key: K, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidRemove<K, V, KU = never, VU = never> = (key: K, oldValue: V, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillDrop<K, V, KU = never, VU = never> = (lower: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidDrop<K, V, KU = never, VU = never> = (lower: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillTake<K, V, KU = never, VU = never> = (upper: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidTake<K, V, KU = never, VU = never> = (upper: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillClear<K, V, KU = never, VU = never> = (downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidClear<K, V, KU = never, VU = never> = (downlink: MapDownlink<K, V, KU, VU>) => void;\n\nexport interface MapDownlinkObserver<K, V, KU = never, VU = never> extends DownlinkObserver {\n  willUpdate?: MapDownlinkWillUpdate<K, V, KU, VU>;\n  didUpdate?: MapDownlinkDidUpdate<K, V, KU, VU>;\n  willRemove?: MapDownlinkWillRemove<K, V, KU, VU>;\n  didRemove?: MapDownlinkDidRemove<K, V, KU, VU>;\n  willDrop?: MapDownlinkWillDrop<K, V, KU, VU>;\n  didDrop?: MapDownlinkDidDrop<K, V, KU, VU>;\n  willTake?: MapDownlinkWillTake<K, V, KU, VU>;\n  didTake?: MapDownlinkDidTake<K, V, KU, VU>;\n  willClear?: MapDownlinkWillClear<K, V, KU, VU>;\n  didClear?: MapDownlinkDidClear<K, V, KU, VU>;\n}\n\nexport interface MapDownlinkInit<K, V, KU = never, VU = never> extends MapDownlinkObserver<K, V, KU, VU>, DownlinkInit {\n  keyForm?: Form<K, KU>;\n  valueForm?: Form<V, VU>;\n}\n\nexport class MapDownlink<K, V, KU = never, VU = never> extends Downlink implements OrderedMap<K, V>, MapInlet<K, V, Map<K, V>>, MapOutlet<K, V, MapDownlink<K, V, KU, VU>> {\n  /** @hidden */\n  constructor(context: DownlinkContext, owner: DownlinkOwner | null, init?: MapDownlinkInit<K, V, KU, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>> | MapDownlinkObserver<K, V, KU, VU>,\n              keyForm?: Form<K, KU>, valueForm?: Form<V, VU>, state0: BTree<Value, Value> | null = null) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init !== void 0) {\n      const observer = this.observers[this.observers.length - 1]!;\n      observer.willUpdate = init.willUpdate ?? observer.willUpdate;\n      observer.didUpdate = init.didUpdate ?? observer.didUpdate;\n      observer.willRemove = init.willRemove ?? observer.willRemove;\n      observer.didRemove = init.didRemove ?? observer.didRemove;\n      observer.willDrop = init.willDrop ?? observer.willDrop;\n      observer.didDrop = init.didDrop ?? observer.didDrop;\n      observer.willTake = init.willTake ?? observer.willTake;\n      observer.didTake = init.didTake ?? observer.didTake;\n      observer.willClear = init.willClear ?? observer.willClear;\n      observer.didClear = init.didClear ?? observer.didClear;\n      keyForm = init.keyForm !== void 0 ? init.keyForm : keyForm;\n      valueForm = init.valueForm !== void 0 ? init.valueForm : valueForm;\n    }\n    Object.defineProperty(this, \"ownKeyForm\", {\n      value: keyForm !== void 0 ? keyForm : Form.forValue() as unknown as Form<K, KU>,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"ownValueForm\", {\n      value: valueForm !== void 0 ? valueForm : Form.forValue() as unknown as Form<V, VU>,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"state0\", {\n      value: state0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"input\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"effects\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outlets\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  override readonly model!: MapDownlinkModel | null;\n\n  /** @hidden */\n  override readonly observers!: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>>;\n\n  /** @hidden */\n  readonly ownKeyForm!: Form<K, KU>;\n\n  /** @hidden */\n  readonly ownValueForm!: Form<V, VU>;\n\n  /** @hidden */\n  readonly state0!: BTree<Value, Value> | null;\n\n  override get type(): DownlinkType {\n    return \"map\";\n  }\n\n  protected override copy<K, V, KU, VU>(context: DownlinkContext, owner: DownlinkOwner | null,\n                                        hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                                        body: Value, flags: number, observers: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>>,\n                                        keyForm?: Form<K, KU>, valueForm?: Form<V, VU>, state0?: BTree<Value, Value> | null): MapDownlink<K, V, KU, VU> {\n    if (arguments.length === 10) {\n      state0 = this.state0;\n      keyForm = this.ownKeyForm as unknown as Form<K, KU>;\n      valueForm = this.ownValueForm as unknown as Form<V, VU>;\n    }\n    return new MapDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                           prio, rate, body, flags, observers, keyForm, valueForm, state0);\n  }\n\n  keyForm(): Form<K, KU>;\n  keyForm<K2, K2U = never>(keyForm: Form<K2, K2U>): MapDownlink<K2, V, K2U, VU>;\n  keyForm<K2, K2U = never>(keyForm?: Form<K2, K2U>): Form<K, KU> | MapDownlink<K2, V, K2U, VU> {\n    if (keyForm === void 0) {\n      return this.ownKeyForm;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers as any,\n                       keyForm, this.ownValueForm, this.state0);\n    }\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2, V2U = never>(valueForm: Form<V2, V2U>): MapDownlink<K, V2, KU, V2U>;\n  valueForm<V2, V2U = never>(valueForm?: Form<V2, V2U>): Form<V, VU> | MapDownlink<K, V2, KU, V2U> {\n    if (valueForm === void 0) {\n      return this.ownValueForm;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers as any,\n                       this.ownKeyForm, valueForm, this.state0);\n    }\n  }\n\n  get size(): number {\n    return this.model!.size;\n  }\n\n  isEmpty(): boolean {\n    return this.model!.isEmpty();\n  }\n\n  has(key: K | KU): boolean {\n    const keyObject = this.ownKeyForm.mold(key);\n    return this.model!.has(keyObject);\n  }\n\n  get(): MapDownlink<K, V, KU, VU>;\n  get(key: K | KU): V;\n  get(key?: K | KU): MapDownlink<K, V, KU, VU> | V {\n    if (key === void 0) {\n      return this;\n    } else {\n      const keyObject = this.ownKeyForm.mold(key);\n      const value = this.model!.get(keyObject);\n      return value.coerce(this.ownValueForm);\n    }\n  }\n\n  getEntry(index: number): [K, V] | undefined {\n    const entry = this.model!.getEntry(index);\n    if (entry !== void 0) {\n      return [entry[0].coerce(this.ownKeyForm), entry[1].coerce(this.ownValueForm)];\n    }\n    return void 0;\n  }\n\n  firstKey(): K | undefined {\n    const key = this.model!.state.firstKey();\n    if (key !== void 0) {\n      const keyObject = this.ownKeyForm.cast(key);\n      if (keyObject !== void 0) {\n        return keyObject;\n      }\n    }\n    return this.ownKeyForm.unit;\n  }\n\n  firstValue(): V | undefined {\n    const value = this.model!.state.firstValue();\n    if (value !== void 0) {\n      const object = this.ownValueForm.cast(value);\n      if (object !== void 0) {\n        return object;\n      }\n    }\n    return this.ownValueForm.unit;\n  }\n\n  firstEntry(): [K, V] | undefined {\n    const entry = this.model!.state.firstEntry();\n    if (entry !== void 0) {\n      const keyObject: K = this.ownKeyForm.cast(entry[0])!;\n      const object: V = this.ownValueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  lastKey(): K | undefined {\n    const key = this.model!.state.lastKey();\n    if (key !== void 0) {\n      const keyObject = this.ownKeyForm.cast(key);\n      if (keyObject !== void 0) {\n        return keyObject;\n      }\n    }\n    return this.ownKeyForm.unit;\n  }\n\n  lastValue(): V | undefined {\n    const value = this.model!.state.lastValue();\n    if (value !== void 0) {\n      const object = this.ownValueForm.cast(value);\n      if (object !== void 0) {\n        return object;\n      }\n    }\n    return this.ownValueForm.unit;\n  }\n\n  lastEntry(): [K, V] | undefined {\n    const entry = this.model!.state.lastEntry();\n    if (entry !== void 0) {\n      const keyObject: K = this.ownKeyForm.cast(entry[0])!;\n      const object: V = this.ownValueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  nextKey(keyObject: K): K | undefined {\n    const key = this.ownKeyForm.mold(keyObject);\n    const nextKey = this.model!.state.nextKey(key);\n    if (nextKey !== void 0) {\n      const nextKeyObject = this.ownKeyForm.cast(nextKey);\n      if (nextKeyObject !== void 0) {\n        return nextKeyObject;\n      }\n    }\n    return this.ownKeyForm.unit;\n  }\n\n  nextValue(keyObject: K): V | undefined {\n    const key = this.ownKeyForm.mold(keyObject);\n    const nextValue = this.model!.state.nextValue(key);\n    if (nextValue !== void 0) {\n      const nextObject = this.ownValueForm.cast(nextValue);\n      if (nextObject !== void 0) {\n        return nextObject;\n      }\n    }\n    return this.ownValueForm.unit;\n  }\n\n  nextEntry(keyObject: K): [K, V] | undefined {\n    const key = this.ownKeyForm.mold(keyObject);\n    const entry = this.model!.state.nextEntry(key);\n    if (entry !== void 0) {\n      const keyObject: K = this.ownKeyForm.cast(entry[0])!;\n      const object: V = this.ownValueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  previousKey(keyObject: K): K | undefined {\n    const key = this.ownKeyForm.mold(keyObject);\n    const previousKey = this.model!.state.previousKey(key);\n    if (previousKey !== void 0) {\n      const previousKeyObject = this.ownKeyForm.cast(previousKey);\n      if (previousKeyObject !== void 0) {\n        return previousKeyObject;\n      }\n    }\n    return this.ownKeyForm.unit;\n  }\n\n  previousValue(keyObject: K): V | undefined {\n    const key = this.ownKeyForm.mold(keyObject);\n    const previousValue = this.model!.state.previousValue(key);\n    if (previousValue !== void 0) {\n      const previousObject = this.ownValueForm.cast(previousValue);\n      if (previousObject !== void 0) {\n        return previousObject;\n      }\n    }\n    return this.ownValueForm.unit;\n  }\n\n  previousEntry(keyObject: K): [K, V] | undefined {\n    const key = this.ownKeyForm.mold(keyObject);\n    const entry = this.model!.state.previousEntry(key);\n    if (entry !== void 0) {\n      const keyObject: K = this.ownKeyForm.cast(entry[0])!;\n      const object: V = this.ownValueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  set(key: K | KU, newValue: V | VU): this {\n    const keyObject = this.ownKeyForm.mold(key);\n    const newObject = this.ownValueForm.mold(newValue);\n    this.model!.set(keyObject, newObject);\n    return this;\n  }\n\n  delete(key: K | KU): boolean {\n    const keyObject = this.ownKeyForm.mold(key);\n    return this.model!.delete(keyObject);\n  }\n\n  drop(lower: number): this {\n    this.model!.drop(lower);\n    return this;\n  }\n\n  take(upper: number): this {\n    this.model!.take(upper);\n    return this;\n  }\n\n  clear(): void {\n    this.model!.clear();\n  }\n\n  forEach<T>(callback: (key: K, value: V) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, key: K, value: V) => T | void,\n                thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, key: K, value: V) => T | void,\n                thisArg?: S): T | undefined {\n    if (this.ownKeyForm as unknown === Form.forValue() && this.ownValueForm as unknown === Form.forValue()) {\n      return this.model!.state.forEach(callback as any, thisArg);\n    } else {\n      return this.model!.state.forEach(function (key: Value, value: Value): T | void {\n        const keyObject = key.coerce(this.ownKeyForm);\n        const object = value.coerce(this.ownValueForm);\n        return callback.call(thisArg, keyObject, object);\n      }, this);\n    }\n  }\n\n  keys(): Cursor<K> {\n    const cursor = this.model!.keys();\n    if (this.ownKeyForm as unknown === Form.forValue()) {\n      return cursor as unknown as Cursor<K>;\n    } else {\n      return new ValueCursor(cursor, this.ownKeyForm);\n    }\n  }\n\n  values(): Cursor<V> {\n    const cursor = this.model!.values();\n    if (this.ownValueForm as unknown === Form.forValue()) {\n      return cursor as unknown as Cursor<V>;\n    } else {\n      return new ValueCursor(cursor, this.ownValueForm);\n    }\n  }\n\n  entries(): Cursor<[K, V]> {\n    const cursor = this.model!.entries();\n    if (this.ownKeyForm as unknown === Form.forValue() && this.ownValueForm as unknown === Form.forValue()) {\n      return cursor as unknown as Cursor<[K, V]>;\n    } else {\n      return new ValueEntryCursor(cursor, this.ownKeyForm, this.ownValueForm);\n    }\n  }\n\n  snapshot(): BTree<Value, Value> {\n    return this.model!.snapshot();\n  }\n\n  setState(state: BTree<Value, Value>): void {\n    this.model!.setState(state);\n  }\n\n  override observe(observer: MapDownlinkObserver<K, V, KU, VU>): this {\n    return super.observe(observer);\n  }\n\n  willUpdate(willUpdate: MapDownlinkWillUpdate<K, V, KU, VU>): this {\n    return this.observe({willUpdate});\n  }\n\n  didUpdate(didUpdate: MapDownlinkDidUpdate<K, V, KU, VU>): this {\n    return this.observe({didUpdate});\n  }\n\n  willRemove(willRemove: MapDownlinkWillRemove<K, V, KU, VU>): this {\n    return this.observe({willRemove});\n  }\n\n  didRemove(didRemove: MapDownlinkDidRemove<K, V, KU, VU>): this {\n    return this.observe({didRemove});\n  }\n\n  willDrop(willDrop: MapDownlinkWillDrop<K, V, KU, VU>): this {\n    return this.observe({willDrop});\n  }\n\n  didDrop(didDrop: MapDownlinkDidDrop<K, V, KU, VU>): this {\n    return this.observe({didDrop});\n  }\n\n  willTake(willTake: MapDownlinkWillTake<K, V, KU, VU>): this {\n    return this.observe({willTake});\n  }\n\n  didTake(didTake: MapDownlinkDidTake<K, V, KU, VU>): this {\n    return this.observe({didTake});\n  }\n\n  willClear(willClear: MapDownlinkWillClear<K, V, KU, VU>): this {\n    return this.observe({willClear});\n  }\n\n  didClear(didClear: MapDownlinkDidClear<K, V, KU, VU>): this {\n    return this.observe({didClear});\n  }\n\n  /** @hidden */\n  mapWillUpdate(key: Value, newValue: Value): Value {\n    let keyObject: K | undefined;\n    let newObject: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willUpdate !== void 0) {\n        if (keyObject === void 0) {\n          keyObject = key.coerce(this.ownKeyForm);\n        }\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this.ownValueForm);\n        }\n        const newResult = observer.willUpdate(keyObject, newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this.ownValueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  mapDidUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    const keyObject = key.coerce(this.ownKeyForm);\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didUpdate !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this.ownValueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this.ownValueForm);\n        }\n        observer.didUpdate(keyObject, newObject, oldObject, this);\n      }\n    }\n    this.decohereInputKey(keyObject, KeyEffect.Update);\n    this.recohereInput(0); // TODO: debounce and track version\n  }\n\n  /** @hidden */\n  mapWillRemove(key: Value): void {\n    let keyObject: K | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willRemove !== void 0) {\n        if (keyObject === void 0) {\n          keyObject = key.coerce(this.ownKeyForm);\n        }\n        observer.willRemove(keyObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidRemove(key: Value, oldValue: Value): void {\n    const keyObject = key.coerce(this.ownKeyForm);\n    let oldObject: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didRemove !== void 0) {\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this.ownValueForm);\n        }\n        observer.didRemove(keyObject, oldObject, this);\n      }\n    }\n    this.decohereInputKey(keyObject, KeyEffect.Remove);\n    this.recohereInput(0); // TODO: debounce and track version\n  }\n\n  /** @hidden */\n  mapWillDrop(lower: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willDrop !== void 0) {\n        observer.willDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidDrop(lower: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didDrop !== void 0) {\n        observer.didDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapWillTake(upper: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willTake !== void 0) {\n        observer.willTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidTake(upper: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didTake !== void 0) {\n        observer.didTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapWillClear(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willClear !== void 0) {\n        observer.willClear(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidClear(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didClear !== void 0) {\n        observer.didClear(this);\n      }\n    }\n  }\n\n  initialState(): BTree<Value, Value> | null;\n  initialState(state0: BTree<Value, Value> | null): MapDownlink<K, V, KU, VU>;\n  initialState(state0?: BTree<Value, Value> | null): BTree | null | MapDownlink<K, V, KU, VU> {\n    if (state0 === void 0) {\n      return this.state0;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers,\n                       this.ownKeyForm, this.ownValueForm, state0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this.model!.state.forEach(function (key: Value, value: Value): void {\n      this.mapDidUpdate(key, value, Value.absent());\n    }, this);\n    this.onSyncedResponse();\n  }\n\n  override open(): this {\n    const laneUri = this.ownLaneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this.ownNodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this.ownHostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this.context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model !== void 0) {\n      if (!(model instanceof MapDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      Object.defineProperty(this, \"model\", {\n        value: model as MapDownlinkModel,\n        enumerable: true,\n        configurable: true,\n      });\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new MapDownlinkModel(this.context, hostUri, nodeUri, laneUri, this.ownPrio,\n                                   this.ownRate, this.ownBody, this.state0 ?? void 0);\n      model.addDownlink(this);\n      this.context.openDownlink(model);\n      Object.defineProperty(this, \"model\", {\n        value: model as MapDownlinkModel,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    if (this.owner !== null) {\n      this.owner.addDownlink(this);\n    }\n    return this;\n  }\n\n  keyIterator(): Cursor<K> {\n    return this.keys();\n  }\n\n  readonly input!: MapOutlet<K, V, Map<K, V>> | null;\n\n  /** @hidden */\n  readonly effects!: BTree<K, KeyEffect>;\n\n  /** @hidden */\n  readonly outlets!: BTree<K, KeyOutlet<K, V>>;\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<MapDownlink<K, V, KU, VU>>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  bindInput(newInput: MapOutlet<K, V, Map<K, V>>): void {\n    if (!MapOutlet.is(newInput)) {\n      throw new TypeError(\"\" + newInput);\n    }\n    const oldInput = this.input;\n    if (oldInput !== newInput) {\n      if (oldInput !== null) {\n        oldInput.unbindOutput(this);\n      }\n      Object.defineProperty(this, \"input\", {\n        value: newInput,\n        enumerable: true,\n        configurable: true,\n      });\n      if (newInput !== null) {\n        newInput.bindOutput(this);\n      }\n    }\n  }\n\n  unbindInput(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  disconnectInputs(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      oldInput.disconnectInputs();\n    }\n  }\n\n  outlet(key: K): Outlet<V> {\n    const oldOutlets = this.outlets;\n    let outlet = oldOutlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet<K, V>(this, key);\n      Object.defineProperty(this, \"outlets\", {\n        value: oldOutlets.updated(key, outlet),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    return outlet;\n  }\n\n  outputIterator(): Cursor<Inlet<MapDownlink<K, V, KU, VU>>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<MapDownlink<K, V, KU, VU>>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<MapDownlink<K, V, KU, VU>>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, V>) {\n        keyOutlet.unbindOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutlets = this.outlets;\n    if (oldOutlets.isEmpty()) {\n      Object.defineProperty(this, \"outlets\", {\n        value: new BTree(),\n        enumerable: true,\n        configurable: true,\n      });\n      oldOutlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, V>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n  }\n\n  decohereOutputKey(key: K, effect: KeyEffect): void {\n    this.decohereKey(key, effect);\n  }\n\n  decohereInputKey(key: K, effect: KeyEffect): void {\n    this.decohereKey(key, effect);\n  }\n\n  decohereKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this.effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willDecohereKey(key, effect);\n      Object.defineProperty(this, \"effects\", {\n        value: oldEffects.updated(key, effect),\n        enumerable: true,\n        configurable: true,\n      });\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohereKey(key, effect);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        if (MapInlet.is(output)) {\n          output.decohereOutputKey(key, effect);\n        } else {\n          output.decohereOutput();\n        }\n      }\n      const outlet = this.outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.decohereInput();\n      }\n      this.didDecohereKey(key, effect);\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this.version >= 0) {\n      this.willDecohere();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohere();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.decohereOutput();\n      }\n      this.outlets.forEach(function (key: K, outlet: KeyOutlet<K, V>): void {\n        outlet.decohereInput();\n      }, this);\n      this.didDecohere();\n    }\n  }\n\n  recohereOutputKey(key: K, version: number): void {\n    this.recohereKey(key, version);\n  }\n\n  recohereInputKey(key: K, version: number): void {\n    this.recohereKey(key, version);\n  }\n\n  recohereKey(key: K, version: number): void {\n    if (this.version < 0) {\n      const oldEffects = this.effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willRecohereKey(key, effect, version);\n        Object.defineProperty(this, \"effects\", {\n          value: oldEffects.removed(key),\n          enumerable: true,\n          configurable: true,\n        });\n        if (this.input !== null) {\n          this.input.recohereInputKey(key, version);\n        }\n        this.onRecohereKey(key, effect, version);\n        const outputs = this.outputs;\n        for (let i = 0, n = outputs.length; i < n; i += 1) {\n          const output = outputs[i];\n          if (MapInlet.is(output)) {\n            output.recohereOutputKey(key, version);\n          }\n        }\n        const outlet = this.outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.recohereInput(version);\n        }\n        this.didRecohereKey(key, effect, version);\n      }\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this.version < 0) {\n      this.willRecohere(version);\n      this.effects.forEach(function (key: K): void {\n        this.recohereKey(key, version);\n      }, this);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onRecohere(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i]!;\n        output.recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected onDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected didDecohereKey(key: K, effect: KeyEffect): void {\n    // hook\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected onRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      const input = this.input;\n      if (input !== null) {\n        const value = input.get(key);\n        if (value !== void 0) {\n          this.set(key, value);\n        } else {\n          this.delete(key);\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this.delete(key);\n    }\n  }\n\n  protected didRecohereKey(key: K, effect: KeyEffect, version: number): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    // hook\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n}\nexport interface MapDownlink<K, V, KU, VU> {\n  hostUri(): Uri;\n  hostUri(hostUri: AnyUri): MapDownlink<K, V, KU, VU>;\n\n  nodeUri(): Uri;\n  nodeUri(nodeUri: AnyUri): MapDownlink<K, V, KU, VU>;\n\n  laneUri(): Uri;\n  laneUri(laneUri: AnyUri): MapDownlink<K, V, KU, VU>;\n\n  prio(): number;\n  prio(prio: number): MapDownlink<K, V, KU, VU>;\n\n  rate(): number;\n  rate(rate: number): MapDownlink<K, V, KU, VU>;\n\n  body(): Value;\n  body(body: AnyValue): MapDownlink<K, V, KU, VU>;\n\n  keepLinked(): boolean;\n  keepLinked(keepLinked: boolean): MapDownlink<K, V, KU, VU>;\n\n  keepSynced(): boolean;\n  keepSynced(keepSynced: boolean): MapDownlink<K, V, KU, VU>;\n}\nexport interface MapDownlink<K, V, KU, VU> extends MapOutletCombinators<K, V, MapDownlink<K, V, KU, VU>> {\n}\nMapOutletCombinators.define(MapDownlink.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport type {Uri} from \"@swim/uri\";\nimport type {EventMessage} from \"@swim/warp\";\nimport type {Host} from \"../host/Host\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport type {DownlinkType} from \"./Downlink\";\nimport type {ValueDownlink} from \"./ValueDownlink\";\n\n/** @hidden */\nexport class ValueDownlinkModel extends DownlinkModel {\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: Value = Value.absent()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly views!: ReadonlyArray<ValueDownlink<unknown>>;\n\n  /** @hidden */\n  readonly state!: Value;\n\n  override get type(): DownlinkType {\n    return \"value\";\n  }\n\n  get(): Value {\n    return this.state;\n  }\n\n  set(newValue: Value): void {\n    newValue = this.valueWillSet(newValue);\n    const oldValue = this.state;\n    this.setState(newValue);\n    this.valueDidSet(newValue, oldValue);\n    this.command(newValue);\n  }\n\n  setState(state: Value): void {\n    Object.defineProperty(this, \"state\", {\n      value: state,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    this.onSetEvent(message.body);\n  }\n\n  protected onSetEvent(newValue: Value): void {\n    newValue = this.valueWillSet(newValue);\n    const oldValue = this.state;\n    this.setState(newValue);\n    this.valueDidSet(newValue, oldValue);\n  }\n\n  protected valueWillSet(newValue: Value): Value {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      newValue = views[i]!.valueWillSet(newValue);\n    }\n    return newValue;\n  }\n\n  protected valueDidSet(newValue: Value, oldValue: Value): void {\n    const views = this.views;\n    for (let i = 0, n = views.length; i < n; i += 1) {\n      views[i]!.valueDidSet(newValue, oldValue);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays, Cursor} from \"@swim/util\";\nimport {AnyValue, Value, Form} from \"@swim/structure\";\nimport {Inlet, Outlet, OutletCombinators} from \"@swim/streamlet\";\nimport type {AnyUri, Uri} from \"@swim/uri\";\nimport type {DownlinkContext} from \"./DownlinkContext\";\nimport type {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {ValueDownlinkModel} from \"./ValueDownlinkModel\";\n\nexport type ValueDownlinkWillSet<V, VU = never> = (newValue: V, downlink: ValueDownlink<V, VU>) => V | void;\nexport type VaueDownlinkDidSet<V, VU = never> = (newValue: V, oldValue: V, downlink: ValueDownlink<V, VU>) => void;\n\nexport interface ValueDownlinkObserver<V, VU = never> extends DownlinkObserver {\n  willSet?: ValueDownlinkWillSet<V, VU>;\n  didSet?: VaueDownlinkDidSet<V, VU>;\n}\n\nexport interface ValueDownlinkInit<V, VU = never> extends ValueDownlinkObserver<V, VU>, DownlinkInit {\n  valueForm?: Form<V, VU>;\n}\n\nexport class ValueDownlink<V, VU = never> extends Downlink implements Inlet<V>, Outlet<V> {\n  /** @hidden */\n  constructor(context: DownlinkContext, owner: DownlinkOwner | null, init?: ValueDownlinkInit<V, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<ValueDownlinkObserver<V, VU>> | ValueDownlinkObserver<V, VU>,\n              valueForm?: Form<V, VU>, state0: Value = Value.absent()) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init !== void 0) {\n      const observer = this.observers[this.observers.length - 1]!;\n      observer.willSet = init.willSet ?? observer.willSet;\n      observer.didSet = init.didSet ?? observer.didSet;\n      valueForm = init.valueForm !== void 0 ? init.valueForm : valueForm;\n    }\n    Object.defineProperty(this, \"ownValueForm\", {\n      value: valueForm !== void 0 ? valueForm : Form.forValue() as unknown as Form<V, VU>,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"state0\", {\n      value: state0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"input\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"version\", {\n      value: -1,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  override readonly model!: ValueDownlinkModel | null;\n\n  /** @hidden */\n  override observers!: ReadonlyArray<ValueDownlinkObserver<V, VU>>;\n\n  /** @hidden */\n  readonly ownValueForm!: Form<V, VU>;\n\n  /** @hidden */\n  readonly state0!: Value;\n\n  override get type(): DownlinkType {\n    return \"value\";\n  }\n\n  protected override copy<V, VU>(context: DownlinkContext, owner: DownlinkOwner | null,\n                                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                                 body: Value, flags: number, observers: ReadonlyArray<ValueDownlinkObserver<V, VU>>,\n                                 valueForm?: Form<V, VU>, state0?: Value): ValueDownlink<V, VU> {\n    if (arguments.length === 10) {\n      state0 = this.state0;\n      valueForm = this.ownValueForm as unknown as Form<V, VU>;\n    }\n    return new ValueDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                             prio, rate, body, flags, observers, valueForm, state0);\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2, V2U = never>(valueForm: Form<V2, V2U>): ValueDownlink<V2, V2U>;\n  valueForm<V2, V2U = never>(valueForm?: Form<V2, V2U>): Form<V, VU> | ValueDownlink<V2, V2U> {\n    if (valueForm === void 0) {\n      return this.ownValueForm;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers as any,\n                       valueForm, this.state0);\n    }\n  }\n\n  get(): V {\n    const value = this.model!.get();\n    const object = value.coerce(this.ownValueForm);\n    return object;\n  }\n\n  set(newObject: V | VU): void {\n    const newValue = this.ownValueForm.mold(newObject);\n    this.model!.set(newValue);\n  }\n\n  setState(state: Value): void {\n    this.model!.setState(state);\n  }\n\n  override observe(observer: ValueDownlinkObserver<V, VU>): this {\n    return super.observe(observer);\n  }\n\n  willSet(willSet: ValueDownlinkWillSet<V, VU>): this {\n    return this.observe({willSet});\n  }\n\n  didSet(didSet: VaueDownlinkDidSet<V, VU>): this {\n    return this.observe({didSet});\n  }\n\n  /** @hidden */\n  valueWillSet(newValue: Value): Value {\n    let newObject: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.willSet !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this.ownValueForm);\n        }\n        const newResult = observer.willSet(newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this.ownValueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  valueDidSet(newValue: Value, oldValue: Value): void {\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didSet !== void 0) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this.ownValueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this.ownValueForm);\n        }\n        observer.didSet(newObject, oldObject, this);\n      }\n    }\n    this.decohere();\n    this.recohere(0); // TODO: debounce update; track version\n  }\n\n  initialState(): Value;\n  initialState(state0: Value): ValueDownlink<V, VU>;\n  initialState(state0?: Value): Value | ValueDownlink<V, VU> {\n    if (state0 === void 0) {\n      return this.state0;\n    } else {\n      return this.copy(this.context, this.owner, this.ownHostUri, this.ownNodeUri, this.ownLaneUri,\n                       this.ownPrio, this.ownRate, this.ownBody, this.flags, this.observers,\n                       this.ownValueForm, state0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this.valueDidSet(this.model!.get(), Value.absent());\n    this.onSyncedResponse();\n  }\n\n  override open(): this {\n    const laneUri = this.ownLaneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this.ownNodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this.ownHostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this.context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model !== void 0) {\n      if (!(model instanceof ValueDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      Object.defineProperty(this, \"model\", {\n        value: model as ValueDownlinkModel,\n        enumerable: true,\n        configurable: true,\n      });\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new ValueDownlinkModel(this.context, hostUri, nodeUri, laneUri, this.ownPrio,\n                                     this.ownRate, this.ownBody, this.state0);\n      model.addDownlink(this);\n      this.context.openDownlink(model);\n      Object.defineProperty(this, \"model\", {\n        value: model as ValueDownlinkModel,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n    if (this.owner !== null) {\n      this.owner.addDownlink(this);\n    }\n    return this;\n  }\n\n  readonly input!: Outlet<V> | null;\n\n  /** @hidden */\n  readonly outputs!: ReadonlyArray<Inlet<V>>;\n\n  /** @hidden */\n  readonly version!: number;\n\n  bindInput(newInput: Outlet<V> | null): void {\n    const oldInput = this.input;\n    if (oldInput !== newInput) {\n      if (oldInput !== null) {\n        oldInput.unbindOutput(this);\n      }\n      Object.defineProperty(this, \"input\", {\n        value: newInput,\n        enumerable: true,\n        configurable: true,\n      });\n      if (newInput !== null) {\n        newInput.bindOutput(this);\n      }\n    }\n  }\n\n  unbindInput(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  disconnectInputs(): void {\n    const oldInput = this.input;\n    if (oldInput !== null) {\n      oldInput.unbindOutput(this);\n      Object.defineProperty(this, \"input\", {\n        value: null,\n        enumerable: true,\n        configurable: true,\n      });\n      oldInput.disconnectInputs();\n    }\n  }\n\n  outputIterator(): Cursor<Inlet<V>> {\n    return Cursor.array(this.outputs);\n  }\n\n  bindOutput(output: Inlet<V>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.inserted(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutput(output: Inlet<V>): void {\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.removed(output, this.outputs),\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  unbindOutputs(): void {\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n    }\n  }\n\n  disconnectOutputs(): void {\n    const oldOutputs = this.outputs;\n    Object.defineProperty(this, \"outputs\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n      const output = oldOutputs[i]!;\n      output.unbindInput();\n      output.disconnectOutputs();\n    }\n  }\n\n  decohereOutput(): void {\n    this.decohere();\n  }\n\n  decohereInput(): void {\n    this.decohere();\n  }\n\n  decohere(): void {\n    if (this.version >= 0) {\n      this.willDecohere();\n      Object.defineProperty(this, \"version\", {\n        value: -1,\n        enumerable: true,\n        configurable: true,\n      });\n      this.onDecohere();\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        outputs[i]!.decohereOutput();\n      }\n      this.didDecohere();\n    }\n  }\n\n  recohereOutput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohereInput(version: number): void {\n    this.recohere(version);\n  }\n\n  recohere(version: number): void {\n    if (this.version < 0) {\n      this.willRecohere(version);\n      Object.defineProperty(this, \"version\", {\n        value: version,\n        enumerable: true,\n        configurable: true,\n      });\n      if (this.input !== null) {\n        this.input.recohereInput(version);\n      }\n      this.onRecohere(version);\n      const outputs = this.outputs;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        outputs[i]!.recohereOutput(version);\n      }\n      this.didRecohere(version);\n    }\n  }\n\n  protected willDecohere(): void {\n    // hook\n  }\n\n  protected onDecohere(): void {\n    // hook\n  }\n\n  protected didDecohere(): void {\n    // hook\n  }\n\n  protected willRecohere(version: number): void {\n    // hook\n  }\n\n  protected onRecohere(version: number): void {\n    const input = this.input;\n    if (input !== null) {\n      const value = input.get();\n      if (value !== void 0) {\n        this.set(value);\n      }\n    }\n  }\n\n  protected didRecohere(version: number): void {\n    // hook\n  }\n}\nexport interface ValueDownlink<V, VU> {\n  hostUri(): Uri;\n  hostUri(hostUri: AnyUri): ValueDownlink<V, VU>;\n\n  nodeUri(): Uri;\n  nodeUri(nodeUri: AnyUri): ValueDownlink<V, VU>;\n\n  laneUri(): Uri;\n  laneUri(laneUri: AnyUri): ValueDownlink<V, VU>;\n\n  prio(): number;\n  prio(prio: number): ValueDownlink<V, VU>;\n\n  rate(): number;\n  rate(rate: number): ValueDownlink<V, VU>;\n\n  body(): Value;\n  body(body: AnyValue): ValueDownlink<V, VU>;\n\n  keepLinked(): boolean;\n  keepLinked(keepLinked: boolean): ValueDownlink<V, VU>;\n\n  keepSynced(): boolean;\n  keepSynced(keepSynced: boolean): ValueDownlink<V, VU>;\n}\nexport interface ValueDownlink<V, VU> extends OutletCombinators<V> {\n}\nOutletCombinators.define(ValueDownlink.prototype);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractRecordOutlet} from \"@swim/dataflow\";\nimport type {Downlink} from \"./Downlink\";\n\nexport abstract class DownlinkRecord extends AbstractRecordOutlet {\n  abstract readonly downlink: Downlink;\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, AnyValue, Value, Record, AnyText, AnyNum, Num} from \"@swim/structure\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport type {ListDownlink} from \"./ListDownlink\";\n\nexport class ListDownlinkRecord extends DownlinkRecord {\n  constructor(downlink: ListDownlink<Value, AnyValue>) {\n    super();\n    Object.defineProperty(this, \"downlink\", {\n      value: downlink,\n      enumerable: true,\n    });\n  }\n\n  override readonly downlink!: ListDownlink<Value, AnyValue>;\n\n  override isEmpty(): boolean {\n    return this.downlink.isEmpty();\n  }\n\n  override isArray(): boolean {\n    return true;\n  }\n\n  override isObject(): boolean {\n    return this.downlink.isEmpty();\n  }\n\n  override get length(): number {\n    return this.downlink.length;\n  }\n\n  override has(key: AnyValue): boolean {\n    return false;\n  }\n\n  override get(): Record;\n  override get(key: AnyValue): Value;\n  override get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      return Value.absent();\n    }\n  }\n\n  override getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  override getSlot(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  override getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this.downlink.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      return this.downlink.get(index);\n    }\n    return Item.absent();\n  }\n\n  override set(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override setAttr(key: AnyText, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override setSlot(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override setItem(index: AnyNum, newItem: AnyItem): this {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this.downlink.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      this.downlink.set(index, Value.fromAny(newItem));\n    }\n    return this;\n  }\n\n  override push(...newItems: AnyItem[]): number {\n    return this.downlink.push(...newItems);\n  }\n\n  override splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    return this.downlink.splice(start, deleteCount, ...newItems);\n  }\n\n  override delete(key: AnyValue): Item {\n    return Item.absent();\n  }\n\n  override clear(): void {\n    this.downlink.clear();\n  }\n\n  override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                         thisArg: S): T | undefined;\n  override forEach<T, S>(callback: (this: S | undefined, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined {\n    return this.downlink.forEach(callback, thisArg);\n  }\n\n  override keyIterator(): Cursor<Value> {\n    return Cursor.empty();\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, Slot, AnyValue, Value, Record, AnyText, AnyNum, Num} from \"@swim/structure\";\nimport {KeyEffect} from \"@swim/streamlet\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport type {MapDownlinkObserver, MapDownlink} from \"./MapDownlink\";\n\nexport class MapDownlinkRecord extends DownlinkRecord implements MapDownlinkObserver<Value, Value, AnyValue, AnyValue> {\n  constructor(downlink: MapDownlink<Value, Value, AnyValue, AnyValue>) {\n    super();\n    Object.defineProperty(this, \"downlink\", {\n      value: downlink,\n      enumerable: true,\n    });\n    downlink.observe(this);\n  }\n\n  override readonly downlink!: MapDownlink<Value, Value, AnyValue, AnyValue>;\n\n  override isEmpty(): boolean {\n    return this.downlink.isEmpty();\n  }\n\n  override isArray(): boolean {\n    return this.downlink.isEmpty();\n  }\n\n  override isObject(): boolean {\n    return true;\n  }\n\n  override get length(): number {\n    return this.downlink.size;\n  }\n\n  override has(key: AnyValue): boolean {\n    return this.downlink.has(key);\n  }\n\n  override get(): Record;\n  override get(key: AnyValue): Value;\n  override get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      return this.downlink.get(key);\n    }\n  }\n\n  override getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  override getSlot(key: AnyValue): Value {\n    return this.get(key);\n  }\n\n  override getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this.downlink.size;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      const entry = this.downlink.getEntry(index)!;\n      return Slot.of(entry[0], entry[1]);\n    }\n    return Item.absent();\n  }\n\n  override set(key: AnyValue, newValue: AnyValue): this {\n    this.downlink.set(key, newValue);\n    return this;\n  }\n\n  override setAttr(key: AnyText, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override setSlot(key: AnyValue, newValue: AnyValue): this {\n    return this.set(key, newValue);\n  }\n\n  override setItem(index: number, newItem: AnyItem): this {\n    throw new Error(\"unsupported\");\n  }\n\n  override push(...newItems: AnyItem[]): number {\n    throw new Error(\"unsupported\");\n  }\n\n  override splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    throw new Error(\"unsupported\");\n  }\n\n  override delete(key: AnyValue): Item {\n    key = Value.fromAny(key);\n    const oldValue = this.downlink.get(key);\n    if (this.downlink.delete(key)) {\n      return Slot.of(key, oldValue);\n    }\n    return Item.absent();\n  }\n\n  override clear(): void {\n    this.downlink.clear();\n  }\n\n  override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                         thisArg: S): T | undefined;\n  override forEach<T, S>(callback: (this: S | undefined, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined {\n    let index = 0;\n    return this.downlink.forEach(function (key: Value, value: Value): T | void {\n      const result = callback.call(thisArg, Slot.of(key, value), index);\n      index += 1;\n      return result;\n    });\n  }\n\n  override keyIterator(): Cursor<Value> {\n    return this.downlink.keys();\n  }\n\n  didUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    this.decohereInputKey(key, KeyEffect.Update);\n    this.recohereInput(0); // TODO: debounce\n  }\n\n  didRemove(key: Value, oldValue: Value): void {\n    this.decohereInputKey(key, KeyEffect.Remove);\n    this.recohereInput(0); // TODO: debounce\n  }\n\n  didDrop(lower: number): void {\n    // TODO\n  }\n\n  didTake(upper: number): void {\n    // TODO\n  }\n\n  didClear(): void {\n    // TODO\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, Field, AnyValue, Value, Record, AnyText, AnyNum} from \"@swim/structure\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport type {ValueDownlinkObserver, ValueDownlink} from \"./ValueDownlink\";\n\nexport class ValueDownlinkRecord extends DownlinkRecord implements ValueDownlinkObserver<Value, AnyValue> {\n  constructor(downlink: ValueDownlink<Value, AnyValue>) {\n    super();\n    Object.defineProperty(this, \"downlink\", {\n      value: downlink,\n      enumerable: true,\n    });\n    downlink.observe(this);\n  }\n\n  override readonly downlink!: ValueDownlink<Value, AnyValue>;\n\n  override isEmpty(): boolean {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.isEmpty();\n    } else {\n      return !value.isDefined();\n    }\n  }\n\n  override isArray(): boolean {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.isArray();\n    } else {\n      return true;\n    }\n  }\n\n  override isObject(): boolean {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.isObject();\n    } else {\n      return !value.isDefined();\n    }\n  }\n\n  override get length(): number {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.length;\n    } else if (value.isDefined()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  override has(key: AnyValue): boolean {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.has(key);\n    } else {\n      return false;\n    }\n  }\n\n  override get(): Record;\n  override get(key: AnyValue): Value;\n  override get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      const value = this.downlink.get();\n      if (value instanceof Record) {\n        return value.get(key);\n      } else {\n        return Value.absent();\n      }\n    }\n  }\n\n  override getAttr(key: AnyText): Value {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.getAttr(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  override getSlot(key: AnyValue): Value {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.getSlot(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  override getField(key: AnyValue): Field | undefined {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.getField(key);\n    } else {\n      return void 0;\n    }\n  }\n\n  override getItem(index: AnyNum): Item {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.getItem(index);\n    } else {\n      return value;\n    }\n  }\n\n  override set(key: AnyValue, newValue: AnyValue): this {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      value.set(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  override setAttr(key: AnyText, newValue: AnyValue): this {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      value.setAttr(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  override setSlot(key: AnyValue, newValue: AnyValue): this {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      value.setSlot(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  override setItem(index: number, newItem: AnyItem): this {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      value.setItem(index, newItem);\n    } else {\n      this.downlink.set(Item.fromAny(newItem).toValue());\n    }\n    return this;\n  }\n\n  override push(...newItems: AnyItem[]): number {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.push(...newItems);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  override splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.splice(start, deleteCount, ...newItems);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  override delete(key: AnyValue): Item {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      return value.delete(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  override clear(): void {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      value.clear();\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  override forEach<T>(callback: (item: Item, index: number) => T | void): T | undefined;\n  override forEach<T, S>(callback: (this: S, item: Item, index: number) => T | void,\n                         thisArg: S): T | undefined;\n  override forEach<T, S>(callback: (this: S | undefined, item: Item, index: number) => T | void,\n                         thisArg?: S): T | undefined {\n    const value = this.downlink.get();\n    return value.forEach(callback, thisArg);\n  }\n\n  override keyIterator(): Cursor<Value> {\n    const value = this.downlink.get();\n    if (value instanceof Record) {\n      throw new Error(); // TODO\n    } else {\n      return Cursor.empty();\n    }\n  }\n\n  didSet(newValue: Value, oldValue: Value): void {\n    this.decohereInput();\n    this.recohereInput(0); // TODO: debounce\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Field, Value, Record} from \"@swim/structure\";\nimport {RecordModel, Reifier} from \"@swim/dataflow\";\nimport {DownlinkStreamlet} from \"./DownlinkStreamlet\";\nimport type {WarpRef} from \"../WarpRef\";\n\n/** @hidden */\nexport class DownlinkReifier extends Reifier {\n  constructor(warp: WarpRef | null = null) {\n    super();\n    this.warp = warp;\n  }\n\n  warp: WarpRef | null;\n\n  override reify(item: Item): Item {\n    if (item instanceof Field) {\n      return this.reifyField(item);\n    } else {\n      return this.reifyValue(item);\n    }\n  }\n\n  /** @hidden */\n  reifyField(field: Field): Field {\n    const oldValue = field.value;\n    const newValue = this.reifyValue(oldValue);\n    if (oldValue !== newValue) {\n      return field.updatedValue(newValue);\n    } else {\n      return field;\n    }\n  }\n\n  /** @hidden */\n  reifyValue(value: Value): Value {\n    if (value instanceof RecordModel) {\n      return this.reifyModel(value);\n    } else {\n      return value;\n    }\n  }\n\n  /** @hidden */\n  reifyModel(model: RecordModel): Record {\n    if (model.tag === \"link\") {\n      const streamlet = new DownlinkStreamlet(this.warp, model);\n      streamlet.compile();\n      return streamlet;\n    }\n    return model;\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Map} from \"@swim/util\";\nimport {Value, Form} from \"@swim/structure\";\nimport {Outlet, Inoutlet, StreamletScope, Out, Inout} from \"@swim/streamlet\";\nimport {AbstractRecordStreamlet, Reifier} from \"@swim/dataflow\";\nimport type {DownlinkType, Downlink} from \"./Downlink\";\nimport {ValueDownlink} from \"./ValueDownlink\";\nimport type {DownlinkRecord} from \"./DownlinkRecord\";\nimport {MapDownlinkRecord} from \"./MapDownlinkRecord\";\nimport {DownlinkReifier} from \"./DownlinkReifier\";\nimport type {WarpRef} from \"../WarpRef\";\nimport {client} from \"..\";\n\nexport class DownlinkStreamlet extends AbstractRecordStreamlet {\n  constructor(warp: WarpRef | null = null, scope?: StreamletScope<Value> | null) {\n    super(scope);\n    this.warp = warp;\n    this.downlink = null;\n    this.downlinkRecord = null;\n\n    this.inputHostUri = void 0;\n    this.inputNodeUri = void 0;\n    this.inputLaneUri = void 0;\n    this.inputPrio = void 0;\n    this.inputRate = void 0;\n    this.inputBody = void 0;\n    this.inputType = void 0;\n  }\n\n  warp: WarpRef | null;\n\n  downlink: Downlink | null;\n\n  /** @hidden */\n  downlinkRecord: DownlinkRecord | null;\n\n  /** @hidden */\n  inputHostUri: string | undefined;\n  /** @hidden */\n  inputNodeUri: string | undefined;\n  /** @hidden */\n  inputLaneUri: string | undefined;\n  /** @hidden */\n  inputPrio: number | undefined;\n  /** @hidden */\n  inputRate: number | undefined;\n  /** @hidden */\n  inputBody: Value | undefined;\n  /** @hidden */\n  inputType: DownlinkType | undefined;\n\n  @Inout\n  hostUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  nodeUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  laneUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  prio: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  rate: Inoutlet<Value> = this.inoutlet();\n\n  @Inout(\"body\")\n  bodyValue: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  type: Inoutlet<Value> = this.inoutlet();\n\n  @Out\n  state: Outlet<Value | Map<Value, Value>> = this.outlet();\n\n  override getOutput(outlet: Outlet<Value> | string): Value | undefined {\n    outlet = this.outlet(outlet)!;\n    if (outlet === this.state) {\n      if (this.downlink instanceof ValueDownlink) {\n        return this.downlink.get();\n      } else if (this.downlinkRecord !== null) {\n        return this.downlinkRecord;\n      }\n    }\n    return void 0;\n  }\n\n  protected override onRecohere(version: number): void {\n    const hostUri = this.castInput(this.hostUri, Form.forString());\n    const nodeUri = this.castInput(this.nodeUri, Form.forString());\n    const laneUri = this.castInput(this.laneUri, Form.forString());\n    const prio = this.castInput(this.prio, Form.forNumber(), 0);\n    const rate = this.castInput(this.rate, Form.forNumber(), 0);\n    const body = this.getInput(this.bodyValue);\n    const type = this.castInput(this.type, Form.forString(), void 0) as DownlinkType | undefined;\n    if (hostUri !== this.inputHostUri || nodeUri !== this.inputNodeUri || laneUri !== this.inputLaneUri\n        || prio !== this.inputPrio || rate !== this.inputRate\n        || (body === void 0 ? this.inputBody !== void 0 : !body.equals(this.inputBody))\n        || type !== this.inputType) {\n      if (this.downlink !== null) {\n        this.downlink.close();\n        this.downlink = null;\n        this.downlinkRecord = null;\n      }\n      this.inputHostUri = hostUri;\n      this.inputNodeUri = nodeUri;\n      this.inputLaneUri = laneUri;\n      this.inputPrio = prio;\n      this.inputRate = rate;\n      this.inputBody = body;\n      this.inputType = type;\n      const warp = this.warp ?? client;\n      if (type === \"map\") {\n        let downlink = warp.downlinkMap();\n        if (hostUri !== void 0) {\n          downlink = downlink.hostUri(hostUri);\n        }\n        if (nodeUri !== void 0) {\n          downlink = downlink.nodeUri(nodeUri);\n        }\n        if (laneUri !== void 0) {\n          downlink = downlink.laneUri(laneUri);\n        }\n        if (prio !== 0) {\n          downlink = downlink.prio(prio);\n        }\n        if (rate !== 0) {\n          downlink = downlink.rate(rate);\n        }\n        if (body !== void 0) {\n          downlink = downlink.body(body);\n        }\n        downlink = downlink.open();\n        this.state = downlink;\n        this.downlink = downlink;\n        this.downlinkRecord = new MapDownlinkRecord(downlink);\n      } else if (type === \"value\") {\n        let downlink = warp.downlinkValue();\n        if (hostUri !== void 0) {\n          downlink = downlink.hostUri(hostUri);\n        }\n        if (nodeUri !== void 0) {\n          downlink = downlink.nodeUri(nodeUri);\n        }\n        if (laneUri !== void 0) {\n          downlink = downlink.laneUri(laneUri);\n        }\n        if (prio !== void 0) {\n          downlink = downlink.prio(prio);\n        }\n        if (rate !== void 0) {\n          downlink = downlink.rate(rate);\n        }\n        if (body !== void 0) {\n          downlink = downlink.body(body);\n        }\n        downlink = downlink.open();\n        this.state = downlink;\n        this.downlink = downlink;\n      }\n    }\n  }\n\n  private static _reifier?: DownlinkReifier;\n  static reifier(warp?: WarpRef): Reifier {\n    if (warp === void 0) {\n      if (DownlinkStreamlet._reifier === void 0) {\n        DownlinkStreamlet._reifier = new DownlinkReifier();\n      }\n      return DownlinkStreamlet._reifier;\n    } else {\n      return new DownlinkReifier(warp);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays} from \"@swim/util\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport type {AnyUri, Uri} from \"@swim/uri\";\nimport type {Host} from \"../host/Host\";\nimport type {DownlinkOwner} from \"../downlink/DownlinkOwner\";\nimport type {Downlink} from \"../downlink/Downlink\";\nimport type {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport type {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport type {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport type {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport type {RefContext} from \"./RefContext\";\nimport type {HostRef} from \"./HostRef\";\nimport type {NodeRef} from \"./NodeRef\";\nimport type {LaneRef} from \"./LaneRef\";\nimport type {WarpRef} from \"../WarpRef\";\nimport type {\n  WarpDidConnect,\n  WarpDidAuthenticate,\n  WarpDidDeauthenticate,\n  WarpDidDisconnect,\n  WarpDidFail,\n  WarpObserver,\n} from \"../WarpObserver\";\n\nexport abstract class BaseRef implements DownlinkOwner, WarpRef {\n  constructor(context: RefContext) {\n    Object.defineProperty(this, \"context\", {\n      value: context,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"host\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"downlinks\", {\n      value: [],\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"observers\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  /** @hidden */\n  readonly context!: RefContext;\n\n  /** @hidden */\n  readonly host!: Host | null;\n\n  /** @hidden */\n  readonly downlinks!: Downlink[];\n\n  /** @hidden */\n  readonly observers!: ReadonlyArray<WarpObserver>;\n\n  abstract readonly hostUri: Uri;\n\n  isConnected(): boolean {\n    const host = this.host;\n    return host !== null && host.isConnected();\n  }\n\n  isAuthenticated(): boolean {\n    const host = this.host;\n    return host !== null && host.isAuthenticated();\n  }\n\n  get session(): Value {\n    const host = this.host;\n    return host !== null ? host.session : Value.absent();\n  }\n\n  authenticate(credentials: AnyValue): void {\n    this.context.authenticate(this.hostUri, credentials);\n  }\n\n  abstract downlink(init?: EventDownlinkInit): EventDownlink;\n\n  abstract downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  abstract downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n\n  abstract downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  abstract downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n\n  abstract downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  abstract downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n\n  abstract hostRef(hostUri: AnyUri): HostRef;\n\n  abstract nodeRef(hostUri: AnyUri, nodeUri: AnyUri): NodeRef;\n  abstract nodeRef(nodeUri: AnyUri): NodeRef;\n\n  abstract laneRef(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri): LaneRef;\n  abstract laneRef(nodeUri: AnyUri, laneUri: AnyUri): LaneRef;\n\n  /** @hidden */\n  addDownlink(downlink: Downlink): void {\n    const downlinks = this.downlinks;\n    if (downlinks.length === 0) {\n      this.open();\n    }\n    downlinks.push(downlink);\n  }\n\n  /** @hidden */\n  removeDownlink(downlink: Downlink): void {\n    const downlinks = this.downlinks;\n    const i = downlinks.indexOf(downlink);\n    if (i >= 0) {\n      downlinks.splice(i, 1);\n      if (downlinks.length === 0) {\n        this.close();\n      }\n    }\n  }\n\n  open(): void {\n    this.context.openRef(this);\n  }\n\n  close(): void {\n    this.context.closeRef(this);\n  }\n\n  /** @hidden */\n  closeUp(): void {\n    const downlinks = this.downlinks;\n    Object.defineProperty(this, \"downlinks\", {\n      value: [],\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0, n = downlinks.length; i < n; i += 1) {\n      downlinks[i]!.close();\n    }\n  }\n\n  observe(observer: WarpObserver): this {\n    Object.defineProperty(this, \"observers\", {\n      value: Arrays.inserted(observer, this.observers),\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this.observers;\n    const n = oldObservers.length;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers[i]! as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<WarpObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers[j]!;\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers[j]!;\n          }\n          Object.defineProperty(this, \"observers\", {\n            value: newObservers,\n            enumerable: true,\n            configurable: true,\n          });\n        } else {\n          Object.defineProperty(this, \"observers\", {\n            value: Arrays.empty,\n            enumerable: true,\n            configurable: true,\n          });\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  didConnect(didConnect: WarpDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didAuthenticate(didAuthenticate: WarpDidAuthenticate): this {\n    return this.observe({didAuthenticate});\n  }\n\n  didDeauthenticate(didDeauthenticate: WarpDidDeauthenticate): this {\n    return this.observe({didDeauthenticate});\n  }\n\n  didDisconnect(didDisconnect: WarpDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didFail(didFail: WarpDidFail): this {\n    return this.observe({didFail});\n  }\n\n  /** @hidden */\n  hostDidConnect(host: Host): void {\n    Object.defineProperty(this, \"host\", {\n      value: host,\n      enumerable: true,\n      configurable: true,\n    });\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didConnect !== void 0) {\n        observer.didConnect(host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidAuthenticate(body: Value, host: Host): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didAuthenticate !== void 0) {\n        observer.didAuthenticate(body, host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDeauthenticate(body: Value, host: Host): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didDeauthenticate !== void 0) {\n        observer.didDeauthenticate(body, host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(host: Host): void {\n    Object.defineProperty(this, \"host\", {\n      value: null,\n      enumerable: true,\n      configurable: true,\n    });\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didDisconnect !== void 0) {\n        observer.didDisconnect(host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown, host: Host): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didFail !== void 0) {\n        observer.didFail(error, host, this);\n      }\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport type {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {HostRef} from \"./HostRef\";\nimport {NodeRef} from \"./NodeRef\";\n\nexport class LaneRef extends BaseRef {\n  constructor(context: RefContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri) {\n    super(context);\n    Object.defineProperty(this, \"hostUri\", {\n      value: hostUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"nodeUri\", {\n      value: nodeUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"laneUri\", {\n      value: laneUri,\n      enumerable: true,\n    });\n  }\n\n  override readonly hostUri!: Uri;\n\n  readonly nodeUri!: Uri;\n\n  readonly laneUri!: Uri;\n\n  override hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this.context, hostUri as Uri);\n  }\n\n  override nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this.context, this.hostUri, nodeUri as Uri);\n  }\n\n  override laneRef(laneUri: AnyUri): LaneRef {\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this.context, this.hostUri, this.nodeUri, laneUri as Uri);\n  }\n\n  override downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this.context, this, init, this.hostUri, this.nodeUri, this.laneUri);\n  }\n\n  override downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  override downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  override downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this.context, this, init, this.hostUri, this.nodeUri, this.laneUri);\n  }\n\n  override downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  override downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  override downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this.context, this, init, this.hostUri, this.nodeUri, this.laneUri);\n  }\n\n  override downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  override downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  override downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this.context, this, init, this.hostUri, this.nodeUri, this.laneUri);\n  }\n\n  command(body: AnyValue): void {\n    this.context.command(this.hostUri, this.nodeUri, this.laneUri, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport type {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {HostRef} from \"./HostRef\";\nimport {LaneRef} from \"./LaneRef\";\n\nexport class NodeRef extends BaseRef {\n  constructor(context: RefContext, hostUri: Uri, nodeUri: Uri) {\n    super(context);\n    Object.defineProperty(this, \"hostUri\", {\n      value: hostUri,\n      enumerable: true,\n    });\n    Object.defineProperty(this, \"nodeUri\", {\n      value: nodeUri,\n      enumerable: true,\n    });\n  }\n\n  override readonly hostUri!: Uri;\n\n  readonly nodeUri!: Uri;\n\n  override hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this.context, hostUri as Uri);\n  }\n\n  override nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this.context, this.hostUri, nodeUri as Uri);\n  }\n\n  override laneRef(laneUri: AnyUri): LaneRef {\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this.context, this.hostUri, this.nodeUri, laneUri as Uri);\n  }\n\n  override downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this.context, this, init, this.hostUri, this.nodeUri);\n  }\n\n  override downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  override downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  override downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this.context, this, init, this.hostUri, this.nodeUri);\n  }\n\n  override downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  override downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  override downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this.context, this, init, this.hostUri, this.nodeUri);\n  }\n\n  override downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  override downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  override downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this.context, this, init, this.hostUri, this.nodeUri);\n  }\n\n  command(laneUri: AnyUri, body: AnyValue): void {\n    this.context.command(this.hostUri, this.nodeUri, laneUri, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport type {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {NodeRef} from \"./NodeRef\";\nimport {LaneRef} from \"./LaneRef\";\n\nexport class HostRef extends BaseRef {\n  constructor(context: RefContext, hostUri: Uri) {\n    super(context);\n    Object.defineProperty(this, \"hostUri\", {\n      value: hostUri,\n      enumerable: true,\n    });\n  }\n\n  override readonly hostUri!: Uri;\n\n  override hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this.context, hostUri as Uri);\n  }\n\n  override nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this.context, this.hostUri, nodeUri as Uri);\n  }\n\n  override laneRef(nodeUri: AnyUri, laneUri: AnyUri): LaneRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this.context, this.hostUri, nodeUri as Uri, laneUri as Uri);\n  }\n\n  override downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this.context, this, init, this.hostUri);\n  }\n\n  override downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  override downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  override downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this.context, this, init, this.hostUri);\n  }\n\n  override downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  override downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  override downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this.context, this, init, this.hostUri);\n  }\n\n  override downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  override downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  override downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this.context, this, init, this.hostUri);\n  }\n\n  command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void {\n    this.context.command(this.hostUri, nodeUri, laneUri, body);\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport type {HostContext} from \"./host/HostContext\";\nimport type {HostOptions, Host} from \"./host/Host\";\nimport {WebSocketHost} from \"./host/WebSocketHost\";\nimport type {DownlinkModel} from \"./downlink/DownlinkModel\";\nimport {EventDownlinkInit, EventDownlink} from \"./downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"./downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"./downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"./downlink/ValueDownlink\";\nimport type {WarpRef} from \"./WarpRef\";\nimport type {\n  WarpDidConnect,\n  WarpDidAuthenticate,\n  WarpDidDeauthenticate,\n  WarpDidDisconnect,\n  WarpDidFail,\n  WarpObserver,\n} from \"./WarpObserver\";\nimport type {RefContext} from \"./ref/RefContext\";\nimport type {BaseRef} from \"./ref/BaseRef\";\nimport {HostRef} from \"./ref/HostRef\";\nimport {NodeRef} from \"./ref/NodeRef\";\nimport {LaneRef} from \"./ref/LaneRef\";\n\nexport interface WarpClientOptions extends HostOptions {\n  keepOnline?: boolean;\n}\n\nexport class WarpClient implements HostContext, RefContext, WarpRef {\n  constructor(options: WarpClientOptions = {}) {\n    if (options.keepOnline === void 0) {\n      options.keepOnline = true;\n    }\n    Object.defineProperty(this, \"options\", {\n      value: options,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"hosts\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"downlinks\", {\n      value: new BTree(),\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"downlinkCount\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"refs\", {\n      value: [],\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"online\", {\n      value: true,\n      enumerable: true,\n      configurable: true,\n    });\n    Object.defineProperty(this, \"observers\", {\n      value: Arrays.empty,\n      enumerable: true,\n      configurable: true,\n    });\n\n    this.onOnline = this.onOnline.bind(this);\n    this.onOffline = this.onOffline.bind(this);\n    this.watchOnline(!!options.keepOnline);\n  }\n\n  /** @hidden */\n  readonly options!: WarpClientOptions;\n\n  /** @hidden */\n  readonly hosts!: BTree<Uri, Host>;\n\n  /** @hidden */\n  readonly downlinks!: BTree<Uri, BTree<Uri, BTree<Uri, DownlinkModel>>>;\n\n  /** @hidden */\n  readonly downlinkCount!: number;\n\n  /** @hidden */\n  readonly refs!: BaseRef[];\n\n  /** @hidden */\n  readonly online!: boolean;\n\n  /** @hidden */\n  readonly observers!: ReadonlyArray<WarpObserver>;\n\n  isOnline(): boolean;\n  isOnline(online: boolean): this;\n  isOnline(online?: boolean): boolean | this {\n    if (online === void 0) {\n      return this.online;\n    } else {\n      if (this.online !== online) {\n        Object.defineProperty(this, \"online\", {\n          value: online,\n          enumerable: true,\n          configurable: true,\n        });\n        if (online) {\n          this.hosts.forEach(function (hostUri: Uri, host: Host): void {\n            host.open();\n          }, this);\n        }\n      }\n      return this;\n    }\n  }\n\n  keepOnline(): boolean;\n  keepOnline(keepOnline: boolean): this;\n  keepOnline(keepOnline?: boolean): boolean | this {\n    if (keepOnline === void 0) {\n      return !!this.options.keepOnline;\n    } else {\n      if (this.options.keepOnline !== keepOnline) {\n        this.options.keepOnline = keepOnline;\n        this.watchOnline(keepOnline);\n      }\n      return this;\n    }\n  }\n\n  protected watchOnline(keepOnline: boolean): void {\n    if (typeof window === \"object\") {\n      if (keepOnline) {\n        window.addEventListener(\"online\", this.onOnline);\n        window.addEventListener(\"offline\", this.onOffline);\n      } else {\n        window.removeEventListener(\"online\", this.onOnline);\n        window.removeEventListener(\"offline\", this.onOffline);\n      }\n    }\n  }\n\n  protected onOnline(event: Event): void {\n    this.isOnline(true);\n  }\n\n  protected onOffline(event: Event): void {\n    this.isOnline(false);\n  }\n\n  /** @hidden */\n  getHost(hostUri: AnyUri): Host | undefined {\n    hostUri = Uri.fromAny(hostUri);\n    return this.hosts.get(hostUri as Uri);\n  }\n\n  /** @hidden */\n  openHost(hostUri: AnyUri): Host {\n    hostUri = Uri.fromAny(hostUri);\n    let host = this.hosts.get(hostUri as Uri);\n    if (host === void 0) {\n      host = new WebSocketHost(this, hostUri as Uri, this.options);\n      this.hosts.set(hostUri as Uri, host);\n    }\n    return host;\n  }\n\n  /** @hidden */\n  closeHost(host: Host): void {\n    if (this.hosts.get(host.hostUri) !== void 0) {\n      this.hosts.delete(host.hostUri);\n      host.closeUp();\n    }\n  }\n\n  /** @hidden */\n  getDownlink(hostUri: Uri, nodeUri: Uri, laneUri: Uri): DownlinkModel | undefined {\n    const hostDownlinks = this.downlinks.get(hostUri);\n    if (hostDownlinks !== void 0) {\n      const nodeDownlinks = hostDownlinks.get(nodeUri);\n      if (nodeDownlinks !== void 0) {\n        return nodeDownlinks.get(laneUri);\n      }\n    }\n    return void 0;\n  }\n\n  /** @hidden */\n  openDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri;\n    const nodeUri = downlink.nodeUri;\n    const laneUri = downlink.laneUri;\n    let hostDownlinks = this.downlinks.get(hostUri);\n    if (hostDownlinks === void 0) {\n      hostDownlinks = new BTree();\n      this.downlinks.set(hostUri, hostDownlinks);\n    }\n    let nodeDownlinks = hostDownlinks.get(nodeUri);\n    if (nodeDownlinks === void 0) {\n      nodeDownlinks = new BTree();\n      hostDownlinks.set(nodeUri, nodeDownlinks);\n    }\n    if (nodeDownlinks.has(laneUri)) {\n      throw new Error(\"duplicate downlink\");\n    }\n    nodeDownlinks.set(laneUri, downlink);\n    Object.defineProperty(this, \"downlinkCount\", {\n      value: this.downlinkCount + 1,\n      enumerable: true,\n      configurable: true,\n    });\n    const host = this.openHost(hostUri);\n    host.openDownlink(downlink);\n  }\n\n  /** @hidden */\n  unlinkDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri;\n    const host = this.getHost(hostUri);\n    if (host !== void 0) {\n      host.unlinkDownlink(downlink);\n    }\n  }\n\n  /** @hidden */\n  closeDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri;\n    const nodeUri = downlink.nodeUri;\n    const laneUri = downlink.laneUri;\n    const hostDownlinks = this.downlinks.get(hostUri);\n    if (hostDownlinks !== void 0) {\n      const nodeDownlinks = hostDownlinks.get(nodeUri);\n      if (nodeDownlinks !== void 0) {\n        if (nodeDownlinks.get(laneUri)) {\n          Object.defineProperty(this, \"downlinkCount\", {\n            value: this.downlinkCount - 1,\n            enumerable: true,\n            configurable: true,\n          });\n          nodeDownlinks.delete(laneUri);\n          if (nodeDownlinks.isEmpty()) {\n            hostDownlinks.delete(nodeUri);\n            if (hostDownlinks.isEmpty()) {\n              this.downlinks.delete(hostUri);\n            }\n          }\n          const host = this.getHost(hostUri);\n          if (host !== void 0) {\n            host.closeDownlink(downlink);\n          }\n        }\n      }\n    }\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this, null, init);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = never>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this, null, init);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = never, VU = never>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this, null, init);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = never>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this, null, init);\n  }\n\n  /** @hidden */\n  openRef(ref: BaseRef): void {\n    this.refs.push(ref);\n  }\n\n  /** @hidden */\n  closeRef(ref: BaseRef): void {\n    const refs = this.refs;\n    const index = refs.indexOf(ref);\n    if (index >= 0) {\n      refs.splice(index, 1);\n      ref.closeUp();\n    }\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this, hostUri as Uri);\n  }\n\n  nodeRef(hostUri: AnyUri, nodeUri: AnyUri): NodeRef;\n  nodeRef(nodeUri: AnyUri): NodeRef;\n  nodeRef(hostUri: AnyUri, nodeUri?: AnyUri): NodeRef {\n    hostUri = Uri.fromAny(hostUri);\n    if (nodeUri === void 0) {\n      nodeUri = hostUri;\n      hostUri = (nodeUri as Uri).endpoint();\n      nodeUri = (hostUri as Uri).unresolve(nodeUri);\n    } else {\n      nodeUri = Uri.fromAny(nodeUri);\n    }\n    return new NodeRef(this, hostUri as Uri, nodeUri as Uri);\n  }\n\n  laneRef(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri): LaneRef;\n  laneRef(nodeUri: AnyUri, laneUri: AnyUri): LaneRef;\n  laneRef(hostUri: AnyUri, nodeUri: AnyUri, laneUri?: AnyUri): LaneRef {\n    hostUri = Uri.fromAny(hostUri);\n    nodeUri = Uri.fromAny(nodeUri);\n    if (laneUri === void 0) {\n      laneUri = nodeUri;\n      nodeUri = hostUri;\n      hostUri = (nodeUri as Uri).endpoint();\n      nodeUri = (hostUri as Uri).unresolve(nodeUri);\n    } else {\n      laneUri = Uri.fromAny(laneUri);\n    }\n    return new LaneRef(this, hostUri as Uri, nodeUri as Uri, laneUri as Uri);\n  }\n\n  authenticate(hostUri: AnyUri, credentials: AnyValue): void {\n    hostUri = Uri.fromAny(hostUri);\n    credentials = Value.fromAny(credentials);\n    const host = this.openHost(hostUri);\n    host.authenticate(credentials);\n  }\n\n  command(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n  command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n  command(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri | AnyValue, body?: AnyValue): void {\n    hostUri = Uri.fromAny(hostUri);\n    nodeUri = Uri.fromAny(nodeUri);\n    if (arguments.length === 3) {\n      body = laneUri as Value;\n      laneUri = nodeUri;\n      nodeUri = hostUri;\n      hostUri = (nodeUri as Uri).endpoint();\n      nodeUri = (hostUri as Uri).unresolve(nodeUri);\n    } else {\n      laneUri = Uri.fromAny(laneUri as AnyUri);\n    }\n    body = Value.fromAny(body);\n    const host = this.openHost(hostUri);\n    host.command(nodeUri, laneUri, body);\n  }\n\n  close(): void {\n    const refs = this.refs;\n    Object.defineProperty(this, \"refs\", {\n      value: [],\n      enumerable: true,\n      configurable: true,\n    });\n    for (let i = 0; i < refs.length; i += 1) {\n      refs[i]!.closeUp();\n    }\n    const downlinks = this.downlinks.clone();\n    this.downlinks.clear();\n    Object.defineProperty(this, \"downlinkCount\", {\n      value: 0,\n      enumerable: true,\n      configurable: true,\n    });\n    downlinks.forEach(function (hostUri: Uri, hostDownlinks: BTree<Uri, BTree<Uri, DownlinkModel>>): void {\n      hostDownlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, DownlinkModel>): void {\n        nodeDownlinks.forEach(function (laneUri: Uri, downlink: DownlinkModel): void {\n          downlink.closeUp();\n          const host = this.getHost(hostUri);\n          if (host !== void 0) {\n            host.closeDownlink(downlink);\n          }\n        }, this);\n      }, this);\n    }, this);\n    const hosts = this.hosts.clone();\n    this.hosts.clear();\n    hosts.forEach(function (hostUri: Uri, host: Host): void {\n      host.closeUp();\n    }, this);\n  }\n\n  observe(observer: WarpObserver): this {\n    Object.defineProperty(this, \"observers\", {\n      value: Arrays.inserted(observer, this.observers),\n      enumerable: true,\n      configurable: true,\n    });\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this.observers;\n    const n = oldObservers.length;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers[i]! as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<WarpObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers[j]!;\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers[j]!;\n          }\n          Object.defineProperty(this, \"observers\", {\n            value: newObservers,\n            enumerable: true,\n            configurable: true,\n          });\n        } else {\n          Object.defineProperty(this, \"observers\", {\n            value: Arrays.empty,\n            enumerable: true,\n            configurable: true,\n          });\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  didConnect(didConnect: WarpDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didAuthenticate(didAuthenticate: WarpDidAuthenticate): this {\n    return this.observe({didAuthenticate});\n  }\n\n  didDeauthenticate(didDeauthenticate: WarpDidDeauthenticate): this {\n    return this.observe({didDeauthenticate});\n  }\n\n  didDisconnect(didDisconnect: WarpDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didFail(didFail: WarpDidFail): this {\n    return this.observe({didFail});\n  }\n\n  /** @hidden */\n  hostDidConnect(host: Host): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didConnect !== void 0) {\n        observer.didConnect(host, this);\n      }\n    }\n    const refs = this.refs;\n    for (let i = 0, n = refs.length; i < n; i += 1) {\n      const ref = refs[i]!;\n      if (ref.hostUri.equals(host.hostUri)) {\n        ref.hostDidConnect(host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidAuthenticate(body: Value, host: Host): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didAuthenticate !== void 0) {\n        observer.didAuthenticate(body, host, this);\n      }\n    }\n    const refs = this.refs;\n    for (let i = 0, n = refs.length; i < n; i += 1) {\n      const ref = refs[i]!;\n      if (ref.hostUri.equals(host.hostUri)) {\n        ref.hostDidAuthenticate(body, host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDeauthenticate(body: Value, host: Host): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didDeauthenticate !== void 0) {\n        observer.didDeauthenticate(body, host, this);\n      }\n    }\n    const refs = this.refs;\n    for (let i = 0, n = refs.length; i < n; i += 1) {\n      const ref = refs[i]!;\n      if (ref.hostUri.equals(host.hostUri)) {\n        ref.hostDidDeauthenticate(body, host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(host: Host): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didDisconnect !== void 0) {\n        observer.didDisconnect(host, this);\n      }\n    }\n    const refs = this.refs;\n    for (let i = 0, n = refs.length; i < n; i += 1) {\n      const ref = refs[i]!;\n      if (ref.hostUri.equals(host.hostUri)) {\n        ref.hostDidDisconnect(host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown, host: Host): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.didFail !== void 0) {\n        observer.didFail(error, host, this);\n      }\n    }\n    const refs = this.refs;\n    for (let i = 0, n = refs.length; i < n; i += 1) {\n      const ref = refs[i]!;\n      if (ref.hostUri.equals(host.hostUri)) {\n        ref.hostDidFail(error, host);\n      }\n    }\n  }\n}\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {WarpClient} from \"./WarpClient\";\n\nexport const client: WarpClient = new WarpClient();\nexport const isOnline: typeof client.isOnline = client.isOnline.bind(client);\nexport const keepOnline: typeof client.keepOnline = client.keepOnline.bind(client);\nexport const downlink: typeof client.downlink = client.downlink.bind(client);\nexport const downlinkList: typeof client.downlinkList = client.downlinkList.bind(client);\nexport const downlinkMap: typeof client.downlinkMap = client.downlinkMap.bind(client);\nexport const downlinkValue: typeof client.downlinkValue = client.downlinkValue.bind(client);\nexport const hostRef: typeof client.hostRef = client.hostRef.bind(client);\nexport const nodeRef: typeof client.nodeRef = client.nodeRef.bind(client);\nexport const laneRef: typeof client.laneRef = client.laneRef.bind(client);\nexport const authenticate: typeof client.authenticate = client.authenticate.bind(client);\nexport const command: typeof client.command = client.command.bind(client);\n","// Copyright 2015-2021 Swim inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {InletOptions} from \"./Inlet\";\nimport {StreamletPrototype, AbstractStreamlet} from \"./AbstractStreamlet\";\n\nexport function In(name: string): PropertyDecorator;\nexport function In(options: InletOptions): PropertyDecorator;\nexport function In(target: unknown, key: string): void;\nexport function In(target: unknown, key?: string): PropertyDecorator | void {\n  if (arguments.length === 1) {\n    if (typeof target === \"string\") {\n      target = {name: target} as InletOptions;\n    }\n    return AbstractStreamlet.decorateInlet.bind(void 0, target as InletOptions);\n  } else {\n    AbstractStreamlet.decorateInlet({}, target as StreamletPrototype, key!);\n  }\n}\n"]}